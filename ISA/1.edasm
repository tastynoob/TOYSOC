
.\build\Debug\tinymcu.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <_start>:
#define SIM
_start:

.option push
.option norelax
	la gp, __global_pointer$
   0:	01001197          	auipc	gp,0x1001
   4:	43018193          	addi	gp,gp,1072 # 1001430 <__global_pointer$>
.option pop
	la sp, _sp
   8:	01010117          	auipc	sp,0x1010
   c:	ff810113          	addi	sp,sp,-8 # 1010000 <__freertos_irq_stack_top>

	/* Load data section */
	la a0, _data_lma 
  10:	0000b517          	auipc	a0,0xb
  14:	16850513          	addi	a0,a0,360 # b178 <_data_lma>
	la a1, _data
  18:	01000597          	auipc	a1,0x1000
  1c:	fe858593          	addi	a1,a1,-24 # 1000000 <_data>
	la a2, _edata
  20:	01001617          	auipc	a2,0x1001
  24:	c2060613          	addi	a2,a2,-992 # 1000c40 <seed1_volatile>
	bgeu a1, a2, 2f
  28:	00c5fe63          	bgeu	a1,a2,44 <_start+0x44>
1:
	lw t0, (a0)
  2c:	00052283          	lw	t0,0(a0)
	sw t0, (a1)
  30:	0055a023          	sw	t0,0(a1)
	lw t1, (a1)
  34:	0005a303          	lw	t1,0(a1)
	addi a0, a0, 4
  38:	00450513          	addi	a0,a0,4
	addi a1, a1, 4
  3c:	00458593          	addi	a1,a1,4
	bltu a1, a2, 1b
  40:	fec5e6e3          	bltu	a1,a2,2c <_start+0x2c>
2:

	/* Clear bss section */
	la a0, __bss_start
  44:	01001517          	auipc	a0,0x1001
  48:	bfc50513          	addi	a0,a0,-1028 # 1000c40 <seed1_volatile>
	la a1, _end
  4c:	01001597          	auipc	a1,0x1001
  50:	c2458593          	addi	a1,a1,-988 # 1000c70 <_end>
	bgeu a0, a1, 2f
  54:	00b57863          	bgeu	a0,a1,64 <_start+0x64>
1:
	sw zero, (a0)
  58:	00052023          	sw	zero,0(a0)
	addi a0, a0, 4
  5c:	00450513          	addi	a0,a0,4
	bltu a0, a1, 1b
  60:	feb56ce3          	bltu	a0,a1,58 <_start+0x58>
2:

#ifdef SIM
    li x31,0xa0
  64:	0a000f93          	li	t6,160
#endif

	

    call main
  68:	00000097          	auipc	ra,0x0
  6c:	014080e7          	jalr	20(ra) # 7c <main>


#ifdef SIM
    li x31,0xaa
  70:	0aa00f93          	li	t6,170
	li tp,0xee
  74:	0ee00213          	li	tp,238

00000078 <loop>:
#endif

loop:
    j loop
  78:	0000006f          	j	78 <loop>

Disassembly of section .text:

0000007c <main>:
    int   argc = 0;
    char *argv[1];
#else
MAIN_RETURN_TYPE
main(int argc, char *argv[])
{
      7c:	81010113          	addi	sp,sp,-2032
    core_results results[MULTITHREAD];
#if (MEM_METHOD == MEM_STACK)
    ee_u8 stack_memblock[TOTAL_DATA_SIZE * MULTITHREAD];
#endif
    /* first call any initializations needed */
    portable_init(&(results[0].port), &argc, argv);
      80:	00001737          	lui	a4,0x1
{
      84:	7e112623          	sw	ra,2028(sp)
      88:	7e812423          	sw	s0,2024(sp)
      8c:	7e912223          	sw	s1,2020(sp)
      90:	7f212023          	sw	s2,2016(sp)
      94:	7d312e23          	sw	s3,2012(sp)
      98:	7d412c23          	sw	s4,2008(sp)
      9c:	7d512a23          	sw	s5,2004(sp)
      a0:	7d612823          	sw	s6,2000(sp)
      a4:	7d712623          	sw	s7,1996(sp)
      a8:	7d812423          	sw	s8,1992(sp)
      ac:	7d912223          	sw	s9,1988(sp)
      b0:	7da12023          	sw	s10,1984(sp)
      b4:	7bb12e23          	sw	s11,1980(sp)
      b8:	fffff7b7          	lui	a5,0xfffff
      bc:	f8010113          	addi	sp,sp,-128
    portable_init(&(results[0].port), &argc, argv);
      c0:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
      c4:	7dc78793          	addi	a5,a5,2012 # fffff7dc <__freertos_irq_stack_top+0xfefef7dc>
      c8:	00270733          	add	a4,a4,sp
      cc:	00058613          	mv	a2,a1
{
      d0:	00a12623          	sw	a0,12(sp)
    portable_init(&(results[0].port), &argc, argv);
      d4:	00f705b3          	add	a1,a4,a5
      d8:	05e10513          	addi	a0,sp,94
      dc:	00002097          	auipc	ra,0x2
      e0:	f24080e7          	jalr	-220(ra) # 2000 <portable_init>
    /* First some checks to make sure benchmark will run ok */
    printf("start test1\n");
      e4:	01000537          	lui	a0,0x1000
      e8:	02050513          	addi	a0,a0,32 # 1000020 <_data+0x20>
      ec:	00006097          	auipc	ra,0x6
      f0:	fb8080e7          	jalr	-72(ra) # 60a4 <puts>
    if (sizeof(struct list_head_s) > 128)
    {
        ee_printf("list_head structure too big for comparable data!\n");
        return MAIN_RETURN_VAL;
    }
    results[0].seed1      = get_seed(1);
      f4:	00100513          	li	a0,1
      f8:	00002097          	auipc	ra,0x2
      fc:	660080e7          	jalr	1632(ra) # 2758 <get_seed_32>
     100:	00a11e23          	sh	a0,28(sp)
    results[0].seed2      = get_seed(2);
     104:	00200513          	li	a0,2
     108:	00002097          	auipc	ra,0x2
     10c:	650080e7          	jalr	1616(ra) # 2758 <get_seed_32>
     110:	00a11f23          	sh	a0,30(sp)
    results[0].seed3      = get_seed(3);
     114:	00300513          	li	a0,3
     118:	00002097          	auipc	ra,0x2
     11c:	640080e7          	jalr	1600(ra) # 2758 <get_seed_32>
     120:	02a11023          	sh	a0,32(sp)
    results[0].iterations = get_seed_32(4);
     124:	00400513          	li	a0,4
     128:	00002097          	auipc	ra,0x2
     12c:	630080e7          	jalr	1584(ra) # 2758 <get_seed_32>
     130:	02a12c23          	sw	a0,56(sp)
    printf("start test2\n");
     134:	01000537          	lui	a0,0x1000
     138:	02c50513          	addi	a0,a0,44 # 100002c <_data+0x2c>
     13c:	00006097          	auipc	ra,0x6
     140:	f68080e7          	jalr	-152(ra) # 60a4 <puts>
#if CORE_DEBUG
    results[0].iterations = 1;
#endif
    results[0].execs = get_seed_32(5);
     144:	00500513          	li	a0,5
     148:	00002097          	auipc	ra,0x2
     14c:	610080e7          	jalr	1552(ra) # 2758 <get_seed_32>
     150:	02a12e23          	sw	a0,60(sp)
    printf("start test21\n");
     154:	01000537          	lui	a0,0x1000
     158:	03850513          	addi	a0,a0,56 # 1000038 <_data+0x38>
     15c:	00006097          	auipc	ra,0x6
     160:	f48080e7          	jalr	-184(ra) # 60a4 <puts>
    if (results[0].execs == 0)
     164:	03c12783          	lw	a5,60(sp)
     168:	240786e3          	beqz	a5,bb4 <main+0xb38>
    { /* if not supplied, execute all algorithms */
        results[0].execs = ALL_ALGORITHMS_MASK;
        printf("start test22\n");
    }
    printf("start test3\n");
     16c:	01000537          	lui	a0,0x1000
     170:	05850513          	addi	a0,a0,88 # 1000058 <_data+0x58>
     174:	00006097          	auipc	ra,0x6
     178:	f30080e7          	jalr	-208(ra) # 60a4 <puts>
    /* put in some default values based on one seed only for easy testing */
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	00001737          	lui	a4,0x1
     180:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     184:	fffff7b7          	lui	a5,0xfffff
     188:	00270733          	add	a4,a4,sp
     18c:	00f707b3          	add	a5,a4,a5
     190:	00f12223          	sw	a5,4(sp)
     194:	7ec7a783          	lw	a5,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     198:	50078e63          	beqz	a5,6b4 <main+0x638>
    { /* perfromance run */
        results[0].seed1 = 0;
        results[0].seed2 = 0;
        results[0].seed3 = 0x66;
    }
    printf("start test4\n");
     19c:	01000537          	lui	a0,0x1000
     1a0:	06450513          	addi	a0,a0,100 # 1000064 <_data+0x64>
     1a4:	00006097          	auipc	ra,0x6
     1a8:	f00080e7          	jalr	-256(ra) # 60a4 <puts>
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	00001737          	lui	a4,0x1
     1b0:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     1b4:	00270733          	add	a4,a4,sp
     1b8:	fffff7b7          	lui	a5,0xfffff
     1bc:	00f707b3          	add	a5,a4,a5
     1c0:	7ec7a703          	lw	a4,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     1c4:	00f12223          	sw	a5,4(sp)
     1c8:	00100793          	li	a5,1
     1cc:	1cf700e3          	beq	a4,a5,b8c <main+0xb10>
#endif
    /* Data init */
    /* Find out how space much we have based on number of algorithms */
    for (i = 0; i < NUM_ALGORITHMS; i++)
    {
        if ((1 << (ee_u32)i) & results[0].execs)
     1d0:	03c12403          	lw	s0,60(sp)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d4:	000016b7          	lui	a3,0x1
     1d8:	83068693          	addi	a3,a3,-2000 # 830 <main+0x7b4>
     1dc:	002686b3          	add	a3,a3,sp
     1e0:	fffff737          	lui	a4,0xfffff
     1e4:	00e68733          	add	a4,a3,a4
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	00247493          	andi	s1,s0,2
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	06010693          	addi	a3,sp,96
        if ((1 << (ee_u32)i) & results[0].execs)
     1f0:	00147913          	andi	s2,s0,1
            num_algorithms++;
     1f4:	009037b3          	snez	a5,s1
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1f8:	00e12223          	sw	a4,4(sp)
     1fc:	7ed72a23          	sw	a3,2036(a4) # fffff7f4 <__freertos_irq_stack_top+0xfefef7f4>
    results[i].err         = 0;
     200:	04011e23          	sh	zero,92(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     204:	00447993          	andi	s3,s0,4
            num_algorithms++;
     208:	00f905b3          	add	a1,s2,a5
        if ((1 << (ee_u32)i) & results[0].execs)
     20c:	00098863          	beqz	s3,21c <main+0x1a0>
            num_algorithms++;
     210:	00158593          	addi	a1,a1,1
     214:	01059593          	slli	a1,a1,0x10
     218:	0105d593          	srli	a1,a1,0x10
    }
    for (i = 0; i < MULTITHREAD; i++)
        results[i].size = results[i].size / num_algorithms;
     21c:	7d000513          	li	a0,2000
     220:	00005097          	auipc	ra,0x5
     224:	a68080e7          	jalr	-1432(ra) # 4c88 <__udivsi3>
     228:	02a12a23          	sw	a0,52(sp)
     22c:	00050a13          	mv	s4,a0
     230:	fffff7b7          	lui	a5,0xfffff
    /* Assign pointers */
    for (i = 0; i < NUM_ALGORITHMS; i++)
    {
        ee_u32 ctx;
        if ((1 << (ee_u32)i) & results[0].execs)
     234:	00000a93          	li	s5,0
     238:	08091ce3          	bnez	s2,ad0 <main+0xa54>
     23c:	0e0490e3          	bnez	s1,b1c <main+0xaa0>
     240:	0a099ce3          	bnez	s3,af8 <main+0xa7c>
        }
    }
    /* call inits */
    for (i = 0; i < MULTITHREAD; i++)
    {
        if (results[i].execs & ID_LIST)
     244:	3a091063          	bnez	s2,5e4 <main+0x568>
        {
            results[i].list = core_list_init(
                results[0].size, results[i].memblock[1], results[i].seed1);
        }
        if (results[i].execs & ID_MATRIX)
     248:	3c049c63          	bnez	s1,620 <main+0x5a4>
                             results[i].memblock[2],
                             (ee_s32)results[i].seed1
                                 | (((ee_s32)results[i].seed2) << 16),
                             &(results[i].mat));
        }
        if (results[i].execs & ID_STATE)
     24c:	00447413          	andi	s0,s0,4
     250:	02040863          	beqz	s0,280 <main+0x204>
        {
            core_init_state(
     254:	00001737          	lui	a4,0x1
     258:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	fffff7b7          	lui	a5,0xfffff
            core_init_state(
     260:	00270733          	add	a4,a4,sp
     264:	00f707b3          	add	a5,a4,a5
     268:	03012603          	lw	a2,48(sp)
     26c:	7ec79583          	lh	a1,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     270:	03412503          	lw	a0,52(sp)
     274:	00f12223          	sw	a5,4(sp)
     278:	00002097          	auipc	ra,0x2
     27c:	dc8080e7          	jalr	-568(ra) # 2040 <core_init_state>
        }
    }

    /* automatically determine number of iterations if not set */
    if (results[0].iterations == 0)
     280:	03812783          	lw	a5,56(sp)
     284:	12079663          	bnez	a5,3b0 <main+0x334>
    {
        secs_ret secs_passed = 0;
        ee_u32   divisor;
        results[0].iterations = 1;
        while (secs_passed < (secs_ret)1)
     288:	010007b7          	lui	a5,0x1000
     28c:	0107aa03          	lw	s4,16(a5) # 1000010 <_data+0x10>
     290:	0147aa83          	lw	s5,20(a5)
        results[0].iterations = 1;
     294:	00100793          	li	a5,1
     298:	02f12c23          	sw	a5,56(sp)
        crc      = core_bench_list(res, 1);
     29c:	000017b7          	lui	a5,0x1
     2a0:	fffff4b7          	lui	s1,0xfffff
     2a4:	83078793          	addi	a5,a5,-2000 # 830 <main+0x7b4>
     2a8:	7ec48493          	addi	s1,s1,2028 # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     2ac:	002787b3          	add	a5,a5,sp
     2b0:	010009b7          	lui	s3,0x1000
     2b4:	009784b3          	add	s1,a5,s1
        {
            printf("start test44\n");
     2b8:	07098513          	addi	a0,s3,112 # 1000070 <_data+0x70>
     2bc:	00006097          	auipc	ra,0x6
     2c0:	de8080e7          	jalr	-536(ra) # 60a4 <puts>
            results[0].iterations *= 10;
     2c4:	03812703          	lw	a4,56(sp)
    for (i = 0; i < iterations; i++)
     2c8:	00000413          	li	s0,0
            results[0].iterations *= 10;
     2cc:	00271793          	slli	a5,a4,0x2
     2d0:	00e787b3          	add	a5,a5,a4
     2d4:	00179793          	slli	a5,a5,0x1
     2d8:	02f12c23          	sw	a5,56(sp)
            start_time();
     2dc:	00002097          	auipc	ra,0x2
     2e0:	c8c080e7          	jalr	-884(ra) # 1f68 <start_time>
    ee_u32        iterations = res->iterations;
     2e4:	03812903          	lw	s2,56(sp)
    res->crc                 = 0;
     2e8:	04012a23          	sw	zero,84(sp)
     2ec:	04012c23          	sw	zero,88(sp)
    for (i = 0; i < iterations; i++)
     2f0:	04090863          	beqz	s2,340 <main+0x2c4>
        crc      = core_bench_list(res, 1);
     2f4:	00100593          	li	a1,1
     2f8:	00048513          	mv	a0,s1
     2fc:	00001097          	auipc	ra,0x1
     300:	a44080e7          	jalr	-1468(ra) # d40 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
     304:	05415583          	lhu	a1,84(sp)
     308:	00002097          	auipc	ra,0x2
     30c:	4b4080e7          	jalr	1204(ra) # 27bc <crcu16>
     310:	04a11a23          	sh	a0,84(sp)
        crc      = core_bench_list(res, -1);
     314:	fff00593          	li	a1,-1
     318:	00048513          	mv	a0,s1
     31c:	00001097          	auipc	ra,0x1
     320:	a24080e7          	jalr	-1500(ra) # d40 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
     324:	05415583          	lhu	a1,84(sp)
     328:	00002097          	auipc	ra,0x2
     32c:	494080e7          	jalr	1172(ra) # 27bc <crcu16>
     330:	04a11a23          	sh	a0,84(sp)
        if (i == 0)
     334:	040402e3          	beqz	s0,b78 <main+0xafc>
    for (i = 0; i < iterations; i++)
     338:	00140413          	addi	s0,s0,1
     33c:	fa891ce3          	bne	s2,s0,2f4 <main+0x278>
            iterate(&results[0]);
            stop_time();
     340:	00002097          	auipc	ra,0x2
     344:	c50080e7          	jalr	-944(ra) # 1f90 <stop_time>
            secs_passed = time_in_secs(get_time());
     348:	00002097          	auipc	ra,0x2
     34c:	c70080e7          	jalr	-912(ra) # 1fb8 <get_time>
     350:	00002097          	auipc	ra,0x2
     354:	c80080e7          	jalr	-896(ra) # 1fd0 <time_in_secs>
        while (secs_passed < (secs_ret)1)
     358:	000a0613          	mv	a2,s4
     35c:	000a8693          	mv	a3,s5
            secs_passed = time_in_secs(get_time());
     360:	00050b13          	mv	s6,a0
     364:	00058b93          	mv	s7,a1
        while (secs_passed < (secs_ret)1)
     368:	00004097          	auipc	ra,0x4
     36c:	f68080e7          	jalr	-152(ra) # 42d0 <__ledf2>
     370:	f40544e3          	bltz	a0,2b8 <main+0x23c>
        }
        /* now we know it executes for at least 1 sec, set actual run time at
         * about 10 secs */
        divisor = (ee_u32)secs_passed;
     374:	000b8593          	mv	a1,s7
     378:	000b0513          	mv	a0,s6
     37c:	00004097          	auipc	ra,0x4
     380:	7b4080e7          	jalr	1972(ra) # 4b30 <__fixunsdfsi>
     384:	00050593          	mv	a1,a0
        if (divisor == 0) /* some machines cast float to int as 0 since this
     388:	00051463          	bnez	a0,390 <main+0x314>
                             conversion is not defined by ANSI, but we know at
                             least one second passed */
            divisor = 1;
     38c:	00100593          	li	a1,1
        results[0].iterations *= 1 + 10 / divisor;
     390:	00a00513          	li	a0,10
     394:	00005097          	auipc	ra,0x5
     398:	8f4080e7          	jalr	-1804(ra) # 4c88 <__udivsi3>
     39c:	03812583          	lw	a1,56(sp)
     3a0:	00150513          	addi	a0,a0,1
     3a4:	00005097          	auipc	ra,0x5
     3a8:	8b8080e7          	jalr	-1864(ra) # 4c5c <__mulsi3>
     3ac:	02a12c23          	sw	a0,56(sp)
    }
    /* perform actual benchmark */
    start_time();
     3b0:	00002097          	auipc	ra,0x2
     3b4:	bb8080e7          	jalr	-1096(ra) # 1f68 <start_time>
    for (i = 0; i < default_num_contexts; i++)
    {
        core_stop_parallel(&results[i]);
    }
#else
    iterate(&results[0]);
     3b8:	000014b7          	lui	s1,0x1
     3bc:	fffff437          	lui	s0,0xfffff
     3c0:	83048793          	addi	a5,s1,-2000 # 830 <main+0x7b4>
     3c4:	002787b3          	add	a5,a5,sp
     3c8:	7ec40513          	addi	a0,s0,2028 # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     3cc:	00a78533          	add	a0,a5,a0
     3d0:	00001097          	auipc	ra,0x1
     3d4:	2bc080e7          	jalr	700(ra) # 168c <iterate>
#endif
    stop_time();
     3d8:	00002097          	auipc	ra,0x2
     3dc:	bb8080e7          	jalr	-1096(ra) # 1f90 <stop_time>
    total_time = get_time();
     3e0:	00002097          	auipc	ra,0x2
     3e4:	bd8080e7          	jalr	-1064(ra) # 1fb8 <get_time>
    /* get a function of the input to report */
    seedcrc = crc16(results[0].seed1, seedcrc);
     3e8:	83048793          	addi	a5,s1,-2000
     3ec:	002787b3          	add	a5,a5,sp
     3f0:	008787b3          	add	a5,a5,s0
    total_time = get_time();
     3f4:	00050a13          	mv	s4,a0
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	7ec79503          	lh	a0,2028(a5)
     3fc:	00000593          	li	a1,0
     400:	00f12223          	sw	a5,4(sp)
     404:	00003097          	auipc	ra,0x3
     408:	b48080e7          	jalr	-1208(ra) # 2f4c <crc16>
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	00412783          	lw	a5,4(sp)
     410:	00050593          	mv	a1,a0
     414:	7ee79503          	lh	a0,2030(a5)
     418:	00003097          	auipc	ra,0x3
     41c:	b34080e7          	jalr	-1228(ra) # 2f4c <crc16>
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	00412783          	lw	a5,4(sp)
     424:	00050593          	mv	a1,a0
     428:	7f079503          	lh	a0,2032(a5)
     42c:	00003097          	auipc	ra,0x3
     430:	b20080e7          	jalr	-1248(ra) # 2f4c <crc16>
    seedcrc = crc16(results[0].size, seedcrc);
     434:	00050593          	mv	a1,a0
     438:	03411503          	lh	a0,52(sp)
     43c:	00003097          	auipc	ra,0x3
     440:	b10080e7          	jalr	-1264(ra) # 2f4c <crc16>
     444:	000087b7          	lui	a5,0x8
     448:	b0578793          	addi	a5,a5,-1275 # 7b05 <__sflush_r+0x1b9>
     44c:	00050993          	mv	s3,a0

    switch (seedcrc)
     450:	06f50ee3          	beq	a0,a5,ccc <main+0xc50>
     454:	20a7fa63          	bgeu	a5,a0,668 <main+0x5ec>
     458:	00009937          	lui	s2,0x9
     45c:	a0290793          	addi	a5,s2,-1534 # 8a02 <__lshift+0x3e>
     460:	0af502e3          	beq	a0,a5,d04 <main+0xc88>
     464:	0000f7b7          	lui	a5,0xf
     468:	9f578793          	addi	a5,a5,-1547 # e9f5 <_data_lma+0x387d>
     46c:	28f51a63          	bne	a0,a5,700 <main+0x684>
            known_id = 2;
            ee_printf("Profile generation run parameters for coremark.\n");
            break;
        case 0xe9f5: /* seed1=0, seed2=0, seed3=0x66, size 666 per algorithm */
            known_id = 3;
            ee_printf("2K performance run parameters for coremark.\n");
     470:	01000537          	lui	a0,0x1000
     474:	10850513          	addi	a0,a0,264 # 1000108 <_data+0x108>
     478:	00006097          	auipc	ra,0x6
     47c:	c2c080e7          	jalr	-980(ra) # 60a4 <puts>
     480:	00002b37          	lui	s6,0x2
     484:	fd7b0b13          	addi	s6,s6,-41 # 1fd7 <time_in_secs+0x7>
     488:	0000eab7          	lui	s5,0xe
            known_id = 3;
     48c:	00300793          	li	a5,3
            ee_printf("2K performance run parameters for coremark.\n");
     490:	e3a90913          	addi	s2,s2,-454
     494:	000b0c13          	mv	s8,s6
     498:	714a8a93          	addi	s5,s5,1812 # e714 <_data_lma+0x359c>
            known_id = 3;
     49c:	00f12423          	sw	a5,8(sp)
            total_errors = -1;
            break;
    }
    if (known_id >= 0)
    {
        for (i = 0; i < default_num_contexts; i++)
     4a0:	01001bb7          	lui	s7,0x1001
     4a4:	c30ba683          	lw	a3,-976(s7) # 1000c30 <default_num_contexts>
     4a8:	00000d93          	li	s11,0
     4ac:	00000d13          	li	s10,0
     4b0:	080684e3          	beqz	a3,d38 <main+0xcbc>
        {
            results[i].err = 0;
     4b4:	000017b7          	lui	a5,0x1
     4b8:	83078793          	addi	a5,a5,-2000 # 830 <main+0x7b4>
     4bc:	fffff6b7          	lui	a3,0xfffff
     4c0:	002787b3          	add	a5,a5,sp
     4c4:	00d787b3          	add	a5,a5,a3
     4c8:	00f12223          	sw	a5,4(sp)
     4cc:	00001cb7          	lui	s9,0x1
     4d0:	0440006f          	j	514 <main+0x498>
     4d4:	00412783          	lw	a5,4(sp)
     4d8:	01a406b3          	add	a3,s0,s10
     4dc:	00269693          	slli	a3,a3,0x2
     4e0:	00d786b3          	add	a3,a5,a3
     4e4:	00dc86b3          	add	a3,s9,a3
     4e8:	82c6d683          	lhu	a3,-2004(a3) # ffffe82c <__freertos_irq_stack_top+0xfefee82c>
                          i,
                          results[i].crcstate,
                          state_known_crc[known_id]);
                results[i].err++;
            }
            total_errors += results[i].err;
     4ec:	01b688b3          	add	a7,a3,s11
        for (i = 0; i < default_num_contexts; i++)
     4f0:	001d0793          	addi	a5,s10,1
            total_errors += results[i].err;
     4f4:	01089413          	slli	s0,a7,0x10
        for (i = 0; i < default_num_contexts; i++)
     4f8:	c30ba603          	lw	a2,-976(s7)
            total_errors += results[i].err;
     4fc:	01045413          	srli	s0,s0,0x10
        for (i = 0; i < default_num_contexts; i++)
     500:	01079d13          	slli	s10,a5,0x10
            total_errors += results[i].err;
     504:	01041d93          	slli	s11,s0,0x10
        for (i = 0; i < default_num_contexts; i++)
     508:	010d5d13          	srli	s10,s10,0x10
            total_errors += results[i].err;
     50c:	410ddd93          	srai	s11,s11,0x10
        for (i = 0; i < default_num_contexts; i++)
     510:	20cd7263          	bgeu	s10,a2,714 <main+0x698>
            results[i].err = 0;
     514:	004d1413          	slli	s0,s10,0x4
     518:	00412783          	lw	a5,4(sp)
     51c:	01a404b3          	add	s1,s0,s10
     520:	00249493          	slli	s1,s1,0x2
     524:	009784b3          	add	s1,a5,s1
     528:	009c84b3          	add	s1,s9,s1
            if ((results[i].execs & ID_LIST)
     52c:	80c4a683          	lw	a3,-2036(s1)
            results[i].err = 0;
     530:	82049623          	sh	zero,-2004(s1)
            if ((results[i].execs & ID_LIST)
     534:	0016f693          	andi	a3,a3,1
     538:	02068863          	beqz	a3,568 <main+0x4ec>
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	8264d603          	lhu	a2,-2010(s1)
     540:	03560463          	beq	a2,s5,568 <main+0x4ec>
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	010007b7          	lui	a5,0x1000
     548:	000a8693          	mv	a3,s5
     54c:	000d0593          	mv	a1,s10
     550:	16078513          	addi	a0,a5,352 # 1000160 <_data+0x160>
     554:	00006097          	auipc	ra,0x6
     558:	900080e7          	jalr	-1792(ra) # 5e54 <iprintf>
                results[i].err++;
     55c:	82c4d683          	lhu	a3,-2004(s1)
     560:	00168693          	addi	a3,a3,1
     564:	82d49623          	sh	a3,-2004(s1)
            if ((results[i].execs & ID_MATRIX)
     568:	00412783          	lw	a5,4(sp)
     56c:	01a404b3          	add	s1,s0,s10
     570:	00249493          	slli	s1,s1,0x2
     574:	009784b3          	add	s1,a5,s1
     578:	009c84b3          	add	s1,s9,s1
     57c:	80c4a683          	lw	a3,-2036(s1)
     580:	0026f613          	andi	a2,a3,2
     584:	02060a63          	beqz	a2,5b8 <main+0x53c>
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	8284d603          	lhu	a2,-2008(s1)
     58c:	03860663          	beq	a2,s8,5b8 <main+0x53c>
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     590:	010007b7          	lui	a5,0x1000
     594:	000b0693          	mv	a3,s6
     598:	000d0593          	mv	a1,s10
     59c:	19078513          	addi	a0,a5,400 # 1000190 <_data+0x190>
     5a0:	00006097          	auipc	ra,0x6
     5a4:	8b4080e7          	jalr	-1868(ra) # 5e54 <iprintf>
                results[i].err++;
     5a8:	82c4d603          	lhu	a2,-2004(s1)
     5ac:	80c4a683          	lw	a3,-2036(s1)
     5b0:	00160613          	addi	a2,a2,1
     5b4:	82c49623          	sh	a2,-2004(s1)
            if ((results[i].execs & ID_STATE)
     5b8:	0046f693          	andi	a3,a3,4
     5bc:	f0068ce3          	beqz	a3,4d4 <main+0x458>
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	00412783          	lw	a5,4(sp)
     5c4:	01a40433          	add	s0,s0,s10
     5c8:	00241413          	slli	s0,s0,0x2
     5cc:	00878433          	add	s0,a5,s0
     5d0:	008c8433          	add	s0,s9,s0
     5d4:	82a45603          	lhu	a2,-2006(s0)
     5d8:	0f261c63          	bne	a2,s2,6d0 <main+0x654>
     5dc:	82c45683          	lhu	a3,-2004(s0)
     5e0:	f0dff06f          	j	4ec <main+0x470>
            results[i].list = core_list_init(
     5e4:	00001737          	lui	a4,0x1
     5e8:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     5ec:	00270733          	add	a4,a4,sp
     5f0:	fffff7b7          	lui	a5,0xfffff
     5f4:	00f707b3          	add	a5,a4,a5
     5f8:	7ec79603          	lh	a2,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     5fc:	7f87a583          	lw	a1,2040(a5)
     600:	000a0513          	mv	a0,s4
     604:	00f12223          	sw	a5,4(sp)
     608:	00001097          	auipc	ra,0x1
     60c:	dc8080e7          	jalr	-568(ra) # 13d0 <core_list_init>
     610:	03c12403          	lw	s0,60(sp)
     614:	04a12023          	sw	a0,64(sp)
     618:	00247493          	andi	s1,s0,2
        if (results[i].execs & ID_MATRIX)
     61c:	c20488e3          	beqz	s1,24c <main+0x1d0>
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	00001737          	lui	a4,0x1
     624:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     628:	00270733          	add	a4,a4,sp
            core_init_matrix(results[0].size,
     62c:	fffff7b7          	lui	a5,0xfffff
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	00f707b3          	add	a5,a4,a5
     634:	00f12223          	sw	a5,4(sp)
                             (ee_s32)results[i].seed1
     638:	00412703          	lw	a4,4(sp)
                                 | (((ee_s32)results[i].seed2) << 16),
     63c:	7ee79783          	lh	a5,2030(a5) # fffff7ee <__freertos_irq_stack_top+0xfefef7ee>
            core_init_matrix(results[0].size,
     640:	03412503          	lw	a0,52(sp)
                             (ee_s32)results[i].seed1
     644:	7ec71603          	lh	a2,2028(a4)
            core_init_matrix(results[0].size,
     648:	7fc72583          	lw	a1,2044(a4)
                                 | (((ee_s32)results[i].seed2) << 16),
     64c:	01079793          	slli	a5,a5,0x10
            core_init_matrix(results[0].size,
     650:	04410693          	addi	a3,sp,68
     654:	00c7e633          	or	a2,a5,a2
     658:	00001097          	auipc	ra,0x1
     65c:	734080e7          	jalr	1844(ra) # 1d8c <core_init_matrix>
     660:	03c12403          	lw	s0,60(sp)
     664:	be9ff06f          	j	24c <main+0x1d0>
     668:	000027b7          	lui	a5,0x2
     66c:	8f278793          	addi	a5,a5,-1806 # 18f2 <matrix_test+0x1be>
     670:	62f50463          	beq	a0,a5,c98 <main+0xc1c>
     674:	00005b37          	lui	s6,0x5
     678:	eafb0793          	addi	a5,s6,-337 # 4eaf <__cvt+0xb>
     67c:	08f51263          	bne	a0,a5,700 <main+0x684>
            ee_printf("Profile generation run parameters for coremark.\n");
     680:	01000537          	lui	a0,0x1000
     684:	0d850513          	addi	a0,a0,216 # 10000d8 <_data+0xd8>
     688:	00006097          	auipc	ra,0x6
     68c:	a1c080e7          	jalr	-1508(ra) # 60a4 <puts>
     690:	608b0b13          	addi	s6,s6,1544
     694:	0000e937          	lui	s2,0xe
     698:	00007ab7          	lui	s5,0x7
            known_id = 2;
     69c:	00200793          	li	a5,2
            ee_printf("Profile generation run parameters for coremark.\n");
     6a0:	5a490913          	addi	s2,s2,1444 # e5a4 <_data_lma+0x342c>
     6a4:	000b0c13          	mv	s8,s6
     6a8:	a79a8a93          	addi	s5,s5,-1415 # 6a79 <_dtoa_r+0x48d>
            known_id = 2;
     6ac:	00f12423          	sw	a5,8(sp)
     6b0:	df1ff06f          	j	4a0 <main+0x424>
        && (results[0].seed3 == 0))
     6b4:	00412783          	lw	a5,4(sp)
     6b8:	7f079783          	lh	a5,2032(a5)
     6bc:	ae0790e3          	bnez	a5,19c <main+0x120>
        results[0].seed3 = 0x66;
     6c0:	00412703          	lw	a4,4(sp)
     6c4:	06600793          	li	a5,102
     6c8:	7ef71823          	sh	a5,2032(a4)
     6cc:	ad1ff06f          	j	19c <main+0x120>
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	010007b7          	lui	a5,0x1000
     6d4:	00090693          	mv	a3,s2
     6d8:	000d0593          	mv	a1,s10
     6dc:	1c478513          	addi	a0,a5,452 # 10001c4 <_data+0x1c4>
     6e0:	00005097          	auipc	ra,0x5
     6e4:	774080e7          	jalr	1908(ra) # 5e54 <iprintf>
                results[i].err++;
     6e8:	82c45683          	lhu	a3,-2004(s0)
     6ec:	00168693          	addi	a3,a3,1
     6f0:	01069693          	slli	a3,a3,0x10
     6f4:	0106d693          	srli	a3,a3,0x10
     6f8:	82d41623          	sh	a3,-2004(s0)
     6fc:	df1ff06f          	j	4ec <main+0x470>
    switch (seedcrc)
     700:	00010437          	lui	s0,0x10
    ee_s16       known_id = -1, total_errors = 0;
     704:	fff00793          	li	a5,-1
    switch (seedcrc)
     708:	fff40413          	addi	s0,s0,-1 # ffff <_data_lma+0x4e87>
    ee_s16       known_id = -1, total_errors = 0;
     70c:	00f12423          	sw	a5,8(sp)
     710:	01001bb7          	lui	s7,0x1001
        }
    }
    total_errors += check_data_types();
     714:	00003097          	auipc	ra,0x3
     718:	ac0080e7          	jalr	-1344(ra) # 31d4 <check_data_types>
    /* and report results */
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	03412583          	lw	a1,52(sp)
    total_errors += check_data_types();
     720:	00a40433          	add	s0,s0,a0
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	01000537          	lui	a0,0x1000
     728:	1f450513          	addi	a0,a0,500 # 10001f4 <_data+0x1f4>
     72c:	00005097          	auipc	ra,0x5
     730:	728080e7          	jalr	1832(ra) # 5e54 <iprintf>
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	01000537          	lui	a0,0x1000
     738:	000a0593          	mv	a1,s4
     73c:	20c50513          	addi	a0,a0,524 # 100020c <_data+0x20c>
     740:	00005097          	auipc	ra,0x5
     744:	714080e7          	jalr	1812(ra) # 5e54 <iprintf>
#if HAS_FLOAT
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     748:	000a0513          	mv	a0,s4
     74c:	00002097          	auipc	ra,0x2
     750:	884080e7          	jalr	-1916(ra) # 1fd0 <time_in_secs>
     754:	00050613          	mv	a2,a0
     758:	01000537          	lui	a0,0x1000
     75c:	00058693          	mv	a3,a1
     760:	22450513          	addi	a0,a0,548 # 1000224 <_data+0x224>
     764:	00005097          	auipc	ra,0x5
     768:	6f0080e7          	jalr	1776(ra) # 5e54 <iprintf>
    if (time_in_secs(total_time) > 0)
     76c:	000a0513          	mv	a0,s4
     770:	00002097          	auipc	ra,0x2
     774:	860080e7          	jalr	-1952(ra) # 1fd0 <time_in_secs>
    total_errors += check_data_types();
     778:	01041413          	slli	s0,s0,0x10
    if (time_in_secs(total_time) > 0)
     77c:	00000613          	li	a2,0
     780:	00000693          	li	a3,0
    total_errors += check_data_types();
     784:	01045413          	srli	s0,s0,0x10
    if (time_in_secs(total_time) > 0)
     788:	00004097          	auipc	ra,0x4
     78c:	a58080e7          	jalr	-1448(ra) # 41e0 <__gedf2>
     790:	06a05063          	blez	a0,7f0 <main+0x774>
        ee_printf("Iterations/Sec   : %lf\n",
                  default_num_contexts * results[0].iterations
     794:	c30ba583          	lw	a1,-976(s7) # 1000c30 <default_num_contexts>
     798:	03812503          	lw	a0,56(sp)
     79c:	00004097          	auipc	ra,0x4
     7a0:	4c0080e7          	jalr	1216(ra) # 4c5c <__mulsi3>
        ee_printf("Iterations/Sec   : %lf\n",
     7a4:	00004097          	auipc	ra,0x4
     7a8:	404080e7          	jalr	1028(ra) # 4ba8 <__floatunsidf>
     7ac:	00050c13          	mv	s8,a0
                      / time_in_secs(total_time));
     7b0:	000a0513          	mv	a0,s4
        ee_printf("Iterations/Sec   : %lf\n",
     7b4:	00058c93          	mv	s9,a1
                      / time_in_secs(total_time));
     7b8:	00002097          	auipc	ra,0x2
     7bc:	818080e7          	jalr	-2024(ra) # 1fd0 <time_in_secs>
        ee_printf("Iterations/Sec   : %lf\n",
     7c0:	00050613          	mv	a2,a0
     7c4:	00058693          	mv	a3,a1
     7c8:	000c0513          	mv	a0,s8
     7cc:	000c8593          	mv	a1,s9
     7d0:	00003097          	auipc	ra,0x3
     7d4:	10c080e7          	jalr	268(ra) # 38dc <__divdf3>
     7d8:	00050613          	mv	a2,a0
     7dc:	01000537          	lui	a0,0x1000
     7e0:	00058693          	mv	a3,a1
     7e4:	23c50513          	addi	a0,a0,572 # 100023c <_data+0x23c>
     7e8:	00005097          	auipc	ra,0x5
     7ec:	66c080e7          	jalr	1644(ra) # 5e54 <iprintf>
    if (time_in_secs(total_time) > 0)
        ee_printf("Iterations/Sec   : %d\n",
                  default_num_contexts * results[0].iterations
                      / time_in_secs(total_time));
#endif
    if (time_in_secs(total_time) < 10)
     7f0:	000a0513          	mv	a0,s4
     7f4:	00001097          	auipc	ra,0x1
     7f8:	7dc080e7          	jalr	2012(ra) # 1fd0 <time_in_secs>
     7fc:	010007b7          	lui	a5,0x1000
     800:	0187a603          	lw	a2,24(a5) # 1000018 <_data+0x18>
     804:	01c7a683          	lw	a3,28(a5)
     808:	00004097          	auipc	ra,0x4
     80c:	ac8080e7          	jalr	-1336(ra) # 42d0 <__ledf2>
     810:	46054263          	bltz	a0,c74 <main+0xbf8>
        ee_printf(
            "ERROR! Must execute for at least 10 secs for a valid result!\n");
        total_errors++;
    }

    ee_printf("Iterations       : %lu\n",
     814:	c30ba583          	lw	a1,-976(s7)
     818:	03812503          	lw	a0,56(sp)
              (long unsigned)default_num_contexts * results[0].iterations);
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     81c:	01000ab7          	lui	s5,0x1000
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     820:	01000b37          	lui	s6,0x1000
    ee_printf("Iterations       : %lu\n",
     824:	00004097          	auipc	ra,0x4
     828:	438080e7          	jalr	1080(ra) # 4c5c <__mulsi3>
     82c:	00050593          	mv	a1,a0
     830:	01000537          	lui	a0,0x1000
     834:	29450513          	addi	a0,a0,660 # 1000294 <_data+0x294>
     838:	00005097          	auipc	ra,0x5
     83c:	61c080e7          	jalr	1564(ra) # 5e54 <iprintf>
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     840:	01000537          	lui	a0,0x1000
     844:	2aca8593          	addi	a1,s5,684 # 10002ac <_data+0x2ac>
     848:	2b850513          	addi	a0,a0,696 # 10002b8 <_data+0x2b8>
     84c:	00005097          	auipc	ra,0x5
     850:	608080e7          	jalr	1544(ra) # 5e54 <iprintf>
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	01000537          	lui	a0,0x1000
     858:	2d0b0593          	addi	a1,s6,720 # 10002d0 <_data+0x2d0>
     85c:	2d450513          	addi	a0,a0,724 # 10002d4 <_data+0x2d4>
     860:	00005097          	auipc	ra,0x5
     864:	5f4080e7          	jalr	1524(ra) # 5e54 <iprintf>
#if (MULTITHREAD > 1)
    ee_printf("Parallel %s : %d\n", PARALLEL_METHOD, default_num_contexts);
#endif
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     868:	01000c37          	lui	s8,0x1000
     86c:	01000537          	lui	a0,0x1000
     870:	2ecc0593          	addi	a1,s8,748 # 10002ec <_data+0x2ec>
     874:	2f450513          	addi	a0,a0,756 # 10002f4 <_data+0x2f4>
     878:	00005097          	auipc	ra,0x5
     87c:	5dc080e7          	jalr	1500(ra) # 5e54 <iprintf>
    /* output for verification */
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     880:	01000537          	lui	a0,0x1000
     884:	00098593          	mv	a1,s3
     888:	30c50513          	addi	a0,a0,780 # 100030c <_data+0x30c>
     88c:	00005097          	auipc	ra,0x5
     890:	5c8080e7          	jalr	1480(ra) # 5e54 <iprintf>
    if (results[0].execs & ID_LIST)
     894:	03c12783          	lw	a5,60(sp)
        total_errors++;
     898:	01041413          	slli	s0,s0,0x10
     89c:	41045413          	srai	s0,s0,0x10
    if (results[0].execs & ID_LIST)
     8a0:	0017f693          	andi	a3,a5,1
     8a4:	06068a63          	beqz	a3,918 <main+0x89c>
        for (i = 0; i < default_num_contexts; i++)
     8a8:	c30ba683          	lw	a3,-976(s7)
     8ac:	06068663          	beqz	a3,918 <main+0x89c>
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b0:	00001737          	lui	a4,0x1
     8b4:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     8b8:	fffff7b7          	lui	a5,0xfffff
     8bc:	00270733          	add	a4,a4,sp
     8c0:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     8c4:	00000993          	li	s3,0
     8c8:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8cc:	00f12223          	sw	a5,4(sp)
     8d0:	000014b7          	lui	s1,0x1
     8d4:	00499793          	slli	a5,s3,0x4
     8d8:	00412703          	lw	a4,4(sp)
     8dc:	013787b3          	add	a5,a5,s3
     8e0:	00279793          	slli	a5,a5,0x2
     8e4:	00f707b3          	add	a5,a4,a5
     8e8:	00f487b3          	add	a5,s1,a5
     8ec:	8267d603          	lhu	a2,-2010(a5) # ffffe826 <__freertos_irq_stack_top+0xfefee826>
     8f0:	00098593          	mv	a1,s3
     8f4:	32890513          	addi	a0,s2,808 # 1000328 <_data+0x328>
     8f8:	00005097          	auipc	ra,0x5
     8fc:	55c080e7          	jalr	1372(ra) # 5e54 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     900:	00198993          	addi	s3,s3,1
     904:	c30ba783          	lw	a5,-976(s7)
     908:	01099993          	slli	s3,s3,0x10
     90c:	0109d993          	srli	s3,s3,0x10
     910:	fcf9e2e3          	bltu	s3,a5,8d4 <main+0x858>
     914:	03c12783          	lw	a5,60(sp)
    if (results[0].execs & ID_MATRIX)
     918:	0027f693          	andi	a3,a5,2
     91c:	06068a63          	beqz	a3,990 <main+0x914>
        for (i = 0; i < default_num_contexts; i++)
     920:	c30ba683          	lw	a3,-976(s7)
     924:	36068463          	beqz	a3,c8c <main+0xc10>
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	00001737          	lui	a4,0x1
     92c:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     930:	fffff7b7          	lui	a5,0xfffff
     934:	00270733          	add	a4,a4,sp
     938:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     93c:	00000993          	li	s3,0
     940:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     944:	00f12223          	sw	a5,4(sp)
     948:	000014b7          	lui	s1,0x1
     94c:	00499793          	slli	a5,s3,0x4
     950:	00412703          	lw	a4,4(sp)
     954:	013787b3          	add	a5,a5,s3
     958:	00279793          	slli	a5,a5,0x2
     95c:	00f707b3          	add	a5,a4,a5
     960:	00f487b3          	add	a5,s1,a5
     964:	8287d603          	lhu	a2,-2008(a5) # ffffe828 <__freertos_irq_stack_top+0xfefee828>
     968:	00098593          	mv	a1,s3
     96c:	34490513          	addi	a0,s2,836 # 1000344 <_data+0x344>
     970:	00005097          	auipc	ra,0x5
     974:	4e4080e7          	jalr	1252(ra) # 5e54 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     978:	00198993          	addi	s3,s3,1
     97c:	c30ba783          	lw	a5,-976(s7)
     980:	01099993          	slli	s3,s3,0x10
     984:	0109d993          	srli	s3,s3,0x10
     988:	fcf9e2e3          	bltu	s3,a5,94c <main+0x8d0>
     98c:	03c12783          	lw	a5,60(sp)
    if (results[0].execs & ID_STATE)
     990:	0047f793          	andi	a5,a5,4
     994:	06078863          	beqz	a5,a04 <main+0x988>
        for (i = 0; i < default_num_contexts; i++)
     998:	c30ba783          	lw	a5,-976(s7)
     99c:	0c078663          	beqz	a5,a68 <main+0x9ec>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	00001737          	lui	a4,0x1
     9a4:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     9a8:	fffff7b7          	lui	a5,0xfffff
     9ac:	00270733          	add	a4,a4,sp
     9b0:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     9b4:	00000993          	li	s3,0
     9b8:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9bc:	00f12223          	sw	a5,4(sp)
     9c0:	000014b7          	lui	s1,0x1
     9c4:	00499793          	slli	a5,s3,0x4
     9c8:	00412703          	lw	a4,4(sp)
     9cc:	013787b3          	add	a5,a5,s3
     9d0:	00279793          	slli	a5,a5,0x2
     9d4:	00f707b3          	add	a5,a4,a5
     9d8:	00f487b3          	add	a5,s1,a5
     9dc:	82a7d603          	lhu	a2,-2006(a5) # ffffe82a <__freertos_irq_stack_top+0xfefee82a>
     9e0:	00098593          	mv	a1,s3
     9e4:	36090513          	addi	a0,s2,864 # 1000360 <_data+0x360>
     9e8:	00005097          	auipc	ra,0x5
     9ec:	46c080e7          	jalr	1132(ra) # 5e54 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     9f0:	00198993          	addi	s3,s3,1
     9f4:	c30ba783          	lw	a5,-976(s7)
     9f8:	01099993          	slli	s3,s3,0x10
     9fc:	0109d993          	srli	s3,s3,0x10
     a00:	fcf9e2e3          	bltu	s3,a5,9c4 <main+0x948>
    for (i = 0; i < default_num_contexts; i++)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	00001737          	lui	a4,0x1
    for (i = 0; i < default_num_contexts; i++)
     a08:	c30ba783          	lw	a5,-976(s7)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a0c:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     a10:	fffff4b7          	lui	s1,0xfffff
     a14:	00270733          	add	a4,a4,sp
    for (i = 0; i < default_num_contexts; i++)
     a18:	00000c93          	li	s9,0
     a1c:	010009b7          	lui	s3,0x1000
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	009704b3          	add	s1,a4,s1
     a24:	00001937          	lui	s2,0x1
    for (i = 0; i < default_num_contexts; i++)
     a28:	04078063          	beqz	a5,a68 <main+0x9ec>
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	004c9793          	slli	a5,s9,0x4
     a30:	019787b3          	add	a5,a5,s9
     a34:	00279793          	slli	a5,a5,0x2
     a38:	00f487b3          	add	a5,s1,a5
     a3c:	00f907b3          	add	a5,s2,a5
     a40:	8247d603          	lhu	a2,-2012(a5)
     a44:	000c8593          	mv	a1,s9
     a48:	37c98513          	addi	a0,s3,892 # 100037c <_data+0x37c>
     a4c:	00005097          	auipc	ra,0x5
     a50:	408080e7          	jalr	1032(ra) # 5e54 <iprintf>
    for (i = 0; i < default_num_contexts; i++)
     a54:	001c8c93          	addi	s9,s9,1 # 1001 <__stack_size+0x1>
     a58:	c30ba783          	lw	a5,-976(s7)
     a5c:	010c9c93          	slli	s9,s9,0x10
     a60:	010cdc93          	srli	s9,s9,0x10
     a64:	fcfce4e3          	bltu	s9,a5,a2c <main+0x9b0>
    if (total_errors == 0)
     a68:	16040463          	beqz	s0,bd0 <main+0xb54>
#endif
            ee_printf("\n");
        }
#endif
    }
    if (total_errors > 0)
     a6c:	0e805c63          	blez	s0,b64 <main+0xae8>
        ee_printf("Errors detected\n");
     a70:	01000537          	lui	a0,0x1000
     a74:	40450513          	addi	a0,a0,1028 # 1000404 <_data+0x404>
     a78:	00005097          	auipc	ra,0x5
     a7c:	62c080e7          	jalr	1580(ra) # 60a4 <puts>
#if (MEM_METHOD == MEM_MALLOC)
    for (i = 0; i < MULTITHREAD; i++)
        portable_free(results[i].memblock[0]);
#endif
    /* And last call any target specific code for finalizing */
    portable_fini(&(results[0].port));
     a80:	05e10513          	addi	a0,sp,94
     a84:	00001097          	auipc	ra,0x1
     a88:	5b4080e7          	jalr	1460(ra) # 2038 <portable_fini>

    return MAIN_RETURN_VAL;
}
     a8c:	08010113          	addi	sp,sp,128
     a90:	7ec12083          	lw	ra,2028(sp)
     a94:	00000513          	li	a0,0
     a98:	7e812403          	lw	s0,2024(sp)
     a9c:	7e412483          	lw	s1,2020(sp)
     aa0:	7e012903          	lw	s2,2016(sp)
     aa4:	7dc12983          	lw	s3,2012(sp)
     aa8:	7d812a03          	lw	s4,2008(sp)
     aac:	7d412a83          	lw	s5,2004(sp)
     ab0:	7d012b03          	lw	s6,2000(sp)
     ab4:	7cc12b83          	lw	s7,1996(sp)
     ab8:	7c812c03          	lw	s8,1992(sp)
     abc:	7c412c83          	lw	s9,1988(sp)
     ac0:	7c012d03          	lw	s10,1984(sp)
     ac4:	7bc12d83          	lw	s11,1980(sp)
     ac8:	7f010113          	addi	sp,sp,2032
     acc:	00008067          	ret
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	00001737          	lui	a4,0x1
     ad4:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b4>
     ad8:	00270733          	add	a4,a4,sp
     adc:	00f707b3          	add	a5,a4,a5
     ae0:	06010713          	addi	a4,sp,96
     ae4:	00f12223          	sw	a5,4(sp)
     ae8:	7ee7ac23          	sw	a4,2040(a5)
            j++;
     aec:	00100a93          	li	s5,1
        if ((1 << (ee_u32)i) & results[0].execs)
     af0:	f4048863          	beqz	s1,240 <main+0x1c4>
     af4:	0280006f          	j	b1c <main+0xaa0>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	000a0593          	mv	a1,s4
     afc:	000a8513          	mv	a0,s5
     b00:	00004097          	auipc	ra,0x4
     b04:	15c080e7          	jalr	348(ra) # 4c5c <__mulsi3>
     b08:	06010793          	addi	a5,sp,96
     b0c:	00a78533          	add	a0,a5,a0
     b10:	02a12823          	sw	a0,48(sp)
        if (results[i].execs & ID_LIST)
     b14:	f2090a63          	beqz	s2,248 <main+0x1cc>
     b18:	acdff06f          	j	5e4 <main+0x568>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1c:	000a8513          	mv	a0,s5
     b20:	000a0593          	mv	a1,s4
     b24:	00004097          	auipc	ra,0x4
     b28:	138080e7          	jalr	312(ra) # 4c5c <__mulsi3>
     b2c:	06010793          	addi	a5,sp,96
     b30:	00a78533          	add	a0,a5,a0
     b34:	000017b7          	lui	a5,0x1
     b38:	83078793          	addi	a5,a5,-2000 # 830 <main+0x7b4>
     b3c:	fffffb37          	lui	s6,0xfffff
     b40:	002787b3          	add	a5,a5,sp
     b44:	016787b3          	add	a5,a5,s6
            j++;
     b48:	001a8a93          	addi	s5,s5,1
     b4c:	010a9a93          	slli	s5,s5,0x10
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	00f12223          	sw	a5,4(sp)
     b54:	7ea7ae23          	sw	a0,2044(a5)
            j++;
     b58:	010ada93          	srli	s5,s5,0x10
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	ee098463          	beqz	s3,244 <main+0x1c8>
     b60:	f99ff06f          	j	af8 <main+0xa7c>
        ee_printf(
     b64:	01000537          	lui	a0,0x1000
     b68:	41450513          	addi	a0,a0,1044 # 1000414 <_data+0x414>
     b6c:	00005097          	auipc	ra,0x5
     b70:	538080e7          	jalr	1336(ra) # 60a4 <puts>
     b74:	f0dff06f          	j	a80 <main+0xa04>
            res->crclist = res->crc;
     b78:	04a11b23          	sh	a0,86(sp)
    for (i = 0; i < iterations; i++)
     b7c:	00100793          	li	a5,1
     b80:	fcf90063          	beq	s2,a5,340 <main+0x2c4>
     b84:	00100413          	li	s0,1
     b88:	f6cff06f          	j	2f4 <main+0x278>
        && (results[0].seed3 == 0))
     b8c:	00412783          	lw	a5,4(sp)
     b90:	7f079783          	lh	a5,2032(a5)
     b94:	e2079e63          	bnez	a5,1d0 <main+0x154>
        results[0].seed1 = 0x3415;
     b98:	00412703          	lw	a4,4(sp)
     b9c:	341537b7          	lui	a5,0x34153
     ba0:	41578793          	addi	a5,a5,1045 # 34153415 <__freertos_irq_stack_top+0x33143415>
     ba4:	7ef72623          	sw	a5,2028(a4)
        results[0].seed3 = 0x66;
     ba8:	06600793          	li	a5,102
     bac:	7ef71823          	sh	a5,2032(a4)
     bb0:	e20ff06f          	j	1d0 <main+0x154>
        printf("start test22\n");
     bb4:	01000537          	lui	a0,0x1000
        results[0].execs = ALL_ALGORITHMS_MASK;
     bb8:	00700793          	li	a5,7
        printf("start test22\n");
     bbc:	04850513          	addi	a0,a0,72 # 1000048 <_data+0x48>
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	02f12e23          	sw	a5,60(sp)
        printf("start test22\n");
     bc4:	00005097          	auipc	ra,0x5
     bc8:	4e0080e7          	jalr	1248(ra) # 60a4 <puts>
     bcc:	da0ff06f          	j	16c <main+0xf0>
        ee_printf(
     bd0:	01000537          	lui	a0,0x1000
     bd4:	39850513          	addi	a0,a0,920 # 1000398 <_data+0x398>
     bd8:	00005097          	auipc	ra,0x5
     bdc:	4cc080e7          	jalr	1228(ra) # 60a4 <puts>
        if (known_id == 3)
     be0:	00812703          	lw	a4,8(sp)
     be4:	00300793          	li	a5,3
     be8:	e8f71ce3          	bne	a4,a5,a80 <main+0xa04>
                      default_num_contexts * results[0].iterations
     bec:	c30ba583          	lw	a1,-976(s7)
     bf0:	03812503          	lw	a0,56(sp)
     bf4:	00004097          	auipc	ra,0x4
     bf8:	068080e7          	jalr	104(ra) # 4c5c <__mulsi3>
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	00004097          	auipc	ra,0x4
     c00:	fac080e7          	jalr	-84(ra) # 4ba8 <__floatunsidf>
     c04:	00050413          	mv	s0,a0
                          / time_in_secs(total_time),
     c08:	000a0513          	mv	a0,s4
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	00058493          	mv	s1,a1
                          / time_in_secs(total_time),
     c10:	00001097          	auipc	ra,0x1
     c14:	3c0080e7          	jalr	960(ra) # 1fd0 <time_in_secs>
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	00050613          	mv	a2,a0
     c1c:	00058693          	mv	a3,a1
     c20:	00040513          	mv	a0,s0
     c24:	00048593          	mv	a1,s1
     c28:	00003097          	auipc	ra,0x3
     c2c:	cb4080e7          	jalr	-844(ra) # 38dc <__divdf3>
     c30:	00050613          	mv	a2,a0
     c34:	01000537          	lui	a0,0x1000
     c38:	00058693          	mv	a3,a1
     c3c:	2d0b0793          	addi	a5,s6,720 # fffff2d0 <__freertos_irq_stack_top+0xfefef2d0>
     c40:	2aca8713          	addi	a4,s5,684
     c44:	3e050513          	addi	a0,a0,992 # 10003e0 <_data+0x3e0>
     c48:	00005097          	auipc	ra,0x5
     c4c:	20c080e7          	jalr	524(ra) # 5e54 <iprintf>
            ee_printf(" / %s", MEM_LOCATION);
     c50:	01000537          	lui	a0,0x1000
     c54:	2ecc0593          	addi	a1,s8,748
     c58:	3fc50513          	addi	a0,a0,1020 # 10003fc <_data+0x3fc>
     c5c:	00005097          	auipc	ra,0x5
     c60:	1f8080e7          	jalr	504(ra) # 5e54 <iprintf>
            ee_printf("\n");
     c64:	00a00513          	li	a0,10
     c68:	00005097          	auipc	ra,0x5
     c6c:	270080e7          	jalr	624(ra) # 5ed8 <putchar>
     c70:	e11ff06f          	j	a80 <main+0xa04>
        ee_printf(
     c74:	01000537          	lui	a0,0x1000
     c78:	25450513          	addi	a0,a0,596 # 1000254 <_data+0x254>
     c7c:	00005097          	auipc	ra,0x5
     c80:	428080e7          	jalr	1064(ra) # 60a4 <puts>
        total_errors++;
     c84:	00140413          	addi	s0,s0,1
     c88:	b8dff06f          	j	814 <main+0x798>
    if (results[0].execs & ID_STATE)
     c8c:	0047f793          	andi	a5,a5,4
     c90:	d6078ae3          	beqz	a5,a04 <main+0x988>
     c94:	dd5ff06f          	j	a68 <main+0x9ec>
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	01000537          	lui	a0,0x1000
     c9c:	13450513          	addi	a0,a0,308 # 1000134 <_data+0x134>
     ca0:	00005097          	auipc	ra,0x5
     ca4:	404080e7          	jalr	1028(ra) # 60a4 <puts>
     ca8:	00009937          	lui	s2,0x9
     cac:	0000eab7          	lui	s5,0xe
            known_id = 4;
     cb0:	00400793          	li	a5,4
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	d8490913          	addi	s2,s2,-636 # 8d84 <__d2b+0xac>
     cb8:	74700b13          	li	s6,1863
     cbc:	74700c13          	li	s8,1863
     cc0:	3c1a8a93          	addi	s5,s5,961 # e3c1 <_data_lma+0x3249>
            known_id = 4;
     cc4:	00f12423          	sw	a5,8(sp)
     cc8:	fd8ff06f          	j	4a0 <main+0x424>
            ee_printf("6k validation run parameters for coremark.\n");
     ccc:	01000537          	lui	a0,0x1000
     cd0:	0ac50513          	addi	a0,a0,172 # 10000ac <_data+0xac>
     cd4:	00005097          	auipc	ra,0x5
     cd8:	3d0080e7          	jalr	976(ra) # 60a4 <puts>
     cdc:	00001b37          	lui	s6,0x1
     ce0:	199b0b13          	addi	s6,s6,409 # 1199 <__stack_size+0x199>
     ce4:	00004937          	lui	s2,0x4
     ce8:	00003ab7          	lui	s5,0x3
            known_id = 1;
     cec:	00100793          	li	a5,1
            ee_printf("6k validation run parameters for coremark.\n");
     cf0:	9bf90913          	addi	s2,s2,-1601 # 39bf <__divdf3+0xe3>
     cf4:	000b0c13          	mv	s8,s6
     cf8:	340a8a93          	addi	s5,s5,832 # 3340 <__udivdi3+0x110>
            known_id = 1;
     cfc:	00f12423          	sw	a5,8(sp)
     d00:	fa0ff06f          	j	4a0 <main+0x424>
            ee_printf("6k performance run parameters for coremark.\n");
     d04:	01000537          	lui	a0,0x1000
     d08:	0000cb37          	lui	s6,0xc
     d0c:	08050513          	addi	a0,a0,128 # 1000080 <_data+0x80>
     d10:	e52b0b13          	addi	s6,s6,-430 # be52 <_data_lma+0xcda>
     d14:	00006937          	lui	s2,0x6
     d18:	0000dab7          	lui	s5,0xd
     d1c:	00005097          	auipc	ra,0x5
     d20:	388080e7          	jalr	904(ra) # 60a4 <puts>
     d24:	e4790913          	addi	s2,s2,-441 # 5e47 <_printf_i+0x3df>
     d28:	000b0c13          	mv	s8,s6
     d2c:	4b0a8a93          	addi	s5,s5,1200 # d4b0 <_data_lma+0x2338>
            known_id = 0;
     d30:	00012423          	sw	zero,8(sp)
     d34:	f6cff06f          	j	4a0 <main+0x424>
        for (i = 0; i < default_num_contexts; i++)
     d38:	00000413          	li	s0,0
     d3c:	9d9ff06f          	j	714 <main+0x698>

00000d40 <core_bench_list>:
core_bench_list(core_results *res, ee_s16 finder_idx)
{
    ee_u16     retval = 0;
    ee_u16     found = 0, missed = 0;
    list_head *list     = res->list;
    ee_s16     find_num = res->seed3;
     d40:	00451883          	lh	a7,4(a0)
{
     d44:	fa010113          	addi	sp,sp,-96
     d48:	04812c23          	sw	s0,88(sp)
     d4c:	03812c23          	sw	s8,56(sp)
     d50:	04112e23          	sw	ra,92(sp)
     d54:	04912a23          	sw	s1,84(sp)
     d58:	05212823          	sw	s2,80(sp)
     d5c:	05312623          	sw	s3,76(sp)
     d60:	05412423          	sw	s4,72(sp)
     d64:	05512223          	sw	s5,68(sp)
     d68:	05612023          	sw	s6,64(sp)
     d6c:	03712e23          	sw	s7,60(sp)
     d70:	03912a23          	sw	s9,52(sp)
     d74:	03a12823          	sw	s10,48(sp)
     d78:	03b12623          	sw	s11,44(sp)
     d7c:	00012a23          	sw	zero,20(sp)
     d80:	00050c13          	mv	s8,a0
    list_head *list     = res->list;
     d84:	02452403          	lw	s0,36(a0)
    ee_s16     i;

    info.idx = finder_idx;
    /* find <find_num> values in the list, and change the list each time
     * (reverse and cache if value found) */
    for (i = 0; i < find_num; i++)
     d88:	39105a63          	blez	a7,111c <__stack_size+0x11c>
    info.idx = finder_idx;
     d8c:	00b12623          	sw	a1,12(sp)
    for (i = 0; i < find_num; i++)
     d90:	00000613          	li	a2,0
    ee_u16     found = 0, missed = 0;
     d94:	00000e13          	li	t3,0
     d98:	00000513          	li	a0,0
    ee_u16     retval = 0;
     d9c:	00000813          	li	a6,0
        Found item, or NULL if not found.
*/
list_head *
core_list_find(list_head *list, list_data *info)
{
    if (info->idx >= 0)
     da0:	00c12783          	lw	a5,12(sp)
        info.data16 = (i & 0xff);
     da4:	0ff67693          	andi	a3,a2,255
     da8:	00d12a23          	sw	a3,20(sp)
    if (info->idx >= 0)
     dac:	2a07c863          	bltz	a5,105c <__stack_size+0x5c>
    {
        while (list && (list->info->idx != info->idx))
     db0:	60040c63          	beqz	s0,13c8 <__stack_size+0x3c8>
     db4:	00442703          	lw	a4,4(s0)
     db8:	00078693          	mv	a3,a5
     dbc:	00040793          	mv	a5,s0
     dc0:	00271703          	lh	a4,2(a4)
     dc4:	00d71c63          	bne	a4,a3,ddc <core_bench_list+0x9c>
     dc8:	01c0006f          	j	de4 <core_bench_list+0xa4>
     dcc:	0047a703          	lw	a4,4(a5)
     dd0:	00c12683          	lw	a3,12(sp)
     dd4:	00271703          	lh	a4,2(a4)
     dd8:	00d70663          	beq	a4,a3,de4 <core_bench_list+0xa4>
            list = list->next;
     ddc:	0007a783          	lw	a5,0(a5)
        while (list && (list->info->idx != info->idx))
     de0:	fe0796e3          	bnez	a5,dcc <core_bench_list+0x8c>
     de4:	00000693          	li	a3,0
     de8:	00c0006f          	j	df4 <core_bench_list+0xb4>

list_head *
core_list_reverse(list_head *list)
{
    list_head *next = NULL, *tmp;
    while (list)
     dec:	00040693          	mv	a3,s0
     df0:	00070413          	mv	s0,a4
    {
        tmp        = list->next;
     df4:	00042703          	lw	a4,0(s0)
        list->next = next;
     df8:	00d42023          	sw	a3,0(s0)
    while (list)
     dfc:	fe0718e3          	bnez	a4,dec <core_bench_list+0xac>
        if (this_find == NULL)
     e00:	28078863          	beqz	a5,1090 <__stack_size+0x90>
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	0047a703          	lw	a4,4(a5)
            found++;
     e08:	00150513          	addi	a0,a0,1
     e0c:	01051513          	slli	a0,a0,0x10
            if (this_find->info->data16 & 0x1) /* use found value */
     e10:	00071703          	lh	a4,0(a4)
            found++;
     e14:	01055513          	srli	a0,a0,0x10
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	00177693          	andi	a3,a4,1
     e1c:	00068c63          	beqz	a3,e34 <core_bench_list+0xf4>
                retval += (this_find->info->data16 >> 9) & 1;
     e20:	40975713          	srai	a4,a4,0x9
     e24:	00177713          	andi	a4,a4,1
     e28:	00e80733          	add	a4,a6,a4
     e2c:	01071813          	slli	a6,a4,0x10
     e30:	01085813          	srli	a6,a6,0x10
            if (this_find->next != NULL)
     e34:	0007a683          	lw	a3,0(a5)
     e38:	00068c63          	beqz	a3,e50 <core_bench_list+0x110>
                this_find->next = finder->next;
     e3c:	0006a703          	lw	a4,0(a3)
     e40:	00e7a023          	sw	a4,0(a5)
                finder->next    = list->next;
     e44:	00042783          	lw	a5,0(s0)
     e48:	00f6a023          	sw	a5,0(a3)
                list->next      = finder;
     e4c:	00d42023          	sw	a3,0(s0)
        if (info.idx >= 0)
     e50:	00c12783          	lw	a5,12(sp)
     e54:	0007ca63          	bltz	a5,e68 <core_bench_list+0x128>
            info.idx++;
     e58:	00178b13          	addi	s6,a5,1
     e5c:	010b1793          	slli	a5,s6,0x10
     e60:	4107d793          	srai	a5,a5,0x10
     e64:	00f12623          	sw	a5,12(sp)
     e68:	00160613          	addi	a2,a2,1
     e6c:	01061613          	slli	a2,a2,0x10
     e70:	41065613          	srai	a2,a2,0x10
    for (i = 0; i < find_num; i++)
     e74:	f2c896e3          	bne	a7,a2,da0 <core_bench_list+0x60>
     e78:	00251793          	slli	a5,a0,0x2
     e7c:	41c787b3          	sub	a5,a5,t3
     e80:	00f807b3          	add	a5,a6,a5
     e84:	01079793          	slli	a5,a5,0x10
     e88:	0107d793          	srli	a5,a5,0x10
     e8c:	00f12e23          	sw	a5,28(sp)
    if (finder_idx > 0)
     e90:	28b04e63          	bgtz	a1,112c <__stack_size+0x12c>
    remover = core_list_remove(list->next);
     e94:	00042783          	lw	a5,0(s0)
    if (info->idx >= 0)
     e98:	00040493          	mv	s1,s0
    list_head *ret = item->next;
     e9c:	0007a903          	lw	s2,0(a5)
    tmp        = item->info;
     ea0:	0047a703          	lw	a4,4(a5)
    item->info = ret->info;
     ea4:	00492603          	lw	a2,4(s2)
    item->next = item->next->next;
     ea8:	00092683          	lw	a3,0(s2)
    item->info = ret->info;
     eac:	00c7a223          	sw	a2,4(a5)
    ret->info  = tmp;
     eb0:	00e92223          	sw	a4,4(s2)
    item->next = item->next->next;
     eb4:	00d7a023          	sw	a3,0(a5)
    if (info->idx >= 0)
     eb8:	00c12783          	lw	a5,12(sp)
    ret->next  = NULL;
     ebc:	00092023          	sw	zero,0(s2)
    if (info->idx >= 0)
     ec0:	1407c063          	bltz	a5,1000 <__stack_size>
        while (list && (list->info->idx != info->idx))
     ec4:	0044a783          	lw	a5,4(s1) # fffff004 <__freertos_irq_stack_top+0xfefef004>
     ec8:	00c12683          	lw	a3,12(sp)
     ecc:	00279783          	lh	a5,2(a5)
     ed0:	00d78a63          	beq	a5,a3,ee4 <core_bench_list+0x1a4>
            list = list->next;
     ed4:	0004a483          	lw	s1,0(s1)
        while (list && (list->info->idx != info->idx))
     ed8:	fe0496e3          	bnez	s1,ec4 <core_bench_list+0x184>
        finder = list->next;
     edc:	00042483          	lw	s1,0(s0)
    while (finder)
     ee0:	02048663          	beqz	s1,f0c <core_bench_list+0x1cc>
        retval = crc16(list->info->data16, retval);
     ee4:	00442783          	lw	a5,4(s0)
     ee8:	01c12583          	lw	a1,28(sp)
     eec:	00079503          	lh	a0,0(a5)
     ef0:	00002097          	auipc	ra,0x2
     ef4:	05c080e7          	jalr	92(ra) # 2f4c <crc16>
        finder = finder->next;
     ef8:	0004a483          	lw	s1,0(s1)
        retval = crc16(list->info->data16, retval);
     efc:	00a12e23          	sw	a0,28(sp)
    while (finder)
     f00:	fe0492e3          	bnez	s1,ee4 <core_bench_list+0x1a4>
     f04:	00042483          	lw	s1,0(s0)
     f08:	00492703          	lw	a4,4(s2)
    item_removed->info  = item_modified->info;
     f0c:	0044a683          	lw	a3,4(s1)
    item_removed->next  = item_modified->next;
     f10:	0004a783          	lw	a5,0(s1)
core_list_mergesort(list_head *list, list_cmp cmp, core_results *res)
{
    list_head *p, *q, *e, *tail;
    ee_s32     insize, nmerges, psize, qsize, i;

    insize = 1;
     f14:	00100e13          	li	t3,1
    item_removed->info  = item_modified->info;
     f18:	00d92223          	sw	a3,4(s2)
    item_modified->info = tmp;
     f1c:	00e4a223          	sw	a4,4(s1)
    item_removed->next  = item_modified->next;
     f20:	00f92023          	sw	a5,0(s2)
    item_modified->next = item_removed;
     f24:	0124a023          	sw	s2,0(s1)

    while (1)
    {
        p    = list;
        list = NULL;
        tail = NULL;
     f28:	00000313          	li	t1,0
        list = NULL;
     f2c:	00000493          	li	s1,0

        nmerges = 0; /* count number of merges we do in this pass */
     f30:	00000e93          	li	t4,0
        }

        tail->next = NULL;

        /* If we have done only one merge, we're finished. */
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	00100f93          	li	t6,1
            nmerges++; /* there exists a merge to be done */
     f38:	001e8e93          	addi	t4,t4,1
     f3c:	00040693          	mv	a3,s0
            psize = 0;
     f40:	00000793          	li	a5,0
                q = q->next;
     f44:	0006a683          	lw	a3,0(a3)
                psize++;
     f48:	00178793          	addi	a5,a5,1
                if (!q)
     f4c:	00068663          	beqz	a3,f58 <core_bench_list+0x218>
            for (i = 0; i < insize; i++)
     f50:	fefe1ae3          	bne	t3,a5,f44 <core_bench_list+0x204>
     f54:	000e0793          	mv	a5,t3
                    list = e;
     f58:	00040713          	mv	a4,s0
     f5c:	000e0613          	mv	a2,t3
     f60:	00068413          	mv	s0,a3
            while (psize > 0 || (qsize > 0 && q))
     f64:	06078c63          	beqz	a5,fdc <core_bench_list+0x29c>
                else if (qsize == 0 || !q)
     f68:	0a060e63          	beqz	a2,1024 <__stack_size+0x24>
     f6c:	0a040c63          	beqz	s0,1024 <__stack_size+0x24>
                else if (cmp(p->info, q->info, res) <= 0)
     f70:	00472803          	lw	a6,4(a4)
     f74:	00442503          	lw	a0,4(s0)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f78:	00081683          	lh	a3,0(a6)
    return a->idx - b->idx;
     f7c:	00251f03          	lh	t5,2(a0)
     f80:	00281583          	lh	a1,2(a6)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	01069893          	slli	a7,a3,0x10
     f88:	0108d893          	srli	a7,a7,0x10
     f8c:	f006f693          	andi	a3,a3,-256
     f90:	0088d893          	srli	a7,a7,0x8
     f94:	0116e6b3          	or	a3,a3,a7
     f98:	00d81023          	sh	a3,0(a6)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     f9c:	00051683          	lh	a3,0(a0)
    return a->idx - b->idx;
     fa0:	41e585b3          	sub	a1,a1,t5
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	01069813          	slli	a6,a3,0x10
     fa8:	01085813          	srli	a6,a6,0x10
     fac:	f006f693          	andi	a3,a3,-256
     fb0:	00885813          	srli	a6,a6,0x8
     fb4:	0106e6b3          	or	a3,a3,a6
     fb8:	00d51023          	sh	a3,0(a0)
                else if (cmp(p->info, q->info, res) <= 0)
     fbc:	06b05463          	blez	a1,1024 <__stack_size+0x24>
                    qsize--;
     fc0:	00040693          	mv	a3,s0
                    q = q->next;
     fc4:	00042403          	lw	s0,0(s0)
                    qsize--;
     fc8:	fff60613          	addi	a2,a2,-1
                if (tail)
     fcc:	02030463          	beqz	t1,ff4 <core_bench_list+0x2b4>
                    tail->next = e;
     fd0:	00d32023          	sw	a3,0(t1)
                    list = e;
     fd4:	00068313          	mv	t1,a3
            while (psize > 0 || (qsize > 0 && q))
     fd8:	f80798e3          	bnez	a5,f68 <core_bench_list+0x228>
     fdc:	04060c63          	beqz	a2,1034 <__stack_size+0x34>
     fe0:	04040c63          	beqz	s0,1038 <__stack_size+0x38>
                    qsize--;
     fe4:	00040693          	mv	a3,s0
     fe8:	fff60613          	addi	a2,a2,-1
                    q = q->next;
     fec:	00042403          	lw	s0,0(s0)
                if (tail)
     ff0:	fe0310e3          	bnez	t1,fd0 <core_bench_list+0x290>
                    list = e;
     ff4:	00068493          	mv	s1,a3
     ff8:	00068313          	mv	t1,a3
     ffc:	fddff06f          	j	fd8 <core_bench_list+0x298>
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1000:	0044a783          	lw	a5,4(s1)
    1004:	01412683          	lw	a3,20(sp)
    1008:	0007c783          	lbu	a5,0(a5)
    100c:	ecd78ce3          	beq	a5,a3,ee4 <core_bench_list+0x1a4>
            list = list->next;
    1010:	0004a483          	lw	s1,0(s1)
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1014:	fe0496e3          	bnez	s1,1000 <__stack_size>
        finder = list->next;
    1018:	00042483          	lw	s1,0(s0)
    while (finder)
    101c:	ec0494e3          	bnez	s1,ee4 <core_bench_list+0x1a4>
    1020:	eedff06f          	j	f0c <core_bench_list+0x1cc>
                    psize--;
    1024:	00070693          	mv	a3,a4
    1028:	fff78793          	addi	a5,a5,-1
                    p = p->next;
    102c:	00072703          	lw	a4,0(a4)
    1030:	f9dff06f          	j	fcc <core_bench_list+0x28c>
        while (p)
    1034:	f00412e3          	bnez	s0,f38 <core_bench_list+0x1f8>
        tail->next = NULL;
    1038:	00032023          	sw	zero,0(t1)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	07fe8e63          	beq	t4,t6,10b8 <__stack_size+0xb8>
            return list;

        /* Otherwise repeat, merging lists twice the size */
        insize *= 2;
    1040:	001e1e13          	slli	t3,t3,0x1
        while (p)
    1044:	28048663          	beqz	s1,12d0 <__stack_size+0x2d0>
    1048:	00048413          	mv	s0,s1
        nmerges = 0; /* count number of merges we do in this pass */
    104c:	00000e93          	li	t4,0
        tail = NULL;
    1050:	00000313          	li	t1,0
        list = NULL;
    1054:	00000493          	li	s1,0
    1058:	ee1ff06f          	j	f38 <core_bench_list+0x1f8>
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	36040663          	beqz	s0,13c8 <__stack_size+0x3c8>
    1060:	00442703          	lw	a4,4(s0)
    1064:	00040793          	mv	a5,s0
    1068:	00074703          	lbu	a4,0(a4)
    106c:	00e69c63          	bne	a3,a4,1084 <__stack_size+0x84>
    1070:	d75ff06f          	j	de4 <core_bench_list+0xa4>
    1074:	0047a703          	lw	a4,4(a5)
    1078:	01412683          	lw	a3,20(sp)
    107c:	00074703          	lbu	a4,0(a4)
    1080:	d6d702e3          	beq	a4,a3,de4 <core_bench_list+0xa4>
            list = list->next;
    1084:	0007a783          	lw	a5,0(a5)
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1088:	fe0796e3          	bnez	a5,1074 <__stack_size+0x74>
    108c:	d59ff06f          	j	de4 <core_bench_list+0xa4>
            retval += (list->next->info->data16 >> 8) & 1;
    1090:	0046a703          	lw	a4,4(a3)
            missed++;
    1094:	001e0793          	addi	a5,t3,1
    1098:	01079e13          	slli	t3,a5,0x10
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	00170703          	lb	a4,1(a4)
            missed++;
    10a0:	010e5e13          	srli	t3,t3,0x10
            retval += (list->next->info->data16 >> 8) & 1;
    10a4:	00177713          	andi	a4,a4,1
    10a8:	00e80733          	add	a4,a6,a4
    10ac:	01071813          	slli	a6,a4,0x10
    10b0:	01085813          	srli	a6,a6,0x10
    10b4:	d9dff06f          	j	e50 <core_bench_list+0x110>
    finder = list->next;
    10b8:	0004a403          	lw	s0,0(s1)
    while (finder)
    10bc:	30040263          	beqz	s0,13c0 <__stack_size+0x3c0>
        retval = crc16(list->info->data16, retval);
    10c0:	0044a783          	lw	a5,4(s1)
    10c4:	01c12583          	lw	a1,28(sp)
    10c8:	00079503          	lh	a0,0(a5)
    10cc:	00002097          	auipc	ra,0x2
    10d0:	e80080e7          	jalr	-384(ra) # 2f4c <crc16>
        finder = finder->next;
    10d4:	00042403          	lw	s0,0(s0)
        retval = crc16(list->info->data16, retval);
    10d8:	00a12e23          	sw	a0,28(sp)
    while (finder)
    10dc:	fe0412e3          	bnez	s0,10c0 <__stack_size+0xc0>
}
    10e0:	05c12083          	lw	ra,92(sp)
    10e4:	05812403          	lw	s0,88(sp)
    10e8:	05412483          	lw	s1,84(sp)
    10ec:	05012903          	lw	s2,80(sp)
    10f0:	04c12983          	lw	s3,76(sp)
    10f4:	04812a03          	lw	s4,72(sp)
    10f8:	04412a83          	lw	s5,68(sp)
    10fc:	04012b03          	lw	s6,64(sp)
    1100:	03c12b83          	lw	s7,60(sp)
    1104:	03812c03          	lw	s8,56(sp)
    1108:	03412c83          	lw	s9,52(sp)
    110c:	03012d03          	lw	s10,48(sp)
    1110:	02c12d83          	lw	s11,44(sp)
    1114:	06010113          	addi	sp,sp,96
    1118:	00008067          	ret
    info.idx = finder_idx;
    111c:	00b12623          	sw	a1,12(sp)
    1120:	00012e23          	sw	zero,28(sp)
    if (finder_idx > 0)
    1124:	d6b058e3          	blez	a1,e94 <core_bench_list+0x154>
        while (p)
    1128:	1a040463          	beqz	s0,12d0 <__stack_size+0x2d0>
    112c:	00100793          	li	a5,1
    1130:	00f12423          	sw	a5,8(sp)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	028c0793          	addi	a5,s8,40
    1138:	00f12c23          	sw	a5,24(sp)
        while (p)
    113c:	00040d13          	mv	s10,s0
        tail = NULL;
    1140:	00000913          	li	s2,0
        list = NULL;
    1144:	00000413          	li	s0,0
        nmerges = 0; /* count number of merges we do in this pass */
    1148:	00012823          	sw	zero,16(sp)
    114c:	00100a13          	li	s4,1
            nmerges++; /* there exists a merge to be done */
    1150:	01012783          	lw	a5,16(sp)
    1154:	000d0d93          	mv	s11,s10
            psize = 0;
    1158:	00000b93          	li	s7,0
            nmerges++; /* there exists a merge to be done */
    115c:	00178793          	addi	a5,a5,1
    1160:	00f12823          	sw	a5,16(sp)
                q = q->next;
    1164:	000dad83          	lw	s11,0(s11)
                psize++;
    1168:	001b8b93          	addi	s7,s7,1
                if (!q)
    116c:	000d8663          	beqz	s11,1178 <__stack_size+0x178>
            for (i = 0; i < insize; i++)
    1170:	00812783          	lw	a5,8(sp)
    1174:	fefb98e3          	bne	s7,a5,1164 <__stack_size+0x164>
                    list = e;
    1178:	00812c83          	lw	s9,8(sp)
            while (psize > 0 || (qsize > 0 && q))
    117c:	0e0b8c63          	beqz	s7,1274 <__stack_size+0x274>
                else if (qsize == 0 || !q)
    1180:	100c8c63          	beqz	s9,1298 <__stack_size+0x298>
    1184:	100d8a63          	beqz	s11,1298 <__stack_size+0x298>
                else if (cmp(p->info, q->info, res) <= 0)
    1188:	004d2a83          	lw	s5,4(s10)
    118c:	004da983          	lw	s3,4(s11)
    ee_s16 data = *pdata;
    1190:	000a9483          	lh	s1,0(s5)
    if (optype) /* if cached, use cache */
    1194:	0804f793          	andi	a5,s1,128
        return (data & 0x007f);
    1198:	07f4fb13          	andi	s6,s1,127
    if (optype) /* if cached, use cache */
    119c:	04079a63          	bnez	a5,11f0 <__stack_size+0x1f0>
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	4034d593          	srai	a1,s1,0x3
        ee_s16 dtype
    11a4:	00f5f593          	andi	a1,a1,15
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	00459793          	slli	a5,a1,0x4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ac:	0074f713          	andi	a4,s1,7
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	00f5e5b3          	or	a1,a1,a5
        switch (flag)
    11b4:	038c5783          	lhu	a5,56(s8)
    11b8:	1c070063          	beqz	a4,1378 <__stack_size+0x378>
    11bc:	19470863          	beq	a4,s4,134c <__stack_size+0x34c>
    11c0:	01049513          	slli	a0,s1,0x10
    11c4:	01055513          	srli	a0,a0,0x10
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	00048b13          	mv	s6,s1
        res->crc = crcu16(retval, res->crc);
    11cc:	00078593          	mv	a1,a5
    11d0:	00001097          	auipc	ra,0x1
    11d4:	5ec080e7          	jalr	1516(ra) # 27bc <crcu16>
        retval &= 0x007f;
    11d8:	07fb7b13          	andi	s6,s6,127
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11dc:	f004f893          	andi	a7,s1,-256
    11e0:	011b68b3          	or	a7,s6,a7
        res->crc = crcu16(retval, res->crc);
    11e4:	02ac1c23          	sh	a0,56(s8)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	0808e893          	ori	a7,a7,128
    11ec:	011a9023          	sh	a7,0(s5)
    ee_s16 data = *pdata;
    11f0:	00099a83          	lh	s5,0(s3)
    if (optype) /* if cached, use cache */
    11f4:	080af793          	andi	a5,s5,128
        return (data & 0x007f);
    11f8:	07faf493          	andi	s1,s5,127
    if (optype) /* if cached, use cache */
    11fc:	04079a63          	bnez	a5,1250 <__stack_size+0x250>
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	403ad593          	srai	a1,s5,0x3
        ee_s16 dtype
    1204:	00f5f593          	andi	a1,a1,15
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	00459793          	slli	a5,a1,0x4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120c:	007af713          	andi	a4,s5,7
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1210:	00f5e5b3          	or	a1,a1,a5
        switch (flag)
    1214:	038c5783          	lhu	a5,56(s8)
    1218:	0e070663          	beqz	a4,1304 <__stack_size+0x304>
    121c:	0b470e63          	beq	a4,s4,12d8 <__stack_size+0x2d8>
    1220:	010a9513          	slli	a0,s5,0x10
    1224:	01055513          	srli	a0,a0,0x10
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1228:	000a8493          	mv	s1,s5
        res->crc = crcu16(retval, res->crc);
    122c:	00078593          	mv	a1,a5
    1230:	00001097          	auipc	ra,0x1
    1234:	58c080e7          	jalr	1420(ra) # 27bc <crcu16>
        retval &= 0x007f;
    1238:	07f4f493          	andi	s1,s1,127
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123c:	f00af893          	andi	a7,s5,-256
    1240:	0114e8b3          	or	a7,s1,a7
        res->crc = crcu16(retval, res->crc);
    1244:	02ac1c23          	sh	a0,56(s8)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	0808e893          	ori	a7,a7,128
    124c:	01199023          	sh	a7,0(s3)
    return val1 - val2;
    1250:	409b04b3          	sub	s1,s6,s1
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	04905263          	blez	s1,1298 <__stack_size+0x298>
                    qsize--;
    1258:	000d8793          	mv	a5,s11
                    q = q->next;
    125c:	000dad83          	lw	s11,0(s11)
                    qsize--;
    1260:	fffc8c93          	addi	s9,s9,-1
                if (tail)
    1264:	02090463          	beqz	s2,128c <__stack_size+0x28c>
                    tail->next = e;
    1268:	00f92023          	sw	a5,0(s2)
                    list = e;
    126c:	00078913          	mv	s2,a5
            while (psize > 0 || (qsize > 0 && q))
    1270:	f00b98e3          	bnez	s7,1180 <__stack_size+0x180>
    1274:	020c8a63          	beqz	s9,12a8 <__stack_size+0x2a8>
    1278:	020d8c63          	beqz	s11,12b0 <__stack_size+0x2b0>
                    qsize--;
    127c:	000d8793          	mv	a5,s11
    1280:	fffc8c93          	addi	s9,s9,-1
                    q = q->next;
    1284:	000dad83          	lw	s11,0(s11)
                if (tail)
    1288:	fe0910e3          	bnez	s2,1268 <__stack_size+0x268>
                    list = e;
    128c:	00078413          	mv	s0,a5
    1290:	00078913          	mv	s2,a5
    1294:	fddff06f          	j	1270 <__stack_size+0x270>
                    psize--;
    1298:	000d0793          	mv	a5,s10
    129c:	fffb8b93          	addi	s7,s7,-1
                    p = p->next;
    12a0:	000d2d03          	lw	s10,0(s10)
    12a4:	fc1ff06f          	j	1264 <__stack_size+0x264>
    12a8:	000d8d13          	mv	s10,s11
        while (p)
    12ac:	ea0d92e3          	bnez	s11,1150 <__stack_size+0x150>
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b0:	01012703          	lw	a4,16(sp)
        tail->next = NULL;
    12b4:	00092023          	sw	zero,0(s2)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b8:	00100793          	li	a5,1
    12bc:	bcf70ce3          	beq	a4,a5,e94 <core_bench_list+0x154>
        insize *= 2;
    12c0:	00812783          	lw	a5,8(sp)
    12c4:	00179793          	slli	a5,a5,0x1
    12c8:	00f12423          	sw	a5,8(sp)
        while (p)
    12cc:	e60418e3          	bnez	s0,113c <__stack_size+0x13c>
        tail->next = NULL;
    12d0:	00002023          	sw	zero,0(zero) # 0 <_start>
    12d4:	00100073          	ebreak
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	01812503          	lw	a0,24(sp)
    12dc:	00078613          	mv	a2,a5
    12e0:	00001097          	auipc	ra,0x1
    12e4:	a68080e7          	jalr	-1432(ra) # 1d48 <core_bench_matrix>
                if (res->crcmatrix == 0)
    12e8:	03cc5783          	lhu	a5,60(s8)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	01051493          	slli	s1,a0,0x10
    12f0:	4104d493          	srai	s1,s1,0x10
                if (res->crcmatrix == 0)
    12f4:	04079863          	bnez	a5,1344 <__stack_size+0x344>
                    res->crcmatrix = retval;
    12f8:	038c5783          	lhu	a5,56(s8)
    12fc:	02ac1e23          	sh	a0,60(s8)
    1300:	f2dff06f          	j	122c <__stack_size+0x22c>
                retval = core_bench_state(res->size,
    1304:	02200693          	li	a3,34
    1308:	00058713          	mv	a4,a1
    130c:	00d5d463          	bge	a1,a3,1314 <__stack_size+0x314>
    1310:	02200713          	li	a4,34
    1314:	002c1683          	lh	a3,2(s8)
    1318:	000c1603          	lh	a2,0(s8)
    131c:	014c2583          	lw	a1,20(s8)
    1320:	018c2503          	lw	a0,24(s8)
    1324:	0ff77713          	andi	a4,a4,255
    1328:	00001097          	auipc	ra,0x1
    132c:	224080e7          	jalr	548(ra) # 254c <core_bench_state>
                if (res->crcstate == 0)
    1330:	03ec5783          	lhu	a5,62(s8)
                retval = core_bench_state(res->size,
    1334:	01051493          	slli	s1,a0,0x10
    1338:	4104d493          	srai	s1,s1,0x10
                if (res->crcstate == 0)
    133c:	00079463          	bnez	a5,1344 <__stack_size+0x344>
                    res->crcstate = retval;
    1340:	02ac1f23          	sh	a0,62(s8)
    1344:	038c5783          	lhu	a5,56(s8)
    1348:	ee5ff06f          	j	122c <__stack_size+0x22c>
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134c:	01812503          	lw	a0,24(sp)
    1350:	00078613          	mv	a2,a5
    1354:	00001097          	auipc	ra,0x1
    1358:	9f4080e7          	jalr	-1548(ra) # 1d48 <core_bench_matrix>
                if (res->crcmatrix == 0)
    135c:	03cc5783          	lhu	a5,60(s8)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	01051b13          	slli	s6,a0,0x10
    1364:	410b5b13          	srai	s6,s6,0x10
                if (res->crcmatrix == 0)
    1368:	04079863          	bnez	a5,13b8 <__stack_size+0x3b8>
                    res->crcmatrix = retval;
    136c:	038c5783          	lhu	a5,56(s8)
    1370:	02ac1e23          	sh	a0,60(s8)
    1374:	e59ff06f          	j	11cc <__stack_size+0x1cc>
                retval = core_bench_state(res->size,
    1378:	02200693          	li	a3,34
    137c:	00058713          	mv	a4,a1
    1380:	00d5d463          	bge	a1,a3,1388 <__stack_size+0x388>
    1384:	02200713          	li	a4,34
    1388:	002c1683          	lh	a3,2(s8)
    138c:	000c1603          	lh	a2,0(s8)
    1390:	014c2583          	lw	a1,20(s8)
    1394:	018c2503          	lw	a0,24(s8)
    1398:	0ff77713          	andi	a4,a4,255
    139c:	00001097          	auipc	ra,0x1
    13a0:	1b0080e7          	jalr	432(ra) # 254c <core_bench_state>
                if (res->crcstate == 0)
    13a4:	03ec5783          	lhu	a5,62(s8)
                retval = core_bench_state(res->size,
    13a8:	01051b13          	slli	s6,a0,0x10
    13ac:	410b5b13          	srai	s6,s6,0x10
                if (res->crcstate == 0)
    13b0:	00079463          	bnez	a5,13b8 <__stack_size+0x3b8>
                    res->crcstate = retval;
    13b4:	02ac1f23          	sh	a0,62(s8)
    13b8:	038c5783          	lhu	a5,56(s8)
    13bc:	e11ff06f          	j	11cc <__stack_size+0x1cc>
    13c0:	01c12503          	lw	a0,28(sp)
    13c4:	d1dff06f          	j	10e0 <__stack_size+0xe0>
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	00002783          	lw	a5,0(zero) # 0 <_start>
    13cc:	00100073          	ebreak

000013d0 <core_list_init>:
{
    13d0:	ff010113          	addi	sp,sp,-16
    13d4:	00912223          	sw	s1,4(sp)
    13d8:	00050493          	mv	s1,a0
    printf("start test41\n");
    13dc:	01000537          	lui	a0,0x1000
    13e0:	00050513          	mv	a0,a0
{
    13e4:	00112623          	sw	ra,12(sp)
    13e8:	00812423          	sw	s0,8(sp)
    13ec:	01212023          	sw	s2,0(sp)
    13f0:	00058413          	mv	s0,a1
    13f4:	00060913          	mv	s2,a2
    printf("start test41\n");
    13f8:	00005097          	auipc	ra,0x5
    13fc:	cac080e7          	jalr	-852(ra) # 60a4 <puts>
    ee_u32 size     = (blksize / per_item)
    1400:	01400593          	li	a1,20
    1404:	00048513          	mv	a0,s1
    1408:	00004097          	auipc	ra,0x4
    140c:	880080e7          	jalr	-1920(ra) # 4c88 <__udivsi3>
    1410:	ffe50513          	addi	a0,a0,-2 # fffffe <_data_lma+0xff4e86>
    list_head *memblock_end  = memblock + size;
    1414:	00351313          	slli	t1,a0,0x3
    1418:	00640333          	add	t1,s0,t1
    list->info->data16 = (ee_s16)0x8080;
    141c:	ffff87b7          	lui	a5,0xffff8
    list->next         = NULL;
    1420:	00042023          	sw	zero,0(s0)
    list->info         = datablock;
    1424:	00642223          	sw	t1,4(s0)
    list->info->data16 = (ee_s16)0x8080;
    1428:	08078713          	addi	a4,a5,128 # ffff8080 <__freertos_irq_stack_top+0xfefe8080>
    list_data *datablock_end = datablock + size;
    142c:	00251613          	slli	a2,a0,0x2
    list->info->data16 = (ee_s16)0x8080;
    1430:	00e31023          	sh	a4,0(t1)
    list->info->idx    = 0x0000;
    1434:	00031123          	sh	zero,2(t1)
    if ((*memblock + 1) >= memblock_end)
    1438:	01040713          	addi	a4,s0,16
    list_data *datablock_end = datablock + size;
    143c:	00c30633          	add	a2,t1,a2
    memblock++;
    1440:	00840493          	addi	s1,s0,8
    datablock++;
    1444:	00430593          	addi	a1,t1,4
    if ((*memblock + 1) >= memblock_end)
    1448:	22677a63          	bgeu	a4,t1,167c <core_list_init+0x2ac>
    if ((*datablock + 1) >= datablock_end)
    144c:	00830693          	addi	a3,t1,8
    1450:	22c6f663          	bgeu	a3,a2,167c <core_list_init+0x2ac>
    newitem->info = *datablock;
    1454:	00b42623          	sw	a1,12(s0)
    newitem->next      = insert_point->next;
    1458:	00042423          	sw	zero,8(s0)
    insert_point->next = newitem;
    145c:	00942023          	sw	s1,0(s0)
    to->idx    = from->idx;
    1460:	fff7c793          	not	a5,a5
    to->data16 = from->data16;
    1464:	fff00593          	li	a1,-1
    1468:	00b31223          	sh	a1,4(t1)
    to->idx    = from->idx;
    146c:	00f31323          	sh	a5,6(t1)
    for (i = 0; i < size; i++)
    1470:	06050a63          	beqz	a0,14e4 <core_list_init+0x114>
    1474:	01091f13          	slli	t5,s2,0x10
    to->idx    = from->idx;
    1478:	ffff8eb7          	lui	t4,0xffff8
    147c:	010f5f13          	srli	t5,t5,0x10
    for (i = 0; i < size; i++)
    1480:	00000593          	li	a1,0
    to->idx    = from->idx;
    1484:	fffece93          	not	t4,t4
    if ((*memblock + 1) >= memblock_end)
    1488:	00870893          	addi	a7,a4,8
    148c:	0468f863          	bgeu	a7,t1,14dc <core_list_init+0x10c>
    if ((*datablock + 1) >= datablock_end)
    1490:	00468e13          	addi	t3,a3,4
    1494:	04ce7463          	bgeu	t3,a2,14dc <core_list_init+0x10c>
    1498:	01059813          	slli	a6,a1,0x10
    149c:	01085813          	srli	a6,a6,0x10
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a0:	01e847b3          	xor	a5,a6,t5
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a4:	00379793          	slli	a5,a5,0x3
    14a8:	00787813          	andi	a6,a6,7
    14ac:	0787f793          	andi	a5,a5,120
    newitem->next      = insert_point->next;
    14b0:	00972023          	sw	s1,0(a4)
        ee_u16 dat
    14b4:	0107e7b3          	or	a5,a5,a6
    insert_point->next = newitem;
    14b8:	00e42023          	sw	a4,0(s0)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14bc:	00879813          	slli	a6,a5,0x8
    newitem->info = *datablock;
    14c0:	00d72223          	sw	a3,4(a4)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c4:	00f867b3          	or	a5,a6,a5
    to->data16 = from->data16;
    14c8:	00f69023          	sh	a5,0(a3)
    to->idx    = from->idx;
    14cc:	01d69123          	sh	t4,2(a3)
    14d0:	00070493          	mv	s1,a4
    14d4:	000e0693          	mv	a3,t3
    14d8:	00088713          	mv	a4,a7
    for (i = 0; i < size; i++)
    14dc:	00158593          	addi	a1,a1,1
    14e0:	fab514e3          	bne	a0,a1,1488 <core_list_init+0xb8>
    while (finder->next != NULL)
    14e4:	0004a783          	lw	a5,0(s1)
    14e8:	02078c63          	beqz	a5,1520 <core_list_init+0x150>
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	00500593          	li	a1,5
    14f0:	00003097          	auipc	ra,0x3
    14f4:	798080e7          	jalr	1944(ra) # 4c88 <__udivsi3>
                                & (((i & 0x07) << 8)
    14f8:	000045b7          	lui	a1,0x4
        if (i < size / 5) /* first 20% of the list in order */
    14fc:	00100713          	li	a4,1
                                & (((i & 0x07) << 8)
    1500:	fff58593          	addi	a1,a1,-1 # 3fff <__divdf3+0x723>
        if (i < size / 5) /* first 20% of the list in order */
    1504:	0044a603          	lw	a2,4(s1)
    1508:	12a77063          	bgeu	a4,a0,1628 <core_list_init+0x258>
        finder = finder->next;
    150c:	0004a483          	lw	s1,0(s1)
            finder->info->idx = i++;
    1510:	00e61123          	sh	a4,2(a2)
        finder = finder->next;
    1514:	00170713          	addi	a4,a4,1
    while (finder->next != NULL)
    1518:	0004a783          	lw	a5,0(s1)
    151c:	fe0794e3          	bnez	a5,1504 <core_list_init+0x134>
    insize = 1;
    1520:	00100f13          	li	t5,1
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	00100293          	li	t0,1
    insize = 1;
    1528:	00040793          	mv	a5,s0
        tail = NULL;
    152c:	00000513          	li	a0,0
        list = NULL;
    1530:	00000413          	li	s0,0
        nmerges = 0; /* count number of merges we do in this pass */
    1534:	00000e93          	li	t4,0
            nmerges++; /* there exists a merge to be done */
    1538:	001e8e93          	addi	t4,t4,1 # ffff8001 <__freertos_irq_stack_top+0xfefe8001>
    153c:	00078593          	mv	a1,a5
            psize = 0;
    1540:	00000713          	li	a4,0
                q = q->next;
    1544:	0005a583          	lw	a1,0(a1)
                psize++;
    1548:	00170713          	addi	a4,a4,1
                if (!q)
    154c:	00058463          	beqz	a1,1554 <core_list_init+0x184>
            for (i = 0; i < insize; i++)
    1550:	ffe71ae3          	bne	a4,t5,1544 <core_list_init+0x174>
                    list = e;
    1554:	00078693          	mv	a3,a5
    1558:	000f0613          	mv	a2,t5
    155c:	00058793          	mv	a5,a1
            while (psize > 0 || (qsize > 0 && q))
    1560:	06070c63          	beqz	a4,15d8 <core_list_init+0x208>
                else if (qsize == 0 || !q)
    1564:	08060c63          	beqz	a2,15fc <core_list_init+0x22c>
    1568:	08078a63          	beqz	a5,15fc <core_list_init+0x22c>
                else if (cmp(p->info, q->info, res) <= 0)
    156c:	0046a303          	lw	t1,4(a3)
    1570:	0047a883          	lw	a7,4(a5)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	00031583          	lh	a1,0(t1)
    return a->idx - b->idx;
    1578:	00289f83          	lh	t6,2(a7)
    157c:	00231803          	lh	a6,2(t1)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1580:	01059e13          	slli	t3,a1,0x10
    1584:	010e5e13          	srli	t3,t3,0x10
    1588:	f005f593          	andi	a1,a1,-256
    158c:	008e5e13          	srli	t3,t3,0x8
    1590:	01c5e5b3          	or	a1,a1,t3
    1594:	00b31023          	sh	a1,0(t1)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1598:	00089583          	lh	a1,0(a7)
    return a->idx - b->idx;
    159c:	41f80833          	sub	a6,a6,t6
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	01059313          	slli	t1,a1,0x10
    15a4:	01035313          	srli	t1,t1,0x10
    15a8:	f005f593          	andi	a1,a1,-256
    15ac:	00835313          	srli	t1,t1,0x8
    15b0:	0065e5b3          	or	a1,a1,t1
    15b4:	00b89023          	sh	a1,0(a7)
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	05005263          	blez	a6,15fc <core_list_init+0x22c>
                    qsize--;
    15bc:	00078593          	mv	a1,a5
                    q = q->next;
    15c0:	0007a783          	lw	a5,0(a5)
                    qsize--;
    15c4:	fff60613          	addi	a2,a2,-1
                if (tail)
    15c8:	02050463          	beqz	a0,15f0 <core_list_init+0x220>
                    tail->next = e;
    15cc:	00b52023          	sw	a1,0(a0)
                    list = e;
    15d0:	00058513          	mv	a0,a1
            while (psize > 0 || (qsize > 0 && q))
    15d4:	f80718e3          	bnez	a4,1564 <core_list_init+0x194>
    15d8:	02060a63          	beqz	a2,160c <core_list_init+0x23c>
    15dc:	02078a63          	beqz	a5,1610 <core_list_init+0x240>
                    qsize--;
    15e0:	00078593          	mv	a1,a5
    15e4:	fff60613          	addi	a2,a2,-1
                    q = q->next;
    15e8:	0007a783          	lw	a5,0(a5)
                if (tail)
    15ec:	fe0510e3          	bnez	a0,15cc <core_list_init+0x1fc>
                    list = e;
    15f0:	00058413          	mv	s0,a1
    15f4:	00058513          	mv	a0,a1
    15f8:	fddff06f          	j	15d4 <core_list_init+0x204>
                    psize--;
    15fc:	00068593          	mv	a1,a3
    1600:	fff70713          	addi	a4,a4,-1
                    p = p->next;
    1604:	0006a683          	lw	a3,0(a3)
    1608:	fc1ff06f          	j	15c8 <core_list_init+0x1f8>
        while (p)
    160c:	f20796e3          	bnez	a5,1538 <core_list_init+0x168>
        tail->next = NULL;
    1610:	00052023          	sw	zero,0(a0)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1614:	045e8663          	beq	t4,t0,1660 <core_list_init+0x290>
        insize *= 2;
    1618:	001f1f13          	slli	t5,t5,0x1
        while (p)
    161c:	f00416e3          	bnez	s0,1528 <core_list_init+0x158>
        tail->next = NULL;
    1620:	00002023          	sw	zero,0(zero) # 0 <_start>
    1624:	00100073          	ebreak
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1628:	01071693          	slli	a3,a4,0x10
    162c:	0106d693          	srli	a3,a3,0x10
                                & (((i & 0x07) << 8)
    1630:	00168793          	addi	a5,a3,1
        finder = finder->next;
    1634:	0004a483          	lw	s1,0(s1)
                                & (((i & 0x07) << 8)
    1638:	00879793          	slli	a5,a5,0x8
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163c:	0126c6b3          	xor	a3,a3,s2
                                & (((i & 0x07) << 8)
    1640:	7007f793          	andi	a5,a5,1792
                                   | pat); /* make sure the mixed items end up
    1644:	00d7e7b3          	or	a5,a5,a3
    while (finder->next != NULL)
    1648:	0004a683          	lw	a3,0(s1)
                                & (((i & 0x07) << 8)
    164c:	00b7f7b3          	and	a5,a5,a1
            finder->info->idx = 0x3fff
    1650:	00f61123          	sh	a5,2(a2)
        finder = finder->next;
    1654:	00170713          	addi	a4,a4,1
    while (finder->next != NULL)
    1658:	ea0696e3          	bnez	a3,1504 <core_list_init+0x134>
    165c:	ec5ff06f          	j	1520 <core_list_init+0x150>
}
    1660:	00040513          	mv	a0,s0
    1664:	00c12083          	lw	ra,12(sp)
    1668:	00812403          	lw	s0,8(sp)
    166c:	00412483          	lw	s1,4(sp)
    1670:	00012903          	lw	s2,0(sp)
    1674:	01010113          	addi	sp,sp,16
    1678:	00008067          	ret
    memblock++;
    167c:	00048713          	mv	a4,s1
    datablock++;
    1680:	00058693          	mv	a3,a1
    if ((*datablock + 1) >= datablock_end)
    1684:	00000493          	li	s1,0
    1688:	de9ff06f          	j	1470 <core_list_init+0xa0>

0000168c <iterate>:
{
    168c:	ff010113          	addi	sp,sp,-16
    1690:	01212023          	sw	s2,0(sp)
    ee_u32        iterations = res->iterations;
    1694:	01c52903          	lw	s2,28(a0)
{
    1698:	00812423          	sw	s0,8(sp)
    169c:	00912223          	sw	s1,4(sp)
    16a0:	00112623          	sw	ra,12(sp)
    res->crc                 = 0;
    16a4:	02052c23          	sw	zero,56(a0)
    16a8:	02052e23          	sw	zero,60(a0)
{
    16ac:	00050413          	mv	s0,a0
    for (i = 0; i < iterations; i++)
    16b0:	00000493          	li	s1,0
    16b4:	04090863          	beqz	s2,1704 <iterate+0x78>
        crc      = core_bench_list(res, 1);
    16b8:	00100593          	li	a1,1
    16bc:	00040513          	mv	a0,s0
    16c0:	fffff097          	auipc	ra,0xfffff
    16c4:	680080e7          	jalr	1664(ra) # d40 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
    16c8:	03845583          	lhu	a1,56(s0)
    16cc:	00001097          	auipc	ra,0x1
    16d0:	0f0080e7          	jalr	240(ra) # 27bc <crcu16>
    16d4:	02a41c23          	sh	a0,56(s0)
        crc      = core_bench_list(res, -1);
    16d8:	fff00593          	li	a1,-1
    16dc:	00040513          	mv	a0,s0
    16e0:	fffff097          	auipc	ra,0xfffff
    16e4:	660080e7          	jalr	1632(ra) # d40 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
    16e8:	03845583          	lhu	a1,56(s0)
    16ec:	00001097          	auipc	ra,0x1
    16f0:	0d0080e7          	jalr	208(ra) # 27bc <crcu16>
    16f4:	02a41c23          	sh	a0,56(s0)
        if (i == 0)
    16f8:	02048463          	beqz	s1,1720 <iterate+0x94>
    for (i = 0; i < iterations; i++)
    16fc:	00148493          	addi	s1,s1,1
    1700:	fa991ce3          	bne	s2,s1,16b8 <iterate+0x2c>
}
    1704:	00c12083          	lw	ra,12(sp)
    1708:	00812403          	lw	s0,8(sp)
    170c:	00412483          	lw	s1,4(sp)
    1710:	00012903          	lw	s2,0(sp)
    1714:	00000513          	li	a0,0
    1718:	01010113          	addi	sp,sp,16
    171c:	00008067          	ret
            res->crclist = res->crc;
    1720:	02a41d23          	sh	a0,58(s0)
    for (i = 0; i < iterations; i++)
    1724:	00100793          	li	a5,1
    1728:	fcf90ee3          	beq	s2,a5,1704 <iterate+0x78>
    172c:	00100493          	li	s1,1
    1730:	f89ff06f          	j	16b8 <iterate+0x2c>

00001734 <matrix_test>:

        After the last step, matrix A is back to original contents.
*/
ee_s16
matrix_test(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B, MATDAT val)
{
    1734:	f9010113          	addi	sp,sp,-112
    1738:	06812423          	sw	s0,104(sp)
    173c:	06112623          	sw	ra,108(sp)
    ee_u16 crc     = 0;
    MATDAT clipval = matrix_big(val);
    1740:	fffff437          	lui	s0,0xfffff
{
    1744:	06912223          	sw	s1,100(sp)
    1748:	07212023          	sw	s2,96(sp)
    174c:	05312e23          	sw	s3,92(sp)
    1750:	05412c23          	sw	s4,88(sp)
    1754:	05512a23          	sw	s5,84(sp)
    1758:	05612823          	sw	s6,80(sp)
    175c:	05712623          	sw	s7,76(sp)
    1760:	05812423          	sw	s8,72(sp)
    1764:	05912223          	sw	s9,68(sp)
    1768:	05a12023          	sw	s10,64(sp)
    176c:	03b12e23          	sw	s11,60(sp)
    1770:	02b12223          	sw	a1,36(sp)
    1774:	02c12423          	sw	a2,40(sp)
    1778:	00d12623          	sw	a3,12(sp)
    MATDAT clipval = matrix_big(val);
    177c:	00876433          	or	s0,a4,s0
*/
void
matrix_add_const(ee_u32 N, MATDAT *A, MATDAT val)
{
    ee_u32 i, j;
    for (i = 0; i < N; i++)
    1780:	58050463          	beqz	a0,1d08 <matrix_test+0x5d4>
    1784:	40a005b3          	neg	a1,a0
    1788:	00151493          	slli	s1,a0,0x1
    178c:	00159793          	slli	a5,a1,0x1
    1790:	009609b3          	add	s3,a2,s1
    1794:	01071913          	slli	s2,a4,0x10
    1798:	00070a13          	mv	s4,a4
    179c:	00050813          	mv	a6,a0
    17a0:	01095913          	srli	s2,s2,0x10
    17a4:	00c12a23          	sw	a2,20(sp)
    17a8:	00078c93          	mv	s9,a5
    17ac:	00098693          	mv	a3,s3
    17b0:	00000b13          	li	s6,0
    17b4:	00259593          	slli	a1,a1,0x2
    17b8:	00dc8633          	add	a2,s9,a3
{
    17bc:	00060793          	mv	a5,a2
    {
        for (j = 0; j < N; j++)
        {
            A[i * N + j] += val;
    17c0:	0007d703          	lhu	a4,0(a5)
    17c4:	00278793          	addi	a5,a5,2
    17c8:	00e90733          	add	a4,s2,a4
    17cc:	fee79f23          	sh	a4,-2(a5)
        for (j = 0; j < N; j++)
    17d0:	fed798e3          	bne	a5,a3,17c0 <matrix_test+0x8c>
    for (i = 0; i < N; i++)
    17d4:	001b0c13          	addi	s8,s6,1
    17d8:	40b606b3          	sub	a3,a2,a1
    17dc:	01880663          	beq	a6,s8,17e8 <matrix_test+0xb4>
    17e0:	000c0b13          	mv	s6,s8
    17e4:	fd5ff06f          	j	17b8 <matrix_test+0x84>
    17e8:	02412d03          	lw	s10,36(sp)
    17ec:	418007b3          	neg	a5,s8
    17f0:	02f12023          	sw	a5,32(sp)
    17f4:	002c1713          	slli	a4,s8,0x2
    17f8:	00279793          	slli	a5,a5,0x2
    17fc:	00e12423          	sw	a4,8(sp)
    1800:	01a12c23          	sw	s10,24(sp)
    for (i = 0; i < N; i++)
    1804:	00012e23          	sw	zero,28(sp)
    1808:	00f12823          	sw	a5,16(sp)
    180c:	013c8db3          	add	s11,s9,s3
    for (i = 0; i < N; i++)
    1810:	000d0b93          	mv	s7,s10
    1814:	000d8a93          	mv	s5,s11
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    1818:	000a9503          	lh	a0,0(s5)
    181c:	000a0593          	mv	a1,s4
    1820:	002a8a93          	addi	s5,s5,2
    1824:	00003097          	auipc	ra,0x3
    1828:	438080e7          	jalr	1080(ra) # 4c5c <__mulsi3>
    182c:	00aba023          	sw	a0,0(s7)
    1830:	004b8b93          	addi	s7,s7,4
        for (j = 0; j < N; j++)
    1834:	ff3a92e3          	bne	s5,s3,1818 <matrix_test+0xe4>
    1838:	00812683          	lw	a3,8(sp)
    for (i = 0; i < N; i++)
    183c:	01c12783          	lw	a5,28(sp)
    1840:	00dd0d33          	add	s10,s10,a3
    1844:	01012683          	lw	a3,16(sp)
    1848:	00178713          	addi	a4,a5,1
    184c:	40dd89b3          	sub	s3,s11,a3
    1850:	01678663          	beq	a5,s6,185c <matrix_test+0x128>
    1854:	00e12e23          	sw	a4,28(sp)
    1858:	fb5ff06f          	j	180c <matrix_test+0xd8>
    185c:	02412783          	lw	a5,36(sp)
    1860:	00812703          	lw	a4,8(sp)
    ee_s16 ret = 0;
    1864:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1868:	00000593          	li	a1,0
    186c:	00e78a33          	add	s4,a5,a4
    1870:	02012783          	lw	a5,32(sp)
    for (i = 0; i < N; i++)
    1874:	000a0893          	mv	a7,s4
    MATRES tmp = 0, prev = 0, cur = 0;
    1878:	00000713          	li	a4,0
    for (i = 0; i < N; i++)
    187c:	00000e13          	li	t3,0
    1880:	00379e93          	slli	t4,a5,0x3
    1884:	01012783          	lw	a5,16(sp)
    1888:	01178333          	add	t1,a5,a7
    188c:	00030613          	mv	a2,t1
    1890:	0180006f          	j	18a8 <matrix_test+0x174>
                ret += (cur > prev) ? 1 : 0;
    1894:	01051513          	slli	a0,a0,0x10
    1898:	00460613          	addi	a2,a2,4
    189c:	41055513          	srai	a0,a0,0x10
            cur = C[i * N + j];
    18a0:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    18a4:	03160e63          	beq	a2,a7,18e0 <matrix_test+0x1ac>
            cur = C[i * N + j];
    18a8:	00062683          	lw	a3,0(a2)
            tmp += cur;
    18ac:	01051513          	slli	a0,a0,0x10
    18b0:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    18b4:	00d72733          	slt	a4,a4,a3
            tmp += cur;
    18b8:	00d585b3          	add	a1,a1,a3
                ret += 10;
    18bc:	00a50813          	addi	a6,a0,10
                ret += (cur > prev) ? 1 : 0;
    18c0:	00e50533          	add	a0,a0,a4
            if (tmp > clipval)
    18c4:	fcb458e3          	bge	s0,a1,1894 <matrix_test+0x160>
                ret += 10;
    18c8:	01081513          	slli	a0,a6,0x10
    18cc:	00460613          	addi	a2,a2,4
    18d0:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    18d4:	00000593          	li	a1,0
            cur = C[i * N + j];
    18d8:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    18dc:	fd1616e3          	bne	a2,a7,18a8 <matrix_test+0x174>
    for (i = 0; i < N; i++)
    18e0:	001e0613          	addi	a2,t3,1
    18e4:	41d308b3          	sub	a7,t1,t4
    18e8:	01cb0663          	beq	s6,t3,18f4 <matrix_test+0x1c0>
    18ec:	00060e13          	mv	t3,a2
    18f0:	f95ff06f          	j	1884 <matrix_test+0x150>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    18f4:	00000593          	li	a1,0
    18f8:	00001097          	auipc	ra,0x1
    18fc:	654080e7          	jalr	1620(ra) # 2f4c <crc16>
    1900:	02412b03          	lw	s6,36(sp)
    1904:	00812603          	lw	a2,8(sp)
    1908:	00050d93          	mv	s11,a0
*/
void
matrix_mul_vect(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B)
{
    ee_u32 i, j;
    for (i = 0; i < N; i++)
    190c:	00000593          	li	a1,0
    1910:	000b0513          	mv	a0,s6
    1914:	00003097          	auipc	ra,0x3
    1918:	4b4080e7          	jalr	1204(ra) # 4dc8 <memset>
    191c:	00c12783          	lw	a5,12(sp)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1920:	02812d03          	lw	s10,40(sp)
    1924:	009789b3          	add	s3,a5,s1
    1928:	00c12c83          	lw	s9,12(sp)
    192c:	000d0b93          	mv	s7,s10
    1930:	00000a93          	li	s5,0
    {
        C[i] = 0;
        for (j = 0; j < N; j++)
        {
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    1934:	000c9583          	lh	a1,0(s9)
    1938:	000b9503          	lh	a0,0(s7)
    193c:	002c8c93          	addi	s9,s9,2
    1940:	002b8b93          	addi	s7,s7,2
    1944:	00003097          	auipc	ra,0x3
    1948:	318080e7          	jalr	792(ra) # 4c5c <__mulsi3>
    194c:	00aa8ab3          	add	s5,s5,a0
        for (j = 0; j < N; j++)
    1950:	ff9992e3          	bne	s3,s9,1934 <matrix_test+0x200>
    1954:	015b2023          	sw	s5,0(s6)
    1958:	004b0b13          	addi	s6,s6,4
    195c:	009d0d33          	add	s10,s10,s1
    for (i = 0; i < N; i++)
    1960:	fd6a14e3          	bne	s4,s6,1928 <matrix_test+0x1f4>
    1964:	02412e03          	lw	t3,36(sp)
    ee_s16 ret = 0;
    1968:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    196c:	00000713          	li	a4,0
    1970:	00000613          	li	a2,0
    for (i = 0; i < N; i++)
    1974:	00000313          	li	t1,0
    1978:	000e0813          	mv	a6,t3
        for (j = 0; j < N; j++)
    197c:	00000593          	li	a1,0
    1980:	01c0006f          	j	199c <matrix_test+0x268>
                ret += (cur > prev) ? 1 : 0;
    1984:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1988:	00158593          	addi	a1,a1,1
                ret += (cur > prev) ? 1 : 0;
    198c:	41055513          	srai	a0,a0,0x10
            prev = cur;
    1990:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    1994:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    1998:	0585f063          	bgeu	a1,s8,19d8 <matrix_test+0x2a4>
            cur = C[i * N + j];
    199c:	00082683          	lw	a3,0(a6)
            tmp += cur;
    19a0:	01051513          	slli	a0,a0,0x10
    19a4:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    19a8:	00d72733          	slt	a4,a4,a3
            tmp += cur;
    19ac:	00d60633          	add	a2,a2,a3
                ret += 10;
    19b0:	00a50893          	addi	a7,a0,10
                ret += (cur > prev) ? 1 : 0;
    19b4:	00e50533          	add	a0,a0,a4
            if (tmp > clipval)
    19b8:	fcc456e3          	bge	s0,a2,1984 <matrix_test+0x250>
                ret += 10;
    19bc:	01089513          	slli	a0,a7,0x10
        for (j = 0; j < N; j++)
    19c0:	00158593          	addi	a1,a1,1
                ret += 10;
    19c4:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    19c8:	00000613          	li	a2,0
            prev = cur;
    19cc:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    19d0:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    19d4:	fd85e4e3          	bltu	a1,s8,199c <matrix_test+0x268>
    19d8:	00812783          	lw	a5,8(sp)
    for (i = 0; i < N; i++)
    19dc:	00130313          	addi	t1,t1,1
    19e0:	00fe0e33          	add	t3,t3,a5
    19e4:	f9836ae3          	bltu	t1,s8,1978 <matrix_test+0x244>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19e8:	000d8593          	mv	a1,s11
    19ec:	00001097          	auipc	ra,0x1
    19f0:	560080e7          	jalr	1376(ra) # 2f4c <crc16>
    ee_u32 i, j, k;
    for (i = 0; i < N; i++)
    {
        for (j = 0; j < N; j++)
        {
            C[i * N + j] = 0;
    19f4:	00400793          	li	a5,4
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19f8:	02a12623          	sw	a0,44(sp)
            C[i * N + j] = 0;
    19fc:	00f12e23          	sw	a5,28(sp)
    1a00:	2e0c1e63          	bnez	s8,1cfc <matrix_test+0x5c8>
    1a04:	02412783          	lw	a5,36(sp)
    1a08:	02812983          	lw	s3,40(sp)
    for (i = 0; i < N; i++)
    1a0c:	02012023          	sw	zero,32(sp)
            C[i * N + j] = 0;
    1a10:	00f12823          	sw	a5,16(sp)
    1a14:	01012b83          	lw	s7,16(sp)
    1a18:	01c12603          	lw	a2,28(sp)
    1a1c:	00000593          	li	a1,0
    1a20:	000b8513          	mv	a0,s7
    1a24:	00003097          	auipc	ra,0x3
    1a28:	3a4080e7          	jalr	932(ra) # 4dc8 <memset>
                tmp = 0;
    1a2c:	00c12c83          	lw	s9,12(sp)
        for (j = 0; j < N; j++)
    1a30:	00000a93          	li	s5,0
    1a34:	000c8a13          	mv	s4,s9
    1a38:	00098b13          	mv	s6,s3
    1a3c:	00000d13          	li	s10,0
            for (k = 0; k < N; k++)
    1a40:	00000d93          	li	s11,0
            {
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a44:	000a1583          	lh	a1,0(s4)
    1a48:	000b1503          	lh	a0,0(s6)
            for (k = 0; k < N; k++)
    1a4c:	001d8d93          	addi	s11,s11,1
    1a50:	002b0b13          	addi	s6,s6,2
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a54:	00003097          	auipc	ra,0x3
    1a58:	208080e7          	jalr	520(ra) # 4c5c <__mulsi3>
    1a5c:	00ad0d33          	add	s10,s10,a0
    1a60:	009a0a33          	add	s4,s4,s1
            for (k = 0; k < N; k++)
    1a64:	ff8de0e3          	bltu	s11,s8,1a44 <matrix_test+0x310>
    1a68:	01aba023          	sw	s10,0(s7)
        for (j = 0; j < N; j++)
    1a6c:	001a8a93          	addi	s5,s5,1
    1a70:	004b8b93          	addi	s7,s7,4
    1a74:	002c8c93          	addi	s9,s9,2
    1a78:	fb8aeee3          	bltu	s5,s8,1a34 <matrix_test+0x300>
    for (i = 0; i < N; i++)
    1a7c:	02012783          	lw	a5,32(sp)
    1a80:	01012703          	lw	a4,16(sp)
    1a84:	00812683          	lw	a3,8(sp)
    1a88:	00178793          	addi	a5,a5,1
    1a8c:	02f12023          	sw	a5,32(sp)
    1a90:	00d70733          	add	a4,a4,a3
    1a94:	00e12823          	sw	a4,16(sp)
    1a98:	009989b3          	add	s3,s3,s1
    1a9c:	f787ece3          	bltu	a5,s8,1a14 <matrix_test+0x2e0>
    1aa0:	02412e03          	lw	t3,36(sp)
    ee_s16 ret = 0;
    1aa4:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1aa8:	00000713          	li	a4,0
    1aac:	00000613          	li	a2,0
    for (i = 0; i < N; i++)
    1ab0:	00000313          	li	t1,0
    1ab4:	000e0813          	mv	a6,t3
        for (j = 0; j < N; j++)
    1ab8:	00000593          	li	a1,0
    1abc:	01c0006f          	j	1ad8 <matrix_test+0x3a4>
                ret += (cur > prev) ? 1 : 0;
    1ac0:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1ac4:	00158593          	addi	a1,a1,1
                ret += (cur > prev) ? 1 : 0;
    1ac8:	41055513          	srai	a0,a0,0x10
            prev = cur;
    1acc:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    1ad0:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    1ad4:	0585f063          	bgeu	a1,s8,1b14 <matrix_test+0x3e0>
            cur = C[i * N + j];
    1ad8:	00082683          	lw	a3,0(a6)
            tmp += cur;
    1adc:	01051513          	slli	a0,a0,0x10
    1ae0:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    1ae4:	00d72733          	slt	a4,a4,a3
            tmp += cur;
    1ae8:	00d60633          	add	a2,a2,a3
                ret += 10;
    1aec:	00a50893          	addi	a7,a0,10
                ret += (cur > prev) ? 1 : 0;
    1af0:	00e50533          	add	a0,a0,a4
            if (tmp > clipval)
    1af4:	fcc456e3          	bge	s0,a2,1ac0 <matrix_test+0x38c>
                ret += 10;
    1af8:	01089513          	slli	a0,a7,0x10
        for (j = 0; j < N; j++)
    1afc:	00158593          	addi	a1,a1,1
                ret += 10;
    1b00:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    1b04:	00000613          	li	a2,0
            prev = cur;
    1b08:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    1b0c:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    1b10:	fd85e4e3          	bltu	a1,s8,1ad8 <matrix_test+0x3a4>
    1b14:	00812783          	lw	a5,8(sp)
    for (i = 0; i < N; i++)
    1b18:	00130313          	addi	t1,t1,1
    1b1c:	00fe0e33          	add	t3,t3,a5
    1b20:	f9836ae3          	bltu	t1,s8,1ab4 <matrix_test+0x380>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b24:	02c12583          	lw	a1,44(sp)
    1b28:	00001097          	auipc	ra,0x1
    1b2c:	424080e7          	jalr	1060(ra) # 2f4c <crc16>
    1b30:	02412783          	lw	a5,36(sp)
    1b34:	02812983          	lw	s3,40(sp)
    1b38:	02a12623          	sw	a0,44(sp)
    1b3c:	00f12823          	sw	a5,16(sp)
*/
void
matrix_mul_matrix_bitextract(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B)
{
    ee_u32 i, j, k;
    for (i = 0; i < N; i++)
    1b40:	02012023          	sw	zero,32(sp)
    1b44:	01012d03          	lw	s10,16(sp)
    1b48:	01c12603          	lw	a2,28(sp)
    1b4c:	00000593          	li	a1,0
    1b50:	000d0513          	mv	a0,s10
    1b54:	00003097          	auipc	ra,0x3
    1b58:	274080e7          	jalr	628(ra) # 4dc8 <memset>
                tmp = 0;
    1b5c:	00c12c83          	lw	s9,12(sp)
    {
        for (j = 0; j < N; j++)
    1b60:	00000a13          	li	s4,0
    1b64:	000c8a93          	mv	s5,s9
    1b68:	00098b13          	mv	s6,s3
    1b6c:	00000d93          	li	s11,0
        {
            C[i * N + j] = 0;
            for (k = 0; k < N; k++)
    1b70:	00000b93          	li	s7,0
            {
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b74:	000a9583          	lh	a1,0(s5)
    1b78:	000b1503          	lh	a0,0(s6)
            for (k = 0; k < N; k++)
    1b7c:	001b8b93          	addi	s7,s7,1
    1b80:	002b0b13          	addi	s6,s6,2
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b84:	00003097          	auipc	ra,0x3
    1b88:	0d8080e7          	jalr	216(ra) # 4c5c <__mulsi3>
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    1b8c:	40255e93          	srai	t4,a0,0x2
    1b90:	40555593          	srai	a1,a0,0x5
    1b94:	07f5f593          	andi	a1,a1,127
    1b98:	00fef513          	andi	a0,t4,15
    1b9c:	00003097          	auipc	ra,0x3
    1ba0:	0c0080e7          	jalr	192(ra) # 4c5c <__mulsi3>
    1ba4:	00ad8db3          	add	s11,s11,a0
    1ba8:	009a8ab3          	add	s5,s5,s1
            for (k = 0; k < N; k++)
    1bac:	fd8be4e3          	bltu	s7,s8,1b74 <matrix_test+0x440>
    1bb0:	01bd2023          	sw	s11,0(s10)
        for (j = 0; j < N; j++)
    1bb4:	001a0a13          	addi	s4,s4,1
    1bb8:	004d0d13          	addi	s10,s10,4
    1bbc:	002c8c93          	addi	s9,s9,2
    1bc0:	fb8a62e3          	bltu	s4,s8,1b64 <matrix_test+0x430>
    for (i = 0; i < N; i++)
    1bc4:	02012783          	lw	a5,32(sp)
    1bc8:	01012703          	lw	a4,16(sp)
    1bcc:	00812683          	lw	a3,8(sp)
    1bd0:	00178793          	addi	a5,a5,1
    1bd4:	02f12023          	sw	a5,32(sp)
    1bd8:	00d70733          	add	a4,a4,a3
    1bdc:	00e12823          	sw	a4,16(sp)
    1be0:	009989b3          	add	s3,s3,s1
    1be4:	f787e0e3          	bltu	a5,s8,1b44 <matrix_test+0x410>
    ee_s16 ret = 0;
    1be8:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1bec:	00000713          	li	a4,0
    1bf0:	00000613          	li	a2,0
    for (i = 0; i < N; i++)
    1bf4:	00000313          	li	t1,0
    1bf8:	01812803          	lw	a6,24(sp)
        for (j = 0; j < N; j++)
    1bfc:	00000593          	li	a1,0
    1c00:	01c0006f          	j	1c1c <matrix_test+0x4e8>
                ret += (cur > prev) ? 1 : 0;
    1c04:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1c08:	00158593          	addi	a1,a1,1
                ret += (cur > prev) ? 1 : 0;
    1c0c:	41055513          	srai	a0,a0,0x10
            prev = cur;
    1c10:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    1c14:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    1c18:	0585f063          	bgeu	a1,s8,1c58 <matrix_test+0x524>
            cur = C[i * N + j];
    1c1c:	00082683          	lw	a3,0(a6)
            tmp += cur;
    1c20:	01051513          	slli	a0,a0,0x10
    1c24:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    1c28:	00d72733          	slt	a4,a4,a3
            tmp += cur;
    1c2c:	00d60633          	add	a2,a2,a3
                ret += 10;
    1c30:	00a50893          	addi	a7,a0,10
                ret += (cur > prev) ? 1 : 0;
    1c34:	00e50533          	add	a0,a0,a4
            if (tmp > clipval)
    1c38:	fcc456e3          	bge	s0,a2,1c04 <matrix_test+0x4d0>
                ret += 10;
    1c3c:	01089513          	slli	a0,a7,0x10
        for (j = 0; j < N; j++)
    1c40:	00158593          	addi	a1,a1,1
                ret += 10;
    1c44:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    1c48:	00000613          	li	a2,0
            prev = cur;
    1c4c:	00480813          	addi	a6,a6,4
            cur = C[i * N + j];
    1c50:	00068713          	mv	a4,a3
        for (j = 0; j < N; j++)
    1c54:	fd85e4e3          	bltu	a1,s8,1c1c <matrix_test+0x4e8>
    1c58:	01812783          	lw	a5,24(sp)
    1c5c:	00812703          	lw	a4,8(sp)
    for (i = 0; i < N; i++)
    1c60:	00130313          	addi	t1,t1,1
    1c64:	00e787b3          	add	a5,a5,a4
    1c68:	00f12c23          	sw	a5,24(sp)
            cur = C[i * N + j];
    1c6c:	00068713          	mv	a4,a3
    for (i = 0; i < N; i++)
    1c70:	f98364e3          	bltu	t1,s8,1bf8 <matrix_test+0x4c4>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1c74:	02c12583          	lw	a1,44(sp)
    1c78:	00001097          	auipc	ra,0x1
    1c7c:	2d4080e7          	jalr	724(ra) # 2f4c <crc16>
    for (i = 0; i < N; i++)
    1c80:	00000593          	li	a1,0
                tmp = 0;
    1c84:	01412703          	lw	a4,20(sp)
        for (j = 0; j < N; j++)
    1c88:	00000613          	li	a2,0
            A[i * N + j] += val;
    1c8c:	00075683          	lhu	a3,0(a4)
    1c90:	00270713          	addi	a4,a4,2
        for (j = 0; j < N; j++)
    1c94:	00160613          	addi	a2,a2,1
            A[i * N + j] += val;
    1c98:	412686b3          	sub	a3,a3,s2
    1c9c:	fed71f23          	sh	a3,-2(a4)
        for (j = 0; j < N; j++)
    1ca0:	ff8666e3          	bltu	a2,s8,1c8c <matrix_test+0x558>
    1ca4:	01412783          	lw	a5,20(sp)
    for (i = 0; i < N; i++)
    1ca8:	00158593          	addi	a1,a1,1
    1cac:	009787b3          	add	a5,a5,s1
    1cb0:	00f12a23          	sw	a5,20(sp)
    1cb4:	fd85e8e3          	bltu	a1,s8,1c84 <matrix_test+0x550>
}
    1cb8:	06c12083          	lw	ra,108(sp)
    1cbc:	06812403          	lw	s0,104(sp)
    return crc;
    1cc0:	01051513          	slli	a0,a0,0x10
}
    1cc4:	06412483          	lw	s1,100(sp)
    1cc8:	06012903          	lw	s2,96(sp)
    1ccc:	05c12983          	lw	s3,92(sp)
    1cd0:	05812a03          	lw	s4,88(sp)
    1cd4:	05412a83          	lw	s5,84(sp)
    1cd8:	05012b03          	lw	s6,80(sp)
    1cdc:	04c12b83          	lw	s7,76(sp)
    1ce0:	04812c03          	lw	s8,72(sp)
    1ce4:	04412c83          	lw	s9,68(sp)
    1ce8:	04012d03          	lw	s10,64(sp)
    1cec:	03c12d83          	lw	s11,60(sp)
    return crc;
    1cf0:	41055513          	srai	a0,a0,0x10
}
    1cf4:	07010113          	addi	sp,sp,112
    1cf8:	00008067          	ret
            C[i * N + j] = 0;
    1cfc:	00812783          	lw	a5,8(sp)
    1d00:	00f12e23          	sw	a5,28(sp)
    1d04:	d01ff06f          	j	1a04 <matrix_test+0x2d0>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d08:	00000593          	li	a1,0
    1d0c:	00001097          	auipc	ra,0x1
    1d10:	240080e7          	jalr	576(ra) # 2f4c <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d14:	00050593          	mv	a1,a0
    1d18:	00000513          	li	a0,0
    1d1c:	00001097          	auipc	ra,0x1
    1d20:	230080e7          	jalr	560(ra) # 2f4c <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d24:	00050593          	mv	a1,a0
    1d28:	00000513          	li	a0,0
    1d2c:	00001097          	auipc	ra,0x1
    1d30:	220080e7          	jalr	544(ra) # 2f4c <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d34:	00050593          	mv	a1,a0
    1d38:	00000513          	li	a0,0
    1d3c:	00001097          	auipc	ra,0x1
    1d40:	210080e7          	jalr	528(ra) # 2f4c <crc16>
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1d44:	f75ff06f          	j	1cb8 <matrix_test+0x584>

00001d48 <core_bench_matrix>:
{
    1d48:	ff010113          	addi	sp,sp,-16
    1d4c:	00812423          	sw	s0,8(sp)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d50:	00058713          	mv	a4,a1
{
    1d54:	00060413          	mv	s0,a2
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d58:	00c52583          	lw	a1,12(a0)
    1d5c:	00852683          	lw	a3,8(a0)
    1d60:	00452603          	lw	a2,4(a0)
    1d64:	00052503          	lw	a0,0(a0)
{
    1d68:	00112623          	sw	ra,12(sp)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d6c:	00000097          	auipc	ra,0x0
    1d70:	9c8080e7          	jalr	-1592(ra) # 1734 <matrix_test>
    1d74:	00040593          	mv	a1,s0
}
    1d78:	00812403          	lw	s0,8(sp)
    1d7c:	00c12083          	lw	ra,12(sp)
    1d80:	01010113          	addi	sp,sp,16
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d84:	00001317          	auipc	t1,0x1
    1d88:	1c830067          	jr	456(t1) # 2f4c <crc16>

00001d8c <core_init_matrix>:
{
    1d8c:	fb010113          	addi	sp,sp,-80
    1d90:	03312e23          	sw	s3,60(sp)
    1d94:	00050993          	mv	s3,a0
    printf("start test42\n");
    1d98:	01000537          	lui	a0,0x1000
{
    1d9c:	04812423          	sw	s0,72(sp)
    printf("start test42\n");
    1da0:	47850513          	addi	a0,a0,1144 # 1000478 <_data+0x478>
{
    1da4:	00060413          	mv	s0,a2
    1da8:	03712623          	sw	s7,44(sp)
    1dac:	03912223          	sw	s9,36(sp)
    1db0:	04112623          	sw	ra,76(sp)
    1db4:	04912223          	sw	s1,68(sp)
    1db8:	05212023          	sw	s2,64(sp)
    1dbc:	03412c23          	sw	s4,56(sp)
    1dc0:	03512a23          	sw	s5,52(sp)
    1dc4:	03612823          	sw	s6,48(sp)
    1dc8:	03812423          	sw	s8,40(sp)
    1dcc:	03a12023          	sw	s10,32(sp)
    1dd0:	01b12e23          	sw	s11,28(sp)
    1dd4:	00058b93          	mv	s7,a1
    1dd8:	00068c93          	mv	s9,a3
    printf("start test42\n");
    1ddc:	00004097          	auipc	ra,0x4
    1de0:	2c8080e7          	jalr	712(ra) # 60a4 <puts>
    if (seed == 0)
    1de4:	00041463          	bnez	s0,1dec <core_init_matrix+0x60>
        seed = 1;
    1de8:	00100413          	li	s0,1
    1dec:	fffb8b93          	addi	s7,s7,-1
    1df0:	ffcbfb93          	andi	s7,s7,-4
    1df4:	004b8793          	addi	a5,s7,4
    1df8:	00f12223          	sw	a5,4(sp)
    while (j < blksize)
    1dfc:	00000493          	li	s1,0
    1e00:	00099663          	bnez	s3,1e0c <core_init_matrix+0x80>
    1e04:	1480006f          	j	1f4c <core_init_matrix+0x1c0>
        i++;
    1e08:	00090493          	mv	s1,s2
    1e0c:	00148913          	addi	s2,s1,1
        j = i * i * 2 * 4;
    1e10:	00090593          	mv	a1,s2
    1e14:	00090513          	mv	a0,s2
    1e18:	00003097          	auipc	ra,0x3
    1e1c:	e44080e7          	jalr	-444(ra) # 4c5c <__mulsi3>
    1e20:	00351513          	slli	a0,a0,0x3
    while (j < blksize)
    1e24:	ff3562e3          	bltu	a0,s3,1e08 <core_init_matrix+0x7c>
    B = A + N * N;
    1e28:	00048593          	mv	a1,s1
    1e2c:	00048513          	mv	a0,s1
    1e30:	00003097          	auipc	ra,0x3
    1e34:	e2c080e7          	jalr	-468(ra) # 4c5c <__mulsi3>
    1e38:	00412703          	lw	a4,4(sp)
    1e3c:	00151793          	slli	a5,a0,0x1
    1e40:	00f12623          	sw	a5,12(sp)
    1e44:	00912423          	sw	s1,8(sp)
    1e48:	00f70bb3          	add	s7,a4,a5
    for (i = 0; i < N; i++)
    1e4c:	08048a63          	beqz	s1,1ee0 <core_init_matrix+0x154>
    1e50:	00412783          	lw	a5,4(sp)
            seed         = ((order * seed) % 65536);
    1e54:	00010937          	lui	s2,0x10
    1e58:	00149c13          	slli	s8,s1,0x1
    B = A + N * N;
    1e5c:	000b8a93          	mv	s5,s7
    1e60:	00000a13          	li	s4,0
    1e64:	00100d93          	li	s11,1
    1e68:	417789b3          	sub	s3,a5,s7
            seed         = ((order * seed) % 65536);
    1e6c:	fff90913          	addi	s2,s2,-1 # ffff <_data_lma+0x4e87>
        seed = 1;
    1e70:	000a8d13          	mv	s10,s5
        for (j = 0; j < N; j++)
    1e74:	00000b13          	li	s6,0
            seed         = ((order * seed) % 65536);
    1e78:	000d8593          	mv	a1,s11
    1e7c:	00040513          	mv	a0,s0
    1e80:	00003097          	auipc	ra,0x3
    1e84:	ddc080e7          	jalr	-548(ra) # 4c5c <__mulsi3>
    1e88:	41f55613          	srai	a2,a0,0x1f
    1e8c:	01065613          	srli	a2,a2,0x10
    1e90:	00c50433          	add	s0,a0,a2
    1e94:	010d9793          	slli	a5,s11,0x10
    1e98:	01247433          	and	s0,s0,s2
    1e9c:	0107d793          	srli	a5,a5,0x10
    1ea0:	40c40433          	sub	s0,s0,a2
            val          = (seed + order);
    1ea4:	00878733          	add	a4,a5,s0
    1ea8:	01071713          	slli	a4,a4,0x10
    1eac:	01075713          	srli	a4,a4,0x10
            val          = (val + order);
    1eb0:	00f707b3          	add	a5,a4,a5
            B[i * N + j] = val;
    1eb4:	00ed1023          	sh	a4,0(s10)
            val          = matrix_clip(val, 1);
    1eb8:	0ff7f793          	andi	a5,a5,255
            A[i * N + j] = val;
    1ebc:	01a98733          	add	a4,s3,s10
    1ec0:	00f71023          	sh	a5,0(a4)
        for (j = 0; j < N; j++)
    1ec4:	001b0b13          	addi	s6,s6,1
            order++;
    1ec8:	001d8d93          	addi	s11,s11,1
    1ecc:	002d0d13          	addi	s10,s10,2
        for (j = 0; j < N; j++)
    1ed0:	fa9b64e3          	bltu	s6,s1,1e78 <core_init_matrix+0xec>
    for (i = 0; i < N; i++)
    1ed4:	001a0a13          	addi	s4,s4,1
    1ed8:	018a8ab3          	add	s5,s5,s8
    1edc:	f89a6ae3          	bltu	s4,s1,1e70 <core_init_matrix+0xe4>
    p->C = (MATRES *)align_mem(B + N * N);
    1ee0:	00c12783          	lw	a5,12(sp)
    p->A = A;
    1ee4:	00412703          	lw	a4,4(sp)
}
    1ee8:	04c12083          	lw	ra,76(sp)
    p->C = (MATRES *)align_mem(B + N * N);
    1eec:	00fb87b3          	add	a5,s7,a5
    1ef0:	fff78793          	addi	a5,a5,-1
    1ef4:	ffc7f793          	andi	a5,a5,-4
    1ef8:	00478793          	addi	a5,a5,4
    1efc:	00fca623          	sw	a5,12(s9)
    p->N = N;
    1f00:	00812783          	lw	a5,8(sp)
}
    1f04:	04812403          	lw	s0,72(sp)
    p->B = B;
    1f08:	017ca423          	sw	s7,8(s9)
    p->A = A;
    1f0c:	00eca223          	sw	a4,4(s9)
    p->N = N;
    1f10:	00fca023          	sw	a5,0(s9)
}
    1f14:	00048513          	mv	a0,s1
    1f18:	04012903          	lw	s2,64(sp)
    1f1c:	04412483          	lw	s1,68(sp)
    1f20:	03c12983          	lw	s3,60(sp)
    1f24:	03812a03          	lw	s4,56(sp)
    1f28:	03412a83          	lw	s5,52(sp)
    1f2c:	03012b03          	lw	s6,48(sp)
    1f30:	02c12b83          	lw	s7,44(sp)
    1f34:	02812c03          	lw	s8,40(sp)
    1f38:	02412c83          	lw	s9,36(sp)
    1f3c:	02012d03          	lw	s10,32(sp)
    1f40:	01c12d83          	lw	s11,28(sp)
    1f44:	05010113          	addi	sp,sp,80
    1f48:	00008067          	ret
    B = A + N * N;
    1f4c:	fff00793          	li	a5,-1
    1f50:	00f12423          	sw	a5,8(sp)
    1f54:	00200793          	li	a5,2
    1f58:	006b8b93          	addi	s7,s7,6
    N = i - 1;
    1f5c:	fff00493          	li	s1,-1
    B = A + N * N;
    1f60:	00f12623          	sw	a5,12(sp)
    1f64:	eedff06f          	j	1e50 <core_init_matrix+0xc4>

00001f68 <start_time>:


long long timer_0, timer_1;

void
start_time(void) {
    1f68:	ff010113          	addi	sp,sp,-16
    1f6c:	00112623          	sw	ra,12(sp)
    //GETMYTIME(&start_time_val);
    timer_0 = timer_getms();
    1f70:	00001097          	auipc	ra,0x1
    1f74:	26c080e7          	jalr	620(ra) # 31dc <timer_getms>
}
    1f78:	00c12083          	lw	ra,12(sp)
    timer_0 = timer_getms();
    1f7c:	010017b7          	lui	a5,0x1001
    1f80:	c6a7a023          	sw	a0,-928(a5) # 1000c60 <timer_0>
    1f84:	c6b7a223          	sw	a1,-924(a5)
}
    1f88:	01010113          	addi	sp,sp,16
    1f8c:	00008067          	ret

00001f90 <stop_time>:


void
stop_time(void) {
    1f90:	ff010113          	addi	sp,sp,-16
    1f94:	00112623          	sw	ra,12(sp)
    //GETMYTIME(&stop_time_val);
    timer_1 = timer_getms();
    1f98:	00001097          	auipc	ra,0x1
    1f9c:	244080e7          	jalr	580(ra) # 31dc <timer_getms>
}
    1fa0:	00c12083          	lw	ra,12(sp)
    timer_1 = timer_getms();
    1fa4:	010017b7          	lui	a5,0x1001
    1fa8:	c4a7ac23          	sw	a0,-936(a5) # 1000c58 <timer_1>
    1fac:	c4b7ae23          	sw	a1,-932(a5)
}
    1fb0:	01010113          	addi	sp,sp,16
    1fb4:	00008067          	ret

00001fb8 <get_time>:

CORE_TICKS
get_time(void) {
    // CORE_TICKS elapsed
    //     = (CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
    return timer_1 - timer_0;
    1fb8:	010017b7          	lui	a5,0x1001
    1fbc:	c587a503          	lw	a0,-936(a5) # 1000c58 <timer_1>
    1fc0:	010017b7          	lui	a5,0x1001
    1fc4:	c607a783          	lw	a5,-928(a5) # 1000c60 <timer_0>
}
    1fc8:	40f50533          	sub	a0,a0,a5
    1fcc:	00008067          	ret

00001fd0 <time_in_secs>:
        The <secs_ret> type is used to accomodate systems with no support for
   floating point. Default implementation implemented by the EE_TICKS_PER_SEC
   macro above.
*/
secs_ret
time_in_secs(CORE_TICKS ticks) {
    1fd0:	ff010113          	addi	sp,sp,-16
    1fd4:	00112623          	sw	ra,12(sp)
    //secs_ret retval = ((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
    return ((double)ticks) / 1000.0;
    1fd8:	00003097          	auipc	ra,0x3
    1fdc:	bd0080e7          	jalr	-1072(ra) # 4ba8 <__floatunsidf>
    1fe0:	010007b7          	lui	a5,0x1000
    1fe4:	4987a603          	lw	a2,1176(a5) # 1000498 <_data+0x498>
    1fe8:	49c7a683          	lw	a3,1180(a5)
    1fec:	00002097          	auipc	ra,0x2
    1ff0:	3e0080e7          	jalr	992(ra) # 43cc <__muldf3>
}
    1ff4:	00c12083          	lw	ra,12(sp)
    1ff8:	01010113          	addi	sp,sp,16
    1ffc:	00008067          	ret

00002000 <portable_init>:




void
portable_init(core_portable* p, int* argc, char* argv[]) {
    2000:	ff010113          	addi	sp,sp,-16
    2004:	00812423          	sw	s0,8(sp)
    2008:	00050413          	mv	s0,a0

    printf("start run!!\n");
    200c:	01000537          	lui	a0,0x1000
    2010:	48850513          	addi	a0,a0,1160 # 1000488 <_data+0x488>
portable_init(core_portable* p, int* argc, char* argv[]) {
    2014:	00112623          	sw	ra,12(sp)
    printf("start run!!\n");
    2018:	00004097          	auipc	ra,0x4
    201c:	08c080e7          	jalr	140(ra) # 60a4 <puts>
            "pointer!\n");
    }
    if (sizeof(ee_u32) != 4) {
        ee_printf("ERROR! Please define ee_u32 to a 32b unsigned type!\n");
    }
    p->portable_id = 1;
    2020:	00100793          	li	a5,1
    2024:	00f40023          	sb	a5,0(s0) # fffff000 <__freertos_irq_stack_top+0xfefef000>
}
    2028:	00c12083          	lw	ra,12(sp)
    202c:	00812403          	lw	s0,8(sp)
    2030:	01010113          	addi	sp,sp,16
    2034:	00008067          	ret

00002038 <portable_fini>:
/* Function : portable_fini
        Target specific final code
*/
void
portable_fini(core_portable* p) {
    p->portable_id = 0;
    2038:	00050023          	sb	zero,0(a0)
}
    203c:	00008067          	ret

00002040 <core_init_state>:
        The seed parameter MUST be supplied from a source that cannot be
   determined at compile time
*/
void
core_init_state(ee_u32 size, ee_s16 seed, ee_u8 *p)
{
    2040:	ff010113          	addi	sp,sp,-16
    2044:	00912223          	sw	s1,4(sp)
    2048:	00050493          	mv	s1,a0
    printf("start test43\n");
    204c:	01000537          	lui	a0,0x1000
    2050:	4b450513          	addi	a0,a0,1204 # 10004b4 <_data+0x4b4>
{
    2054:	00812423          	sw	s0,8(sp)
    2058:	01212023          	sw	s2,0(sp)
    205c:	00112623          	sw	ra,12(sp)
    2060:	00058913          	mv	s2,a1
    2064:	00060413          	mv	s0,a2
    printf("start test43\n");
    2068:	00004097          	auipc	ra,0x4
    206c:	03c080e7          	jalr	60(ra) # 60a4 <puts>
    ee_u8 *buf = 0;
#if CORE_DEBUG
    ee_u8 *start = p;
    ee_printf("State: %d,%d\n", size, seed);
#endif
    size--;
    2070:	fff48813          	addi	a6,s1,-1
    next = 0;
    while ((total + next + 1) < size)
    2074:	00100793          	li	a5,1
    2078:	1907fe63          	bgeu	a5,a6,2214 <core_init_state+0x1d4>
    207c:	00190693          	addi	a3,s2,1
    2080:	01069693          	slli	a3,a3,0x10
    2084:	0106d693          	srli	a3,a3,0x10
                *(p + total + i) = buf[i];
            *(p + total + i) = ',';
            total += next + 1;
        }
        seed++;
        switch (seed & 0x7)
    2088:	0076f793          	andi	a5,a3,7
    208c:	ffd78793          	addi	a5,a5,-3
    2090:	01079793          	slli	a5,a5,0x10
        {
            case 0: /* int */
            case 1: /* int */
            case 2: /* int */
                buf  = intpat[(seed >> 3) & 0x3];
    2094:	01000f37          	lui	t5,0x1000
        switch (seed & 0x7)
    2098:	010005b7          	lui	a1,0x1000
            case 6: /* scientific */
                buf  = scipat[(seed >> 3) & 0x3];
                next = 8;
                break;
            case 7: /* invalid */
                buf  = errpat[(seed >> 3) & 0x3];
    209c:	01000eb7          	lui	t4,0x1000
                buf  = scipat[(seed >> 3) & 0x3];
    20a0:	01000e37          	lui	t3,0x1000
                buf  = floatpat[(seed >> 3) & 0x3];
    20a4:	01000337          	lui	t1,0x1000
    20a8:	0036d713          	srli	a4,a3,0x3
        switch (seed & 0x7)
    20ac:	00400613          	li	a2,4
    20b0:	0107d793          	srli	a5,a5,0x10
    ee_u32 total = 0, next = 0, i;
    20b4:	00000513          	li	a0,0
                buf  = intpat[(seed >> 3) & 0x3];
    20b8:	4e4f0f13          	addi	t5,t5,1252 # 10004e4 <intpat>
        switch (seed & 0x7)
    20bc:	4a058593          	addi	a1,a1,1184 # 10004a0 <_data+0x4a0>
                buf  = errpat[(seed >> 3) & 0x3];
    20c0:	4c4e8e93          	addi	t4,t4,1220 # 10004c4 <errpat>
                next = 8;
    20c4:	00800f93          	li	t6,8
                buf  = scipat[(seed >> 3) & 0x3];
    20c8:	4f4e0e13          	addi	t3,t3,1268 # 10004f4 <scipat>
                buf  = floatpat[(seed >> 3) & 0x3];
    20cc:	4d430313          	addi	t1,t1,1236 # 10004d4 <floatpat>
            *(p + total + i) = ',';
    20d0:	02c00893          	li	a7,44
    20d4:	00377713          	andi	a4,a4,3
        switch (seed & 0x7)
    20d8:	0af66663          	bltu	a2,a5,2184 <core_init_state+0x144>
    20dc:	00279793          	slli	a5,a5,0x2
    20e0:	00b787b3          	add	a5,a5,a1
    20e4:	0007a783          	lw	a5,0(a5)
                buf  = errpat[(seed >> 3) & 0x3];
    20e8:	00271713          	slli	a4,a4,0x2
        switch (seed & 0x7)
    20ec:	00078067          	jr	a5
                buf  = floatpat[(seed >> 3) & 0x3];
    20f0:	00e30733          	add	a4,t1,a4
    20f4:	00168693          	addi	a3,a3,1
    20f8:	01069693          	slli	a3,a3,0x10
    while ((total + next + 1) < size)
    20fc:	00950793          	addi	a5,a0,9
                buf  = errpat[(seed >> 3) & 0x3];
    2100:	00072703          	lw	a4,0(a4)
                break;
    2104:	0106d693          	srli	a3,a3,0x10
    while ((total + next + 1) < size)
    2108:	0d07f063          	bgeu	a5,a6,21c8 <core_init_state+0x188>
                next = 8;
    210c:	00800293          	li	t0,8
                *(p + total + i) = buf[i];
    2110:	00074383          	lbu	t2,0(a4)
    2114:	00a40533          	add	a0,s0,a0
    2118:	00750023          	sb	t2,0(a0)
    211c:	00174383          	lbu	t2,1(a4)
    2120:	007500a3          	sb	t2,1(a0)
    2124:	00274383          	lbu	t2,2(a4)
    2128:	00750123          	sb	t2,2(a0)
    212c:	00374383          	lbu	t2,3(a4)
    2130:	007501a3          	sb	t2,3(a0)
            for (i = 0; i < next; i++)
    2134:	02c28463          	beq	t0,a2,215c <core_init_state+0x11c>
                *(p + total + i) = buf[i];
    2138:	00474383          	lbu	t2,4(a4)
    213c:	00750223          	sb	t2,4(a0)
    2140:	00574383          	lbu	t2,5(a4)
    2144:	007502a3          	sb	t2,5(a0)
    2148:	00674383          	lbu	t2,6(a4)
    214c:	00750323          	sb	t2,6(a0)
            for (i = 0; i < next; i++)
    2150:	01f29663          	bne	t0,t6,215c <core_init_state+0x11c>
                *(p + total + i) = buf[i];
    2154:	00774703          	lbu	a4,7(a4)
    2158:	00e503a3          	sb	a4,7(a0)
            *(p + total + i) = ',';
    215c:	00550533          	add	a0,a0,t0
    2160:	01150023          	sb	a7,0(a0)
    2164:	00078513          	mv	a0,a5
        switch (seed & 0x7)
    2168:	0076f793          	andi	a5,a3,7
    216c:	ffd78793          	addi	a5,a5,-3
    2170:	01079793          	slli	a5,a5,0x10
    2174:	0036d713          	srli	a4,a3,0x3
    2178:	0107d793          	srli	a5,a5,0x10
    217c:	00377713          	andi	a4,a4,3
    2180:	f4f67ee3          	bgeu	a2,a5,20dc <core_init_state+0x9c>
                buf  = intpat[(seed >> 3) & 0x3];
    2184:	00271713          	slli	a4,a4,0x2
    2188:	00168693          	addi	a3,a3,1
    218c:	00ef0733          	add	a4,t5,a4
    2190:	01069693          	slli	a3,a3,0x10
    while ((total + next + 1) < size)
    2194:	00550793          	addi	a5,a0,5
                buf  = intpat[(seed >> 3) & 0x3];
    2198:	00072703          	lw	a4,0(a4)
                break;
    219c:	0106d693          	srli	a3,a3,0x10
    while ((total + next + 1) < size)
    21a0:	0307f463          	bgeu	a5,a6,21c8 <core_init_state+0x188>
                next = 4;
    21a4:	00400293          	li	t0,4
    21a8:	f69ff06f          	j	2110 <core_init_state+0xd0>
                buf  = scipat[(seed >> 3) & 0x3];
    21ac:	00168693          	addi	a3,a3,1
    21b0:	00ee0733          	add	a4,t3,a4
    21b4:	01069693          	slli	a3,a3,0x10
    while ((total + next + 1) < size)
    21b8:	00950793          	addi	a5,a0,9
                buf  = errpat[(seed >> 3) & 0x3];
    21bc:	00072703          	lw	a4,0(a4)
                break;
    21c0:	0106d693          	srli	a3,a3,0x10
    while ((total + next + 1) < size)
    21c4:	f507e4e3          	bltu	a5,a6,210c <core_init_state+0xcc>
            default: /* Never happen, just to make some compilers happy */
                break;
        }
    }
    size++;
    while (total < size)
    21c8:	02957a63          	bgeu	a0,s1,21fc <core_init_state+0x1bc>
    21cc:	40a48633          	sub	a2,s1,a0
    21d0:	00a40533          	add	a0,s0,a0
        total++;
    }
#if CORE_DEBUG
    ee_printf("State Input: %s\n", start);
#endif
}
    21d4:	00812403          	lw	s0,8(sp)
    21d8:	00c12083          	lw	ra,12(sp)
    21dc:	00412483          	lw	s1,4(sp)
    21e0:	00012903          	lw	s2,0(sp)
    21e4:	00000593          	li	a1,0
    21e8:	01010113          	addi	sp,sp,16
    21ec:	00003317          	auipc	t1,0x3
    21f0:	bdc30067          	jr	-1060(t1) # 4dc8 <memset>
                buf  = errpat[(seed >> 3) & 0x3];
    21f4:	00ee8733          	add	a4,t4,a4
    21f8:	efdff06f          	j	20f4 <core_init_state+0xb4>
}
    21fc:	00c12083          	lw	ra,12(sp)
    2200:	00812403          	lw	s0,8(sp)
    2204:	00412483          	lw	s1,4(sp)
    2208:	00012903          	lw	s2,0(sp)
    220c:	01010113          	addi	sp,sp,16
    2210:	00008067          	ret
    ee_u32 total = 0, next = 0, i;
    2214:	00000513          	li	a0,0
    2218:	fb5ff06f          	j	21cc <core_init_state+0x18c>

0000221c <core_state_transition>:
*/

enum CORE_STATE
core_state_transition(ee_u8 **instr, ee_u32 *transition_count)
{
    ee_u8 *         str = *instr;
    221c:	00052783          	lw	a5,0(a0)
    ee_u8           NEXT_SYMBOL;
    enum CORE_STATE state = CORE_START;
    for (; *str && state != CORE_INVALID; str++)
    2220:	0007c683          	lbu	a3,0(a5)
    2224:	2e068863          	beqz	a3,2514 <core_state_transition+0x2f8>
    {
        NEXT_SYMBOL = *str;
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	02c00813          	li	a6,44
    222c:	00178713          	addi	a4,a5,1
    2230:	2b068e63          	beq	a3,a6,24ec <core_state_transition+0x2d0>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2234:	0005a883          	lw	a7,0(a1)
    2238:	fd068613          	addi	a2,a3,-48
    223c:	0ff67613          	andi	a2,a2,255
    2240:	00900313          	li	t1,9
    2244:	00188893          	addi	a7,a7,1
    2248:	0ac36c63          	bltu	t1,a2,2300 <core_state_transition+0xe4>
                else
                {
                    state = CORE_INVALID;
                    transition_count[CORE_INVALID]++;
                }
                transition_count[CORE_START]++;
    224c:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    2250:	0017c683          	lbu	a3,1(a5)
    2254:	16068463          	beqz	a3,23bc <core_state_transition+0x1a0>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2258:	00278793          	addi	a5,a5,2
    225c:	15068e63          	beq	a3,a6,23b8 <core_state_transition+0x19c>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2260:	fd068613          	addi	a2,a3,-48
                    state = CORE_INVALID;
                    transition_count[CORE_S1]++;
                }
                break;
            case CORE_INT:
                if (NEXT_SYMBOL == '.')
    2264:	02e00813          	li	a6,46
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2268:	00900893          	li	a7,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    226c:	02c00313          	li	t1,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2270:	0ff67613          	andi	a2,a2,255
                if (NEXT_SYMBOL == '.')
    2274:	03068663          	beq	a3,a6,22a0 <core_state_transition+0x84>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2278:	0cc8e063          	bltu	a7,a2,2338 <core_state_transition+0x11c>
    for (; *str && state != CORE_INVALID; str++)
    227c:	00174683          	lbu	a3,1(a4)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2280:	00178613          	addi	a2,a5,1
    2284:	00078713          	mv	a4,a5
    for (; *str && state != CORE_INVALID; str++)
    2288:	12068863          	beqz	a3,23b8 <core_state_transition+0x19c>
        if (NEXT_SYMBOL == ',') /* end of this input */
    228c:	2a668a63          	beq	a3,t1,2540 <core_state_transition+0x324>
    2290:	00060793          	mv	a5,a2
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2294:	fd068613          	addi	a2,a3,-48
    2298:	0ff67613          	andi	a2,a2,255
                if (NEXT_SYMBOL == '.')
    229c:	fd069ee3          	bne	a3,a6,2278 <core_state_transition+0x5c>
                {
                    state = CORE_FLOAT;
                    transition_count[CORE_INT]++;
    22a0:	0105a683          	lw	a3,16(a1)
    22a4:	00168693          	addi	a3,a3,1
    22a8:	00d5a823          	sw	a3,16(a1)
    for (; *str && state != CORE_INVALID; str++)
    22ac:	00174683          	lbu	a3,1(a4)
    22b0:	28068263          	beqz	a3,2534 <core_state_transition+0x318>
        if (NEXT_SYMBOL == ',') /* end of this input */
    22b4:	02c00713          	li	a4,44
    22b8:	00178613          	addi	a2,a5,1
    22bc:	22e68263          	beq	a3,a4,24e0 <core_state_transition+0x2c4>
                    state = CORE_INVALID;
                    transition_count[CORE_INT]++;
                }
                break;
            case CORE_FLOAT:
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22c0:	04500813          	li	a6,69
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22c4:	00900893          	li	a7,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    22c8:	02c00313          	li	t1,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22cc:	fd068713          	addi	a4,a3,-48
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d0:	0df6f693          	andi	a3,a3,223
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22d4:	0ff77713          	andi	a4,a4,255
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d8:	0f068663          	beq	a3,a6,23c4 <core_state_transition+0x1a8>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22dc:	1ae8fa63          	bgeu	a7,a4,2490 <core_state_transition+0x274>
                    transition_count[CORE_FLOAT]++;
                }
                else if (!ee_isdigit(NEXT_SYMBOL))
                {
                    state = CORE_INVALID;
                    transition_count[CORE_FLOAT]++;
    22e0:	0145a683          	lw	a3,20(a1)
    22e4:	00060713          	mv	a4,a2
                    state = CORE_INVALID;
    22e8:	00100793          	li	a5,1
                    transition_count[CORE_FLOAT]++;
    22ec:	00168693          	addi	a3,a3,1
    22f0:	00d5aa23          	sw	a3,20(a1)
                break;
            default:
                break;
        }
    }
    *instr = str;
    22f4:	00e52023          	sw	a4,0(a0)
    return state;
}
    22f8:	00078513          	mv	a0,a5
    22fc:	00008067          	ret
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2300:	02b00613          	li	a2,43
    2304:	04c68a63          	beq	a3,a2,2358 <core_state_transition+0x13c>
    2308:	02d00613          	li	a2,45
    230c:	04c68663          	beq	a3,a2,2358 <core_state_transition+0x13c>
                else if (NEXT_SYMBOL == '.')
    2310:	02e00613          	li	a2,46
    2314:	18c68c63          	beq	a3,a2,24ac <core_state_transition+0x290>
                    transition_count[CORE_INVALID]++;
    2318:	0045a683          	lw	a3,4(a1)
                transition_count[CORE_START]++;
    231c:	0115a023          	sw	a7,0(a1)
                    state = CORE_INVALID;
    2320:	00100793          	li	a5,1
                    transition_count[CORE_INVALID]++;
    2324:	00168693          	addi	a3,a3,1
    2328:	00d5a223          	sw	a3,4(a1)
    *instr = str;
    232c:	00e52023          	sw	a4,0(a0)
}
    2330:	00078513          	mv	a0,a5
    2334:	00008067          	ret
                    transition_count[CORE_INT]++;
    2338:	0105a683          	lw	a3,16(a1)
    233c:	00078713          	mv	a4,a5
                    state = CORE_INVALID;
    2340:	00100793          	li	a5,1
                    transition_count[CORE_INT]++;
    2344:	00168693          	addi	a3,a3,1
    2348:	00d5a823          	sw	a3,16(a1)
    *instr = str;
    234c:	00e52023          	sw	a4,0(a0)
}
    2350:	00078513          	mv	a0,a5
    2354:	00008067          	ret
                transition_count[CORE_START]++;
    2358:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    235c:	0017c883          	lbu	a7,1(a5)
    2360:	1c088063          	beqz	a7,2520 <core_state_transition+0x304>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2364:	00278713          	addi	a4,a5,2
    2368:	1b088c63          	beq	a7,a6,2520 <core_state_transition+0x304>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    236c:	0085a603          	lw	a2,8(a1)
    2370:	fd088693          	addi	a3,a7,-48
    2374:	0ff6f693          	andi	a3,a3,255
    2378:	00900813          	li	a6,9
    237c:	00160613          	addi	a2,a2,1
    2380:	02d87063          	bgeu	a6,a3,23a0 <core_state_transition+0x184>
                else if (NEXT_SYMBOL == '.')
    2384:	02e00693          	li	a3,46
    2388:	14d88063          	beq	a7,a3,24c8 <core_state_transition+0x2ac>
                    transition_count[CORE_S1]++;
    238c:	00c5a423          	sw	a2,8(a1)
                    state = CORE_INVALID;
    2390:	00100793          	li	a5,1
    *instr = str;
    2394:	00e52023          	sw	a4,0(a0)
}
    2398:	00078513          	mv	a0,a5
    239c:	00008067          	ret
                    transition_count[CORE_S1]++;
    23a0:	00c5a423          	sw	a2,8(a1)
    for (; *str && state != CORE_INVALID; str++)
    23a4:	0027c683          	lbu	a3,2(a5)
    23a8:	00068a63          	beqz	a3,23bc <core_state_transition+0x1a0>
        if (NEXT_SYMBOL == ',') /* end of this input */
    23ac:	02c00613          	li	a2,44
    23b0:	00170793          	addi	a5,a4,1
    23b4:	eac696e3          	bne	a3,a2,2260 <core_state_transition+0x44>
    for (; *str && state != CORE_INVALID; str++)
    23b8:	00078713          	mv	a4,a5
    23bc:	00400793          	li	a5,4
    23c0:	f8dff06f          	j	234c <core_state_transition+0x130>
                    transition_count[CORE_FLOAT]++;
    23c4:	0145a703          	lw	a4,20(a1)
    23c8:	00170713          	addi	a4,a4,1
    23cc:	00e5aa23          	sw	a4,20(a1)
    for (; *str && state != CORE_INVALID; str++)
    23d0:	0017c783          	lbu	a5,1(a5)
    23d4:	12078a63          	beqz	a5,2508 <core_state_transition+0x2ec>
        if (NEXT_SYMBOL == ',') /* end of this input */
    23d8:	02c00813          	li	a6,44
    23dc:	00160713          	addi	a4,a2,1
    23e0:	13078663          	beq	a5,a6,250c <core_state_transition+0x2f0>
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23e4:	00c5a683          	lw	a3,12(a1)
    23e8:	fd578793          	addi	a5,a5,-43
    23ec:	0fd7f793          	andi	a5,a5,253
    23f0:	00168693          	addi	a3,a3,1
                    transition_count[CORE_S2]++;
    23f4:	00d5a623          	sw	a3,12(a1)
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23f8:	00078a63          	beqz	a5,240c <core_state_transition+0x1f0>
                    state = CORE_INVALID;
    23fc:	00100793          	li	a5,1
    *instr = str;
    2400:	00e52023          	sw	a4,0(a0)
}
    2404:	00078513          	mv	a0,a5
    2408:	00008067          	ret
    for (; *str && state != CORE_INVALID; str++)
    240c:	00164783          	lbu	a5,1(a2)
    2410:	0e078863          	beqz	a5,2500 <core_state_transition+0x2e4>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2414:	00260713          	addi	a4,a2,2
    2418:	0f078463          	beq	a5,a6,2500 <core_state_transition+0x2e4>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    241c:	0185a683          	lw	a3,24(a1)
    2420:	fd078793          	addi	a5,a5,-48
    2424:	0ff7f793          	andi	a5,a5,255
    2428:	00168693          	addi	a3,a3,1
    242c:	00900893          	li	a7,9
                    transition_count[CORE_EXPONENT]++;
    2430:	00d5ac23          	sw	a3,24(a1)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2434:	fcf8e4e3          	bltu	a7,a5,23fc <core_state_transition+0x1e0>
    for (; *str && state != CORE_INVALID; str++)
    2438:	00264683          	lbu	a3,2(a2)
    243c:	0a068e63          	beqz	a3,24f8 <core_state_transition+0x2dc>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2440:	00360793          	addi	a5,a2,3
    2444:	0b068863          	beq	a3,a6,24f4 <core_state_transition+0x2d8>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2448:	00900613          	li	a2,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    244c:	02c00893          	li	a7,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2450:	fd068693          	addi	a3,a3,-48
    2454:	0ff6f693          	andi	a3,a3,255
    2458:	00d67e63          	bgeu	a2,a3,2474 <core_state_transition+0x258>
                    transition_count[CORE_INVALID]++;
    245c:	0045a683          	lw	a3,4(a1)
    2460:	00078713          	mv	a4,a5
                    state = CORE_INVALID;
    2464:	00100793          	li	a5,1
                    transition_count[CORE_INVALID]++;
    2468:	00168693          	addi	a3,a3,1
    246c:	00d5a223          	sw	a3,4(a1)
    2470:	eddff06f          	j	234c <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2474:	00174683          	lbu	a3,1(a4)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2478:	00178813          	addi	a6,a5,1
    247c:	00078713          	mv	a4,a5
    for (; *str && state != CORE_INVALID; str++)
    2480:	06068a63          	beqz	a3,24f4 <core_state_transition+0x2d8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2484:	0b168263          	beq	a3,a7,2528 <core_state_transition+0x30c>
    2488:	00080793          	mv	a5,a6
    248c:	fc5ff06f          	j	2450 <core_state_transition+0x234>
    for (; *str && state != CORE_INVALID; str++)
    2490:	0017c683          	lbu	a3,1(a5)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2494:	00160713          	addi	a4,a2,1
    2498:	00060793          	mv	a5,a2
    for (; *str && state != CORE_INVALID; str++)
    249c:	04068263          	beqz	a3,24e0 <core_state_transition+0x2c4>
        if (NEXT_SYMBOL == ',') /* end of this input */
    24a0:	04668263          	beq	a3,t1,24e4 <core_state_transition+0x2c8>
    24a4:	00070613          	mv	a2,a4
    24a8:	e25ff06f          	j	22cc <core_state_transition+0xb0>
                transition_count[CORE_START]++;
    24ac:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    24b0:	0017c683          	lbu	a3,1(a5)
    24b4:	02068863          	beqz	a3,24e4 <core_state_transition+0x2c8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    24b8:	00278613          	addi	a2,a5,2
    24bc:	03068263          	beq	a3,a6,24e0 <core_state_transition+0x2c4>
    24c0:	00070793          	mv	a5,a4
    24c4:	dfdff06f          	j	22c0 <core_state_transition+0xa4>
                    transition_count[CORE_S1]++;
    24c8:	00c5a423          	sw	a2,8(a1)
    for (; *str && state != CORE_INVALID; str++)
    24cc:	0027c683          	lbu	a3,2(a5)
    24d0:	00068a63          	beqz	a3,24e4 <core_state_transition+0x2c8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    24d4:	02c00793          	li	a5,44
    24d8:	00170613          	addi	a2,a4,1
    24dc:	fef692e3          	bne	a3,a5,24c0 <core_state_transition+0x2a4>
    for (; *str && state != CORE_INVALID; str++)
    24e0:	00060713          	mv	a4,a2
                    state = CORE_FLOAT;
    24e4:	00500793          	li	a5,5
    24e8:	e65ff06f          	j	234c <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ec:	00000793          	li	a5,0
            break;
    24f0:	e5dff06f          	j	234c <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    24f4:	00078713          	mv	a4,a5
    24f8:	00700793          	li	a5,7
    24fc:	e51ff06f          	j	234c <core_state_transition+0x130>
                    state = CORE_EXPONENT;
    2500:	00600793          	li	a5,6
    2504:	e49ff06f          	j	234c <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2508:	00060713          	mv	a4,a2
                    state = CORE_S2;
    250c:	00300793          	li	a5,3
    2510:	e3dff06f          	j	234c <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2514:	00078713          	mv	a4,a5
    enum CORE_STATE state = CORE_START;
    2518:	00000793          	li	a5,0
    251c:	e31ff06f          	j	234c <core_state_transition+0x130>
                    state = CORE_S1;
    2520:	00200793          	li	a5,2
    2524:	e29ff06f          	j	234c <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2528:	00080713          	mv	a4,a6
    252c:	00700793          	li	a5,7
    2530:	e1dff06f          	j	234c <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2534:	00078713          	mv	a4,a5
                    state = CORE_FLOAT;
    2538:	00500793          	li	a5,5
    253c:	e11ff06f          	j	234c <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2540:	00060713          	mv	a4,a2
    2544:	00400793          	li	a5,4
    2548:	e05ff06f          	j	234c <core_state_transition+0x130>

0000254c <core_bench_state>:
{
    254c:	f8010113          	addi	sp,sp,-128
    2550:	06812c23          	sw	s0,120(sp)
    2554:	06912a23          	sw	s1,116(sp)
    2558:	07212823          	sw	s2,112(sp)
    255c:	07312623          	sw	s3,108(sp)
    2560:	07412423          	sw	s4,104(sp)
    2564:	07612023          	sw	s6,96(sp)
    2568:	05712e23          	sw	s7,92(sp)
    256c:	06112e23          	sw	ra,124(sp)
    2570:	07512223          	sw	s5,100(sp)
    2574:	00058413          	mv	s0,a1
    while (*p != 0)
    2578:	0005c583          	lbu	a1,0(a1)
    257c:	03010493          	addi	s1,sp,48
    2580:	02012823          	sw	zero,48(sp)
    ee_u8 *p = memblock;
    2584:	00812623          	sw	s0,12(sp)
    for (i = 0; i < NUM_CORE_STATES; i++)
    2588:	0004a223          	sw	zero,4(s1)
    258c:	0004a423          	sw	zero,8(s1)
    2590:	0004a623          	sw	zero,12(s1)
    2594:	0004a823          	sw	zero,16(s1)
    2598:	0004aa23          	sw	zero,20(s1)
    259c:	0004ac23          	sw	zero,24(s1)
    25a0:	0004ae23          	sw	zero,28(s1)
    25a4:	00012823          	sw	zero,16(sp)
    25a8:	00012a23          	sw	zero,20(sp)
    25ac:	00012c23          	sw	zero,24(sp)
    25b0:	00012e23          	sw	zero,28(sp)
    25b4:	02012023          	sw	zero,32(sp)
    25b8:	02012223          	sw	zero,36(sp)
    25bc:	02012423          	sw	zero,40(sp)
    25c0:	02012623          	sw	zero,44(sp)
{
    25c4:	00050b93          	mv	s7,a0
    25c8:	00060b13          	mv	s6,a2
    25cc:	00068a13          	mv	s4,a3
    25d0:	00070913          	mv	s2,a4
    25d4:	00078993          	mv	s3,a5
    while (*p != 0)
    25d8:	16058663          	beqz	a1,2744 <core_bench_state+0x1f8>
    25dc:	00c10a93          	addi	s5,sp,12
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    25e0:	00048593          	mv	a1,s1
    25e4:	000a8513          	mv	a0,s5
    25e8:	00000097          	auipc	ra,0x0
    25ec:	c34080e7          	jalr	-972(ra) # 221c <core_state_transition>
        final_counts[fstate]++;
    25f0:	05010793          	addi	a5,sp,80
    25f4:	00251513          	slli	a0,a0,0x2
    25f8:	00a78533          	add	a0,a5,a0
    while (*p != 0)
    25fc:	00c12703          	lw	a4,12(sp)
        final_counts[fstate]++;
    2600:	fc052783          	lw	a5,-64(a0)
    while (*p != 0)
    2604:	00074703          	lbu	a4,0(a4)
        final_counts[fstate]++;
    2608:	00178793          	addi	a5,a5,1
    260c:	fcf52023          	sw	a5,-64(a0)
    while (*p != 0)
    2610:	fc0718e3          	bnez	a4,25e0 <core_bench_state+0x94>
    p = memblock;
    2614:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    2618:	01740bb3          	add	s7,s0,s7
    261c:	00044583          	lbu	a1,0(s0)
    2620:	13747863          	bgeu	s0,s7,2750 <core_bench_state+0x204>
        if (*p != ',')
    2624:	02c00693          	li	a3,44
{
    2628:	00040793          	mv	a5,s0
            *p ^= (ee_u8)seed1;
    262c:	0165c733          	xor	a4,a1,s6
        if (*p != ',')
    2630:	02d58263          	beq	a1,a3,2654 <core_bench_state+0x108>
            *p ^= (ee_u8)seed1;
    2634:	00e78023          	sb	a4,0(a5)
        p += step;
    2638:	00c12783          	lw	a5,12(sp)
    263c:	012787b3          	add	a5,a5,s2
    2640:	00f12623          	sw	a5,12(sp)
    while (p < (memblock + blksize))
    2644:	0177fe63          	bgeu	a5,s7,2660 <core_bench_state+0x114>
    2648:	0007c583          	lbu	a1,0(a5)
            *p ^= (ee_u8)seed1;
    264c:	0165c733          	xor	a4,a1,s6
        if (*p != ',')
    2650:	fed592e3          	bne	a1,a3,2634 <core_bench_state+0xe8>
        p += step;
    2654:	012787b3          	add	a5,a5,s2
    2658:	00f12623          	sw	a5,12(sp)
    while (p < (memblock + blksize))
    265c:	ff77e6e3          	bltu	a5,s7,2648 <core_bench_state+0xfc>
    while (*p != 0)
    2660:	00044783          	lbu	a5,0(s0)
    p = memblock;
    2664:	00812623          	sw	s0,12(sp)
    while (*p != 0)
    2668:	00c10a93          	addi	s5,sp,12
    266c:	04078063          	beqz	a5,26ac <core_bench_state+0x160>
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2670:	00048593          	mv	a1,s1
    2674:	000a8513          	mv	a0,s5
    2678:	00000097          	auipc	ra,0x0
    267c:	ba4080e7          	jalr	-1116(ra) # 221c <core_state_transition>
        final_counts[fstate]++;
    2680:	05010793          	addi	a5,sp,80
    2684:	00251513          	slli	a0,a0,0x2
    2688:	00a78533          	add	a0,a5,a0
    while (*p != 0)
    268c:	00c12703          	lw	a4,12(sp)
        final_counts[fstate]++;
    2690:	fc052783          	lw	a5,-64(a0)
    while (*p != 0)
    2694:	00074703          	lbu	a4,0(a4)
        final_counts[fstate]++;
    2698:	00178793          	addi	a5,a5,1
    269c:	fcf52023          	sw	a5,-64(a0)
    while (*p != 0)
    26a0:	fc0718e3          	bnez	a4,2670 <core_bench_state+0x124>
    p = memblock;
    26a4:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    26a8:	03747463          	bgeu	s0,s7,26d0 <core_bench_state+0x184>
        if (*p != ',')
    26ac:	02c00693          	li	a3,44
    26b0:	00044783          	lbu	a5,0(s0)
            *p ^= (ee_u8)seed2;
    26b4:	0147c733          	xor	a4,a5,s4
        if (*p != ',')
    26b8:	06d78e63          	beq	a5,a3,2734 <core_bench_state+0x1e8>
            *p ^= (ee_u8)seed2;
    26bc:	00e40023          	sb	a4,0(s0)
        p += step;
    26c0:	00c12403          	lw	s0,12(sp)
    26c4:	01240433          	add	s0,s0,s2
    26c8:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    26cc:	ff7462e3          	bltu	s0,s7,26b0 <core_bench_state+0x164>
    26d0:	01010413          	addi	s0,sp,16
    26d4:	00048913          	mv	s2,s1
        crc = crcu32(final_counts[i], crc);
    26d8:	00042503          	lw	a0,0(s0)
    26dc:	00098593          	mv	a1,s3
    26e0:	00440413          	addi	s0,s0,4
    26e4:	00000097          	auipc	ra,0x0
    26e8:	358080e7          	jalr	856(ra) # 2a3c <crcu32>
        crc = crcu32(track_counts[i], crc);
    26ec:	00050593          	mv	a1,a0
    26f0:	00092503          	lw	a0,0(s2)
    26f4:	00490913          	addi	s2,s2,4
    26f8:	00000097          	auipc	ra,0x0
    26fc:	344080e7          	jalr	836(ra) # 2a3c <crcu32>
    2700:	00050993          	mv	s3,a0
    for (i = 0; i < NUM_CORE_STATES; i++)
    2704:	fc849ae3          	bne	s1,s0,26d8 <core_bench_state+0x18c>
}
    2708:	07c12083          	lw	ra,124(sp)
    270c:	07812403          	lw	s0,120(sp)
    2710:	07412483          	lw	s1,116(sp)
    2714:	07012903          	lw	s2,112(sp)
    2718:	06c12983          	lw	s3,108(sp)
    271c:	06812a03          	lw	s4,104(sp)
    2720:	06412a83          	lw	s5,100(sp)
    2724:	06012b03          	lw	s6,96(sp)
    2728:	05c12b83          	lw	s7,92(sp)
    272c:	08010113          	addi	sp,sp,128
    2730:	00008067          	ret
        p += step;
    2734:	01240433          	add	s0,s0,s2
    2738:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    273c:	f7746ae3          	bltu	s0,s7,26b0 <core_bench_state+0x164>
    2740:	f91ff06f          	j	26d0 <core_bench_state+0x184>
    while (p < (memblock + blksize))
    2744:	00a40bb3          	add	s7,s0,a0
    2748:	ed746ee3          	bltu	s0,s7,2624 <core_bench_state+0xd8>
    274c:	f85ff06f          	j	26d0 <core_bench_state+0x184>
    while (*p != 0)
    2750:	f20590e3          	bnez	a1,2670 <core_bench_state+0x124>
    2754:	f7dff06f          	j	26d0 <core_bench_state+0x184>

00002758 <get_seed_32>:
extern volatile ee_s32 seed5_volatile;
ee_s32
get_seed_32(int i)
{
    ee_s32 retval;
    switch (i)
    2758:	00500793          	li	a5,5
    275c:	04a7ec63          	bltu	a5,a0,27b4 <get_seed_32+0x5c>
    2760:	010007b7          	lui	a5,0x1000
    2764:	5b478793          	addi	a5,a5,1460 # 10005b4 <scipat+0xc0>
    2768:	00251513          	slli	a0,a0,0x2
    276c:	00f50533          	add	a0,a0,a5
    2770:	00052783          	lw	a5,0(a0)
    2774:	00078067          	jr	a5
            break;
        case 4:
            retval = seed4_volatile;
            break;
        case 5:
            retval = seed5_volatile;
    2778:	010017b7          	lui	a5,0x1001
    277c:	c487a503          	lw	a0,-952(a5) # 1000c48 <seed5_volatile>
            break;
    2780:	00008067          	ret
            retval = seed1_volatile;
    2784:	010017b7          	lui	a5,0x1001
    2788:	c407a503          	lw	a0,-960(a5) # 1000c40 <seed1_volatile>
            break;
    278c:	00008067          	ret
            retval = seed2_volatile;
    2790:	010017b7          	lui	a5,0x1001
    2794:	c447a503          	lw	a0,-956(a5) # 1000c44 <seed2_volatile>
            break;
    2798:	00008067          	ret
            retval = seed3_volatile;
    279c:	010017b7          	lui	a5,0x1001
    27a0:	c347a503          	lw	a0,-972(a5) # 1000c34 <seed3_volatile>
            break;
    27a4:	00008067          	ret
            retval = seed4_volatile;
    27a8:	010017b7          	lui	a5,0x1001
    27ac:	c387a503          	lw	a0,-968(a5) # 1000c38 <seed4_volatile>
            break;
    27b0:	00008067          	ret
        default:
            retval = 0;
    27b4:	00000513          	li	a0,0
            break;
    }
    return retval;
}
    27b8:	00008067          	ret

000027bc <crcu16>:
{
    ee_u8 i = 0, x16 = 0, carry = 0;

    for (i = 0; i < 8; i++)
    {
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27bc:	00a5c633          	xor	a2,a1,a0
    return crc;
}
ee_u16
crcu16(ee_u16 newval, ee_u16 crc)
{
    crc = crcu8((ee_u8)(newval), crc);
    27c0:	0ff57693          	andi	a3,a0,255
        if (x16 == 1)
    27c4:	00167613          	andi	a2,a2,1
        data >>= 1;
    27c8:	0016d713          	srli	a4,a3,0x1
        if (x16 == 1)
    27cc:	0015d793          	srli	a5,a1,0x1
    27d0:	00060c63          	beqz	a2,27e8 <crcu16+0x2c>
            crc |= 0x8000;
    27d4:	ffffa637          	lui	a2,0xffffa
    27d8:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    27dc:	00c7c7b3          	xor	a5,a5,a2
    27e0:	01079793          	slli	a5,a5,0x10
    27e4:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27e8:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    27ec:	00177613          	andi	a2,a4,1
    27f0:	0017d793          	srli	a5,a5,0x1
        data >>= 1;
    27f4:	0026d713          	srli	a4,a3,0x2
        if (x16 == 1)
    27f8:	00060c63          	beqz	a2,2810 <crcu16+0x54>
            crc |= 0x8000;
    27fc:	ffffa637          	lui	a2,0xffffa
    2800:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2804:	00c7c7b3          	xor	a5,a5,a2
    2808:	01079793          	slli	a5,a5,0x10
    280c:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2810:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    2814:	00177713          	andi	a4,a4,1
        data >>= 1;
    2818:	0036d613          	srli	a2,a3,0x3
        if (x16 == 1)
    281c:	0017d793          	srli	a5,a5,0x1
    2820:	00070c63          	beqz	a4,2838 <crcu16+0x7c>
            crc |= 0x8000;
    2824:	ffffa737          	lui	a4,0xffffa
    2828:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    282c:	00e7c7b3          	xor	a5,a5,a4
    2830:	01079793          	slli	a5,a5,0x10
    2834:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2838:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    283c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2840:	0046d713          	srli	a4,a3,0x4
        if (x16 == 1)
    2844:	0017d793          	srli	a5,a5,0x1
    2848:	00060c63          	beqz	a2,2860 <crcu16+0xa4>
            crc |= 0x8000;
    284c:	ffffa637          	lui	a2,0xffffa
    2850:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2854:	00c7c7b3          	xor	a5,a5,a2
    2858:	01079793          	slli	a5,a5,0x10
    285c:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2860:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    2864:	00177713          	andi	a4,a4,1
        data >>= 1;
    2868:	0056d613          	srli	a2,a3,0x5
        if (x16 == 1)
    286c:	0017d793          	srli	a5,a5,0x1
    2870:	00070c63          	beqz	a4,2888 <crcu16+0xcc>
            crc |= 0x8000;
    2874:	ffffa737          	lui	a4,0xffffa
    2878:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    287c:	00e7c7b3          	xor	a5,a5,a4
    2880:	01079793          	slli	a5,a5,0x10
    2884:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2888:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    288c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2890:	0066d713          	srli	a4,a3,0x6
        if (x16 == 1)
    2894:	0017d793          	srli	a5,a5,0x1
    2898:	00060c63          	beqz	a2,28b0 <crcu16+0xf4>
            crc |= 0x8000;
    289c:	ffffa637          	lui	a2,0xffffa
    28a0:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28a4:	00c7c7b3          	xor	a5,a5,a2
    28a8:	01079793          	slli	a5,a5,0x10
    28ac:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28b0:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    28b4:	00177713          	andi	a4,a4,1
        data >>= 1;
    28b8:	0076d693          	srli	a3,a3,0x7
        if (x16 == 1)
    28bc:	0017d793          	srli	a5,a5,0x1
    28c0:	00070c63          	beqz	a4,28d8 <crcu16+0x11c>
            crc |= 0x8000;
    28c4:	ffffa737          	lui	a4,0xffffa
    28c8:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28cc:	00e7c7b3          	xor	a5,a5,a4
    28d0:	01079793          	slli	a5,a5,0x10
    28d4:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    28d8:	0017f713          	andi	a4,a5,1
    28dc:	0017d793          	srli	a5,a5,0x1
    28e0:	00d70c63          	beq	a4,a3,28f8 <crcu16+0x13c>
            crc |= 0x8000;
    28e4:	ffffa737          	lui	a4,0xffffa
    28e8:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28ec:	00e7c7b3          	xor	a5,a5,a4
    28f0:	01079793          	slli	a5,a5,0x10
    28f4:	0107d793          	srli	a5,a5,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28f8:	00855513          	srli	a0,a0,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28fc:	00a7c633          	xor	a2,a5,a0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2900:	0ff57713          	andi	a4,a0,255
        if (x16 == 1)
    2904:	00167613          	andi	a2,a2,1
        data >>= 1;
    2908:	00175693          	srli	a3,a4,0x1
        if (x16 == 1)
    290c:	0017d513          	srli	a0,a5,0x1
    2910:	00060c63          	beqz	a2,2928 <crcu16+0x16c>
            crc |= 0x8000;
    2914:	ffffa7b7          	lui	a5,0xffffa
    2918:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    291c:	00f54533          	xor	a0,a0,a5
    2920:	01051513          	slli	a0,a0,0x10
    2924:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2928:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    292c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2930:	00275793          	srli	a5,a4,0x2
        if (x16 == 1)
    2934:	00155513          	srli	a0,a0,0x1
    2938:	00068c63          	beqz	a3,2950 <crcu16+0x194>
            crc |= 0x8000;
    293c:	ffffa6b7          	lui	a3,0xffffa
    2940:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2944:	00d54533          	xor	a0,a0,a3
    2948:	01051513          	slli	a0,a0,0x10
    294c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2950:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2954:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2958:	00375693          	srli	a3,a4,0x3
        if (x16 == 1)
    295c:	00155513          	srli	a0,a0,0x1
    2960:	00078c63          	beqz	a5,2978 <crcu16+0x1bc>
            crc |= 0x8000;
    2964:	ffffa7b7          	lui	a5,0xffffa
    2968:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    296c:	00f54533          	xor	a0,a0,a5
    2970:	01051513          	slli	a0,a0,0x10
    2974:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2978:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    297c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2980:	00475793          	srli	a5,a4,0x4
        if (x16 == 1)
    2984:	00155513          	srli	a0,a0,0x1
    2988:	00068c63          	beqz	a3,29a0 <crcu16+0x1e4>
            crc |= 0x8000;
    298c:	ffffa6b7          	lui	a3,0xffffa
    2990:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2994:	00d54533          	xor	a0,a0,a3
    2998:	01051513          	slli	a0,a0,0x10
    299c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a0:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    29a4:	0017f793          	andi	a5,a5,1
        data >>= 1;
    29a8:	00575693          	srli	a3,a4,0x5
        if (x16 == 1)
    29ac:	00155513          	srli	a0,a0,0x1
    29b0:	00078c63          	beqz	a5,29c8 <crcu16+0x20c>
            crc |= 0x8000;
    29b4:	ffffa7b7          	lui	a5,0xffffa
    29b8:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    29bc:	00f54533          	xor	a0,a0,a5
    29c0:	01051513          	slli	a0,a0,0x10
    29c4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29c8:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    29cc:	0016f693          	andi	a3,a3,1
        data >>= 1;
    29d0:	00675793          	srli	a5,a4,0x6
        if (x16 == 1)
    29d4:	00155513          	srli	a0,a0,0x1
    29d8:	00068c63          	beqz	a3,29f0 <crcu16+0x234>
            crc |= 0x8000;
    29dc:	ffffa6b7          	lui	a3,0xffffa
    29e0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    29e4:	00d54533          	xor	a0,a0,a3
    29e8:	01051513          	slli	a0,a0,0x10
    29ec:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29f0:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    29f4:	0017f793          	andi	a5,a5,1
        data >>= 1;
    29f8:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    29fc:	00155513          	srli	a0,a0,0x1
    2a00:	00078c63          	beqz	a5,2a18 <crcu16+0x25c>
            crc |= 0x8000;
    2a04:	ffffa7b7          	lui	a5,0xffffa
    2a08:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a0c:	00f54533          	xor	a0,a0,a5
    2a10:	01051513          	slli	a0,a0,0x10
    2a14:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2a18:	00157793          	andi	a5,a0,1
    2a1c:	00155513          	srli	a0,a0,0x1
    2a20:	00e78c63          	beq	a5,a4,2a38 <crcu16+0x27c>
            crc |= 0x8000;
    2a24:	ffffa7b7          	lui	a5,0xffffa
    2a28:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a2c:	00f54533          	xor	a0,a0,a5
    2a30:	01051513          	slli	a0,a0,0x10
    2a34:	01055513          	srli	a0,a0,0x10
    return crc;
}
    2a38:	00008067          	ret

00002a3c <crcu32>:
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a3c:	00a5c833          	xor	a6,a1,a0
    crc = crcu8((ee_u8)(newval), crc);
    2a40:	0ff57693          	andi	a3,a0,255
    return crc;
}
ee_u16
crc16(ee_s16 newval, ee_u16 crc)
{
    return crcu16((ee_u16)newval, crc);
    2a44:	01051713          	slli	a4,a0,0x10
        if (x16 == 1)
    2a48:	00187813          	andi	a6,a6,1
    return crcu16((ee_u16)newval, crc);
    2a4c:	01075713          	srli	a4,a4,0x10
        data >>= 1;
    2a50:	0016d613          	srli	a2,a3,0x1
        if (x16 == 1)
    2a54:	0015d793          	srli	a5,a1,0x1
    2a58:	00080c63          	beqz	a6,2a70 <crcu32+0x34>
            crc |= 0x8000;
    2a5c:	ffffa5b7          	lui	a1,0xffffa
    2a60:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a64:	00b7c7b3          	xor	a5,a5,a1
    2a68:	01079793          	slli	a5,a5,0x10
    2a6c:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a70:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2a74:	00167593          	andi	a1,a2,1
    2a78:	0017d793          	srli	a5,a5,0x1
        data >>= 1;
    2a7c:	0026d613          	srli	a2,a3,0x2
        if (x16 == 1)
    2a80:	00058c63          	beqz	a1,2a98 <crcu32+0x5c>
            crc |= 0x8000;
    2a84:	ffffa5b7          	lui	a1,0xffffa
    2a88:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a8c:	00b7c7b3          	xor	a5,a5,a1
    2a90:	01079793          	slli	a5,a5,0x10
    2a94:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a98:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2a9c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2aa0:	0036d593          	srli	a1,a3,0x3
        if (x16 == 1)
    2aa4:	0017d793          	srli	a5,a5,0x1
    2aa8:	00060c63          	beqz	a2,2ac0 <crcu32+0x84>
            crc |= 0x8000;
    2aac:	ffffa637          	lui	a2,0xffffa
    2ab0:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ab4:	00c7c7b3          	xor	a5,a5,a2
    2ab8:	01079793          	slli	a5,a5,0x10
    2abc:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac0:	00b7c5b3          	xor	a1,a5,a1
        if (x16 == 1)
    2ac4:	0015f593          	andi	a1,a1,1
        data >>= 1;
    2ac8:	0046d613          	srli	a2,a3,0x4
        if (x16 == 1)
    2acc:	0017d793          	srli	a5,a5,0x1
    2ad0:	00058c63          	beqz	a1,2ae8 <crcu32+0xac>
            crc |= 0x8000;
    2ad4:	ffffa5b7          	lui	a1,0xffffa
    2ad8:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2adc:	00b7c7b3          	xor	a5,a5,a1
    2ae0:	01079793          	slli	a5,a5,0x10
    2ae4:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ae8:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2aec:	00167613          	andi	a2,a2,1
        data >>= 1;
    2af0:	0056d593          	srli	a1,a3,0x5
        if (x16 == 1)
    2af4:	0017d793          	srli	a5,a5,0x1
    2af8:	00060c63          	beqz	a2,2b10 <crcu32+0xd4>
            crc |= 0x8000;
    2afc:	ffffa637          	lui	a2,0xffffa
    2b00:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b04:	00c7c7b3          	xor	a5,a5,a2
    2b08:	01079793          	slli	a5,a5,0x10
    2b0c:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b10:	00b7c5b3          	xor	a1,a5,a1
        if (x16 == 1)
    2b14:	0015f593          	andi	a1,a1,1
        data >>= 1;
    2b18:	0066d613          	srli	a2,a3,0x6
        if (x16 == 1)
    2b1c:	0017d793          	srli	a5,a5,0x1
    2b20:	00058c63          	beqz	a1,2b38 <crcu32+0xfc>
            crc |= 0x8000;
    2b24:	ffffa5b7          	lui	a1,0xffffa
    2b28:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b2c:	00b7c7b3          	xor	a5,a5,a1
    2b30:	01079793          	slli	a5,a5,0x10
    2b34:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b38:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2b3c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2b40:	0076d693          	srli	a3,a3,0x7
        if (x16 == 1)
    2b44:	0017d793          	srli	a5,a5,0x1
    2b48:	00060c63          	beqz	a2,2b60 <crcu32+0x124>
            crc |= 0x8000;
    2b4c:	ffffa637          	lui	a2,0xffffa
    2b50:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b54:	00c7c7b3          	xor	a5,a5,a2
    2b58:	01079793          	slli	a5,a5,0x10
    2b5c:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    2b60:	0017f613          	andi	a2,a5,1
    2b64:	0017d793          	srli	a5,a5,0x1
    2b68:	00d60c63          	beq	a2,a3,2b80 <crcu32+0x144>
            crc |= 0x8000;
    2b6c:	ffffa6b7          	lui	a3,0xffffa
    2b70:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b74:	00d7c7b3          	xor	a5,a5,a3
    2b78:	01079793          	slli	a5,a5,0x10
    2b7c:	0107d793          	srli	a5,a5,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b80:	00875713          	srli	a4,a4,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b84:	00e7c6b3          	xor	a3,a5,a4
        if (x16 == 1)
    2b88:	0016f693          	andi	a3,a3,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b8c:	0ff77713          	andi	a4,a4,255
        data >>= 1;
    2b90:	00175613          	srli	a2,a4,0x1
        if (x16 == 1)
    2b94:	0017d793          	srli	a5,a5,0x1
    2b98:	00068c63          	beqz	a3,2bb0 <crcu32+0x174>
            crc |= 0x8000;
    2b9c:	ffffa6b7          	lui	a3,0xffffa
    2ba0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ba4:	00d7c7b3          	xor	a5,a5,a3
    2ba8:	01079793          	slli	a5,a5,0x10
    2bac:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb0:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2bb4:	00167613          	andi	a2,a2,1
        data >>= 1;
    2bb8:	00275693          	srli	a3,a4,0x2
        if (x16 == 1)
    2bbc:	0017d793          	srli	a5,a5,0x1
    2bc0:	00060c63          	beqz	a2,2bd8 <crcu32+0x19c>
            crc |= 0x8000;
    2bc4:	ffffa637          	lui	a2,0xffffa
    2bc8:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2bcc:	00c7c7b3          	xor	a5,a5,a2
    2bd0:	01079793          	slli	a5,a5,0x10
    2bd4:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bd8:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    2bdc:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2be0:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2be4:	0017d793          	srli	a5,a5,0x1
    2be8:	00068c63          	beqz	a3,2c00 <crcu32+0x1c4>
            crc |= 0x8000;
    2bec:	ffffa6b7          	lui	a3,0xffffa
    2bf0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2bf4:	00d7c7b3          	xor	a5,a5,a3
    2bf8:	01079793          	slli	a5,a5,0x10
    2bfc:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c00:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2c04:	00167613          	andi	a2,a2,1
        data >>= 1;
    2c08:	00475693          	srli	a3,a4,0x4
        if (x16 == 1)
    2c0c:	0017d793          	srli	a5,a5,0x1
    2c10:	00060c63          	beqz	a2,2c28 <crcu32+0x1ec>
            crc |= 0x8000;
    2c14:	ffffa637          	lui	a2,0xffffa
    2c18:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c1c:	00c7c7b3          	xor	a5,a5,a2
    2c20:	01079793          	slli	a5,a5,0x10
    2c24:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c28:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    2c2c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2c30:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    2c34:	0017d793          	srli	a5,a5,0x1
    2c38:	00068c63          	beqz	a3,2c50 <crcu32+0x214>
            crc |= 0x8000;
    2c3c:	ffffa6b7          	lui	a3,0xffffa
    2c40:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c44:	00d7c7b3          	xor	a5,a5,a3
    2c48:	01079793          	slli	a5,a5,0x10
    2c4c:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c50:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2c54:	00167613          	andi	a2,a2,1
        data >>= 1;
    2c58:	00675693          	srli	a3,a4,0x6
        if (x16 == 1)
    2c5c:	0017d793          	srli	a5,a5,0x1
    2c60:	00060c63          	beqz	a2,2c78 <crcu32+0x23c>
            crc |= 0x8000;
    2c64:	ffffa637          	lui	a2,0xffffa
    2c68:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c6c:	00c7c7b3          	xor	a5,a5,a2
    2c70:	01079793          	slli	a5,a5,0x10
    2c74:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c78:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    2c7c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2c80:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    2c84:	0017d793          	srli	a5,a5,0x1
    2c88:	00068c63          	beqz	a3,2ca0 <crcu32+0x264>
            crc |= 0x8000;
    2c8c:	ffffa6b7          	lui	a3,0xffffa
    2c90:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c94:	00d7c7b3          	xor	a5,a5,a3
    2c98:	01079793          	slli	a5,a5,0x10
    2c9c:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    2ca0:	0017f693          	andi	a3,a5,1
    2ca4:	0017d793          	srli	a5,a5,0x1
    2ca8:	00e68c63          	beq	a3,a4,2cc0 <crcu32+0x284>
            crc |= 0x8000;
    2cac:	ffffa737          	lui	a4,0xffffa
    2cb0:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2cb4:	00e7c7b3          	xor	a5,a5,a4
    2cb8:	01079793          	slli	a5,a5,0x10
    2cbc:	0107d793          	srli	a5,a5,0x10
    crc = crc16((ee_s16)(newval >> 16), crc);
    2cc0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cc4:	00a7c5b3          	xor	a1,a5,a0
    crc = crcu8((ee_u8)(newval), crc);
    2cc8:	0ff57713          	andi	a4,a0,255
    return crcu16((ee_u16)newval, crc);
    2ccc:	01051693          	slli	a3,a0,0x10
        if (x16 == 1)
    2cd0:	0015f593          	andi	a1,a1,1
    return crcu16((ee_u16)newval, crc);
    2cd4:	0106d693          	srli	a3,a3,0x10
        data >>= 1;
    2cd8:	00175613          	srli	a2,a4,0x1
        if (x16 == 1)
    2cdc:	0017d513          	srli	a0,a5,0x1
    2ce0:	00058c63          	beqz	a1,2cf8 <crcu32+0x2bc>
            crc |= 0x8000;
    2ce4:	ffffa7b7          	lui	a5,0xffffa
    2ce8:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2cec:	00f54533          	xor	a0,a0,a5
    2cf0:	01051513          	slli	a0,a0,0x10
    2cf4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cf8:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2cfc:	00167613          	andi	a2,a2,1
        data >>= 1;
    2d00:	00275793          	srli	a5,a4,0x2
        if (x16 == 1)
    2d04:	00155513          	srli	a0,a0,0x1
    2d08:	00060c63          	beqz	a2,2d20 <crcu32+0x2e4>
            crc |= 0x8000;
    2d0c:	ffffa637          	lui	a2,0xffffa
    2d10:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d14:	00c54533          	xor	a0,a0,a2
    2d18:	01051513          	slli	a0,a0,0x10
    2d1c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d20:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2d24:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2d28:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2d2c:	00155513          	srli	a0,a0,0x1
    2d30:	00078c63          	beqz	a5,2d48 <crcu32+0x30c>
            crc |= 0x8000;
    2d34:	ffffa7b7          	lui	a5,0xffffa
    2d38:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d3c:	00f54533          	xor	a0,a0,a5
    2d40:	01051513          	slli	a0,a0,0x10
    2d44:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d48:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2d4c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2d50:	00475793          	srli	a5,a4,0x4
        if (x16 == 1)
    2d54:	00155513          	srli	a0,a0,0x1
    2d58:	00060c63          	beqz	a2,2d70 <crcu32+0x334>
            crc |= 0x8000;
    2d5c:	ffffa637          	lui	a2,0xffffa
    2d60:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d64:	00c54533          	xor	a0,a0,a2
    2d68:	01051513          	slli	a0,a0,0x10
    2d6c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d70:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2d74:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2d78:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    2d7c:	00155513          	srli	a0,a0,0x1
    2d80:	00078c63          	beqz	a5,2d98 <crcu32+0x35c>
            crc |= 0x8000;
    2d84:	ffffa7b7          	lui	a5,0xffffa
    2d88:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d8c:	00f54533          	xor	a0,a0,a5
    2d90:	01051513          	slli	a0,a0,0x10
    2d94:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d98:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2d9c:	00167613          	andi	a2,a2,1
        data >>= 1;
    2da0:	00675793          	srli	a5,a4,0x6
        if (x16 == 1)
    2da4:	00155513          	srli	a0,a0,0x1
    2da8:	00060c63          	beqz	a2,2dc0 <crcu32+0x384>
            crc |= 0x8000;
    2dac:	ffffa637          	lui	a2,0xffffa
    2db0:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2db4:	00c54533          	xor	a0,a0,a2
    2db8:	01051513          	slli	a0,a0,0x10
    2dbc:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2dc0:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2dc4:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2dc8:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    2dcc:	00155513          	srli	a0,a0,0x1
    2dd0:	00078c63          	beqz	a5,2de8 <crcu32+0x3ac>
            crc |= 0x8000;
    2dd4:	ffffa7b7          	lui	a5,0xffffa
    2dd8:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ddc:	00f54533          	xor	a0,a0,a5
    2de0:	01051513          	slli	a0,a0,0x10
    2de4:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2de8:	00157793          	andi	a5,a0,1
    2dec:	00155513          	srli	a0,a0,0x1
    2df0:	00e78c63          	beq	a5,a4,2e08 <crcu32+0x3cc>
            crc |= 0x8000;
    2df4:	ffffa7b7          	lui	a5,0xffffa
    2df8:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2dfc:	00f54533          	xor	a0,a0,a5
    2e00:	01051513          	slli	a0,a0,0x10
    2e04:	01055513          	srli	a0,a0,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e08:	0086d793          	srli	a5,a3,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e0c:	00f54733          	xor	a4,a0,a5
        if (x16 == 1)
    2e10:	00177713          	andi	a4,a4,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e14:	0ff7f793          	andi	a5,a5,255
        data >>= 1;
    2e18:	0017d693          	srli	a3,a5,0x1
        if (x16 == 1)
    2e1c:	00155513          	srli	a0,a0,0x1
    2e20:	00070c63          	beqz	a4,2e38 <crcu32+0x3fc>
            crc |= 0x8000;
    2e24:	ffffa737          	lui	a4,0xffffa
    2e28:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e2c:	00e54533          	xor	a0,a0,a4
    2e30:	01051513          	slli	a0,a0,0x10
    2e34:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e38:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2e3c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2e40:	0027d713          	srli	a4,a5,0x2
        if (x16 == 1)
    2e44:	00155513          	srli	a0,a0,0x1
    2e48:	00068c63          	beqz	a3,2e60 <crcu32+0x424>
            crc |= 0x8000;
    2e4c:	ffffa6b7          	lui	a3,0xffffa
    2e50:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e54:	00d54533          	xor	a0,a0,a3
    2e58:	01051513          	slli	a0,a0,0x10
    2e5c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e60:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2e64:	00177713          	andi	a4,a4,1
        data >>= 1;
    2e68:	0037d693          	srli	a3,a5,0x3
        if (x16 == 1)
    2e6c:	00155513          	srli	a0,a0,0x1
    2e70:	00070c63          	beqz	a4,2e88 <crcu32+0x44c>
            crc |= 0x8000;
    2e74:	ffffa737          	lui	a4,0xffffa
    2e78:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e7c:	00e54533          	xor	a0,a0,a4
    2e80:	01051513          	slli	a0,a0,0x10
    2e84:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e88:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2e8c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2e90:	0047d713          	srli	a4,a5,0x4
        if (x16 == 1)
    2e94:	00155513          	srli	a0,a0,0x1
    2e98:	00068c63          	beqz	a3,2eb0 <crcu32+0x474>
            crc |= 0x8000;
    2e9c:	ffffa6b7          	lui	a3,0xffffa
    2ea0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ea4:	00d54533          	xor	a0,a0,a3
    2ea8:	01051513          	slli	a0,a0,0x10
    2eac:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb0:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2eb4:	00177713          	andi	a4,a4,1
        data >>= 1;
    2eb8:	0057d693          	srli	a3,a5,0x5
        if (x16 == 1)
    2ebc:	00155513          	srli	a0,a0,0x1
    2ec0:	00070c63          	beqz	a4,2ed8 <crcu32+0x49c>
            crc |= 0x8000;
    2ec4:	ffffa737          	lui	a4,0xffffa
    2ec8:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ecc:	00e54533          	xor	a0,a0,a4
    2ed0:	01051513          	slli	a0,a0,0x10
    2ed4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ed8:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2edc:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2ee0:	0067d713          	srli	a4,a5,0x6
        if (x16 == 1)
    2ee4:	00155513          	srli	a0,a0,0x1
    2ee8:	00068c63          	beqz	a3,2f00 <crcu32+0x4c4>
            crc |= 0x8000;
    2eec:	ffffa6b7          	lui	a3,0xffffa
    2ef0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ef4:	00d54533          	xor	a0,a0,a3
    2ef8:	01051513          	slli	a0,a0,0x10
    2efc:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f00:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2f04:	00177713          	andi	a4,a4,1
        data >>= 1;
    2f08:	0077d793          	srli	a5,a5,0x7
        if (x16 == 1)
    2f0c:	00155513          	srli	a0,a0,0x1
    2f10:	00070c63          	beqz	a4,2f28 <crcu32+0x4ec>
            crc |= 0x8000;
    2f14:	ffffa737          	lui	a4,0xffffa
    2f18:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2f1c:	00e54533          	xor	a0,a0,a4
    2f20:	01051513          	slli	a0,a0,0x10
    2f24:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2f28:	00157713          	andi	a4,a0,1
    2f2c:	00155513          	srli	a0,a0,0x1
    2f30:	00f70c63          	beq	a4,a5,2f48 <crcu32+0x50c>
            crc |= 0x8000;
    2f34:	ffffa7b7          	lui	a5,0xffffa
    2f38:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2f3c:	00f54533          	xor	a0,a0,a5
    2f40:	01051513          	slli	a0,a0,0x10
    2f44:	01055513          	srli	a0,a0,0x10
}
    2f48:	00008067          	ret

00002f4c <crc16>:
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f4c:	00a5c633          	xor	a2,a1,a0
    crc = crcu8((ee_u8)(newval), crc);
    2f50:	0ff57713          	andi	a4,a0,255
    return crcu16((ee_u16)newval, crc);
    2f54:	01051793          	slli	a5,a0,0x10
        if (x16 == 1)
    2f58:	00167613          	andi	a2,a2,1
    return crcu16((ee_u16)newval, crc);
    2f5c:	0107d793          	srli	a5,a5,0x10
        data >>= 1;
    2f60:	00175693          	srli	a3,a4,0x1
        if (x16 == 1)
    2f64:	0015d513          	srli	a0,a1,0x1
    2f68:	00060c63          	beqz	a2,2f80 <crc16+0x34>
            crc |= 0x8000;
    2f6c:	ffffa5b7          	lui	a1,0xffffa
    2f70:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2f74:	00b54533          	xor	a0,a0,a1
    2f78:	01051513          	slli	a0,a0,0x10
    2f7c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f80:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2f84:	0016f613          	andi	a2,a3,1
    2f88:	00155513          	srli	a0,a0,0x1
        data >>= 1;
    2f8c:	00275693          	srli	a3,a4,0x2
        if (x16 == 1)
    2f90:	00060c63          	beqz	a2,2fa8 <crc16+0x5c>
            crc |= 0x8000;
    2f94:	ffffa5b7          	lui	a1,0xffffa
    2f98:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2f9c:	00b54533          	xor	a0,a0,a1
    2fa0:	01051513          	slli	a0,a0,0x10
    2fa4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fa8:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2fac:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2fb0:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2fb4:	00155513          	srli	a0,a0,0x1
    2fb8:	00068c63          	beqz	a3,2fd0 <crc16+0x84>
            crc |= 0x8000;
    2fbc:	ffffa6b7          	lui	a3,0xffffa
    2fc0:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2fc4:	00d54533          	xor	a0,a0,a3
    2fc8:	01051513          	slli	a0,a0,0x10
    2fcc:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fd0:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2fd4:	00167613          	andi	a2,a2,1
        data >>= 1;
    2fd8:	00475693          	srli	a3,a4,0x4
        if (x16 == 1)
    2fdc:	00155513          	srli	a0,a0,0x1
    2fe0:	00060c63          	beqz	a2,2ff8 <crc16+0xac>
            crc |= 0x8000;
    2fe4:	ffffa637          	lui	a2,0xffffa
    2fe8:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2fec:	00c54533          	xor	a0,a0,a2
    2ff0:	01051513          	slli	a0,a0,0x10
    2ff4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ff8:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2ffc:	0016f693          	andi	a3,a3,1
        data >>= 1;
    3000:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    3004:	00155513          	srli	a0,a0,0x1
    3008:	00068c63          	beqz	a3,3020 <crc16+0xd4>
            crc |= 0x8000;
    300c:	ffffa6b7          	lui	a3,0xffffa
    3010:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    3014:	00d54533          	xor	a0,a0,a3
    3018:	01051513          	slli	a0,a0,0x10
    301c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3020:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    3024:	00167613          	andi	a2,a2,1
        data >>= 1;
    3028:	00675693          	srli	a3,a4,0x6
        if (x16 == 1)
    302c:	00155513          	srli	a0,a0,0x1
    3030:	00060c63          	beqz	a2,3048 <crc16+0xfc>
            crc |= 0x8000;
    3034:	ffffa637          	lui	a2,0xffffa
    3038:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    303c:	00c54533          	xor	a0,a0,a2
    3040:	01051513          	slli	a0,a0,0x10
    3044:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3048:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    304c:	0016f693          	andi	a3,a3,1
        data >>= 1;
    3050:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    3054:	00155513          	srli	a0,a0,0x1
    3058:	00068c63          	beqz	a3,3070 <crc16+0x124>
            crc |= 0x8000;
    305c:	ffffa6b7          	lui	a3,0xffffa
    3060:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    3064:	00d54533          	xor	a0,a0,a3
    3068:	01051513          	slli	a0,a0,0x10
    306c:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    3070:	00157693          	andi	a3,a0,1
    3074:	00155513          	srli	a0,a0,0x1
    3078:	00e68c63          	beq	a3,a4,3090 <crc16+0x144>
            crc |= 0x8000;
    307c:	ffffa737          	lui	a4,0xffffa
    3080:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    3084:	00e54533          	xor	a0,a0,a4
    3088:	01051513          	slli	a0,a0,0x10
    308c:	01055513          	srli	a0,a0,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    3090:	0087d793          	srli	a5,a5,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3094:	00f54733          	xor	a4,a0,a5
        if (x16 == 1)
    3098:	00177713          	andi	a4,a4,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    309c:	0ff7f793          	andi	a5,a5,255
        data >>= 1;
    30a0:	0017d693          	srli	a3,a5,0x1
        if (x16 == 1)
    30a4:	00155513          	srli	a0,a0,0x1
    30a8:	00070c63          	beqz	a4,30c0 <crc16+0x174>
            crc |= 0x8000;
    30ac:	ffffa737          	lui	a4,0xffffa
    30b0:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    30b4:	00e54533          	xor	a0,a0,a4
    30b8:	01051513          	slli	a0,a0,0x10
    30bc:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30c0:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    30c4:	0016f693          	andi	a3,a3,1
        data >>= 1;
    30c8:	0027d713          	srli	a4,a5,0x2
        if (x16 == 1)
    30cc:	00155513          	srli	a0,a0,0x1
    30d0:	00068c63          	beqz	a3,30e8 <crc16+0x19c>
            crc |= 0x8000;
    30d4:	ffffa6b7          	lui	a3,0xffffa
    30d8:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    30dc:	00d54533          	xor	a0,a0,a3
    30e0:	01051513          	slli	a0,a0,0x10
    30e4:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30e8:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    30ec:	00177713          	andi	a4,a4,1
        data >>= 1;
    30f0:	0037d693          	srli	a3,a5,0x3
        if (x16 == 1)
    30f4:	00155513          	srli	a0,a0,0x1
    30f8:	00070c63          	beqz	a4,3110 <crc16+0x1c4>
            crc |= 0x8000;
    30fc:	ffffa737          	lui	a4,0xffffa
    3100:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    3104:	00e54533          	xor	a0,a0,a4
    3108:	01051513          	slli	a0,a0,0x10
    310c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3110:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    3114:	0016f693          	andi	a3,a3,1
        data >>= 1;
    3118:	0047d713          	srli	a4,a5,0x4
        if (x16 == 1)
    311c:	00155513          	srli	a0,a0,0x1
    3120:	00068c63          	beqz	a3,3138 <crc16+0x1ec>
            crc |= 0x8000;
    3124:	ffffa6b7          	lui	a3,0xffffa
    3128:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    312c:	00d54533          	xor	a0,a0,a3
    3130:	01051513          	slli	a0,a0,0x10
    3134:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3138:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    313c:	00177713          	andi	a4,a4,1
        data >>= 1;
    3140:	0057d693          	srli	a3,a5,0x5
        if (x16 == 1)
    3144:	00155513          	srli	a0,a0,0x1
    3148:	00070c63          	beqz	a4,3160 <crc16+0x214>
            crc |= 0x8000;
    314c:	ffffa737          	lui	a4,0xffffa
    3150:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    3154:	00e54533          	xor	a0,a0,a4
    3158:	01051513          	slli	a0,a0,0x10
    315c:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3160:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    3164:	0016f693          	andi	a3,a3,1
        data >>= 1;
    3168:	0067d713          	srli	a4,a5,0x6
        if (x16 == 1)
    316c:	00155513          	srli	a0,a0,0x1
    3170:	00068c63          	beqz	a3,3188 <crc16+0x23c>
            crc |= 0x8000;
    3174:	ffffa6b7          	lui	a3,0xffffa
    3178:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    317c:	00d54533          	xor	a0,a0,a3
    3180:	01051513          	slli	a0,a0,0x10
    3184:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3188:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    318c:	00177713          	andi	a4,a4,1
        data >>= 1;
    3190:	0077d793          	srli	a5,a5,0x7
        if (x16 == 1)
    3194:	00155513          	srli	a0,a0,0x1
    3198:	00070c63          	beqz	a4,31b0 <crc16+0x264>
            crc |= 0x8000;
    319c:	ffffa737          	lui	a4,0xffffa
    31a0:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    31a4:	00e54533          	xor	a0,a0,a4
    31a8:	01051513          	slli	a0,a0,0x10
    31ac:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    31b0:	00157713          	andi	a4,a0,1
    31b4:	00155513          	srli	a0,a0,0x1
    31b8:	00f70c63          	beq	a4,a5,31d0 <crc16+0x284>
            crc |= 0x8000;
    31bc:	ffffa7b7          	lui	a5,0xffffa
    31c0:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    31c4:	00f54533          	xor	a0,a0,a5
    31c8:	01051513          	slli	a0,a0,0x10
    31cc:	01055513          	srli	a0,a0,0x10
}
    31d0:	00008067          	ret

000031d4 <check_data_types>:
    if (retval > 0)
    {
        ee_printf("ERROR: Please modify the datatypes in core_portme.h!\n");
    }
    return retval;
}
    31d4:	00000513          	li	a0,0
    31d8:	00008067          	ret

000031dc <timer_getms>:
void timer_clear() {

}
//1Mhz
__UINT64_TYPE__ timer_getms() {
    unsigned lo = TIMER->lo;
    31dc:	f10007b7          	lui	a5,0xf1000
    31e0:	0047a503          	lw	a0,4(a5) # f1000004 <__freertos_irq_stack_top+0xefff0004>
    unsigned hi = TIMER->hi;
    31e4:	0087a583          	lw	a1,8(a5)
__UINT64_TYPE__ timer_getms() {
    31e8:	ff010113          	addi	sp,sp,-16
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31ec:	3e800613          	li	a2,1000
    31f0:	00000693          	li	a3,0
__UINT64_TYPE__ timer_getms() {
    31f4:	00112623          	sw	ra,12(sp)
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31f8:	00000097          	auipc	ra,0x0
    31fc:	038080e7          	jalr	56(ra) # 3230 <__udivdi3>
    3200:	00c12083          	lw	ra,12(sp)
    3204:	01010113          	addi	sp,sp,16
    3208:	00008067          	ret

0000320c <_write>:




int _write(int fd, char* pBuffer, int size) {
    for (int i = 0; i < size; i++) {
    320c:	00c05e63          	blez	a2,3228 <_write+0x1c>
    3210:	00c586b3          	add	a3,a1,a2
    USART->write = c;
    3214:	f0000737          	lui	a4,0xf0000
    3218:	0005c783          	lbu	a5,0(a1)
    321c:	00158593          	addi	a1,a1,1
    3220:	00f72223          	sw	a5,4(a4) # f0000004 <__freertos_irq_stack_top+0xeeff0004>
    for (int i = 0; i < size; i++) {
    3224:	fed59ae3          	bne	a1,a3,3218 <_write+0xc>
        send_char(pBuffer[i]);
    }
    return size;
    3228:	00060513          	mv	a0,a2
    322c:	00008067          	ret

00003230 <__udivdi3>:
    3230:	fd010113          	addi	sp,sp,-48
    3234:	02812423          	sw	s0,40(sp)
    3238:	01412c23          	sw	s4,24(sp)
    323c:	02112623          	sw	ra,44(sp)
    3240:	02912223          	sw	s1,36(sp)
    3244:	03212023          	sw	s2,32(sp)
    3248:	01312e23          	sw	s3,28(sp)
    324c:	01512a23          	sw	s5,20(sp)
    3250:	01612823          	sw	s6,16(sp)
    3254:	01712623          	sw	s7,12(sp)
    3258:	01812423          	sw	s8,8(sp)
    325c:	01912223          	sw	s9,4(sp)
    3260:	00050a13          	mv	s4,a0
    3264:	00058413          	mv	s0,a1
    3268:	26069863          	bnez	a3,34d8 <__udivdi3+0x2a8>
    326c:	00068993          	mv	s3,a3
    3270:	00060493          	mv	s1,a2
    3274:	00050913          	mv	s2,a0
    3278:	12c5fa63          	bgeu	a1,a2,33ac <__udivdi3+0x17c>
    327c:	000107b7          	lui	a5,0x10
    3280:	00058a93          	mv	s5,a1
    3284:	30f66863          	bltu	a2,a5,3594 <__udivdi3+0x364>
    3288:	010007b7          	lui	a5,0x1000
    328c:	5ef66463          	bltu	a2,a5,3874 <__udivdi3+0x644>
    3290:	01865713          	srli	a4,a2,0x18
    3294:	01800993          	li	s3,24
    3298:	00ffd797          	auipc	a5,0xffd
    329c:	3b478793          	addi	a5,a5,948 # 100064c <__clz_tab>
    32a0:	00e787b3          	add	a5,a5,a4
    32a4:	0007c783          	lbu	a5,0(a5)
    32a8:	013789b3          	add	s3,a5,s3
    32ac:	02000793          	li	a5,32
    32b0:	413787b3          	sub	a5,a5,s3
    32b4:	00078c63          	beqz	a5,32cc <__udivdi3+0x9c>
    32b8:	00f41433          	sll	s0,s0,a5
    32bc:	013a59b3          	srl	s3,s4,s3
    32c0:	00f614b3          	sll	s1,a2,a5
    32c4:	0089eab3          	or	s5,s3,s0
    32c8:	00fa1933          	sll	s2,s4,a5
    32cc:	0104db13          	srli	s6,s1,0x10
    32d0:	000b0593          	mv	a1,s6
    32d4:	000a8513          	mv	a0,s5
    32d8:	00002097          	auipc	ra,0x2
    32dc:	9f8080e7          	jalr	-1544(ra) # 4cd0 <__umodsi3>
    32e0:	00050a13          	mv	s4,a0
    32e4:	000b0593          	mv	a1,s6
    32e8:	000a8513          	mv	a0,s5
    32ec:	01049a93          	slli	s5,s1,0x10
    32f0:	00002097          	auipc	ra,0x2
    32f4:	998080e7          	jalr	-1640(ra) # 4c88 <__udivsi3>
    32f8:	010ada93          	srli	s5,s5,0x10
    32fc:	00050593          	mv	a1,a0
    3300:	00050413          	mv	s0,a0
    3304:	000a8513          	mv	a0,s5
    3308:	00002097          	auipc	ra,0x2
    330c:	954080e7          	jalr	-1708(ra) # 4c5c <__mulsi3>
    3310:	010a1a13          	slli	s4,s4,0x10
    3314:	01095793          	srli	a5,s2,0x10
    3318:	00fa67b3          	or	a5,s4,a5
    331c:	00a7fc63          	bgeu	a5,a0,3334 <__udivdi3+0x104>
    3320:	009787b3          	add	a5,a5,s1
    3324:	fff40713          	addi	a4,s0,-1
    3328:	0097e463          	bltu	a5,s1,3330 <__udivdi3+0x100>
    332c:	58a7ec63          	bltu	a5,a0,38c4 <__udivdi3+0x694>
    3330:	00070413          	mv	s0,a4
    3334:	40a789b3          	sub	s3,a5,a0
    3338:	000b0593          	mv	a1,s6
    333c:	00098513          	mv	a0,s3
    3340:	00002097          	auipc	ra,0x2
    3344:	990080e7          	jalr	-1648(ra) # 4cd0 <__umodsi3>
    3348:	00050a13          	mv	s4,a0
    334c:	000b0593          	mv	a1,s6
    3350:	00098513          	mv	a0,s3
    3354:	00002097          	auipc	ra,0x2
    3358:	934080e7          	jalr	-1740(ra) # 4c88 <__udivsi3>
    335c:	01091913          	slli	s2,s2,0x10
    3360:	00050593          	mv	a1,a0
    3364:	00050993          	mv	s3,a0
    3368:	010a1a13          	slli	s4,s4,0x10
    336c:	000a8513          	mv	a0,s5
    3370:	01095913          	srli	s2,s2,0x10
    3374:	00002097          	auipc	ra,0x2
    3378:	8e8080e7          	jalr	-1816(ra) # 4c5c <__mulsi3>
    337c:	012a6933          	or	s2,s4,s2
    3380:	00a97e63          	bgeu	s2,a0,339c <__udivdi3+0x16c>
    3384:	01248933          	add	s2,s1,s2
    3388:	fff98793          	addi	a5,s3,-1
    338c:	00996663          	bltu	s2,s1,3398 <__udivdi3+0x168>
    3390:	ffe98993          	addi	s3,s3,-2
    3394:	00a96463          	bltu	s2,a0,339c <__udivdi3+0x16c>
    3398:	00078993          	mv	s3,a5
    339c:	01041513          	slli	a0,s0,0x10
    33a0:	01356533          	or	a0,a0,s3
    33a4:	00000c13          	li	s8,0
    33a8:	1880006f          	j	3530 <__udivdi3+0x300>
    33ac:	00061c63          	bnez	a2,33c4 <__udivdi3+0x194>
    33b0:	00000593          	li	a1,0
    33b4:	00100513          	li	a0,1
    33b8:	00002097          	auipc	ra,0x2
    33bc:	8d0080e7          	jalr	-1840(ra) # 4c88 <__udivsi3>
    33c0:	00050493          	mv	s1,a0
    33c4:	000107b7          	lui	a5,0x10
    33c8:	1af4ea63          	bltu	s1,a5,357c <__udivdi3+0x34c>
    33cc:	010007b7          	lui	a5,0x1000
    33d0:	4af4e863          	bltu	s1,a5,3880 <__udivdi3+0x650>
    33d4:	0184d713          	srli	a4,s1,0x18
    33d8:	01800993          	li	s3,24
    33dc:	00ffd797          	auipc	a5,0xffd
    33e0:	27078793          	addi	a5,a5,624 # 100064c <__clz_tab>
    33e4:	00e787b3          	add	a5,a5,a4
    33e8:	0007c783          	lbu	a5,0(a5)
    33ec:	013789b3          	add	s3,a5,s3
    33f0:	02000793          	li	a5,32
    33f4:	413787b3          	sub	a5,a5,s3
    33f8:	1a079a63          	bnez	a5,35ac <__udivdi3+0x37c>
    33fc:	01049b93          	slli	s7,s1,0x10
    3400:	40940433          	sub	s0,s0,s1
    3404:	0104db13          	srli	s6,s1,0x10
    3408:	010bdb93          	srli	s7,s7,0x10
    340c:	00100c13          	li	s8,1
    3410:	000b0593          	mv	a1,s6
    3414:	00040513          	mv	a0,s0
    3418:	00002097          	auipc	ra,0x2
    341c:	8b8080e7          	jalr	-1864(ra) # 4cd0 <__umodsi3>
    3420:	00050a13          	mv	s4,a0
    3424:	000b0593          	mv	a1,s6
    3428:	00040513          	mv	a0,s0
    342c:	00002097          	auipc	ra,0x2
    3430:	85c080e7          	jalr	-1956(ra) # 4c88 <__udivsi3>
    3434:	000b8593          	mv	a1,s7
    3438:	00050413          	mv	s0,a0
    343c:	00002097          	auipc	ra,0x2
    3440:	820080e7          	jalr	-2016(ra) # 4c5c <__mulsi3>
    3444:	010a1a13          	slli	s4,s4,0x10
    3448:	01095793          	srli	a5,s2,0x10
    344c:	00fa67b3          	or	a5,s4,a5
    3450:	00a7fc63          	bgeu	a5,a0,3468 <__udivdi3+0x238>
    3454:	009787b3          	add	a5,a5,s1
    3458:	fff40713          	addi	a4,s0,-1
    345c:	0097e463          	bltu	a5,s1,3464 <__udivdi3+0x234>
    3460:	46a7e863          	bltu	a5,a0,38d0 <__udivdi3+0x6a0>
    3464:	00070413          	mv	s0,a4
    3468:	40a789b3          	sub	s3,a5,a0
    346c:	000b0593          	mv	a1,s6
    3470:	00098513          	mv	a0,s3
    3474:	00002097          	auipc	ra,0x2
    3478:	85c080e7          	jalr	-1956(ra) # 4cd0 <__umodsi3>
    347c:	00050a13          	mv	s4,a0
    3480:	000b0593          	mv	a1,s6
    3484:	00098513          	mv	a0,s3
    3488:	00002097          	auipc	ra,0x2
    348c:	800080e7          	jalr	-2048(ra) # 4c88 <__udivsi3>
    3490:	01091913          	slli	s2,s2,0x10
    3494:	000b8593          	mv	a1,s7
    3498:	010a1a13          	slli	s4,s4,0x10
    349c:	01095913          	srli	s2,s2,0x10
    34a0:	00050993          	mv	s3,a0
    34a4:	012a6933          	or	s2,s4,s2
    34a8:	00001097          	auipc	ra,0x1
    34ac:	7b4080e7          	jalr	1972(ra) # 4c5c <__mulsi3>
    34b0:	00a97e63          	bgeu	s2,a0,34cc <__udivdi3+0x29c>
    34b4:	01248933          	add	s2,s1,s2
    34b8:	fff98793          	addi	a5,s3,-1
    34bc:	00996663          	bltu	s2,s1,34c8 <__udivdi3+0x298>
    34c0:	ffe98993          	addi	s3,s3,-2
    34c4:	00a96463          	bltu	s2,a0,34cc <__udivdi3+0x29c>
    34c8:	00078993          	mv	s3,a5
    34cc:	01041513          	slli	a0,s0,0x10
    34d0:	01356533          	or	a0,a0,s3
    34d4:	05c0006f          	j	3530 <__udivdi3+0x300>
    34d8:	04d5e863          	bltu	a1,a3,3528 <__udivdi3+0x2f8>
    34dc:	000107b7          	lui	a5,0x10
    34e0:	08f6e463          	bltu	a3,a5,3568 <__udivdi3+0x338>
    34e4:	010007b7          	lui	a5,0x1000
    34e8:	38f6e063          	bltu	a3,a5,3868 <__udivdi3+0x638>
    34ec:	0186d793          	srli	a5,a3,0x18
    34f0:	01800593          	li	a1,24
    34f4:	00ffd717          	auipc	a4,0xffd
    34f8:	15870713          	addi	a4,a4,344 # 100064c <__clz_tab>
    34fc:	00f70733          	add	a4,a4,a5
    3500:	00074783          	lbu	a5,0(a4)
    3504:	02000b13          	li	s6,32
    3508:	00b787b3          	add	a5,a5,a1
    350c:	40fb0b33          	sub	s6,s6,a5
    3510:	180b1c63          	bnez	s6,36a8 <__udivdi3+0x478>
    3514:	3686ec63          	bltu	a3,s0,388c <__udivdi3+0x65c>
    3518:	00ca3633          	sltu	a2,s4,a2
    351c:	00164513          	xori	a0,a2,1
    3520:	00000c13          	li	s8,0
    3524:	00c0006f          	j	3530 <__udivdi3+0x300>
    3528:	00000c13          	li	s8,0
    352c:	00000513          	li	a0,0
    3530:	000c0593          	mv	a1,s8
    3534:	02c12083          	lw	ra,44(sp)
    3538:	02812403          	lw	s0,40(sp)
    353c:	02412483          	lw	s1,36(sp)
    3540:	02012903          	lw	s2,32(sp)
    3544:	01c12983          	lw	s3,28(sp)
    3548:	01812a03          	lw	s4,24(sp)
    354c:	01412a83          	lw	s5,20(sp)
    3550:	01012b03          	lw	s6,16(sp)
    3554:	00c12b83          	lw	s7,12(sp)
    3558:	00812c03          	lw	s8,8(sp)
    355c:	00412c83          	lw	s9,4(sp)
    3560:	03010113          	addi	sp,sp,48
    3564:	00008067          	ret
    3568:	0ff00793          	li	a5,255
    356c:	32d7f663          	bgeu	a5,a3,3898 <__udivdi3+0x668>
    3570:	0086d793          	srli	a5,a3,0x8
    3574:	00800593          	li	a1,8
    3578:	f7dff06f          	j	34f4 <__udivdi3+0x2c4>
    357c:	0ff00793          	li	a5,255
    3580:	00048713          	mv	a4,s1
    3584:	e497fce3          	bgeu	a5,s1,33dc <__udivdi3+0x1ac>
    3588:	0084d713          	srli	a4,s1,0x8
    358c:	00800993          	li	s3,8
    3590:	e4dff06f          	j	33dc <__udivdi3+0x1ac>
    3594:	0ff00793          	li	a5,255
    3598:	00060713          	mv	a4,a2
    359c:	cec7fee3          	bgeu	a5,a2,3298 <__udivdi3+0x68>
    35a0:	00865713          	srli	a4,a2,0x8
    35a4:	00800993          	li	s3,8
    35a8:	cf1ff06f          	j	3298 <__udivdi3+0x68>
    35ac:	00f494b3          	sll	s1,s1,a5
    35b0:	01345c33          	srl	s8,s0,s3
    35b4:	0104db13          	srli	s6,s1,0x10
    35b8:	000b0593          	mv	a1,s6
    35bc:	000c0513          	mv	a0,s8
    35c0:	00f41433          	sll	s0,s0,a5
    35c4:	00fa1933          	sll	s2,s4,a5
    35c8:	013a59b3          	srl	s3,s4,s3
    35cc:	00001097          	auipc	ra,0x1
    35d0:	704080e7          	jalr	1796(ra) # 4cd0 <__umodsi3>
    35d4:	0089eab3          	or	s5,s3,s0
    35d8:	000b0593          	mv	a1,s6
    35dc:	00050993          	mv	s3,a0
    35e0:	01049b93          	slli	s7,s1,0x10
    35e4:	000c0513          	mv	a0,s8
    35e8:	00001097          	auipc	ra,0x1
    35ec:	6a0080e7          	jalr	1696(ra) # 4c88 <__udivsi3>
    35f0:	010bdb93          	srli	s7,s7,0x10
    35f4:	00050593          	mv	a1,a0
    35f8:	00050a13          	mv	s4,a0
    35fc:	000b8513          	mv	a0,s7
    3600:	00001097          	auipc	ra,0x1
    3604:	65c080e7          	jalr	1628(ra) # 4c5c <__mulsi3>
    3608:	01099993          	slli	s3,s3,0x10
    360c:	010ad793          	srli	a5,s5,0x10
    3610:	00f9e7b3          	or	a5,s3,a5
    3614:	00a7fe63          	bgeu	a5,a0,3630 <__udivdi3+0x400>
    3618:	009787b3          	add	a5,a5,s1
    361c:	fffa0713          	addi	a4,s4,-1
    3620:	2897ee63          	bltu	a5,s1,38bc <__udivdi3+0x68c>
    3624:	28a7fc63          	bgeu	a5,a0,38bc <__udivdi3+0x68c>
    3628:	ffea0a13          	addi	s4,s4,-2
    362c:	009787b3          	add	a5,a5,s1
    3630:	40a78433          	sub	s0,a5,a0
    3634:	000b0593          	mv	a1,s6
    3638:	00040513          	mv	a0,s0
    363c:	00001097          	auipc	ra,0x1
    3640:	694080e7          	jalr	1684(ra) # 4cd0 <__umodsi3>
    3644:	00050993          	mv	s3,a0
    3648:	000b0593          	mv	a1,s6
    364c:	00040513          	mv	a0,s0
    3650:	00001097          	auipc	ra,0x1
    3654:	638080e7          	jalr	1592(ra) # 4c88 <__udivsi3>
    3658:	010a9a93          	slli	s5,s5,0x10
    365c:	00050593          	mv	a1,a0
    3660:	00050c13          	mv	s8,a0
    3664:	01099413          	slli	s0,s3,0x10
    3668:	000b8513          	mv	a0,s7
    366c:	010ada93          	srli	s5,s5,0x10
    3670:	00001097          	auipc	ra,0x1
    3674:	5ec080e7          	jalr	1516(ra) # 4c5c <__mulsi3>
    3678:	01546433          	or	s0,s0,s5
    367c:	00a47e63          	bgeu	s0,a0,3698 <__udivdi3+0x468>
    3680:	00940433          	add	s0,s0,s1
    3684:	fffc0793          	addi	a5,s8,-1
    3688:	22946263          	bltu	s0,s1,38ac <__udivdi3+0x67c>
    368c:	22a47063          	bgeu	s0,a0,38ac <__udivdi3+0x67c>
    3690:	ffec0c13          	addi	s8,s8,-2
    3694:	00940433          	add	s0,s0,s1
    3698:	010a1a13          	slli	s4,s4,0x10
    369c:	40a40433          	sub	s0,s0,a0
    36a0:	018a6c33          	or	s8,s4,s8
    36a4:	d6dff06f          	j	3410 <__udivdi3+0x1e0>
    36a8:	00f65bb3          	srl	s7,a2,a5
    36ac:	016696b3          	sll	a3,a3,s6
    36b0:	00dbebb3          	or	s7,s7,a3
    36b4:	00f454b3          	srl	s1,s0,a5
    36b8:	010bd993          	srli	s3,s7,0x10
    36bc:	00fa57b3          	srl	a5,s4,a5
    36c0:	00098593          	mv	a1,s3
    36c4:	01641433          	sll	s0,s0,s6
    36c8:	00048513          	mv	a0,s1
    36cc:	0087e433          	or	s0,a5,s0
    36d0:	01661ab3          	sll	s5,a2,s6
    36d4:	00001097          	auipc	ra,0x1
    36d8:	5fc080e7          	jalr	1532(ra) # 4cd0 <__umodsi3>
    36dc:	00050913          	mv	s2,a0
    36e0:	00098593          	mv	a1,s3
    36e4:	010b9c13          	slli	s8,s7,0x10
    36e8:	00048513          	mv	a0,s1
    36ec:	00001097          	auipc	ra,0x1
    36f0:	59c080e7          	jalr	1436(ra) # 4c88 <__udivsi3>
    36f4:	010c5c13          	srli	s8,s8,0x10
    36f8:	00050593          	mv	a1,a0
    36fc:	00050c93          	mv	s9,a0
    3700:	000c0513          	mv	a0,s8
    3704:	00001097          	auipc	ra,0x1
    3708:	558080e7          	jalr	1368(ra) # 4c5c <__mulsi3>
    370c:	01091913          	slli	s2,s2,0x10
    3710:	01045793          	srli	a5,s0,0x10
    3714:	00f967b3          	or	a5,s2,a5
    3718:	00a7fe63          	bgeu	a5,a0,3734 <__udivdi3+0x504>
    371c:	017787b3          	add	a5,a5,s7
    3720:	fffc8713          	addi	a4,s9,-1
    3724:	1977e863          	bltu	a5,s7,38b4 <__udivdi3+0x684>
    3728:	18a7f663          	bgeu	a5,a0,38b4 <__udivdi3+0x684>
    372c:	ffec8c93          	addi	s9,s9,-2
    3730:	017787b3          	add	a5,a5,s7
    3734:	40a784b3          	sub	s1,a5,a0
    3738:	00098593          	mv	a1,s3
    373c:	00048513          	mv	a0,s1
    3740:	00001097          	auipc	ra,0x1
    3744:	590080e7          	jalr	1424(ra) # 4cd0 <__umodsi3>
    3748:	00050913          	mv	s2,a0
    374c:	00098593          	mv	a1,s3
    3750:	00048513          	mv	a0,s1
    3754:	00001097          	auipc	ra,0x1
    3758:	534080e7          	jalr	1332(ra) # 4c88 <__udivsi3>
    375c:	01041413          	slli	s0,s0,0x10
    3760:	00050593          	mv	a1,a0
    3764:	00050493          	mv	s1,a0
    3768:	01091913          	slli	s2,s2,0x10
    376c:	000c0513          	mv	a0,s8
    3770:	01045413          	srli	s0,s0,0x10
    3774:	00001097          	auipc	ra,0x1
    3778:	4e8080e7          	jalr	1256(ra) # 4c5c <__mulsi3>
    377c:	00896433          	or	s0,s2,s0
    3780:	00a47e63          	bgeu	s0,a0,379c <__udivdi3+0x56c>
    3784:	01740433          	add	s0,s0,s7
    3788:	fff48793          	addi	a5,s1,-1
    378c:	11746c63          	bltu	s0,s7,38a4 <__udivdi3+0x674>
    3790:	10a47a63          	bgeu	s0,a0,38a4 <__udivdi3+0x674>
    3794:	ffe48493          	addi	s1,s1,-2
    3798:	01740433          	add	s0,s0,s7
    379c:	00010e37          	lui	t3,0x10
    37a0:	010c9c93          	slli	s9,s9,0x10
    37a4:	009cecb3          	or	s9,s9,s1
    37a8:	fffe0713          	addi	a4,t3,-1 # ffff <_data_lma+0x4e87>
    37ac:	00ecf833          	and	a6,s9,a4
    37b0:	00eaf733          	and	a4,s5,a4
    37b4:	40a40433          	sub	s0,s0,a0
    37b8:	010cd893          	srli	a7,s9,0x10
    37bc:	010ada93          	srli	s5,s5,0x10
    37c0:	00080513          	mv	a0,a6
    37c4:	00070593          	mv	a1,a4
    37c8:	00001097          	auipc	ra,0x1
    37cc:	494080e7          	jalr	1172(ra) # 4c5c <__mulsi3>
    37d0:	00050313          	mv	t1,a0
    37d4:	000a8593          	mv	a1,s5
    37d8:	00080513          	mv	a0,a6
    37dc:	00001097          	auipc	ra,0x1
    37e0:	480080e7          	jalr	1152(ra) # 4c5c <__mulsi3>
    37e4:	00050813          	mv	a6,a0
    37e8:	00070593          	mv	a1,a4
    37ec:	00088513          	mv	a0,a7
    37f0:	00001097          	auipc	ra,0x1
    37f4:	46c080e7          	jalr	1132(ra) # 4c5c <__mulsi3>
    37f8:	00050713          	mv	a4,a0
    37fc:	000a8593          	mv	a1,s5
    3800:	00088513          	mv	a0,a7
    3804:	00001097          	auipc	ra,0x1
    3808:	458080e7          	jalr	1112(ra) # 4c5c <__mulsi3>
    380c:	01035793          	srli	a5,t1,0x10
    3810:	00e80833          	add	a6,a6,a4
    3814:	010787b3          	add	a5,a5,a6
    3818:	00e7f463          	bgeu	a5,a4,3820 <__udivdi3+0x5f0>
    381c:	01c50533          	add	a0,a0,t3
    3820:	0107d713          	srli	a4,a5,0x10
    3824:	00a70533          	add	a0,a4,a0
    3828:	02a46a63          	bltu	s0,a0,385c <__udivdi3+0x62c>
    382c:	00a40863          	beq	s0,a0,383c <__udivdi3+0x60c>
    3830:	000c8513          	mv	a0,s9
    3834:	00000c13          	li	s8,0
    3838:	cf9ff06f          	j	3530 <__udivdi3+0x300>
    383c:	00010737          	lui	a4,0x10
    3840:	fff70713          	addi	a4,a4,-1 # ffff <_data_lma+0x4e87>
    3844:	00e7f7b3          	and	a5,a5,a4
    3848:	01079793          	slli	a5,a5,0x10
    384c:	00e37333          	and	t1,t1,a4
    3850:	016a1633          	sll	a2,s4,s6
    3854:	006787b3          	add	a5,a5,t1
    3858:	fcf67ce3          	bgeu	a2,a5,3830 <__udivdi3+0x600>
    385c:	fffc8513          	addi	a0,s9,-1
    3860:	00000c13          	li	s8,0
    3864:	ccdff06f          	j	3530 <__udivdi3+0x300>
    3868:	0106d793          	srli	a5,a3,0x10
    386c:	01000593          	li	a1,16
    3870:	c85ff06f          	j	34f4 <__udivdi3+0x2c4>
    3874:	01065713          	srli	a4,a2,0x10
    3878:	01000993          	li	s3,16
    387c:	a1dff06f          	j	3298 <__udivdi3+0x68>
    3880:	0104d713          	srli	a4,s1,0x10
    3884:	01000993          	li	s3,16
    3888:	b55ff06f          	j	33dc <__udivdi3+0x1ac>
    388c:	00000c13          	li	s8,0
    3890:	00100513          	li	a0,1
    3894:	c9dff06f          	j	3530 <__udivdi3+0x300>
    3898:	00068793          	mv	a5,a3
    389c:	00000593          	li	a1,0
    38a0:	c55ff06f          	j	34f4 <__udivdi3+0x2c4>
    38a4:	00078493          	mv	s1,a5
    38a8:	ef5ff06f          	j	379c <__udivdi3+0x56c>
    38ac:	00078c13          	mv	s8,a5
    38b0:	de9ff06f          	j	3698 <__udivdi3+0x468>
    38b4:	00070c93          	mv	s9,a4
    38b8:	e7dff06f          	j	3734 <__udivdi3+0x504>
    38bc:	00070a13          	mv	s4,a4
    38c0:	d71ff06f          	j	3630 <__udivdi3+0x400>
    38c4:	ffe40413          	addi	s0,s0,-2
    38c8:	009787b3          	add	a5,a5,s1
    38cc:	a69ff06f          	j	3334 <__udivdi3+0x104>
    38d0:	ffe40413          	addi	s0,s0,-2
    38d4:	009787b3          	add	a5,a5,s1
    38d8:	b91ff06f          	j	3468 <__udivdi3+0x238>

000038dc <__divdf3>:
    38dc:	fb010113          	addi	sp,sp,-80
    38e0:	0145d713          	srli	a4,a1,0x14
    38e4:	04812423          	sw	s0,72(sp)
    38e8:	04912223          	sw	s1,68(sp)
    38ec:	03512a23          	sw	s5,52(sp)
    38f0:	00c59413          	slli	s0,a1,0xc
    38f4:	04112623          	sw	ra,76(sp)
    38f8:	05212023          	sw	s2,64(sp)
    38fc:	03312e23          	sw	s3,60(sp)
    3900:	03412c23          	sw	s4,56(sp)
    3904:	03612823          	sw	s6,48(sp)
    3908:	03712623          	sw	s7,44(sp)
    390c:	03812423          	sw	s8,40(sp)
    3910:	03912223          	sw	s9,36(sp)
    3914:	03a12023          	sw	s10,32(sp)
    3918:	01b12e23          	sw	s11,28(sp)
    391c:	7ff77713          	andi	a4,a4,2047
    3920:	00050493          	mv	s1,a0
    3924:	00c45413          	srli	s0,s0,0xc
    3928:	01f5da93          	srli	s5,a1,0x1f
    392c:	18070663          	beqz	a4,3ab8 <__divdf3+0x1dc>
    3930:	7ff00793          	li	a5,2047
    3934:	1ef70263          	beq	a4,a5,3b18 <__divdf3+0x23c>
    3938:	01d55b13          	srli	s6,a0,0x1d
    393c:	00341413          	slli	s0,s0,0x3
    3940:	008b6433          	or	s0,s6,s0
    3944:	00800b37          	lui	s6,0x800
    3948:	01646b33          	or	s6,s0,s6
    394c:	00351b93          	slli	s7,a0,0x3
    3950:	c0170913          	addi	s2,a4,-1023
    3954:	00000413          	li	s0,0
    3958:	00000c13          	li	s8,0
    395c:	0146d713          	srli	a4,a3,0x14
    3960:	00c69993          	slli	s3,a3,0xc
    3964:	7ff77713          	andi	a4,a4,2047
    3968:	00060813          	mv	a6,a2
    396c:	00c9d993          	srli	s3,s3,0xc
    3970:	01f6da13          	srli	s4,a3,0x1f
    3974:	0e070863          	beqz	a4,3a64 <__divdf3+0x188>
    3978:	7ff00793          	li	a5,2047
    397c:	04f70863          	beq	a4,a5,39cc <__divdf3+0xf0>
    3980:	01d65493          	srli	s1,a2,0x1d
    3984:	00399993          	slli	s3,s3,0x3
    3988:	0134e9b3          	or	s3,s1,s3
    398c:	c0170713          	addi	a4,a4,-1023
    3990:	008007b7          	lui	a5,0x800
    3994:	00361813          	slli	a6,a2,0x3
    3998:	00f9e4b3          	or	s1,s3,a5
    399c:	40e90933          	sub	s2,s2,a4
    39a0:	00000613          	li	a2,0
    39a4:	00f00793          	li	a5,15
    39a8:	014ac9b3          	xor	s3,s5,s4
    39ac:	2687ec63          	bltu	a5,s0,3c24 <__divdf3+0x348>
    39b0:	00ffd797          	auipc	a5,0xffd
    39b4:	c1c78793          	addi	a5,a5,-996 # 10005cc <scipat+0xd8>
    39b8:	00241413          	slli	s0,s0,0x2
    39bc:	00f40433          	add	s0,s0,a5
    39c0:	00042703          	lw	a4,0(s0)
    39c4:	00f70733          	add	a4,a4,a5
    39c8:	00070067          	jr	a4
    39cc:	00c9e4b3          	or	s1,s3,a2
    39d0:	80190913          	addi	s2,s2,-2047
    39d4:	18049e63          	bnez	s1,3b70 <__divdf3+0x294>
    39d8:	00246413          	ori	s0,s0,2
    39dc:	00000813          	li	a6,0
    39e0:	00200613          	li	a2,2
    39e4:	fc1ff06f          	j	39a4 <__divdf3+0xc8>
    39e8:	7ff00613          	li	a2,2047
    39ec:	00000793          	li	a5,0
    39f0:	00000713          	li	a4,0
    39f4:	00c79793          	slli	a5,a5,0xc
    39f8:	04c12083          	lw	ra,76(sp)
    39fc:	04812403          	lw	s0,72(sp)
    3a00:	01461613          	slli	a2,a2,0x14
    3a04:	00c7d793          	srli	a5,a5,0xc
    3a08:	01f99993          	slli	s3,s3,0x1f
    3a0c:	00c7e7b3          	or	a5,a5,a2
    3a10:	0137e7b3          	or	a5,a5,s3
    3a14:	04412483          	lw	s1,68(sp)
    3a18:	04012903          	lw	s2,64(sp)
    3a1c:	03c12983          	lw	s3,60(sp)
    3a20:	03812a03          	lw	s4,56(sp)
    3a24:	03412a83          	lw	s5,52(sp)
    3a28:	03012b03          	lw	s6,48(sp)
    3a2c:	02c12b83          	lw	s7,44(sp)
    3a30:	02812c03          	lw	s8,40(sp)
    3a34:	02412c83          	lw	s9,36(sp)
    3a38:	02012d03          	lw	s10,32(sp)
    3a3c:	01c12d83          	lw	s11,28(sp)
    3a40:	00070513          	mv	a0,a4
    3a44:	00078593          	mv	a1,a5
    3a48:	05010113          	addi	sp,sp,80
    3a4c:	00008067          	ret
    3a50:	00000993          	li	s3,0
    3a54:	7ff00613          	li	a2,2047
    3a58:	000807b7          	lui	a5,0x80
    3a5c:	00000713          	li	a4,0
    3a60:	f95ff06f          	j	39f4 <__divdf3+0x118>
    3a64:	00c9e4b3          	or	s1,s3,a2
    3a68:	0e048c63          	beqz	s1,3b60 <__divdf3+0x284>
    3a6c:	54098263          	beqz	s3,3fb0 <__divdf3+0x6d4>
    3a70:	00098513          	mv	a0,s3
    3a74:	00c12423          	sw	a2,8(sp)
    3a78:	00001097          	auipc	ra,0x1
    3a7c:	2bc080e7          	jalr	700(ra) # 4d34 <__clzsi2>
    3a80:	00812603          	lw	a2,8(sp)
    3a84:	00050693          	mv	a3,a0
    3a88:	ff550493          	addi	s1,a0,-11
    3a8c:	01d00793          	li	a5,29
    3a90:	ff868713          	addi	a4,a3,-8
    3a94:	409787b3          	sub	a5,a5,s1
    3a98:	00e999b3          	sll	s3,s3,a4
    3a9c:	00f657b3          	srl	a5,a2,a5
    3aa0:	0137e4b3          	or	s1,a5,s3
    3aa4:	00e61833          	sll	a6,a2,a4
    3aa8:	01268733          	add	a4,a3,s2
    3aac:	3f370913          	addi	s2,a4,1011
    3ab0:	00000613          	li	a2,0
    3ab4:	ef1ff06f          	j	39a4 <__divdf3+0xc8>
    3ab8:	00a46b33          	or	s6,s0,a0
    3abc:	080b0863          	beqz	s6,3b4c <__divdf3+0x270>
    3ac0:	00d12623          	sw	a3,12(sp)
    3ac4:	00c12423          	sw	a2,8(sp)
    3ac8:	4a040c63          	beqz	s0,3f80 <__divdf3+0x6a4>
    3acc:	00040513          	mv	a0,s0
    3ad0:	00001097          	auipc	ra,0x1
    3ad4:	264080e7          	jalr	612(ra) # 4d34 <__clzsi2>
    3ad8:	00812603          	lw	a2,8(sp)
    3adc:	00c12683          	lw	a3,12(sp)
    3ae0:	00050913          	mv	s2,a0
    3ae4:	ff550713          	addi	a4,a0,-11
    3ae8:	01d00b13          	li	s6,29
    3aec:	ff890b93          	addi	s7,s2,-8
    3af0:	40eb0b33          	sub	s6,s6,a4
    3af4:	01741433          	sll	s0,s0,s7
    3af8:	0164db33          	srl	s6,s1,s6
    3afc:	008b6b33          	or	s6,s6,s0
    3b00:	01749bb3          	sll	s7,s1,s7
    3b04:	c0d00713          	li	a4,-1011
    3b08:	41270933          	sub	s2,a4,s2
    3b0c:	00000413          	li	s0,0
    3b10:	00000c13          	li	s8,0
    3b14:	e49ff06f          	j	395c <__divdf3+0x80>
    3b18:	00a46b33          	or	s6,s0,a0
    3b1c:	000b1c63          	bnez	s6,3b34 <__divdf3+0x258>
    3b20:	00800413          	li	s0,8
    3b24:	00000b93          	li	s7,0
    3b28:	7ff00913          	li	s2,2047
    3b2c:	00200c13          	li	s8,2
    3b30:	e2dff06f          	j	395c <__divdf3+0x80>
    3b34:	00040b13          	mv	s6,s0
    3b38:	00050b93          	mv	s7,a0
    3b3c:	00c00413          	li	s0,12
    3b40:	7ff00913          	li	s2,2047
    3b44:	00300c13          	li	s8,3
    3b48:	e15ff06f          	j	395c <__divdf3+0x80>
    3b4c:	00400413          	li	s0,4
    3b50:	00000b93          	li	s7,0
    3b54:	00000913          	li	s2,0
    3b58:	00100c13          	li	s8,1
    3b5c:	e01ff06f          	j	395c <__divdf3+0x80>
    3b60:	00146413          	ori	s0,s0,1
    3b64:	00000813          	li	a6,0
    3b68:	00100613          	li	a2,1
    3b6c:	e39ff06f          	j	39a4 <__divdf3+0xc8>
    3b70:	00346413          	ori	s0,s0,3
    3b74:	00098493          	mv	s1,s3
    3b78:	00300613          	li	a2,3
    3b7c:	e29ff06f          	j	39a4 <__divdf3+0xc8>
    3b80:	50040263          	beqz	s0,4084 <__divdf3+0x7a8>
    3b84:	00100793          	li	a5,1
    3b88:	408787b3          	sub	a5,a5,s0
    3b8c:	03800713          	li	a4,56
    3b90:	56f75263          	bge	a4,a5,40f4 <__divdf3+0x818>
    3b94:	00000613          	li	a2,0
    3b98:	00000793          	li	a5,0
    3b9c:	00000713          	li	a4,0
    3ba0:	e55ff06f          	j	39f4 <__divdf3+0x118>
    3ba4:	000a0693          	mv	a3,s4
    3ba8:	00200793          	li	a5,2
    3bac:	60f60863          	beq	a2,a5,41bc <__divdf3+0x8e0>
    3bb0:	00300793          	li	a5,3
    3bb4:	e8f60ee3          	beq	a2,a5,3a50 <__divdf3+0x174>
    3bb8:	00100793          	li	a5,1
    3bbc:	00068993          	mv	s3,a3
    3bc0:	fcf60ae3          	beq	a2,a5,3b94 <__divdf3+0x2b8>
    3bc4:	3ff90413          	addi	s0,s2,1023
    3bc8:	fa805ce3          	blez	s0,3b80 <__divdf3+0x2a4>
    3bcc:	00787793          	andi	a5,a6,7
    3bd0:	46079c63          	bnez	a5,4048 <__divdf3+0x76c>
    3bd4:	00385813          	srli	a6,a6,0x3
    3bd8:	00749793          	slli	a5,s1,0x7
    3bdc:	0007da63          	bgez	a5,3bf0 <__divdf3+0x314>
    3be0:	ff0007b7          	lui	a5,0xff000
    3be4:	fff78793          	addi	a5,a5,-1 # feffffff <__freertos_irq_stack_top+0xfdfeffff>
    3be8:	00f4f4b3          	and	s1,s1,a5
    3bec:	40090413          	addi	s0,s2,1024
    3bf0:	7fe00793          	li	a5,2046
    3bf4:	de87cae3          	blt	a5,s0,39e8 <__divdf3+0x10c>
    3bf8:	01d49713          	slli	a4,s1,0x1d
    3bfc:	00949793          	slli	a5,s1,0x9
    3c00:	01076733          	or	a4,a4,a6
    3c04:	00c7d793          	srli	a5,a5,0xc
    3c08:	7ff47613          	andi	a2,s0,2047
    3c0c:	de9ff06f          	j	39f4 <__divdf3+0x118>
    3c10:	000a8693          	mv	a3,s5
    3c14:	000b0493          	mv	s1,s6
    3c18:	000b8813          	mv	a6,s7
    3c1c:	000c0613          	mv	a2,s8
    3c20:	f89ff06f          	j	3ba8 <__divdf3+0x2cc>
    3c24:	3f64e863          	bltu	s1,s6,4014 <__divdf3+0x738>
    3c28:	3e9b0463          	beq	s6,s1,4010 <__divdf3+0x734>
    3c2c:	fff90913          	addi	s2,s2,-1
    3c30:	000b8a13          	mv	s4,s7
    3c34:	00000d93          	li	s11,0
    3c38:	00849793          	slli	a5,s1,0x8
    3c3c:	01885d13          	srli	s10,a6,0x18
    3c40:	00fd6d33          	or	s10,s10,a5
    3c44:	010d5a93          	srli	s5,s10,0x10
    3c48:	000a8593          	mv	a1,s5
    3c4c:	010d1c93          	slli	s9,s10,0x10
    3c50:	000b0513          	mv	a0,s6
    3c54:	00881c13          	slli	s8,a6,0x8
    3c58:	010cdc93          	srli	s9,s9,0x10
    3c5c:	00001097          	auipc	ra,0x1
    3c60:	02c080e7          	jalr	44(ra) # 4c88 <__udivsi3>
    3c64:	00050593          	mv	a1,a0
    3c68:	00050493          	mv	s1,a0
    3c6c:	000c8513          	mv	a0,s9
    3c70:	00001097          	auipc	ra,0x1
    3c74:	fec080e7          	jalr	-20(ra) # 4c5c <__mulsi3>
    3c78:	00050b93          	mv	s7,a0
    3c7c:	000a8593          	mv	a1,s5
    3c80:	000b0513          	mv	a0,s6
    3c84:	00001097          	auipc	ra,0x1
    3c88:	04c080e7          	jalr	76(ra) # 4cd0 <__umodsi3>
    3c8c:	01051513          	slli	a0,a0,0x10
    3c90:	010a5713          	srli	a4,s4,0x10
    3c94:	00a76533          	or	a0,a4,a0
    3c98:	01757e63          	bgeu	a0,s7,3cb4 <__divdf3+0x3d8>
    3c9c:	01a50533          	add	a0,a0,s10
    3ca0:	fff48793          	addi	a5,s1,-1
    3ca4:	45a56463          	bltu	a0,s10,40ec <__divdf3+0x810>
    3ca8:	45757263          	bgeu	a0,s7,40ec <__divdf3+0x810>
    3cac:	ffe48493          	addi	s1,s1,-2
    3cb0:	01a50533          	add	a0,a0,s10
    3cb4:	41750433          	sub	s0,a0,s7
    3cb8:	000a8593          	mv	a1,s5
    3cbc:	00040513          	mv	a0,s0
    3cc0:	00001097          	auipc	ra,0x1
    3cc4:	fc8080e7          	jalr	-56(ra) # 4c88 <__udivsi3>
    3cc8:	00050593          	mv	a1,a0
    3ccc:	00050b13          	mv	s6,a0
    3cd0:	000c8513          	mv	a0,s9
    3cd4:	00001097          	auipc	ra,0x1
    3cd8:	f88080e7          	jalr	-120(ra) # 4c5c <__mulsi3>
    3cdc:	00050b93          	mv	s7,a0
    3ce0:	000a8593          	mv	a1,s5
    3ce4:	00040513          	mv	a0,s0
    3ce8:	00001097          	auipc	ra,0x1
    3cec:	fe8080e7          	jalr	-24(ra) # 4cd0 <__umodsi3>
    3cf0:	010a1a13          	slli	s4,s4,0x10
    3cf4:	01051513          	slli	a0,a0,0x10
    3cf8:	010a5a13          	srli	s4,s4,0x10
    3cfc:	00aa6533          	or	a0,s4,a0
    3d00:	01757e63          	bgeu	a0,s7,3d1c <__divdf3+0x440>
    3d04:	01a50533          	add	a0,a0,s10
    3d08:	fffb0793          	addi	a5,s6,-1 # 7fffff <_data_lma+0x7f4e87>
    3d0c:	3da56c63          	bltu	a0,s10,40e4 <__divdf3+0x808>
    3d10:	3d757a63          	bgeu	a0,s7,40e4 <__divdf3+0x808>
    3d14:	ffeb0b13          	addi	s6,s6,-2
    3d18:	01a50533          	add	a0,a0,s10
    3d1c:	00010e37          	lui	t3,0x10
    3d20:	01049493          	slli	s1,s1,0x10
    3d24:	0164e4b3          	or	s1,s1,s6
    3d28:	fffe0b13          	addi	s6,t3,-1 # ffff <_data_lma+0x4e87>
    3d2c:	0164f833          	and	a6,s1,s6
    3d30:	016c7b33          	and	s6,s8,s6
    3d34:	41750bb3          	sub	s7,a0,s7
    3d38:	0104d713          	srli	a4,s1,0x10
    3d3c:	010c5793          	srli	a5,s8,0x10
    3d40:	00080513          	mv	a0,a6
    3d44:	000b0593          	mv	a1,s6
    3d48:	00001097          	auipc	ra,0x1
    3d4c:	f14080e7          	jalr	-236(ra) # 4c5c <__mulsi3>
    3d50:	00050893          	mv	a7,a0
    3d54:	00078593          	mv	a1,a5
    3d58:	00080513          	mv	a0,a6
    3d5c:	00001097          	auipc	ra,0x1
    3d60:	f00080e7          	jalr	-256(ra) # 4c5c <__mulsi3>
    3d64:	00050813          	mv	a6,a0
    3d68:	000b0593          	mv	a1,s6
    3d6c:	00070513          	mv	a0,a4
    3d70:	00001097          	auipc	ra,0x1
    3d74:	eec080e7          	jalr	-276(ra) # 4c5c <__mulsi3>
    3d78:	00050313          	mv	t1,a0
    3d7c:	00078593          	mv	a1,a5
    3d80:	00070513          	mv	a0,a4
    3d84:	00001097          	auipc	ra,0x1
    3d88:	ed8080e7          	jalr	-296(ra) # 4c5c <__mulsi3>
    3d8c:	0108d713          	srli	a4,a7,0x10
    3d90:	00680833          	add	a6,a6,t1
    3d94:	01070733          	add	a4,a4,a6
    3d98:	00677463          	bgeu	a4,t1,3da0 <__divdf3+0x4c4>
    3d9c:	01c50533          	add	a0,a0,t3
    3da0:	00010637          	lui	a2,0x10
    3da4:	fff60613          	addi	a2,a2,-1 # ffff <_data_lma+0x4e87>
    3da8:	01075693          	srli	a3,a4,0x10
    3dac:	00c77a33          	and	s4,a4,a2
    3db0:	010a1a13          	slli	s4,s4,0x10
    3db4:	00c8f733          	and	a4,a7,a2
    3db8:	00a68533          	add	a0,a3,a0
    3dbc:	00ea0a33          	add	s4,s4,a4
    3dc0:	22abe463          	bltu	s7,a0,3fe8 <__divdf3+0x70c>
    3dc4:	22ab8063          	beq	s7,a0,3fe4 <__divdf3+0x708>
    3dc8:	414d8a33          	sub	s4,s11,s4
    3dcc:	40ab8533          	sub	a0,s7,a0
    3dd0:	014dbbb3          	sltu	s7,s11,s4
    3dd4:	00f12423          	sw	a5,8(sp)
    3dd8:	41750bb3          	sub	s7,a0,s7
    3ddc:	3ff90413          	addi	s0,s2,1023
    3de0:	297d0663          	beq	s10,s7,406c <__divdf3+0x790>
    3de4:	000a8593          	mv	a1,s5
    3de8:	000b8513          	mv	a0,s7
    3dec:	00001097          	auipc	ra,0x1
    3df0:	e9c080e7          	jalr	-356(ra) # 4c88 <__udivsi3>
    3df4:	00050593          	mv	a1,a0
    3df8:	00050d93          	mv	s11,a0
    3dfc:	000c8513          	mv	a0,s9
    3e00:	00001097          	auipc	ra,0x1
    3e04:	e5c080e7          	jalr	-420(ra) # 4c5c <__mulsi3>
    3e08:	00a12623          	sw	a0,12(sp)
    3e0c:	000a8593          	mv	a1,s5
    3e10:	000b8513          	mv	a0,s7
    3e14:	00001097          	auipc	ra,0x1
    3e18:	ebc080e7          	jalr	-324(ra) # 4cd0 <__umodsi3>
    3e1c:	00c12703          	lw	a4,12(sp)
    3e20:	01051513          	slli	a0,a0,0x10
    3e24:	010a5693          	srli	a3,s4,0x10
    3e28:	00a6e533          	or	a0,a3,a0
    3e2c:	00812783          	lw	a5,8(sp)
    3e30:	00e57e63          	bgeu	a0,a4,3e4c <__divdf3+0x570>
    3e34:	01a50533          	add	a0,a0,s10
    3e38:	fffd8693          	addi	a3,s11,-1
    3e3c:	33a56e63          	bltu	a0,s10,4178 <__divdf3+0x89c>
    3e40:	32e57c63          	bgeu	a0,a4,4178 <__divdf3+0x89c>
    3e44:	ffed8d93          	addi	s11,s11,-2
    3e48:	01a50533          	add	a0,a0,s10
    3e4c:	40e50bb3          	sub	s7,a0,a4
    3e50:	000a8593          	mv	a1,s5
    3e54:	000b8513          	mv	a0,s7
    3e58:	00f12623          	sw	a5,12(sp)
    3e5c:	00001097          	auipc	ra,0x1
    3e60:	e2c080e7          	jalr	-468(ra) # 4c88 <__udivsi3>
    3e64:	00050593          	mv	a1,a0
    3e68:	00a12423          	sw	a0,8(sp)
    3e6c:	000c8513          	mv	a0,s9
    3e70:	00001097          	auipc	ra,0x1
    3e74:	dec080e7          	jalr	-532(ra) # 4c5c <__mulsi3>
    3e78:	00050c93          	mv	s9,a0
    3e7c:	000a8593          	mv	a1,s5
    3e80:	000b8513          	mv	a0,s7
    3e84:	00001097          	auipc	ra,0x1
    3e88:	e4c080e7          	jalr	-436(ra) # 4cd0 <__umodsi3>
    3e8c:	010a1a13          	slli	s4,s4,0x10
    3e90:	01051513          	slli	a0,a0,0x10
    3e94:	010a5a13          	srli	s4,s4,0x10
    3e98:	00aa6a33          	or	s4,s4,a0
    3e9c:	00812803          	lw	a6,8(sp)
    3ea0:	00c12783          	lw	a5,12(sp)
    3ea4:	019a7e63          	bgeu	s4,s9,3ec0 <__divdf3+0x5e4>
    3ea8:	01aa0a33          	add	s4,s4,s10
    3eac:	fff80713          	addi	a4,a6,-1
    3eb0:	2daa6863          	bltu	s4,s10,4180 <__divdf3+0x8a4>
    3eb4:	2d9a7663          	bgeu	s4,s9,4180 <__divdf3+0x8a4>
    3eb8:	ffe80813          	addi	a6,a6,-2
    3ebc:	01aa0a33          	add	s4,s4,s10
    3ec0:	010d9713          	slli	a4,s11,0x10
    3ec4:	01076833          	or	a6,a4,a6
    3ec8:	01081713          	slli	a4,a6,0x10
    3ecc:	01075713          	srli	a4,a4,0x10
    3ed0:	419a0a33          	sub	s4,s4,s9
    3ed4:	01085e13          	srli	t3,a6,0x10
    3ed8:	00070513          	mv	a0,a4
    3edc:	000b0593          	mv	a1,s6
    3ee0:	00001097          	auipc	ra,0x1
    3ee4:	d7c080e7          	jalr	-644(ra) # 4c5c <__mulsi3>
    3ee8:	00050893          	mv	a7,a0
    3eec:	00078593          	mv	a1,a5
    3ef0:	00070513          	mv	a0,a4
    3ef4:	00001097          	auipc	ra,0x1
    3ef8:	d68080e7          	jalr	-664(ra) # 4c5c <__mulsi3>
    3efc:	00050713          	mv	a4,a0
    3f00:	000b0593          	mv	a1,s6
    3f04:	000e0513          	mv	a0,t3
    3f08:	00001097          	auipc	ra,0x1
    3f0c:	d54080e7          	jalr	-684(ra) # 4c5c <__mulsi3>
    3f10:	00050313          	mv	t1,a0
    3f14:	00078593          	mv	a1,a5
    3f18:	000e0513          	mv	a0,t3
    3f1c:	00001097          	auipc	ra,0x1
    3f20:	d40080e7          	jalr	-704(ra) # 4c5c <__mulsi3>
    3f24:	0108d793          	srli	a5,a7,0x10
    3f28:	00670733          	add	a4,a4,t1
    3f2c:	00e787b3          	add	a5,a5,a4
    3f30:	0067f663          	bgeu	a5,t1,3f3c <__divdf3+0x660>
    3f34:	00010737          	lui	a4,0x10
    3f38:	00e50533          	add	a0,a0,a4
    3f3c:	000106b7          	lui	a3,0x10
    3f40:	fff68693          	addi	a3,a3,-1 # ffff <_data_lma+0x4e87>
    3f44:	0107d713          	srli	a4,a5,0x10
    3f48:	00d7f7b3          	and	a5,a5,a3
    3f4c:	01079793          	slli	a5,a5,0x10
    3f50:	00d8f8b3          	and	a7,a7,a3
    3f54:	00a70533          	add	a0,a4,a0
    3f58:	011787b3          	add	a5,a5,a7
    3f5c:	0caa7863          	bgeu	s4,a0,402c <__divdf3+0x750>
    3f60:	014d0a33          	add	s4,s10,s4
    3f64:	fff80713          	addi	a4,a6,-1
    3f68:	25aa6463          	bltu	s4,s10,41b0 <__divdf3+0x8d4>
    3f6c:	20aa6e63          	bltu	s4,a0,4188 <__divdf3+0x8ac>
    3f70:	26aa0063          	beq	s4,a0,41d0 <__divdf3+0x8f4>
    3f74:	00070813          	mv	a6,a4
    3f78:	00186813          	ori	a6,a6,1
    3f7c:	c4dff06f          	j	3bc8 <__divdf3+0x2ec>
    3f80:	00001097          	auipc	ra,0x1
    3f84:	db4080e7          	jalr	-588(ra) # 4d34 <__clzsi2>
    3f88:	01550713          	addi	a4,a0,21
    3f8c:	01c00593          	li	a1,28
    3f90:	02050913          	addi	s2,a0,32
    3f94:	00812603          	lw	a2,8(sp)
    3f98:	00c12683          	lw	a3,12(sp)
    3f9c:	b4e5d6e3          	bge	a1,a4,3ae8 <__divdf3+0x20c>
    3fa0:	ff850413          	addi	s0,a0,-8
    3fa4:	00849b33          	sll	s6,s1,s0
    3fa8:	00000b93          	li	s7,0
    3fac:	b59ff06f          	j	3b04 <__divdf3+0x228>
    3fb0:	00060513          	mv	a0,a2
    3fb4:	00c12423          	sw	a2,8(sp)
    3fb8:	00001097          	auipc	ra,0x1
    3fbc:	d7c080e7          	jalr	-644(ra) # 4d34 <__clzsi2>
    3fc0:	01550493          	addi	s1,a0,21
    3fc4:	01c00793          	li	a5,28
    3fc8:	02050693          	addi	a3,a0,32
    3fcc:	00812603          	lw	a2,8(sp)
    3fd0:	aa97dee3          	bge	a5,s1,3a8c <__divdf3+0x1b0>
    3fd4:	ff850793          	addi	a5,a0,-8
    3fd8:	00f614b3          	sll	s1,a2,a5
    3fdc:	00000813          	li	a6,0
    3fe0:	ac9ff06f          	j	3aa8 <__divdf3+0x1cc>
    3fe4:	df4df2e3          	bgeu	s11,s4,3dc8 <__divdf3+0x4ec>
    3fe8:	018d8db3          	add	s11,s11,s8
    3fec:	018db733          	sltu	a4,s11,s8
    3ff0:	01a70733          	add	a4,a4,s10
    3ff4:	00eb8bb3          	add	s7,s7,a4
    3ff8:	fff48713          	addi	a4,s1,-1
    3ffc:	037d7e63          	bgeu	s10,s7,4038 <__divdf3+0x75c>
    4000:	16abe063          	bltu	s7,a0,4160 <__divdf3+0x884>
    4004:	15750c63          	beq	a0,s7,415c <__divdf3+0x880>
    4008:	00070493          	mv	s1,a4
    400c:	dbdff06f          	j	3dc8 <__divdf3+0x4ec>
    4010:	c10beee3          	bltu	s7,a6,3c2c <__divdf3+0x350>
    4014:	01fb1a13          	slli	s4,s6,0x1f
    4018:	001bd793          	srli	a5,s7,0x1
    401c:	001b5b13          	srli	s6,s6,0x1
    4020:	00fa6a33          	or	s4,s4,a5
    4024:	01fb9d93          	slli	s11,s7,0x1f
    4028:	c11ff06f          	j	3c38 <__divdf3+0x35c>
    402c:	f4aa16e3          	bne	s4,a0,3f78 <__divdf3+0x69c>
    4030:	b8078ce3          	beqz	a5,3bc8 <__divdf3+0x2ec>
    4034:	f2dff06f          	j	3f60 <__divdf3+0x684>
    4038:	fd7d18e3          	bne	s10,s7,4008 <__divdf3+0x72c>
    403c:	fd8df2e3          	bgeu	s11,s8,4000 <__divdf3+0x724>
    4040:	00070493          	mv	s1,a4
    4044:	d85ff06f          	j	3dc8 <__divdf3+0x4ec>
    4048:	00f87793          	andi	a5,a6,15
    404c:	00400713          	li	a4,4
    4050:	b8e782e3          	beq	a5,a4,3bd4 <__divdf3+0x2f8>
    4054:	ffc83793          	sltiu	a5,a6,-4
    4058:	00480813          	addi	a6,a6,4
    405c:	0017c793          	xori	a5,a5,1
    4060:	00385813          	srli	a6,a6,0x3
    4064:	00f484b3          	add	s1,s1,a5
    4068:	b71ff06f          	j	3bd8 <__divdf3+0x2fc>
    406c:	00000813          	li	a6,0
    4070:	00100793          	li	a5,1
    4074:	fe8048e3          	bgtz	s0,4064 <__divdf3+0x788>
    4078:	fff00813          	li	a6,-1
    407c:	b00414e3          	bnez	s0,3b84 <__divdf3+0x2a8>
    4080:	c0100913          	li	s2,-1023
    4084:	00100793          	li	a5,1
    4088:	41e90713          	addi	a4,s2,1054
    408c:	00e496b3          	sll	a3,s1,a4
    4090:	00f85633          	srl	a2,a6,a5
    4094:	00e81833          	sll	a6,a6,a4
    4098:	01003833          	snez	a6,a6
    409c:	00c6e733          	or	a4,a3,a2
    40a0:	01076733          	or	a4,a4,a6
    40a4:	00777693          	andi	a3,a4,7
    40a8:	00f4d4b3          	srl	s1,s1,a5
    40ac:	02068063          	beqz	a3,40cc <__divdf3+0x7f0>
    40b0:	00f77793          	andi	a5,a4,15
    40b4:	00400693          	li	a3,4
    40b8:	00d78a63          	beq	a5,a3,40cc <__divdf3+0x7f0>
    40bc:	00470793          	addi	a5,a4,4 # 10004 <_data_lma+0x4e8c>
    40c0:	00e7b733          	sltu	a4,a5,a4
    40c4:	00e484b3          	add	s1,s1,a4
    40c8:	00078713          	mv	a4,a5
    40cc:	00849793          	slli	a5,s1,0x8
    40d0:	0607d863          	bgez	a5,4140 <__divdf3+0x864>
    40d4:	00100613          	li	a2,1
    40d8:	00000793          	li	a5,0
    40dc:	00000713          	li	a4,0
    40e0:	915ff06f          	j	39f4 <__divdf3+0x118>
    40e4:	00078b13          	mv	s6,a5
    40e8:	c35ff06f          	j	3d1c <__divdf3+0x440>
    40ec:	00078493          	mv	s1,a5
    40f0:	bc5ff06f          	j	3cb4 <__divdf3+0x3d8>
    40f4:	01f00713          	li	a4,31
    40f8:	f8f758e3          	bge	a4,a5,4088 <__divdf3+0x7ac>
    40fc:	fe100613          	li	a2,-31
    4100:	40860633          	sub	a2,a2,s0
    4104:	02000713          	li	a4,32
    4108:	00c4d633          	srl	a2,s1,a2
    410c:	00e78863          	beq	a5,a4,411c <__divdf3+0x840>
    4110:	43e90793          	addi	a5,s2,1086
    4114:	00f497b3          	sll	a5,s1,a5
    4118:	00f86833          	or	a6,a6,a5
    411c:	01003733          	snez	a4,a6
    4120:	00c76733          	or	a4,a4,a2
    4124:	00777493          	andi	s1,a4,7
    4128:	00000793          	li	a5,0
    412c:	02048063          	beqz	s1,414c <__divdf3+0x870>
    4130:	00f77793          	andi	a5,a4,15
    4134:	00400693          	li	a3,4
    4138:	00000493          	li	s1,0
    413c:	f8d790e3          	bne	a5,a3,40bc <__divdf3+0x7e0>
    4140:	00949793          	slli	a5,s1,0x9
    4144:	00c7d793          	srli	a5,a5,0xc
    4148:	01d49493          	slli	s1,s1,0x1d
    414c:	00375713          	srli	a4,a4,0x3
    4150:	00976733          	or	a4,a4,s1
    4154:	00000613          	li	a2,0
    4158:	89dff06f          	j	39f4 <__divdf3+0x118>
    415c:	eb4df6e3          	bgeu	s11,s4,4008 <__divdf3+0x72c>
    4160:	018d8db3          	add	s11,s11,s8
    4164:	018db733          	sltu	a4,s11,s8
    4168:	01a70733          	add	a4,a4,s10
    416c:	ffe48493          	addi	s1,s1,-2
    4170:	00eb8bb3          	add	s7,s7,a4
    4174:	c55ff06f          	j	3dc8 <__divdf3+0x4ec>
    4178:	00068d93          	mv	s11,a3
    417c:	cd1ff06f          	j	3e4c <__divdf3+0x570>
    4180:	00070813          	mv	a6,a4
    4184:	d3dff06f          	j	3ec0 <__divdf3+0x5e4>
    4188:	001c1713          	slli	a4,s8,0x1
    418c:	01873c33          	sltu	s8,a4,s8
    4190:	01ac0d33          	add	s10,s8,s10
    4194:	01aa0a33          	add	s4,s4,s10
    4198:	ffe80813          	addi	a6,a6,-2
    419c:	00070c13          	mv	s8,a4
    41a0:	dcaa1ce3          	bne	s4,a0,3f78 <__divdf3+0x69c>
    41a4:	a38782e3          	beq	a5,s8,3bc8 <__divdf3+0x2ec>
    41a8:	00186813          	ori	a6,a6,1
    41ac:	a1dff06f          	j	3bc8 <__divdf3+0x2ec>
    41b0:	00070813          	mv	a6,a4
    41b4:	feaa08e3          	beq	s4,a0,41a4 <__divdf3+0x8c8>
    41b8:	dc1ff06f          	j	3f78 <__divdf3+0x69c>
    41bc:	00068993          	mv	s3,a3
    41c0:	7ff00613          	li	a2,2047
    41c4:	00000793          	li	a5,0
    41c8:	00000713          	li	a4,0
    41cc:	829ff06f          	j	39f4 <__divdf3+0x118>
    41d0:	fafc6ce3          	bltu	s8,a5,4188 <__divdf3+0x8ac>
    41d4:	00070813          	mv	a6,a4
    41d8:	fd8798e3          	bne	a5,s8,41a8 <__divdf3+0x8cc>
    41dc:	9edff06f          	j	3bc8 <__divdf3+0x2ec>

000041e0 <__gedf2>:
    41e0:	0145d713          	srli	a4,a1,0x14
    41e4:	001007b7          	lui	a5,0x100
    41e8:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf4e87>
    41ec:	0146d813          	srli	a6,a3,0x14
    41f0:	7ff77713          	andi	a4,a4,2047
    41f4:	7ff00893          	li	a7,2047
    41f8:	00b7f333          	and	t1,a5,a1
    41fc:	00050e13          	mv	t3,a0
    4200:	00d7f7b3          	and	a5,a5,a3
    4204:	01f5d593          	srli	a1,a1,0x1f
    4208:	00060e93          	mv	t4,a2
    420c:	7ff87813          	andi	a6,a6,2047
    4210:	01f6d693          	srli	a3,a3,0x1f
    4214:	05170063          	beq	a4,a7,4254 <__gedf2+0x74>
    4218:	03180663          	beq	a6,a7,4244 <__gedf2+0x64>
    421c:	04071263          	bnez	a4,4260 <__gedf2+0x80>
    4220:	00a368b3          	or	a7,t1,a0
    4224:	00081663          	bnez	a6,4230 <__gedf2+0x50>
    4228:	00c7e633          	or	a2,a5,a2
    422c:	06060863          	beqz	a2,429c <__gedf2+0xbc>
    4230:	06088063          	beqz	a7,4290 <__gedf2+0xb0>
    4234:	04d58063          	beq	a1,a3,4274 <__gedf2+0x94>
    4238:	00100513          	li	a0,1
    423c:	04059663          	bnez	a1,4288 <__gedf2+0xa8>
    4240:	00008067          	ret
    4244:	00c7e8b3          	or	a7,a5,a2
    4248:	fc088ae3          	beqz	a7,421c <__gedf2+0x3c>
    424c:	ffe00513          	li	a0,-2
    4250:	00008067          	ret
    4254:	00a36533          	or	a0,t1,a0
    4258:	fe051ae3          	bnez	a0,424c <__gedf2+0x6c>
    425c:	04e80663          	beq	a6,a4,42a8 <__gedf2+0xc8>
    4260:	00081663          	bnez	a6,426c <__gedf2+0x8c>
    4264:	00c7e633          	or	a2,a5,a2
    4268:	fc0608e3          	beqz	a2,4238 <__gedf2+0x58>
    426c:	fcd596e3          	bne	a1,a3,4238 <__gedf2+0x58>
    4270:	fce844e3          	blt	a6,a4,4238 <__gedf2+0x58>
    4274:	01074863          	blt	a4,a6,4284 <__gedf2+0xa4>
    4278:	fc67e0e3          	bltu	a5,t1,4238 <__gedf2+0x58>
    427c:	04f30063          	beq	t1,a5,42bc <__gedf2+0xdc>
    4280:	02f37a63          	bgeu	t1,a5,42b4 <__gedf2+0xd4>
    4284:	00059863          	bnez	a1,4294 <__gedf2+0xb4>
    4288:	fff00513          	li	a0,-1
    428c:	00008067          	ret
    4290:	fe068ce3          	beqz	a3,4288 <__gedf2+0xa8>
    4294:	00100513          	li	a0,1
    4298:	00008067          	ret
    429c:	00000513          	li	a0,0
    42a0:	f8089ce3          	bnez	a7,4238 <__gedf2+0x58>
    42a4:	00008067          	ret
    42a8:	00c7e633          	or	a2,a5,a2
    42ac:	fc0600e3          	beqz	a2,426c <__gedf2+0x8c>
    42b0:	f9dff06f          	j	424c <__gedf2+0x6c>
    42b4:	00000513          	li	a0,0
    42b8:	00008067          	ret
    42bc:	f7ceeee3          	bltu	t4,t3,4238 <__gedf2+0x58>
    42c0:	00000513          	li	a0,0
    42c4:	f7de7ee3          	bgeu	t3,t4,4240 <__gedf2+0x60>
    42c8:	fc0596e3          	bnez	a1,4294 <__gedf2+0xb4>
    42cc:	fbdff06f          	j	4288 <__gedf2+0xa8>

000042d0 <__ledf2>:
    42d0:	0145d713          	srli	a4,a1,0x14
    42d4:	001007b7          	lui	a5,0x100
    42d8:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf4e87>
    42dc:	0146d813          	srli	a6,a3,0x14
    42e0:	7ff77713          	andi	a4,a4,2047
    42e4:	7ff00893          	li	a7,2047
    42e8:	00b7fe33          	and	t3,a5,a1
    42ec:	00050e93          	mv	t4,a0
    42f0:	00d7f7b3          	and	a5,a5,a3
    42f4:	01f5d593          	srli	a1,a1,0x1f
    42f8:	00060f13          	mv	t5,a2
    42fc:	7ff87813          	andi	a6,a6,2047
    4300:	01f6d693          	srli	a3,a3,0x1f
    4304:	05170a63          	beq	a4,a7,4358 <__ledf2+0x88>
    4308:	03180263          	beq	a6,a7,432c <__ledf2+0x5c>
    430c:	04071e63          	bnez	a4,4368 <__ledf2+0x98>
    4310:	00ae68b3          	or	a7,t3,a0
    4314:	02081663          	bnez	a6,4340 <__ledf2+0x70>
    4318:	00c7e633          	or	a2,a5,a2
    431c:	02061263          	bnez	a2,4340 <__ledf2+0x70>
    4320:	00000313          	li	t1,0
    4324:	06088a63          	beqz	a7,4398 <__ledf2+0xc8>
    4328:	0200006f          	j	4348 <__ledf2+0x78>
    432c:	00c7e8b3          	or	a7,a5,a2
    4330:	00200313          	li	t1,2
    4334:	06089263          	bnez	a7,4398 <__ledf2+0xc8>
    4338:	fc070ce3          	beqz	a4,4310 <__ledf2+0x40>
    433c:	02c0006f          	j	4368 <__ledf2+0x98>
    4340:	06088063          	beqz	a7,43a0 <__ledf2+0xd0>
    4344:	02d58c63          	beq	a1,a3,437c <__ledf2+0xac>
    4348:	00100313          	li	t1,1
    434c:	04058663          	beqz	a1,4398 <__ledf2+0xc8>
    4350:	fff00313          	li	t1,-1
    4354:	0440006f          	j	4398 <__ledf2+0xc8>
    4358:	00ae68b3          	or	a7,t3,a0
    435c:	00200313          	li	t1,2
    4360:	02089c63          	bnez	a7,4398 <__ledf2+0xc8>
    4364:	04e80463          	beq	a6,a4,43ac <__ledf2+0xdc>
    4368:	00081663          	bnez	a6,4374 <__ledf2+0xa4>
    436c:	00c7e633          	or	a2,a5,a2
    4370:	fc060ce3          	beqz	a2,4348 <__ledf2+0x78>
    4374:	fcd59ae3          	bne	a1,a3,4348 <__ledf2+0x78>
    4378:	fce848e3          	blt	a6,a4,4348 <__ledf2+0x78>
    437c:	01074a63          	blt	a4,a6,4390 <__ledf2+0xc0>
    4380:	fdc7e4e3          	bltu	a5,t3,4348 <__ledf2+0x78>
    4384:	02fe0a63          	beq	t3,a5,43b8 <__ledf2+0xe8>
    4388:	00000313          	li	t1,0
    438c:	00fe7663          	bgeu	t3,a5,4398 <__ledf2+0xc8>
    4390:	fc0580e3          	beqz	a1,4350 <__ledf2+0x80>
    4394:	00100313          	li	t1,1
    4398:	00030513          	mv	a0,t1
    439c:	00008067          	ret
    43a0:	fe069ae3          	bnez	a3,4394 <__ledf2+0xc4>
    43a4:	fff00313          	li	t1,-1
    43a8:	ff1ff06f          	j	4398 <__ledf2+0xc8>
    43ac:	00c7e633          	or	a2,a5,a2
    43b0:	fc0602e3          	beqz	a2,4374 <__ledf2+0xa4>
    43b4:	fe5ff06f          	j	4398 <__ledf2+0xc8>
    43b8:	f9df68e3          	bltu	t5,t4,4348 <__ledf2+0x78>
    43bc:	00000313          	li	t1,0
    43c0:	fdeefce3          	bgeu	t4,t5,4398 <__ledf2+0xc8>
    43c4:	fc0598e3          	bnez	a1,4394 <__ledf2+0xc4>
    43c8:	f89ff06f          	j	4350 <__ledf2+0x80>

000043cc <__muldf3>:
    43cc:	fc010113          	addi	sp,sp,-64
    43d0:	03212823          	sw	s2,48(sp)
    43d4:	0145d913          	srli	s2,a1,0x14
    43d8:	03312623          	sw	s3,44(sp)
    43dc:	03412423          	sw	s4,40(sp)
    43e0:	03512223          	sw	s5,36(sp)
    43e4:	00c59993          	slli	s3,a1,0xc
    43e8:	02112e23          	sw	ra,60(sp)
    43ec:	02812c23          	sw	s0,56(sp)
    43f0:	02912a23          	sw	s1,52(sp)
    43f4:	03612023          	sw	s6,32(sp)
    43f8:	01712e23          	sw	s7,28(sp)
    43fc:	7ff97913          	andi	s2,s2,2047
    4400:	00050a13          	mv	s4,a0
    4404:	00c9d993          	srli	s3,s3,0xc
    4408:	01f5da93          	srli	s5,a1,0x1f
    440c:	14090e63          	beqz	s2,4568 <__muldf3+0x19c>
    4410:	7ff00793          	li	a5,2047
    4414:	22f90063          	beq	s2,a5,4634 <__muldf3+0x268>
    4418:	01d55413          	srli	s0,a0,0x1d
    441c:	00399993          	slli	s3,s3,0x3
    4420:	013469b3          	or	s3,s0,s3
    4424:	00800437          	lui	s0,0x800
    4428:	0089e433          	or	s0,s3,s0
    442c:	00351493          	slli	s1,a0,0x3
    4430:	c0190913          	addi	s2,s2,-1023
    4434:	00000993          	li	s3,0
    4438:	00000b93          	li	s7,0
    443c:	0146d793          	srli	a5,a3,0x14
    4440:	00c69a13          	slli	s4,a3,0xc
    4444:	7ff7f793          	andi	a5,a5,2047
    4448:	00060593          	mv	a1,a2
    444c:	00ca5a13          	srli	s4,s4,0xc
    4450:	01f6db13          	srli	s6,a3,0x1f
    4454:	18078663          	beqz	a5,45e0 <__muldf3+0x214>
    4458:	7ff00713          	li	a4,2047
    445c:	04e78c63          	beq	a5,a4,44b4 <__muldf3+0xe8>
    4460:	01d65713          	srli	a4,a2,0x1d
    4464:	003a1a13          	slli	s4,s4,0x3
    4468:	01476a33          	or	s4,a4,s4
    446c:	c0178793          	addi	a5,a5,-1023
    4470:	00800737          	lui	a4,0x800
    4474:	00ea6733          	or	a4,s4,a4
    4478:	00361593          	slli	a1,a2,0x3
    447c:	00f90933          	add	s2,s2,a5
    4480:	00000513          	li	a0,0
    4484:	016ac833          	xor	a6,s5,s6
    4488:	00f00793          	li	a5,15
    448c:	00080613          	mv	a2,a6
    4490:	00190893          	addi	a7,s2,1
    4494:	2337e463          	bltu	a5,s3,46bc <__muldf3+0x2f0>
    4498:	00ffc697          	auipc	a3,0xffc
    449c:	17468693          	addi	a3,a3,372 # 100060c <scipat+0x118>
    44a0:	00299993          	slli	s3,s3,0x2
    44a4:	00d989b3          	add	s3,s3,a3
    44a8:	0009a783          	lw	a5,0(s3)
    44ac:	00d787b3          	add	a5,a5,a3
    44b0:	00078067          	jr	a5
    44b4:	00ca6733          	or	a4,s4,a2
    44b8:	7ff90913          	addi	s2,s2,2047
    44bc:	1c071863          	bnez	a4,468c <__muldf3+0x2c0>
    44c0:	0029e993          	ori	s3,s3,2
    44c4:	00000593          	li	a1,0
    44c8:	00200513          	li	a0,2
    44cc:	fb9ff06f          	j	4484 <__muldf3+0xb8>
    44d0:	00000813          	li	a6,0
    44d4:	7ff00793          	li	a5,2047
    44d8:	00080437          	lui	s0,0x80
    44dc:	00000493          	li	s1,0
    44e0:	00c41413          	slli	s0,s0,0xc
    44e4:	01479793          	slli	a5,a5,0x14
    44e8:	00c45413          	srli	s0,s0,0xc
    44ec:	01f81813          	slli	a6,a6,0x1f
    44f0:	00f46433          	or	s0,s0,a5
    44f4:	01046433          	or	s0,s0,a6
    44f8:	00040593          	mv	a1,s0
    44fc:	03c12083          	lw	ra,60(sp)
    4500:	03812403          	lw	s0,56(sp)
    4504:	00048513          	mv	a0,s1
    4508:	03012903          	lw	s2,48(sp)
    450c:	03412483          	lw	s1,52(sp)
    4510:	02c12983          	lw	s3,44(sp)
    4514:	02812a03          	lw	s4,40(sp)
    4518:	02412a83          	lw	s5,36(sp)
    451c:	02012b03          	lw	s6,32(sp)
    4520:	01c12b83          	lw	s7,28(sp)
    4524:	04010113          	addi	sp,sp,64
    4528:	00008067          	ret
    452c:	000b0613          	mv	a2,s6
    4530:	00070413          	mv	s0,a4
    4534:	00058493          	mv	s1,a1
    4538:	00050b93          	mv	s7,a0
    453c:	00200793          	li	a5,2
    4540:	16fb8463          	beq	s7,a5,46a8 <__muldf3+0x2dc>
    4544:	00300793          	li	a5,3
    4548:	f8fb84e3          	beq	s7,a5,44d0 <__muldf3+0x104>
    454c:	00100793          	li	a5,1
    4550:	00060813          	mv	a6,a2
    4554:	5cfb9a63          	bne	s7,a5,4b28 <__muldf3+0x75c>
    4558:	00000793          	li	a5,0
    455c:	00000413          	li	s0,0
    4560:	00000493          	li	s1,0
    4564:	f7dff06f          	j	44e0 <__muldf3+0x114>
    4568:	00a9e433          	or	s0,s3,a0
    456c:	10040663          	beqz	s0,4678 <__muldf3+0x2ac>
    4570:	00d12623          	sw	a3,12(sp)
    4574:	00c12423          	sw	a2,8(sp)
    4578:	48098c63          	beqz	s3,4a10 <__muldf3+0x644>
    457c:	00098513          	mv	a0,s3
    4580:	00000097          	auipc	ra,0x0
    4584:	7b4080e7          	jalr	1972(ra) # 4d34 <__clzsi2>
    4588:	00812603          	lw	a2,8(sp)
    458c:	00c12683          	lw	a3,12(sp)
    4590:	00050793          	mv	a5,a0
    4594:	ff550713          	addi	a4,a0,-11
    4598:	01d00413          	li	s0,29
    459c:	ff878493          	addi	s1,a5,-8
    45a0:	40e40433          	sub	s0,s0,a4
    45a4:	009999b3          	sll	s3,s3,s1
    45a8:	008a5433          	srl	s0,s4,s0
    45ac:	01346433          	or	s0,s0,s3
    45b0:	009a14b3          	sll	s1,s4,s1
    45b4:	c0d00913          	li	s2,-1011
    45b8:	40f90933          	sub	s2,s2,a5
    45bc:	0146d793          	srli	a5,a3,0x14
    45c0:	00c69a13          	slli	s4,a3,0xc
    45c4:	7ff7f793          	andi	a5,a5,2047
    45c8:	00000993          	li	s3,0
    45cc:	00000b93          	li	s7,0
    45d0:	00060593          	mv	a1,a2
    45d4:	00ca5a13          	srli	s4,s4,0xc
    45d8:	01f6db13          	srli	s6,a3,0x1f
    45dc:	e6079ee3          	bnez	a5,4458 <__muldf3+0x8c>
    45e0:	00ca6733          	or	a4,s4,a2
    45e4:	06070663          	beqz	a4,4650 <__muldf3+0x284>
    45e8:	3e0a0a63          	beqz	s4,49dc <__muldf3+0x610>
    45ec:	000a0513          	mv	a0,s4
    45f0:	00c12423          	sw	a2,8(sp)
    45f4:	00000097          	auipc	ra,0x0
    45f8:	740080e7          	jalr	1856(ra) # 4d34 <__clzsi2>
    45fc:	00812603          	lw	a2,8(sp)
    4600:	00050793          	mv	a5,a0
    4604:	ff550693          	addi	a3,a0,-11
    4608:	01d00713          	li	a4,29
    460c:	ff878593          	addi	a1,a5,-8
    4610:	40d70733          	sub	a4,a4,a3
    4614:	00ba1a33          	sll	s4,s4,a1
    4618:	00e65733          	srl	a4,a2,a4
    461c:	01476733          	or	a4,a4,s4
    4620:	00b615b3          	sll	a1,a2,a1
    4624:	40f90933          	sub	s2,s2,a5
    4628:	c0d90913          	addi	s2,s2,-1011
    462c:	00000513          	li	a0,0
    4630:	e55ff06f          	j	4484 <__muldf3+0xb8>
    4634:	00a9e433          	or	s0,s3,a0
    4638:	02041463          	bnez	s0,4660 <__muldf3+0x294>
    463c:	00800993          	li	s3,8
    4640:	00000493          	li	s1,0
    4644:	7ff00913          	li	s2,2047
    4648:	00200b93          	li	s7,2
    464c:	df1ff06f          	j	443c <__muldf3+0x70>
    4650:	0019e993          	ori	s3,s3,1
    4654:	00000593          	li	a1,0
    4658:	00100513          	li	a0,1
    465c:	e29ff06f          	j	4484 <__muldf3+0xb8>
    4660:	00098413          	mv	s0,s3
    4664:	00050493          	mv	s1,a0
    4668:	00c00993          	li	s3,12
    466c:	7ff00913          	li	s2,2047
    4670:	00300b93          	li	s7,3
    4674:	dc9ff06f          	j	443c <__muldf3+0x70>
    4678:	00400993          	li	s3,4
    467c:	00000493          	li	s1,0
    4680:	00000913          	li	s2,0
    4684:	00100b93          	li	s7,1
    4688:	db5ff06f          	j	443c <__muldf3+0x70>
    468c:	0039e993          	ori	s3,s3,3
    4690:	000a0713          	mv	a4,s4
    4694:	00300513          	li	a0,3
    4698:	dedff06f          	j	4484 <__muldf3+0xb8>
    469c:	00200793          	li	a5,2
    46a0:	000a8613          	mv	a2,s5
    46a4:	eafb90e3          	bne	s7,a5,4544 <__muldf3+0x178>
    46a8:	00060813          	mv	a6,a2
    46ac:	7ff00793          	li	a5,2047
    46b0:	00000413          	li	s0,0
    46b4:	00000493          	li	s1,0
    46b8:	e29ff06f          	j	44e0 <__muldf3+0x114>
    46bc:	000109b7          	lui	s3,0x10
    46c0:	fff98e13          	addi	t3,s3,-1 # ffff <_data_lma+0x4e87>
    46c4:	01c4ff33          	and	t5,s1,t3
    46c8:	01c5fe33          	and	t3,a1,t3
    46cc:	0105df93          	srli	t6,a1,0x10
    46d0:	0104d313          	srli	t1,s1,0x10
    46d4:	000f0513          	mv	a0,t5
    46d8:	000e0593          	mv	a1,t3
    46dc:	00000097          	auipc	ra,0x0
    46e0:	580080e7          	jalr	1408(ra) # 4c5c <__mulsi3>
    46e4:	00050e93          	mv	t4,a0
    46e8:	000f8593          	mv	a1,t6
    46ec:	000f0513          	mv	a0,t5
    46f0:	00000097          	auipc	ra,0x0
    46f4:	56c080e7          	jalr	1388(ra) # 4c5c <__mulsi3>
    46f8:	00050793          	mv	a5,a0
    46fc:	000e0593          	mv	a1,t3
    4700:	00030513          	mv	a0,t1
    4704:	00000097          	auipc	ra,0x0
    4708:	558080e7          	jalr	1368(ra) # 4c5c <__mulsi3>
    470c:	00050393          	mv	t2,a0
    4710:	000f8593          	mv	a1,t6
    4714:	00030513          	mv	a0,t1
    4718:	00000097          	auipc	ra,0x0
    471c:	544080e7          	jalr	1348(ra) # 4c5c <__mulsi3>
    4720:	010ed693          	srli	a3,t4,0x10
    4724:	007787b3          	add	a5,a5,t2
    4728:	00f686b3          	add	a3,a3,a5
    472c:	00050293          	mv	t0,a0
    4730:	0076f463          	bgeu	a3,t2,4738 <__muldf3+0x36c>
    4734:	013502b3          	add	t0,a0,s3
    4738:	000109b7          	lui	s3,0x10
    473c:	fff98a13          	addi	s4,s3,-1 # ffff <_data_lma+0x4e87>
    4740:	0146f4b3          	and	s1,a3,s4
    4744:	01049793          	slli	a5,s1,0x10
    4748:	014ef4b3          	and	s1,t4,s4
    474c:	01477a33          	and	s4,a4,s4
    4750:	0106de93          	srli	t4,a3,0x10
    4754:	009784b3          	add	s1,a5,s1
    4758:	01075713          	srli	a4,a4,0x10
    475c:	000f0513          	mv	a0,t5
    4760:	000a0593          	mv	a1,s4
    4764:	00000097          	auipc	ra,0x0
    4768:	4f8080e7          	jalr	1272(ra) # 4c5c <__mulsi3>
    476c:	00050393          	mv	t2,a0
    4770:	00070593          	mv	a1,a4
    4774:	000f0513          	mv	a0,t5
    4778:	00000097          	auipc	ra,0x0
    477c:	4e4080e7          	jalr	1252(ra) # 4c5c <__mulsi3>
    4780:	00050f13          	mv	t5,a0
    4784:	000a0593          	mv	a1,s4
    4788:	00030513          	mv	a0,t1
    478c:	00000097          	auipc	ra,0x0
    4790:	4d0080e7          	jalr	1232(ra) # 4c5c <__mulsi3>
    4794:	00050a93          	mv	s5,a0
    4798:	00070593          	mv	a1,a4
    479c:	00030513          	mv	a0,t1
    47a0:	00000097          	auipc	ra,0x0
    47a4:	4bc080e7          	jalr	1212(ra) # 4c5c <__mulsi3>
    47a8:	0103d793          	srli	a5,t2,0x10
    47ac:	015f0f33          	add	t5,t5,s5
    47b0:	01e787b3          	add	a5,a5,t5
    47b4:	0157f463          	bgeu	a5,s5,47bc <__muldf3+0x3f0>
    47b8:	01350533          	add	a0,a0,s3
    47bc:	00010ab7          	lui	s5,0x10
    47c0:	fffa8693          	addi	a3,s5,-1 # ffff <_data_lma+0x4e87>
    47c4:	00d7f333          	and	t1,a5,a3
    47c8:	01031313          	slli	t1,t1,0x10
    47cc:	00d3f3b3          	and	t2,t2,a3
    47d0:	007309b3          	add	s3,t1,t2
    47d4:	0107d793          	srli	a5,a5,0x10
    47d8:	00d47333          	and	t1,s0,a3
    47dc:	00a78f33          	add	t5,a5,a0
    47e0:	013e8eb3          	add	t4,t4,s3
    47e4:	01045413          	srli	s0,s0,0x10
    47e8:	00030513          	mv	a0,t1
    47ec:	000e0593          	mv	a1,t3
    47f0:	00000097          	auipc	ra,0x0
    47f4:	46c080e7          	jalr	1132(ra) # 4c5c <__mulsi3>
    47f8:	00050793          	mv	a5,a0
    47fc:	000f8593          	mv	a1,t6
    4800:	00030513          	mv	a0,t1
    4804:	00000097          	auipc	ra,0x0
    4808:	458080e7          	jalr	1112(ra) # 4c5c <__mulsi3>
    480c:	00050393          	mv	t2,a0
    4810:	000e0593          	mv	a1,t3
    4814:	00040513          	mv	a0,s0
    4818:	00000097          	auipc	ra,0x0
    481c:	444080e7          	jalr	1092(ra) # 4c5c <__mulsi3>
    4820:	00050e13          	mv	t3,a0
    4824:	000f8593          	mv	a1,t6
    4828:	00040513          	mv	a0,s0
    482c:	00000097          	auipc	ra,0x0
    4830:	430080e7          	jalr	1072(ra) # 4c5c <__mulsi3>
    4834:	0107d613          	srli	a2,a5,0x10
    4838:	01c383b3          	add	t2,t2,t3
    483c:	00760633          	add	a2,a2,t2
    4840:	01c67463          	bgeu	a2,t3,4848 <__muldf3+0x47c>
    4844:	01550533          	add	a0,a0,s5
    4848:	00010ab7          	lui	s5,0x10
    484c:	fffa8393          	addi	t2,s5,-1 # ffff <_data_lma+0x4e87>
    4850:	007676b3          	and	a3,a2,t2
    4854:	01069693          	slli	a3,a3,0x10
    4858:	01065613          	srli	a2,a2,0x10
    485c:	0077f7b3          	and	a5,a5,t2
    4860:	00a60fb3          	add	t6,a2,a0
    4864:	00f683b3          	add	t2,a3,a5
    4868:	00030513          	mv	a0,t1
    486c:	000a0593          	mv	a1,s4
    4870:	00000097          	auipc	ra,0x0
    4874:	3ec080e7          	jalr	1004(ra) # 4c5c <__mulsi3>
    4878:	00050e13          	mv	t3,a0
    487c:	00070593          	mv	a1,a4
    4880:	00030513          	mv	a0,t1
    4884:	00000097          	auipc	ra,0x0
    4888:	3d8080e7          	jalr	984(ra) # 4c5c <__mulsi3>
    488c:	00050793          	mv	a5,a0
    4890:	000a0593          	mv	a1,s4
    4894:	00040513          	mv	a0,s0
    4898:	00000097          	auipc	ra,0x0
    489c:	3c4080e7          	jalr	964(ra) # 4c5c <__mulsi3>
    48a0:	00050313          	mv	t1,a0
    48a4:	00070593          	mv	a1,a4
    48a8:	00040513          	mv	a0,s0
    48ac:	00000097          	auipc	ra,0x0
    48b0:	3b0080e7          	jalr	944(ra) # 4c5c <__mulsi3>
    48b4:	010e5593          	srli	a1,t3,0x10
    48b8:	006787b3          	add	a5,a5,t1
    48bc:	00f585b3          	add	a1,a1,a5
    48c0:	0065f463          	bgeu	a1,t1,48c8 <__muldf3+0x4fc>
    48c4:	01550533          	add	a0,a0,s5
    48c8:	00010737          	lui	a4,0x10
    48cc:	fff70713          	addi	a4,a4,-1 # ffff <_data_lma+0x4e87>
    48d0:	00e5f7b3          	and	a5,a1,a4
    48d4:	00ee7e33          	and	t3,t3,a4
    48d8:	01079793          	slli	a5,a5,0x10
    48dc:	005e8733          	add	a4,t4,t0
    48e0:	01c787b3          	add	a5,a5,t3
    48e4:	01373333          	sltu	t1,a4,s3
    48e8:	01e787b3          	add	a5,a5,t5
    48ec:	00770733          	add	a4,a4,t2
    48f0:	00678e33          	add	t3,a5,t1
    48f4:	007736b3          	sltu	a3,a4,t2
    48f8:	01fe0633          	add	a2,t3,t6
    48fc:	00d60eb3          	add	t4,a2,a3
    4900:	01e7b7b3          	sltu	a5,a5,t5
    4904:	006e3333          	sltu	t1,t3,t1
    4908:	0067e433          	or	s0,a5,t1
    490c:	0105d593          	srli	a1,a1,0x10
    4910:	01f63633          	sltu	a2,a2,t6
    4914:	00deb6b3          	sltu	a3,t4,a3
    4918:	00b40433          	add	s0,s0,a1
    491c:	00d666b3          	or	a3,a2,a3
    4920:	00971793          	slli	a5,a4,0x9
    4924:	00d40433          	add	s0,s0,a3
    4928:	00a40433          	add	s0,s0,a0
    492c:	0097e4b3          	or	s1,a5,s1
    4930:	00941413          	slli	s0,s0,0x9
    4934:	017ed513          	srli	a0,t4,0x17
    4938:	009034b3          	snez	s1,s1
    493c:	01775713          	srli	a4,a4,0x17
    4940:	009e9793          	slli	a5,t4,0x9
    4944:	00e4e4b3          	or	s1,s1,a4
    4948:	00a46433          	or	s0,s0,a0
    494c:	00f4e4b3          	or	s1,s1,a5
    4950:	00741793          	slli	a5,s0,0x7
    4954:	0207d063          	bgez	a5,4974 <__muldf3+0x5a8>
    4958:	0014d793          	srli	a5,s1,0x1
    495c:	0014f493          	andi	s1,s1,1
    4960:	01f41713          	slli	a4,s0,0x1f
    4964:	0097e4b3          	or	s1,a5,s1
    4968:	00e4e4b3          	or	s1,s1,a4
    496c:	00145413          	srli	s0,s0,0x1
    4970:	00088913          	mv	s2,a7
    4974:	3ff90793          	addi	a5,s2,1023
    4978:	0cf05463          	blez	a5,4a40 <__muldf3+0x674>
    497c:	0074f713          	andi	a4,s1,7
    4980:	02070063          	beqz	a4,49a0 <__muldf3+0x5d4>
    4984:	00f4f713          	andi	a4,s1,15
    4988:	00400693          	li	a3,4
    498c:	00d70a63          	beq	a4,a3,49a0 <__muldf3+0x5d4>
    4990:	00448713          	addi	a4,s1,4
    4994:	009734b3          	sltu	s1,a4,s1
    4998:	00940433          	add	s0,s0,s1
    499c:	00070493          	mv	s1,a4
    49a0:	00741713          	slli	a4,s0,0x7
    49a4:	00075a63          	bgez	a4,49b8 <__muldf3+0x5ec>
    49a8:	ff0007b7          	lui	a5,0xff000
    49ac:	fff78793          	addi	a5,a5,-1 # feffffff <__freertos_irq_stack_top+0xfdfeffff>
    49b0:	00f47433          	and	s0,s0,a5
    49b4:	40090793          	addi	a5,s2,1024
    49b8:	7fe00713          	li	a4,2046
    49bc:	14f74e63          	blt	a4,a5,4b18 <__muldf3+0x74c>
    49c0:	0034d713          	srli	a4,s1,0x3
    49c4:	01d41493          	slli	s1,s0,0x1d
    49c8:	00941413          	slli	s0,s0,0x9
    49cc:	00e4e4b3          	or	s1,s1,a4
    49d0:	00c45413          	srli	s0,s0,0xc
    49d4:	7ff7f793          	andi	a5,a5,2047
    49d8:	b09ff06f          	j	44e0 <__muldf3+0x114>
    49dc:	00060513          	mv	a0,a2
    49e0:	00c12423          	sw	a2,8(sp)
    49e4:	00000097          	auipc	ra,0x0
    49e8:	350080e7          	jalr	848(ra) # 4d34 <__clzsi2>
    49ec:	01550693          	addi	a3,a0,21
    49f0:	01c00713          	li	a4,28
    49f4:	02050793          	addi	a5,a0,32
    49f8:	00812603          	lw	a2,8(sp)
    49fc:	c0d756e3          	bge	a4,a3,4608 <__muldf3+0x23c>
    4a00:	ff850513          	addi	a0,a0,-8
    4a04:	00a61733          	sll	a4,a2,a0
    4a08:	00000593          	li	a1,0
    4a0c:	c19ff06f          	j	4624 <__muldf3+0x258>
    4a10:	00000097          	auipc	ra,0x0
    4a14:	324080e7          	jalr	804(ra) # 4d34 <__clzsi2>
    4a18:	01550713          	addi	a4,a0,21
    4a1c:	01c00593          	li	a1,28
    4a20:	02050793          	addi	a5,a0,32
    4a24:	00812603          	lw	a2,8(sp)
    4a28:	00c12683          	lw	a3,12(sp)
    4a2c:	b6e5d6e3          	bge	a1,a4,4598 <__muldf3+0x1cc>
    4a30:	ff850513          	addi	a0,a0,-8
    4a34:	00aa1433          	sll	s0,s4,a0
    4a38:	00000493          	li	s1,0
    4a3c:	b79ff06f          	j	45b4 <__muldf3+0x1e8>
    4a40:	00100713          	li	a4,1
    4a44:	40f70733          	sub	a4,a4,a5
    4a48:	06079063          	bnez	a5,4aa8 <__muldf3+0x6dc>
    4a4c:	41e90913          	addi	s2,s2,1054
    4a50:	012497b3          	sll	a5,s1,s2
    4a54:	00e4d4b3          	srl	s1,s1,a4
    4a58:	01241933          	sll	s2,s0,s2
    4a5c:	00f037b3          	snez	a5,a5
    4a60:	009964b3          	or	s1,s2,s1
    4a64:	00f4e4b3          	or	s1,s1,a5
    4a68:	0074f793          	andi	a5,s1,7
    4a6c:	00e45733          	srl	a4,s0,a4
    4a70:	02078063          	beqz	a5,4a90 <__muldf3+0x6c4>
    4a74:	00f4f793          	andi	a5,s1,15
    4a78:	00400693          	li	a3,4
    4a7c:	00d78a63          	beq	a5,a3,4a90 <__muldf3+0x6c4>
    4a80:	00448793          	addi	a5,s1,4
    4a84:	0097b4b3          	sltu	s1,a5,s1
    4a88:	00970733          	add	a4,a4,s1
    4a8c:	00078493          	mv	s1,a5
    4a90:	00871793          	slli	a5,a4,0x8
    4a94:	0607d463          	bgez	a5,4afc <__muldf3+0x730>
    4a98:	00100793          	li	a5,1
    4a9c:	00000413          	li	s0,0
    4aa0:	00000493          	li	s1,0
    4aa4:	a3dff06f          	j	44e0 <__muldf3+0x114>
    4aa8:	03800693          	li	a3,56
    4aac:	aae6c6e3          	blt	a3,a4,4558 <__muldf3+0x18c>
    4ab0:	01f00693          	li	a3,31
    4ab4:	f8e6dce3          	bge	a3,a4,4a4c <__muldf3+0x680>
    4ab8:	fe100693          	li	a3,-31
    4abc:	40f687b3          	sub	a5,a3,a5
    4ac0:	02000613          	li	a2,32
    4ac4:	00f456b3          	srl	a3,s0,a5
    4ac8:	00c70863          	beq	a4,a2,4ad8 <__muldf3+0x70c>
    4acc:	43e90913          	addi	s2,s2,1086
    4ad0:	012417b3          	sll	a5,s0,s2
    4ad4:	00f4e4b3          	or	s1,s1,a5
    4ad8:	009034b3          	snez	s1,s1
    4adc:	00d4e4b3          	or	s1,s1,a3
    4ae0:	0074f713          	andi	a4,s1,7
    4ae4:	00000413          	li	s0,0
    4ae8:	02070063          	beqz	a4,4b08 <__muldf3+0x73c>
    4aec:	00f4f793          	andi	a5,s1,15
    4af0:	00400693          	li	a3,4
    4af4:	00000713          	li	a4,0
    4af8:	f8d794e3          	bne	a5,a3,4a80 <__muldf3+0x6b4>
    4afc:	00971413          	slli	s0,a4,0x9
    4b00:	00c45413          	srli	s0,s0,0xc
    4b04:	01d71713          	slli	a4,a4,0x1d
    4b08:	0034d493          	srli	s1,s1,0x3
    4b0c:	00e4e4b3          	or	s1,s1,a4
    4b10:	00000793          	li	a5,0
    4b14:	9cdff06f          	j	44e0 <__muldf3+0x114>
    4b18:	7ff00793          	li	a5,2047
    4b1c:	00000413          	li	s0,0
    4b20:	00000493          	li	s1,0
    4b24:	9bdff06f          	j	44e0 <__muldf3+0x114>
    4b28:	00088913          	mv	s2,a7
    4b2c:	e49ff06f          	j	4974 <__muldf3+0x5a8>

00004b30 <__fixunsdfsi>:
    4b30:	0145d793          	srli	a5,a1,0x14
    4b34:	001006b7          	lui	a3,0x100
    4b38:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xf4e87>
    4b3c:	7ff7f793          	andi	a5,a5,2047
    4b40:	3fe00613          	li	a2,1022
    4b44:	00050813          	mv	a6,a0
    4b48:	00b77733          	and	a4,a4,a1
    4b4c:	00000513          	li	a0,0
    4b50:	01f5d593          	srli	a1,a1,0x1f
    4b54:	00f65663          	bge	a2,a5,4b60 <__fixunsdfsi+0x30>
    4b58:	00058663          	beqz	a1,4b64 <__fixunsdfsi+0x34>
    4b5c:	00008067          	ret
    4b60:	00008067          	ret
    4b64:	41e00613          	li	a2,1054
    4b68:	fff00513          	li	a0,-1
    4b6c:	fef648e3          	blt	a2,a5,4b5c <__fixunsdfsi+0x2c>
    4b70:	43300513          	li	a0,1075
    4b74:	40f50533          	sub	a0,a0,a5
    4b78:	01f00613          	li	a2,31
    4b7c:	00d76733          	or	a4,a4,a3
    4b80:	00a64c63          	blt	a2,a0,4b98 <__fixunsdfsi+0x68>
    4b84:	bed78793          	addi	a5,a5,-1043
    4b88:	00f71733          	sll	a4,a4,a5
    4b8c:	00a85533          	srl	a0,a6,a0
    4b90:	00a76533          	or	a0,a4,a0
    4b94:	00008067          	ret
    4b98:	41300513          	li	a0,1043
    4b9c:	40f507b3          	sub	a5,a0,a5
    4ba0:	00f75533          	srl	a0,a4,a5
    4ba4:	00008067          	ret

00004ba8 <__floatunsidf>:
    4ba8:	06050663          	beqz	a0,4c14 <__floatunsidf+0x6c>
    4bac:	ff010113          	addi	sp,sp,-16
    4bb0:	00812423          	sw	s0,8(sp)
    4bb4:	00112623          	sw	ra,12(sp)
    4bb8:	00050413          	mv	s0,a0
    4bbc:	00000097          	auipc	ra,0x0
    4bc0:	178080e7          	jalr	376(ra) # 4d34 <__clzsi2>
    4bc4:	41e00693          	li	a3,1054
    4bc8:	40a686b3          	sub	a3,a3,a0
    4bcc:	00a00793          	li	a5,10
    4bd0:	7ff6f693          	andi	a3,a3,2047
    4bd4:	06a7d463          	bge	a5,a0,4c3c <__floatunsidf+0x94>
    4bd8:	ff550513          	addi	a0,a0,-11
    4bdc:	00a417b3          	sll	a5,s0,a0
    4be0:	00c79793          	slli	a5,a5,0xc
    4be4:	00c7d793          	srli	a5,a5,0xc
    4be8:	00000713          	li	a4,0
    4bec:	00c12083          	lw	ra,12(sp)
    4bf0:	00812403          	lw	s0,8(sp)
    4bf4:	00c79793          	slli	a5,a5,0xc
    4bf8:	01469693          	slli	a3,a3,0x14
    4bfc:	00c7d793          	srli	a5,a5,0xc
    4c00:	00d7e7b3          	or	a5,a5,a3
    4c04:	00070513          	mv	a0,a4
    4c08:	00078593          	mv	a1,a5
    4c0c:	01010113          	addi	sp,sp,16
    4c10:	00008067          	ret
    4c14:	00000793          	li	a5,0
    4c18:	00000693          	li	a3,0
    4c1c:	00c79793          	slli	a5,a5,0xc
    4c20:	01469693          	slli	a3,a3,0x14
    4c24:	00c7d793          	srli	a5,a5,0xc
    4c28:	00000713          	li	a4,0
    4c2c:	00d7e7b3          	or	a5,a5,a3
    4c30:	00070513          	mv	a0,a4
    4c34:	00078593          	mv	a1,a5
    4c38:	00008067          	ret
    4c3c:	00b00713          	li	a4,11
    4c40:	40a70733          	sub	a4,a4,a0
    4c44:	00e457b3          	srl	a5,s0,a4
    4c48:	00c79793          	slli	a5,a5,0xc
    4c4c:	01550713          	addi	a4,a0,21
    4c50:	00e41733          	sll	a4,s0,a4
    4c54:	00c7d793          	srli	a5,a5,0xc
    4c58:	f95ff06f          	j	4bec <__floatunsidf+0x44>

00004c5c <__mulsi3>:
    4c5c:	00050613          	mv	a2,a0
    4c60:	00000513          	li	a0,0
    4c64:	0015f693          	andi	a3,a1,1
    4c68:	00068463          	beqz	a3,4c70 <__mulsi3+0x14>
    4c6c:	00c50533          	add	a0,a0,a2
    4c70:	0015d593          	srli	a1,a1,0x1
    4c74:	00161613          	slli	a2,a2,0x1
    4c78:	fe0596e3          	bnez	a1,4c64 <__mulsi3+0x8>
    4c7c:	00008067          	ret

00004c80 <__divsi3>:
    4c80:	06054063          	bltz	a0,4ce0 <__umodsi3+0x10>
    4c84:	0605c663          	bltz	a1,4cf0 <__umodsi3+0x20>

00004c88 <__udivsi3>:
    4c88:	00058613          	mv	a2,a1
    4c8c:	00050593          	mv	a1,a0
    4c90:	fff00513          	li	a0,-1
    4c94:	02060c63          	beqz	a2,4ccc <__udivsi3+0x44>
    4c98:	00100693          	li	a3,1
    4c9c:	00b67a63          	bgeu	a2,a1,4cb0 <__udivsi3+0x28>
    4ca0:	00c05863          	blez	a2,4cb0 <__udivsi3+0x28>
    4ca4:	00161613          	slli	a2,a2,0x1
    4ca8:	00169693          	slli	a3,a3,0x1
    4cac:	feb66ae3          	bltu	a2,a1,4ca0 <__udivsi3+0x18>
    4cb0:	00000513          	li	a0,0
    4cb4:	00c5e663          	bltu	a1,a2,4cc0 <__udivsi3+0x38>
    4cb8:	40c585b3          	sub	a1,a1,a2
    4cbc:	00d56533          	or	a0,a0,a3
    4cc0:	0016d693          	srli	a3,a3,0x1
    4cc4:	00165613          	srli	a2,a2,0x1
    4cc8:	fe0696e3          	bnez	a3,4cb4 <__udivsi3+0x2c>
    4ccc:	00008067          	ret

00004cd0 <__umodsi3>:
    4cd0:	00008293          	mv	t0,ra
    4cd4:	fb5ff0ef          	jal	ra,4c88 <__udivsi3>
    4cd8:	00058513          	mv	a0,a1
    4cdc:	00028067          	jr	t0
    4ce0:	40a00533          	neg	a0,a0
    4ce4:	0005d863          	bgez	a1,4cf4 <__umodsi3+0x24>
    4ce8:	40b005b3          	neg	a1,a1
    4cec:	f9dff06f          	j	4c88 <__udivsi3>
    4cf0:	40b005b3          	neg	a1,a1
    4cf4:	00008293          	mv	t0,ra
    4cf8:	f91ff0ef          	jal	ra,4c88 <__udivsi3>
    4cfc:	40a00533          	neg	a0,a0
    4d00:	00028067          	jr	t0

00004d04 <__modsi3>:
    4d04:	00008293          	mv	t0,ra
    4d08:	0005ca63          	bltz	a1,4d1c <__modsi3+0x18>
    4d0c:	00054c63          	bltz	a0,4d24 <__modsi3+0x20>
    4d10:	f79ff0ef          	jal	ra,4c88 <__udivsi3>
    4d14:	00058513          	mv	a0,a1
    4d18:	00028067          	jr	t0
    4d1c:	40b005b3          	neg	a1,a1
    4d20:	fe0558e3          	bgez	a0,4d10 <__modsi3+0xc>
    4d24:	40a00533          	neg	a0,a0
    4d28:	f61ff0ef          	jal	ra,4c88 <__udivsi3>
    4d2c:	40b00533          	neg	a0,a1
    4d30:	00028067          	jr	t0

00004d34 <__clzsi2>:
    4d34:	000107b7          	lui	a5,0x10
    4d38:	04f57463          	bgeu	a0,a5,4d80 <__clzsi2+0x4c>
    4d3c:	0ff00793          	li	a5,255
    4d40:	02000713          	li	a4,32
    4d44:	00a7ee63          	bltu	a5,a0,4d60 <__clzsi2+0x2c>
    4d48:	00ffc797          	auipc	a5,0xffc
    4d4c:	90478793          	addi	a5,a5,-1788 # 100064c <__clz_tab>
    4d50:	00a787b3          	add	a5,a5,a0
    4d54:	0007c503          	lbu	a0,0(a5)
    4d58:	40a70533          	sub	a0,a4,a0
    4d5c:	00008067          	ret
    4d60:	00855513          	srli	a0,a0,0x8
    4d64:	00ffc797          	auipc	a5,0xffc
    4d68:	8e878793          	addi	a5,a5,-1816 # 100064c <__clz_tab>
    4d6c:	00a787b3          	add	a5,a5,a0
    4d70:	0007c503          	lbu	a0,0(a5)
    4d74:	01800713          	li	a4,24
    4d78:	40a70533          	sub	a0,a4,a0
    4d7c:	00008067          	ret
    4d80:	010007b7          	lui	a5,0x1000
    4d84:	02f56263          	bltu	a0,a5,4da8 <__clzsi2+0x74>
    4d88:	01855513          	srli	a0,a0,0x18
    4d8c:	00ffc797          	auipc	a5,0xffc
    4d90:	8c078793          	addi	a5,a5,-1856 # 100064c <__clz_tab>
    4d94:	00a787b3          	add	a5,a5,a0
    4d98:	0007c503          	lbu	a0,0(a5)
    4d9c:	00800713          	li	a4,8
    4da0:	40a70533          	sub	a0,a4,a0
    4da4:	00008067          	ret
    4da8:	01055513          	srli	a0,a0,0x10
    4dac:	00ffc797          	auipc	a5,0xffc
    4db0:	8a078793          	addi	a5,a5,-1888 # 100064c <__clz_tab>
    4db4:	00a787b3          	add	a5,a5,a0
    4db8:	0007c503          	lbu	a0,0(a5)
    4dbc:	01000713          	li	a4,16
    4dc0:	40a70533          	sub	a0,a4,a0
    4dc4:	00008067          	ret

00004dc8 <memset>:
    4dc8:	00f00313          	li	t1,15
    4dcc:	00050713          	mv	a4,a0
    4dd0:	02c37e63          	bgeu	t1,a2,4e0c <memset+0x44>
    4dd4:	00f77793          	andi	a5,a4,15
    4dd8:	0a079063          	bnez	a5,4e78 <memset+0xb0>
    4ddc:	08059263          	bnez	a1,4e60 <memset+0x98>
    4de0:	ff067693          	andi	a3,a2,-16
    4de4:	00f67613          	andi	a2,a2,15
    4de8:	00e686b3          	add	a3,a3,a4
    4dec:	00b72023          	sw	a1,0(a4)
    4df0:	00b72223          	sw	a1,4(a4)
    4df4:	00b72423          	sw	a1,8(a4)
    4df8:	00b72623          	sw	a1,12(a4)
    4dfc:	01070713          	addi	a4,a4,16
    4e00:	fed766e3          	bltu	a4,a3,4dec <memset+0x24>
    4e04:	00061463          	bnez	a2,4e0c <memset+0x44>
    4e08:	00008067          	ret
    4e0c:	40c306b3          	sub	a3,t1,a2
    4e10:	00269693          	slli	a3,a3,0x2
    4e14:	00000297          	auipc	t0,0x0
    4e18:	005686b3          	add	a3,a3,t0
    4e1c:	00c68067          	jr	12(a3)
    4e20:	00b70723          	sb	a1,14(a4)
    4e24:	00b706a3          	sb	a1,13(a4)
    4e28:	00b70623          	sb	a1,12(a4)
    4e2c:	00b705a3          	sb	a1,11(a4)
    4e30:	00b70523          	sb	a1,10(a4)
    4e34:	00b704a3          	sb	a1,9(a4)
    4e38:	00b70423          	sb	a1,8(a4)
    4e3c:	00b703a3          	sb	a1,7(a4)
    4e40:	00b70323          	sb	a1,6(a4)
    4e44:	00b702a3          	sb	a1,5(a4)
    4e48:	00b70223          	sb	a1,4(a4)
    4e4c:	00b701a3          	sb	a1,3(a4)
    4e50:	00b70123          	sb	a1,2(a4)
    4e54:	00b700a3          	sb	a1,1(a4)
    4e58:	00b70023          	sb	a1,0(a4)
    4e5c:	00008067          	ret
    4e60:	0ff5f593          	andi	a1,a1,255
    4e64:	00859693          	slli	a3,a1,0x8
    4e68:	00d5e5b3          	or	a1,a1,a3
    4e6c:	01059693          	slli	a3,a1,0x10
    4e70:	00d5e5b3          	or	a1,a1,a3
    4e74:	f6dff06f          	j	4de0 <memset+0x18>
    4e78:	00279693          	slli	a3,a5,0x2
    4e7c:	00000297          	auipc	t0,0x0
    4e80:	005686b3          	add	a3,a3,t0
    4e84:	00008293          	mv	t0,ra
    4e88:	fa0680e7          	jalr	-96(a3)
    4e8c:	00028093          	mv	ra,t0
    4e90:	ff078793          	addi	a5,a5,-16
    4e94:	40f70733          	sub	a4,a4,a5
    4e98:	00f60633          	add	a2,a2,a5
    4e9c:	f6c378e3          	bgeu	t1,a2,4e0c <memset+0x44>
    4ea0:	f3dff06f          	j	4ddc <memset+0x14>

00004ea4 <__cvt>:
    4ea4:	fd010113          	addi	sp,sp,-48
    4ea8:	02812423          	sw	s0,40(sp)
    4eac:	03212023          	sw	s2,32(sp)
    4eb0:	01412c23          	sw	s4,24(sp)
    4eb4:	01512a23          	sw	s5,20(sp)
    4eb8:	01612823          	sw	s6,16(sp)
    4ebc:	02112623          	sw	ra,44(sp)
    4ec0:	02912223          	sw	s1,36(sp)
    4ec4:	01312e23          	sw	s3,28(sp)
    4ec8:	00070a13          	mv	s4,a4
    4ecc:	00058a93          	mv	s5,a1
    4ed0:	00060413          	mv	s0,a2
    4ed4:	00068913          	mv	s2,a3
    4ed8:	00080b13          	mv	s6,a6
    4edc:	00000713          	li	a4,0
    4ee0:	00065863          	bgez	a2,4ef0 <__cvt+0x4c>
    4ee4:	80000737          	lui	a4,0x80000
    4ee8:	00c74433          	xor	s0,a4,a2
    4eec:	02d00713          	li	a4,45
    4ef0:	00e78023          	sb	a4,0(a5)
    4ef4:	fdf8f493          	andi	s1,a7,-33
    4ef8:	04600793          	li	a5,70
    4efc:	00300693          	li	a3,3
    4f00:	00f48a63          	beq	s1,a5,4f14 <__cvt+0x70>
    4f04:	04500793          	li	a5,69
    4f08:	00200693          	li	a3,2
    4f0c:	00f49463          	bne	s1,a5,4f14 <__cvt+0x70>
    4f10:	00190913          	addi	s2,s2,1
    4f14:	000b0793          	mv	a5,s6
    4f18:	00c10893          	addi	a7,sp,12
    4f1c:	00810813          	addi	a6,sp,8
    4f20:	00090713          	mv	a4,s2
    4f24:	000a8593          	mv	a1,s5
    4f28:	00040613          	mv	a2,s0
    4f2c:	00001097          	auipc	ra,0x1
    4f30:	6c0080e7          	jalr	1728(ra) # 65ec <_dtoa_r>
    4f34:	04700793          	li	a5,71
    4f38:	00050993          	mv	s3,a0
    4f3c:	00f49663          	bne	s1,a5,4f48 <__cvt+0xa4>
    4f40:	001a7a13          	andi	s4,s4,1
    4f44:	060a0c63          	beqz	s4,4fbc <__cvt+0x118>
    4f48:	04600793          	li	a5,70
    4f4c:	01298a33          	add	s4,s3,s2
    4f50:	04f49063          	bne	s1,a5,4f90 <__cvt+0xec>
    4f54:	0009c703          	lbu	a4,0(s3)
    4f58:	03000793          	li	a5,48
    4f5c:	02f71663          	bne	a4,a5,4f88 <__cvt+0xe4>
    4f60:	00000613          	li	a2,0
    4f64:	00000693          	li	a3,0
    4f68:	000a8513          	mv	a0,s5
    4f6c:	00040593          	mv	a1,s0
    4f70:	00005097          	auipc	ra,0x5
    4f74:	3c4080e7          	jalr	964(ra) # a334 <__eqdf2>
    4f78:	00050863          	beqz	a0,4f88 <__cvt+0xe4>
    4f7c:	00100793          	li	a5,1
    4f80:	41278933          	sub	s2,a5,s2
    4f84:	012b2023          	sw	s2,0(s6)
    4f88:	000b2783          	lw	a5,0(s6)
    4f8c:	00fa0a33          	add	s4,s4,a5
    4f90:	00000613          	li	a2,0
    4f94:	00000693          	li	a3,0
    4f98:	000a8513          	mv	a0,s5
    4f9c:	00040593          	mv	a1,s0
    4fa0:	00005097          	auipc	ra,0x5
    4fa4:	394080e7          	jalr	916(ra) # a334 <__eqdf2>
    4fa8:	00051463          	bnez	a0,4fb0 <__cvt+0x10c>
    4fac:	01412623          	sw	s4,12(sp)
    4fb0:	03000713          	li	a4,48
    4fb4:	00c12783          	lw	a5,12(sp)
    4fb8:	0547e063          	bltu	a5,s4,4ff8 <__cvt+0x154>
    4fbc:	00c12783          	lw	a5,12(sp)
    4fc0:	03012703          	lw	a4,48(sp)
    4fc4:	02c12083          	lw	ra,44(sp)
    4fc8:	02812403          	lw	s0,40(sp)
    4fcc:	413787b3          	sub	a5,a5,s3
    4fd0:	00f72023          	sw	a5,0(a4) # 80000000 <__freertos_irq_stack_top+0x7eff0000>
    4fd4:	00098513          	mv	a0,s3
    4fd8:	02412483          	lw	s1,36(sp)
    4fdc:	02012903          	lw	s2,32(sp)
    4fe0:	01c12983          	lw	s3,28(sp)
    4fe4:	01812a03          	lw	s4,24(sp)
    4fe8:	01412a83          	lw	s5,20(sp)
    4fec:	01012b03          	lw	s6,16(sp)
    4ff0:	03010113          	addi	sp,sp,48
    4ff4:	00008067          	ret
    4ff8:	00178693          	addi	a3,a5,1
    4ffc:	00d12623          	sw	a3,12(sp)
    5000:	00e78023          	sb	a4,0(a5)
    5004:	fb1ff06f          	j	4fb4 <__cvt+0x110>

00005008 <__exponent>:
    5008:	fd010113          	addi	sp,sp,-48
    500c:	02812423          	sw	s0,40(sp)
    5010:	03212023          	sw	s2,32(sp)
    5014:	01312e23          	sw	s3,28(sp)
    5018:	02112623          	sw	ra,44(sp)
    501c:	02912223          	sw	s1,36(sp)
    5020:	01412c23          	sw	s4,24(sp)
    5024:	01512a23          	sw	s5,20(sp)
    5028:	01612823          	sw	s6,16(sp)
    502c:	00c50023          	sb	a2,0(a0)
    5030:	00050913          	mv	s2,a0
    5034:	00058413          	mv	s0,a1
    5038:	00250993          	addi	s3,a0,2
    503c:	02b00793          	li	a5,43
    5040:	0005d663          	bgez	a1,504c <__exponent+0x44>
    5044:	40b00433          	neg	s0,a1
    5048:	02d00793          	li	a5,45
    504c:	00f900a3          	sb	a5,1(s2)
    5050:	00900793          	li	a5,9
    5054:	0887de63          	bge	a5,s0,50f0 <__exponent+0xe8>
    5058:	00f10493          	addi	s1,sp,15
    505c:	00048a93          	mv	s5,s1
    5060:	06300b13          	li	s6,99
    5064:	00a00593          	li	a1,10
    5068:	00040513          	mv	a0,s0
    506c:	00000097          	auipc	ra,0x0
    5070:	c98080e7          	jalr	-872(ra) # 4d04 <__modsi3>
    5074:	03050513          	addi	a0,a0,48
    5078:	fea48fa3          	sb	a0,-1(s1)
    507c:	00a00593          	li	a1,10
    5080:	00040513          	mv	a0,s0
    5084:	fff48a13          	addi	s4,s1,-1
    5088:	00000097          	auipc	ra,0x0
    508c:	bf8080e7          	jalr	-1032(ra) # 4c80 <__divsi3>
    5090:	048b4063          	blt	s6,s0,50d0 <__exponent+0xc8>
    5094:	03050513          	addi	a0,a0,48
    5098:	ffe48493          	addi	s1,s1,-2
    509c:	feaa0fa3          	sb	a0,-1(s4)
    50a0:	0354ee63          	bltu	s1,s5,50dc <__exponent+0xd4>
    50a4:	02c12083          	lw	ra,44(sp)
    50a8:	02812403          	lw	s0,40(sp)
    50ac:	41298533          	sub	a0,s3,s2
    50b0:	02412483          	lw	s1,36(sp)
    50b4:	02012903          	lw	s2,32(sp)
    50b8:	01c12983          	lw	s3,28(sp)
    50bc:	01812a03          	lw	s4,24(sp)
    50c0:	01412a83          	lw	s5,20(sp)
    50c4:	01012b03          	lw	s6,16(sp)
    50c8:	03010113          	addi	sp,sp,48
    50cc:	00008067          	ret
    50d0:	000a0493          	mv	s1,s4
    50d4:	00050413          	mv	s0,a0
    50d8:	f8dff06f          	j	5064 <__exponent+0x5c>
    50dc:	00148493          	addi	s1,s1,1
    50e0:	fff4c783          	lbu	a5,-1(s1)
    50e4:	00198993          	addi	s3,s3,1
    50e8:	fef98fa3          	sb	a5,-1(s3)
    50ec:	fb5ff06f          	j	50a0 <__exponent+0x98>
    50f0:	03000793          	li	a5,48
    50f4:	03040413          	addi	s0,s0,48 # 80030 <_data_lma+0x74eb8>
    50f8:	00f90123          	sb	a5,2(s2)
    50fc:	00490993          	addi	s3,s2,4
    5100:	008901a3          	sb	s0,3(s2)
    5104:	fa1ff06f          	j	50a4 <__exponent+0x9c>

00005108 <_printf_float>:
    5108:	f8010113          	addi	sp,sp,-128
    510c:	00e12e23          	sw	a4,28(sp)
    5110:	06112e23          	sw	ra,124(sp)
    5114:	06812c23          	sw	s0,120(sp)
    5118:	06912a23          	sw	s1,116(sp)
    511c:	00058413          	mv	s0,a1
    5120:	07212823          	sw	s2,112(sp)
    5124:	07312623          	sw	s3,108(sp)
    5128:	07412423          	sw	s4,104(sp)
    512c:	00068993          	mv	s3,a3
    5130:	07612023          	sw	s6,96(sp)
    5134:	05712e23          	sw	s7,92(sp)
    5138:	05812c23          	sw	s8,88(sp)
    513c:	00060913          	mv	s2,a2
    5140:	07512223          	sw	s5,100(sp)
    5144:	05912a23          	sw	s9,84(sp)
    5148:	05a12823          	sw	s10,80(sp)
    514c:	05b12623          	sw	s11,76(sp)
    5150:	00050493          	mv	s1,a0
    5154:	00003097          	auipc	ra,0x3
    5158:	e18080e7          	jalr	-488(ra) # 7f6c <_localeconv_r>
    515c:	00052b83          	lw	s7,0(a0)
    5160:	000b8513          	mv	a0,s7
    5164:	00001097          	auipc	ra,0x1
    5168:	f58080e7          	jalr	-168(ra) # 60bc <strlen>
    516c:	00042b03          	lw	s6,0(s0)
    5170:	01c12703          	lw	a4,28(sp)
    5174:	02012c23          	sw	zero,56(sp)
    5178:	100b7693          	andi	a3,s6,256
    517c:	00050c13          	mv	s8,a0
    5180:	01844a03          	lbu	s4,24(s0)
    5184:	00072783          	lw	a5,0(a4)
    5188:	14068c63          	beqz	a3,52e0 <_printf_float+0x1d8>
    518c:	00478693          	addi	a3,a5,4
    5190:	00d72023          	sw	a3,0(a4)
    5194:	0007a783          	lw	a5,0(a5)
    5198:	02010513          	addi	a0,sp,32
    519c:	0007a703          	lw	a4,0(a5)
    51a0:	02e12023          	sw	a4,32(sp)
    51a4:	0047a703          	lw	a4,4(a5)
    51a8:	02e12223          	sw	a4,36(sp)
    51ac:	0087a703          	lw	a4,8(a5)
    51b0:	02e12423          	sw	a4,40(sp)
    51b4:	00c7a783          	lw	a5,12(a5)
    51b8:	02f12623          	sw	a5,44(sp)
    51bc:	00006097          	auipc	ra,0x6
    51c0:	c24080e7          	jalr	-988(ra) # ade0 <__trunctfdf2>
    51c4:	04a42423          	sw	a0,72(s0)
    51c8:	04b42623          	sw	a1,76(s0)
    51cc:	04c42c83          	lw	s9,76(s0)
    51d0:	00ffb717          	auipc	a4,0xffb
    51d4:	58070713          	addi	a4,a4,1408 # 1000750 <__clz_tab+0x104>
    51d8:	04842a83          	lw	s5,72(s0)
    51dc:	00072d03          	lw	s10,0(a4)
    51e0:	00472d83          	lw	s11,4(a4)
    51e4:	001c9793          	slli	a5,s9,0x1
    51e8:	0017d793          	srli	a5,a5,0x1
    51ec:	000d0613          	mv	a2,s10
    51f0:	000d8693          	mv	a3,s11
    51f4:	000a8513          	mv	a0,s5
    51f8:	00078593          	mv	a1,a5
    51fc:	00f12e23          	sw	a5,28(sp)
    5200:	00006097          	auipc	ra,0x6
    5204:	a44080e7          	jalr	-1468(ra) # ac44 <__unorddf2>
    5208:	0e051e63          	bnez	a0,5304 <_printf_float+0x1fc>
    520c:	01c12783          	lw	a5,28(sp)
    5210:	000d0613          	mv	a2,s10
    5214:	000d8693          	mv	a3,s11
    5218:	000a8513          	mv	a0,s5
    521c:	00078593          	mv	a1,a5
    5220:	fffff097          	auipc	ra,0xfffff
    5224:	0b0080e7          	jalr	176(ra) # 42d0 <__ledf2>
    5228:	0ca05e63          	blez	a0,5304 <_printf_float+0x1fc>
    522c:	00000613          	li	a2,0
    5230:	00000693          	li	a3,0
    5234:	000a8513          	mv	a0,s5
    5238:	000c8593          	mv	a1,s9
    523c:	fffff097          	auipc	ra,0xfffff
    5240:	094080e7          	jalr	148(ra) # 42d0 <__ledf2>
    5244:	00055663          	bgez	a0,5250 <_printf_float+0x148>
    5248:	02d00793          	li	a5,45
    524c:	04f401a3          	sb	a5,67(s0)
    5250:	04700793          	li	a5,71
    5254:	00ffba97          	auipc	s5,0xffb
    5258:	504a8a93          	addi	s5,s5,1284 # 1000758 <__clz_tab+0x10c>
    525c:	0147f663          	bgeu	a5,s4,5268 <_printf_float+0x160>
    5260:	00ffba97          	auipc	s5,0xffb
    5264:	4fca8a93          	addi	s5,s5,1276 # 100075c <__clz_tab+0x110>
    5268:	ffbb7b13          	andi	s6,s6,-5
    526c:	00300793          	li	a5,3
    5270:	01642023          	sw	s6,0(s0)
    5274:	00f42823          	sw	a5,16(s0)
    5278:	00000b13          	li	s6,0
    527c:	00098713          	mv	a4,s3
    5280:	00090693          	mv	a3,s2
    5284:	03c10613          	addi	a2,sp,60
    5288:	00040593          	mv	a1,s0
    528c:	00048513          	mv	a0,s1
    5290:	00000097          	auipc	ra,0x0
    5294:	628080e7          	jalr	1576(ra) # 58b8 <_printf_common>
    5298:	fff00c93          	li	s9,-1
    529c:	23951263          	bne	a0,s9,54c0 <_printf_float+0x3b8>
    52a0:	fff00513          	li	a0,-1
    52a4:	07c12083          	lw	ra,124(sp)
    52a8:	07812403          	lw	s0,120(sp)
    52ac:	07412483          	lw	s1,116(sp)
    52b0:	07012903          	lw	s2,112(sp)
    52b4:	06c12983          	lw	s3,108(sp)
    52b8:	06812a03          	lw	s4,104(sp)
    52bc:	06412a83          	lw	s5,100(sp)
    52c0:	06012b03          	lw	s6,96(sp)
    52c4:	05c12b83          	lw	s7,92(sp)
    52c8:	05812c03          	lw	s8,88(sp)
    52cc:	05412c83          	lw	s9,84(sp)
    52d0:	05012d03          	lw	s10,80(sp)
    52d4:	04c12d83          	lw	s11,76(sp)
    52d8:	08010113          	addi	sp,sp,128
    52dc:	00008067          	ret
    52e0:	00778793          	addi	a5,a5,7
    52e4:	ff87f793          	andi	a5,a5,-8
    52e8:	00878693          	addi	a3,a5,8
    52ec:	00d72023          	sw	a3,0(a4)
    52f0:	0007a703          	lw	a4,0(a5)
    52f4:	0047a783          	lw	a5,4(a5)
    52f8:	04e42423          	sw	a4,72(s0)
    52fc:	04f42623          	sw	a5,76(s0)
    5300:	ecdff06f          	j	51cc <_printf_float+0xc4>
    5304:	000a8613          	mv	a2,s5
    5308:	000c8693          	mv	a3,s9
    530c:	000a8513          	mv	a0,s5
    5310:	000c8593          	mv	a1,s9
    5314:	00006097          	auipc	ra,0x6
    5318:	930080e7          	jalr	-1744(ra) # ac44 <__unorddf2>
    531c:	02050063          	beqz	a0,533c <_printf_float+0x234>
    5320:	04700793          	li	a5,71
    5324:	00ffba97          	auipc	s5,0xffb
    5328:	43ca8a93          	addi	s5,s5,1084 # 1000760 <__clz_tab+0x114>
    532c:	f347fee3          	bgeu	a5,s4,5268 <_printf_float+0x160>
    5330:	00ffba97          	auipc	s5,0xffb
    5334:	434a8a93          	addi	s5,s5,1076 # 1000764 <__clz_tab+0x118>
    5338:	f31ff06f          	j	5268 <_printf_float+0x160>
    533c:	00442783          	lw	a5,4(s0)
    5340:	fff00713          	li	a4,-1
    5344:	0dfa7d13          	andi	s10,s4,223
    5348:	0ce79663          	bne	a5,a4,5414 <_printf_float+0x30c>
    534c:	00600793          	li	a5,6
    5350:	00f42223          	sw	a5,4(s0)
    5354:	00442683          	lw	a3,4(s0)
    5358:	400b6713          	ori	a4,s6,1024
    535c:	03810793          	addi	a5,sp,56
    5360:	000a8593          	mv	a1,s5
    5364:	00f12023          	sw	a5,0(sp)
    5368:	00e42023          	sw	a4,0(s0)
    536c:	03310793          	addi	a5,sp,51
    5370:	00012223          	sw	zero,4(sp)
    5374:	000a0893          	mv	a7,s4
    5378:	03410813          	addi	a6,sp,52
    537c:	000c8613          	mv	a2,s9
    5380:	00048513          	mv	a0,s1
    5384:	00000097          	auipc	ra,0x0
    5388:	b20080e7          	jalr	-1248(ra) # 4ea4 <__cvt>
    538c:	04700793          	li	a5,71
    5390:	00050a93          	mv	s5,a0
    5394:	03412583          	lw	a1,52(sp)
    5398:	00fd1e63          	bne	s10,a5,53b4 <_printf_float+0x2ac>
    539c:	ffd00793          	li	a5,-3
    53a0:	00f5c663          	blt	a1,a5,53ac <_printf_float+0x2a4>
    53a4:	00442783          	lw	a5,4(s0)
    53a8:	0cb7de63          	bge	a5,a1,5484 <_printf_float+0x37c>
    53ac:	ffea0a13          	addi	s4,s4,-2
    53b0:	0ffa7a13          	andi	s4,s4,255
    53b4:	06500793          	li	a5,101
    53b8:	0747e863          	bltu	a5,s4,5428 <_printf_float+0x320>
    53bc:	fff58593          	addi	a1,a1,-1
    53c0:	000a0613          	mv	a2,s4
    53c4:	05040513          	addi	a0,s0,80
    53c8:	02b12a23          	sw	a1,52(sp)
    53cc:	00000097          	auipc	ra,0x0
    53d0:	c3c080e7          	jalr	-964(ra) # 5008 <__exponent>
    53d4:	03812703          	lw	a4,56(sp)
    53d8:	00100693          	li	a3,1
    53dc:	00050b13          	mv	s6,a0
    53e0:	00a707b3          	add	a5,a4,a0
    53e4:	00f42823          	sw	a5,16(s0)
    53e8:	00e6c863          	blt	a3,a4,53f8 <_printf_float+0x2f0>
    53ec:	00042703          	lw	a4,0(s0)
    53f0:	00177713          	andi	a4,a4,1
    53f4:	00070663          	beqz	a4,5400 <_printf_float+0x2f8>
    53f8:	00178793          	addi	a5,a5,1
    53fc:	00f42823          	sw	a5,16(s0)
    5400:	03314783          	lbu	a5,51(sp)
    5404:	e6078ce3          	beqz	a5,527c <_printf_float+0x174>
    5408:	02d00793          	li	a5,45
    540c:	04f401a3          	sb	a5,67(s0)
    5410:	e6dff06f          	j	527c <_printf_float+0x174>
    5414:	04700713          	li	a4,71
    5418:	f2ed1ee3          	bne	s10,a4,5354 <_printf_float+0x24c>
    541c:	f2079ce3          	bnez	a5,5354 <_printf_float+0x24c>
    5420:	00100793          	li	a5,1
    5424:	f2dff06f          	j	5350 <_printf_float+0x248>
    5428:	06600793          	li	a5,102
    542c:	04fa1e63          	bne	s4,a5,5488 <_printf_float+0x380>
    5430:	00442783          	lw	a5,4(s0)
    5434:	02b05463          	blez	a1,545c <_printf_float+0x354>
    5438:	00b42823          	sw	a1,16(s0)
    543c:	00079863          	bnez	a5,544c <_printf_float+0x344>
    5440:	00042703          	lw	a4,0(s0)
    5444:	00177713          	andi	a4,a4,1
    5448:	02070863          	beqz	a4,5478 <_printf_float+0x370>
    544c:	00178793          	addi	a5,a5,1
    5450:	00b787b3          	add	a5,a5,a1
    5454:	00f42823          	sw	a5,16(s0)
    5458:	0200006f          	j	5478 <_printf_float+0x370>
    545c:	00079a63          	bnez	a5,5470 <_printf_float+0x368>
    5460:	00042703          	lw	a4,0(s0)
    5464:	00100693          	li	a3,1
    5468:	00177713          	andi	a4,a4,1
    546c:	00070463          	beqz	a4,5474 <_printf_float+0x36c>
    5470:	00278693          	addi	a3,a5,2
    5474:	00d42823          	sw	a3,16(s0)
    5478:	04b42c23          	sw	a1,88(s0)
    547c:	00000b13          	li	s6,0
    5480:	f81ff06f          	j	5400 <_printf_float+0x2f8>
    5484:	06700a13          	li	s4,103
    5488:	03812783          	lw	a5,56(sp)
    548c:	00f5ce63          	blt	a1,a5,54a8 <_printf_float+0x3a0>
    5490:	00042783          	lw	a5,0(s0)
    5494:	00b42823          	sw	a1,16(s0)
    5498:	0017f793          	andi	a5,a5,1
    549c:	fc078ee3          	beqz	a5,5478 <_printf_float+0x370>
    54a0:	00158793          	addi	a5,a1,1
    54a4:	fb1ff06f          	j	5454 <_printf_float+0x34c>
    54a8:	00100713          	li	a4,1
    54ac:	00b04663          	bgtz	a1,54b8 <_printf_float+0x3b0>
    54b0:	00200713          	li	a4,2
    54b4:	40b70733          	sub	a4,a4,a1
    54b8:	00e787b3          	add	a5,a5,a4
    54bc:	f99ff06f          	j	5454 <_printf_float+0x34c>
    54c0:	00042783          	lw	a5,0(s0)
    54c4:	4007f713          	andi	a4,a5,1024
    54c8:	02071e63          	bnez	a4,5504 <_printf_float+0x3fc>
    54cc:	01042683          	lw	a3,16(s0)
    54d0:	000a8613          	mv	a2,s5
    54d4:	00090593          	mv	a1,s2
    54d8:	00048513          	mv	a0,s1
    54dc:	000980e7          	jalr	s3
    54e0:	dd9500e3          	beq	a0,s9,52a0 <_printf_float+0x198>
    54e4:	00042783          	lw	a5,0(s0)
    54e8:	0027f793          	andi	a5,a5,2
    54ec:	3a079e63          	bnez	a5,58a8 <_printf_float+0x7a0>
    54f0:	03c12783          	lw	a5,60(sp)
    54f4:	00c42503          	lw	a0,12(s0)
    54f8:	daf556e3          	bge	a0,a5,52a4 <_printf_float+0x19c>
    54fc:	00078513          	mv	a0,a5
    5500:	da5ff06f          	j	52a4 <_printf_float+0x19c>
    5504:	06500713          	li	a4,101
    5508:	29477663          	bgeu	a4,s4,5794 <_printf_float+0x68c>
    550c:	04842503          	lw	a0,72(s0)
    5510:	04c42583          	lw	a1,76(s0)
    5514:	00000613          	li	a2,0
    5518:	00000693          	li	a3,0
    551c:	00005097          	auipc	ra,0x5
    5520:	e18080e7          	jalr	-488(ra) # a334 <__eqdf2>
    5524:	08051663          	bnez	a0,55b0 <_printf_float+0x4a8>
    5528:	00100693          	li	a3,1
    552c:	00ffb617          	auipc	a2,0xffb
    5530:	23c60613          	addi	a2,a2,572 # 1000768 <__clz_tab+0x11c>
    5534:	00090593          	mv	a1,s2
    5538:	00048513          	mv	a0,s1
    553c:	000980e7          	jalr	s3
    5540:	d79500e3          	beq	a0,s9,52a0 <_printf_float+0x198>
    5544:	03412703          	lw	a4,52(sp)
    5548:	03812783          	lw	a5,56(sp)
    554c:	00f74863          	blt	a4,a5,555c <_printf_float+0x454>
    5550:	00042783          	lw	a5,0(s0)
    5554:	0017f793          	andi	a5,a5,1
    5558:	f80786e3          	beqz	a5,54e4 <_printf_float+0x3dc>
    555c:	000c0693          	mv	a3,s8
    5560:	000b8613          	mv	a2,s7
    5564:	00090593          	mv	a1,s2
    5568:	00048513          	mv	a0,s1
    556c:	000980e7          	jalr	s3
    5570:	fff00793          	li	a5,-1
    5574:	d2f506e3          	beq	a0,a5,52a0 <_printf_float+0x198>
    5578:	00000a13          	li	s4,0
    557c:	01a40a93          	addi	s5,s0,26
    5580:	fff00b13          	li	s6,-1
    5584:	03812783          	lw	a5,56(sp)
    5588:	fff78793          	addi	a5,a5,-1
    558c:	f4fa5ce3          	bge	s4,a5,54e4 <_printf_float+0x3dc>
    5590:	00100693          	li	a3,1
    5594:	000a8613          	mv	a2,s5
    5598:	00090593          	mv	a1,s2
    559c:	00048513          	mv	a0,s1
    55a0:	000980e7          	jalr	s3
    55a4:	cf650ee3          	beq	a0,s6,52a0 <_printf_float+0x198>
    55a8:	001a0a13          	addi	s4,s4,1
    55ac:	fd9ff06f          	j	5584 <_printf_float+0x47c>
    55b0:	03412783          	lw	a5,52(sp)
    55b4:	0af04863          	bgtz	a5,5664 <_printf_float+0x55c>
    55b8:	00100693          	li	a3,1
    55bc:	00ffb617          	auipc	a2,0xffb
    55c0:	1ac60613          	addi	a2,a2,428 # 1000768 <__clz_tab+0x11c>
    55c4:	00090593          	mv	a1,s2
    55c8:	00048513          	mv	a0,s1
    55cc:	000980e7          	jalr	s3
    55d0:	cd9508e3          	beq	a0,s9,52a0 <_printf_float+0x198>
    55d4:	03412783          	lw	a5,52(sp)
    55d8:	03812703          	lw	a4,56(sp)
    55dc:	00e7e7b3          	or	a5,a5,a4
    55e0:	00079863          	bnez	a5,55f0 <_printf_float+0x4e8>
    55e4:	00042783          	lw	a5,0(s0)
    55e8:	0017f793          	andi	a5,a5,1
    55ec:	ee078ce3          	beqz	a5,54e4 <_printf_float+0x3dc>
    55f0:	000c0693          	mv	a3,s8
    55f4:	000b8613          	mv	a2,s7
    55f8:	00090593          	mv	a1,s2
    55fc:	00048513          	mv	a0,s1
    5600:	000980e7          	jalr	s3
    5604:	fff00793          	li	a5,-1
    5608:	c8f50ce3          	beq	a0,a5,52a0 <_printf_float+0x198>
    560c:	00000a13          	li	s4,0
    5610:	01a40b13          	addi	s6,s0,26
    5614:	fff00b93          	li	s7,-1
    5618:	03412783          	lw	a5,52(sp)
    561c:	40f007b3          	neg	a5,a5
    5620:	02fa4263          	blt	s4,a5,5644 <_printf_float+0x53c>
    5624:	03812683          	lw	a3,56(sp)
    5628:	000a8613          	mv	a2,s5
    562c:	00090593          	mv	a1,s2
    5630:	00048513          	mv	a0,s1
    5634:	000980e7          	jalr	s3
    5638:	fff00793          	li	a5,-1
    563c:	eaf514e3          	bne	a0,a5,54e4 <_printf_float+0x3dc>
    5640:	c61ff06f          	j	52a0 <_printf_float+0x198>
    5644:	00100693          	li	a3,1
    5648:	000b0613          	mv	a2,s6
    564c:	00090593          	mv	a1,s2
    5650:	00048513          	mv	a0,s1
    5654:	000980e7          	jalr	s3
    5658:	c57504e3          	beq	a0,s7,52a0 <_printf_float+0x198>
    565c:	001a0a13          	addi	s4,s4,1
    5660:	fb9ff06f          	j	5618 <_printf_float+0x510>
    5664:	05842783          	lw	a5,88(s0)
    5668:	03812a03          	lw	s4,56(sp)
    566c:	0147d463          	bge	a5,s4,5674 <_printf_float+0x56c>
    5670:	00078a13          	mv	s4,a5
    5674:	03405063          	blez	s4,5694 <_printf_float+0x58c>
    5678:	000a0693          	mv	a3,s4
    567c:	000a8613          	mv	a2,s5
    5680:	00090593          	mv	a1,s2
    5684:	00048513          	mv	a0,s1
    5688:	000980e7          	jalr	s3
    568c:	fff00793          	li	a5,-1
    5690:	c0f508e3          	beq	a0,a5,52a0 <_printf_float+0x198>
    5694:	00000c93          	li	s9,0
    5698:	01a40d13          	addi	s10,s0,26
    569c:	fff00d93          	li	s11,-1
    56a0:	0200006f          	j	56c0 <_printf_float+0x5b8>
    56a4:	00100693          	li	a3,1
    56a8:	000d0613          	mv	a2,s10
    56ac:	00090593          	mv	a1,s2
    56b0:	00048513          	mv	a0,s1
    56b4:	000980e7          	jalr	s3
    56b8:	bfb504e3          	beq	a0,s11,52a0 <_printf_float+0x198>
    56bc:	001c8c93          	addi	s9,s9,1
    56c0:	05842b03          	lw	s6,88(s0)
    56c4:	000a0793          	mv	a5,s4
    56c8:	000a5463          	bgez	s4,56d0 <_printf_float+0x5c8>
    56cc:	00000793          	li	a5,0
    56d0:	40fb07b3          	sub	a5,s6,a5
    56d4:	fcfcc8e3          	blt	s9,a5,56a4 <_printf_float+0x59c>
    56d8:	03412703          	lw	a4,52(sp)
    56dc:	03812783          	lw	a5,56(sp)
    56e0:	04f74a63          	blt	a4,a5,5734 <_printf_float+0x62c>
    56e4:	00042783          	lw	a5,0(s0)
    56e8:	0017f793          	andi	a5,a5,1
    56ec:	04079463          	bnez	a5,5734 <_printf_float+0x62c>
    56f0:	03812783          	lw	a5,56(sp)
    56f4:	03412703          	lw	a4,52(sp)
    56f8:	40e78a33          	sub	s4,a5,a4
    56fc:	00eb4463          	blt	s6,a4,5704 <_printf_float+0x5fc>
    5700:	41678a33          	sub	s4,a5,s6
    5704:	03405063          	blez	s4,5724 <_printf_float+0x61c>
    5708:	000a0693          	mv	a3,s4
    570c:	016a8633          	add	a2,s5,s6
    5710:	00090593          	mv	a1,s2
    5714:	00048513          	mv	a0,s1
    5718:	000980e7          	jalr	s3
    571c:	fff00793          	li	a5,-1
    5720:	b8f500e3          	beq	a0,a5,52a0 <_printf_float+0x198>
    5724:	00000a93          	li	s5,0
    5728:	01a40b13          	addi	s6,s0,26
    572c:	fff00b93          	li	s7,-1
    5730:	0400006f          	j	5770 <_printf_float+0x668>
    5734:	000c0693          	mv	a3,s8
    5738:	000b8613          	mv	a2,s7
    573c:	00090593          	mv	a1,s2
    5740:	00048513          	mv	a0,s1
    5744:	000980e7          	jalr	s3
    5748:	fff00793          	li	a5,-1
    574c:	faf512e3          	bne	a0,a5,56f0 <_printf_float+0x5e8>
    5750:	b51ff06f          	j	52a0 <_printf_float+0x198>
    5754:	00100693          	li	a3,1
    5758:	000b0613          	mv	a2,s6
    575c:	00090593          	mv	a1,s2
    5760:	00048513          	mv	a0,s1
    5764:	000980e7          	jalr	s3
    5768:	b3750ce3          	beq	a0,s7,52a0 <_printf_float+0x198>
    576c:	001a8a93          	addi	s5,s5,1
    5770:	03412703          	lw	a4,52(sp)
    5774:	03812783          	lw	a5,56(sp)
    5778:	40e787b3          	sub	a5,a5,a4
    577c:	000a0713          	mv	a4,s4
    5780:	000a5463          	bgez	s4,5788 <_printf_float+0x680>
    5784:	00000713          	li	a4,0
    5788:	40e787b3          	sub	a5,a5,a4
    578c:	fcfac4e3          	blt	s5,a5,5754 <_printf_float+0x64c>
    5790:	d55ff06f          	j	54e4 <_printf_float+0x3dc>
    5794:	03812683          	lw	a3,56(sp)
    5798:	00100713          	li	a4,1
    579c:	00d74663          	blt	a4,a3,57a8 <_printf_float+0x6a0>
    57a0:	0017f793          	andi	a5,a5,1
    57a4:	0a078c63          	beqz	a5,585c <_printf_float+0x754>
    57a8:	00100693          	li	a3,1
    57ac:	000a8613          	mv	a2,s5
    57b0:	00090593          	mv	a1,s2
    57b4:	00048513          	mv	a0,s1
    57b8:	000980e7          	jalr	s3
    57bc:	fff00a13          	li	s4,-1
    57c0:	af4500e3          	beq	a0,s4,52a0 <_printf_float+0x198>
    57c4:	000c0693          	mv	a3,s8
    57c8:	000b8613          	mv	a2,s7
    57cc:	00090593          	mv	a1,s2
    57d0:	00048513          	mv	a0,s1
    57d4:	000980e7          	jalr	s3
    57d8:	ad4504e3          	beq	a0,s4,52a0 <_printf_float+0x198>
    57dc:	04842503          	lw	a0,72(s0)
    57e0:	04c42583          	lw	a1,76(s0)
    57e4:	00000613          	li	a2,0
    57e8:	00000693          	li	a3,0
    57ec:	00005097          	auipc	ra,0x5
    57f0:	b48080e7          	jalr	-1208(ra) # a334 <__eqdf2>
    57f4:	04050c63          	beqz	a0,584c <_printf_float+0x744>
    57f8:	03812683          	lw	a3,56(sp)
    57fc:	001a8613          	addi	a2,s5,1
    5800:	00090593          	mv	a1,s2
    5804:	fff68693          	addi	a3,a3,-1
    5808:	00048513          	mv	a0,s1
    580c:	000980e7          	jalr	s3
    5810:	a94508e3          	beq	a0,s4,52a0 <_printf_float+0x198>
    5814:	000b0693          	mv	a3,s6
    5818:	05040613          	addi	a2,s0,80
    581c:	e11ff06f          	j	562c <_printf_float+0x524>
    5820:	00100693          	li	a3,1
    5824:	000a8613          	mv	a2,s5
    5828:	00090593          	mv	a1,s2
    582c:	00048513          	mv	a0,s1
    5830:	000980e7          	jalr	s3
    5834:	a77506e3          	beq	a0,s7,52a0 <_printf_float+0x198>
    5838:	001a0a13          	addi	s4,s4,1
    583c:	03812783          	lw	a5,56(sp)
    5840:	fff78793          	addi	a5,a5,-1
    5844:	fcfa4ee3          	blt	s4,a5,5820 <_printf_float+0x718>
    5848:	fcdff06f          	j	5814 <_printf_float+0x70c>
    584c:	00000a13          	li	s4,0
    5850:	01a40a93          	addi	s5,s0,26
    5854:	fff00b93          	li	s7,-1
    5858:	fe5ff06f          	j	583c <_printf_float+0x734>
    585c:	00100693          	li	a3,1
    5860:	000a8613          	mv	a2,s5
    5864:	00090593          	mv	a1,s2
    5868:	00048513          	mv	a0,s1
    586c:	000980e7          	jalr	s3
    5870:	fb9512e3          	bne	a0,s9,5814 <_printf_float+0x70c>
    5874:	a2dff06f          	j	52a0 <_printf_float+0x198>
    5878:	00100693          	li	a3,1
    587c:	000a8613          	mv	a2,s5
    5880:	00090593          	mv	a1,s2
    5884:	00048513          	mv	a0,s1
    5888:	000980e7          	jalr	s3
    588c:	a1650ae3          	beq	a0,s6,52a0 <_printf_float+0x198>
    5890:	001a0a13          	addi	s4,s4,1
    5894:	00c42783          	lw	a5,12(s0)
    5898:	03c12703          	lw	a4,60(sp)
    589c:	40e787b3          	sub	a5,a5,a4
    58a0:	fcfa4ce3          	blt	s4,a5,5878 <_printf_float+0x770>
    58a4:	c4dff06f          	j	54f0 <_printf_float+0x3e8>
    58a8:	00000a13          	li	s4,0
    58ac:	01940a93          	addi	s5,s0,25
    58b0:	fff00b13          	li	s6,-1
    58b4:	fe1ff06f          	j	5894 <_printf_float+0x78c>

000058b8 <_printf_common>:
    58b8:	fd010113          	addi	sp,sp,-48
    58bc:	01512a23          	sw	s5,20(sp)
    58c0:	0105a783          	lw	a5,16(a1)
    58c4:	00070a93          	mv	s5,a4
    58c8:	0085a703          	lw	a4,8(a1)
    58cc:	02812423          	sw	s0,40(sp)
    58d0:	02912223          	sw	s1,36(sp)
    58d4:	01312e23          	sw	s3,28(sp)
    58d8:	01412c23          	sw	s4,24(sp)
    58dc:	02112623          	sw	ra,44(sp)
    58e0:	03212023          	sw	s2,32(sp)
    58e4:	01612823          	sw	s6,16(sp)
    58e8:	01712623          	sw	s7,12(sp)
    58ec:	00050993          	mv	s3,a0
    58f0:	00058413          	mv	s0,a1
    58f4:	00060493          	mv	s1,a2
    58f8:	00068a13          	mv	s4,a3
    58fc:	00e7d463          	bge	a5,a4,5904 <_printf_common+0x4c>
    5900:	00070793          	mv	a5,a4
    5904:	00f4a023          	sw	a5,0(s1)
    5908:	04344703          	lbu	a4,67(s0)
    590c:	00070663          	beqz	a4,5918 <_printf_common+0x60>
    5910:	00178793          	addi	a5,a5,1
    5914:	00f4a023          	sw	a5,0(s1)
    5918:	00042783          	lw	a5,0(s0)
    591c:	0207f793          	andi	a5,a5,32
    5920:	00078863          	beqz	a5,5930 <_printf_common+0x78>
    5924:	0004a783          	lw	a5,0(s1)
    5928:	00278793          	addi	a5,a5,2
    592c:	00f4a023          	sw	a5,0(s1)
    5930:	00042903          	lw	s2,0(s0)
    5934:	00697913          	andi	s2,s2,6
    5938:	00091e63          	bnez	s2,5954 <_printf_common+0x9c>
    593c:	01940b13          	addi	s6,s0,25
    5940:	fff00b93          	li	s7,-1
    5944:	00c42783          	lw	a5,12(s0)
    5948:	0004a703          	lw	a4,0(s1)
    594c:	40e787b3          	sub	a5,a5,a4
    5950:	08f94263          	blt	s2,a5,59d4 <_printf_common+0x11c>
    5954:	00042783          	lw	a5,0(s0)
    5958:	04344683          	lbu	a3,67(s0)
    595c:	0207f793          	andi	a5,a5,32
    5960:	00d036b3          	snez	a3,a3
    5964:	0c079063          	bnez	a5,5a24 <_printf_common+0x16c>
    5968:	04340613          	addi	a2,s0,67
    596c:	000a0593          	mv	a1,s4
    5970:	00098513          	mv	a0,s3
    5974:	000a80e7          	jalr	s5
    5978:	fff00793          	li	a5,-1
    597c:	06f50863          	beq	a0,a5,59ec <_printf_common+0x134>
    5980:	00042783          	lw	a5,0(s0)
    5984:	00400613          	li	a2,4
    5988:	0004a703          	lw	a4,0(s1)
    598c:	0067f793          	andi	a5,a5,6
    5990:	00c42683          	lw	a3,12(s0)
    5994:	00000493          	li	s1,0
    5998:	00c79863          	bne	a5,a2,59a8 <_printf_common+0xf0>
    599c:	40e684b3          	sub	s1,a3,a4
    59a0:	0004d463          	bgez	s1,59a8 <_printf_common+0xf0>
    59a4:	00000493          	li	s1,0
    59a8:	00842783          	lw	a5,8(s0)
    59ac:	01042703          	lw	a4,16(s0)
    59b0:	00f75663          	bge	a4,a5,59bc <_printf_common+0x104>
    59b4:	40e787b3          	sub	a5,a5,a4
    59b8:	00f484b3          	add	s1,s1,a5
    59bc:	00000913          	li	s2,0
    59c0:	01a40413          	addi	s0,s0,26
    59c4:	fff00b13          	li	s6,-1
    59c8:	09249063          	bne	s1,s2,5a48 <_printf_common+0x190>
    59cc:	00000513          	li	a0,0
    59d0:	0200006f          	j	59f0 <_printf_common+0x138>
    59d4:	00100693          	li	a3,1
    59d8:	000b0613          	mv	a2,s6
    59dc:	000a0593          	mv	a1,s4
    59e0:	00098513          	mv	a0,s3
    59e4:	000a80e7          	jalr	s5
    59e8:	03751a63          	bne	a0,s7,5a1c <_printf_common+0x164>
    59ec:	fff00513          	li	a0,-1
    59f0:	02c12083          	lw	ra,44(sp)
    59f4:	02812403          	lw	s0,40(sp)
    59f8:	02412483          	lw	s1,36(sp)
    59fc:	02012903          	lw	s2,32(sp)
    5a00:	01c12983          	lw	s3,28(sp)
    5a04:	01812a03          	lw	s4,24(sp)
    5a08:	01412a83          	lw	s5,20(sp)
    5a0c:	01012b03          	lw	s6,16(sp)
    5a10:	00c12b83          	lw	s7,12(sp)
    5a14:	03010113          	addi	sp,sp,48
    5a18:	00008067          	ret
    5a1c:	00190913          	addi	s2,s2,1
    5a20:	f25ff06f          	j	5944 <_printf_common+0x8c>
    5a24:	00d40733          	add	a4,s0,a3
    5a28:	03000613          	li	a2,48
    5a2c:	04c701a3          	sb	a2,67(a4)
    5a30:	04544703          	lbu	a4,69(s0)
    5a34:	00168793          	addi	a5,a3,1
    5a38:	00f407b3          	add	a5,s0,a5
    5a3c:	00268693          	addi	a3,a3,2
    5a40:	04e781a3          	sb	a4,67(a5)
    5a44:	f25ff06f          	j	5968 <_printf_common+0xb0>
    5a48:	00100693          	li	a3,1
    5a4c:	00040613          	mv	a2,s0
    5a50:	000a0593          	mv	a1,s4
    5a54:	00098513          	mv	a0,s3
    5a58:	000a80e7          	jalr	s5
    5a5c:	f96508e3          	beq	a0,s6,59ec <_printf_common+0x134>
    5a60:	00190913          	addi	s2,s2,1
    5a64:	f65ff06f          	j	59c8 <_printf_common+0x110>

00005a68 <_printf_i>:
    5a68:	fc010113          	addi	sp,sp,-64
    5a6c:	02812c23          	sw	s0,56(sp)
    5a70:	03312623          	sw	s3,44(sp)
    5a74:	03512223          	sw	s5,36(sp)
    5a78:	03612023          	sw	s6,32(sp)
    5a7c:	01712e23          	sw	s7,28(sp)
    5a80:	02112e23          	sw	ra,60(sp)
    5a84:	02912a23          	sw	s1,52(sp)
    5a88:	03212823          	sw	s2,48(sp)
    5a8c:	03412423          	sw	s4,40(sp)
    5a90:	01812c23          	sw	s8,24(sp)
    5a94:	0185c783          	lbu	a5,24(a1)
    5a98:	00068b93          	mv	s7,a3
    5a9c:	06e00693          	li	a3,110
    5aa0:	00050a93          	mv	s5,a0
    5aa4:	00058413          	mv	s0,a1
    5aa8:	00060b13          	mv	s6,a2
    5aac:	04358993          	addi	s3,a1,67
    5ab0:	2ad78263          	beq	a5,a3,5d54 <_printf_i+0x2ec>
    5ab4:	06f6e863          	bltu	a3,a5,5b24 <_printf_i+0xbc>
    5ab8:	06300693          	li	a3,99
    5abc:	0ad78c63          	beq	a5,a3,5b74 <_printf_i+0x10c>
    5ac0:	00f6ec63          	bltu	a3,a5,5ad8 <_printf_i+0x70>
    5ac4:	2c078663          	beqz	a5,5d90 <_printf_i+0x328>
    5ac8:	05800693          	li	a3,88
    5acc:	12d78863          	beq	a5,a3,5bfc <_printf_i+0x194>
    5ad0:	04240c13          	addi	s8,s0,66
    5ad4:	0b40006f          	j	5b88 <_printf_i+0x120>
    5ad8:	06400693          	li	a3,100
    5adc:	00d78663          	beq	a5,a3,5ae8 <_printf_i+0x80>
    5ae0:	06900693          	li	a3,105
    5ae4:	fed796e3          	bne	a5,a3,5ad0 <_printf_i+0x68>
    5ae8:	00042783          	lw	a5,0(s0)
    5aec:	00072603          	lw	a2,0(a4)
    5af0:	0807f593          	andi	a1,a5,128
    5af4:	00460693          	addi	a3,a2,4
    5af8:	08058e63          	beqz	a1,5b94 <_printf_i+0x12c>
    5afc:	00062483          	lw	s1,0(a2)
    5b00:	00d72023          	sw	a3,0(a4)
    5b04:	0004d863          	bgez	s1,5b14 <_printf_i+0xac>
    5b08:	02d00793          	li	a5,45
    5b0c:	409004b3          	neg	s1,s1
    5b10:	04f401a3          	sb	a5,67(s0)
    5b14:	00ffba17          	auipc	s4,0xffb
    5b18:	c58a0a13          	addi	s4,s4,-936 # 100076c <__clz_tab+0x120>
    5b1c:	00a00913          	li	s2,10
    5b20:	12c0006f          	j	5c4c <_printf_i+0x1e4>
    5b24:	07300693          	li	a3,115
    5b28:	26d78a63          	beq	a5,a3,5d9c <_printf_i+0x334>
    5b2c:	02f6e263          	bltu	a3,a5,5b50 <_printf_i+0xe8>
    5b30:	06f00693          	li	a3,111
    5b34:	06d78e63          	beq	a5,a3,5bb0 <_printf_i+0x148>
    5b38:	07000693          	li	a3,112
    5b3c:	f8d79ae3          	bne	a5,a3,5ad0 <_printf_i+0x68>
    5b40:	0005a783          	lw	a5,0(a1)
    5b44:	0207e793          	ori	a5,a5,32
    5b48:	00f5a023          	sw	a5,0(a1)
    5b4c:	0140006f          	j	5b60 <_printf_i+0xf8>
    5b50:	07500693          	li	a3,117
    5b54:	04d78e63          	beq	a5,a3,5bb0 <_printf_i+0x148>
    5b58:	07800693          	li	a3,120
    5b5c:	f6d79ae3          	bne	a5,a3,5ad0 <_printf_i+0x68>
    5b60:	07800793          	li	a5,120
    5b64:	04f402a3          	sb	a5,69(s0)
    5b68:	00ffba17          	auipc	s4,0xffb
    5b6c:	c18a0a13          	addi	s4,s4,-1000 # 1000780 <__clz_tab+0x134>
    5b70:	0980006f          	j	5c08 <_printf_i+0x1a0>
    5b74:	00072783          	lw	a5,0(a4)
    5b78:	04258c13          	addi	s8,a1,66
    5b7c:	00478693          	addi	a3,a5,4
    5b80:	0007a783          	lw	a5,0(a5)
    5b84:	00d72023          	sw	a3,0(a4)
    5b88:	04f40123          	sb	a5,66(s0)
    5b8c:	00100793          	li	a5,1
    5b90:	2400006f          	j	5dd0 <_printf_i+0x368>
    5b94:	00062483          	lw	s1,0(a2)
    5b98:	0407f793          	andi	a5,a5,64
    5b9c:	00d72023          	sw	a3,0(a4)
    5ba0:	f60782e3          	beqz	a5,5b04 <_printf_i+0x9c>
    5ba4:	01049493          	slli	s1,s1,0x10
    5ba8:	4104d493          	srai	s1,s1,0x10
    5bac:	f59ff06f          	j	5b04 <_printf_i+0x9c>
    5bb0:	00042603          	lw	a2,0(s0)
    5bb4:	00072683          	lw	a3,0(a4)
    5bb8:	08067513          	andi	a0,a2,128
    5bbc:	00468593          	addi	a1,a3,4
    5bc0:	00050863          	beqz	a0,5bd0 <_printf_i+0x168>
    5bc4:	00b72023          	sw	a1,0(a4)
    5bc8:	0006a483          	lw	s1,0(a3)
    5bcc:	0140006f          	j	5be0 <_printf_i+0x178>
    5bd0:	04067613          	andi	a2,a2,64
    5bd4:	00b72023          	sw	a1,0(a4)
    5bd8:	fe0608e3          	beqz	a2,5bc8 <_printf_i+0x160>
    5bdc:	0006d483          	lhu	s1,0(a3)
    5be0:	06f00713          	li	a4,111
    5be4:	00ffba17          	auipc	s4,0xffb
    5be8:	b88a0a13          	addi	s4,s4,-1144 # 100076c <__clz_tab+0x120>
    5bec:	00a00913          	li	s2,10
    5bf0:	04e79c63          	bne	a5,a4,5c48 <_printf_i+0x1e0>
    5bf4:	00800913          	li	s2,8
    5bf8:	0500006f          	j	5c48 <_printf_i+0x1e0>
    5bfc:	04f582a3          	sb	a5,69(a1)
    5c00:	00ffba17          	auipc	s4,0xffb
    5c04:	b6ca0a13          	addi	s4,s4,-1172 # 100076c <__clz_tab+0x120>
    5c08:	00042783          	lw	a5,0(s0)
    5c0c:	00072683          	lw	a3,0(a4)
    5c10:	0807f613          	andi	a2,a5,128
    5c14:	0006a483          	lw	s1,0(a3)
    5c18:	00468693          	addi	a3,a3,4
    5c1c:	10060c63          	beqz	a2,5d34 <_printf_i+0x2cc>
    5c20:	00d72023          	sw	a3,0(a4)
    5c24:	0017f713          	andi	a4,a5,1
    5c28:	00070663          	beqz	a4,5c34 <_printf_i+0x1cc>
    5c2c:	0207e793          	ori	a5,a5,32
    5c30:	00f42023          	sw	a5,0(s0)
    5c34:	01000913          	li	s2,16
    5c38:	00049863          	bnez	s1,5c48 <_printf_i+0x1e0>
    5c3c:	00042783          	lw	a5,0(s0)
    5c40:	fdf7f793          	andi	a5,a5,-33
    5c44:	00f42023          	sw	a5,0(s0)
    5c48:	040401a3          	sb	zero,67(s0)
    5c4c:	00442783          	lw	a5,4(s0)
    5c50:	00f42423          	sw	a5,8(s0)
    5c54:	0007c863          	bltz	a5,5c64 <_printf_i+0x1fc>
    5c58:	00042703          	lw	a4,0(s0)
    5c5c:	ffb77713          	andi	a4,a4,-5
    5c60:	00e42023          	sw	a4,0(s0)
    5c64:	00049663          	bnez	s1,5c70 <_printf_i+0x208>
    5c68:	00098c13          	mv	s8,s3
    5c6c:	02078e63          	beqz	a5,5ca8 <_printf_i+0x240>
    5c70:	00098c13          	mv	s8,s3
    5c74:	00090593          	mv	a1,s2
    5c78:	00048513          	mv	a0,s1
    5c7c:	fffff097          	auipc	ra,0xfffff
    5c80:	054080e7          	jalr	84(ra) # 4cd0 <__umodsi3>
    5c84:	00aa0533          	add	a0,s4,a0
    5c88:	00054783          	lbu	a5,0(a0)
    5c8c:	fffc0c13          	addi	s8,s8,-1
    5c90:	00090593          	mv	a1,s2
    5c94:	00fc0023          	sb	a5,0(s8)
    5c98:	00048513          	mv	a0,s1
    5c9c:	fffff097          	auipc	ra,0xfffff
    5ca0:	fec080e7          	jalr	-20(ra) # 4c88 <__udivsi3>
    5ca4:	0b24f463          	bgeu	s1,s2,5d4c <_printf_i+0x2e4>
    5ca8:	00800793          	li	a5,8
    5cac:	02f91463          	bne	s2,a5,5cd4 <_printf_i+0x26c>
    5cb0:	00042783          	lw	a5,0(s0)
    5cb4:	0017f793          	andi	a5,a5,1
    5cb8:	00078e63          	beqz	a5,5cd4 <_printf_i+0x26c>
    5cbc:	00442703          	lw	a4,4(s0)
    5cc0:	01042783          	lw	a5,16(s0)
    5cc4:	00e7c863          	blt	a5,a4,5cd4 <_printf_i+0x26c>
    5cc8:	03000793          	li	a5,48
    5ccc:	fefc0fa3          	sb	a5,-1(s8)
    5cd0:	fffc0c13          	addi	s8,s8,-1
    5cd4:	418989b3          	sub	s3,s3,s8
    5cd8:	01342823          	sw	s3,16(s0)
    5cdc:	000b8713          	mv	a4,s7
    5ce0:	000b0693          	mv	a3,s6
    5ce4:	00c10613          	addi	a2,sp,12
    5ce8:	00040593          	mv	a1,s0
    5cec:	000a8513          	mv	a0,s5
    5cf0:	00000097          	auipc	ra,0x0
    5cf4:	bc8080e7          	jalr	-1080(ra) # 58b8 <_printf_common>
    5cf8:	fff00493          	li	s1,-1
    5cfc:	0e951063          	bne	a0,s1,5ddc <_printf_i+0x374>
    5d00:	fff00513          	li	a0,-1
    5d04:	03c12083          	lw	ra,60(sp)
    5d08:	03812403          	lw	s0,56(sp)
    5d0c:	03412483          	lw	s1,52(sp)
    5d10:	03012903          	lw	s2,48(sp)
    5d14:	02c12983          	lw	s3,44(sp)
    5d18:	02812a03          	lw	s4,40(sp)
    5d1c:	02412a83          	lw	s5,36(sp)
    5d20:	02012b03          	lw	s6,32(sp)
    5d24:	01c12b83          	lw	s7,28(sp)
    5d28:	01812c03          	lw	s8,24(sp)
    5d2c:	04010113          	addi	sp,sp,64
    5d30:	00008067          	ret
    5d34:	0407f613          	andi	a2,a5,64
    5d38:	00d72023          	sw	a3,0(a4)
    5d3c:	ee0604e3          	beqz	a2,5c24 <_printf_i+0x1bc>
    5d40:	01049493          	slli	s1,s1,0x10
    5d44:	0104d493          	srli	s1,s1,0x10
    5d48:	eddff06f          	j	5c24 <_printf_i+0x1bc>
    5d4c:	00050493          	mv	s1,a0
    5d50:	f25ff06f          	j	5c74 <_printf_i+0x20c>
    5d54:	0005a683          	lw	a3,0(a1)
    5d58:	00072783          	lw	a5,0(a4)
    5d5c:	0145a603          	lw	a2,20(a1)
    5d60:	0806f513          	andi	a0,a3,128
    5d64:	00478593          	addi	a1,a5,4
    5d68:	00050a63          	beqz	a0,5d7c <_printf_i+0x314>
    5d6c:	00b72023          	sw	a1,0(a4)
    5d70:	0007a783          	lw	a5,0(a5)
    5d74:	00c7a023          	sw	a2,0(a5)
    5d78:	0180006f          	j	5d90 <_printf_i+0x328>
    5d7c:	00b72023          	sw	a1,0(a4)
    5d80:	0406f693          	andi	a3,a3,64
    5d84:	0007a783          	lw	a5,0(a5)
    5d88:	fe0686e3          	beqz	a3,5d74 <_printf_i+0x30c>
    5d8c:	00c79023          	sh	a2,0(a5)
    5d90:	00042823          	sw	zero,16(s0)
    5d94:	00098c13          	mv	s8,s3
    5d98:	f45ff06f          	j	5cdc <_printf_i+0x274>
    5d9c:	00072783          	lw	a5,0(a4)
    5da0:	0045a603          	lw	a2,4(a1)
    5da4:	00000593          	li	a1,0
    5da8:	00478693          	addi	a3,a5,4
    5dac:	00d72023          	sw	a3,0(a4)
    5db0:	0007ac03          	lw	s8,0(a5)
    5db4:	000c0513          	mv	a0,s8
    5db8:	00002097          	auipc	ra,0x2
    5dbc:	37c080e7          	jalr	892(ra) # 8134 <memchr>
    5dc0:	00050663          	beqz	a0,5dcc <_printf_i+0x364>
    5dc4:	41850533          	sub	a0,a0,s8
    5dc8:	00a42223          	sw	a0,4(s0)
    5dcc:	00442783          	lw	a5,4(s0)
    5dd0:	00f42823          	sw	a5,16(s0)
    5dd4:	040401a3          	sb	zero,67(s0)
    5dd8:	f05ff06f          	j	5cdc <_printf_i+0x274>
    5ddc:	01042683          	lw	a3,16(s0)
    5de0:	000c0613          	mv	a2,s8
    5de4:	000b0593          	mv	a1,s6
    5de8:	000a8513          	mv	a0,s5
    5dec:	000b80e7          	jalr	s7
    5df0:	f09508e3          	beq	a0,s1,5d00 <_printf_i+0x298>
    5df4:	00042783          	lw	a5,0(s0)
    5df8:	0027f793          	andi	a5,a5,2
    5dfc:	04079463          	bnez	a5,5e44 <_printf_i+0x3dc>
    5e00:	00c12783          	lw	a5,12(sp)
    5e04:	00c42503          	lw	a0,12(s0)
    5e08:	eef55ee3          	bge	a0,a5,5d04 <_printf_i+0x29c>
    5e0c:	00078513          	mv	a0,a5
    5e10:	ef5ff06f          	j	5d04 <_printf_i+0x29c>
    5e14:	00100693          	li	a3,1
    5e18:	00090613          	mv	a2,s2
    5e1c:	000b0593          	mv	a1,s6
    5e20:	000a8513          	mv	a0,s5
    5e24:	000b80e7          	jalr	s7
    5e28:	ed350ce3          	beq	a0,s3,5d00 <_printf_i+0x298>
    5e2c:	00148493          	addi	s1,s1,1
    5e30:	00c42783          	lw	a5,12(s0)
    5e34:	00c12703          	lw	a4,12(sp)
    5e38:	40e787b3          	sub	a5,a5,a4
    5e3c:	fcf4cce3          	blt	s1,a5,5e14 <_printf_i+0x3ac>
    5e40:	fc1ff06f          	j	5e00 <_printf_i+0x398>
    5e44:	00000493          	li	s1,0
    5e48:	01940913          	addi	s2,s0,25
    5e4c:	fff00993          	li	s3,-1
    5e50:	fe1ff06f          	j	5e30 <_printf_i+0x3c8>

00005e54 <iprintf>:
    5e54:	fc010113          	addi	sp,sp,-64
    5e58:	02f12a23          	sw	a5,52(sp)
    5e5c:	02b12223          	sw	a1,36(sp)
    5e60:	02c12423          	sw	a2,40(sp)
    5e64:	02d12623          	sw	a3,44(sp)
    5e68:	02e12823          	sw	a4,48(sp)
    5e6c:	03012c23          	sw	a6,56(sp)
    5e70:	03112e23          	sw	a7,60(sp)
    5e74:	00ffb797          	auipc	a5,0xffb
    5e78:	dc878793          	addi	a5,a5,-568 # 1000c3c <_impure_ptr>
    5e7c:	00812c23          	sw	s0,24(sp)
    5e80:	0007a403          	lw	s0,0(a5)
    5e84:	00912a23          	sw	s1,20(sp)
    5e88:	00112e23          	sw	ra,28(sp)
    5e8c:	00050493          	mv	s1,a0
    5e90:	00040c63          	beqz	s0,5ea8 <iprintf+0x54>
    5e94:	01842783          	lw	a5,24(s0)
    5e98:	00079863          	bnez	a5,5ea8 <iprintf+0x54>
    5e9c:	00040513          	mv	a0,s0
    5ea0:	00002097          	auipc	ra,0x2
    5ea4:	e50080e7          	jalr	-432(ra) # 7cf0 <__sinit>
    5ea8:	00842583          	lw	a1,8(s0)
    5eac:	02410693          	addi	a3,sp,36
    5eb0:	00048613          	mv	a2,s1
    5eb4:	00040513          	mv	a0,s0
    5eb8:	00d12623          	sw	a3,12(sp)
    5ebc:	00003097          	auipc	ra,0x3
    5ec0:	308080e7          	jalr	776(ra) # 91c4 <_vfiprintf_r>
    5ec4:	01c12083          	lw	ra,28(sp)
    5ec8:	01812403          	lw	s0,24(sp)
    5ecc:	01412483          	lw	s1,20(sp)
    5ed0:	04010113          	addi	sp,sp,64
    5ed4:	00008067          	ret

00005ed8 <putchar>:
    5ed8:	fe010113          	addi	sp,sp,-32
    5edc:	00ffb797          	auipc	a5,0xffb
    5ee0:	d6078793          	addi	a5,a5,-672 # 1000c3c <_impure_ptr>
    5ee4:	00812c23          	sw	s0,24(sp)
    5ee8:	0007a403          	lw	s0,0(a5)
    5eec:	00112e23          	sw	ra,28(sp)
    5ef0:	00050593          	mv	a1,a0
    5ef4:	02040063          	beqz	s0,5f14 <putchar+0x3c>
    5ef8:	01842783          	lw	a5,24(s0)
    5efc:	00079c63          	bnez	a5,5f14 <putchar+0x3c>
    5f00:	00a12623          	sw	a0,12(sp)
    5f04:	00040513          	mv	a0,s0
    5f08:	00002097          	auipc	ra,0x2
    5f0c:	de8080e7          	jalr	-536(ra) # 7cf0 <__sinit>
    5f10:	00c12583          	lw	a1,12(sp)
    5f14:	00842603          	lw	a2,8(s0)
    5f18:	00040513          	mv	a0,s0
    5f1c:	01812403          	lw	s0,24(sp)
    5f20:	01c12083          	lw	ra,28(sp)
    5f24:	02010113          	addi	sp,sp,32
    5f28:	00003317          	auipc	t1,0x3
    5f2c:	68c30067          	jr	1676(t1) # 95b4 <_putc_r>

00005f30 <_puts_r>:
    5f30:	fe010113          	addi	sp,sp,-32
    5f34:	00912a23          	sw	s1,20(sp)
    5f38:	01212823          	sw	s2,16(sp)
    5f3c:	00112e23          	sw	ra,28(sp)
    5f40:	00812c23          	sw	s0,24(sp)
    5f44:	01312623          	sw	s3,12(sp)
    5f48:	01412423          	sw	s4,8(sp)
    5f4c:	00050493          	mv	s1,a0
    5f50:	00058913          	mv	s2,a1
    5f54:	00050a63          	beqz	a0,5f68 <_puts_r+0x38>
    5f58:	01852783          	lw	a5,24(a0)
    5f5c:	00079663          	bnez	a5,5f68 <_puts_r+0x38>
    5f60:	00002097          	auipc	ra,0x2
    5f64:	d90080e7          	jalr	-624(ra) # 7cf0 <__sinit>
    5f68:	0184a783          	lw	a5,24(s1)
    5f6c:	0084a403          	lw	s0,8(s1)
    5f70:	00079863          	bnez	a5,5f80 <_puts_r+0x50>
    5f74:	00048513          	mv	a0,s1
    5f78:	00002097          	auipc	ra,0x2
    5f7c:	d78080e7          	jalr	-648(ra) # 7cf0 <__sinit>
    5f80:	00ffb797          	auipc	a5,0xffb
    5f84:	88078793          	addi	a5,a5,-1920 # 1000800 <__sf_fake_stdin>
    5f88:	06f41063          	bne	s0,a5,5fe8 <_puts_r+0xb8>
    5f8c:	0044a403          	lw	s0,4(s1)
    5f90:	00c45783          	lhu	a5,12(s0)
    5f94:	0087f793          	andi	a5,a5,8
    5f98:	06078c63          	beqz	a5,6010 <_puts_r+0xe0>
    5f9c:	01042783          	lw	a5,16(s0)
    5fa0:	06078863          	beqz	a5,6010 <_puts_r+0xe0>
    5fa4:	fff00993          	li	s3,-1
    5fa8:	00a00a13          	li	s4,10
    5fac:	00842783          	lw	a5,8(s0)
    5fb0:	00094583          	lbu	a1,0(s2)
    5fb4:	fff78793          	addi	a5,a5,-1
    5fb8:	08059863          	bnez	a1,6048 <_puts_r+0x118>
    5fbc:	00f42423          	sw	a5,8(s0)
    5fc0:	0c07d663          	bgez	a5,608c <_puts_r+0x15c>
    5fc4:	00040613          	mv	a2,s0
    5fc8:	00a00593          	li	a1,10
    5fcc:	00048513          	mv	a0,s1
    5fd0:	00000097          	auipc	ra,0x0
    5fd4:	108080e7          	jalr	264(ra) # 60d8 <__swbuf_r>
    5fd8:	fff00793          	li	a5,-1
    5fdc:	04f50463          	beq	a0,a5,6024 <_puts_r+0xf4>
    5fe0:	00a00513          	li	a0,10
    5fe4:	0440006f          	j	6028 <_puts_r+0xf8>
    5fe8:	00ffb797          	auipc	a5,0xffb
    5fec:	83878793          	addi	a5,a5,-1992 # 1000820 <__sf_fake_stdout>
    5ff0:	00f41663          	bne	s0,a5,5ffc <_puts_r+0xcc>
    5ff4:	0084a403          	lw	s0,8(s1)
    5ff8:	f99ff06f          	j	5f90 <_puts_r+0x60>
    5ffc:	00ffa797          	auipc	a5,0xffa
    6000:	7e478793          	addi	a5,a5,2020 # 10007e0 <__sf_fake_stderr>
    6004:	f8f416e3          	bne	s0,a5,5f90 <_puts_r+0x60>
    6008:	00c4a403          	lw	s0,12(s1)
    600c:	f85ff06f          	j	5f90 <_puts_r+0x60>
    6010:	00040593          	mv	a1,s0
    6014:	00048513          	mv	a0,s1
    6018:	00000097          	auipc	ra,0x0
    601c:	208080e7          	jalr	520(ra) # 6220 <__swsetup_r>
    6020:	f80502e3          	beqz	a0,5fa4 <_puts_r+0x74>
    6024:	fff00513          	li	a0,-1
    6028:	01c12083          	lw	ra,28(sp)
    602c:	01812403          	lw	s0,24(sp)
    6030:	01412483          	lw	s1,20(sp)
    6034:	01012903          	lw	s2,16(sp)
    6038:	00c12983          	lw	s3,12(sp)
    603c:	00812a03          	lw	s4,8(sp)
    6040:	02010113          	addi	sp,sp,32
    6044:	00008067          	ret
    6048:	00f42423          	sw	a5,8(s0)
    604c:	00190913          	addi	s2,s2,1
    6050:	0007d863          	bgez	a5,6060 <_puts_r+0x130>
    6054:	01842703          	lw	a4,24(s0)
    6058:	00e7ce63          	blt	a5,a4,6074 <_puts_r+0x144>
    605c:	01458c63          	beq	a1,s4,6074 <_puts_r+0x144>
    6060:	00042783          	lw	a5,0(s0)
    6064:	00178713          	addi	a4,a5,1
    6068:	00e42023          	sw	a4,0(s0)
    606c:	00b78023          	sb	a1,0(a5)
    6070:	f3dff06f          	j	5fac <_puts_r+0x7c>
    6074:	00040613          	mv	a2,s0
    6078:	00048513          	mv	a0,s1
    607c:	00000097          	auipc	ra,0x0
    6080:	05c080e7          	jalr	92(ra) # 60d8 <__swbuf_r>
    6084:	f33514e3          	bne	a0,s3,5fac <_puts_r+0x7c>
    6088:	f9dff06f          	j	6024 <_puts_r+0xf4>
    608c:	00042783          	lw	a5,0(s0)
    6090:	00178713          	addi	a4,a5,1
    6094:	00e42023          	sw	a4,0(s0)
    6098:	00a00713          	li	a4,10
    609c:	00e78023          	sb	a4,0(a5)
    60a0:	f41ff06f          	j	5fe0 <_puts_r+0xb0>

000060a4 <puts>:
    60a4:	00ffb797          	auipc	a5,0xffb
    60a8:	b9878793          	addi	a5,a5,-1128 # 1000c3c <_impure_ptr>
    60ac:	00050593          	mv	a1,a0
    60b0:	0007a503          	lw	a0,0(a5)
    60b4:	00000317          	auipc	t1,0x0
    60b8:	e7c30067          	jr	-388(t1) # 5f30 <_puts_r>

000060bc <strlen>:
    60bc:	00050793          	mv	a5,a0
    60c0:	00178793          	addi	a5,a5,1
    60c4:	fff7c703          	lbu	a4,-1(a5)
    60c8:	fe071ce3          	bnez	a4,60c0 <strlen+0x4>
    60cc:	40a78533          	sub	a0,a5,a0
    60d0:	fff50513          	addi	a0,a0,-1
    60d4:	00008067          	ret

000060d8 <__swbuf_r>:
    60d8:	fe010113          	addi	sp,sp,-32
    60dc:	00812c23          	sw	s0,24(sp)
    60e0:	00912a23          	sw	s1,20(sp)
    60e4:	01212823          	sw	s2,16(sp)
    60e8:	00112e23          	sw	ra,28(sp)
    60ec:	01312623          	sw	s3,12(sp)
    60f0:	00050493          	mv	s1,a0
    60f4:	00058913          	mv	s2,a1
    60f8:	00060413          	mv	s0,a2
    60fc:	00050a63          	beqz	a0,6110 <__swbuf_r+0x38>
    6100:	01852783          	lw	a5,24(a0)
    6104:	00079663          	bnez	a5,6110 <__swbuf_r+0x38>
    6108:	00002097          	auipc	ra,0x2
    610c:	be8080e7          	jalr	-1048(ra) # 7cf0 <__sinit>
    6110:	00ffa797          	auipc	a5,0xffa
    6114:	6f078793          	addi	a5,a5,1776 # 1000800 <__sf_fake_stdin>
    6118:	0cf41263          	bne	s0,a5,61dc <__swbuf_r+0x104>
    611c:	0044a403          	lw	s0,4(s1)
    6120:	01842783          	lw	a5,24(s0)
    6124:	00f42423          	sw	a5,8(s0)
    6128:	00c45783          	lhu	a5,12(s0)
    612c:	0087f793          	andi	a5,a5,8
    6130:	0c078a63          	beqz	a5,6204 <__swbuf_r+0x12c>
    6134:	01042783          	lw	a5,16(s0)
    6138:	0c078663          	beqz	a5,6204 <__swbuf_r+0x12c>
    613c:	01042783          	lw	a5,16(s0)
    6140:	00042503          	lw	a0,0(s0)
    6144:	0ff97993          	andi	s3,s2,255
    6148:	0ff97913          	andi	s2,s2,255
    614c:	40f50533          	sub	a0,a0,a5
    6150:	01442783          	lw	a5,20(s0)
    6154:	00f54c63          	blt	a0,a5,616c <__swbuf_r+0x94>
    6158:	00040593          	mv	a1,s0
    615c:	00048513          	mv	a0,s1
    6160:	00002097          	auipc	ra,0x2
    6164:	9cc080e7          	jalr	-1588(ra) # 7b2c <_fflush_r>
    6168:	0a051863          	bnez	a0,6218 <__swbuf_r+0x140>
    616c:	00842783          	lw	a5,8(s0)
    6170:	00150513          	addi	a0,a0,1
    6174:	fff78793          	addi	a5,a5,-1
    6178:	00f42423          	sw	a5,8(s0)
    617c:	00042783          	lw	a5,0(s0)
    6180:	00178713          	addi	a4,a5,1
    6184:	00e42023          	sw	a4,0(s0)
    6188:	01378023          	sb	s3,0(a5)
    618c:	01442783          	lw	a5,20(s0)
    6190:	00a78c63          	beq	a5,a0,61a8 <__swbuf_r+0xd0>
    6194:	00c45783          	lhu	a5,12(s0)
    6198:	0017f793          	andi	a5,a5,1
    619c:	02078063          	beqz	a5,61bc <__swbuf_r+0xe4>
    61a0:	00a00793          	li	a5,10
    61a4:	00f91c63          	bne	s2,a5,61bc <__swbuf_r+0xe4>
    61a8:	00040593          	mv	a1,s0
    61ac:	00048513          	mv	a0,s1
    61b0:	00002097          	auipc	ra,0x2
    61b4:	97c080e7          	jalr	-1668(ra) # 7b2c <_fflush_r>
    61b8:	06051063          	bnez	a0,6218 <__swbuf_r+0x140>
    61bc:	01c12083          	lw	ra,28(sp)
    61c0:	01812403          	lw	s0,24(sp)
    61c4:	00090513          	mv	a0,s2
    61c8:	01412483          	lw	s1,20(sp)
    61cc:	01012903          	lw	s2,16(sp)
    61d0:	00c12983          	lw	s3,12(sp)
    61d4:	02010113          	addi	sp,sp,32
    61d8:	00008067          	ret
    61dc:	00ffa797          	auipc	a5,0xffa
    61e0:	64478793          	addi	a5,a5,1604 # 1000820 <__sf_fake_stdout>
    61e4:	00f41663          	bne	s0,a5,61f0 <__swbuf_r+0x118>
    61e8:	0084a403          	lw	s0,8(s1)
    61ec:	f35ff06f          	j	6120 <__swbuf_r+0x48>
    61f0:	00ffa797          	auipc	a5,0xffa
    61f4:	5f078793          	addi	a5,a5,1520 # 10007e0 <__sf_fake_stderr>
    61f8:	f2f414e3          	bne	s0,a5,6120 <__swbuf_r+0x48>
    61fc:	00c4a403          	lw	s0,12(s1)
    6200:	f21ff06f          	j	6120 <__swbuf_r+0x48>
    6204:	00040593          	mv	a1,s0
    6208:	00048513          	mv	a0,s1
    620c:	00000097          	auipc	ra,0x0
    6210:	014080e7          	jalr	20(ra) # 6220 <__swsetup_r>
    6214:	f20504e3          	beqz	a0,613c <__swbuf_r+0x64>
    6218:	fff00913          	li	s2,-1
    621c:	fa1ff06f          	j	61bc <__swbuf_r+0xe4>

00006220 <__swsetup_r>:
    6220:	ff010113          	addi	sp,sp,-16
    6224:	00ffb797          	auipc	a5,0xffb
    6228:	a1878793          	addi	a5,a5,-1512 # 1000c3c <_impure_ptr>
    622c:	00912223          	sw	s1,4(sp)
    6230:	0007a483          	lw	s1,0(a5)
    6234:	00812423          	sw	s0,8(sp)
    6238:	01212023          	sw	s2,0(sp)
    623c:	00112623          	sw	ra,12(sp)
    6240:	00050913          	mv	s2,a0
    6244:	00058413          	mv	s0,a1
    6248:	00048c63          	beqz	s1,6260 <__swsetup_r+0x40>
    624c:	0184a783          	lw	a5,24(s1)
    6250:	00079863          	bnez	a5,6260 <__swsetup_r+0x40>
    6254:	00048513          	mv	a0,s1
    6258:	00002097          	auipc	ra,0x2
    625c:	a98080e7          	jalr	-1384(ra) # 7cf0 <__sinit>
    6260:	00ffa797          	auipc	a5,0xffa
    6264:	5a078793          	addi	a5,a5,1440 # 1000800 <__sf_fake_stdin>
    6268:	04f41863          	bne	s0,a5,62b8 <__swsetup_r+0x98>
    626c:	0044a403          	lw	s0,4(s1)
    6270:	00c41703          	lh	a4,12(s0)
    6274:	01071793          	slli	a5,a4,0x10
    6278:	0107d793          	srli	a5,a5,0x10
    627c:	0087f693          	andi	a3,a5,8
    6280:	0a069663          	bnez	a3,632c <__swsetup_r+0x10c>
    6284:	0107f693          	andi	a3,a5,16
    6288:	04069c63          	bnez	a3,62e0 <__swsetup_r+0xc0>
    628c:	00900793          	li	a5,9
    6290:	00f92023          	sw	a5,0(s2)
    6294:	04076713          	ori	a4,a4,64
    6298:	00e41623          	sh	a4,12(s0)
    629c:	fff00513          	li	a0,-1
    62a0:	00c12083          	lw	ra,12(sp)
    62a4:	00812403          	lw	s0,8(sp)
    62a8:	00412483          	lw	s1,4(sp)
    62ac:	00012903          	lw	s2,0(sp)
    62b0:	01010113          	addi	sp,sp,16
    62b4:	00008067          	ret
    62b8:	00ffa797          	auipc	a5,0xffa
    62bc:	56878793          	addi	a5,a5,1384 # 1000820 <__sf_fake_stdout>
    62c0:	00f41663          	bne	s0,a5,62cc <__swsetup_r+0xac>
    62c4:	0084a403          	lw	s0,8(s1)
    62c8:	fa9ff06f          	j	6270 <__swsetup_r+0x50>
    62cc:	00ffa797          	auipc	a5,0xffa
    62d0:	51478793          	addi	a5,a5,1300 # 10007e0 <__sf_fake_stderr>
    62d4:	f8f41ee3          	bne	s0,a5,6270 <__swsetup_r+0x50>
    62d8:	00c4a403          	lw	s0,12(s1)
    62dc:	f95ff06f          	j	6270 <__swsetup_r+0x50>
    62e0:	0047f793          	andi	a5,a5,4
    62e4:	02078e63          	beqz	a5,6320 <__swsetup_r+0x100>
    62e8:	03442583          	lw	a1,52(s0)
    62ec:	00058e63          	beqz	a1,6308 <__swsetup_r+0xe8>
    62f0:	04440793          	addi	a5,s0,68
    62f4:	00f58863          	beq	a1,a5,6304 <__swsetup_r+0xe4>
    62f8:	00090513          	mv	a0,s2
    62fc:	00003097          	auipc	ra,0x3
    6300:	b88080e7          	jalr	-1144(ra) # 8e84 <_free_r>
    6304:	02042a23          	sw	zero,52(s0)
    6308:	00c45783          	lhu	a5,12(s0)
    630c:	00042223          	sw	zero,4(s0)
    6310:	fdb7f793          	andi	a5,a5,-37
    6314:	00f41623          	sh	a5,12(s0)
    6318:	01042783          	lw	a5,16(s0)
    631c:	00f42023          	sw	a5,0(s0)
    6320:	00c45783          	lhu	a5,12(s0)
    6324:	0087e793          	ori	a5,a5,8
    6328:	00f41623          	sh	a5,12(s0)
    632c:	01042783          	lw	a5,16(s0)
    6330:	02079263          	bnez	a5,6354 <__swsetup_r+0x134>
    6334:	00c45783          	lhu	a5,12(s0)
    6338:	20000713          	li	a4,512
    633c:	2807f793          	andi	a5,a5,640
    6340:	00e78a63          	beq	a5,a4,6354 <__swsetup_r+0x134>
    6344:	00040593          	mv	a1,s0
    6348:	00090513          	mv	a0,s2
    634c:	00002097          	auipc	ra,0x2
    6350:	cd4080e7          	jalr	-812(ra) # 8020 <__smakebuf_r>
    6354:	00c45783          	lhu	a5,12(s0)
    6358:	0017f713          	andi	a4,a5,1
    635c:	02070c63          	beqz	a4,6394 <__swsetup_r+0x174>
    6360:	01442783          	lw	a5,20(s0)
    6364:	00042423          	sw	zero,8(s0)
    6368:	40f007b3          	neg	a5,a5
    636c:	00f42c23          	sw	a5,24(s0)
    6370:	01042783          	lw	a5,16(s0)
    6374:	00000513          	li	a0,0
    6378:	f20794e3          	bnez	a5,62a0 <__swsetup_r+0x80>
    637c:	00c41783          	lh	a5,12(s0)
    6380:	0807f713          	andi	a4,a5,128
    6384:	f0070ee3          	beqz	a4,62a0 <__swsetup_r+0x80>
    6388:	0407e793          	ori	a5,a5,64
    638c:	00f41623          	sh	a5,12(s0)
    6390:	f0dff06f          	j	629c <__swsetup_r+0x7c>
    6394:	0027f793          	andi	a5,a5,2
    6398:	00000713          	li	a4,0
    639c:	00079463          	bnez	a5,63a4 <__swsetup_r+0x184>
    63a0:	01442703          	lw	a4,20(s0)
    63a4:	00e42423          	sw	a4,8(s0)
    63a8:	fc9ff06f          	j	6370 <__swsetup_r+0x150>

000063ac <quorem>:
    63ac:	fb010113          	addi	sp,sp,-80
    63b0:	05212023          	sw	s2,64(sp)
    63b4:	01052783          	lw	a5,16(a0)
    63b8:	0105a903          	lw	s2,16(a1)
    63bc:	04112623          	sw	ra,76(sp)
    63c0:	04812423          	sw	s0,72(sp)
    63c4:	04912223          	sw	s1,68(sp)
    63c8:	03312e23          	sw	s3,60(sp)
    63cc:	03412c23          	sw	s4,56(sp)
    63d0:	03512a23          	sw	s5,52(sp)
    63d4:	03612823          	sw	s6,48(sp)
    63d8:	03712623          	sw	s7,44(sp)
    63dc:	03812423          	sw	s8,40(sp)
    63e0:	03912223          	sw	s9,36(sp)
    63e4:	03a12023          	sw	s10,32(sp)
    63e8:	01b12e23          	sw	s11,28(sp)
    63ec:	1f27cc63          	blt	a5,s2,65e4 <quorem+0x238>
    63f0:	fff90913          	addi	s2,s2,-1
    63f4:	01458c13          	addi	s8,a1,20
    63f8:	00291993          	slli	s3,s2,0x2
    63fc:	013c04b3          	add	s1,s8,s3
    6400:	01450b93          	addi	s7,a0,20
    6404:	013b89b3          	add	s3,s7,s3
    6408:	0004ab03          	lw	s6,0(s1)
    640c:	0009ac83          	lw	s9,0(s3)
    6410:	00058a93          	mv	s5,a1
    6414:	001b0b13          	addi	s6,s6,1
    6418:	00050413          	mv	s0,a0
    641c:	000b0593          	mv	a1,s6
    6420:	000c8513          	mv	a0,s9
    6424:	fffff097          	auipc	ra,0xfffff
    6428:	864080e7          	jalr	-1948(ra) # 4c88 <__udivsi3>
    642c:	00050a13          	mv	s4,a0
    6430:	0b6cec63          	bltu	s9,s6,64e8 <quorem+0x13c>
    6434:	00010b37          	lui	s6,0x10
    6438:	000c0c93          	mv	s9,s8
    643c:	000b8d13          	mv	s10,s7
    6440:	00000693          	li	a3,0
    6444:	00000d93          	li	s11,0
    6448:	fffb0b13          	addi	s6,s6,-1 # ffff <_data_lma+0x4e87>
    644c:	004c8c93          	addi	s9,s9,4
    6450:	ffcca783          	lw	a5,-4(s9)
    6454:	000a0593          	mv	a1,s4
    6458:	00d12423          	sw	a3,8(sp)
    645c:	0167f533          	and	a0,a5,s6
    6460:	00f12623          	sw	a5,12(sp)
    6464:	ffffe097          	auipc	ra,0xffffe
    6468:	7f8080e7          	jalr	2040(ra) # 4c5c <__mulsi3>
    646c:	00812683          	lw	a3,8(sp)
    6470:	00c12783          	lw	a5,12(sp)
    6474:	000a0593          	mv	a1,s4
    6478:	00d50733          	add	a4,a0,a3
    647c:	0107d513          	srli	a0,a5,0x10
    6480:	00e12423          	sw	a4,8(sp)
    6484:	ffffe097          	auipc	ra,0xffffe
    6488:	7d8080e7          	jalr	2008(ra) # 4c5c <__mulsi3>
    648c:	00812703          	lw	a4,8(sp)
    6490:	004d0d13          	addi	s10,s10,4
    6494:	01075793          	srli	a5,a4,0x10
    6498:	00f50533          	add	a0,a0,a5
    649c:	ffcd2783          	lw	a5,-4(s10)
    64a0:	01677733          	and	a4,a4,s6
    64a4:	40ed8db3          	sub	s11,s11,a4
    64a8:	0167f733          	and	a4,a5,s6
    64ac:	00ed8733          	add	a4,s11,a4
    64b0:	01055693          	srli	a3,a0,0x10
    64b4:	0107d793          	srli	a5,a5,0x10
    64b8:	01657533          	and	a0,a0,s6
    64bc:	40a787b3          	sub	a5,a5,a0
    64c0:	41075513          	srai	a0,a4,0x10
    64c4:	00a787b3          	add	a5,a5,a0
    64c8:	4107dd93          	srai	s11,a5,0x10
    64cc:	01677733          	and	a4,a4,s6
    64d0:	01079793          	slli	a5,a5,0x10
    64d4:	00e7e7b3          	or	a5,a5,a4
    64d8:	fefd2e23          	sw	a5,-4(s10)
    64dc:	f794f8e3          	bgeu	s1,s9,644c <quorem+0xa0>
    64e0:	0009a783          	lw	a5,0(s3)
    64e4:	0c078a63          	beqz	a5,65b8 <quorem+0x20c>
    64e8:	000a8593          	mv	a1,s5
    64ec:	00040513          	mv	a0,s0
    64f0:	00002097          	auipc	ra,0x2
    64f4:	618080e7          	jalr	1560(ra) # 8b08 <__mcmp>
    64f8:	06054a63          	bltz	a0,656c <quorem+0x1c0>
    64fc:	00010637          	lui	a2,0x10
    6500:	001a0a13          	addi	s4,s4,1
    6504:	000b8593          	mv	a1,s7
    6508:	00000513          	li	a0,0
    650c:	fff60613          	addi	a2,a2,-1 # ffff <_data_lma+0x4e87>
    6510:	004c0c13          	addi	s8,s8,4
    6514:	ffcc2803          	lw	a6,-4(s8)
    6518:	0005a703          	lw	a4,0(a1)
    651c:	00458593          	addi	a1,a1,4
    6520:	00c876b3          	and	a3,a6,a2
    6524:	40d50533          	sub	a0,a0,a3
    6528:	00c776b3          	and	a3,a4,a2
    652c:	00d506b3          	add	a3,a0,a3
    6530:	01075793          	srli	a5,a4,0x10
    6534:	01085813          	srli	a6,a6,0x10
    6538:	4106d713          	srai	a4,a3,0x10
    653c:	410787b3          	sub	a5,a5,a6
    6540:	00e787b3          	add	a5,a5,a4
    6544:	4107d513          	srai	a0,a5,0x10
    6548:	00c6f6b3          	and	a3,a3,a2
    654c:	01079793          	slli	a5,a5,0x10
    6550:	00d7e7b3          	or	a5,a5,a3
    6554:	fef5ae23          	sw	a5,-4(a1)
    6558:	fb84fce3          	bgeu	s1,s8,6510 <quorem+0x164>
    655c:	00291793          	slli	a5,s2,0x2
    6560:	00fb87b3          	add	a5,s7,a5
    6564:	0007a703          	lw	a4,0(a5)
    6568:	06070663          	beqz	a4,65d4 <quorem+0x228>
    656c:	000a0513          	mv	a0,s4
    6570:	04c12083          	lw	ra,76(sp)
    6574:	04812403          	lw	s0,72(sp)
    6578:	04412483          	lw	s1,68(sp)
    657c:	04012903          	lw	s2,64(sp)
    6580:	03c12983          	lw	s3,60(sp)
    6584:	03812a03          	lw	s4,56(sp)
    6588:	03412a83          	lw	s5,52(sp)
    658c:	03012b03          	lw	s6,48(sp)
    6590:	02c12b83          	lw	s7,44(sp)
    6594:	02812c03          	lw	s8,40(sp)
    6598:	02412c83          	lw	s9,36(sp)
    659c:	02012d03          	lw	s10,32(sp)
    65a0:	01c12d83          	lw	s11,28(sp)
    65a4:	05010113          	addi	sp,sp,80
    65a8:	00008067          	ret
    65ac:	0009a783          	lw	a5,0(s3)
    65b0:	00079863          	bnez	a5,65c0 <quorem+0x214>
    65b4:	fff90913          	addi	s2,s2,-1
    65b8:	ffc98993          	addi	s3,s3,-4
    65bc:	ff3be8e3          	bltu	s7,s3,65ac <quorem+0x200>
    65c0:	01242823          	sw	s2,16(s0)
    65c4:	f25ff06f          	j	64e8 <quorem+0x13c>
    65c8:	0007a703          	lw	a4,0(a5)
    65cc:	00071863          	bnez	a4,65dc <quorem+0x230>
    65d0:	fff90913          	addi	s2,s2,-1
    65d4:	ffc78793          	addi	a5,a5,-4
    65d8:	fefbe8e3          	bltu	s7,a5,65c8 <quorem+0x21c>
    65dc:	01242823          	sw	s2,16(s0)
    65e0:	f8dff06f          	j	656c <quorem+0x1c0>
    65e4:	00000513          	li	a0,0
    65e8:	f89ff06f          	j	6570 <quorem+0x1c4>

000065ec <_dtoa_r>:
    65ec:	f7010113          	addi	sp,sp,-144
    65f0:	02f12823          	sw	a5,48(sp)
    65f4:	02452783          	lw	a5,36(a0)
    65f8:	08812423          	sw	s0,136(sp)
    65fc:	08912223          	sw	s1,132(sp)
    6600:	09212023          	sw	s2,128(sp)
    6604:	07312e23          	sw	s3,124(sp)
    6608:	07412c23          	sw	s4,120(sp)
    660c:	07812423          	sw	s8,104(sp)
    6610:	08112623          	sw	ra,140(sp)
    6614:	07512a23          	sw	s5,116(sp)
    6618:	07612823          	sw	s6,112(sp)
    661c:	07712623          	sw	s7,108(sp)
    6620:	07912223          	sw	s9,100(sp)
    6624:	07a12023          	sw	s10,96(sp)
    6628:	05b12e23          	sw	s11,92(sp)
    662c:	00d12223          	sw	a3,4(sp)
    6630:	00e12623          	sw	a4,12(sp)
    6634:	01112a23          	sw	a7,20(sp)
    6638:	00050493          	mv	s1,a0
    663c:	00058413          	mv	s0,a1
    6640:	00060913          	mv	s2,a2
    6644:	00080993          	mv	s3,a6
    6648:	00058a13          	mv	s4,a1
    664c:	00060c13          	mv	s8,a2
    6650:	02079263          	bnez	a5,6674 <_dtoa_r+0x88>
    6654:	01000513          	li	a0,16
    6658:	00002097          	auipc	ra,0x2
    665c:	ac4080e7          	jalr	-1340(ra) # 811c <malloc>
    6660:	02a4a223          	sw	a0,36(s1)
    6664:	00052223          	sw	zero,4(a0)
    6668:	00052423          	sw	zero,8(a0)
    666c:	00052023          	sw	zero,0(a0)
    6670:	00052623          	sw	zero,12(a0)
    6674:	0244a783          	lw	a5,36(s1)
    6678:	0007a583          	lw	a1,0(a5)
    667c:	02058663          	beqz	a1,66a8 <_dtoa_r+0xbc>
    6680:	0047a703          	lw	a4,4(a5)
    6684:	00100793          	li	a5,1
    6688:	00048513          	mv	a0,s1
    668c:	00e797b3          	sll	a5,a5,a4
    6690:	00f5a423          	sw	a5,8(a1)
    6694:	00e5a223          	sw	a4,4(a1)
    6698:	00002097          	auipc	ra,0x2
    669c:	c84080e7          	jalr	-892(ra) # 831c <_Bfree>
    66a0:	0244a783          	lw	a5,36(s1)
    66a4:	0007a023          	sw	zero,0(a5)
    66a8:	04095e63          	bgez	s2,6704 <_dtoa_r+0x118>
    66ac:	00100793          	li	a5,1
    66b0:	00191c13          	slli	s8,s2,0x1
    66b4:	00f9a023          	sw	a5,0(s3)
    66b8:	001c5c13          	srli	s8,s8,0x1
    66bc:	7ff007b7          	lui	a5,0x7ff00
    66c0:	00fc7733          	and	a4,s8,a5
    66c4:	0af71263          	bne	a4,a5,6768 <_dtoa_r+0x17c>
    66c8:	03012703          	lw	a4,48(sp)
    66cc:	000027b7          	lui	a5,0x2
    66d0:	00cc1c13          	slli	s8,s8,0xc
    66d4:	70f78793          	addi	a5,a5,1807 # 270f <core_bench_state+0x1c3>
    66d8:	00cc5c13          	srli	s8,s8,0xc
    66dc:	00f72023          	sw	a5,0(a4)
    66e0:	008c6c33          	or	s8,s8,s0
    66e4:	000c1463          	bnez	s8,66ec <_dtoa_r+0x100>
    66e8:	1dc0106f          	j	78c4 <_dtoa_r+0x12d8>
    66ec:	01412783          	lw	a5,20(sp)
    66f0:	00079e63          	bnez	a5,670c <_dtoa_r+0x120>
    66f4:	00ffa797          	auipc	a5,0xffa
    66f8:	0e878793          	addi	a5,a5,232 # 10007dc <__clz_tab+0x190>
    66fc:	00f12023          	sw	a5,0(sp)
    6700:	0280006f          	j	6728 <_dtoa_r+0x13c>
    6704:	0009a023          	sw	zero,0(s3)
    6708:	fb5ff06f          	j	66bc <_dtoa_r+0xd0>
    670c:	00ffa797          	auipc	a5,0xffa
    6710:	0d078793          	addi	a5,a5,208 # 10007dc <__clz_tab+0x190>
    6714:	00f12023          	sw	a5,0(sp)
    6718:	00ffa797          	auipc	a5,0xffa
    671c:	0c778793          	addi	a5,a5,199 # 10007df <__clz_tab+0x193>
    6720:	01412703          	lw	a4,20(sp)
    6724:	00f72023          	sw	a5,0(a4)
    6728:	08c12083          	lw	ra,140(sp)
    672c:	08812403          	lw	s0,136(sp)
    6730:	00012503          	lw	a0,0(sp)
    6734:	08412483          	lw	s1,132(sp)
    6738:	08012903          	lw	s2,128(sp)
    673c:	07c12983          	lw	s3,124(sp)
    6740:	07812a03          	lw	s4,120(sp)
    6744:	07412a83          	lw	s5,116(sp)
    6748:	07012b03          	lw	s6,112(sp)
    674c:	06c12b83          	lw	s7,108(sp)
    6750:	06812c03          	lw	s8,104(sp)
    6754:	06412c83          	lw	s9,100(sp)
    6758:	06012d03          	lw	s10,96(sp)
    675c:	05c12d83          	lw	s11,92(sp)
    6760:	09010113          	addi	sp,sp,144
    6764:	00008067          	ret
    6768:	00000613          	li	a2,0
    676c:	00000693          	li	a3,0
    6770:	00040513          	mv	a0,s0
    6774:	000c0593          	mv	a1,s8
    6778:	00812e23          	sw	s0,28(sp)
    677c:	03812423          	sw	s8,40(sp)
    6780:	00004097          	auipc	ra,0x4
    6784:	bb4080e7          	jalr	-1100(ra) # a334 <__eqdf2>
    6788:	02051863          	bnez	a0,67b8 <_dtoa_r+0x1cc>
    678c:	03012703          	lw	a4,48(sp)
    6790:	00100793          	li	a5,1
    6794:	00f72023          	sw	a5,0(a4)
    6798:	00ffa797          	auipc	a5,0xffa
    679c:	fd078793          	addi	a5,a5,-48 # 1000768 <__clz_tab+0x11c>
    67a0:	00f12023          	sw	a5,0(sp)
    67a4:	01412783          	lw	a5,20(sp)
    67a8:	f80780e3          	beqz	a5,6728 <_dtoa_r+0x13c>
    67ac:	00ffa797          	auipc	a5,0xffa
    67b0:	fbd78793          	addi	a5,a5,-67 # 1000769 <__clz_tab+0x11d>
    67b4:	f6dff06f          	j	6720 <_dtoa_r+0x134>
    67b8:	04810713          	addi	a4,sp,72
    67bc:	04c10693          	addi	a3,sp,76
    67c0:	000c0613          	mv	a2,s8
    67c4:	00040593          	mv	a1,s0
    67c8:	00048513          	mv	a0,s1
    67cc:	014c5913          	srli	s2,s8,0x14
    67d0:	00002097          	auipc	ra,0x2
    67d4:	508080e7          	jalr	1288(ra) # 8cd8 <__d2b>
    67d8:	7ff97913          	andi	s2,s2,2047
    67dc:	00050993          	mv	s3,a0
    67e0:	04812a83          	lw	s5,72(sp)
    67e4:	1c090063          	beqz	s2,69a4 <_dtoa_r+0x3b8>
    67e8:	02812783          	lw	a5,40(sp)
    67ec:	01c12503          	lw	a0,28(sp)
    67f0:	c0190913          	addi	s2,s2,-1023
    67f4:	00c79593          	slli	a1,a5,0xc
    67f8:	00c5d593          	srli	a1,a1,0xc
    67fc:	3ff007b7          	lui	a5,0x3ff00
    6800:	00f5e5b3          	or	a1,a1,a5
    6804:	02012c23          	sw	zero,56(sp)
    6808:	00ffa797          	auipc	a5,0xffa
    680c:	f9078793          	addi	a5,a5,-112 # 1000798 <__clz_tab+0x14c>
    6810:	0007a603          	lw	a2,0(a5)
    6814:	0047a683          	lw	a3,4(a5)
    6818:	00004097          	auipc	ra,0x4
    681c:	ba8080e7          	jalr	-1112(ra) # a3c0 <__subdf3>
    6820:	00ffa797          	auipc	a5,0xffa
    6824:	f8078793          	addi	a5,a5,-128 # 10007a0 <__clz_tab+0x154>
    6828:	0007a603          	lw	a2,0(a5)
    682c:	0047a683          	lw	a3,4(a5)
    6830:	ffffe097          	auipc	ra,0xffffe
    6834:	b9c080e7          	jalr	-1124(ra) # 43cc <__muldf3>
    6838:	00ffa797          	auipc	a5,0xffa
    683c:	f7078793          	addi	a5,a5,-144 # 10007a8 <__clz_tab+0x15c>
    6840:	0007a603          	lw	a2,0(a5)
    6844:	0047a683          	lw	a3,4(a5)
    6848:	00003097          	auipc	ra,0x3
    684c:	260080e7          	jalr	608(ra) # 9aa8 <__adddf3>
    6850:	00050b13          	mv	s6,a0
    6854:	00090513          	mv	a0,s2
    6858:	00058b93          	mv	s7,a1
    685c:	00004097          	auipc	ra,0x4
    6860:	4c0080e7          	jalr	1216(ra) # ad1c <__floatsidf>
    6864:	00ffa797          	auipc	a5,0xffa
    6868:	f4c78793          	addi	a5,a5,-180 # 10007b0 <__clz_tab+0x164>
    686c:	0007a603          	lw	a2,0(a5)
    6870:	0047a683          	lw	a3,4(a5)
    6874:	ffffe097          	auipc	ra,0xffffe
    6878:	b58080e7          	jalr	-1192(ra) # 43cc <__muldf3>
    687c:	00050613          	mv	a2,a0
    6880:	00058693          	mv	a3,a1
    6884:	000b0513          	mv	a0,s6
    6888:	000b8593          	mv	a1,s7
    688c:	00003097          	auipc	ra,0x3
    6890:	21c080e7          	jalr	540(ra) # 9aa8 <__adddf3>
    6894:	00050b13          	mv	s6,a0
    6898:	00058b93          	mv	s7,a1
    689c:	00004097          	auipc	ra,0x4
    68a0:	3fc080e7          	jalr	1020(ra) # ac98 <__fixdfsi>
    68a4:	00050413          	mv	s0,a0
    68a8:	00000613          	li	a2,0
    68ac:	00000693          	li	a3,0
    68b0:	000b0513          	mv	a0,s6
    68b4:	000b8593          	mv	a1,s7
    68b8:	ffffe097          	auipc	ra,0xffffe
    68bc:	a18080e7          	jalr	-1512(ra) # 42d0 <__ledf2>
    68c0:	02055463          	bgez	a0,68e8 <_dtoa_r+0x2fc>
    68c4:	00040513          	mv	a0,s0
    68c8:	00004097          	auipc	ra,0x4
    68cc:	454080e7          	jalr	1108(ra) # ad1c <__floatsidf>
    68d0:	000b0613          	mv	a2,s6
    68d4:	000b8693          	mv	a3,s7
    68d8:	00004097          	auipc	ra,0x4
    68dc:	a5c080e7          	jalr	-1444(ra) # a334 <__eqdf2>
    68e0:	00050463          	beqz	a0,68e8 <_dtoa_r+0x2fc>
    68e4:	fff40413          	addi	s0,s0,-1
    68e8:	00100713          	li	a4,1
    68ec:	01600793          	li	a5,22
    68f0:	02e12623          	sw	a4,44(sp)
    68f4:	0287ec63          	bltu	a5,s0,692c <_dtoa_r+0x340>
    68f8:	00341713          	slli	a4,s0,0x3
    68fc:	00ffa797          	auipc	a5,0xffa
    6900:	f6c78793          	addi	a5,a5,-148 # 1000868 <__mprec_tens>
    6904:	00e787b3          	add	a5,a5,a4
    6908:	0007a603          	lw	a2,0(a5)
    690c:	0047a683          	lw	a3,4(a5)
    6910:	01c12503          	lw	a0,28(sp)
    6914:	02812583          	lw	a1,40(sp)
    6918:	ffffe097          	auipc	ra,0xffffe
    691c:	9b8080e7          	jalr	-1608(ra) # 42d0 <__ledf2>
    6920:	00055463          	bgez	a0,6928 <_dtoa_r+0x33c>
    6924:	fff40413          	addi	s0,s0,-1
    6928:	02012623          	sw	zero,44(sp)
    692c:	412a8933          	sub	s2,s5,s2
    6930:	fff90b93          	addi	s7,s2,-1
    6934:	00000b13          	li	s6,0
    6938:	000bd863          	bgez	s7,6948 <_dtoa_r+0x35c>
    693c:	00100b13          	li	s6,1
    6940:	412b0b33          	sub	s6,s6,s2
    6944:	00000b93          	li	s7,0
    6948:	0a044a63          	bltz	s0,69fc <_dtoa_r+0x410>
    694c:	008b8bb3          	add	s7,s7,s0
    6950:	00812c23          	sw	s0,24(sp)
    6954:	00000a93          	li	s5,0
    6958:	00412703          	lw	a4,4(sp)
    695c:	00900793          	li	a5,9
    6960:	1ee7e463          	bltu	a5,a4,6b48 <_dtoa_r+0x55c>
    6964:	00500793          	li	a5,5
    6968:	00100c93          	li	s9,1
    696c:	00e7d863          	bge	a5,a4,697c <_dtoa_r+0x390>
    6970:	ffc70793          	addi	a5,a4,-4
    6974:	00f12223          	sw	a5,4(sp)
    6978:	00000c93          	li	s9,0
    697c:	00412703          	lw	a4,4(sp)
    6980:	00300793          	li	a5,3
    6984:	1af70063          	beq	a4,a5,6b24 <_dtoa_r+0x538>
    6988:	08e7c263          	blt	a5,a4,6a0c <_dtoa_r+0x420>
    698c:	00200793          	li	a5,2
    6990:	00012823          	sw	zero,16(sp)
    6994:	0af70c63          	beq	a4,a5,6a4c <_dtoa_r+0x460>
    6998:	00100793          	li	a5,1
    699c:	00f12823          	sw	a5,16(sp)
    69a0:	08c0006f          	j	6a2c <_dtoa_r+0x440>
    69a4:	04c12903          	lw	s2,76(sp)
    69a8:	02000793          	li	a5,32
    69ac:	012a8933          	add	s2,s5,s2
    69b0:	43290713          	addi	a4,s2,1074
    69b4:	02e7de63          	bge	a5,a4,69f0 <_dtoa_r+0x404>
    69b8:	04000513          	li	a0,64
    69bc:	40e50533          	sub	a0,a0,a4
    69c0:	41290793          	addi	a5,s2,1042
    69c4:	00ac1533          	sll	a0,s8,a0
    69c8:	00f45433          	srl	s0,s0,a5
    69cc:	00856533          	or	a0,a0,s0
    69d0:	ffffe097          	auipc	ra,0xffffe
    69d4:	1d8080e7          	jalr	472(ra) # 4ba8 <__floatunsidf>
    69d8:	fe1007b7          	lui	a5,0xfe100
    69dc:	00b785b3          	add	a1,a5,a1
    69e0:	00100793          	li	a5,1
    69e4:	fff90913          	addi	s2,s2,-1
    69e8:	02f12c23          	sw	a5,56(sp)
    69ec:	e1dff06f          	j	6808 <_dtoa_r+0x21c>
    69f0:	40e78533          	sub	a0,a5,a4
    69f4:	00a41533          	sll	a0,s0,a0
    69f8:	fd9ff06f          	j	69d0 <_dtoa_r+0x3e4>
    69fc:	408b0b33          	sub	s6,s6,s0
    6a00:	40800ab3          	neg	s5,s0
    6a04:	00012c23          	sw	zero,24(sp)
    6a08:	f51ff06f          	j	6958 <_dtoa_r+0x36c>
    6a0c:	00412703          	lw	a4,4(sp)
    6a10:	00400793          	li	a5,4
    6a14:	02f70863          	beq	a4,a5,6a44 <_dtoa_r+0x458>
    6a18:	00100713          	li	a4,1
    6a1c:	00e12823          	sw	a4,16(sp)
    6a20:	00412703          	lw	a4,4(sp)
    6a24:	00500793          	li	a5,5
    6a28:	10f70063          	beq	a4,a5,6b28 <_dtoa_r+0x53c>
    6a2c:	fff00793          	li	a5,-1
    6a30:	00f12423          	sw	a5,8(sp)
    6a34:	fff00d93          	li	s11,-1
    6a38:	01200793          	li	a5,18
    6a3c:	00012623          	sw	zero,12(sp)
    6a40:	0280006f          	j	6a68 <_dtoa_r+0x47c>
    6a44:	00100793          	li	a5,1
    6a48:	00f12823          	sw	a5,16(sp)
    6a4c:	00c12783          	lw	a5,12(sp)
    6a50:	10f04263          	bgtz	a5,6b54 <_dtoa_r+0x568>
    6a54:	00100793          	li	a5,1
    6a58:	00100713          	li	a4,1
    6a5c:	00f12423          	sw	a5,8(sp)
    6a60:	00100d93          	li	s11,1
    6a64:	00e12623          	sw	a4,12(sp)
    6a68:	0244a903          	lw	s2,36(s1)
    6a6c:	00400713          	li	a4,4
    6a70:	00092223          	sw	zero,4(s2)
    6a74:	01470693          	addi	a3,a4,20
    6a78:	00492583          	lw	a1,4(s2)
    6a7c:	0ed7f463          	bgeu	a5,a3,6b64 <_dtoa_r+0x578>
    6a80:	00048513          	mv	a0,s1
    6a84:	00001097          	auipc	ra,0x1
    6a88:	7ac080e7          	jalr	1964(ra) # 8230 <_Balloc>
    6a8c:	0244a783          	lw	a5,36(s1)
    6a90:	00a92023          	sw	a0,0(s2)
    6a94:	0007a783          	lw	a5,0(a5) # fe100000 <__freertos_irq_stack_top+0xfd0f0000>
    6a98:	00f12023          	sw	a5,0(sp)
    6a9c:	00e00793          	li	a5,14
    6aa0:	2db7ea63          	bltu	a5,s11,6d74 <_dtoa_r+0x788>
    6aa4:	2c0c8863          	beqz	s9,6d74 <_dtoa_r+0x788>
    6aa8:	12805463          	blez	s0,6bd0 <_dtoa_r+0x5e4>
    6aac:	00f47793          	andi	a5,s0,15
    6ab0:	00379713          	slli	a4,a5,0x3
    6ab4:	40445c93          	srai	s9,s0,0x4
    6ab8:	00ffa797          	auipc	a5,0xffa
    6abc:	db078793          	addi	a5,a5,-592 # 1000868 <__mprec_tens>
    6ac0:	00e787b3          	add	a5,a5,a4
    6ac4:	010cf693          	andi	a3,s9,16
    6ac8:	0007a703          	lw	a4,0(a5)
    6acc:	00200913          	li	s2,2
    6ad0:	0047a783          	lw	a5,4(a5)
    6ad4:	04068263          	beqz	a3,6b18 <_dtoa_r+0x52c>
    6ad8:	00ffa697          	auipc	a3,0xffa
    6adc:	d6868693          	addi	a3,a3,-664 # 1000840 <__mprec_bigtens>
    6ae0:	0206a603          	lw	a2,32(a3)
    6ae4:	01c12503          	lw	a0,28(sp)
    6ae8:	0246a683          	lw	a3,36(a3)
    6aec:	02812583          	lw	a1,40(sp)
    6af0:	02e12023          	sw	a4,32(sp)
    6af4:	02f12223          	sw	a5,36(sp)
    6af8:	ffffd097          	auipc	ra,0xffffd
    6afc:	de4080e7          	jalr	-540(ra) # 38dc <__divdf3>
    6b00:	02012703          	lw	a4,32(sp)
    6b04:	02412783          	lw	a5,36(sp)
    6b08:	00fcfc93          	andi	s9,s9,15
    6b0c:	00050a13          	mv	s4,a0
    6b10:	00058c13          	mv	s8,a1
    6b14:	00300913          	li	s2,3
    6b18:	00ffad17          	auipc	s10,0xffa
    6b1c:	d28d0d13          	addi	s10,s10,-728 # 1000840 <__mprec_bigtens>
    6b20:	0880006f          	j	6ba8 <_dtoa_r+0x5bc>
    6b24:	00012823          	sw	zero,16(sp)
    6b28:	00c12783          	lw	a5,12(sp)
    6b2c:	00f407b3          	add	a5,s0,a5
    6b30:	00f12423          	sw	a5,8(sp)
    6b34:	00178d93          	addi	s11,a5,1
    6b38:	000d8793          	mv	a5,s11
    6b3c:	f3b046e3          	bgtz	s11,6a68 <_dtoa_r+0x47c>
    6b40:	00100793          	li	a5,1
    6b44:	f25ff06f          	j	6a68 <_dtoa_r+0x47c>
    6b48:	00100c93          	li	s9,1
    6b4c:	00012223          	sw	zero,4(sp)
    6b50:	e49ff06f          	j	6998 <_dtoa_r+0x3ac>
    6b54:	00c12783          	lw	a5,12(sp)
    6b58:	00f12423          	sw	a5,8(sp)
    6b5c:	00078d93          	mv	s11,a5
    6b60:	f09ff06f          	j	6a68 <_dtoa_r+0x47c>
    6b64:	00158593          	addi	a1,a1,1
    6b68:	00b92223          	sw	a1,4(s2)
    6b6c:	00171713          	slli	a4,a4,0x1
    6b70:	f05ff06f          	j	6a74 <_dtoa_r+0x488>
    6b74:	001cf693          	andi	a3,s9,1
    6b78:	02068463          	beqz	a3,6ba0 <_dtoa_r+0x5b4>
    6b7c:	000d2603          	lw	a2,0(s10)
    6b80:	004d2683          	lw	a3,4(s10)
    6b84:	00070513          	mv	a0,a4
    6b88:	00078593          	mv	a1,a5
    6b8c:	ffffe097          	auipc	ra,0xffffe
    6b90:	840080e7          	jalr	-1984(ra) # 43cc <__muldf3>
    6b94:	00190913          	addi	s2,s2,1
    6b98:	00050713          	mv	a4,a0
    6b9c:	00058793          	mv	a5,a1
    6ba0:	401cdc93          	srai	s9,s9,0x1
    6ba4:	008d0d13          	addi	s10,s10,8
    6ba8:	fc0c96e3          	bnez	s9,6b74 <_dtoa_r+0x588>
    6bac:	00070613          	mv	a2,a4
    6bb0:	00078693          	mv	a3,a5
    6bb4:	000a0513          	mv	a0,s4
    6bb8:	000c0593          	mv	a1,s8
    6bbc:	ffffd097          	auipc	ra,0xffffd
    6bc0:	d20080e7          	jalr	-736(ra) # 38dc <__divdf3>
    6bc4:	00050a13          	mv	s4,a0
    6bc8:	00058c13          	mv	s8,a1
    6bcc:	05c0006f          	j	6c28 <_dtoa_r+0x63c>
    6bd0:	00200913          	li	s2,2
    6bd4:	04040a63          	beqz	s0,6c28 <_dtoa_r+0x63c>
    6bd8:	40800cb3          	neg	s9,s0
    6bdc:	00fcf793          	andi	a5,s9,15
    6be0:	00379713          	slli	a4,a5,0x3
    6be4:	00ffa797          	auipc	a5,0xffa
    6be8:	c8478793          	addi	a5,a5,-892 # 1000868 <__mprec_tens>
    6bec:	00e787b3          	add	a5,a5,a4
    6bf0:	0007a603          	lw	a2,0(a5)
    6bf4:	0047a683          	lw	a3,4(a5)
    6bf8:	01c12503          	lw	a0,28(sp)
    6bfc:	02812583          	lw	a1,40(sp)
    6c00:	404cdc93          	srai	s9,s9,0x4
    6c04:	00ffad17          	auipc	s10,0xffa
    6c08:	c3cd0d13          	addi	s10,s10,-964 # 1000840 <__mprec_bigtens>
    6c0c:	ffffd097          	auipc	ra,0xffffd
    6c10:	7c0080e7          	jalr	1984(ra) # 43cc <__muldf3>
    6c14:	00050a13          	mv	s4,a0
    6c18:	00058c13          	mv	s8,a1
    6c1c:	00000793          	li	a5,0
    6c20:	1e0c9263          	bnez	s9,6e04 <_dtoa_r+0x818>
    6c24:	fa0790e3          	bnez	a5,6bc4 <_dtoa_r+0x5d8>
    6c28:	02c12783          	lw	a5,44(sp)
    6c2c:	20078263          	beqz	a5,6e30 <_dtoa_r+0x844>
    6c30:	00ff9717          	auipc	a4,0xff9
    6c34:	3e070713          	addi	a4,a4,992 # 1000010 <_data+0x10>
    6c38:	00072603          	lw	a2,0(a4)
    6c3c:	00472683          	lw	a3,4(a4)
    6c40:	000a0513          	mv	a0,s4
    6c44:	000c0593          	mv	a1,s8
    6c48:	03412023          	sw	s4,32(sp)
    6c4c:	ffffd097          	auipc	ra,0xffffd
    6c50:	684080e7          	jalr	1668(ra) # 42d0 <__ledf2>
    6c54:	1c055e63          	bgez	a0,6e30 <_dtoa_r+0x844>
    6c58:	1e0d8263          	beqz	s11,6e3c <_dtoa_r+0x850>
    6c5c:	00812783          	lw	a5,8(sp)
    6c60:	10f05663          	blez	a5,6d6c <_dtoa_r+0x780>
    6c64:	00ff9717          	auipc	a4,0xff9
    6c68:	3b470713          	addi	a4,a4,948 # 1000018 <_data+0x18>
    6c6c:	02012783          	lw	a5,32(sp)
    6c70:	00072603          	lw	a2,0(a4)
    6c74:	00472683          	lw	a3,4(a4)
    6c78:	00078513          	mv	a0,a5
    6c7c:	000c0593          	mv	a1,s8
    6c80:	ffffd097          	auipc	ra,0xffffd
    6c84:	74c080e7          	jalr	1868(ra) # 43cc <__muldf3>
    6c88:	00812783          	lw	a5,8(sp)
    6c8c:	fff40d13          	addi	s10,s0,-1
    6c90:	00050a13          	mv	s4,a0
    6c94:	00058c13          	mv	s8,a1
    6c98:	00190913          	addi	s2,s2,1
    6c9c:	000c0713          	mv	a4,s8
    6ca0:	00090513          	mv	a0,s2
    6ca4:	02f12e23          	sw	a5,60(sp)
    6ca8:	03412a23          	sw	s4,52(sp)
    6cac:	00070c93          	mv	s9,a4
    6cb0:	02e12023          	sw	a4,32(sp)
    6cb4:	00004097          	auipc	ra,0x4
    6cb8:	068080e7          	jalr	104(ra) # ad1c <__floatsidf>
    6cbc:	03412803          	lw	a6,52(sp)
    6cc0:	02012703          	lw	a4,32(sp)
    6cc4:	fcc00937          	lui	s2,0xfcc00
    6cc8:	00080613          	mv	a2,a6
    6ccc:	00070693          	mv	a3,a4
    6cd0:	ffffd097          	auipc	ra,0xffffd
    6cd4:	6fc080e7          	jalr	1788(ra) # 43cc <__muldf3>
    6cd8:	00ffa697          	auipc	a3,0xffa
    6cdc:	ae068693          	addi	a3,a3,-1312 # 10007b8 <__clz_tab+0x16c>
    6ce0:	0006a603          	lw	a2,0(a3)
    6ce4:	0046a683          	lw	a3,4(a3)
    6ce8:	000a0c13          	mv	s8,s4
    6cec:	00003097          	auipc	ra,0x3
    6cf0:	dbc080e7          	jalr	-580(ra) # 9aa8 <__adddf3>
    6cf4:	03c12783          	lw	a5,60(sp)
    6cf8:	00050a13          	mv	s4,a0
    6cfc:	00b90933          	add	s2,s2,a1
    6d00:	14079463          	bnez	a5,6e48 <_dtoa_r+0x85c>
    6d04:	00ffa797          	auipc	a5,0xffa
    6d08:	abc78793          	addi	a5,a5,-1348 # 10007c0 <__clz_tab+0x174>
    6d0c:	03412803          	lw	a6,52(sp)
    6d10:	02012703          	lw	a4,32(sp)
    6d14:	0007a603          	lw	a2,0(a5)
    6d18:	0047a683          	lw	a3,4(a5)
    6d1c:	00080513          	mv	a0,a6
    6d20:	00070593          	mv	a1,a4
    6d24:	00003097          	auipc	ra,0x3
    6d28:	69c080e7          	jalr	1692(ra) # a3c0 <__subdf3>
    6d2c:	000a0613          	mv	a2,s4
    6d30:	00090693          	mv	a3,s2
    6d34:	00050c13          	mv	s8,a0
    6d38:	00058c93          	mv	s9,a1
    6d3c:	ffffd097          	auipc	ra,0xffffd
    6d40:	4a4080e7          	jalr	1188(ra) # 41e0 <__gedf2>
    6d44:	0aa042e3          	bgtz	a0,75e8 <_dtoa_r+0xffc>
    6d48:	800007b7          	lui	a5,0x80000
    6d4c:	0127c7b3          	xor	a5,a5,s2
    6d50:	000a0613          	mv	a2,s4
    6d54:	00078693          	mv	a3,a5
    6d58:	000c0513          	mv	a0,s8
    6d5c:	000c8593          	mv	a1,s9
    6d60:	ffffd097          	auipc	ra,0xffffd
    6d64:	570080e7          	jalr	1392(ra) # 42d0 <__ledf2>
    6d68:	06054ae3          	bltz	a0,75dc <_dtoa_r+0xff0>
    6d6c:	01c12a03          	lw	s4,28(sp)
    6d70:	02812c03          	lw	s8,40(sp)
    6d74:	04c12783          	lw	a5,76(sp)
    6d78:	4e07c263          	bltz	a5,725c <_dtoa_r+0xc70>
    6d7c:	00e00713          	li	a4,14
    6d80:	4c874e63          	blt	a4,s0,725c <_dtoa_r+0xc70>
    6d84:	00341713          	slli	a4,s0,0x3
    6d88:	00ffa797          	auipc	a5,0xffa
    6d8c:	ae078793          	addi	a5,a5,-1312 # 1000868 <__mprec_tens>
    6d90:	00e787b3          	add	a5,a5,a4
    6d94:	0007ab03          	lw	s6,0(a5)
    6d98:	0047ab83          	lw	s7,4(a5)
    6d9c:	00c12783          	lw	a5,12(sp)
    6da0:	3407d263          	bgez	a5,70e4 <_dtoa_r+0xaf8>
    6da4:	35b04063          	bgtz	s11,70e4 <_dtoa_r+0xaf8>
    6da8:	020d9ae3          	bnez	s11,75dc <_dtoa_r+0xff0>
    6dac:	00ffa797          	auipc	a5,0xffa
    6db0:	a1478793          	addi	a5,a5,-1516 # 10007c0 <__clz_tab+0x174>
    6db4:	0007a603          	lw	a2,0(a5)
    6db8:	0047a683          	lw	a3,4(a5)
    6dbc:	000b0513          	mv	a0,s6
    6dc0:	000b8593          	mv	a1,s7
    6dc4:	ffffd097          	auipc	ra,0xffffd
    6dc8:	608080e7          	jalr	1544(ra) # 43cc <__muldf3>
    6dcc:	000a0613          	mv	a2,s4
    6dd0:	000c0693          	mv	a3,s8
    6dd4:	ffffd097          	auipc	ra,0xffffd
    6dd8:	40c080e7          	jalr	1036(ra) # 41e0 <__gedf2>
    6ddc:	00000a93          	li	s5,0
    6de0:	00000913          	li	s2,0
    6de4:	7a055463          	bgez	a0,758c <_dtoa_r+0xfa0>
    6de8:	00012783          	lw	a5,0(sp)
    6dec:	00012703          	lw	a4,0(sp)
    6df0:	00140413          	addi	s0,s0,1
    6df4:	00178a13          	addi	s4,a5,1
    6df8:	03100793          	li	a5,49
    6dfc:	00f70023          	sb	a5,0(a4)
    6e00:	7980006f          	j	7598 <_dtoa_r+0xfac>
    6e04:	001cf713          	andi	a4,s9,1
    6e08:	00070e63          	beqz	a4,6e24 <_dtoa_r+0x838>
    6e0c:	000d2603          	lw	a2,0(s10)
    6e10:	004d2683          	lw	a3,4(s10)
    6e14:	00190913          	addi	s2,s2,1 # fcc00001 <__freertos_irq_stack_top+0xfbbf0001>
    6e18:	ffffd097          	auipc	ra,0xffffd
    6e1c:	5b4080e7          	jalr	1460(ra) # 43cc <__muldf3>
    6e20:	00100793          	li	a5,1
    6e24:	401cdc93          	srai	s9,s9,0x1
    6e28:	008d0d13          	addi	s10,s10,8
    6e2c:	df5ff06f          	j	6c20 <_dtoa_r+0x634>
    6e30:	00040d13          	mv	s10,s0
    6e34:	000d8793          	mv	a5,s11
    6e38:	e65ff06f          	j	6c9c <_dtoa_r+0x6b0>
    6e3c:	00040d13          	mv	s10,s0
    6e40:	00000793          	li	a5,0
    6e44:	e59ff06f          	j	6c9c <_dtoa_r+0x6b0>
    6e48:	fff78693          	addi	a3,a5,-1
    6e4c:	00369613          	slli	a2,a3,0x3
    6e50:	00ffa697          	auipc	a3,0xffa
    6e54:	a1868693          	addi	a3,a3,-1512 # 1000868 <__mprec_tens>
    6e58:	00c686b3          	add	a3,a3,a2
    6e5c:	0006a503          	lw	a0,0(a3)
    6e60:	0046a583          	lw	a1,4(a3)
    6e64:	00012683          	lw	a3,0(sp)
    6e68:	00f687b3          	add	a5,a3,a5
    6e6c:	02f12a23          	sw	a5,52(sp)
    6e70:	01012783          	lw	a5,16(sp)
    6e74:	14078463          	beqz	a5,6fbc <_dtoa_r+0x9d0>
    6e78:	00ffa797          	auipc	a5,0xffa
    6e7c:	95078793          	addi	a5,a5,-1712 # 10007c8 <__clz_tab+0x17c>
    6e80:	00050613          	mv	a2,a0
    6e84:	00058693          	mv	a3,a1
    6e88:	0007a503          	lw	a0,0(a5)
    6e8c:	0047a583          	lw	a1,4(a5)
    6e90:	03212e23          	sw	s2,60(sp)
    6e94:	03412023          	sw	s4,32(sp)
    6e98:	ffffd097          	auipc	ra,0xffffd
    6e9c:	a44080e7          	jalr	-1468(ra) # 38dc <__divdf3>
    6ea0:	02012803          	lw	a6,32(sp)
    6ea4:	03c12703          	lw	a4,60(sp)
    6ea8:	00ff9917          	auipc	s2,0xff9
    6eac:	17090913          	addi	s2,s2,368 # 1000018 <_data+0x18>
    6eb0:	00080613          	mv	a2,a6
    6eb4:	00070693          	mv	a3,a4
    6eb8:	00003097          	auipc	ra,0x3
    6ebc:	508080e7          	jalr	1288(ra) # a3c0 <__subdf3>
    6ec0:	00012a03          	lw	s4,0(sp)
    6ec4:	02a12023          	sw	a0,32(sp)
    6ec8:	02b12223          	sw	a1,36(sp)
    6ecc:	000c8593          	mv	a1,s9
    6ed0:	000c0513          	mv	a0,s8
    6ed4:	00004097          	auipc	ra,0x4
    6ed8:	dc4080e7          	jalr	-572(ra) # ac98 <__fixdfsi>
    6edc:	02a12e23          	sw	a0,60(sp)
    6ee0:	00004097          	auipc	ra,0x4
    6ee4:	e3c080e7          	jalr	-452(ra) # ad1c <__floatsidf>
    6ee8:	00050613          	mv	a2,a0
    6eec:	00058693          	mv	a3,a1
    6ef0:	000c0513          	mv	a0,s8
    6ef4:	000c8593          	mv	a1,s9
    6ef8:	00003097          	auipc	ra,0x3
    6efc:	4c8080e7          	jalr	1224(ra) # a3c0 <__subdf3>
    6f00:	03c12783          	lw	a5,60(sp)
    6f04:	00050c13          	mv	s8,a0
    6f08:	00058c93          	mv	s9,a1
    6f0c:	00050613          	mv	a2,a0
    6f10:	00058693          	mv	a3,a1
    6f14:	02012503          	lw	a0,32(sp)
    6f18:	02412583          	lw	a1,36(sp)
    6f1c:	001a0a13          	addi	s4,s4,1
    6f20:	03078793          	addi	a5,a5,48
    6f24:	fefa0fa3          	sb	a5,-1(s4)
    6f28:	ffffd097          	auipc	ra,0xffffd
    6f2c:	2b8080e7          	jalr	696(ra) # 41e0 <__gedf2>
    6f30:	18a04063          	bgtz	a0,70b0 <_dtoa_r+0xac4>
    6f34:	00ff9797          	auipc	a5,0xff9
    6f38:	0dc78793          	addi	a5,a5,220 # 1000010 <_data+0x10>
    6f3c:	0007a503          	lw	a0,0(a5)
    6f40:	0047a583          	lw	a1,4(a5)
    6f44:	000c0613          	mv	a2,s8
    6f48:	000c8693          	mv	a3,s9
    6f4c:	00003097          	auipc	ra,0x3
    6f50:	474080e7          	jalr	1140(ra) # a3c0 <__subdf3>
    6f54:	00050613          	mv	a2,a0
    6f58:	00058693          	mv	a3,a1
    6f5c:	02012503          	lw	a0,32(sp)
    6f60:	02412583          	lw	a1,36(sp)
    6f64:	ffffd097          	auipc	ra,0xffffd
    6f68:	27c080e7          	jalr	636(ra) # 41e0 <__gedf2>
    6f6c:	28a04063          	bgtz	a0,71ec <_dtoa_r+0xc00>
    6f70:	03412783          	lw	a5,52(sp)
    6f74:	defa0ce3          	beq	s4,a5,6d6c <_dtoa_r+0x780>
    6f78:	00092603          	lw	a2,0(s2)
    6f7c:	00492683          	lw	a3,4(s2)
    6f80:	02012503          	lw	a0,32(sp)
    6f84:	02412583          	lw	a1,36(sp)
    6f88:	ffffd097          	auipc	ra,0xffffd
    6f8c:	444080e7          	jalr	1092(ra) # 43cc <__muldf3>
    6f90:	00092603          	lw	a2,0(s2)
    6f94:	00492683          	lw	a3,4(s2)
    6f98:	02a12023          	sw	a0,32(sp)
    6f9c:	02b12223          	sw	a1,36(sp)
    6fa0:	000c0513          	mv	a0,s8
    6fa4:	000c8593          	mv	a1,s9
    6fa8:	ffffd097          	auipc	ra,0xffffd
    6fac:	424080e7          	jalr	1060(ra) # 43cc <__muldf3>
    6fb0:	00050c13          	mv	s8,a0
    6fb4:	00058c93          	mv	s9,a1
    6fb8:	f15ff06f          	j	6ecc <_dtoa_r+0x8e0>
    6fbc:	000a0613          	mv	a2,s4
    6fc0:	00090693          	mv	a3,s2
    6fc4:	ffffd097          	auipc	ra,0xffffd
    6fc8:	408080e7          	jalr	1032(ra) # 43cc <__muldf3>
    6fcc:	03412a03          	lw	s4,52(sp)
    6fd0:	00012903          	lw	s2,0(sp)
    6fd4:	02a12023          	sw	a0,32(sp)
    6fd8:	02b12223          	sw	a1,36(sp)
    6fdc:	000c8593          	mv	a1,s9
    6fe0:	000c0513          	mv	a0,s8
    6fe4:	00004097          	auipc	ra,0x4
    6fe8:	cb4080e7          	jalr	-844(ra) # ac98 <__fixdfsi>
    6fec:	02a12e23          	sw	a0,60(sp)
    6ff0:	00004097          	auipc	ra,0x4
    6ff4:	d2c080e7          	jalr	-724(ra) # ad1c <__floatsidf>
    6ff8:	00050613          	mv	a2,a0
    6ffc:	00058693          	mv	a3,a1
    7000:	000c0513          	mv	a0,s8
    7004:	000c8593          	mv	a1,s9
    7008:	00003097          	auipc	ra,0x3
    700c:	3b8080e7          	jalr	952(ra) # a3c0 <__subdf3>
    7010:	03c12703          	lw	a4,60(sp)
    7014:	03412783          	lw	a5,52(sp)
    7018:	00190913          	addi	s2,s2,1
    701c:	03070713          	addi	a4,a4,48
    7020:	fee90fa3          	sb	a4,-1(s2)
    7024:	00050c13          	mv	s8,a0
    7028:	00058c93          	mv	s9,a1
    702c:	08f91a63          	bne	s2,a5,70c0 <_dtoa_r+0xad4>
    7030:	00ff9917          	auipc	s2,0xff9
    7034:	79890913          	addi	s2,s2,1944 # 10007c8 <__clz_tab+0x17c>
    7038:	00092603          	lw	a2,0(s2)
    703c:	00492683          	lw	a3,4(s2)
    7040:	02012503          	lw	a0,32(sp)
    7044:	02412583          	lw	a1,36(sp)
    7048:	00003097          	auipc	ra,0x3
    704c:	a60080e7          	jalr	-1440(ra) # 9aa8 <__adddf3>
    7050:	00050613          	mv	a2,a0
    7054:	00058693          	mv	a3,a1
    7058:	000c0513          	mv	a0,s8
    705c:	000c8593          	mv	a1,s9
    7060:	ffffd097          	auipc	ra,0xffffd
    7064:	180080e7          	jalr	384(ra) # 41e0 <__gedf2>
    7068:	18a04263          	bgtz	a0,71ec <_dtoa_r+0xc00>
    706c:	02012603          	lw	a2,32(sp)
    7070:	02412683          	lw	a3,36(sp)
    7074:	00092503          	lw	a0,0(s2)
    7078:	00492583          	lw	a1,4(s2)
    707c:	00003097          	auipc	ra,0x3
    7080:	344080e7          	jalr	836(ra) # a3c0 <__subdf3>
    7084:	00050613          	mv	a2,a0
    7088:	00058693          	mv	a3,a1
    708c:	000c0513          	mv	a0,s8
    7090:	000c8593          	mv	a1,s9
    7094:	ffffd097          	auipc	ra,0xffffd
    7098:	23c080e7          	jalr	572(ra) # 42d0 <__ledf2>
    709c:	03000793          	li	a5,48
    70a0:	cc0556e3          	bgez	a0,6d6c <_dtoa_r+0x780>
    70a4:	fffa4703          	lbu	a4,-1(s4)
    70a8:	fffa0693          	addi	a3,s4,-1
    70ac:	00f70663          	beq	a4,a5,70b8 <_dtoa_r+0xacc>
    70b0:	000d0413          	mv	s0,s10
    70b4:	1040006f          	j	71b8 <_dtoa_r+0xbcc>
    70b8:	00068a13          	mv	s4,a3
    70bc:	fe9ff06f          	j	70a4 <_dtoa_r+0xab8>
    70c0:	00ff9797          	auipc	a5,0xff9
    70c4:	f5878793          	addi	a5,a5,-168 # 1000018 <_data+0x18>
    70c8:	0007a603          	lw	a2,0(a5)
    70cc:	0047a683          	lw	a3,4(a5)
    70d0:	ffffd097          	auipc	ra,0xffffd
    70d4:	2fc080e7          	jalr	764(ra) # 43cc <__muldf3>
    70d8:	00050c13          	mv	s8,a0
    70dc:	00058c93          	mv	s9,a1
    70e0:	efdff06f          	j	6fdc <_dtoa_r+0x9f0>
    70e4:	000c0793          	mv	a5,s8
    70e8:	00078c93          	mv	s9,a5
    70ec:	00012783          	lw	a5,0(sp)
    70f0:	000a0c13          	mv	s8,s4
    70f4:	00ff9a97          	auipc	s5,0xff9
    70f8:	f24a8a93          	addi	s5,s5,-220 # 1000018 <_data+0x18>
    70fc:	00178913          	addi	s2,a5,1
    7100:	01b78db3          	add	s11,a5,s11
    7104:	000b0613          	mv	a2,s6
    7108:	000b8693          	mv	a3,s7
    710c:	000c0513          	mv	a0,s8
    7110:	000c8593          	mv	a1,s9
    7114:	ffffc097          	auipc	ra,0xffffc
    7118:	7c8080e7          	jalr	1992(ra) # 38dc <__divdf3>
    711c:	00004097          	auipc	ra,0x4
    7120:	b7c080e7          	jalr	-1156(ra) # ac98 <__fixdfsi>
    7124:	00050d13          	mv	s10,a0
    7128:	00004097          	auipc	ra,0x4
    712c:	bf4080e7          	jalr	-1036(ra) # ad1c <__floatsidf>
    7130:	000b0613          	mv	a2,s6
    7134:	000b8693          	mv	a3,s7
    7138:	ffffd097          	auipc	ra,0xffffd
    713c:	294080e7          	jalr	660(ra) # 43cc <__muldf3>
    7140:	00050613          	mv	a2,a0
    7144:	00058693          	mv	a3,a1
    7148:	000c0513          	mv	a0,s8
    714c:	000c8593          	mv	a1,s9
    7150:	00003097          	auipc	ra,0x3
    7154:	270080e7          	jalr	624(ra) # a3c0 <__subdf3>
    7158:	030d0793          	addi	a5,s10,48
    715c:	fef90fa3          	sb	a5,-1(s2)
    7160:	00050613          	mv	a2,a0
    7164:	00058693          	mv	a3,a1
    7168:	00090a13          	mv	s4,s2
    716c:	0b2d9e63          	bne	s11,s2,7228 <_dtoa_r+0xc3c>
    7170:	00003097          	auipc	ra,0x3
    7174:	938080e7          	jalr	-1736(ra) # 9aa8 <__adddf3>
    7178:	000b0613          	mv	a2,s6
    717c:	000b8693          	mv	a3,s7
    7180:	00050c13          	mv	s8,a0
    7184:	00058c93          	mv	s9,a1
    7188:	ffffd097          	auipc	ra,0xffffd
    718c:	058080e7          	jalr	88(ra) # 41e0 <__gedf2>
    7190:	04a04c63          	bgtz	a0,71e8 <_dtoa_r+0xbfc>
    7194:	000b0613          	mv	a2,s6
    7198:	000b8693          	mv	a3,s7
    719c:	000c0513          	mv	a0,s8
    71a0:	000c8593          	mv	a1,s9
    71a4:	00003097          	auipc	ra,0x3
    71a8:	190080e7          	jalr	400(ra) # a334 <__eqdf2>
    71ac:	00051663          	bnez	a0,71b8 <_dtoa_r+0xbcc>
    71b0:	001d7793          	andi	a5,s10,1
    71b4:	02079a63          	bnez	a5,71e8 <_dtoa_r+0xbfc>
    71b8:	00098593          	mv	a1,s3
    71bc:	00048513          	mv	a0,s1
    71c0:	00001097          	auipc	ra,0x1
    71c4:	15c080e7          	jalr	348(ra) # 831c <_Bfree>
    71c8:	03012783          	lw	a5,48(sp)
    71cc:	000a0023          	sb	zero,0(s4)
    71d0:	00140413          	addi	s0,s0,1
    71d4:	0087a023          	sw	s0,0(a5)
    71d8:	01412783          	lw	a5,20(sp)
    71dc:	d4078663          	beqz	a5,6728 <_dtoa_r+0x13c>
    71e0:	0147a023          	sw	s4,0(a5)
    71e4:	d44ff06f          	j	6728 <_dtoa_r+0x13c>
    71e8:	00040d13          	mv	s10,s0
    71ec:	03900713          	li	a4,57
    71f0:	fffa4683          	lbu	a3,-1(s4)
    71f4:	fffa0793          	addi	a5,s4,-1
    71f8:	00e69c63          	bne	a3,a4,7210 <_dtoa_r+0xc24>
    71fc:	00012683          	lw	a3,0(sp)
    7200:	02f69063          	bne	a3,a5,7220 <_dtoa_r+0xc34>
    7204:	03000713          	li	a4,48
    7208:	001d0d13          	addi	s10,s10,1
    720c:	00e68023          	sb	a4,0(a3)
    7210:	0007c703          	lbu	a4,0(a5)
    7214:	00170713          	addi	a4,a4,1
    7218:	00e78023          	sb	a4,0(a5)
    721c:	e95ff06f          	j	70b0 <_dtoa_r+0xac4>
    7220:	00078a13          	mv	s4,a5
    7224:	fcdff06f          	j	71f0 <_dtoa_r+0xc04>
    7228:	000aa603          	lw	a2,0(s5)
    722c:	004aa683          	lw	a3,4(s5)
    7230:	00190913          	addi	s2,s2,1
    7234:	ffffd097          	auipc	ra,0xffffd
    7238:	198080e7          	jalr	408(ra) # 43cc <__muldf3>
    723c:	00000613          	li	a2,0
    7240:	00000693          	li	a3,0
    7244:	00050c13          	mv	s8,a0
    7248:	00058c93          	mv	s9,a1
    724c:	00003097          	auipc	ra,0x3
    7250:	0e8080e7          	jalr	232(ra) # a334 <__eqdf2>
    7254:	ea0518e3          	bnez	a0,7104 <_dtoa_r+0xb18>
    7258:	f61ff06f          	j	71b8 <_dtoa_r+0xbcc>
    725c:	01012703          	lw	a4,16(sp)
    7260:	18070c63          	beqz	a4,73f8 <_dtoa_r+0xe0c>
    7264:	00412683          	lw	a3,4(sp)
    7268:	00100713          	li	a4,1
    726c:	14d74463          	blt	a4,a3,73b4 <_dtoa_r+0xdc8>
    7270:	03812703          	lw	a4,56(sp)
    7274:	43378793          	addi	a5,a5,1075
    7278:	00071863          	bnez	a4,7288 <_dtoa_r+0xc9c>
    727c:	04812703          	lw	a4,72(sp)
    7280:	03600793          	li	a5,54
    7284:	40e787b3          	sub	a5,a5,a4
    7288:	000a8d13          	mv	s10,s5
    728c:	000b0c93          	mv	s9,s6
    7290:	00100593          	li	a1,1
    7294:	00048513          	mv	a0,s1
    7298:	00fb0b33          	add	s6,s6,a5
    729c:	00fb8bb3          	add	s7,s7,a5
    72a0:	00001097          	auipc	ra,0x1
    72a4:	358080e7          	jalr	856(ra) # 85f8 <__i2b>
    72a8:	00050913          	mv	s2,a0
    72ac:	03905063          	blez	s9,72cc <_dtoa_r+0xce0>
    72b0:	01705e63          	blez	s7,72cc <_dtoa_r+0xce0>
    72b4:	000c8793          	mv	a5,s9
    72b8:	019bd463          	bge	s7,s9,72c0 <_dtoa_r+0xcd4>
    72bc:	000b8793          	mv	a5,s7
    72c0:	40fb0b33          	sub	s6,s6,a5
    72c4:	40fc8cb3          	sub	s9,s9,a5
    72c8:	40fb8bb3          	sub	s7,s7,a5
    72cc:	060a8a63          	beqz	s5,7340 <_dtoa_r+0xd54>
    72d0:	01012783          	lw	a5,16(sp)
    72d4:	12078a63          	beqz	a5,7408 <_dtoa_r+0xe1c>
    72d8:	05a05663          	blez	s10,7324 <_dtoa_r+0xd38>
    72dc:	00090593          	mv	a1,s2
    72e0:	000d0613          	mv	a2,s10
    72e4:	00048513          	mv	a0,s1
    72e8:	00001097          	auipc	ra,0x1
    72ec:	5a0080e7          	jalr	1440(ra) # 8888 <__pow5mult>
    72f0:	00098613          	mv	a2,s3
    72f4:	00050593          	mv	a1,a0
    72f8:	00050913          	mv	s2,a0
    72fc:	00048513          	mv	a0,s1
    7300:	00001097          	auipc	ra,0x1
    7304:	330080e7          	jalr	816(ra) # 8630 <__multiply>
    7308:	00a12e23          	sw	a0,28(sp)
    730c:	00098593          	mv	a1,s3
    7310:	00048513          	mv	a0,s1
    7314:	00001097          	auipc	ra,0x1
    7318:	008080e7          	jalr	8(ra) # 831c <_Bfree>
    731c:	01c12783          	lw	a5,28(sp)
    7320:	00078993          	mv	s3,a5
    7324:	41aa8633          	sub	a2,s5,s10
    7328:	00060c63          	beqz	a2,7340 <_dtoa_r+0xd54>
    732c:	00098593          	mv	a1,s3
    7330:	00048513          	mv	a0,s1
    7334:	00001097          	auipc	ra,0x1
    7338:	554080e7          	jalr	1364(ra) # 8888 <__pow5mult>
    733c:	00050993          	mv	s3,a0
    7340:	00100593          	li	a1,1
    7344:	00048513          	mv	a0,s1
    7348:	00001097          	auipc	ra,0x1
    734c:	2b0080e7          	jalr	688(ra) # 85f8 <__i2b>
    7350:	01812783          	lw	a5,24(sp)
    7354:	00050a93          	mv	s5,a0
    7358:	0af05c63          	blez	a5,7410 <_dtoa_r+0xe24>
    735c:	00078613          	mv	a2,a5
    7360:	00050593          	mv	a1,a0
    7364:	00048513          	mv	a0,s1
    7368:	00001097          	auipc	ra,0x1
    736c:	520080e7          	jalr	1312(ra) # 8888 <__pow5mult>
    7370:	00412703          	lw	a4,4(sp)
    7374:	00100793          	li	a5,1
    7378:	00050a93          	mv	s5,a0
    737c:	00000d13          	li	s10,0
    7380:	0ae7c663          	blt	a5,a4,742c <_dtoa_r+0xe40>
    7384:	00000d13          	li	s10,0
    7388:	080a1c63          	bnez	s4,7420 <_dtoa_r+0xe34>
    738c:	00cc1793          	slli	a5,s8,0xc
    7390:	000a0d13          	mv	s10,s4
    7394:	08079663          	bnez	a5,7420 <_dtoa_r+0xe34>
    7398:	7ff005b7          	lui	a1,0x7ff00
    739c:	00bc7c33          	and	s8,s8,a1
    73a0:	080c0063          	beqz	s8,7420 <_dtoa_r+0xe34>
    73a4:	001b0b13          	addi	s6,s6,1
    73a8:	001b8b93          	addi	s7,s7,1
    73ac:	00100d13          	li	s10,1
    73b0:	0700006f          	j	7420 <_dtoa_r+0xe34>
    73b4:	fffd8d13          	addi	s10,s11,-1
    73b8:	01aacc63          	blt	s5,s10,73d0 <_dtoa_r+0xde4>
    73bc:	41aa8d33          	sub	s10,s5,s10
    73c0:	020dd663          	bgez	s11,73ec <_dtoa_r+0xe00>
    73c4:	41bb0cb3          	sub	s9,s6,s11
    73c8:	00000793          	li	a5,0
    73cc:	ec5ff06f          	j	7290 <_dtoa_r+0xca4>
    73d0:	01812783          	lw	a5,24(sp)
    73d4:	415d0ab3          	sub	s5,s10,s5
    73d8:	015787b3          	add	a5,a5,s5
    73dc:	00f12c23          	sw	a5,24(sp)
    73e0:	000d0a93          	mv	s5,s10
    73e4:	00000d13          	li	s10,0
    73e8:	fd9ff06f          	j	73c0 <_dtoa_r+0xdd4>
    73ec:	000b0c93          	mv	s9,s6
    73f0:	000d8793          	mv	a5,s11
    73f4:	e9dff06f          	j	7290 <_dtoa_r+0xca4>
    73f8:	000a8d13          	mv	s10,s5
    73fc:	000b0c93          	mv	s9,s6
    7400:	00000913          	li	s2,0
    7404:	ea9ff06f          	j	72ac <_dtoa_r+0xcc0>
    7408:	000a8613          	mv	a2,s5
    740c:	f21ff06f          	j	732c <_dtoa_r+0xd40>
    7410:	00412703          	lw	a4,4(sp)
    7414:	00100793          	li	a5,1
    7418:	00000d13          	li	s10,0
    741c:	f6e7d4e3          	bge	a5,a4,7384 <_dtoa_r+0xd98>
    7420:	01812783          	lw	a5,24(sp)
    7424:	00100513          	li	a0,1
    7428:	02078463          	beqz	a5,7450 <_dtoa_r+0xe64>
    742c:	010aa783          	lw	a5,16(s5)
    7430:	00378793          	addi	a5,a5,3
    7434:	00279793          	slli	a5,a5,0x2
    7438:	00fa87b3          	add	a5,s5,a5
    743c:	0047a503          	lw	a0,4(a5)
    7440:	00001097          	auipc	ra,0x1
    7444:	098080e7          	jalr	152(ra) # 84d8 <__hi0bits>
    7448:	02000793          	li	a5,32
    744c:	40a78533          	sub	a0,a5,a0
    7450:	00ab8533          	add	a0,s7,a0
    7454:	01f57513          	andi	a0,a0,31
    7458:	0e050063          	beqz	a0,7538 <_dtoa_r+0xf4c>
    745c:	02000793          	li	a5,32
    7460:	40a787b3          	sub	a5,a5,a0
    7464:	00400713          	li	a4,4
    7468:	0cf75463          	bge	a4,a5,7530 <_dtoa_r+0xf44>
    746c:	01c00793          	li	a5,28
    7470:	40a78533          	sub	a0,a5,a0
    7474:	00ab0b33          	add	s6,s6,a0
    7478:	00ac8cb3          	add	s9,s9,a0
    747c:	00ab8bb3          	add	s7,s7,a0
    7480:	01605e63          	blez	s6,749c <_dtoa_r+0xeb0>
    7484:	00098593          	mv	a1,s3
    7488:	000b0613          	mv	a2,s6
    748c:	00048513          	mv	a0,s1
    7490:	00001097          	auipc	ra,0x1
    7494:	534080e7          	jalr	1332(ra) # 89c4 <__lshift>
    7498:	00050993          	mv	s3,a0
    749c:	01705e63          	blez	s7,74b8 <_dtoa_r+0xecc>
    74a0:	000a8593          	mv	a1,s5
    74a4:	000b8613          	mv	a2,s7
    74a8:	00048513          	mv	a0,s1
    74ac:	00001097          	auipc	ra,0x1
    74b0:	518080e7          	jalr	1304(ra) # 89c4 <__lshift>
    74b4:	00050a93          	mv	s5,a0
    74b8:	02c12783          	lw	a5,44(sp)
    74bc:	08078263          	beqz	a5,7540 <_dtoa_r+0xf54>
    74c0:	000a8593          	mv	a1,s5
    74c4:	00098513          	mv	a0,s3
    74c8:	00001097          	auipc	ra,0x1
    74cc:	640080e7          	jalr	1600(ra) # 8b08 <__mcmp>
    74d0:	06055863          	bgez	a0,7540 <_dtoa_r+0xf54>
    74d4:	00098593          	mv	a1,s3
    74d8:	00000693          	li	a3,0
    74dc:	00a00613          	li	a2,10
    74e0:	00048513          	mv	a0,s1
    74e4:	00001097          	auipc	ra,0x1
    74e8:	eac080e7          	jalr	-340(ra) # 8390 <__multadd>
    74ec:	01012783          	lw	a5,16(sp)
    74f0:	fff40413          	addi	s0,s0,-1
    74f4:	00050993          	mv	s3,a0
    74f8:	3e078863          	beqz	a5,78e8 <_dtoa_r+0x12fc>
    74fc:	00090593          	mv	a1,s2
    7500:	00000693          	li	a3,0
    7504:	00a00613          	li	a2,10
    7508:	00048513          	mv	a0,s1
    750c:	00001097          	auipc	ra,0x1
    7510:	e84080e7          	jalr	-380(ra) # 8390 <__multadd>
    7514:	00812783          	lw	a5,8(sp)
    7518:	00050913          	mv	s2,a0
    751c:	0ef04463          	bgtz	a5,7604 <_dtoa_r+0x1018>
    7520:	00412703          	lw	a4,4(sp)
    7524:	00200793          	li	a5,2
    7528:	0ce7de63          	bge	a5,a4,7604 <_dtoa_r+0x1018>
    752c:	0280006f          	j	7554 <_dtoa_r+0xf68>
    7530:	f4e788e3          	beq	a5,a4,7480 <_dtoa_r+0xe94>
    7534:	00078513          	mv	a0,a5
    7538:	01c50513          	addi	a0,a0,28
    753c:	f39ff06f          	j	7474 <_dtoa_r+0xe88>
    7540:	0bb04c63          	bgtz	s11,75f8 <_dtoa_r+0x100c>
    7544:	00412703          	lw	a4,4(sp)
    7548:	00200793          	li	a5,2
    754c:	0ae7d663          	bge	a5,a4,75f8 <_dtoa_r+0x100c>
    7550:	01b12423          	sw	s11,8(sp)
    7554:	00812783          	lw	a5,8(sp)
    7558:	02079a63          	bnez	a5,758c <_dtoa_r+0xfa0>
    755c:	000a8593          	mv	a1,s5
    7560:	00000693          	li	a3,0
    7564:	00500613          	li	a2,5
    7568:	00048513          	mv	a0,s1
    756c:	00001097          	auipc	ra,0x1
    7570:	e24080e7          	jalr	-476(ra) # 8390 <__multadd>
    7574:	00050a93          	mv	s5,a0
    7578:	00050593          	mv	a1,a0
    757c:	00098513          	mv	a0,s3
    7580:	00001097          	auipc	ra,0x1
    7584:	588080e7          	jalr	1416(ra) # 8b08 <__mcmp>
    7588:	86a040e3          	bgtz	a0,6de8 <_dtoa_r+0x7fc>
    758c:	00c12783          	lw	a5,12(sp)
    7590:	00012a03          	lw	s4,0(sp)
    7594:	fff7c413          	not	s0,a5
    7598:	00000b13          	li	s6,0
    759c:	000a8593          	mv	a1,s5
    75a0:	00048513          	mv	a0,s1
    75a4:	00001097          	auipc	ra,0x1
    75a8:	d78080e7          	jalr	-648(ra) # 831c <_Bfree>
    75ac:	c00906e3          	beqz	s2,71b8 <_dtoa_r+0xbcc>
    75b0:	000b0c63          	beqz	s6,75c8 <_dtoa_r+0xfdc>
    75b4:	012b0a63          	beq	s6,s2,75c8 <_dtoa_r+0xfdc>
    75b8:	000b0593          	mv	a1,s6
    75bc:	00048513          	mv	a0,s1
    75c0:	00001097          	auipc	ra,0x1
    75c4:	d5c080e7          	jalr	-676(ra) # 831c <_Bfree>
    75c8:	00090593          	mv	a1,s2
    75cc:	00048513          	mv	a0,s1
    75d0:	00001097          	auipc	ra,0x1
    75d4:	d4c080e7          	jalr	-692(ra) # 831c <_Bfree>
    75d8:	be1ff06f          	j	71b8 <_dtoa_r+0xbcc>
    75dc:	00000a93          	li	s5,0
    75e0:	00000913          	li	s2,0
    75e4:	fa9ff06f          	j	758c <_dtoa_r+0xfa0>
    75e8:	000d0413          	mv	s0,s10
    75ec:	00000a93          	li	s5,0
    75f0:	00000913          	li	s2,0
    75f4:	ff4ff06f          	j	6de8 <_dtoa_r+0x7fc>
    75f8:	01012783          	lw	a5,16(sp)
    75fc:	01b12423          	sw	s11,8(sp)
    7600:	2e078e63          	beqz	a5,78fc <_dtoa_r+0x1310>
    7604:	01905e63          	blez	s9,7620 <_dtoa_r+0x1034>
    7608:	00090593          	mv	a1,s2
    760c:	000c8613          	mv	a2,s9
    7610:	00048513          	mv	a0,s1
    7614:	00001097          	auipc	ra,0x1
    7618:	3b0080e7          	jalr	944(ra) # 89c4 <__lshift>
    761c:	00050913          	mv	s2,a0
    7620:	00090513          	mv	a0,s2
    7624:	040d0463          	beqz	s10,766c <_dtoa_r+0x1080>
    7628:	00492583          	lw	a1,4(s2)
    762c:	00048513          	mv	a0,s1
    7630:	00001097          	auipc	ra,0x1
    7634:	c00080e7          	jalr	-1024(ra) # 8230 <_Balloc>
    7638:	01092603          	lw	a2,16(s2)
    763c:	00050b13          	mv	s6,a0
    7640:	00c90593          	addi	a1,s2,12
    7644:	00260613          	addi	a2,a2,2
    7648:	00261613          	slli	a2,a2,0x2
    764c:	00c50513          	addi	a0,a0,12
    7650:	00001097          	auipc	ra,0x1
    7654:	b08080e7          	jalr	-1272(ra) # 8158 <memcpy>
    7658:	00100613          	li	a2,1
    765c:	000b0593          	mv	a1,s6
    7660:	00048513          	mv	a0,s1
    7664:	00001097          	auipc	ra,0x1
    7668:	360080e7          	jalr	864(ra) # 89c4 <__lshift>
    766c:	00012783          	lw	a5,0(sp)
    7670:	00812703          	lw	a4,8(sp)
    7674:	00090b13          	mv	s6,s2
    7678:	00178c13          	addi	s8,a5,1
    767c:	00e787b3          	add	a5,a5,a4
    7680:	00f12623          	sw	a5,12(sp)
    7684:	001a7793          	andi	a5,s4,1
    7688:	00050913          	mv	s2,a0
    768c:	00f12423          	sw	a5,8(sp)
    7690:	000a8593          	mv	a1,s5
    7694:	00098513          	mv	a0,s3
    7698:	fffff097          	auipc	ra,0xfffff
    769c:	d14080e7          	jalr	-748(ra) # 63ac <quorem>
    76a0:	000b0593          	mv	a1,s6
    76a4:	00050d13          	mv	s10,a0
    76a8:	03050d93          	addi	s11,a0,48
    76ac:	00098513          	mv	a0,s3
    76b0:	00001097          	auipc	ra,0x1
    76b4:	458080e7          	jalr	1112(ra) # 8b08 <__mcmp>
    76b8:	00090613          	mv	a2,s2
    76bc:	00050b93          	mv	s7,a0
    76c0:	000a8593          	mv	a1,s5
    76c4:	00048513          	mv	a0,s1
    76c8:	00001097          	auipc	ra,0x1
    76cc:	494080e7          	jalr	1172(ra) # 8b5c <__mdiff>
    76d0:	00c52603          	lw	a2,12(a0)
    76d4:	fffc0c93          	addi	s9,s8,-1
    76d8:	00050a13          	mv	s4,a0
    76dc:	00100713          	li	a4,1
    76e0:	00061c63          	bnez	a2,76f8 <_dtoa_r+0x110c>
    76e4:	00050593          	mv	a1,a0
    76e8:	00098513          	mv	a0,s3
    76ec:	00001097          	auipc	ra,0x1
    76f0:	41c080e7          	jalr	1052(ra) # 8b08 <__mcmp>
    76f4:	00050713          	mv	a4,a0
    76f8:	000a0593          	mv	a1,s4
    76fc:	00048513          	mv	a0,s1
    7700:	00e12823          	sw	a4,16(sp)
    7704:	00001097          	auipc	ra,0x1
    7708:	c18080e7          	jalr	-1000(ra) # 831c <_Bfree>
    770c:	00412783          	lw	a5,4(sp)
    7710:	01012703          	lw	a4,16(sp)
    7714:	000c0a13          	mv	s4,s8
    7718:	00e7e6b3          	or	a3,a5,a4
    771c:	00812783          	lw	a5,8(sp)
    7720:	00f6e6b3          	or	a3,a3,a5
    7724:	00069e63          	bnez	a3,7740 <_dtoa_r+0x1154>
    7728:	03900713          	li	a4,57
    772c:	06ed8663          	beq	s11,a4,7798 <_dtoa_r+0x11ac>
    7730:	01705463          	blez	s7,7738 <_dtoa_r+0x114c>
    7734:	031d0d93          	addi	s11,s10,49
    7738:	01bc8023          	sb	s11,0(s9)
    773c:	e61ff06f          	j	759c <_dtoa_r+0xfb0>
    7740:	000bcc63          	bltz	s7,7758 <_dtoa_r+0x116c>
    7744:	00412783          	lw	a5,4(sp)
    7748:	0177ebb3          	or	s7,a5,s7
    774c:	00812783          	lw	a5,8(sp)
    7750:	00fbebb3          	or	s7,s7,a5
    7754:	060b9263          	bnez	s7,77b8 <_dtoa_r+0x11cc>
    7758:	fee050e3          	blez	a4,7738 <_dtoa_r+0x114c>
    775c:	00098593          	mv	a1,s3
    7760:	00100613          	li	a2,1
    7764:	00048513          	mv	a0,s1
    7768:	00001097          	auipc	ra,0x1
    776c:	25c080e7          	jalr	604(ra) # 89c4 <__lshift>
    7770:	000a8593          	mv	a1,s5
    7774:	00050993          	mv	s3,a0
    7778:	00001097          	auipc	ra,0x1
    777c:	390080e7          	jalr	912(ra) # 8b08 <__mcmp>
    7780:	00a04863          	bgtz	a0,7790 <_dtoa_r+0x11a4>
    7784:	fa051ae3          	bnez	a0,7738 <_dtoa_r+0x114c>
    7788:	001df713          	andi	a4,s11,1
    778c:	fa0706e3          	beqz	a4,7738 <_dtoa_r+0x114c>
    7790:	03900713          	li	a4,57
    7794:	faed90e3          	bne	s11,a4,7734 <_dtoa_r+0x1148>
    7798:	03900793          	li	a5,57
    779c:	00fc8023          	sb	a5,0(s9)
    77a0:	03900693          	li	a3,57
    77a4:	fffa4783          	lbu	a5,-1(s4)
    77a8:	fffa0713          	addi	a4,s4,-1
    77ac:	0ed78a63          	beq	a5,a3,78a0 <_dtoa_r+0x12b4>
    77b0:	00178793          	addi	a5,a5,1
    77b4:	1000006f          	j	78b4 <_dtoa_r+0x12c8>
    77b8:	00e05c63          	blez	a4,77d0 <_dtoa_r+0x11e4>
    77bc:	03900713          	li	a4,57
    77c0:	fced8ce3          	beq	s11,a4,7798 <_dtoa_r+0x11ac>
    77c4:	001d8793          	addi	a5,s11,1
    77c8:	00fc8023          	sb	a5,0(s9)
    77cc:	dd1ff06f          	j	759c <_dtoa_r+0xfb0>
    77d0:	00c12783          	lw	a5,12(sp)
    77d4:	ffbc0fa3          	sb	s11,-1(s8)
    77d8:	07878e63          	beq	a5,s8,7854 <_dtoa_r+0x1268>
    77dc:	00098593          	mv	a1,s3
    77e0:	00000693          	li	a3,0
    77e4:	00a00613          	li	a2,10
    77e8:	00048513          	mv	a0,s1
    77ec:	00001097          	auipc	ra,0x1
    77f0:	ba4080e7          	jalr	-1116(ra) # 8390 <__multadd>
    77f4:	00050993          	mv	s3,a0
    77f8:	00000693          	li	a3,0
    77fc:	00a00613          	li	a2,10
    7800:	000b0593          	mv	a1,s6
    7804:	00048513          	mv	a0,s1
    7808:	012b1e63          	bne	s6,s2,7824 <_dtoa_r+0x1238>
    780c:	00001097          	auipc	ra,0x1
    7810:	b84080e7          	jalr	-1148(ra) # 8390 <__multadd>
    7814:	00050b13          	mv	s6,a0
    7818:	00050913          	mv	s2,a0
    781c:	001c0c13          	addi	s8,s8,1
    7820:	e71ff06f          	j	7690 <_dtoa_r+0x10a4>
    7824:	00001097          	auipc	ra,0x1
    7828:	b6c080e7          	jalr	-1172(ra) # 8390 <__multadd>
    782c:	00090593          	mv	a1,s2
    7830:	00050b13          	mv	s6,a0
    7834:	00000693          	li	a3,0
    7838:	00a00613          	li	a2,10
    783c:	00048513          	mv	a0,s1
    7840:	00001097          	auipc	ra,0x1
    7844:	b50080e7          	jalr	-1200(ra) # 8390 <__multadd>
    7848:	00050913          	mv	s2,a0
    784c:	fd1ff06f          	j	781c <_dtoa_r+0x1230>
    7850:	00000b13          	li	s6,0
    7854:	00098593          	mv	a1,s3
    7858:	00100613          	li	a2,1
    785c:	00048513          	mv	a0,s1
    7860:	00001097          	auipc	ra,0x1
    7864:	164080e7          	jalr	356(ra) # 89c4 <__lshift>
    7868:	000a8593          	mv	a1,s5
    786c:	00050993          	mv	s3,a0
    7870:	00001097          	auipc	ra,0x1
    7874:	298080e7          	jalr	664(ra) # 8b08 <__mcmp>
    7878:	f2a044e3          	bgtz	a0,77a0 <_dtoa_r+0x11b4>
    787c:	00051663          	bnez	a0,7888 <_dtoa_r+0x129c>
    7880:	001df793          	andi	a5,s11,1
    7884:	f0079ee3          	bnez	a5,77a0 <_dtoa_r+0x11b4>
    7888:	03000793          	li	a5,48
    788c:	fffa4703          	lbu	a4,-1(s4)
    7890:	fffa0693          	addi	a3,s4,-1
    7894:	d0f714e3          	bne	a4,a5,759c <_dtoa_r+0xfb0>
    7898:	00068a13          	mv	s4,a3
    789c:	ff1ff06f          	j	788c <_dtoa_r+0x12a0>
    78a0:	00012783          	lw	a5,0(sp)
    78a4:	00e79c63          	bne	a5,a4,78bc <_dtoa_r+0x12d0>
    78a8:	00012703          	lw	a4,0(sp)
    78ac:	00140413          	addi	s0,s0,1
    78b0:	03100793          	li	a5,49
    78b4:	00f70023          	sb	a5,0(a4)
    78b8:	ce5ff06f          	j	759c <_dtoa_r+0xfb0>
    78bc:	00070a13          	mv	s4,a4
    78c0:	ee5ff06f          	j	77a4 <_dtoa_r+0x11b8>
    78c4:	01412703          	lw	a4,20(sp)
    78c8:	00ff9797          	auipc	a5,0xff9
    78cc:	f0878793          	addi	a5,a5,-248 # 10007d0 <__clz_tab+0x184>
    78d0:	00f12023          	sw	a5,0(sp)
    78d4:	00ff9797          	auipc	a5,0xff9
    78d8:	f0478793          	addi	a5,a5,-252 # 10007d8 <__clz_tab+0x18c>
    78dc:	00070463          	beqz	a4,78e4 <_dtoa_r+0x12f8>
    78e0:	e41fe06f          	j	6720 <_dtoa_r+0x134>
    78e4:	e45fe06f          	j	6728 <_dtoa_r+0x13c>
    78e8:	00812783          	lw	a5,8(sp)
    78ec:	00f04863          	bgtz	a5,78fc <_dtoa_r+0x1310>
    78f0:	00412703          	lw	a4,4(sp)
    78f4:	00200793          	li	a5,2
    78f8:	c4e7cee3          	blt	a5,a4,7554 <_dtoa_r+0xf68>
    78fc:	00012a03          	lw	s4,0(sp)
    7900:	000a8593          	mv	a1,s5
    7904:	00098513          	mv	a0,s3
    7908:	fffff097          	auipc	ra,0xfffff
    790c:	aa4080e7          	jalr	-1372(ra) # 63ac <quorem>
    7910:	00012783          	lw	a5,0(sp)
    7914:	001a0a13          	addi	s4,s4,1
    7918:	03050d93          	addi	s11,a0,48
    791c:	40fa0733          	sub	a4,s4,a5
    7920:	00812783          	lw	a5,8(sp)
    7924:	ffba0fa3          	sb	s11,-1(s4)
    7928:	f2f754e3          	bge	a4,a5,7850 <_dtoa_r+0x1264>
    792c:	00098593          	mv	a1,s3
    7930:	00000693          	li	a3,0
    7934:	00a00613          	li	a2,10
    7938:	00048513          	mv	a0,s1
    793c:	00001097          	auipc	ra,0x1
    7940:	a54080e7          	jalr	-1452(ra) # 8390 <__multadd>
    7944:	00050993          	mv	s3,a0
    7948:	fb9ff06f          	j	7900 <_dtoa_r+0x1314>

0000794c <__sflush_r>:
    794c:	00c5d783          	lhu	a5,12(a1) # 7ff0000c <__freertos_irq_stack_top+0x7eef000c>
    7950:	fe010113          	addi	sp,sp,-32
    7954:	00812c23          	sw	s0,24(sp)
    7958:	00912a23          	sw	s1,20(sp)
    795c:	00112e23          	sw	ra,28(sp)
    7960:	01212823          	sw	s2,16(sp)
    7964:	01312623          	sw	s3,12(sp)
    7968:	0087f713          	andi	a4,a5,8
    796c:	00050493          	mv	s1,a0
    7970:	00058413          	mv	s0,a1
    7974:	14071a63          	bnez	a4,7ac8 <__sflush_r+0x17c>
    7978:	0045a703          	lw	a4,4(a1)
    797c:	02e04663          	bgtz	a4,79a8 <__sflush_r+0x5c>
    7980:	0405a703          	lw	a4,64(a1)
    7984:	02e04263          	bgtz	a4,79a8 <__sflush_r+0x5c>
    7988:	00000513          	li	a0,0
    798c:	01c12083          	lw	ra,28(sp)
    7990:	01812403          	lw	s0,24(sp)
    7994:	01412483          	lw	s1,20(sp)
    7998:	01012903          	lw	s2,16(sp)
    799c:	00c12983          	lw	s3,12(sp)
    79a0:	02010113          	addi	sp,sp,32
    79a4:	00008067          	ret
    79a8:	02c42703          	lw	a4,44(s0)
    79ac:	fc070ee3          	beqz	a4,7988 <__sflush_r+0x3c>
    79b0:	0004a903          	lw	s2,0(s1)
    79b4:	01379693          	slli	a3,a5,0x13
    79b8:	0004a023          	sw	zero,0(s1)
    79bc:	0a06de63          	bgez	a3,7a78 <__sflush_r+0x12c>
    79c0:	05442603          	lw	a2,84(s0)
    79c4:	00c45783          	lhu	a5,12(s0)
    79c8:	0047f793          	andi	a5,a5,4
    79cc:	00078e63          	beqz	a5,79e8 <__sflush_r+0x9c>
    79d0:	00442783          	lw	a5,4(s0)
    79d4:	40f60633          	sub	a2,a2,a5
    79d8:	03442783          	lw	a5,52(s0)
    79dc:	00078663          	beqz	a5,79e8 <__sflush_r+0x9c>
    79e0:	04042783          	lw	a5,64(s0)
    79e4:	40f60633          	sub	a2,a2,a5
    79e8:	02c42783          	lw	a5,44(s0)
    79ec:	02042583          	lw	a1,32(s0)
    79f0:	00000693          	li	a3,0
    79f4:	00048513          	mv	a0,s1
    79f8:	000780e7          	jalr	a5
    79fc:	fff00793          	li	a5,-1
    7a00:	00c45703          	lhu	a4,12(s0)
    7a04:	02f51263          	bne	a0,a5,7a28 <__sflush_r+0xdc>
    7a08:	0004a683          	lw	a3,0(s1)
    7a0c:	01d00793          	li	a5,29
    7a10:	0ad7e463          	bltu	a5,a3,7ab8 <__sflush_r+0x16c>
    7a14:	204007b7          	lui	a5,0x20400
    7a18:	00178793          	addi	a5,a5,1 # 20400001 <__freertos_irq_stack_top+0x1f3f0001>
    7a1c:	00d7d7b3          	srl	a5,a5,a3
    7a20:	0017f793          	andi	a5,a5,1
    7a24:	08078a63          	beqz	a5,7ab8 <__sflush_r+0x16c>
    7a28:	01042783          	lw	a5,16(s0)
    7a2c:	00042223          	sw	zero,4(s0)
    7a30:	00f42023          	sw	a5,0(s0)
    7a34:	01371793          	slli	a5,a4,0x13
    7a38:	0007dc63          	bgez	a5,7a50 <__sflush_r+0x104>
    7a3c:	fff00793          	li	a5,-1
    7a40:	00f51663          	bne	a0,a5,7a4c <__sflush_r+0x100>
    7a44:	0004a783          	lw	a5,0(s1)
    7a48:	00079463          	bnez	a5,7a50 <__sflush_r+0x104>
    7a4c:	04a42a23          	sw	a0,84(s0)
    7a50:	03442583          	lw	a1,52(s0)
    7a54:	0124a023          	sw	s2,0(s1)
    7a58:	f20588e3          	beqz	a1,7988 <__sflush_r+0x3c>
    7a5c:	04440793          	addi	a5,s0,68
    7a60:	00f58863          	beq	a1,a5,7a70 <__sflush_r+0x124>
    7a64:	00048513          	mv	a0,s1
    7a68:	00001097          	auipc	ra,0x1
    7a6c:	41c080e7          	jalr	1052(ra) # 8e84 <_free_r>
    7a70:	02042a23          	sw	zero,52(s0)
    7a74:	f15ff06f          	j	7988 <__sflush_r+0x3c>
    7a78:	02042583          	lw	a1,32(s0)
    7a7c:	00000613          	li	a2,0
    7a80:	00100693          	li	a3,1
    7a84:	00048513          	mv	a0,s1
    7a88:	000700e7          	jalr	a4
    7a8c:	fff00793          	li	a5,-1
    7a90:	00050613          	mv	a2,a0
    7a94:	f2f518e3          	bne	a0,a5,79c4 <__sflush_r+0x78>
    7a98:	0004a783          	lw	a5,0(s1)
    7a9c:	f20784e3          	beqz	a5,79c4 <__sflush_r+0x78>
    7aa0:	01d00713          	li	a4,29
    7aa4:	00e78663          	beq	a5,a4,7ab0 <__sflush_r+0x164>
    7aa8:	01600713          	li	a4,22
    7aac:	06e79263          	bne	a5,a4,7b10 <__sflush_r+0x1c4>
    7ab0:	0124a023          	sw	s2,0(s1)
    7ab4:	ed5ff06f          	j	7988 <__sflush_r+0x3c>
    7ab8:	04076713          	ori	a4,a4,64
    7abc:	00e41623          	sh	a4,12(s0)
    7ac0:	fff00513          	li	a0,-1
    7ac4:	ec9ff06f          	j	798c <__sflush_r+0x40>
    7ac8:	0105a983          	lw	s3,16(a1)
    7acc:	ea098ee3          	beqz	s3,7988 <__sflush_r+0x3c>
    7ad0:	0005a903          	lw	s2,0(a1)
    7ad4:	0037f793          	andi	a5,a5,3
    7ad8:	0135a023          	sw	s3,0(a1)
    7adc:	41390933          	sub	s2,s2,s3
    7ae0:	00000713          	li	a4,0
    7ae4:	00079463          	bnez	a5,7aec <__sflush_r+0x1a0>
    7ae8:	0145a703          	lw	a4,20(a1)
    7aec:	00e42423          	sw	a4,8(s0)
    7af0:	e9205ce3          	blez	s2,7988 <__sflush_r+0x3c>
    7af4:	02842783          	lw	a5,40(s0)
    7af8:	02042583          	lw	a1,32(s0)
    7afc:	00090693          	mv	a3,s2
    7b00:	00098613          	mv	a2,s3
    7b04:	00048513          	mv	a0,s1
    7b08:	000780e7          	jalr	a5
    7b0c:	00a04a63          	bgtz	a0,7b20 <__sflush_r+0x1d4>
    7b10:	00c45783          	lhu	a5,12(s0)
    7b14:	0407e793          	ori	a5,a5,64
    7b18:	00f41623          	sh	a5,12(s0)
    7b1c:	fa5ff06f          	j	7ac0 <__sflush_r+0x174>
    7b20:	00a989b3          	add	s3,s3,a0
    7b24:	40a90933          	sub	s2,s2,a0
    7b28:	fc9ff06f          	j	7af0 <__sflush_r+0x1a4>

00007b2c <_fflush_r>:
    7b2c:	0105a783          	lw	a5,16(a1)
    7b30:	08078e63          	beqz	a5,7bcc <_fflush_r+0xa0>
    7b34:	fe010113          	addi	sp,sp,-32
    7b38:	00812c23          	sw	s0,24(sp)
    7b3c:	00112e23          	sw	ra,28(sp)
    7b40:	00050413          	mv	s0,a0
    7b44:	00050e63          	beqz	a0,7b60 <_fflush_r+0x34>
    7b48:	01852783          	lw	a5,24(a0)
    7b4c:	00079a63          	bnez	a5,7b60 <_fflush_r+0x34>
    7b50:	00b12623          	sw	a1,12(sp)
    7b54:	00000097          	auipc	ra,0x0
    7b58:	19c080e7          	jalr	412(ra) # 7cf0 <__sinit>
    7b5c:	00c12583          	lw	a1,12(sp)
    7b60:	00ff9797          	auipc	a5,0xff9
    7b64:	ca078793          	addi	a5,a5,-864 # 1000800 <__sf_fake_stdin>
    7b68:	02f59463          	bne	a1,a5,7b90 <_fflush_r+0x64>
    7b6c:	00442583          	lw	a1,4(s0)
    7b70:	00c59783          	lh	a5,12(a1)
    7b74:	04078263          	beqz	a5,7bb8 <_fflush_r+0x8c>
    7b78:	00040513          	mv	a0,s0
    7b7c:	01812403          	lw	s0,24(sp)
    7b80:	01c12083          	lw	ra,28(sp)
    7b84:	02010113          	addi	sp,sp,32
    7b88:	00000317          	auipc	t1,0x0
    7b8c:	dc430067          	jr	-572(t1) # 794c <__sflush_r>
    7b90:	00ff9797          	auipc	a5,0xff9
    7b94:	c9078793          	addi	a5,a5,-880 # 1000820 <__sf_fake_stdout>
    7b98:	00f59663          	bne	a1,a5,7ba4 <_fflush_r+0x78>
    7b9c:	00842583          	lw	a1,8(s0)
    7ba0:	fd1ff06f          	j	7b70 <_fflush_r+0x44>
    7ba4:	00ff9797          	auipc	a5,0xff9
    7ba8:	c3c78793          	addi	a5,a5,-964 # 10007e0 <__sf_fake_stderr>
    7bac:	fcf592e3          	bne	a1,a5,7b70 <_fflush_r+0x44>
    7bb0:	00c42583          	lw	a1,12(s0)
    7bb4:	fbdff06f          	j	7b70 <_fflush_r+0x44>
    7bb8:	01c12083          	lw	ra,28(sp)
    7bbc:	01812403          	lw	s0,24(sp)
    7bc0:	00000513          	li	a0,0
    7bc4:	02010113          	addi	sp,sp,32
    7bc8:	00008067          	ret
    7bcc:	00000513          	li	a0,0
    7bd0:	00008067          	ret

00007bd4 <std>:
    7bd4:	ff010113          	addi	sp,sp,-16
    7bd8:	00812423          	sw	s0,8(sp)
    7bdc:	00112623          	sw	ra,12(sp)
    7be0:	00050413          	mv	s0,a0
    7be4:	00b51623          	sh	a1,12(a0)
    7be8:	00c51723          	sh	a2,14(a0)
    7bec:	00052023          	sw	zero,0(a0)
    7bf0:	00052223          	sw	zero,4(a0)
    7bf4:	00052423          	sw	zero,8(a0)
    7bf8:	06052223          	sw	zero,100(a0)
    7bfc:	00052823          	sw	zero,16(a0)
    7c00:	00052a23          	sw	zero,20(a0)
    7c04:	00052c23          	sw	zero,24(a0)
    7c08:	00800613          	li	a2,8
    7c0c:	00000593          	li	a1,0
    7c10:	05c50513          	addi	a0,a0,92
    7c14:	ffffd097          	auipc	ra,0xffffd
    7c18:	1b4080e7          	jalr	436(ra) # 4dc8 <memset>
    7c1c:	00002797          	auipc	a5,0x2
    7c20:	ab478793          	addi	a5,a5,-1356 # 96d0 <__sread>
    7c24:	02f42223          	sw	a5,36(s0)
    7c28:	00002797          	auipc	a5,0x2
    7c2c:	afc78793          	addi	a5,a5,-1284 # 9724 <__swrite>
    7c30:	02f42423          	sw	a5,40(s0)
    7c34:	00002797          	auipc	a5,0x2
    7c38:	b7c78793          	addi	a5,a5,-1156 # 97b0 <__sseek>
    7c3c:	02f42623          	sw	a5,44(s0)
    7c40:	00002797          	auipc	a5,0x2
    7c44:	bcc78793          	addi	a5,a5,-1076 # 980c <__sclose>
    7c48:	02842023          	sw	s0,32(s0)
    7c4c:	02f42823          	sw	a5,48(s0)
    7c50:	00c12083          	lw	ra,12(sp)
    7c54:	00812403          	lw	s0,8(sp)
    7c58:	01010113          	addi	sp,sp,16
    7c5c:	00008067          	ret

00007c60 <_cleanup_r>:
    7c60:	00000597          	auipc	a1,0x0
    7c64:	ecc58593          	addi	a1,a1,-308 # 7b2c <_fflush_r>
    7c68:	00000317          	auipc	t1,0x0
    7c6c:	25030067          	jr	592(t1) # 7eb8 <_fwalk_reent>

00007c70 <__sfmoreglue>:
    7c70:	ff010113          	addi	sp,sp,-16
    7c74:	fff58613          	addi	a2,a1,-1
    7c78:	00812423          	sw	s0,8(sp)
    7c7c:	00161413          	slli	s0,a2,0x1
    7c80:	00c40433          	add	s0,s0,a2
    7c84:	00241413          	slli	s0,s0,0x2
    7c88:	00c40433          	add	s0,s0,a2
    7c8c:	00341413          	slli	s0,s0,0x3
    7c90:	01212023          	sw	s2,0(sp)
    7c94:	00058913          	mv	s2,a1
    7c98:	07440593          	addi	a1,s0,116
    7c9c:	00912223          	sw	s1,4(sp)
    7ca0:	00112623          	sw	ra,12(sp)
    7ca4:	00001097          	auipc	ra,0x1
    7ca8:	2f4080e7          	jalr	756(ra) # 8f98 <_malloc_r>
    7cac:	00050493          	mv	s1,a0
    7cb0:	02050263          	beqz	a0,7cd4 <__sfmoreglue+0x64>
    7cb4:	00052023          	sw	zero,0(a0)
    7cb8:	01252223          	sw	s2,4(a0)
    7cbc:	00c50513          	addi	a0,a0,12
    7cc0:	00a4a423          	sw	a0,8(s1)
    7cc4:	06840613          	addi	a2,s0,104
    7cc8:	00000593          	li	a1,0
    7ccc:	ffffd097          	auipc	ra,0xffffd
    7cd0:	0fc080e7          	jalr	252(ra) # 4dc8 <memset>
    7cd4:	00c12083          	lw	ra,12(sp)
    7cd8:	00812403          	lw	s0,8(sp)
    7cdc:	00048513          	mv	a0,s1
    7ce0:	00012903          	lw	s2,0(sp)
    7ce4:	00412483          	lw	s1,4(sp)
    7ce8:	01010113          	addi	sp,sp,16
    7cec:	00008067          	ret

00007cf0 <__sinit>:
    7cf0:	01852783          	lw	a5,24(a0)
    7cf4:	0c079263          	bnez	a5,7db8 <__sinit+0xc8>
    7cf8:	ff010113          	addi	sp,sp,-16
    7cfc:	00112623          	sw	ra,12(sp)
    7d00:	00812423          	sw	s0,8(sp)
    7d04:	00000797          	auipc	a5,0x0
    7d08:	f5c78793          	addi	a5,a5,-164 # 7c60 <_cleanup_r>
    7d0c:	02f52423          	sw	a5,40(a0)
    7d10:	00003797          	auipc	a5,0x3
    7d14:	46478793          	addi	a5,a5,1124 # b174 <_global_impure_ptr>
    7d18:	0007a783          	lw	a5,0(a5)
    7d1c:	04052423          	sw	zero,72(a0)
    7d20:	04052623          	sw	zero,76(a0)
    7d24:	04052823          	sw	zero,80(a0)
    7d28:	00f51663          	bne	a0,a5,7d34 <__sinit+0x44>
    7d2c:	00100793          	li	a5,1
    7d30:	00f52c23          	sw	a5,24(a0)
    7d34:	00050413          	mv	s0,a0
    7d38:	00000097          	auipc	ra,0x0
    7d3c:	084080e7          	jalr	132(ra) # 7dbc <__sfp>
    7d40:	00a42223          	sw	a0,4(s0)
    7d44:	00040513          	mv	a0,s0
    7d48:	00000097          	auipc	ra,0x0
    7d4c:	074080e7          	jalr	116(ra) # 7dbc <__sfp>
    7d50:	00a42423          	sw	a0,8(s0)
    7d54:	00040513          	mv	a0,s0
    7d58:	00000097          	auipc	ra,0x0
    7d5c:	064080e7          	jalr	100(ra) # 7dbc <__sfp>
    7d60:	00a42623          	sw	a0,12(s0)
    7d64:	00442503          	lw	a0,4(s0)
    7d68:	00000613          	li	a2,0
    7d6c:	00400593          	li	a1,4
    7d70:	00000097          	auipc	ra,0x0
    7d74:	e64080e7          	jalr	-412(ra) # 7bd4 <std>
    7d78:	00842503          	lw	a0,8(s0)
    7d7c:	00100613          	li	a2,1
    7d80:	00900593          	li	a1,9
    7d84:	00000097          	auipc	ra,0x0
    7d88:	e50080e7          	jalr	-432(ra) # 7bd4 <std>
    7d8c:	00c42503          	lw	a0,12(s0)
    7d90:	00200613          	li	a2,2
    7d94:	01200593          	li	a1,18
    7d98:	00000097          	auipc	ra,0x0
    7d9c:	e3c080e7          	jalr	-452(ra) # 7bd4 <std>
    7da0:	00100793          	li	a5,1
    7da4:	00f42c23          	sw	a5,24(s0)
    7da8:	00c12083          	lw	ra,12(sp)
    7dac:	00812403          	lw	s0,8(sp)
    7db0:	01010113          	addi	sp,sp,16
    7db4:	00008067          	ret
    7db8:	00008067          	ret

00007dbc <__sfp>:
    7dbc:	ff010113          	addi	sp,sp,-16
    7dc0:	00003797          	auipc	a5,0x3
    7dc4:	3b478793          	addi	a5,a5,948 # b174 <_global_impure_ptr>
    7dc8:	00912223          	sw	s1,4(sp)
    7dcc:	0007a483          	lw	s1,0(a5)
    7dd0:	01212023          	sw	s2,0(sp)
    7dd4:	00112623          	sw	ra,12(sp)
    7dd8:	0184a783          	lw	a5,24(s1)
    7ddc:	00812423          	sw	s0,8(sp)
    7de0:	00050913          	mv	s2,a0
    7de4:	00079863          	bnez	a5,7df4 <__sfp+0x38>
    7de8:	00048513          	mv	a0,s1
    7dec:	00000097          	auipc	ra,0x0
    7df0:	f04080e7          	jalr	-252(ra) # 7cf0 <__sinit>
    7df4:	04848493          	addi	s1,s1,72
    7df8:	0084a403          	lw	s0,8(s1)
    7dfc:	0044a783          	lw	a5,4(s1)
    7e00:	fff78793          	addi	a5,a5,-1
    7e04:	0007da63          	bgez	a5,7e18 <__sfp+0x5c>
    7e08:	0004a783          	lw	a5,0(s1)
    7e0c:	08078263          	beqz	a5,7e90 <__sfp+0xd4>
    7e10:	0004a483          	lw	s1,0(s1)
    7e14:	fe5ff06f          	j	7df8 <__sfp+0x3c>
    7e18:	00c41703          	lh	a4,12(s0)
    7e1c:	06071663          	bnez	a4,7e88 <__sfp+0xcc>
    7e20:	ffff07b7          	lui	a5,0xffff0
    7e24:	00178793          	addi	a5,a5,1 # ffff0001 <__freertos_irq_stack_top+0xfefe0001>
    7e28:	06042223          	sw	zero,100(s0)
    7e2c:	00042023          	sw	zero,0(s0)
    7e30:	00042223          	sw	zero,4(s0)
    7e34:	00042423          	sw	zero,8(s0)
    7e38:	00f42623          	sw	a5,12(s0)
    7e3c:	00042823          	sw	zero,16(s0)
    7e40:	00042a23          	sw	zero,20(s0)
    7e44:	00042c23          	sw	zero,24(s0)
    7e48:	00800613          	li	a2,8
    7e4c:	00000593          	li	a1,0
    7e50:	05c40513          	addi	a0,s0,92
    7e54:	ffffd097          	auipc	ra,0xffffd
    7e58:	f74080e7          	jalr	-140(ra) # 4dc8 <memset>
    7e5c:	02042a23          	sw	zero,52(s0)
    7e60:	02042c23          	sw	zero,56(s0)
    7e64:	04042423          	sw	zero,72(s0)
    7e68:	04042623          	sw	zero,76(s0)
    7e6c:	00040513          	mv	a0,s0
    7e70:	00c12083          	lw	ra,12(sp)
    7e74:	00812403          	lw	s0,8(sp)
    7e78:	00412483          	lw	s1,4(sp)
    7e7c:	00012903          	lw	s2,0(sp)
    7e80:	01010113          	addi	sp,sp,16
    7e84:	00008067          	ret
    7e88:	06840413          	addi	s0,s0,104
    7e8c:	f75ff06f          	j	7e00 <__sfp+0x44>
    7e90:	00400593          	li	a1,4
    7e94:	00090513          	mv	a0,s2
    7e98:	00000097          	auipc	ra,0x0
    7e9c:	dd8080e7          	jalr	-552(ra) # 7c70 <__sfmoreglue>
    7ea0:	00a4a023          	sw	a0,0(s1)
    7ea4:	f60516e3          	bnez	a0,7e10 <__sfp+0x54>
    7ea8:	00c00793          	li	a5,12
    7eac:	00f92023          	sw	a5,0(s2)
    7eb0:	00000413          	li	s0,0
    7eb4:	fb9ff06f          	j	7e6c <__sfp+0xb0>

00007eb8 <_fwalk_reent>:
    7eb8:	fd010113          	addi	sp,sp,-48
    7ebc:	02812423          	sw	s0,40(sp)
    7ec0:	03212023          	sw	s2,32(sp)
    7ec4:	01412c23          	sw	s4,24(sp)
    7ec8:	01512a23          	sw	s5,20(sp)
    7ecc:	01612823          	sw	s6,16(sp)
    7ed0:	01712623          	sw	s7,12(sp)
    7ed4:	02112623          	sw	ra,44(sp)
    7ed8:	02912223          	sw	s1,36(sp)
    7edc:	01312e23          	sw	s3,28(sp)
    7ee0:	00050a13          	mv	s4,a0
    7ee4:	00058a93          	mv	s5,a1
    7ee8:	04850413          	addi	s0,a0,72
    7eec:	00000913          	li	s2,0
    7ef0:	00100b13          	li	s6,1
    7ef4:	fff00b93          	li	s7,-1
    7ef8:	02041a63          	bnez	s0,7f2c <_fwalk_reent+0x74>
    7efc:	02c12083          	lw	ra,44(sp)
    7f00:	02812403          	lw	s0,40(sp)
    7f04:	00090513          	mv	a0,s2
    7f08:	02412483          	lw	s1,36(sp)
    7f0c:	02012903          	lw	s2,32(sp)
    7f10:	01c12983          	lw	s3,28(sp)
    7f14:	01812a03          	lw	s4,24(sp)
    7f18:	01412a83          	lw	s5,20(sp)
    7f1c:	01012b03          	lw	s6,16(sp)
    7f20:	00c12b83          	lw	s7,12(sp)
    7f24:	03010113          	addi	sp,sp,48
    7f28:	00008067          	ret
    7f2c:	00842483          	lw	s1,8(s0)
    7f30:	00442983          	lw	s3,4(s0)
    7f34:	fff98993          	addi	s3,s3,-1
    7f38:	0009d663          	bgez	s3,7f44 <_fwalk_reent+0x8c>
    7f3c:	00042403          	lw	s0,0(s0)
    7f40:	fb9ff06f          	j	7ef8 <_fwalk_reent+0x40>
    7f44:	00c4d783          	lhu	a5,12(s1)
    7f48:	00fb7e63          	bgeu	s6,a5,7f64 <_fwalk_reent+0xac>
    7f4c:	00e49783          	lh	a5,14(s1)
    7f50:	01778a63          	beq	a5,s7,7f64 <_fwalk_reent+0xac>
    7f54:	00048593          	mv	a1,s1
    7f58:	000a0513          	mv	a0,s4
    7f5c:	000a80e7          	jalr	s5
    7f60:	00a96933          	or	s2,s2,a0
    7f64:	06848493          	addi	s1,s1,104
    7f68:	fcdff06f          	j	7f34 <_fwalk_reent+0x7c>

00007f6c <_localeconv_r>:
    7f6c:	00ff9797          	auipc	a5,0xff9
    7f70:	cd078793          	addi	a5,a5,-816 # 1000c3c <_impure_ptr>
    7f74:	0007a783          	lw	a5,0(a5)
    7f78:	0207a503          	lw	a0,32(a5)
    7f7c:	00051663          	bnez	a0,7f88 <_localeconv_r+0x1c>
    7f80:	00ff9517          	auipc	a0,0xff9
    7f84:	b4050513          	addi	a0,a0,-1216 # 1000ac0 <__global_locale>
    7f88:	0f050513          	addi	a0,a0,240
    7f8c:	00008067          	ret

00007f90 <__swhatbuf_r>:
    7f90:	f8010113          	addi	sp,sp,-128
    7f94:	06912a23          	sw	s1,116(sp)
    7f98:	00058493          	mv	s1,a1
    7f9c:	00e59583          	lh	a1,14(a1)
    7fa0:	06812c23          	sw	s0,120(sp)
    7fa4:	06112e23          	sw	ra,124(sp)
    7fa8:	00060413          	mv	s0,a2
    7fac:	0005de63          	bgez	a1,7fc8 <__swhatbuf_r+0x38>
    7fb0:	00c4d783          	lhu	a5,12(s1)
    7fb4:	0006a023          	sw	zero,0(a3)
    7fb8:	0807f793          	andi	a5,a5,128
    7fbc:	04079263          	bnez	a5,8000 <__swhatbuf_r+0x70>
    7fc0:	40000793          	li	a5,1024
    7fc4:	0400006f          	j	8004 <__swhatbuf_r+0x74>
    7fc8:	01810613          	addi	a2,sp,24
    7fcc:	00d12623          	sw	a3,12(sp)
    7fd0:	00002097          	auipc	ra,0x2
    7fd4:	8f0080e7          	jalr	-1808(ra) # 98c0 <_fstat_r>
    7fd8:	00c12683          	lw	a3,12(sp)
    7fdc:	fc054ae3          	bltz	a0,7fb0 <__swhatbuf_r+0x20>
    7fe0:	01c12703          	lw	a4,28(sp)
    7fe4:	0000f7b7          	lui	a5,0xf
    7fe8:	00e7f7b3          	and	a5,a5,a4
    7fec:	ffffe737          	lui	a4,0xffffe
    7ff0:	00e787b3          	add	a5,a5,a4
    7ff4:	0017b793          	seqz	a5,a5
    7ff8:	00f6a023          	sw	a5,0(a3)
    7ffc:	fc5ff06f          	j	7fc0 <__swhatbuf_r+0x30>
    8000:	04000793          	li	a5,64
    8004:	00f42023          	sw	a5,0(s0)
    8008:	07c12083          	lw	ra,124(sp)
    800c:	07812403          	lw	s0,120(sp)
    8010:	07412483          	lw	s1,116(sp)
    8014:	00000513          	li	a0,0
    8018:	08010113          	addi	sp,sp,128
    801c:	00008067          	ret

00008020 <__smakebuf_r>:
    8020:	00c5d783          	lhu	a5,12(a1)
    8024:	fe010113          	addi	sp,sp,-32
    8028:	00812c23          	sw	s0,24(sp)
    802c:	00112e23          	sw	ra,28(sp)
    8030:	00912a23          	sw	s1,20(sp)
    8034:	01212823          	sw	s2,16(sp)
    8038:	0027f793          	andi	a5,a5,2
    803c:	00058413          	mv	s0,a1
    8040:	02078863          	beqz	a5,8070 <__smakebuf_r+0x50>
    8044:	04740793          	addi	a5,s0,71
    8048:	00f42023          	sw	a5,0(s0)
    804c:	00f42823          	sw	a5,16(s0)
    8050:	00100793          	li	a5,1
    8054:	00f42a23          	sw	a5,20(s0)
    8058:	01c12083          	lw	ra,28(sp)
    805c:	01812403          	lw	s0,24(sp)
    8060:	01412483          	lw	s1,20(sp)
    8064:	01012903          	lw	s2,16(sp)
    8068:	02010113          	addi	sp,sp,32
    806c:	00008067          	ret
    8070:	00c10693          	addi	a3,sp,12
    8074:	00810613          	addi	a2,sp,8
    8078:	00050493          	mv	s1,a0
    807c:	00000097          	auipc	ra,0x0
    8080:	f14080e7          	jalr	-236(ra) # 7f90 <__swhatbuf_r>
    8084:	00812583          	lw	a1,8(sp)
    8088:	00050913          	mv	s2,a0
    808c:	00048513          	mv	a0,s1
    8090:	00001097          	auipc	ra,0x1
    8094:	f08080e7          	jalr	-248(ra) # 8f98 <_malloc_r>
    8098:	02051063          	bnez	a0,80b8 <__smakebuf_r+0x98>
    809c:	00c41783          	lh	a5,12(s0)
    80a0:	2007f713          	andi	a4,a5,512
    80a4:	fa071ae3          	bnez	a4,8058 <__smakebuf_r+0x38>
    80a8:	ffc7f793          	andi	a5,a5,-4
    80ac:	0027e793          	ori	a5,a5,2
    80b0:	00f41623          	sh	a5,12(s0)
    80b4:	f91ff06f          	j	8044 <__smakebuf_r+0x24>
    80b8:	00000797          	auipc	a5,0x0
    80bc:	ba878793          	addi	a5,a5,-1112 # 7c60 <_cleanup_r>
    80c0:	02f4a423          	sw	a5,40(s1)
    80c4:	00c45783          	lhu	a5,12(s0)
    80c8:	00a42023          	sw	a0,0(s0)
    80cc:	00a42823          	sw	a0,16(s0)
    80d0:	0807e793          	ori	a5,a5,128
    80d4:	00f41623          	sh	a5,12(s0)
    80d8:	00812783          	lw	a5,8(sp)
    80dc:	00f42a23          	sw	a5,20(s0)
    80e0:	00c12783          	lw	a5,12(sp)
    80e4:	02078463          	beqz	a5,810c <__smakebuf_r+0xec>
    80e8:	00e41583          	lh	a1,14(s0)
    80ec:	00048513          	mv	a0,s1
    80f0:	00002097          	auipc	ra,0x2
    80f4:	824080e7          	jalr	-2012(ra) # 9914 <_isatty_r>
    80f8:	00050a63          	beqz	a0,810c <__smakebuf_r+0xec>
    80fc:	00c45783          	lhu	a5,12(s0)
    8100:	ffc7f793          	andi	a5,a5,-4
    8104:	0017e793          	ori	a5,a5,1
    8108:	00f41623          	sh	a5,12(s0)
    810c:	00c45783          	lhu	a5,12(s0)
    8110:	00f96933          	or	s2,s2,a5
    8114:	01241623          	sh	s2,12(s0)
    8118:	f41ff06f          	j	8058 <__smakebuf_r+0x38>

0000811c <malloc>:
    811c:	00ff9797          	auipc	a5,0xff9
    8120:	b2078793          	addi	a5,a5,-1248 # 1000c3c <_impure_ptr>
    8124:	00050593          	mv	a1,a0
    8128:	0007a503          	lw	a0,0(a5)
    812c:	00001317          	auipc	t1,0x1
    8130:	e6c30067          	jr	-404(t1) # 8f98 <_malloc_r>

00008134 <memchr>:
    8134:	0ff5f593          	andi	a1,a1,255
    8138:	00c50633          	add	a2,a0,a2
    813c:	00c51663          	bne	a0,a2,8148 <memchr+0x14>
    8140:	00000513          	li	a0,0
    8144:	00008067          	ret
    8148:	00054783          	lbu	a5,0(a0)
    814c:	feb78ce3          	beq	a5,a1,8144 <memchr+0x10>
    8150:	00150513          	addi	a0,a0,1
    8154:	fe9ff06f          	j	813c <memchr+0x8>

00008158 <memcpy>:
    8158:	00a5c7b3          	xor	a5,a1,a0
    815c:	0037f793          	andi	a5,a5,3
    8160:	00c50733          	add	a4,a0,a2
    8164:	00079663          	bnez	a5,8170 <memcpy+0x18>
    8168:	00300793          	li	a5,3
    816c:	02c7e263          	bltu	a5,a2,8190 <memcpy+0x38>
    8170:	00050793          	mv	a5,a0
    8174:	0ae57c63          	bgeu	a0,a4,822c <memcpy+0xd4>
    8178:	0005c683          	lbu	a3,0(a1)
    817c:	00178793          	addi	a5,a5,1
    8180:	00158593          	addi	a1,a1,1
    8184:	fed78fa3          	sb	a3,-1(a5)
    8188:	fee7e8e3          	bltu	a5,a4,8178 <memcpy+0x20>
    818c:	00008067          	ret
    8190:	00357693          	andi	a3,a0,3
    8194:	00050793          	mv	a5,a0
    8198:	00068e63          	beqz	a3,81b4 <memcpy+0x5c>
    819c:	0005c683          	lbu	a3,0(a1)
    81a0:	00178793          	addi	a5,a5,1
    81a4:	00158593          	addi	a1,a1,1
    81a8:	fed78fa3          	sb	a3,-1(a5)
    81ac:	0037f693          	andi	a3,a5,3
    81b0:	fe9ff06f          	j	8198 <memcpy+0x40>
    81b4:	ffc77693          	andi	a3,a4,-4
    81b8:	fe068613          	addi	a2,a3,-32
    81bc:	06c7f463          	bgeu	a5,a2,8224 <memcpy+0xcc>
    81c0:	0005a383          	lw	t2,0(a1)
    81c4:	0045a283          	lw	t0,4(a1)
    81c8:	0085af83          	lw	t6,8(a1)
    81cc:	00c5af03          	lw	t5,12(a1)
    81d0:	0105ae83          	lw	t4,16(a1)
    81d4:	0145ae03          	lw	t3,20(a1)
    81d8:	0185a303          	lw	t1,24(a1)
    81dc:	01c5a883          	lw	a7,28(a1)
    81e0:	02458593          	addi	a1,a1,36
    81e4:	0077a023          	sw	t2,0(a5)
    81e8:	ffc5a803          	lw	a6,-4(a1)
    81ec:	0057a223          	sw	t0,4(a5)
    81f0:	01f7a423          	sw	t6,8(a5)
    81f4:	01e7a623          	sw	t5,12(a5)
    81f8:	01d7a823          	sw	t4,16(a5)
    81fc:	01c7aa23          	sw	t3,20(a5)
    8200:	0067ac23          	sw	t1,24(a5)
    8204:	0117ae23          	sw	a7,28(a5)
    8208:	02478793          	addi	a5,a5,36
    820c:	ff07ae23          	sw	a6,-4(a5)
    8210:	fadff06f          	j	81bc <memcpy+0x64>
    8214:	0005a603          	lw	a2,0(a1)
    8218:	00478793          	addi	a5,a5,4
    821c:	00458593          	addi	a1,a1,4
    8220:	fec7ae23          	sw	a2,-4(a5)
    8224:	fed7e8e3          	bltu	a5,a3,8214 <memcpy+0xbc>
    8228:	f4e7e8e3          	bltu	a5,a4,8178 <memcpy+0x20>
    822c:	00008067          	ret

00008230 <_Balloc>:
    8230:	02452783          	lw	a5,36(a0)
    8234:	ff010113          	addi	sp,sp,-16
    8238:	00812423          	sw	s0,8(sp)
    823c:	01212023          	sw	s2,0(sp)
    8240:	00112623          	sw	ra,12(sp)
    8244:	00912223          	sw	s1,4(sp)
    8248:	00050413          	mv	s0,a0
    824c:	00058913          	mv	s2,a1
    8250:	02079263          	bnez	a5,8274 <_Balloc+0x44>
    8254:	01000513          	li	a0,16
    8258:	00000097          	auipc	ra,0x0
    825c:	ec4080e7          	jalr	-316(ra) # 811c <malloc>
    8260:	02a42223          	sw	a0,36(s0)
    8264:	00052223          	sw	zero,4(a0)
    8268:	00052423          	sw	zero,8(a0)
    826c:	00052023          	sw	zero,0(a0)
    8270:	00052623          	sw	zero,12(a0)
    8274:	02442483          	lw	s1,36(s0)
    8278:	00c4a783          	lw	a5,12(s1)
    827c:	04078663          	beqz	a5,82c8 <_Balloc+0x98>
    8280:	02442703          	lw	a4,36(s0)
    8284:	00291793          	slli	a5,s2,0x2
    8288:	00c72703          	lw	a4,12(a4) # ffffe00c <__freertos_irq_stack_top+0xfefee00c>
    828c:	00f707b3          	add	a5,a4,a5
    8290:	0007a503          	lw	a0,0(a5)
    8294:	06051a63          	bnez	a0,8308 <_Balloc+0xd8>
    8298:	00100493          	li	s1,1
    829c:	012494b3          	sll	s1,s1,s2
    82a0:	00548613          	addi	a2,s1,5
    82a4:	00261613          	slli	a2,a2,0x2
    82a8:	00100593          	li	a1,1
    82ac:	00040513          	mv	a0,s0
    82b0:	00001097          	auipc	ra,0x1
    82b4:	b74080e7          	jalr	-1164(ra) # 8e24 <_calloc_r>
    82b8:	02050a63          	beqz	a0,82ec <_Balloc+0xbc>
    82bc:	01252223          	sw	s2,4(a0)
    82c0:	00952423          	sw	s1,8(a0)
    82c4:	04c0006f          	j	8310 <_Balloc+0xe0>
    82c8:	02100613          	li	a2,33
    82cc:	00400593          	li	a1,4
    82d0:	00040513          	mv	a0,s0
    82d4:	00001097          	auipc	ra,0x1
    82d8:	b50080e7          	jalr	-1200(ra) # 8e24 <_calloc_r>
    82dc:	02442783          	lw	a5,36(s0)
    82e0:	00a4a623          	sw	a0,12(s1)
    82e4:	00c7a783          	lw	a5,12(a5)
    82e8:	f8079ce3          	bnez	a5,8280 <_Balloc+0x50>
    82ec:	00000513          	li	a0,0
    82f0:	00c12083          	lw	ra,12(sp)
    82f4:	00812403          	lw	s0,8(sp)
    82f8:	00412483          	lw	s1,4(sp)
    82fc:	00012903          	lw	s2,0(sp)
    8300:	01010113          	addi	sp,sp,16
    8304:	00008067          	ret
    8308:	00052703          	lw	a4,0(a0)
    830c:	00e7a023          	sw	a4,0(a5)
    8310:	00052823          	sw	zero,16(a0)
    8314:	00052623          	sw	zero,12(a0)
    8318:	fd9ff06f          	j	82f0 <_Balloc+0xc0>

0000831c <_Bfree>:
    831c:	02452783          	lw	a5,36(a0)
    8320:	fe010113          	addi	sp,sp,-32
    8324:	00812c23          	sw	s0,24(sp)
    8328:	00112e23          	sw	ra,28(sp)
    832c:	00050413          	mv	s0,a0
    8330:	02079663          	bnez	a5,835c <_Bfree+0x40>
    8334:	01000513          	li	a0,16
    8338:	00b12623          	sw	a1,12(sp)
    833c:	00000097          	auipc	ra,0x0
    8340:	de0080e7          	jalr	-544(ra) # 811c <malloc>
    8344:	00c12583          	lw	a1,12(sp)
    8348:	02a42223          	sw	a0,36(s0)
    834c:	00052223          	sw	zero,4(a0)
    8350:	00052423          	sw	zero,8(a0)
    8354:	00052023          	sw	zero,0(a0)
    8358:	00052623          	sw	zero,12(a0)
    835c:	02058263          	beqz	a1,8380 <_Bfree+0x64>
    8360:	02442683          	lw	a3,36(s0)
    8364:	0045a783          	lw	a5,4(a1)
    8368:	00279713          	slli	a4,a5,0x2
    836c:	00c6a783          	lw	a5,12(a3)
    8370:	00e787b3          	add	a5,a5,a4
    8374:	0007a703          	lw	a4,0(a5)
    8378:	00e5a023          	sw	a4,0(a1)
    837c:	00b7a023          	sw	a1,0(a5)
    8380:	01c12083          	lw	ra,28(sp)
    8384:	01812403          	lw	s0,24(sp)
    8388:	02010113          	addi	sp,sp,32
    838c:	00008067          	ret

00008390 <__multadd>:
    8390:	fd010113          	addi	sp,sp,-48
    8394:	02912223          	sw	s1,36(sp)
    8398:	0105a483          	lw	s1,16(a1)
    839c:	01512a23          	sw	s5,20(sp)
    83a0:	00010ab7          	lui	s5,0x10
    83a4:	02812423          	sw	s0,40(sp)
    83a8:	03212023          	sw	s2,32(sp)
    83ac:	01312e23          	sw	s3,28(sp)
    83b0:	01612823          	sw	s6,16(sp)
    83b4:	01712623          	sw	s7,12(sp)
    83b8:	01812423          	sw	s8,8(sp)
    83bc:	02112623          	sw	ra,44(sp)
    83c0:	01412c23          	sw	s4,24(sp)
    83c4:	01912223          	sw	s9,4(sp)
    83c8:	00050b13          	mv	s6,a0
    83cc:	00058413          	mv	s0,a1
    83d0:	00060b93          	mv	s7,a2
    83d4:	00068913          	mv	s2,a3
    83d8:	01458993          	addi	s3,a1,20
    83dc:	00000c13          	li	s8,0
    83e0:	fffa8a93          	addi	s5,s5,-1 # ffff <_data_lma+0x4e87>
    83e4:	0009ac83          	lw	s9,0(s3)
    83e8:	000b8593          	mv	a1,s7
    83ec:	00498993          	addi	s3,s3,4
    83f0:	015cf533          	and	a0,s9,s5
    83f4:	ffffd097          	auipc	ra,0xffffd
    83f8:	868080e7          	jalr	-1944(ra) # 4c5c <__mulsi3>
    83fc:	01250a33          	add	s4,a0,s2
    8400:	000b8593          	mv	a1,s7
    8404:	010cd513          	srli	a0,s9,0x10
    8408:	ffffd097          	auipc	ra,0xffffd
    840c:	854080e7          	jalr	-1964(ra) # 4c5c <__mulsi3>
    8410:	010a5793          	srli	a5,s4,0x10
    8414:	00f50533          	add	a0,a0,a5
    8418:	01055913          	srli	s2,a0,0x10
    841c:	015a7a33          	and	s4,s4,s5
    8420:	01051513          	slli	a0,a0,0x10
    8424:	01450533          	add	a0,a0,s4
    8428:	fea9ae23          	sw	a0,-4(s3)
    842c:	001c0c13          	addi	s8,s8,1
    8430:	fa9c4ae3          	blt	s8,s1,83e4 <__multadd+0x54>
    8434:	06090663          	beqz	s2,84a0 <__multadd+0x110>
    8438:	00842783          	lw	a5,8(s0)
    843c:	04f4c663          	blt	s1,a5,8488 <__multadd+0xf8>
    8440:	00442583          	lw	a1,4(s0)
    8444:	000b0513          	mv	a0,s6
    8448:	00158593          	addi	a1,a1,1
    844c:	00000097          	auipc	ra,0x0
    8450:	de4080e7          	jalr	-540(ra) # 8230 <_Balloc>
    8454:	01042603          	lw	a2,16(s0)
    8458:	00c40593          	addi	a1,s0,12
    845c:	00050993          	mv	s3,a0
    8460:	00260613          	addi	a2,a2,2
    8464:	00261613          	slli	a2,a2,0x2
    8468:	00c50513          	addi	a0,a0,12
    846c:	00000097          	auipc	ra,0x0
    8470:	cec080e7          	jalr	-788(ra) # 8158 <memcpy>
    8474:	00040593          	mv	a1,s0
    8478:	000b0513          	mv	a0,s6
    847c:	00000097          	auipc	ra,0x0
    8480:	ea0080e7          	jalr	-352(ra) # 831c <_Bfree>
    8484:	00098413          	mv	s0,s3
    8488:	00448793          	addi	a5,s1,4
    848c:	00279793          	slli	a5,a5,0x2
    8490:	00f407b3          	add	a5,s0,a5
    8494:	0127a223          	sw	s2,4(a5)
    8498:	00148493          	addi	s1,s1,1
    849c:	00942823          	sw	s1,16(s0)
    84a0:	00040513          	mv	a0,s0
    84a4:	02c12083          	lw	ra,44(sp)
    84a8:	02812403          	lw	s0,40(sp)
    84ac:	02412483          	lw	s1,36(sp)
    84b0:	02012903          	lw	s2,32(sp)
    84b4:	01c12983          	lw	s3,28(sp)
    84b8:	01812a03          	lw	s4,24(sp)
    84bc:	01412a83          	lw	s5,20(sp)
    84c0:	01012b03          	lw	s6,16(sp)
    84c4:	00c12b83          	lw	s7,12(sp)
    84c8:	00812c03          	lw	s8,8(sp)
    84cc:	00412c83          	lw	s9,4(sp)
    84d0:	03010113          	addi	sp,sp,48
    84d4:	00008067          	ret

000084d8 <__hi0bits>:
    84d8:	ffff0737          	lui	a4,0xffff0
    84dc:	00e57733          	and	a4,a0,a4
    84e0:	00050793          	mv	a5,a0
    84e4:	00000513          	li	a0,0
    84e8:	00071663          	bnez	a4,84f4 <__hi0bits+0x1c>
    84ec:	01079793          	slli	a5,a5,0x10
    84f0:	01000513          	li	a0,16
    84f4:	ff000737          	lui	a4,0xff000
    84f8:	00e7f733          	and	a4,a5,a4
    84fc:	00071663          	bnez	a4,8508 <__hi0bits+0x30>
    8500:	00850513          	addi	a0,a0,8
    8504:	00879793          	slli	a5,a5,0x8
    8508:	f0000737          	lui	a4,0xf0000
    850c:	00e7f733          	and	a4,a5,a4
    8510:	00071663          	bnez	a4,851c <__hi0bits+0x44>
    8514:	00450513          	addi	a0,a0,4
    8518:	00479793          	slli	a5,a5,0x4
    851c:	c0000737          	lui	a4,0xc0000
    8520:	00e7f733          	and	a4,a5,a4
    8524:	00071663          	bnez	a4,8530 <__hi0bits+0x58>
    8528:	00250513          	addi	a0,a0,2
    852c:	00279793          	slli	a5,a5,0x2
    8530:	0007ca63          	bltz	a5,8544 <__hi0bits+0x6c>
    8534:	00179713          	slli	a4,a5,0x1
    8538:	00150513          	addi	a0,a0,1
    853c:	00074463          	bltz	a4,8544 <__hi0bits+0x6c>
    8540:	02000513          	li	a0,32
    8544:	00008067          	ret

00008548 <__lo0bits>:
    8548:	00052783          	lw	a5,0(a0)
    854c:	0077f713          	andi	a4,a5,7
    8550:	02070e63          	beqz	a4,858c <__lo0bits+0x44>
    8554:	0017f693          	andi	a3,a5,1
    8558:	00000713          	li	a4,0
    855c:	00069c63          	bnez	a3,8574 <__lo0bits+0x2c>
    8560:	0027f713          	andi	a4,a5,2
    8564:	00070c63          	beqz	a4,857c <__lo0bits+0x34>
    8568:	0017d793          	srli	a5,a5,0x1
    856c:	00f52023          	sw	a5,0(a0)
    8570:	00100713          	li	a4,1
    8574:	00070513          	mv	a0,a4
    8578:	00008067          	ret
    857c:	0027d793          	srli	a5,a5,0x2
    8580:	00f52023          	sw	a5,0(a0)
    8584:	00200713          	li	a4,2
    8588:	fedff06f          	j	8574 <__lo0bits+0x2c>
    858c:	01079693          	slli	a3,a5,0x10
    8590:	0106d693          	srli	a3,a3,0x10
    8594:	00000713          	li	a4,0
    8598:	00069663          	bnez	a3,85a4 <__lo0bits+0x5c>
    859c:	0107d793          	srli	a5,a5,0x10
    85a0:	01000713          	li	a4,16
    85a4:	0ff7f693          	andi	a3,a5,255
    85a8:	00069663          	bnez	a3,85b4 <__lo0bits+0x6c>
    85ac:	00870713          	addi	a4,a4,8 # c0000008 <__freertos_irq_stack_top+0xbeff0008>
    85b0:	0087d793          	srli	a5,a5,0x8
    85b4:	00f7f693          	andi	a3,a5,15
    85b8:	00069663          	bnez	a3,85c4 <__lo0bits+0x7c>
    85bc:	00470713          	addi	a4,a4,4
    85c0:	0047d793          	srli	a5,a5,0x4
    85c4:	0037f693          	andi	a3,a5,3
    85c8:	00069663          	bnez	a3,85d4 <__lo0bits+0x8c>
    85cc:	00270713          	addi	a4,a4,2
    85d0:	0027d793          	srli	a5,a5,0x2
    85d4:	0017f693          	andi	a3,a5,1
    85d8:	00069863          	bnez	a3,85e8 <__lo0bits+0xa0>
    85dc:	0017d793          	srli	a5,a5,0x1
    85e0:	00170713          	addi	a4,a4,1
    85e4:	00078663          	beqz	a5,85f0 <__lo0bits+0xa8>
    85e8:	00f52023          	sw	a5,0(a0)
    85ec:	f89ff06f          	j	8574 <__lo0bits+0x2c>
    85f0:	02000713          	li	a4,32
    85f4:	f81ff06f          	j	8574 <__lo0bits+0x2c>

000085f8 <__i2b>:
    85f8:	ff010113          	addi	sp,sp,-16
    85fc:	00812423          	sw	s0,8(sp)
    8600:	00058413          	mv	s0,a1
    8604:	00100593          	li	a1,1
    8608:	00112623          	sw	ra,12(sp)
    860c:	00000097          	auipc	ra,0x0
    8610:	c24080e7          	jalr	-988(ra) # 8230 <_Balloc>
    8614:	00852a23          	sw	s0,20(a0)
    8618:	00c12083          	lw	ra,12(sp)
    861c:	00812403          	lw	s0,8(sp)
    8620:	00100713          	li	a4,1
    8624:	00e52823          	sw	a4,16(a0)
    8628:	01010113          	addi	sp,sp,16
    862c:	00008067          	ret

00008630 <__multiply>:
    8630:	0105a703          	lw	a4,16(a1)
    8634:	01062783          	lw	a5,16(a2)
    8638:	fb010113          	addi	sp,sp,-80
    863c:	04912223          	sw	s1,68(sp)
    8640:	03412c23          	sw	s4,56(sp)
    8644:	04112623          	sw	ra,76(sp)
    8648:	04812423          	sw	s0,72(sp)
    864c:	05212023          	sw	s2,64(sp)
    8650:	03312e23          	sw	s3,60(sp)
    8654:	03512a23          	sw	s5,52(sp)
    8658:	03612823          	sw	s6,48(sp)
    865c:	03712623          	sw	s7,44(sp)
    8660:	03812423          	sw	s8,40(sp)
    8664:	03912223          	sw	s9,36(sp)
    8668:	03a12023          	sw	s10,32(sp)
    866c:	01b12e23          	sw	s11,28(sp)
    8670:	00058a13          	mv	s4,a1
    8674:	00060493          	mv	s1,a2
    8678:	00f75663          	bge	a4,a5,8684 <__multiply+0x54>
    867c:	00060a13          	mv	s4,a2
    8680:	00058493          	mv	s1,a1
    8684:	010a2903          	lw	s2,16(s4)
    8688:	0104a983          	lw	s3,16(s1)
    868c:	008a2783          	lw	a5,8(s4)
    8690:	004a2583          	lw	a1,4(s4)
    8694:	01390c33          	add	s8,s2,s3
    8698:	0187d463          	bge	a5,s8,86a0 <__multiply+0x70>
    869c:	00158593          	addi	a1,a1,1
    86a0:	00000097          	auipc	ra,0x0
    86a4:	b90080e7          	jalr	-1136(ra) # 8230 <_Balloc>
    86a8:	01450b93          	addi	s7,a0,20
    86ac:	002c1c93          	slli	s9,s8,0x2
    86b0:	00050d13          	mv	s10,a0
    86b4:	019b8cb3          	add	s9,s7,s9
    86b8:	000b8793          	mv	a5,s7
    86bc:	0997e463          	bltu	a5,s9,8744 <__multiply+0x114>
    86c0:	014a0a13          	addi	s4,s4,20
    86c4:	00291913          	slli	s2,s2,0x2
    86c8:	012a07b3          	add	a5,s4,s2
    86cc:	01448493          	addi	s1,s1,20
    86d0:	00299993          	slli	s3,s3,0x2
    86d4:	00f12023          	sw	a5,0(sp)
    86d8:	00010ab7          	lui	s5,0x10
    86dc:	013487b3          	add	a5,s1,s3
    86e0:	00f12223          	sw	a5,4(sp)
    86e4:	fffa8a93          	addi	s5,s5,-1 # ffff <_data_lma+0x4e87>
    86e8:	00412783          	lw	a5,4(sp)
    86ec:	06f4e263          	bltu	s1,a5,8750 <__multiply+0x120>
    86f0:	01805863          	blez	s8,8700 <__multiply+0xd0>
    86f4:	ffcc8c93          	addi	s9,s9,-4
    86f8:	000ca783          	lw	a5,0(s9)
    86fc:	18078263          	beqz	a5,8880 <__multiply+0x250>
    8700:	04c12083          	lw	ra,76(sp)
    8704:	04812403          	lw	s0,72(sp)
    8708:	018d2823          	sw	s8,16(s10)
    870c:	000d0513          	mv	a0,s10
    8710:	04412483          	lw	s1,68(sp)
    8714:	04012903          	lw	s2,64(sp)
    8718:	03c12983          	lw	s3,60(sp)
    871c:	03812a03          	lw	s4,56(sp)
    8720:	03412a83          	lw	s5,52(sp)
    8724:	03012b03          	lw	s6,48(sp)
    8728:	02c12b83          	lw	s7,44(sp)
    872c:	02812c03          	lw	s8,40(sp)
    8730:	02412c83          	lw	s9,36(sp)
    8734:	02012d03          	lw	s10,32(sp)
    8738:	01c12d83          	lw	s11,28(sp)
    873c:	05010113          	addi	sp,sp,80
    8740:	00008067          	ret
    8744:	0007a023          	sw	zero,0(a5)
    8748:	00478793          	addi	a5,a5,4
    874c:	f71ff06f          	j	86bc <__multiply+0x8c>
    8750:	0004a783          	lw	a5,0(s1)
    8754:	0157f7b3          	and	a5,a5,s5
    8758:	08078863          	beqz	a5,87e8 <__multiply+0x1b8>
    875c:	000b8d93          	mv	s11,s7
    8760:	000a0993          	mv	s3,s4
    8764:	00000913          	li	s2,0
    8768:	0009a603          	lw	a2,0(s3)
    876c:	00078593          	mv	a1,a5
    8770:	000da403          	lw	s0,0(s11)
    8774:	01567533          	and	a0,a2,s5
    8778:	00f12423          	sw	a5,8(sp)
    877c:	00c12623          	sw	a2,12(sp)
    8780:	ffffc097          	auipc	ra,0xffffc
    8784:	4dc080e7          	jalr	1244(ra) # 4c5c <__mulsi3>
    8788:	00812783          	lw	a5,8(sp)
    878c:	00c12603          	lw	a2,12(sp)
    8790:	01547b33          	and	s6,s0,s5
    8794:	01650b33          	add	s6,a0,s6
    8798:	00078593          	mv	a1,a5
    879c:	01065513          	srli	a0,a2,0x10
    87a0:	ffffc097          	auipc	ra,0xffffc
    87a4:	4bc080e7          	jalr	1212(ra) # 4c5c <__mulsi3>
    87a8:	012b0b33          	add	s6,s6,s2
    87ac:	01045413          	srli	s0,s0,0x10
    87b0:	00850533          	add	a0,a0,s0
    87b4:	010b5413          	srli	s0,s6,0x10
    87b8:	00850533          	add	a0,a0,s0
    87bc:	01055913          	srli	s2,a0,0x10
    87c0:	015b7b33          	and	s6,s6,s5
    87c4:	01051513          	slli	a0,a0,0x10
    87c8:	00012703          	lw	a4,0(sp)
    87cc:	004d8d93          	addi	s11,s11,4
    87d0:	01656533          	or	a0,a0,s6
    87d4:	00498993          	addi	s3,s3,4
    87d8:	feadae23          	sw	a0,-4(s11)
    87dc:	00812783          	lw	a5,8(sp)
    87e0:	f8e9e4e3          	bltu	s3,a4,8768 <__multiply+0x138>
    87e4:	012da023          	sw	s2,0(s11)
    87e8:	0024d903          	lhu	s2,2(s1)
    87ec:	08090463          	beqz	s2,8874 <__multiply+0x244>
    87f0:	000ba403          	lw	s0,0(s7)
    87f4:	000b8d93          	mv	s11,s7
    87f8:	000a0993          	mv	s3,s4
    87fc:	00000693          	li	a3,0
    8800:	0009a503          	lw	a0,0(s3)
    8804:	00090593          	mv	a1,s2
    8808:	00d12423          	sw	a3,8(sp)
    880c:	01557533          	and	a0,a0,s5
    8810:	ffffc097          	auipc	ra,0xffffc
    8814:	44c080e7          	jalr	1100(ra) # 4c5c <__mulsi3>
    8818:	002ddb03          	lhu	s6,2(s11)
    881c:	00812683          	lw	a3,8(sp)
    8820:	01547433          	and	s0,s0,s5
    8824:	01650b33          	add	s6,a0,s6
    8828:	00db0b33          	add	s6,s6,a3
    882c:	010b1513          	slli	a0,s6,0x10
    8830:	00856433          	or	s0,a0,s0
    8834:	004d8d93          	addi	s11,s11,4
    8838:	fe8dae23          	sw	s0,-4(s11)
    883c:	00498993          	addi	s3,s3,4
    8840:	ffe9d503          	lhu	a0,-2(s3)
    8844:	00090593          	mv	a1,s2
    8848:	010b5b13          	srli	s6,s6,0x10
    884c:	ffffc097          	auipc	ra,0xffffc
    8850:	410080e7          	jalr	1040(ra) # 4c5c <__mulsi3>
    8854:	000da403          	lw	s0,0(s11)
    8858:	00012783          	lw	a5,0(sp)
    885c:	01547433          	and	s0,s0,s5
    8860:	00850433          	add	s0,a0,s0
    8864:	01640433          	add	s0,s0,s6
    8868:	01045693          	srli	a3,s0,0x10
    886c:	f8f9eae3          	bltu	s3,a5,8800 <__multiply+0x1d0>
    8870:	008da023          	sw	s0,0(s11)
    8874:	00448493          	addi	s1,s1,4
    8878:	004b8b93          	addi	s7,s7,4
    887c:	e6dff06f          	j	86e8 <__multiply+0xb8>
    8880:	fffc0c13          	addi	s8,s8,-1
    8884:	e6dff06f          	j	86f0 <__multiply+0xc0>

00008888 <__pow5mult>:
    8888:	fe010113          	addi	sp,sp,-32
    888c:	00912a23          	sw	s1,20(sp)
    8890:	01212823          	sw	s2,16(sp)
    8894:	01312623          	sw	s3,12(sp)
    8898:	00112e23          	sw	ra,28(sp)
    889c:	00812c23          	sw	s0,24(sp)
    88a0:	01412423          	sw	s4,8(sp)
    88a4:	00367793          	andi	a5,a2,3
    88a8:	00050913          	mv	s2,a0
    88ac:	00060493          	mv	s1,a2
    88b0:	00058993          	mv	s3,a1
    88b4:	02078663          	beqz	a5,88e0 <__pow5mult+0x58>
    88b8:	fff78793          	addi	a5,a5,-1
    88bc:	00ff8717          	auipc	a4,0xff8
    88c0:	07470713          	addi	a4,a4,116 # 1000930 <p05.3319>
    88c4:	00279793          	slli	a5,a5,0x2
    88c8:	00f707b3          	add	a5,a4,a5
    88cc:	0007a603          	lw	a2,0(a5)
    88d0:	00000693          	li	a3,0
    88d4:	00000097          	auipc	ra,0x0
    88d8:	abc080e7          	jalr	-1348(ra) # 8390 <__multadd>
    88dc:	00050993          	mv	s3,a0
    88e0:	4024d493          	srai	s1,s1,0x2
    88e4:	0a048e63          	beqz	s1,89a0 <__pow5mult+0x118>
    88e8:	02492783          	lw	a5,36(s2)
    88ec:	02079263          	bnez	a5,8910 <__pow5mult+0x88>
    88f0:	01000513          	li	a0,16
    88f4:	00000097          	auipc	ra,0x0
    88f8:	828080e7          	jalr	-2008(ra) # 811c <malloc>
    88fc:	02a92223          	sw	a0,36(s2)
    8900:	00052223          	sw	zero,4(a0)
    8904:	00052423          	sw	zero,8(a0)
    8908:	00052023          	sw	zero,0(a0)
    890c:	00052623          	sw	zero,12(a0)
    8910:	02492a03          	lw	s4,36(s2)
    8914:	008a2403          	lw	s0,8(s4)
    8918:	02041063          	bnez	s0,8938 <__pow5mult+0xb0>
    891c:	27100593          	li	a1,625
    8920:	00090513          	mv	a0,s2
    8924:	00000097          	auipc	ra,0x0
    8928:	cd4080e7          	jalr	-812(ra) # 85f8 <__i2b>
    892c:	00aa2423          	sw	a0,8(s4)
    8930:	00050413          	mv	s0,a0
    8934:	00052023          	sw	zero,0(a0)
    8938:	0014f793          	andi	a5,s1,1
    893c:	02078863          	beqz	a5,896c <__pow5mult+0xe4>
    8940:	00098593          	mv	a1,s3
    8944:	00040613          	mv	a2,s0
    8948:	00090513          	mv	a0,s2
    894c:	00000097          	auipc	ra,0x0
    8950:	ce4080e7          	jalr	-796(ra) # 8630 <__multiply>
    8954:	00050a13          	mv	s4,a0
    8958:	00098593          	mv	a1,s3
    895c:	00090513          	mv	a0,s2
    8960:	00000097          	auipc	ra,0x0
    8964:	9bc080e7          	jalr	-1604(ra) # 831c <_Bfree>
    8968:	000a0993          	mv	s3,s4
    896c:	4014d493          	srai	s1,s1,0x1
    8970:	02048863          	beqz	s1,89a0 <__pow5mult+0x118>
    8974:	00042503          	lw	a0,0(s0)
    8978:	02051063          	bnez	a0,8998 <__pow5mult+0x110>
    897c:	00040613          	mv	a2,s0
    8980:	00040593          	mv	a1,s0
    8984:	00090513          	mv	a0,s2
    8988:	00000097          	auipc	ra,0x0
    898c:	ca8080e7          	jalr	-856(ra) # 8630 <__multiply>
    8990:	00a42023          	sw	a0,0(s0)
    8994:	00052023          	sw	zero,0(a0)
    8998:	00050413          	mv	s0,a0
    899c:	f9dff06f          	j	8938 <__pow5mult+0xb0>
    89a0:	01c12083          	lw	ra,28(sp)
    89a4:	01812403          	lw	s0,24(sp)
    89a8:	00098513          	mv	a0,s3
    89ac:	01412483          	lw	s1,20(sp)
    89b0:	01012903          	lw	s2,16(sp)
    89b4:	00c12983          	lw	s3,12(sp)
    89b8:	00812a03          	lw	s4,8(sp)
    89bc:	02010113          	addi	sp,sp,32
    89c0:	00008067          	ret

000089c4 <__lshift>:
    89c4:	fd010113          	addi	sp,sp,-48
    89c8:	02912223          	sw	s1,36(sp)
    89cc:	00058493          	mv	s1,a1
    89d0:	01312e23          	sw	s3,28(sp)
    89d4:	0104a983          	lw	s3,16(s1)
    89d8:	02812423          	sw	s0,40(sp)
    89dc:	0045a583          	lw	a1,4(a1)
    89e0:	40565413          	srai	s0,a2,0x5
    89e4:	0084a783          	lw	a5,8(s1)
    89e8:	013409b3          	add	s3,s0,s3
    89ec:	03212023          	sw	s2,32(sp)
    89f0:	01512a23          	sw	s5,20(sp)
    89f4:	02112623          	sw	ra,44(sp)
    89f8:	01412c23          	sw	s4,24(sp)
    89fc:	00050a93          	mv	s5,a0
    8a00:	00198913          	addi	s2,s3,1
    8a04:	0d27ca63          	blt	a5,s2,8ad8 <__lshift+0x114>
    8a08:	000a8513          	mv	a0,s5
    8a0c:	00c12623          	sw	a2,12(sp)
    8a10:	00000097          	auipc	ra,0x0
    8a14:	820080e7          	jalr	-2016(ra) # 8230 <_Balloc>
    8a18:	00c12603          	lw	a2,12(sp)
    8a1c:	01450793          	addi	a5,a0,20
    8a20:	00050a13          	mv	s4,a0
    8a24:	00078693          	mv	a3,a5
    8a28:	00000713          	li	a4,0
    8a2c:	00468693          	addi	a3,a3,4
    8a30:	0a874a63          	blt	a4,s0,8ae4 <__lshift+0x120>
    8a34:	00045463          	bgez	s0,8a3c <__lshift+0x78>
    8a38:	00000413          	li	s0,0
    8a3c:	0104a683          	lw	a3,16(s1)
    8a40:	00241413          	slli	s0,s0,0x2
    8a44:	00878733          	add	a4,a5,s0
    8a48:	00269693          	slli	a3,a3,0x2
    8a4c:	01448793          	addi	a5,s1,20
    8a50:	01f67613          	andi	a2,a2,31
    8a54:	00d786b3          	add	a3,a5,a3
    8a58:	08060c63          	beqz	a2,8af0 <__lshift+0x12c>
    8a5c:	02000813          	li	a6,32
    8a60:	40c80833          	sub	a6,a6,a2
    8a64:	00000593          	li	a1,0
    8a68:	0007a503          	lw	a0,0(a5)
    8a6c:	00470713          	addi	a4,a4,4
    8a70:	00478793          	addi	a5,a5,4
    8a74:	00c51533          	sll	a0,a0,a2
    8a78:	00b565b3          	or	a1,a0,a1
    8a7c:	feb72e23          	sw	a1,-4(a4)
    8a80:	ffc7a583          	lw	a1,-4(a5)
    8a84:	0105d5b3          	srl	a1,a1,a6
    8a88:	fed7e0e3          	bltu	a5,a3,8a68 <__lshift+0xa4>
    8a8c:	00b72023          	sw	a1,0(a4)
    8a90:	00058463          	beqz	a1,8a98 <__lshift+0xd4>
    8a94:	00298913          	addi	s2,s3,2
    8a98:	fff90913          	addi	s2,s2,-1
    8a9c:	012a2823          	sw	s2,16(s4)
    8aa0:	000a8513          	mv	a0,s5
    8aa4:	00048593          	mv	a1,s1
    8aa8:	00000097          	auipc	ra,0x0
    8aac:	874080e7          	jalr	-1932(ra) # 831c <_Bfree>
    8ab0:	02c12083          	lw	ra,44(sp)
    8ab4:	02812403          	lw	s0,40(sp)
    8ab8:	000a0513          	mv	a0,s4
    8abc:	02412483          	lw	s1,36(sp)
    8ac0:	02012903          	lw	s2,32(sp)
    8ac4:	01c12983          	lw	s3,28(sp)
    8ac8:	01812a03          	lw	s4,24(sp)
    8acc:	01412a83          	lw	s5,20(sp)
    8ad0:	03010113          	addi	sp,sp,48
    8ad4:	00008067          	ret
    8ad8:	00158593          	addi	a1,a1,1
    8adc:	00179793          	slli	a5,a5,0x1
    8ae0:	f25ff06f          	j	8a04 <__lshift+0x40>
    8ae4:	fe06ae23          	sw	zero,-4(a3)
    8ae8:	00170713          	addi	a4,a4,1
    8aec:	f41ff06f          	j	8a2c <__lshift+0x68>
    8af0:	00478793          	addi	a5,a5,4
    8af4:	ffc7a603          	lw	a2,-4(a5)
    8af8:	00470713          	addi	a4,a4,4
    8afc:	fec72e23          	sw	a2,-4(a4)
    8b00:	fed7e8e3          	bltu	a5,a3,8af0 <__lshift+0x12c>
    8b04:	f95ff06f          	j	8a98 <__lshift+0xd4>

00008b08 <__mcmp>:
    8b08:	01052783          	lw	a5,16(a0)
    8b0c:	0105a703          	lw	a4,16(a1)
    8b10:	40e787b3          	sub	a5,a5,a4
    8b14:	02079c63          	bnez	a5,8b4c <__mcmp+0x44>
    8b18:	00271713          	slli	a4,a4,0x2
    8b1c:	01450513          	addi	a0,a0,20
    8b20:	01458593          	addi	a1,a1,20
    8b24:	00e506b3          	add	a3,a0,a4
    8b28:	00e585b3          	add	a1,a1,a4
    8b2c:	ffc68693          	addi	a3,a3,-4
    8b30:	ffc58593          	addi	a1,a1,-4
    8b34:	0006a603          	lw	a2,0(a3)
    8b38:	0005a703          	lw	a4,0(a1)
    8b3c:	00e60c63          	beq	a2,a4,8b54 <__mcmp+0x4c>
    8b40:	fff00793          	li	a5,-1
    8b44:	00e66463          	bltu	a2,a4,8b4c <__mcmp+0x44>
    8b48:	00100793          	li	a5,1
    8b4c:	00078513          	mv	a0,a5
    8b50:	00008067          	ret
    8b54:	fcd56ce3          	bltu	a0,a3,8b2c <__mcmp+0x24>
    8b58:	ff5ff06f          	j	8b4c <__mcmp+0x44>

00008b5c <__mdiff>:
    8b5c:	fe010113          	addi	sp,sp,-32
    8b60:	00912a23          	sw	s1,20(sp)
    8b64:	00058493          	mv	s1,a1
    8b68:	01312623          	sw	s3,12(sp)
    8b6c:	00060593          	mv	a1,a2
    8b70:	00050993          	mv	s3,a0
    8b74:	00048513          	mv	a0,s1
    8b78:	00812c23          	sw	s0,24(sp)
    8b7c:	00112e23          	sw	ra,28(sp)
    8b80:	01212823          	sw	s2,16(sp)
    8b84:	00060413          	mv	s0,a2
    8b88:	00000097          	auipc	ra,0x0
    8b8c:	f80080e7          	jalr	-128(ra) # 8b08 <__mcmp>
    8b90:	02051e63          	bnez	a0,8bcc <__mdiff+0x70>
    8b94:	00000593          	li	a1,0
    8b98:	00098513          	mv	a0,s3
    8b9c:	fffff097          	auipc	ra,0xfffff
    8ba0:	694080e7          	jalr	1684(ra) # 8230 <_Balloc>
    8ba4:	00100793          	li	a5,1
    8ba8:	00f52823          	sw	a5,16(a0)
    8bac:	00052a23          	sw	zero,20(a0)
    8bb0:	01c12083          	lw	ra,28(sp)
    8bb4:	01812403          	lw	s0,24(sp)
    8bb8:	01412483          	lw	s1,20(sp)
    8bbc:	01012903          	lw	s2,16(sp)
    8bc0:	00c12983          	lw	s3,12(sp)
    8bc4:	02010113          	addi	sp,sp,32
    8bc8:	00008067          	ret
    8bcc:	00100913          	li	s2,1
    8bd0:	00054a63          	bltz	a0,8be4 <__mdiff+0x88>
    8bd4:	00040793          	mv	a5,s0
    8bd8:	00000913          	li	s2,0
    8bdc:	00048413          	mv	s0,s1
    8be0:	00078493          	mv	s1,a5
    8be4:	00442583          	lw	a1,4(s0)
    8be8:	00098513          	mv	a0,s3
    8bec:	fffff097          	auipc	ra,0xfffff
    8bf0:	644080e7          	jalr	1604(ra) # 8230 <_Balloc>
    8bf4:	01042303          	lw	t1,16(s0)
    8bf8:	0104a883          	lw	a7,16(s1)
    8bfc:	01440613          	addi	a2,s0,20
    8c00:	00231e13          	slli	t3,t1,0x2
    8c04:	01448813          	addi	a6,s1,20
    8c08:	00289893          	slli	a7,a7,0x2
    8c0c:	00010eb7          	lui	t4,0x10
    8c10:	01252623          	sw	s2,12(a0)
    8c14:	01c60e33          	add	t3,a2,t3
    8c18:	011808b3          	add	a7,a6,a7
    8c1c:	01450693          	addi	a3,a0,20
    8c20:	00000f13          	li	t5,0
    8c24:	fffe8e93          	addi	t4,t4,-1 # ffff <_data_lma+0x4e87>
    8c28:	00062703          	lw	a4,0(a2)
    8c2c:	00082f83          	lw	t6,0(a6)
    8c30:	00468693          	addi	a3,a3,4
    8c34:	01d775b3          	and	a1,a4,t4
    8c38:	01dff7b3          	and	a5,t6,t4
    8c3c:	01e585b3          	add	a1,a1,t5
    8c40:	40f585b3          	sub	a1,a1,a5
    8c44:	010fdf93          	srli	t6,t6,0x10
    8c48:	01075793          	srli	a5,a4,0x10
    8c4c:	41f787b3          	sub	a5,a5,t6
    8c50:	4105d713          	srai	a4,a1,0x10
    8c54:	00e787b3          	add	a5,a5,a4
    8c58:	4107df13          	srai	t5,a5,0x10
    8c5c:	01d5f5b3          	and	a1,a1,t4
    8c60:	01079793          	slli	a5,a5,0x10
    8c64:	00b7e7b3          	or	a5,a5,a1
    8c68:	00480813          	addi	a6,a6,4
    8c6c:	fef6ae23          	sw	a5,-4(a3)
    8c70:	00460613          	addi	a2,a2,4
    8c74:	fb186ae3          	bltu	a6,a7,8c28 <__mdiff+0xcc>
    8c78:	000105b7          	lui	a1,0x10
    8c7c:	fff58593          	addi	a1,a1,-1 # ffff <_data_lma+0x4e87>
    8c80:	01c66c63          	bltu	a2,t3,8c98 <__mdiff+0x13c>
    8c84:	ffc68693          	addi	a3,a3,-4
    8c88:	0006a783          	lw	a5,0(a3)
    8c8c:	04078263          	beqz	a5,8cd0 <__mdiff+0x174>
    8c90:	00652823          	sw	t1,16(a0)
    8c94:	f1dff06f          	j	8bb0 <__mdiff+0x54>
    8c98:	00062783          	lw	a5,0(a2)
    8c9c:	00468693          	addi	a3,a3,4
    8ca0:	00460613          	addi	a2,a2,4
    8ca4:	00b7f733          	and	a4,a5,a1
    8ca8:	01e70733          	add	a4,a4,t5
    8cac:	41075813          	srai	a6,a4,0x10
    8cb0:	0107d793          	srli	a5,a5,0x10
    8cb4:	010787b3          	add	a5,a5,a6
    8cb8:	4107df13          	srai	t5,a5,0x10
    8cbc:	00b77733          	and	a4,a4,a1
    8cc0:	01079793          	slli	a5,a5,0x10
    8cc4:	00e7e7b3          	or	a5,a5,a4
    8cc8:	fef6ae23          	sw	a5,-4(a3)
    8ccc:	fb5ff06f          	j	8c80 <__mdiff+0x124>
    8cd0:	fff30313          	addi	t1,t1,-1
    8cd4:	fb1ff06f          	j	8c84 <__mdiff+0x128>

00008cd8 <__d2b>:
    8cd8:	fd010113          	addi	sp,sp,-48
    8cdc:	02812423          	sw	s0,40(sp)
    8ce0:	00058413          	mv	s0,a1
    8ce4:	00100593          	li	a1,1
    8ce8:	02912223          	sw	s1,36(sp)
    8cec:	03212023          	sw	s2,32(sp)
    8cf0:	00060493          	mv	s1,a2
    8cf4:	01312e23          	sw	s3,28(sp)
    8cf8:	01412c23          	sw	s4,24(sp)
    8cfc:	00070913          	mv	s2,a4
    8d00:	02112623          	sw	ra,44(sp)
    8d04:	00068a13          	mv	s4,a3
    8d08:	fffff097          	auipc	ra,0xfffff
    8d0c:	528080e7          	jalr	1320(ra) # 8230 <_Balloc>
    8d10:	00100737          	lui	a4,0x100
    8d14:	fff70793          	addi	a5,a4,-1 # fffff <_data_lma+0xf4e87>
    8d18:	0097f7b3          	and	a5,a5,s1
    8d1c:	0144d493          	srli	s1,s1,0x14
    8d20:	7ff4f493          	andi	s1,s1,2047
    8d24:	00050993          	mv	s3,a0
    8d28:	08049c63          	bnez	s1,8dc0 <__d2b+0xe8>
    8d2c:	00f12623          	sw	a5,12(sp)
    8d30:	0a040063          	beqz	s0,8dd0 <__d2b+0xf8>
    8d34:	00810513          	addi	a0,sp,8
    8d38:	00812423          	sw	s0,8(sp)
    8d3c:	00000097          	auipc	ra,0x0
    8d40:	80c080e7          	jalr	-2036(ra) # 8548 <__lo0bits>
    8d44:	00812683          	lw	a3,8(sp)
    8d48:	08050063          	beqz	a0,8dc8 <__d2b+0xf0>
    8d4c:	00c12703          	lw	a4,12(sp)
    8d50:	02000793          	li	a5,32
    8d54:	40a787b3          	sub	a5,a5,a0
    8d58:	00f717b3          	sll	a5,a4,a5
    8d5c:	00d7e7b3          	or	a5,a5,a3
    8d60:	00a75733          	srl	a4,a4,a0
    8d64:	00f9aa23          	sw	a5,20(s3)
    8d68:	00e12623          	sw	a4,12(sp)
    8d6c:	00c12403          	lw	s0,12(sp)
    8d70:	0089ac23          	sw	s0,24(s3)
    8d74:	00803433          	snez	s0,s0
    8d78:	00140413          	addi	s0,s0,1
    8d7c:	0089a823          	sw	s0,16(s3)
    8d80:	06048c63          	beqz	s1,8df8 <__d2b+0x120>
    8d84:	bcd48493          	addi	s1,s1,-1075
    8d88:	00a484b3          	add	s1,s1,a0
    8d8c:	03500793          	li	a5,53
    8d90:	009a2023          	sw	s1,0(s4)
    8d94:	40a78533          	sub	a0,a5,a0
    8d98:	00a92023          	sw	a0,0(s2)
    8d9c:	02c12083          	lw	ra,44(sp)
    8da0:	02812403          	lw	s0,40(sp)
    8da4:	00098513          	mv	a0,s3
    8da8:	02412483          	lw	s1,36(sp)
    8dac:	02012903          	lw	s2,32(sp)
    8db0:	01c12983          	lw	s3,28(sp)
    8db4:	01812a03          	lw	s4,24(sp)
    8db8:	03010113          	addi	sp,sp,48
    8dbc:	00008067          	ret
    8dc0:	00e7e7b3          	or	a5,a5,a4
    8dc4:	f69ff06f          	j	8d2c <__d2b+0x54>
    8dc8:	00d9aa23          	sw	a3,20(s3)
    8dcc:	fa1ff06f          	j	8d6c <__d2b+0x94>
    8dd0:	00c10513          	addi	a0,sp,12
    8dd4:	fffff097          	auipc	ra,0xfffff
    8dd8:	774080e7          	jalr	1908(ra) # 8548 <__lo0bits>
    8ddc:	00c12783          	lw	a5,12(sp)
    8de0:	02050513          	addi	a0,a0,32
    8de4:	00100413          	li	s0,1
    8de8:	00f9aa23          	sw	a5,20(s3)
    8dec:	00100793          	li	a5,1
    8df0:	00f9a823          	sw	a5,16(s3)
    8df4:	f8dff06f          	j	8d80 <__d2b+0xa8>
    8df8:	00241793          	slli	a5,s0,0x2
    8dfc:	bce50513          	addi	a0,a0,-1074
    8e00:	00f987b3          	add	a5,s3,a5
    8e04:	00aa2023          	sw	a0,0(s4)
    8e08:	0107a503          	lw	a0,16(a5)
    8e0c:	00541413          	slli	s0,s0,0x5
    8e10:	fffff097          	auipc	ra,0xfffff
    8e14:	6c8080e7          	jalr	1736(ra) # 84d8 <__hi0bits>
    8e18:	40a40433          	sub	s0,s0,a0
    8e1c:	00892023          	sw	s0,0(s2)
    8e20:	f7dff06f          	j	8d9c <__d2b+0xc4>

00008e24 <_calloc_r>:
    8e24:	fe010113          	addi	sp,sp,-32
    8e28:	00812c23          	sw	s0,24(sp)
    8e2c:	00050413          	mv	s0,a0
    8e30:	00058513          	mv	a0,a1
    8e34:	00060593          	mv	a1,a2
    8e38:	00112e23          	sw	ra,28(sp)
    8e3c:	ffffc097          	auipc	ra,0xffffc
    8e40:	e20080e7          	jalr	-480(ra) # 4c5c <__mulsi3>
    8e44:	00050593          	mv	a1,a0
    8e48:	00a12623          	sw	a0,12(sp)
    8e4c:	00040513          	mv	a0,s0
    8e50:	00000097          	auipc	ra,0x0
    8e54:	148080e7          	jalr	328(ra) # 8f98 <_malloc_r>
    8e58:	00050413          	mv	s0,a0
    8e5c:	00050a63          	beqz	a0,8e70 <_calloc_r+0x4c>
    8e60:	00c12603          	lw	a2,12(sp)
    8e64:	00000593          	li	a1,0
    8e68:	ffffc097          	auipc	ra,0xffffc
    8e6c:	f60080e7          	jalr	-160(ra) # 4dc8 <memset>
    8e70:	00040513          	mv	a0,s0
    8e74:	01c12083          	lw	ra,28(sp)
    8e78:	01812403          	lw	s0,24(sp)
    8e7c:	02010113          	addi	sp,sp,32
    8e80:	00008067          	ret

00008e84 <_free_r>:
    8e84:	10058863          	beqz	a1,8f94 <_free_r+0x110>
    8e88:	ffc5a783          	lw	a5,-4(a1)
    8e8c:	ff010113          	addi	sp,sp,-16
    8e90:	00812423          	sw	s0,8(sp)
    8e94:	00112623          	sw	ra,12(sp)
    8e98:	00912223          	sw	s1,4(sp)
    8e9c:	ffc58413          	addi	s0,a1,-4
    8ea0:	0007d463          	bgez	a5,8ea8 <_free_r+0x24>
    8ea4:	00f40433          	add	s0,s0,a5
    8ea8:	00050493          	mv	s1,a0
    8eac:	00001097          	auipc	ra,0x1
    8eb0:	b6c080e7          	jalr	-1172(ra) # 9a18 <__malloc_lock>
    8eb4:	00ff8797          	auipc	a5,0xff8
    8eb8:	d9878793          	addi	a5,a5,-616 # 1000c4c <__malloc_free_list>
    8ebc:	0007a783          	lw	a5,0(a5)
    8ec0:	02079663          	bnez	a5,8eec <_free_r+0x68>
    8ec4:	00042223          	sw	zero,4(s0)
    8ec8:	00ff8797          	auipc	a5,0xff8
    8ecc:	d887a223          	sw	s0,-636(a5) # 1000c4c <__malloc_free_list>
    8ed0:	00812403          	lw	s0,8(sp)
    8ed4:	00c12083          	lw	ra,12(sp)
    8ed8:	00048513          	mv	a0,s1
    8edc:	00412483          	lw	s1,4(sp)
    8ee0:	01010113          	addi	sp,sp,16
    8ee4:	00001317          	auipc	t1,0x1
    8ee8:	b3830067          	jr	-1224(t1) # 9a1c <__malloc_unlock>
    8eec:	02f47663          	bgeu	s0,a5,8f18 <_free_r+0x94>
    8ef0:	00042683          	lw	a3,0(s0)
    8ef4:	00d40733          	add	a4,s0,a3
    8ef8:	00e79a63          	bne	a5,a4,8f0c <_free_r+0x88>
    8efc:	0007a703          	lw	a4,0(a5)
    8f00:	0047a783          	lw	a5,4(a5)
    8f04:	00d70733          	add	a4,a4,a3
    8f08:	00e42023          	sw	a4,0(s0)
    8f0c:	00f42223          	sw	a5,4(s0)
    8f10:	fb9ff06f          	j	8ec8 <_free_r+0x44>
    8f14:	00070793          	mv	a5,a4
    8f18:	0047a703          	lw	a4,4(a5)
    8f1c:	00070463          	beqz	a4,8f24 <_free_r+0xa0>
    8f20:	fee47ae3          	bgeu	s0,a4,8f14 <_free_r+0x90>
    8f24:	0007a683          	lw	a3,0(a5)
    8f28:	00d78633          	add	a2,a5,a3
    8f2c:	02861863          	bne	a2,s0,8f5c <_free_r+0xd8>
    8f30:	00042603          	lw	a2,0(s0)
    8f34:	00c686b3          	add	a3,a3,a2
    8f38:	00d7a023          	sw	a3,0(a5)
    8f3c:	00d78633          	add	a2,a5,a3
    8f40:	f8c718e3          	bne	a4,a2,8ed0 <_free_r+0x4c>
    8f44:	00072603          	lw	a2,0(a4)
    8f48:	00472703          	lw	a4,4(a4)
    8f4c:	00d606b3          	add	a3,a2,a3
    8f50:	00d7a023          	sw	a3,0(a5)
    8f54:	00e7a223          	sw	a4,4(a5)
    8f58:	f79ff06f          	j	8ed0 <_free_r+0x4c>
    8f5c:	00c47863          	bgeu	s0,a2,8f6c <_free_r+0xe8>
    8f60:	00c00793          	li	a5,12
    8f64:	00f4a023          	sw	a5,0(s1)
    8f68:	f69ff06f          	j	8ed0 <_free_r+0x4c>
    8f6c:	00042603          	lw	a2,0(s0)
    8f70:	00c406b3          	add	a3,s0,a2
    8f74:	00d71a63          	bne	a4,a3,8f88 <_free_r+0x104>
    8f78:	00072683          	lw	a3,0(a4)
    8f7c:	00472703          	lw	a4,4(a4)
    8f80:	00c686b3          	add	a3,a3,a2
    8f84:	00d42023          	sw	a3,0(s0)
    8f88:	00e42223          	sw	a4,4(s0)
    8f8c:	0087a223          	sw	s0,4(a5)
    8f90:	f41ff06f          	j	8ed0 <_free_r+0x4c>
    8f94:	00008067          	ret

00008f98 <_malloc_r>:
    8f98:	fe010113          	addi	sp,sp,-32
    8f9c:	00912a23          	sw	s1,20(sp)
    8fa0:	00358493          	addi	s1,a1,3
    8fa4:	ffc4f493          	andi	s1,s1,-4
    8fa8:	00112e23          	sw	ra,28(sp)
    8fac:	00812c23          	sw	s0,24(sp)
    8fb0:	01212823          	sw	s2,16(sp)
    8fb4:	01312623          	sw	s3,12(sp)
    8fb8:	00848493          	addi	s1,s1,8
    8fbc:	00c00793          	li	a5,12
    8fc0:	08f4f263          	bgeu	s1,a5,9044 <_malloc_r+0xac>
    8fc4:	00c00493          	li	s1,12
    8fc8:	08b4e063          	bltu	s1,a1,9048 <_malloc_r+0xb0>
    8fcc:	00050913          	mv	s2,a0
    8fd0:	00001097          	auipc	ra,0x1
    8fd4:	a48080e7          	jalr	-1464(ra) # 9a18 <__malloc_lock>
    8fd8:	00ff8797          	auipc	a5,0xff8
    8fdc:	c7478793          	addi	a5,a5,-908 # 1000c4c <__malloc_free_list>
    8fe0:	0007a703          	lw	a4,0(a5)
    8fe4:	00070413          	mv	s0,a4
    8fe8:	08041463          	bnez	s0,9070 <_malloc_r+0xd8>
    8fec:	00ff8797          	auipc	a5,0xff8
    8ff0:	c6478793          	addi	a5,a5,-924 # 1000c50 <__malloc_sbrk_start>
    8ff4:	0007a783          	lw	a5,0(a5)
    8ff8:	00079e63          	bnez	a5,9014 <_malloc_r+0x7c>
    8ffc:	00000593          	li	a1,0
    9000:	00090513          	mv	a0,s2
    9004:	00000097          	auipc	ra,0x0
    9008:	67c080e7          	jalr	1660(ra) # 9680 <_sbrk_r>
    900c:	00ff8797          	auipc	a5,0xff8
    9010:	c4a7a223          	sw	a0,-956(a5) # 1000c50 <__malloc_sbrk_start>
    9014:	00048593          	mv	a1,s1
    9018:	00090513          	mv	a0,s2
    901c:	00000097          	auipc	ra,0x0
    9020:	664080e7          	jalr	1636(ra) # 9680 <_sbrk_r>
    9024:	fff00993          	li	s3,-1
    9028:	0d351063          	bne	a0,s3,90e8 <_malloc_r+0x150>
    902c:	00c00793          	li	a5,12
    9030:	00f92023          	sw	a5,0(s2)
    9034:	00090513          	mv	a0,s2
    9038:	00001097          	auipc	ra,0x1
    903c:	9e4080e7          	jalr	-1564(ra) # 9a1c <__malloc_unlock>
    9040:	0100006f          	j	9050 <_malloc_r+0xb8>
    9044:	f804d2e3          	bgez	s1,8fc8 <_malloc_r+0x30>
    9048:	00c00793          	li	a5,12
    904c:	00f52023          	sw	a5,0(a0)
    9050:	00000513          	li	a0,0
    9054:	01c12083          	lw	ra,28(sp)
    9058:	01812403          	lw	s0,24(sp)
    905c:	01412483          	lw	s1,20(sp)
    9060:	01012903          	lw	s2,16(sp)
    9064:	00c12983          	lw	s3,12(sp)
    9068:	02010113          	addi	sp,sp,32
    906c:	00008067          	ret
    9070:	00042783          	lw	a5,0(s0)
    9074:	409787b3          	sub	a5,a5,s1
    9078:	0607c263          	bltz	a5,90dc <_malloc_r+0x144>
    907c:	00b00693          	li	a3,11
    9080:	00f6fa63          	bgeu	a3,a5,9094 <_malloc_r+0xfc>
    9084:	00f42023          	sw	a5,0(s0)
    9088:	00f40433          	add	s0,s0,a5
    908c:	00942023          	sw	s1,0(s0)
    9090:	0140006f          	j	90a4 <_malloc_r+0x10c>
    9094:	00442783          	lw	a5,4(s0)
    9098:	02871e63          	bne	a4,s0,90d4 <_malloc_r+0x13c>
    909c:	00ff8717          	auipc	a4,0xff8
    90a0:	baf72823          	sw	a5,-1104(a4) # 1000c4c <__malloc_free_list>
    90a4:	00090513          	mv	a0,s2
    90a8:	00001097          	auipc	ra,0x1
    90ac:	974080e7          	jalr	-1676(ra) # 9a1c <__malloc_unlock>
    90b0:	00b40513          	addi	a0,s0,11
    90b4:	00440793          	addi	a5,s0,4
    90b8:	ff857513          	andi	a0,a0,-8
    90bc:	40f50733          	sub	a4,a0,a5
    90c0:	f8070ae3          	beqz	a4,9054 <_malloc_r+0xbc>
    90c4:	00e40433          	add	s0,s0,a4
    90c8:	40a787b3          	sub	a5,a5,a0
    90cc:	00f42023          	sw	a5,0(s0)
    90d0:	f85ff06f          	j	9054 <_malloc_r+0xbc>
    90d4:	00f72223          	sw	a5,4(a4)
    90d8:	fcdff06f          	j	90a4 <_malloc_r+0x10c>
    90dc:	00040713          	mv	a4,s0
    90e0:	00442403          	lw	s0,4(s0)
    90e4:	f05ff06f          	j	8fe8 <_malloc_r+0x50>
    90e8:	00350413          	addi	s0,a0,3
    90ec:	ffc47413          	andi	s0,s0,-4
    90f0:	f8850ee3          	beq	a0,s0,908c <_malloc_r+0xf4>
    90f4:	40a405b3          	sub	a1,s0,a0
    90f8:	00090513          	mv	a0,s2
    90fc:	00000097          	auipc	ra,0x0
    9100:	584080e7          	jalr	1412(ra) # 9680 <_sbrk_r>
    9104:	f93514e3          	bne	a0,s3,908c <_malloc_r+0xf4>
    9108:	f25ff06f          	j	902c <_malloc_r+0x94>

0000910c <__sfputc_r>:
    910c:	00862783          	lw	a5,8(a2)
    9110:	fff78793          	addi	a5,a5,-1
    9114:	00f62423          	sw	a5,8(a2)
    9118:	0007de63          	bgez	a5,9134 <__sfputc_r+0x28>
    911c:	01862703          	lw	a4,24(a2)
    9120:	00e7c663          	blt	a5,a4,912c <__sfputc_r+0x20>
    9124:	00a00793          	li	a5,10
    9128:	00f59663          	bne	a1,a5,9134 <__sfputc_r+0x28>
    912c:	ffffd317          	auipc	t1,0xffffd
    9130:	fac30067          	jr	-84(t1) # 60d8 <__swbuf_r>
    9134:	00062783          	lw	a5,0(a2)
    9138:	00058513          	mv	a0,a1
    913c:	00178713          	addi	a4,a5,1
    9140:	00e62023          	sw	a4,0(a2)
    9144:	00b78023          	sb	a1,0(a5)
    9148:	00008067          	ret

0000914c <__sfputs_r>:
    914c:	fe010113          	addi	sp,sp,-32
    9150:	00812c23          	sw	s0,24(sp)
    9154:	00912a23          	sw	s1,20(sp)
    9158:	01212823          	sw	s2,16(sp)
    915c:	01312623          	sw	s3,12(sp)
    9160:	01412423          	sw	s4,8(sp)
    9164:	00112e23          	sw	ra,28(sp)
    9168:	00050913          	mv	s2,a0
    916c:	00058993          	mv	s3,a1
    9170:	00060413          	mv	s0,a2
    9174:	00d604b3          	add	s1,a2,a3
    9178:	fff00a13          	li	s4,-1
    917c:	00941663          	bne	s0,s1,9188 <__sfputs_r+0x3c>
    9180:	00000513          	li	a0,0
    9184:	0200006f          	j	91a4 <__sfputs_r+0x58>
    9188:	00044583          	lbu	a1,0(s0)
    918c:	00098613          	mv	a2,s3
    9190:	00090513          	mv	a0,s2
    9194:	00000097          	auipc	ra,0x0
    9198:	f78080e7          	jalr	-136(ra) # 910c <__sfputc_r>
    919c:	00140413          	addi	s0,s0,1
    91a0:	fd451ee3          	bne	a0,s4,917c <__sfputs_r+0x30>
    91a4:	01c12083          	lw	ra,28(sp)
    91a8:	01812403          	lw	s0,24(sp)
    91ac:	01412483          	lw	s1,20(sp)
    91b0:	01012903          	lw	s2,16(sp)
    91b4:	00c12983          	lw	s3,12(sp)
    91b8:	00812a03          	lw	s4,8(sp)
    91bc:	02010113          	addi	sp,sp,32
    91c0:	00008067          	ret

000091c4 <_vfiprintf_r>:
    91c4:	f6010113          	addi	sp,sp,-160
    91c8:	08812c23          	sw	s0,152(sp)
    91cc:	08912a23          	sw	s1,148(sp)
    91d0:	09212823          	sw	s2,144(sp)
    91d4:	09312623          	sw	s3,140(sp)
    91d8:	08112e23          	sw	ra,156(sp)
    91dc:	09412423          	sw	s4,136(sp)
    91e0:	09512223          	sw	s5,132(sp)
    91e4:	09612023          	sw	s6,128(sp)
    91e8:	07712e23          	sw	s7,124(sp)
    91ec:	07812c23          	sw	s8,120(sp)
    91f0:	07912a23          	sw	s9,116(sp)
    91f4:	00050993          	mv	s3,a0
    91f8:	00058493          	mv	s1,a1
    91fc:	00060913          	mv	s2,a2
    9200:	00068413          	mv	s0,a3
    9204:	00050a63          	beqz	a0,9218 <_vfiprintf_r+0x54>
    9208:	01852783          	lw	a5,24(a0)
    920c:	00079663          	bnez	a5,9218 <_vfiprintf_r+0x54>
    9210:	fffff097          	auipc	ra,0xfffff
    9214:	ae0080e7          	jalr	-1312(ra) # 7cf0 <__sinit>
    9218:	00ff7797          	auipc	a5,0xff7
    921c:	5e878793          	addi	a5,a5,1512 # 1000800 <__sf_fake_stdin>
    9220:	12f49663          	bne	s1,a5,934c <_vfiprintf_r+0x188>
    9224:	0049a483          	lw	s1,4(s3)
    9228:	00c4d783          	lhu	a5,12(s1)
    922c:	0087f793          	andi	a5,a5,8
    9230:	14078263          	beqz	a5,9374 <_vfiprintf_r+0x1b0>
    9234:	0104a783          	lw	a5,16(s1)
    9238:	12078e63          	beqz	a5,9374 <_vfiprintf_r+0x1b0>
    923c:	02000793          	li	a5,32
    9240:	02f104a3          	sb	a5,41(sp)
    9244:	03000793          	li	a5,48
    9248:	02012223          	sw	zero,36(sp)
    924c:	02f10523          	sb	a5,42(sp)
    9250:	00812623          	sw	s0,12(sp)
    9254:	02500b13          	li	s6,37
    9258:	00ff7a97          	auipc	s5,0xff7
    925c:	6e4a8a93          	addi	s5,s5,1764 # 100093c <p05.3319+0xc>
    9260:	00100b93          	li	s7,1
    9264:	ffffcc17          	auipc	s8,0xffffc
    9268:	ea4c0c13          	addi	s8,s8,-348 # 5108 <_printf_float>
    926c:	00090413          	mv	s0,s2
    9270:	00044783          	lbu	a5,0(s0)
    9274:	00078463          	beqz	a5,927c <_vfiprintf_r+0xb8>
    9278:	15679463          	bne	a5,s6,93c0 <_vfiprintf_r+0x1fc>
    927c:	41240cb3          	sub	s9,s0,s2
    9280:	020c8863          	beqz	s9,92b0 <_vfiprintf_r+0xec>
    9284:	000c8693          	mv	a3,s9
    9288:	00090613          	mv	a2,s2
    928c:	00048593          	mv	a1,s1
    9290:	00098513          	mv	a0,s3
    9294:	00000097          	auipc	ra,0x0
    9298:	eb8080e7          	jalr	-328(ra) # 914c <__sfputs_r>
    929c:	fff00793          	li	a5,-1
    92a0:	2cf50e63          	beq	a0,a5,957c <_vfiprintf_r+0x3b8>
    92a4:	02412683          	lw	a3,36(sp)
    92a8:	019686b3          	add	a3,a3,s9
    92ac:	02d12223          	sw	a3,36(sp)
    92b0:	00044783          	lbu	a5,0(s0)
    92b4:	2c078463          	beqz	a5,957c <_vfiprintf_r+0x3b8>
    92b8:	fff00793          	li	a5,-1
    92bc:	00140913          	addi	s2,s0,1
    92c0:	00012823          	sw	zero,16(sp)
    92c4:	00012e23          	sw	zero,28(sp)
    92c8:	00f12a23          	sw	a5,20(sp)
    92cc:	00012c23          	sw	zero,24(sp)
    92d0:	040109a3          	sb	zero,83(sp)
    92d4:	06012423          	sw	zero,104(sp)
    92d8:	00094583          	lbu	a1,0(s2)
    92dc:	00500613          	li	a2,5
    92e0:	000a8513          	mv	a0,s5
    92e4:	fffff097          	auipc	ra,0xfffff
    92e8:	e50080e7          	jalr	-432(ra) # 8134 <memchr>
    92ec:	00190413          	addi	s0,s2,1
    92f0:	01012783          	lw	a5,16(sp)
    92f4:	0c051a63          	bnez	a0,93c8 <_vfiprintf_r+0x204>
    92f8:	0107f713          	andi	a4,a5,16
    92fc:	00070663          	beqz	a4,9308 <_vfiprintf_r+0x144>
    9300:	02000713          	li	a4,32
    9304:	04e109a3          	sb	a4,83(sp)
    9308:	0087f713          	andi	a4,a5,8
    930c:	00070663          	beqz	a4,9318 <_vfiprintf_r+0x154>
    9310:	02b00713          	li	a4,43
    9314:	04e109a3          	sb	a4,83(sp)
    9318:	00094683          	lbu	a3,0(s2)
    931c:	02a00713          	li	a4,42
    9320:	0ce68063          	beq	a3,a4,93e0 <_vfiprintf_r+0x21c>
    9324:	01c12703          	lw	a4,28(sp)
    9328:	00090413          	mv	s0,s2
    932c:	00000793          	li	a5,0
    9330:	00900613          	li	a2,9
    9334:	00044683          	lbu	a3,0(s0)
    9338:	00140593          	addi	a1,s0,1
    933c:	fd068693          	addi	a3,a3,-48
    9340:	18d67863          	bgeu	a2,a3,94d0 <_vfiprintf_r+0x30c>
    9344:	0a079863          	bnez	a5,93f4 <_vfiprintf_r+0x230>
    9348:	0c40006f          	j	940c <_vfiprintf_r+0x248>
    934c:	00ff7797          	auipc	a5,0xff7
    9350:	4d478793          	addi	a5,a5,1236 # 1000820 <__sf_fake_stdout>
    9354:	00f49663          	bne	s1,a5,9360 <_vfiprintf_r+0x19c>
    9358:	0089a483          	lw	s1,8(s3)
    935c:	ecdff06f          	j	9228 <_vfiprintf_r+0x64>
    9360:	00ff7797          	auipc	a5,0xff7
    9364:	48078793          	addi	a5,a5,1152 # 10007e0 <__sf_fake_stderr>
    9368:	ecf490e3          	bne	s1,a5,9228 <_vfiprintf_r+0x64>
    936c:	00c9a483          	lw	s1,12(s3)
    9370:	eb9ff06f          	j	9228 <_vfiprintf_r+0x64>
    9374:	00048593          	mv	a1,s1
    9378:	00098513          	mv	a0,s3
    937c:	ffffd097          	auipc	ra,0xffffd
    9380:	ea4080e7          	jalr	-348(ra) # 6220 <__swsetup_r>
    9384:	ea050ce3          	beqz	a0,923c <_vfiprintf_r+0x78>
    9388:	fff00513          	li	a0,-1
    938c:	09c12083          	lw	ra,156(sp)
    9390:	09812403          	lw	s0,152(sp)
    9394:	09412483          	lw	s1,148(sp)
    9398:	09012903          	lw	s2,144(sp)
    939c:	08c12983          	lw	s3,140(sp)
    93a0:	08812a03          	lw	s4,136(sp)
    93a4:	08412a83          	lw	s5,132(sp)
    93a8:	08012b03          	lw	s6,128(sp)
    93ac:	07c12b83          	lw	s7,124(sp)
    93b0:	07812c03          	lw	s8,120(sp)
    93b4:	07412c83          	lw	s9,116(sp)
    93b8:	0a010113          	addi	sp,sp,160
    93bc:	00008067          	ret
    93c0:	00140413          	addi	s0,s0,1
    93c4:	eadff06f          	j	9270 <_vfiprintf_r+0xac>
    93c8:	41550533          	sub	a0,a0,s5
    93cc:	00ab9533          	sll	a0,s7,a0
    93d0:	00a7e7b3          	or	a5,a5,a0
    93d4:	00f12823          	sw	a5,16(sp)
    93d8:	00040913          	mv	s2,s0
    93dc:	efdff06f          	j	92d8 <_vfiprintf_r+0x114>
    93e0:	00c12703          	lw	a4,12(sp)
    93e4:	00470693          	addi	a3,a4,4
    93e8:	00072703          	lw	a4,0(a4)
    93ec:	00d12623          	sw	a3,12(sp)
    93f0:	00074663          	bltz	a4,93fc <_vfiprintf_r+0x238>
    93f4:	00e12e23          	sw	a4,28(sp)
    93f8:	0140006f          	j	940c <_vfiprintf_r+0x248>
    93fc:	40e00733          	neg	a4,a4
    9400:	0027e793          	ori	a5,a5,2
    9404:	00e12e23          	sw	a4,28(sp)
    9408:	00f12823          	sw	a5,16(sp)
    940c:	00044703          	lbu	a4,0(s0)
    9410:	02e00793          	li	a5,46
    9414:	02f71663          	bne	a4,a5,9440 <_vfiprintf_r+0x27c>
    9418:	00144703          	lbu	a4,1(s0)
    941c:	02a00793          	li	a5,42
    9420:	0cf71a63          	bne	a4,a5,94f4 <_vfiprintf_r+0x330>
    9424:	00c12783          	lw	a5,12(sp)
    9428:	00240413          	addi	s0,s0,2
    942c:	00478713          	addi	a4,a5,4
    9430:	0007a783          	lw	a5,0(a5)
    9434:	00e12623          	sw	a4,12(sp)
    9438:	0a07ca63          	bltz	a5,94ec <_vfiprintf_r+0x328>
    943c:	00f12a23          	sw	a5,20(sp)
    9440:	00044583          	lbu	a1,0(s0)
    9444:	00300613          	li	a2,3
    9448:	00ff7517          	auipc	a0,0xff7
    944c:	4fc50513          	addi	a0,a0,1276 # 1000944 <p05.3319+0x14>
    9450:	fffff097          	auipc	ra,0xfffff
    9454:	ce4080e7          	jalr	-796(ra) # 8134 <memchr>
    9458:	02050463          	beqz	a0,9480 <_vfiprintf_r+0x2bc>
    945c:	00ff7797          	auipc	a5,0xff7
    9460:	4e878793          	addi	a5,a5,1256 # 1000944 <p05.3319+0x14>
    9464:	40f50533          	sub	a0,a0,a5
    9468:	04000793          	li	a5,64
    946c:	00a797b3          	sll	a5,a5,a0
    9470:	01012503          	lw	a0,16(sp)
    9474:	00140413          	addi	s0,s0,1
    9478:	00f56533          	or	a0,a0,a5
    947c:	00a12823          	sw	a0,16(sp)
    9480:	00044583          	lbu	a1,0(s0)
    9484:	00600613          	li	a2,6
    9488:	00ff7517          	auipc	a0,0xff7
    948c:	4c050513          	addi	a0,a0,1216 # 1000948 <p05.3319+0x18>
    9490:	00140913          	addi	s2,s0,1
    9494:	02b10423          	sb	a1,40(sp)
    9498:	fffff097          	auipc	ra,0xfffff
    949c:	c9c080e7          	jalr	-868(ra) # 8134 <memchr>
    94a0:	0e050863          	beqz	a0,9590 <_vfiprintf_r+0x3cc>
    94a4:	0a0c1663          	bnez	s8,9550 <_vfiprintf_r+0x38c>
    94a8:	01012703          	lw	a4,16(sp)
    94ac:	00c12783          	lw	a5,12(sp)
    94b0:	10077713          	andi	a4,a4,256
    94b4:	08070663          	beqz	a4,9540 <_vfiprintf_r+0x37c>
    94b8:	00478793          	addi	a5,a5,4
    94bc:	00f12623          	sw	a5,12(sp)
    94c0:	02412783          	lw	a5,36(sp)
    94c4:	014787b3          	add	a5,a5,s4
    94c8:	02f12223          	sw	a5,36(sp)
    94cc:	da1ff06f          	j	926c <_vfiprintf_r+0xa8>
    94d0:	00271793          	slli	a5,a4,0x2
    94d4:	00e787b3          	add	a5,a5,a4
    94d8:	00179793          	slli	a5,a5,0x1
    94dc:	00d78733          	add	a4,a5,a3
    94e0:	00058413          	mv	s0,a1
    94e4:	00100793          	li	a5,1
    94e8:	e4dff06f          	j	9334 <_vfiprintf_r+0x170>
    94ec:	fff00793          	li	a5,-1
    94f0:	f4dff06f          	j	943c <_vfiprintf_r+0x278>
    94f4:	00140413          	addi	s0,s0,1
    94f8:	00012a23          	sw	zero,20(sp)
    94fc:	00000793          	li	a5,0
    9500:	00000713          	li	a4,0
    9504:	00900613          	li	a2,9
    9508:	00044683          	lbu	a3,0(s0)
    950c:	00140593          	addi	a1,s0,1
    9510:	fd068693          	addi	a3,a3,-48
    9514:	00d67863          	bgeu	a2,a3,9524 <_vfiprintf_r+0x360>
    9518:	f20784e3          	beqz	a5,9440 <_vfiprintf_r+0x27c>
    951c:	00e12a23          	sw	a4,20(sp)
    9520:	f21ff06f          	j	9440 <_vfiprintf_r+0x27c>
    9524:	00271793          	slli	a5,a4,0x2
    9528:	00e787b3          	add	a5,a5,a4
    952c:	00179793          	slli	a5,a5,0x1
    9530:	00d78733          	add	a4,a5,a3
    9534:	00058413          	mv	s0,a1
    9538:	00100793          	li	a5,1
    953c:	fcdff06f          	j	9508 <_vfiprintf_r+0x344>
    9540:	00778793          	addi	a5,a5,7
    9544:	ff87f793          	andi	a5,a5,-8
    9548:	00878793          	addi	a5,a5,8
    954c:	f71ff06f          	j	94bc <_vfiprintf_r+0x2f8>
    9550:	00c10713          	addi	a4,sp,12
    9554:	00000697          	auipc	a3,0x0
    9558:	bf868693          	addi	a3,a3,-1032 # 914c <__sfputs_r>
    955c:	00048613          	mv	a2,s1
    9560:	01010593          	addi	a1,sp,16
    9564:	00098513          	mv	a0,s3
    9568:	ffffc097          	auipc	ra,0xffffc
    956c:	ba0080e7          	jalr	-1120(ra) # 5108 <_printf_float>
    9570:	fff00793          	li	a5,-1
    9574:	00050a13          	mv	s4,a0
    9578:	f4f514e3          	bne	a0,a5,94c0 <_vfiprintf_r+0x2fc>
    957c:	00c4d783          	lhu	a5,12(s1)
    9580:	0407f793          	andi	a5,a5,64
    9584:	e00792e3          	bnez	a5,9388 <_vfiprintf_r+0x1c4>
    9588:	02412503          	lw	a0,36(sp)
    958c:	e01ff06f          	j	938c <_vfiprintf_r+0x1c8>
    9590:	00c10713          	addi	a4,sp,12
    9594:	00000697          	auipc	a3,0x0
    9598:	bb868693          	addi	a3,a3,-1096 # 914c <__sfputs_r>
    959c:	00048613          	mv	a2,s1
    95a0:	01010593          	addi	a1,sp,16
    95a4:	00098513          	mv	a0,s3
    95a8:	ffffc097          	auipc	ra,0xffffc
    95ac:	4c0080e7          	jalr	1216(ra) # 5a68 <_printf_i>
    95b0:	fc1ff06f          	j	9570 <_vfiprintf_r+0x3ac>

000095b4 <_putc_r>:
    95b4:	fe010113          	addi	sp,sp,-32
    95b8:	00812c23          	sw	s0,24(sp)
    95bc:	00112e23          	sw	ra,28(sp)
    95c0:	00050413          	mv	s0,a0
    95c4:	02050263          	beqz	a0,95e8 <_putc_r+0x34>
    95c8:	01852783          	lw	a5,24(a0)
    95cc:	00079e63          	bnez	a5,95e8 <_putc_r+0x34>
    95d0:	00c12623          	sw	a2,12(sp)
    95d4:	00b12423          	sw	a1,8(sp)
    95d8:	ffffe097          	auipc	ra,0xffffe
    95dc:	718080e7          	jalr	1816(ra) # 7cf0 <__sinit>
    95e0:	00c12603          	lw	a2,12(sp)
    95e4:	00812583          	lw	a1,8(sp)
    95e8:	00ff7797          	auipc	a5,0xff7
    95ec:	21878793          	addi	a5,a5,536 # 1000800 <__sf_fake_stdin>
    95f0:	04f61263          	bne	a2,a5,9634 <_putc_r+0x80>
    95f4:	00442603          	lw	a2,4(s0)
    95f8:	00862783          	lw	a5,8(a2)
    95fc:	fff78793          	addi	a5,a5,-1
    9600:	00f62423          	sw	a5,8(a2)
    9604:	0407dc63          	bgez	a5,965c <_putc_r+0xa8>
    9608:	01862703          	lw	a4,24(a2)
    960c:	00e7c863          	blt	a5,a4,961c <_putc_r+0x68>
    9610:	0ff5f793          	andi	a5,a1,255
    9614:	00a00713          	li	a4,10
    9618:	04e79263          	bne	a5,a4,965c <_putc_r+0xa8>
    961c:	00040513          	mv	a0,s0
    9620:	01812403          	lw	s0,24(sp)
    9624:	01c12083          	lw	ra,28(sp)
    9628:	02010113          	addi	sp,sp,32
    962c:	ffffd317          	auipc	t1,0xffffd
    9630:	aac30067          	jr	-1364(t1) # 60d8 <__swbuf_r>
    9634:	00ff7797          	auipc	a5,0xff7
    9638:	1ec78793          	addi	a5,a5,492 # 1000820 <__sf_fake_stdout>
    963c:	00f61663          	bne	a2,a5,9648 <_putc_r+0x94>
    9640:	00842603          	lw	a2,8(s0)
    9644:	fb5ff06f          	j	95f8 <_putc_r+0x44>
    9648:	00ff7797          	auipc	a5,0xff7
    964c:	19878793          	addi	a5,a5,408 # 10007e0 <__sf_fake_stderr>
    9650:	faf614e3          	bne	a2,a5,95f8 <_putc_r+0x44>
    9654:	00c42603          	lw	a2,12(s0)
    9658:	fa1ff06f          	j	95f8 <_putc_r+0x44>
    965c:	00062783          	lw	a5,0(a2)
    9660:	0ff5f513          	andi	a0,a1,255
    9664:	00178713          	addi	a4,a5,1
    9668:	00e62023          	sw	a4,0(a2)
    966c:	00b78023          	sb	a1,0(a5)
    9670:	01c12083          	lw	ra,28(sp)
    9674:	01812403          	lw	s0,24(sp)
    9678:	02010113          	addi	sp,sp,32
    967c:	00008067          	ret

00009680 <_sbrk_r>:
    9680:	ff010113          	addi	sp,sp,-16
    9684:	00812423          	sw	s0,8(sp)
    9688:	00050413          	mv	s0,a0
    968c:	00058513          	mv	a0,a1
    9690:	00ff7797          	auipc	a5,0xff7
    9694:	5c07ac23          	sw	zero,1496(a5) # 1000c68 <errno>
    9698:	00112623          	sw	ra,12(sp)
    969c:	00002097          	auipc	ra,0x2
    96a0:	a98080e7          	jalr	-1384(ra) # b134 <_sbrk>
    96a4:	fff00793          	li	a5,-1
    96a8:	00f51c63          	bne	a0,a5,96c0 <_sbrk_r+0x40>
    96ac:	00ff7797          	auipc	a5,0xff7
    96b0:	5bc78793          	addi	a5,a5,1468 # 1000c68 <errno>
    96b4:	0007a783          	lw	a5,0(a5)
    96b8:	00078463          	beqz	a5,96c0 <_sbrk_r+0x40>
    96bc:	00f42023          	sw	a5,0(s0)
    96c0:	00c12083          	lw	ra,12(sp)
    96c4:	00812403          	lw	s0,8(sp)
    96c8:	01010113          	addi	sp,sp,16
    96cc:	00008067          	ret

000096d0 <__sread>:
    96d0:	ff010113          	addi	sp,sp,-16
    96d4:	00812423          	sw	s0,8(sp)
    96d8:	00058413          	mv	s0,a1
    96dc:	00e59583          	lh	a1,14(a1)
    96e0:	00112623          	sw	ra,12(sp)
    96e4:	00000097          	auipc	ra,0x0
    96e8:	33c080e7          	jalr	828(ra) # 9a20 <_read_r>
    96ec:	02054063          	bltz	a0,970c <__sread+0x3c>
    96f0:	05442783          	lw	a5,84(s0)
    96f4:	00a787b3          	add	a5,a5,a0
    96f8:	04f42a23          	sw	a5,84(s0)
    96fc:	00c12083          	lw	ra,12(sp)
    9700:	00812403          	lw	s0,8(sp)
    9704:	01010113          	addi	sp,sp,16
    9708:	00008067          	ret
    970c:	00c45783          	lhu	a5,12(s0)
    9710:	fffff737          	lui	a4,0xfffff
    9714:	fff70713          	addi	a4,a4,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    9718:	00e7f7b3          	and	a5,a5,a4
    971c:	00f41623          	sh	a5,12(s0)
    9720:	fddff06f          	j	96fc <__sread+0x2c>

00009724 <__swrite>:
    9724:	00c5d783          	lhu	a5,12(a1)
    9728:	fe010113          	addi	sp,sp,-32
    972c:	00812c23          	sw	s0,24(sp)
    9730:	00912a23          	sw	s1,20(sp)
    9734:	01212823          	sw	s2,16(sp)
    9738:	01312623          	sw	s3,12(sp)
    973c:	00112e23          	sw	ra,28(sp)
    9740:	1007f793          	andi	a5,a5,256
    9744:	00050493          	mv	s1,a0
    9748:	00058413          	mv	s0,a1
    974c:	00060913          	mv	s2,a2
    9750:	00068993          	mv	s3,a3
    9754:	00078c63          	beqz	a5,976c <__swrite+0x48>
    9758:	00e59583          	lh	a1,14(a1)
    975c:	00200693          	li	a3,2
    9760:	00000613          	li	a2,0
    9764:	00000097          	auipc	ra,0x0
    9768:	200080e7          	jalr	512(ra) # 9964 <_lseek_r>
    976c:	00c45783          	lhu	a5,12(s0)
    9770:	fffff737          	lui	a4,0xfffff
    9774:	fff70713          	addi	a4,a4,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    9778:	00e7f7b3          	and	a5,a5,a4
    977c:	00f41623          	sh	a5,12(s0)
    9780:	00e41583          	lh	a1,14(s0)
    9784:	01812403          	lw	s0,24(sp)
    9788:	01c12083          	lw	ra,28(sp)
    978c:	00098693          	mv	a3,s3
    9790:	00090613          	mv	a2,s2
    9794:	00c12983          	lw	s3,12(sp)
    9798:	01012903          	lw	s2,16(sp)
    979c:	00048513          	mv	a0,s1
    97a0:	01412483          	lw	s1,20(sp)
    97a4:	02010113          	addi	sp,sp,32
    97a8:	00000317          	auipc	t1,0x0
    97ac:	07030067          	jr	112(t1) # 9818 <_write_r>

000097b0 <__sseek>:
    97b0:	ff010113          	addi	sp,sp,-16
    97b4:	00812423          	sw	s0,8(sp)
    97b8:	00058413          	mv	s0,a1
    97bc:	00e59583          	lh	a1,14(a1)
    97c0:	00112623          	sw	ra,12(sp)
    97c4:	00000097          	auipc	ra,0x0
    97c8:	1a0080e7          	jalr	416(ra) # 9964 <_lseek_r>
    97cc:	fff00793          	li	a5,-1
    97d0:	00c45703          	lhu	a4,12(s0)
    97d4:	02f51263          	bne	a0,a5,97f8 <__sseek+0x48>
    97d8:	fffff7b7          	lui	a5,0xfffff
    97dc:	fff78793          	addi	a5,a5,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    97e0:	00e7f7b3          	and	a5,a5,a4
    97e4:	00f41623          	sh	a5,12(s0)
    97e8:	00c12083          	lw	ra,12(sp)
    97ec:	00812403          	lw	s0,8(sp)
    97f0:	01010113          	addi	sp,sp,16
    97f4:	00008067          	ret
    97f8:	000017b7          	lui	a5,0x1
    97fc:	00f767b3          	or	a5,a4,a5
    9800:	00f41623          	sh	a5,12(s0)
    9804:	04a42a23          	sw	a0,84(s0)
    9808:	fe1ff06f          	j	97e8 <__sseek+0x38>

0000980c <__sclose>:
    980c:	00e59583          	lh	a1,14(a1)
    9810:	00000317          	auipc	t1,0x0
    9814:	06030067          	jr	96(t1) # 9870 <_close_r>

00009818 <_write_r>:
    9818:	ff010113          	addi	sp,sp,-16
    981c:	00812423          	sw	s0,8(sp)
    9820:	00050413          	mv	s0,a0
    9824:	00058513          	mv	a0,a1
    9828:	00060593          	mv	a1,a2
    982c:	00068613          	mv	a2,a3
    9830:	00ff7797          	auipc	a5,0xff7
    9834:	4207ac23          	sw	zero,1080(a5) # 1000c68 <errno>
    9838:	00112623          	sw	ra,12(sp)
    983c:	ffffa097          	auipc	ra,0xffffa
    9840:	9d0080e7          	jalr	-1584(ra) # 320c <_write>
    9844:	fff00793          	li	a5,-1
    9848:	00f51c63          	bne	a0,a5,9860 <_write_r+0x48>
    984c:	00ff7797          	auipc	a5,0xff7
    9850:	41c78793          	addi	a5,a5,1052 # 1000c68 <errno>
    9854:	0007a783          	lw	a5,0(a5)
    9858:	00078463          	beqz	a5,9860 <_write_r+0x48>
    985c:	00f42023          	sw	a5,0(s0)
    9860:	00c12083          	lw	ra,12(sp)
    9864:	00812403          	lw	s0,8(sp)
    9868:	01010113          	addi	sp,sp,16
    986c:	00008067          	ret

00009870 <_close_r>:
    9870:	ff010113          	addi	sp,sp,-16
    9874:	00812423          	sw	s0,8(sp)
    9878:	00050413          	mv	s0,a0
    987c:	00058513          	mv	a0,a1
    9880:	00ff7797          	auipc	a5,0xff7
    9884:	3e07a423          	sw	zero,1000(a5) # 1000c68 <errno>
    9888:	00112623          	sw	ra,12(sp)
    988c:	00002097          	auipc	ra,0x2
    9890:	844080e7          	jalr	-1980(ra) # b0d0 <_close>
    9894:	fff00793          	li	a5,-1
    9898:	00f51c63          	bne	a0,a5,98b0 <_close_r+0x40>
    989c:	00ff7797          	auipc	a5,0xff7
    98a0:	3cc78793          	addi	a5,a5,972 # 1000c68 <errno>
    98a4:	0007a783          	lw	a5,0(a5)
    98a8:	00078463          	beqz	a5,98b0 <_close_r+0x40>
    98ac:	00f42023          	sw	a5,0(s0)
    98b0:	00c12083          	lw	ra,12(sp)
    98b4:	00812403          	lw	s0,8(sp)
    98b8:	01010113          	addi	sp,sp,16
    98bc:	00008067          	ret

000098c0 <_fstat_r>:
    98c0:	ff010113          	addi	sp,sp,-16
    98c4:	00812423          	sw	s0,8(sp)
    98c8:	00050413          	mv	s0,a0
    98cc:	00058513          	mv	a0,a1
    98d0:	00060593          	mv	a1,a2
    98d4:	00ff7797          	auipc	a5,0xff7
    98d8:	3807aa23          	sw	zero,916(a5) # 1000c68 <errno>
    98dc:	00112623          	sw	ra,12(sp)
    98e0:	00002097          	auipc	ra,0x2
    98e4:	804080e7          	jalr	-2044(ra) # b0e4 <_fstat>
    98e8:	fff00793          	li	a5,-1
    98ec:	00f51c63          	bne	a0,a5,9904 <_fstat_r+0x44>
    98f0:	00ff7797          	auipc	a5,0xff7
    98f4:	37878793          	addi	a5,a5,888 # 1000c68 <errno>
    98f8:	0007a783          	lw	a5,0(a5)
    98fc:	00078463          	beqz	a5,9904 <_fstat_r+0x44>
    9900:	00f42023          	sw	a5,0(s0)
    9904:	00c12083          	lw	ra,12(sp)
    9908:	00812403          	lw	s0,8(sp)
    990c:	01010113          	addi	sp,sp,16
    9910:	00008067          	ret

00009914 <_isatty_r>:
    9914:	ff010113          	addi	sp,sp,-16
    9918:	00812423          	sw	s0,8(sp)
    991c:	00050413          	mv	s0,a0
    9920:	00058513          	mv	a0,a1
    9924:	00ff7797          	auipc	a5,0xff7
    9928:	3407a223          	sw	zero,836(a5) # 1000c68 <errno>
    992c:	00112623          	sw	ra,12(sp)
    9930:	00001097          	auipc	ra,0x1
    9934:	7c8080e7          	jalr	1992(ra) # b0f8 <_isatty>
    9938:	fff00793          	li	a5,-1
    993c:	00f51c63          	bne	a0,a5,9954 <_isatty_r+0x40>
    9940:	00ff7797          	auipc	a5,0xff7
    9944:	32878793          	addi	a5,a5,808 # 1000c68 <errno>
    9948:	0007a783          	lw	a5,0(a5)
    994c:	00078463          	beqz	a5,9954 <_isatty_r+0x40>
    9950:	00f42023          	sw	a5,0(s0)
    9954:	00c12083          	lw	ra,12(sp)
    9958:	00812403          	lw	s0,8(sp)
    995c:	01010113          	addi	sp,sp,16
    9960:	00008067          	ret

00009964 <_lseek_r>:
    9964:	ff010113          	addi	sp,sp,-16
    9968:	00812423          	sw	s0,8(sp)
    996c:	00050413          	mv	s0,a0
    9970:	00058513          	mv	a0,a1
    9974:	00060593          	mv	a1,a2
    9978:	00068613          	mv	a2,a3
    997c:	00ff7797          	auipc	a5,0xff7
    9980:	2e07a623          	sw	zero,748(a5) # 1000c68 <errno>
    9984:	00112623          	sw	ra,12(sp)
    9988:	00001097          	auipc	ra,0x1
    998c:	784080e7          	jalr	1924(ra) # b10c <_lseek>
    9990:	fff00793          	li	a5,-1
    9994:	00f51c63          	bne	a0,a5,99ac <_lseek_r+0x48>
    9998:	00ff7797          	auipc	a5,0xff7
    999c:	2d078793          	addi	a5,a5,720 # 1000c68 <errno>
    99a0:	0007a783          	lw	a5,0(a5)
    99a4:	00078463          	beqz	a5,99ac <_lseek_r+0x48>
    99a8:	00f42023          	sw	a5,0(s0)
    99ac:	00c12083          	lw	ra,12(sp)
    99b0:	00812403          	lw	s0,8(sp)
    99b4:	01010113          	addi	sp,sp,16
    99b8:	00008067          	ret

000099bc <__ascii_mbtowc>:
    99bc:	02059a63          	bnez	a1,99f0 <__ascii_mbtowc+0x34>
    99c0:	ff010113          	addi	sp,sp,-16
    99c4:	00c10593          	addi	a1,sp,12
    99c8:	00000513          	li	a0,0
    99cc:	00060e63          	beqz	a2,99e8 <__ascii_mbtowc+0x2c>
    99d0:	ffe00513          	li	a0,-2
    99d4:	00068a63          	beqz	a3,99e8 <__ascii_mbtowc+0x2c>
    99d8:	00064783          	lbu	a5,0(a2)
    99dc:	00f5a023          	sw	a5,0(a1)
    99e0:	00064503          	lbu	a0,0(a2)
    99e4:	00a03533          	snez	a0,a0
    99e8:	01010113          	addi	sp,sp,16
    99ec:	00008067          	ret
    99f0:	00000513          	li	a0,0
    99f4:	02060063          	beqz	a2,9a14 <__ascii_mbtowc+0x58>
    99f8:	ffe00513          	li	a0,-2
    99fc:	00068c63          	beqz	a3,9a14 <__ascii_mbtowc+0x58>
    9a00:	00064783          	lbu	a5,0(a2)
    9a04:	00f5a023          	sw	a5,0(a1)
    9a08:	00064503          	lbu	a0,0(a2)
    9a0c:	00a03533          	snez	a0,a0
    9a10:	00008067          	ret
    9a14:	00008067          	ret

00009a18 <__malloc_lock>:
    9a18:	00008067          	ret

00009a1c <__malloc_unlock>:
    9a1c:	00008067          	ret

00009a20 <_read_r>:
    9a20:	ff010113          	addi	sp,sp,-16
    9a24:	00812423          	sw	s0,8(sp)
    9a28:	00050413          	mv	s0,a0
    9a2c:	00058513          	mv	a0,a1
    9a30:	00060593          	mv	a1,a2
    9a34:	00068613          	mv	a2,a3
    9a38:	00ff7797          	auipc	a5,0xff7
    9a3c:	2207a823          	sw	zero,560(a5) # 1000c68 <errno>
    9a40:	00112623          	sw	ra,12(sp)
    9a44:	00001097          	auipc	ra,0x1
    9a48:	6dc080e7          	jalr	1756(ra) # b120 <_read>
    9a4c:	fff00793          	li	a5,-1
    9a50:	00f51c63          	bne	a0,a5,9a68 <_read_r+0x48>
    9a54:	00ff7797          	auipc	a5,0xff7
    9a58:	21478793          	addi	a5,a5,532 # 1000c68 <errno>
    9a5c:	0007a783          	lw	a5,0(a5)
    9a60:	00078463          	beqz	a5,9a68 <_read_r+0x48>
    9a64:	00f42023          	sw	a5,0(s0)
    9a68:	00c12083          	lw	ra,12(sp)
    9a6c:	00812403          	lw	s0,8(sp)
    9a70:	01010113          	addi	sp,sp,16
    9a74:	00008067          	ret

00009a78 <__ascii_wctomb>:
    9a78:	02058463          	beqz	a1,9aa0 <__ascii_wctomb+0x28>
    9a7c:	0ff00793          	li	a5,255
    9a80:	00c7fa63          	bgeu	a5,a2,9a94 <__ascii_wctomb+0x1c>
    9a84:	08a00793          	li	a5,138
    9a88:	00f52023          	sw	a5,0(a0)
    9a8c:	fff00513          	li	a0,-1
    9a90:	00008067          	ret
    9a94:	00c58023          	sb	a2,0(a1)
    9a98:	00100513          	li	a0,1
    9a9c:	00008067          	ret
    9aa0:	00000513          	li	a0,0
    9aa4:	00008067          	ret

00009aa8 <__adddf3>:
    9aa8:	00100837          	lui	a6,0x100
    9aac:	fe010113          	addi	sp,sp,-32
    9ab0:	fff80813          	addi	a6,a6,-1 # fffff <_data_lma+0xf4e87>
    9ab4:	00b87733          	and	a4,a6,a1
    9ab8:	00912a23          	sw	s1,20(sp)
    9abc:	00d87833          	and	a6,a6,a3
    9ac0:	0145d493          	srli	s1,a1,0x14
    9ac4:	0146d313          	srli	t1,a3,0x14
    9ac8:	00371e13          	slli	t3,a4,0x3
    9acc:	01312623          	sw	s3,12(sp)
    9ad0:	01d55713          	srli	a4,a0,0x1d
    9ad4:	00381813          	slli	a6,a6,0x3
    9ad8:	01d65793          	srli	a5,a2,0x1d
    9adc:	7ff4f493          	andi	s1,s1,2047
    9ae0:	7ff37313          	andi	t1,t1,2047
    9ae4:	00112e23          	sw	ra,28(sp)
    9ae8:	00812c23          	sw	s0,24(sp)
    9aec:	01212823          	sw	s2,16(sp)
    9af0:	01f5d993          	srli	s3,a1,0x1f
    9af4:	01f6de93          	srli	t4,a3,0x1f
    9af8:	01c76733          	or	a4,a4,t3
    9afc:	00351f13          	slli	t5,a0,0x3
    9b00:	0107e833          	or	a6,a5,a6
    9b04:	00361f93          	slli	t6,a2,0x3
    9b08:	40648e33          	sub	t3,s1,t1
    9b0c:	1dd98663          	beq	s3,t4,9cd8 <__adddf3+0x230>
    9b10:	17c05a63          	blez	t3,9c84 <__adddf3+0x1dc>
    9b14:	20030c63          	beqz	t1,9d2c <__adddf3+0x284>
    9b18:	008006b7          	lui	a3,0x800
    9b1c:	7ff00793          	li	a5,2047
    9b20:	00d86833          	or	a6,a6,a3
    9b24:	42f48263          	beq	s1,a5,9f48 <__adddf3+0x4a0>
    9b28:	03800793          	li	a5,56
    9b2c:	3dc7ce63          	blt	a5,t3,9f08 <__adddf3+0x460>
    9b30:	01f00793          	li	a5,31
    9b34:	55c7ca63          	blt	a5,t3,a088 <__adddf3+0x5e0>
    9b38:	02000513          	li	a0,32
    9b3c:	41c50533          	sub	a0,a0,t3
    9b40:	01cfd7b3          	srl	a5,t6,t3
    9b44:	00a816b3          	sll	a3,a6,a0
    9b48:	00af9933          	sll	s2,t6,a0
    9b4c:	00f6e6b3          	or	a3,a3,a5
    9b50:	01203933          	snez	s2,s2
    9b54:	01c857b3          	srl	a5,a6,t3
    9b58:	0126e933          	or	s2,a3,s2
    9b5c:	40f70733          	sub	a4,a4,a5
    9b60:	412f0933          	sub	s2,t5,s2
    9b64:	012f37b3          	sltu	a5,t5,s2
    9b68:	40f70633          	sub	a2,a4,a5
    9b6c:	00861793          	slli	a5,a2,0x8
    9b70:	2a07d463          	bgez	a5,9e18 <__adddf3+0x370>
    9b74:	00800737          	lui	a4,0x800
    9b78:	fff70713          	addi	a4,a4,-1 # 7fffff <_data_lma+0x7f4e87>
    9b7c:	00e67433          	and	s0,a2,a4
    9b80:	36040063          	beqz	s0,9ee0 <__adddf3+0x438>
    9b84:	00040513          	mv	a0,s0
    9b88:	ffffb097          	auipc	ra,0xffffb
    9b8c:	1ac080e7          	jalr	428(ra) # 4d34 <__clzsi2>
    9b90:	ff850713          	addi	a4,a0,-8
    9b94:	02000793          	li	a5,32
    9b98:	40e787b3          	sub	a5,a5,a4
    9b9c:	00f957b3          	srl	a5,s2,a5
    9ba0:	00e41633          	sll	a2,s0,a4
    9ba4:	00c7e7b3          	or	a5,a5,a2
    9ba8:	00e91933          	sll	s2,s2,a4
    9bac:	30974c63          	blt	a4,s1,9ec4 <__adddf3+0x41c>
    9bb0:	40970533          	sub	a0,a4,s1
    9bb4:	00150613          	addi	a2,a0,1
    9bb8:	01f00713          	li	a4,31
    9bbc:	44c74863          	blt	a4,a2,a00c <__adddf3+0x564>
    9bc0:	02000713          	li	a4,32
    9bc4:	40c70733          	sub	a4,a4,a2
    9bc8:	00c956b3          	srl	a3,s2,a2
    9bcc:	00e91933          	sll	s2,s2,a4
    9bd0:	00e79733          	sll	a4,a5,a4
    9bd4:	00d76733          	or	a4,a4,a3
    9bd8:	01203933          	snez	s2,s2
    9bdc:	01276933          	or	s2,a4,s2
    9be0:	00c7d633          	srl	a2,a5,a2
    9be4:	00000493          	li	s1,0
    9be8:	00797793          	andi	a5,s2,7
    9bec:	02078063          	beqz	a5,9c0c <__adddf3+0x164>
    9bf0:	00f97713          	andi	a4,s2,15
    9bf4:	00400793          	li	a5,4
    9bf8:	00f70a63          	beq	a4,a5,9c0c <__adddf3+0x164>
    9bfc:	00490713          	addi	a4,s2,4
    9c00:	01273933          	sltu	s2,a4,s2
    9c04:	01260633          	add	a2,a2,s2
    9c08:	00070913          	mv	s2,a4
    9c0c:	00861793          	slli	a5,a2,0x8
    9c10:	2007d863          	bgez	a5,9e20 <__adddf3+0x378>
    9c14:	00148513          	addi	a0,s1,1
    9c18:	7ff00793          	li	a5,2047
    9c1c:	00098593          	mv	a1,s3
    9c20:	24f50c63          	beq	a0,a5,9e78 <__adddf3+0x3d0>
    9c24:	ff8007b7          	lui	a5,0xff800
    9c28:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    9c2c:	00f677b3          	and	a5,a2,a5
    9c30:	01d79893          	slli	a7,a5,0x1d
    9c34:	00395913          	srli	s2,s2,0x3
    9c38:	00979793          	slli	a5,a5,0x9
    9c3c:	0128e8b3          	or	a7,a7,s2
    9c40:	00c7d793          	srli	a5,a5,0xc
    9c44:	7ff57513          	andi	a0,a0,2047
    9c48:	00c79693          	slli	a3,a5,0xc
    9c4c:	01451513          	slli	a0,a0,0x14
    9c50:	01c12083          	lw	ra,28(sp)
    9c54:	01812403          	lw	s0,24(sp)
    9c58:	00c6d693          	srli	a3,a3,0xc
    9c5c:	01f59593          	slli	a1,a1,0x1f
    9c60:	00a6e6b3          	or	a3,a3,a0
    9c64:	00b6e6b3          	or	a3,a3,a1
    9c68:	01412483          	lw	s1,20(sp)
    9c6c:	01012903          	lw	s2,16(sp)
    9c70:	00c12983          	lw	s3,12(sp)
    9c74:	00088513          	mv	a0,a7
    9c78:	00068593          	mv	a1,a3
    9c7c:	02010113          	addi	sp,sp,32
    9c80:	00008067          	ret
    9c84:	0c0e1463          	bnez	t3,9d4c <__adddf3+0x2a4>
    9c88:	00148313          	addi	t1,s1,1
    9c8c:	7fe37313          	andi	t1,t1,2046
    9c90:	28031263          	bnez	t1,9f14 <__adddf3+0x46c>
    9c94:	01e767b3          	or	a5,a4,t5
    9c98:	01f868b3          	or	a7,a6,t6
    9c9c:	1e049663          	bnez	s1,9e88 <__adddf3+0x3e0>
    9ca0:	4c078263          	beqz	a5,a164 <__adddf3+0x6bc>
    9ca4:	50088a63          	beqz	a7,a1b8 <__adddf3+0x710>
    9ca8:	41ff0933          	sub	s2,t5,t6
    9cac:	410707b3          	sub	a5,a4,a6
    9cb0:	012f3633          	sltu	a2,t5,s2
    9cb4:	40c78633          	sub	a2,a5,a2
    9cb8:	00861793          	slli	a5,a2,0x8
    9cbc:	5a07d663          	bgez	a5,a268 <__adddf3+0x7c0>
    9cc0:	41ef8933          	sub	s2,t6,t5
    9cc4:	40e807b3          	sub	a5,a6,a4
    9cc8:	012fb633          	sltu	a2,t6,s2
    9ccc:	40c78633          	sub	a2,a5,a2
    9cd0:	000e8993          	mv	s3,t4
    9cd4:	f15ff06f          	j	9be8 <__adddf3+0x140>
    9cd8:	0fc05a63          	blez	t3,9dcc <__adddf3+0x324>
    9cdc:	0c030863          	beqz	t1,9dac <__adddf3+0x304>
    9ce0:	008006b7          	lui	a3,0x800
    9ce4:	7ff00793          	li	a5,2047
    9ce8:	00d86833          	or	a6,a6,a3
    9cec:	46f48063          	beq	s1,a5,a14c <__adddf3+0x6a4>
    9cf0:	03800793          	li	a5,56
    9cf4:	15c7cc63          	blt	a5,t3,9e4c <__adddf3+0x3a4>
    9cf8:	01f00793          	li	a5,31
    9cfc:	3fc7dc63          	bge	a5,t3,a0f4 <__adddf3+0x64c>
    9d00:	fe0e0913          	addi	s2,t3,-32
    9d04:	02000793          	li	a5,32
    9d08:	012856b3          	srl	a3,a6,s2
    9d0c:	00fe0a63          	beq	t3,a5,9d20 <__adddf3+0x278>
    9d10:	04000913          	li	s2,64
    9d14:	41c90933          	sub	s2,s2,t3
    9d18:	01281933          	sll	s2,a6,s2
    9d1c:	012fefb3          	or	t6,t6,s2
    9d20:	01f03933          	snez	s2,t6
    9d24:	00d96933          	or	s2,s2,a3
    9d28:	12c0006f          	j	9e54 <__adddf3+0x3ac>
    9d2c:	01f867b3          	or	a5,a6,t6
    9d30:	22078863          	beqz	a5,9f60 <__adddf3+0x4b8>
    9d34:	fffe0793          	addi	a5,t3,-1
    9d38:	44078663          	beqz	a5,a184 <__adddf3+0x6dc>
    9d3c:	7ff00693          	li	a3,2047
    9d40:	20de0463          	beq	t3,a3,9f48 <__adddf3+0x4a0>
    9d44:	00078e13          	mv	t3,a5
    9d48:	de1ff06f          	j	9b28 <__adddf3+0x80>
    9d4c:	409305b3          	sub	a1,t1,s1
    9d50:	28049863          	bnez	s1,9fe0 <__adddf3+0x538>
    9d54:	01e767b3          	or	a5,a4,t5
    9d58:	3c078463          	beqz	a5,a120 <__adddf3+0x678>
    9d5c:	fff58793          	addi	a5,a1,-1
    9d60:	50078e63          	beqz	a5,a27c <__adddf3+0x7d4>
    9d64:	7ff00693          	li	a3,2047
    9d68:	28d58463          	beq	a1,a3,9ff0 <__adddf3+0x548>
    9d6c:	00078593          	mv	a1,a5
    9d70:	03800793          	li	a5,56
    9d74:	34b7c063          	blt	a5,a1,a0b4 <__adddf3+0x60c>
    9d78:	01f00793          	li	a5,31
    9d7c:	4ab7c463          	blt	a5,a1,a224 <__adddf3+0x77c>
    9d80:	02000793          	li	a5,32
    9d84:	40b787b3          	sub	a5,a5,a1
    9d88:	00f71933          	sll	s2,a4,a5
    9d8c:	00bf56b3          	srl	a3,t5,a1
    9d90:	00ff17b3          	sll	a5,t5,a5
    9d94:	00d96933          	or	s2,s2,a3
    9d98:	00f037b3          	snez	a5,a5
    9d9c:	00b75733          	srl	a4,a4,a1
    9da0:	00f96933          	or	s2,s2,a5
    9da4:	40e80833          	sub	a6,a6,a4
    9da8:	3140006f          	j	a0bc <__adddf3+0x614>
    9dac:	01f867b3          	or	a5,a6,t6
    9db0:	3e078663          	beqz	a5,a19c <__adddf3+0x6f4>
    9db4:	fffe0793          	addi	a5,t3,-1
    9db8:	28078463          	beqz	a5,a040 <__adddf3+0x598>
    9dbc:	7ff00693          	li	a3,2047
    9dc0:	38de0663          	beq	t3,a3,a14c <__adddf3+0x6a4>
    9dc4:	00078e13          	mv	t3,a5
    9dc8:	f29ff06f          	j	9cf0 <__adddf3+0x248>
    9dcc:	1a0e1863          	bnez	t3,9f7c <__adddf3+0x4d4>
    9dd0:	00148693          	addi	a3,s1,1
    9dd4:	7fe6f793          	andi	a5,a3,2046
    9dd8:	3e079c63          	bnez	a5,a1d0 <__adddf3+0x728>
    9ddc:	01e767b3          	or	a5,a4,t5
    9de0:	36049063          	bnez	s1,a140 <__adddf3+0x698>
    9de4:	4a078a63          	beqz	a5,a298 <__adddf3+0x7f0>
    9de8:	01f867b3          	or	a5,a6,t6
    9dec:	3c078663          	beqz	a5,a1b8 <__adddf3+0x710>
    9df0:	01ff0933          	add	s2,t5,t6
    9df4:	010707b3          	add	a5,a4,a6
    9df8:	01e93f33          	sltu	t5,s2,t5
    9dfc:	01e78633          	add	a2,a5,t5
    9e00:	00861793          	slli	a5,a2,0x8
    9e04:	0007da63          	bgez	a5,9e18 <__adddf3+0x370>
    9e08:	ff8007b7          	lui	a5,0xff800
    9e0c:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    9e10:	00f67633          	and	a2,a2,a5
    9e14:	00100493          	li	s1,1
    9e18:	00797793          	andi	a5,s2,7
    9e1c:	dc079ae3          	bnez	a5,9bf0 <__adddf3+0x148>
    9e20:	01d61793          	slli	a5,a2,0x1d
    9e24:	00395893          	srli	a7,s2,0x3
    9e28:	00f8e8b3          	or	a7,a7,a5
    9e2c:	00365793          	srli	a5,a2,0x3
    9e30:	7ff00713          	li	a4,2047
    9e34:	06e48a63          	beq	s1,a4,9ea8 <__adddf3+0x400>
    9e38:	00c79793          	slli	a5,a5,0xc
    9e3c:	00c7d793          	srli	a5,a5,0xc
    9e40:	7ff4f513          	andi	a0,s1,2047
    9e44:	00098593          	mv	a1,s3
    9e48:	e01ff06f          	j	9c48 <__adddf3+0x1a0>
    9e4c:	01f86933          	or	s2,a6,t6
    9e50:	01203933          	snez	s2,s2
    9e54:	01e90933          	add	s2,s2,t5
    9e58:	01e937b3          	sltu	a5,s2,t5
    9e5c:	00e78633          	add	a2,a5,a4
    9e60:	00861793          	slli	a5,a2,0x8
    9e64:	fa07dae3          	bgez	a5,9e18 <__adddf3+0x370>
    9e68:	00148493          	addi	s1,s1,1
    9e6c:	7ff00793          	li	a5,2047
    9e70:	1ef49863          	bne	s1,a5,a060 <__adddf3+0x5b8>
    9e74:	00098593          	mv	a1,s3
    9e78:	7ff00513          	li	a0,2047
    9e7c:	00000793          	li	a5,0
    9e80:	00000893          	li	a7,0
    9e84:	dc5ff06f          	j	9c48 <__adddf3+0x1a0>
    9e88:	0a079e63          	bnez	a5,9f44 <__adddf3+0x49c>
    9e8c:	46088663          	beqz	a7,a2f8 <__adddf3+0x850>
    9e90:	00361693          	slli	a3,a2,0x3
    9e94:	01d81793          	slli	a5,a6,0x1d
    9e98:	0036d693          	srli	a3,a3,0x3
    9e9c:	00d7e8b3          	or	a7,a5,a3
    9ea0:	000e8993          	mv	s3,t4
    9ea4:	00385793          	srli	a5,a6,0x3
    9ea8:	00f8e7b3          	or	a5,a7,a5
    9eac:	fc0784e3          	beqz	a5,9e74 <__adddf3+0x3cc>
    9eb0:	00000593          	li	a1,0
    9eb4:	7ff00513          	li	a0,2047
    9eb8:	000807b7          	lui	a5,0x80
    9ebc:	00000893          	li	a7,0
    9ec0:	d89ff06f          	j	9c48 <__adddf3+0x1a0>
    9ec4:	ff800637          	lui	a2,0xff800
    9ec8:	fff60613          	addi	a2,a2,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    9ecc:	00c7f633          	and	a2,a5,a2
    9ed0:	00797793          	andi	a5,s2,7
    9ed4:	40e484b3          	sub	s1,s1,a4
    9ed8:	d0079ce3          	bnez	a5,9bf0 <__adddf3+0x148>
    9edc:	f45ff06f          	j	9e20 <__adddf3+0x378>
    9ee0:	00090513          	mv	a0,s2
    9ee4:	ffffb097          	auipc	ra,0xffffb
    9ee8:	e50080e7          	jalr	-432(ra) # 4d34 <__clzsi2>
    9eec:	01850713          	addi	a4,a0,24
    9ef0:	01f00793          	li	a5,31
    9ef4:	cae7d0e3          	bge	a5,a4,9b94 <__adddf3+0xec>
    9ef8:	ff850613          	addi	a2,a0,-8
    9efc:	00c917b3          	sll	a5,s2,a2
    9f00:	00000913          	li	s2,0
    9f04:	ca9ff06f          	j	9bac <__adddf3+0x104>
    9f08:	01f86933          	or	s2,a6,t6
    9f0c:	01203933          	snez	s2,s2
    9f10:	c51ff06f          	j	9b60 <__adddf3+0xb8>
    9f14:	41ff0933          	sub	s2,t5,t6
    9f18:	41070633          	sub	a2,a4,a6
    9f1c:	012f3433          	sltu	s0,t5,s2
    9f20:	40860433          	sub	s0,a2,s0
    9f24:	00841793          	slli	a5,s0,0x8
    9f28:	2c07cc63          	bltz	a5,a200 <__adddf3+0x758>
    9f2c:	008968b3          	or	a7,s2,s0
    9f30:	c40898e3          	bnez	a7,9b80 <__adddf3+0xd8>
    9f34:	00000793          	li	a5,0
    9f38:	00000993          	li	s3,0
    9f3c:	00000493          	li	s1,0
    9f40:	ef9ff06f          	j	9e38 <__adddf3+0x390>
    9f44:	f60896e3          	bnez	a7,9eb0 <__adddf3+0x408>
    9f48:	00351513          	slli	a0,a0,0x3
    9f4c:	01d71793          	slli	a5,a4,0x1d
    9f50:	00355513          	srli	a0,a0,0x3
    9f54:	00a7e8b3          	or	a7,a5,a0
    9f58:	00375793          	srli	a5,a4,0x3
    9f5c:	f4dff06f          	j	9ea8 <__adddf3+0x400>
    9f60:	00351513          	slli	a0,a0,0x3
    9f64:	01d71793          	slli	a5,a4,0x1d
    9f68:	00355513          	srli	a0,a0,0x3
    9f6c:	00a7e8b3          	or	a7,a5,a0
    9f70:	000e0493          	mv	s1,t3
    9f74:	00375793          	srli	a5,a4,0x3
    9f78:	eb9ff06f          	j	9e30 <__adddf3+0x388>
    9f7c:	40930533          	sub	a0,t1,s1
    9f80:	14048a63          	beqz	s1,a0d4 <__adddf3+0x62c>
    9f84:	008006b7          	lui	a3,0x800
    9f88:	7ff00793          	li	a5,2047
    9f8c:	00d76733          	or	a4,a4,a3
    9f90:	38f30663          	beq	t1,a5,a31c <__adddf3+0x874>
    9f94:	03800793          	li	a5,56
    9f98:	28a7c063          	blt	a5,a0,a218 <__adddf3+0x770>
    9f9c:	01f00793          	li	a5,31
    9fa0:	32a7c663          	blt	a5,a0,a2cc <__adddf3+0x824>
    9fa4:	02000793          	li	a5,32
    9fa8:	40a787b3          	sub	a5,a5,a0
    9fac:	00f71933          	sll	s2,a4,a5
    9fb0:	00af56b3          	srl	a3,t5,a0
    9fb4:	00ff17b3          	sll	a5,t5,a5
    9fb8:	00d96933          	or	s2,s2,a3
    9fbc:	00f037b3          	snez	a5,a5
    9fc0:	00a75733          	srl	a4,a4,a0
    9fc4:	00f96933          	or	s2,s2,a5
    9fc8:	00e80833          	add	a6,a6,a4
    9fcc:	01f90933          	add	s2,s2,t6
    9fd0:	01f937b3          	sltu	a5,s2,t6
    9fd4:	01078633          	add	a2,a5,a6
    9fd8:	00030493          	mv	s1,t1
    9fdc:	e85ff06f          	j	9e60 <__adddf3+0x3b8>
    9fe0:	008006b7          	lui	a3,0x800
    9fe4:	7ff00793          	li	a5,2047
    9fe8:	00d76733          	or	a4,a4,a3
    9fec:	d8f312e3          	bne	t1,a5,9d70 <__adddf3+0x2c8>
    9ff0:	00361793          	slli	a5,a2,0x3
    9ff4:	0037d793          	srli	a5,a5,0x3
    9ff8:	01d81893          	slli	a7,a6,0x1d
    9ffc:	0117e8b3          	or	a7,a5,a7
    a000:	000e8993          	mv	s3,t4
    a004:	00385793          	srli	a5,a6,0x3
    a008:	ea1ff06f          	j	9ea8 <__adddf3+0x400>
    a00c:	fe150713          	addi	a4,a0,-31
    a010:	02000693          	li	a3,32
    a014:	00e7d733          	srl	a4,a5,a4
    a018:	00d60a63          	beq	a2,a3,a02c <__adddf3+0x584>
    a01c:	04000693          	li	a3,64
    a020:	40c68633          	sub	a2,a3,a2
    a024:	00c79633          	sll	a2,a5,a2
    a028:	00c96933          	or	s2,s2,a2
    a02c:	01203933          	snez	s2,s2
    a030:	00e96933          	or	s2,s2,a4
    a034:	00000613          	li	a2,0
    a038:	00000493          	li	s1,0
    a03c:	dddff06f          	j	9e18 <__adddf3+0x370>
    a040:	01ff0933          	add	s2,t5,t6
    a044:	010707b3          	add	a5,a4,a6
    a048:	01e93633          	sltu	a2,s2,t5
    a04c:	00c78633          	add	a2,a5,a2
    a050:	00861793          	slli	a5,a2,0x8
    a054:	00100493          	li	s1,1
    a058:	dc07d0e3          	bgez	a5,9e18 <__adddf3+0x370>
    a05c:	00200493          	li	s1,2
    a060:	ff8007b7          	lui	a5,0xff800
    a064:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a068:	00f677b3          	and	a5,a2,a5
    a06c:	00195713          	srli	a4,s2,0x1
    a070:	00197913          	andi	s2,s2,1
    a074:	01276933          	or	s2,a4,s2
    a078:	01f79893          	slli	a7,a5,0x1f
    a07c:	0128e933          	or	s2,a7,s2
    a080:	0017d613          	srli	a2,a5,0x1
    a084:	b65ff06f          	j	9be8 <__adddf3+0x140>
    a088:	fe0e0913          	addi	s2,t3,-32
    a08c:	02000793          	li	a5,32
    a090:	012856b3          	srl	a3,a6,s2
    a094:	00fe0a63          	beq	t3,a5,a0a8 <__adddf3+0x600>
    a098:	04000913          	li	s2,64
    a09c:	41c90933          	sub	s2,s2,t3
    a0a0:	01281933          	sll	s2,a6,s2
    a0a4:	012fefb3          	or	t6,t6,s2
    a0a8:	01f03933          	snez	s2,t6
    a0ac:	00d96933          	or	s2,s2,a3
    a0b0:	ab1ff06f          	j	9b60 <__adddf3+0xb8>
    a0b4:	01e76933          	or	s2,a4,t5
    a0b8:	01203933          	snez	s2,s2
    a0bc:	412f8933          	sub	s2,t6,s2
    a0c0:	012fb7b3          	sltu	a5,t6,s2
    a0c4:	40f80633          	sub	a2,a6,a5
    a0c8:	00030493          	mv	s1,t1
    a0cc:	000e8993          	mv	s3,t4
    a0d0:	a9dff06f          	j	9b6c <__adddf3+0xc4>
    a0d4:	01e767b3          	or	a5,a4,t5
    a0d8:	1c078c63          	beqz	a5,a2b0 <__adddf3+0x808>
    a0dc:	fff50793          	addi	a5,a0,-1
    a0e0:	22078463          	beqz	a5,a308 <__adddf3+0x860>
    a0e4:	7ff00693          	li	a3,2047
    a0e8:	16d50463          	beq	a0,a3,a250 <__adddf3+0x7a8>
    a0ec:	00078513          	mv	a0,a5
    a0f0:	ea5ff06f          	j	9f94 <__adddf3+0x4ec>
    a0f4:	02000793          	li	a5,32
    a0f8:	41c787b3          	sub	a5,a5,t3
    a0fc:	00f816b3          	sll	a3,a6,a5
    a100:	00ff9933          	sll	s2,t6,a5
    a104:	01cfd633          	srl	a2,t6,t3
    a108:	00c6e6b3          	or	a3,a3,a2
    a10c:	01203933          	snez	s2,s2
    a110:	01c857b3          	srl	a5,a6,t3
    a114:	0126e933          	or	s2,a3,s2
    a118:	00f70733          	add	a4,a4,a5
    a11c:	d39ff06f          	j	9e54 <__adddf3+0x3ac>
    a120:	00361793          	slli	a5,a2,0x3
    a124:	0037d793          	srli	a5,a5,0x3
    a128:	01d81893          	slli	a7,a6,0x1d
    a12c:	0117e8b3          	or	a7,a5,a7
    a130:	00058493          	mv	s1,a1
    a134:	00385793          	srli	a5,a6,0x3
    a138:	000e8993          	mv	s3,t4
    a13c:	cf5ff06f          	j	9e30 <__adddf3+0x388>
    a140:	10078863          	beqz	a5,a250 <__adddf3+0x7a8>
    a144:	01f86933          	or	s2,a6,t6
    a148:	d60914e3          	bnez	s2,9eb0 <__adddf3+0x408>
    a14c:	00351513          	slli	a0,a0,0x3
    a150:	01d71793          	slli	a5,a4,0x1d
    a154:	00355513          	srli	a0,a0,0x3
    a158:	00f568b3          	or	a7,a0,a5
    a15c:	00375793          	srli	a5,a4,0x3
    a160:	d49ff06f          	j	9ea8 <__adddf3+0x400>
    a164:	10088663          	beqz	a7,a270 <__adddf3+0x7c8>
    a168:	00361693          	slli	a3,a2,0x3
    a16c:	01d81793          	slli	a5,a6,0x1d
    a170:	0036d693          	srli	a3,a3,0x3
    a174:	00d7e8b3          	or	a7,a5,a3
    a178:	000e8993          	mv	s3,t4
    a17c:	00385793          	srli	a5,a6,0x3
    a180:	cb9ff06f          	j	9e38 <__adddf3+0x390>
    a184:	41ff0933          	sub	s2,t5,t6
    a188:	410707b3          	sub	a5,a4,a6
    a18c:	012f3f33          	sltu	t5,t5,s2
    a190:	41e78633          	sub	a2,a5,t5
    a194:	00100493          	li	s1,1
    a198:	9d5ff06f          	j	9b6c <__adddf3+0xc4>
    a19c:	00351513          	slli	a0,a0,0x3
    a1a0:	01d71793          	slli	a5,a4,0x1d
    a1a4:	00355513          	srli	a0,a0,0x3
    a1a8:	00f568b3          	or	a7,a0,a5
    a1ac:	000e0493          	mv	s1,t3
    a1b0:	00375793          	srli	a5,a4,0x3
    a1b4:	c7dff06f          	j	9e30 <__adddf3+0x388>
    a1b8:	00351513          	slli	a0,a0,0x3
    a1bc:	01d71793          	slli	a5,a4,0x1d
    a1c0:	00355513          	srli	a0,a0,0x3
    a1c4:	00a7e8b3          	or	a7,a5,a0
    a1c8:	00375793          	srli	a5,a4,0x3
    a1cc:	c6dff06f          	j	9e38 <__adddf3+0x390>
    a1d0:	7ff00793          	li	a5,2047
    a1d4:	caf680e3          	beq	a3,a5,9e74 <__adddf3+0x3cc>
    a1d8:	01ff0933          	add	s2,t5,t6
    a1dc:	01e93633          	sltu	a2,s2,t5
    a1e0:	010707b3          	add	a5,a4,a6
    a1e4:	00c787b3          	add	a5,a5,a2
    a1e8:	01f79893          	slli	a7,a5,0x1f
    a1ec:	00195913          	srli	s2,s2,0x1
    a1f0:	0128e933          	or	s2,a7,s2
    a1f4:	0017d613          	srli	a2,a5,0x1
    a1f8:	00068493          	mv	s1,a3
    a1fc:	c1dff06f          	j	9e18 <__adddf3+0x370>
    a200:	41ef8933          	sub	s2,t6,t5
    a204:	40e80733          	sub	a4,a6,a4
    a208:	012fb633          	sltu	a2,t6,s2
    a20c:	40c70433          	sub	s0,a4,a2
    a210:	000e8993          	mv	s3,t4
    a214:	96dff06f          	j	9b80 <__adddf3+0xd8>
    a218:	01e76933          	or	s2,a4,t5
    a21c:	01203933          	snez	s2,s2
    a220:	dadff06f          	j	9fcc <__adddf3+0x524>
    a224:	fe058793          	addi	a5,a1,-32
    a228:	02000693          	li	a3,32
    a22c:	00f757b3          	srl	a5,a4,a5
    a230:	00d58a63          	beq	a1,a3,a244 <__adddf3+0x79c>
    a234:	04000693          	li	a3,64
    a238:	40b685b3          	sub	a1,a3,a1
    a23c:	00b71733          	sll	a4,a4,a1
    a240:	00ef6f33          	or	t5,t5,a4
    a244:	01e03933          	snez	s2,t5
    a248:	00f96933          	or	s2,s2,a5
    a24c:	e71ff06f          	j	a0bc <__adddf3+0x614>
    a250:	00361793          	slli	a5,a2,0x3
    a254:	0037d793          	srli	a5,a5,0x3
    a258:	01d81893          	slli	a7,a6,0x1d
    a25c:	0117e8b3          	or	a7,a5,a7
    a260:	00385793          	srli	a5,a6,0x3
    a264:	c45ff06f          	j	9ea8 <__adddf3+0x400>
    a268:	00c968b3          	or	a7,s2,a2
    a26c:	ba0896e3          	bnez	a7,9e18 <__adddf3+0x370>
    a270:	00000793          	li	a5,0
    a274:	00000993          	li	s3,0
    a278:	bc1ff06f          	j	9e38 <__adddf3+0x390>
    a27c:	41ef8933          	sub	s2,t6,t5
    a280:	40e807b3          	sub	a5,a6,a4
    a284:	012fb633          	sltu	a2,t6,s2
    a288:	40c78633          	sub	a2,a5,a2
    a28c:	000e8993          	mv	s3,t4
    a290:	00100493          	li	s1,1
    a294:	8d9ff06f          	j	9b6c <__adddf3+0xc4>
    a298:	00361693          	slli	a3,a2,0x3
    a29c:	01d81793          	slli	a5,a6,0x1d
    a2a0:	0036d693          	srli	a3,a3,0x3
    a2a4:	00d7e8b3          	or	a7,a5,a3
    a2a8:	00385793          	srli	a5,a6,0x3
    a2ac:	b8dff06f          	j	9e38 <__adddf3+0x390>
    a2b0:	00361693          	slli	a3,a2,0x3
    a2b4:	01d81793          	slli	a5,a6,0x1d
    a2b8:	0036d693          	srli	a3,a3,0x3
    a2bc:	00d7e8b3          	or	a7,a5,a3
    a2c0:	00050493          	mv	s1,a0
    a2c4:	00385793          	srli	a5,a6,0x3
    a2c8:	b69ff06f          	j	9e30 <__adddf3+0x388>
    a2cc:	fe050793          	addi	a5,a0,-32
    a2d0:	02000693          	li	a3,32
    a2d4:	00f757b3          	srl	a5,a4,a5
    a2d8:	00d50a63          	beq	a0,a3,a2ec <__adddf3+0x844>
    a2dc:	04000693          	li	a3,64
    a2e0:	40a68533          	sub	a0,a3,a0
    a2e4:	00a71733          	sll	a4,a4,a0
    a2e8:	00ef6f33          	or	t5,t5,a4
    a2ec:	01e03933          	snez	s2,t5
    a2f0:	00f96933          	or	s2,s2,a5
    a2f4:	cd9ff06f          	j	9fcc <__adddf3+0x524>
    a2f8:	00000593          	li	a1,0
    a2fc:	7ff00513          	li	a0,2047
    a300:	000807b7          	lui	a5,0x80
    a304:	945ff06f          	j	9c48 <__adddf3+0x1a0>
    a308:	01ff0933          	add	s2,t5,t6
    a30c:	010707b3          	add	a5,a4,a6
    a310:	01f93633          	sltu	a2,s2,t6
    a314:	00c78633          	add	a2,a5,a2
    a318:	d39ff06f          	j	a050 <__adddf3+0x5a8>
    a31c:	00361693          	slli	a3,a2,0x3
    a320:	01d81793          	slli	a5,a6,0x1d
    a324:	0036d693          	srli	a3,a3,0x3
    a328:	00d7e8b3          	or	a7,a5,a3
    a32c:	00385793          	srli	a5,a6,0x3
    a330:	b79ff06f          	j	9ea8 <__adddf3+0x400>

0000a334 <__eqdf2>:
    a334:	0145d713          	srli	a4,a1,0x14
    a338:	001007b7          	lui	a5,0x100
    a33c:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf4e87>
    a340:	0146d813          	srli	a6,a3,0x14
    a344:	7ff77713          	andi	a4,a4,2047
    a348:	7ff00893          	li	a7,2047
    a34c:	00b7fe33          	and	t3,a5,a1
    a350:	00050e93          	mv	t4,a0
    a354:	00d7f7b3          	and	a5,a5,a3
    a358:	01f5d593          	srli	a1,a1,0x1f
    a35c:	00060f13          	mv	t5,a2
    a360:	7ff87813          	andi	a6,a6,2047
    a364:	01f6d693          	srli	a3,a3,0x1f
    a368:	01170e63          	beq	a4,a7,a384 <__eqdf2+0x50>
    a36c:	00100313          	li	t1,1
    a370:	01180663          	beq	a6,a7,a37c <__eqdf2+0x48>
    a374:	01071463          	bne	a4,a6,a37c <__eqdf2+0x48>
    a378:	02fe0263          	beq	t3,a5,a39c <__eqdf2+0x68>
    a37c:	00030513          	mv	a0,t1
    a380:	00008067          	ret
    a384:	00ae68b3          	or	a7,t3,a0
    a388:	00100313          	li	t1,1
    a38c:	fe0898e3          	bnez	a7,a37c <__eqdf2+0x48>
    a390:	fee816e3          	bne	a6,a4,a37c <__eqdf2+0x48>
    a394:	00c7e7b3          	or	a5,a5,a2
    a398:	fe0792e3          	bnez	a5,a37c <__eqdf2+0x48>
    a39c:	00100313          	li	t1,1
    a3a0:	fdee9ee3          	bne	t4,t5,a37c <__eqdf2+0x48>
    a3a4:	00000313          	li	t1,0
    a3a8:	fcd58ae3          	beq	a1,a3,a37c <__eqdf2+0x48>
    a3ac:	00100313          	li	t1,1
    a3b0:	fc0716e3          	bnez	a4,a37c <__eqdf2+0x48>
    a3b4:	00ae6533          	or	a0,t3,a0
    a3b8:	00a03333          	snez	t1,a0
    a3bc:	fc1ff06f          	j	a37c <__eqdf2+0x48>

0000a3c0 <__subdf3>:
    a3c0:	00100737          	lui	a4,0x100
    a3c4:	fff70713          	addi	a4,a4,-1 # fffff <_data_lma+0xf4e87>
    a3c8:	fe010113          	addi	sp,sp,-32
    a3cc:	00b77333          	and	t1,a4,a1
    a3d0:	0146d893          	srli	a7,a3,0x14
    a3d4:	00d77733          	and	a4,a4,a3
    a3d8:	01d65e93          	srli	t4,a2,0x1d
    a3dc:	00812c23          	sw	s0,24(sp)
    a3e0:	00912a23          	sw	s1,20(sp)
    a3e4:	00331313          	slli	t1,t1,0x3
    a3e8:	0145d493          	srli	s1,a1,0x14
    a3ec:	01d55793          	srli	a5,a0,0x1d
    a3f0:	00371713          	slli	a4,a4,0x3
    a3f4:	00112e23          	sw	ra,28(sp)
    a3f8:	01212823          	sw	s2,16(sp)
    a3fc:	01312623          	sw	s3,12(sp)
    a400:	7ff8f893          	andi	a7,a7,2047
    a404:	7ff00e13          	li	t3,2047
    a408:	00eee733          	or	a4,t4,a4
    a40c:	7ff4f493          	andi	s1,s1,2047
    a410:	01f5d413          	srli	s0,a1,0x1f
    a414:	0067e333          	or	t1,a5,t1
    a418:	00351f13          	slli	t5,a0,0x3
    a41c:	01f6d693          	srli	a3,a3,0x1f
    a420:	00361e93          	slli	t4,a2,0x3
    a424:	1dc88863          	beq	a7,t3,a5f4 <__subdf3+0x234>
    a428:	0016c693          	xori	a3,a3,1
    a42c:	411485b3          	sub	a1,s1,a7
    a430:	16d40a63          	beq	s0,a3,a5a4 <__subdf3+0x1e4>
    a434:	1cb05a63          	blez	a1,a608 <__subdf3+0x248>
    a438:	20088663          	beqz	a7,a644 <__subdf3+0x284>
    a43c:	008007b7          	lui	a5,0x800
    a440:	00f76733          	or	a4,a4,a5
    a444:	67c48e63          	beq	s1,t3,aac0 <__subdf3+0x700>
    a448:	03800793          	li	a5,56
    a44c:	3eb7c663          	blt	a5,a1,a838 <__subdf3+0x478>
    a450:	01f00793          	li	a5,31
    a454:	54b7ce63          	blt	a5,a1,a9b0 <__subdf3+0x5f0>
    a458:	02000793          	li	a5,32
    a45c:	40b787b3          	sub	a5,a5,a1
    a460:	00bed9b3          	srl	s3,t4,a1
    a464:	00f71833          	sll	a6,a4,a5
    a468:	00fe9eb3          	sll	t4,t4,a5
    a46c:	01386833          	or	a6,a6,s3
    a470:	00b75733          	srl	a4,a4,a1
    a474:	01d039b3          	snez	s3,t4
    a478:	01386833          	or	a6,a6,s3
    a47c:	40e30333          	sub	t1,t1,a4
    a480:	410f09b3          	sub	s3,t5,a6
    a484:	013f37b3          	sltu	a5,t5,s3
    a488:	40f30633          	sub	a2,t1,a5
    a48c:	00861793          	slli	a5,a2,0x8
    a490:	2a07da63          	bgez	a5,a744 <__subdf3+0x384>
    a494:	00800937          	lui	s2,0x800
    a498:	fff90913          	addi	s2,s2,-1 # 7fffff <_data_lma+0x7f4e87>
    a49c:	01267933          	and	s2,a2,s2
    a4a0:	36090863          	beqz	s2,a810 <__subdf3+0x450>
    a4a4:	00090513          	mv	a0,s2
    a4a8:	ffffb097          	auipc	ra,0xffffb
    a4ac:	88c080e7          	jalr	-1908(ra) # 4d34 <__clzsi2>
    a4b0:	ff850713          	addi	a4,a0,-8
    a4b4:	02000793          	li	a5,32
    a4b8:	40e787b3          	sub	a5,a5,a4
    a4bc:	00f9d7b3          	srl	a5,s3,a5
    a4c0:	00e91633          	sll	a2,s2,a4
    a4c4:	00c7e7b3          	or	a5,a5,a2
    a4c8:	00e999b3          	sll	s3,s3,a4
    a4cc:	32974463          	blt	a4,s1,a7f4 <__subdf3+0x434>
    a4d0:	40970733          	sub	a4,a4,s1
    a4d4:	00170613          	addi	a2,a4,1
    a4d8:	01f00693          	li	a3,31
    a4dc:	44c6cc63          	blt	a3,a2,a934 <__subdf3+0x574>
    a4e0:	02000713          	li	a4,32
    a4e4:	40c70733          	sub	a4,a4,a2
    a4e8:	00c9d6b3          	srl	a3,s3,a2
    a4ec:	00e99833          	sll	a6,s3,a4
    a4f0:	00e79733          	sll	a4,a5,a4
    a4f4:	00d76733          	or	a4,a4,a3
    a4f8:	01003833          	snez	a6,a6
    a4fc:	010769b3          	or	s3,a4,a6
    a500:	00c7d633          	srl	a2,a5,a2
    a504:	00000493          	li	s1,0
    a508:	0079f793          	andi	a5,s3,7
    a50c:	02078063          	beqz	a5,a52c <__subdf3+0x16c>
    a510:	00f9f693          	andi	a3,s3,15
    a514:	00400793          	li	a5,4
    a518:	00f68a63          	beq	a3,a5,a52c <__subdf3+0x16c>
    a51c:	00498693          	addi	a3,s3,4
    a520:	0136b833          	sltu	a6,a3,s3
    a524:	01060633          	add	a2,a2,a6
    a528:	00068993          	mv	s3,a3
    a52c:	00861793          	slli	a5,a2,0x8
    a530:	2007de63          	bgez	a5,a74c <__subdf3+0x38c>
    a534:	00148713          	addi	a4,s1,1
    a538:	7ff00793          	li	a5,2047
    a53c:	00147413          	andi	s0,s0,1
    a540:	26f70463          	beq	a4,a5,a7a8 <__subdf3+0x3e8>
    a544:	ff8007b7          	lui	a5,0xff800
    a548:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a54c:	00f677b3          	and	a5,a2,a5
    a550:	01d79813          	slli	a6,a5,0x1d
    a554:	0039d993          	srli	s3,s3,0x3
    a558:	00979793          	slli	a5,a5,0x9
    a55c:	01386833          	or	a6,a6,s3
    a560:	00c7d793          	srli	a5,a5,0xc
    a564:	7ff77713          	andi	a4,a4,2047
    a568:	00c79693          	slli	a3,a5,0xc
    a56c:	01471713          	slli	a4,a4,0x14
    a570:	00c6d693          	srli	a3,a3,0xc
    a574:	01f41413          	slli	s0,s0,0x1f
    a578:	00e6e6b3          	or	a3,a3,a4
    a57c:	0086e6b3          	or	a3,a3,s0
    a580:	01c12083          	lw	ra,28(sp)
    a584:	01812403          	lw	s0,24(sp)
    a588:	01412483          	lw	s1,20(sp)
    a58c:	01012903          	lw	s2,16(sp)
    a590:	00c12983          	lw	s3,12(sp)
    a594:	00080513          	mv	a0,a6
    a598:	00068593          	mv	a1,a3
    a59c:	02010113          	addi	sp,sp,32
    a5a0:	00008067          	ret
    a5a4:	0ab05e63          	blez	a1,a660 <__subdf3+0x2a0>
    a5a8:	14088a63          	beqz	a7,a6fc <__subdf3+0x33c>
    a5ac:	008007b7          	lui	a5,0x800
    a5b0:	00f76733          	or	a4,a4,a5
    a5b4:	33c48e63          	beq	s1,t3,a8f0 <__subdf3+0x530>
    a5b8:	03800793          	li	a5,56
    a5bc:	1cb7c063          	blt	a5,a1,a77c <__subdf3+0x3bc>
    a5c0:	01f00793          	li	a5,31
    a5c4:	44b7dc63          	bge	a5,a1,aa1c <__subdf3+0x65c>
    a5c8:	fe058813          	addi	a6,a1,-32
    a5cc:	02000793          	li	a5,32
    a5d0:	010759b3          	srl	s3,a4,a6
    a5d4:	00f58a63          	beq	a1,a5,a5e8 <__subdf3+0x228>
    a5d8:	04000793          	li	a5,64
    a5dc:	40b785b3          	sub	a1,a5,a1
    a5e0:	00b71733          	sll	a4,a4,a1
    a5e4:	00eeeeb3          	or	t4,t4,a4
    a5e8:	01d03833          	snez	a6,t4
    a5ec:	01386833          	or	a6,a6,s3
    a5f0:	1940006f          	j	a784 <__subdf3+0x3c4>
    a5f4:	01d767b3          	or	a5,a4,t4
    a5f8:	80148593          	addi	a1,s1,-2047
    a5fc:	00079463          	bnez	a5,a604 <__subdf3+0x244>
    a600:	0016c693          	xori	a3,a3,1
    a604:	04d40e63          	beq	s0,a3,a660 <__subdf3+0x2a0>
    a608:	08059a63          	bnez	a1,a69c <__subdf3+0x2dc>
    a60c:	00148793          	addi	a5,s1,1
    a610:	7fe7f793          	andi	a5,a5,2046
    a614:	24079463          	bnez	a5,a85c <__subdf3+0x49c>
    a618:	01e367b3          	or	a5,t1,t5
    a61c:	01d76833          	or	a6,a4,t4
    a620:	18049c63          	bnez	s1,a7b8 <__subdf3+0x3f8>
    a624:	46078263          	beqz	a5,aa88 <__subdf3+0x6c8>
    a628:	4e081063          	bnez	a6,ab08 <__subdf3+0x748>
    a62c:	00351813          	slli	a6,a0,0x3
    a630:	01d31693          	slli	a3,t1,0x1d
    a634:	00385813          	srli	a6,a6,0x3
    a638:	0106e833          	or	a6,a3,a6
    a63c:	00335793          	srli	a5,t1,0x3
    a640:	1280006f          	j	a768 <__subdf3+0x3a8>
    a644:	01d767b3          	or	a5,a4,t4
    a648:	1e078e63          	beqz	a5,a844 <__subdf3+0x484>
    a64c:	fff58793          	addi	a5,a1,-1
    a650:	44078c63          	beqz	a5,aaa8 <__subdf3+0x6e8>
    a654:	29c58e63          	beq	a1,t3,a8f0 <__subdf3+0x530>
    a658:	00078593          	mv	a1,a5
    a65c:	dedff06f          	j	a448 <__subdf3+0x88>
    a660:	22059463          	bnez	a1,a888 <__subdf3+0x4c8>
    a664:	00148693          	addi	a3,s1,1
    a668:	7fe6f793          	andi	a5,a3,2046
    a66c:	0a079663          	bnez	a5,a718 <__subdf3+0x358>
    a670:	01e367b3          	or	a5,t1,t5
    a674:	3e049863          	bnez	s1,aa64 <__subdf3+0x6a4>
    a678:	50078a63          	beqz	a5,ab8c <__subdf3+0x7cc>
    a67c:	01d767b3          	or	a5,a4,t4
    a680:	52079263          	bnez	a5,aba4 <__subdf3+0x7e4>
    a684:	00351513          	slli	a0,a0,0x3
    a688:	01d31813          	slli	a6,t1,0x1d
    a68c:	00355513          	srli	a0,a0,0x3
    a690:	00a86833          	or	a6,a6,a0
    a694:	00335793          	srli	a5,t1,0x3
    a698:	0d00006f          	j	a768 <__subdf3+0x3a8>
    a69c:	409885b3          	sub	a1,a7,s1
    a6a0:	26049463          	bnez	s1,a908 <__subdf3+0x548>
    a6a4:	01e367b3          	or	a5,t1,t5
    a6a8:	3a078063          	beqz	a5,aa48 <__subdf3+0x688>
    a6ac:	fff58793          	addi	a5,a1,-1
    a6b0:	4c078063          	beqz	a5,ab70 <__subdf3+0x7b0>
    a6b4:	7ff00513          	li	a0,2047
    a6b8:	26a58063          	beq	a1,a0,a918 <__subdf3+0x558>
    a6bc:	00078593          	mv	a1,a5
    a6c0:	03800793          	li	a5,56
    a6c4:	30b7cc63          	blt	a5,a1,a9dc <__subdf3+0x61c>
    a6c8:	01f00793          	li	a5,31
    a6cc:	46b7cc63          	blt	a5,a1,ab44 <__subdf3+0x784>
    a6d0:	02000793          	li	a5,32
    a6d4:	40b787b3          	sub	a5,a5,a1
    a6d8:	00f31833          	sll	a6,t1,a5
    a6dc:	00bf5633          	srl	a2,t5,a1
    a6e0:	00ff17b3          	sll	a5,t5,a5
    a6e4:	00c86833          	or	a6,a6,a2
    a6e8:	00f039b3          	snez	s3,a5
    a6ec:	00b35333          	srl	t1,t1,a1
    a6f0:	01386833          	or	a6,a6,s3
    a6f4:	40670733          	sub	a4,a4,t1
    a6f8:	2ec0006f          	j	a9e4 <__subdf3+0x624>
    a6fc:	01d767b3          	or	a5,a4,t4
    a700:	14078263          	beqz	a5,a844 <__subdf3+0x484>
    a704:	fff58793          	addi	a5,a1,-1
    a708:	26078063          	beqz	a5,a968 <__subdf3+0x5a8>
    a70c:	37c58263          	beq	a1,t3,aa70 <__subdf3+0x6b0>
    a710:	00078593          	mv	a1,a5
    a714:	ea5ff06f          	j	a5b8 <__subdf3+0x1f8>
    a718:	7ff00793          	li	a5,2047
    a71c:	08f68463          	beq	a3,a5,a7a4 <__subdf3+0x3e4>
    a720:	01df0eb3          	add	t4,t5,t4
    a724:	01eeb633          	sltu	a2,t4,t5
    a728:	00e307b3          	add	a5,t1,a4
    a72c:	00c787b3          	add	a5,a5,a2
    a730:	01f79813          	slli	a6,a5,0x1f
    a734:	001ede93          	srli	t4,t4,0x1
    a738:	01d869b3          	or	s3,a6,t4
    a73c:	0017d613          	srli	a2,a5,0x1
    a740:	00068493          	mv	s1,a3
    a744:	0079f793          	andi	a5,s3,7
    a748:	dc0794e3          	bnez	a5,a510 <__subdf3+0x150>
    a74c:	01d61793          	slli	a5,a2,0x1d
    a750:	0039d813          	srli	a6,s3,0x3
    a754:	00f86833          	or	a6,a6,a5
    a758:	00048593          	mv	a1,s1
    a75c:	00365793          	srli	a5,a2,0x3
    a760:	7ff00713          	li	a4,2047
    a764:	06e58a63          	beq	a1,a4,a7d8 <__subdf3+0x418>
    a768:	00c79793          	slli	a5,a5,0xc
    a76c:	00c7d793          	srli	a5,a5,0xc
    a770:	7ff5f713          	andi	a4,a1,2047
    a774:	00147413          	andi	s0,s0,1
    a778:	df1ff06f          	j	a568 <__subdf3+0x1a8>
    a77c:	01d76733          	or	a4,a4,t4
    a780:	00e03833          	snez	a6,a4
    a784:	01e809b3          	add	s3,a6,t5
    a788:	01e9b7b3          	sltu	a5,s3,t5
    a78c:	00678633          	add	a2,a5,t1
    a790:	00861793          	slli	a5,a2,0x8
    a794:	fa07d8e3          	bgez	a5,a744 <__subdf3+0x384>
    a798:	00148493          	addi	s1,s1,1
    a79c:	7ff00793          	li	a5,2047
    a7a0:	1ef49463          	bne	s1,a5,a988 <__subdf3+0x5c8>
    a7a4:	00147413          	andi	s0,s0,1
    a7a8:	7ff00713          	li	a4,2047
    a7ac:	00000793          	li	a5,0
    a7b0:	00000813          	li	a6,0
    a7b4:	db5ff06f          	j	a568 <__subdf3+0x1a8>
    a7b8:	12079a63          	bnez	a5,a8ec <__subdf3+0x52c>
    a7bc:	46080263          	beqz	a6,ac20 <__subdf3+0x860>
    a7c0:	00361813          	slli	a6,a2,0x3
    a7c4:	01d71793          	slli	a5,a4,0x1d
    a7c8:	00385813          	srli	a6,a6,0x3
    a7cc:	00f86833          	or	a6,a6,a5
    a7d0:	00068413          	mv	s0,a3
    a7d4:	00375793          	srli	a5,a4,0x3
    a7d8:	00f867b3          	or	a5,a6,a5
    a7dc:	fc0784e3          	beqz	a5,a7a4 <__subdf3+0x3e4>
    a7e0:	00000413          	li	s0,0
    a7e4:	7ff00713          	li	a4,2047
    a7e8:	000807b7          	lui	a5,0x80
    a7ec:	00000813          	li	a6,0
    a7f0:	d79ff06f          	j	a568 <__subdf3+0x1a8>
    a7f4:	ff800637          	lui	a2,0xff800
    a7f8:	fff60613          	addi	a2,a2,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a7fc:	00c7f633          	and	a2,a5,a2
    a800:	0079f793          	andi	a5,s3,7
    a804:	40e484b3          	sub	s1,s1,a4
    a808:	d00794e3          	bnez	a5,a510 <__subdf3+0x150>
    a80c:	f41ff06f          	j	a74c <__subdf3+0x38c>
    a810:	00098513          	mv	a0,s3
    a814:	ffffa097          	auipc	ra,0xffffa
    a818:	520080e7          	jalr	1312(ra) # 4d34 <__clzsi2>
    a81c:	01850713          	addi	a4,a0,24
    a820:	01f00793          	li	a5,31
    a824:	c8e7d8e3          	bge	a5,a4,a4b4 <__subdf3+0xf4>
    a828:	ff850613          	addi	a2,a0,-8
    a82c:	00c997b3          	sll	a5,s3,a2
    a830:	00000993          	li	s3,0
    a834:	c99ff06f          	j	a4cc <__subdf3+0x10c>
    a838:	01d76833          	or	a6,a4,t4
    a83c:	01003833          	snez	a6,a6
    a840:	c41ff06f          	j	a480 <__subdf3+0xc0>
    a844:	00351813          	slli	a6,a0,0x3
    a848:	01d31793          	slli	a5,t1,0x1d
    a84c:	00385813          	srli	a6,a6,0x3
    a850:	00f86833          	or	a6,a6,a5
    a854:	00335793          	srli	a5,t1,0x3
    a858:	f09ff06f          	j	a760 <__subdf3+0x3a0>
    a85c:	41df09b3          	sub	s3,t5,t4
    a860:	40e30933          	sub	s2,t1,a4
    a864:	013f3633          	sltu	a2,t5,s3
    a868:	40c90933          	sub	s2,s2,a2
    a86c:	00891793          	slli	a5,s2,0x8
    a870:	2607c463          	bltz	a5,aad8 <__subdf3+0x718>
    a874:	0129e833          	or	a6,s3,s2
    a878:	c20814e3          	bnez	a6,a4a0 <__subdf3+0xe0>
    a87c:	00000793          	li	a5,0
    a880:	00000413          	li	s0,0
    a884:	ee5ff06f          	j	a768 <__subdf3+0x3a8>
    a888:	409885b3          	sub	a1,a7,s1
    a88c:	16048863          	beqz	s1,a9fc <__subdf3+0x63c>
    a890:	008006b7          	lui	a3,0x800
    a894:	7ff00793          	li	a5,2047
    a898:	00d36333          	or	t1,t1,a3
    a89c:	24f88a63          	beq	a7,a5,aaf0 <__subdf3+0x730>
    a8a0:	03800793          	li	a5,56
    a8a4:	28b7ca63          	blt	a5,a1,ab38 <__subdf3+0x778>
    a8a8:	01f00793          	li	a5,31
    a8ac:	34b7c463          	blt	a5,a1,abf4 <__subdf3+0x834>
    a8b0:	02000793          	li	a5,32
    a8b4:	40b787b3          	sub	a5,a5,a1
    a8b8:	00f31833          	sll	a6,t1,a5
    a8bc:	00bf56b3          	srl	a3,t5,a1
    a8c0:	00ff17b3          	sll	a5,t5,a5
    a8c4:	00d86833          	or	a6,a6,a3
    a8c8:	00f039b3          	snez	s3,a5
    a8cc:	00b35333          	srl	t1,t1,a1
    a8d0:	01386833          	or	a6,a6,s3
    a8d4:	00670733          	add	a4,a4,t1
    a8d8:	01d809b3          	add	s3,a6,t4
    a8dc:	01d9b7b3          	sltu	a5,s3,t4
    a8e0:	00e78633          	add	a2,a5,a4
    a8e4:	00088493          	mv	s1,a7
    a8e8:	ea9ff06f          	j	a790 <__subdf3+0x3d0>
    a8ec:	ee081ae3          	bnez	a6,a7e0 <__subdf3+0x420>
    a8f0:	00351813          	slli	a6,a0,0x3
    a8f4:	01d31793          	slli	a5,t1,0x1d
    a8f8:	00385813          	srli	a6,a6,0x3
    a8fc:	00f86833          	or	a6,a6,a5
    a900:	00335793          	srli	a5,t1,0x3
    a904:	ed5ff06f          	j	a7d8 <__subdf3+0x418>
    a908:	00800537          	lui	a0,0x800
    a90c:	7ff00793          	li	a5,2047
    a910:	00a36333          	or	t1,t1,a0
    a914:	daf896e3          	bne	a7,a5,a6c0 <__subdf3+0x300>
    a918:	00361613          	slli	a2,a2,0x3
    a91c:	01d71813          	slli	a6,a4,0x1d
    a920:	00365613          	srli	a2,a2,0x3
    a924:	00c86833          	or	a6,a6,a2
    a928:	00375793          	srli	a5,a4,0x3
    a92c:	00068413          	mv	s0,a3
    a930:	ea9ff06f          	j	a7d8 <__subdf3+0x418>
    a934:	fe170713          	addi	a4,a4,-31
    a938:	02000693          	li	a3,32
    a93c:	00e7d733          	srl	a4,a5,a4
    a940:	00d60a63          	beq	a2,a3,a954 <__subdf3+0x594>
    a944:	04000693          	li	a3,64
    a948:	40c68633          	sub	a2,a3,a2
    a94c:	00c79633          	sll	a2,a5,a2
    a950:	00c9e9b3          	or	s3,s3,a2
    a954:	01303833          	snez	a6,s3
    a958:	00e869b3          	or	s3,a6,a4
    a95c:	00000613          	li	a2,0
    a960:	00000493          	li	s1,0
    a964:	de1ff06f          	j	a744 <__subdf3+0x384>
    a968:	01df09b3          	add	s3,t5,t4
    a96c:	00e307b3          	add	a5,t1,a4
    a970:	01e9bf33          	sltu	t5,s3,t5
    a974:	01e78633          	add	a2,a5,t5
    a978:	00861793          	slli	a5,a2,0x8
    a97c:	00100493          	li	s1,1
    a980:	dc07d2e3          	bgez	a5,a744 <__subdf3+0x384>
    a984:	00200493          	li	s1,2
    a988:	ff8007b7          	lui	a5,0xff800
    a98c:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a990:	00f677b3          	and	a5,a2,a5
    a994:	0019d713          	srli	a4,s3,0x1
    a998:	0019f813          	andi	a6,s3,1
    a99c:	01076833          	or	a6,a4,a6
    a9a0:	01f79993          	slli	s3,a5,0x1f
    a9a4:	0109e9b3          	or	s3,s3,a6
    a9a8:	0017d613          	srli	a2,a5,0x1
    a9ac:	b5dff06f          	j	a508 <__subdf3+0x148>
    a9b0:	fe058813          	addi	a6,a1,-32
    a9b4:	02000793          	li	a5,32
    a9b8:	010759b3          	srl	s3,a4,a6
    a9bc:	00f58a63          	beq	a1,a5,a9d0 <__subdf3+0x610>
    a9c0:	04000793          	li	a5,64
    a9c4:	40b785b3          	sub	a1,a5,a1
    a9c8:	00b71733          	sll	a4,a4,a1
    a9cc:	00eeeeb3          	or	t4,t4,a4
    a9d0:	01d03833          	snez	a6,t4
    a9d4:	01386833          	or	a6,a6,s3
    a9d8:	aa9ff06f          	j	a480 <__subdf3+0xc0>
    a9dc:	01e36333          	or	t1,t1,t5
    a9e0:	00603833          	snez	a6,t1
    a9e4:	410e89b3          	sub	s3,t4,a6
    a9e8:	013eb7b3          	sltu	a5,t4,s3
    a9ec:	40f70633          	sub	a2,a4,a5
    a9f0:	00088493          	mv	s1,a7
    a9f4:	00068413          	mv	s0,a3
    a9f8:	a95ff06f          	j	a48c <__subdf3+0xcc>
    a9fc:	01e367b3          	or	a5,t1,t5
    aa00:	1c078863          	beqz	a5,abd0 <__subdf3+0x810>
    aa04:	fff58793          	addi	a5,a1,-1
    aa08:	22078463          	beqz	a5,ac30 <__subdf3+0x870>
    aa0c:	7ff00693          	li	a3,2047
    aa10:	0ed58063          	beq	a1,a3,aaf0 <__subdf3+0x730>
    aa14:	00078593          	mv	a1,a5
    aa18:	e89ff06f          	j	a8a0 <__subdf3+0x4e0>
    aa1c:	02000793          	li	a5,32
    aa20:	40b787b3          	sub	a5,a5,a1
    aa24:	00bed9b3          	srl	s3,t4,a1
    aa28:	00f71833          	sll	a6,a4,a5
    aa2c:	00fe9eb3          	sll	t4,t4,a5
    aa30:	01386833          	or	a6,a6,s3
    aa34:	00b75733          	srl	a4,a4,a1
    aa38:	01d039b3          	snez	s3,t4
    aa3c:	01386833          	or	a6,a6,s3
    aa40:	00e30333          	add	t1,t1,a4
    aa44:	d41ff06f          	j	a784 <__subdf3+0x3c4>
    aa48:	00361813          	slli	a6,a2,0x3
    aa4c:	01d71793          	slli	a5,a4,0x1d
    aa50:	00385813          	srli	a6,a6,0x3
    aa54:	0107e833          	or	a6,a5,a6
    aa58:	00068413          	mv	s0,a3
    aa5c:	00375793          	srli	a5,a4,0x3
    aa60:	d01ff06f          	j	a760 <__subdf3+0x3a0>
    aa64:	08078663          	beqz	a5,aaf0 <__subdf3+0x730>
    aa68:	01d76733          	or	a4,a4,t4
    aa6c:	d6071ae3          	bnez	a4,a7e0 <__subdf3+0x420>
    aa70:	00351513          	slli	a0,a0,0x3
    aa74:	01d31813          	slli	a6,t1,0x1d
    aa78:	00355513          	srli	a0,a0,0x3
    aa7c:	00a86833          	or	a6,a6,a0
    aa80:	00335793          	srli	a5,t1,0x3
    aa84:	d55ff06f          	j	a7d8 <__subdf3+0x418>
    aa88:	de080ae3          	beqz	a6,a87c <__subdf3+0x4bc>
    aa8c:	00361813          	slli	a6,a2,0x3
    aa90:	01d71793          	slli	a5,a4,0x1d
    aa94:	00385813          	srli	a6,a6,0x3
    aa98:	00f86833          	or	a6,a6,a5
    aa9c:	00068413          	mv	s0,a3
    aaa0:	00375793          	srli	a5,a4,0x3
    aaa4:	cc5ff06f          	j	a768 <__subdf3+0x3a8>
    aaa8:	41df09b3          	sub	s3,t5,t4
    aaac:	40e307b3          	sub	a5,t1,a4
    aab0:	013f3f33          	sltu	t5,t5,s3
    aab4:	41e78633          	sub	a2,a5,t5
    aab8:	00100493          	li	s1,1
    aabc:	9d1ff06f          	j	a48c <__subdf3+0xcc>
    aac0:	00351813          	slli	a6,a0,0x3
    aac4:	01d31693          	slli	a3,t1,0x1d
    aac8:	00385813          	srli	a6,a6,0x3
    aacc:	0106e833          	or	a6,a3,a6
    aad0:	00335793          	srli	a5,t1,0x3
    aad4:	d05ff06f          	j	a7d8 <__subdf3+0x418>
    aad8:	41ee89b3          	sub	s3,t4,t5
    aadc:	40670633          	sub	a2,a4,t1
    aae0:	013eb933          	sltu	s2,t4,s3
    aae4:	41260933          	sub	s2,a2,s2
    aae8:	00068413          	mv	s0,a3
    aaec:	9b5ff06f          	j	a4a0 <__subdf3+0xe0>
    aaf0:	00361613          	slli	a2,a2,0x3
    aaf4:	01d71813          	slli	a6,a4,0x1d
    aaf8:	00365613          	srli	a2,a2,0x3
    aafc:	00c86833          	or	a6,a6,a2
    ab00:	00375793          	srli	a5,a4,0x3
    ab04:	cd5ff06f          	j	a7d8 <__subdf3+0x418>
    ab08:	41df09b3          	sub	s3,t5,t4
    ab0c:	40e307b3          	sub	a5,t1,a4
    ab10:	013f3633          	sltu	a2,t5,s3
    ab14:	40c78633          	sub	a2,a5,a2
    ab18:	00861793          	slli	a5,a2,0x8
    ab1c:	0c07d663          	bgez	a5,abe8 <__subdf3+0x828>
    ab20:	41ee89b3          	sub	s3,t4,t5
    ab24:	406707b3          	sub	a5,a4,t1
    ab28:	013ebeb3          	sltu	t4,t4,s3
    ab2c:	41d78633          	sub	a2,a5,t4
    ab30:	00068413          	mv	s0,a3
    ab34:	9d5ff06f          	j	a508 <__subdf3+0x148>
    ab38:	01e36333          	or	t1,t1,t5
    ab3c:	00603833          	snez	a6,t1
    ab40:	d99ff06f          	j	a8d8 <__subdf3+0x518>
    ab44:	fe058813          	addi	a6,a1,-32
    ab48:	02000793          	li	a5,32
    ab4c:	010359b3          	srl	s3,t1,a6
    ab50:	00f58a63          	beq	a1,a5,ab64 <__subdf3+0x7a4>
    ab54:	04000793          	li	a5,64
    ab58:	40b785b3          	sub	a1,a5,a1
    ab5c:	00b31333          	sll	t1,t1,a1
    ab60:	006f6f33          	or	t5,t5,t1
    ab64:	01e03833          	snez	a6,t5
    ab68:	01386833          	or	a6,a6,s3
    ab6c:	e79ff06f          	j	a9e4 <__subdf3+0x624>
    ab70:	41ee89b3          	sub	s3,t4,t5
    ab74:	406707b3          	sub	a5,a4,t1
    ab78:	013ebeb3          	sltu	t4,t4,s3
    ab7c:	41d78633          	sub	a2,a5,t4
    ab80:	00068413          	mv	s0,a3
    ab84:	00100493          	li	s1,1
    ab88:	905ff06f          	j	a48c <__subdf3+0xcc>
    ab8c:	00361813          	slli	a6,a2,0x3
    ab90:	01d71793          	slli	a5,a4,0x1d
    ab94:	00385813          	srli	a6,a6,0x3
    ab98:	00f86833          	or	a6,a6,a5
    ab9c:	00375793          	srli	a5,a4,0x3
    aba0:	bc9ff06f          	j	a768 <__subdf3+0x3a8>
    aba4:	01df09b3          	add	s3,t5,t4
    aba8:	00e307b3          	add	a5,t1,a4
    abac:	01e9bf33          	sltu	t5,s3,t5
    abb0:	01e78633          	add	a2,a5,t5
    abb4:	00861793          	slli	a5,a2,0x8
    abb8:	b807d6e3          	bgez	a5,a744 <__subdf3+0x384>
    abbc:	ff8007b7          	lui	a5,0xff800
    abc0:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    abc4:	00f67633          	and	a2,a2,a5
    abc8:	00100493          	li	s1,1
    abcc:	b79ff06f          	j	a744 <__subdf3+0x384>
    abd0:	00361613          	slli	a2,a2,0x3
    abd4:	01d71813          	slli	a6,a4,0x1d
    abd8:	00365613          	srli	a2,a2,0x3
    abdc:	00c86833          	or	a6,a6,a2
    abe0:	00375793          	srli	a5,a4,0x3
    abe4:	b7dff06f          	j	a760 <__subdf3+0x3a0>
    abe8:	00c9e833          	or	a6,s3,a2
    abec:	c80808e3          	beqz	a6,a87c <__subdf3+0x4bc>
    abf0:	b55ff06f          	j	a744 <__subdf3+0x384>
    abf4:	fe058813          	addi	a6,a1,-32
    abf8:	02000793          	li	a5,32
    abfc:	010359b3          	srl	s3,t1,a6
    ac00:	00f58a63          	beq	a1,a5,ac14 <__subdf3+0x854>
    ac04:	04000793          	li	a5,64
    ac08:	40b785b3          	sub	a1,a5,a1
    ac0c:	00b31333          	sll	t1,t1,a1
    ac10:	006f6f33          	or	t5,t5,t1
    ac14:	01e03833          	snez	a6,t5
    ac18:	01386833          	or	a6,a6,s3
    ac1c:	cbdff06f          	j	a8d8 <__subdf3+0x518>
    ac20:	00000413          	li	s0,0
    ac24:	7ff00713          	li	a4,2047
    ac28:	000807b7          	lui	a5,0x80
    ac2c:	93dff06f          	j	a568 <__subdf3+0x1a8>
    ac30:	01df09b3          	add	s3,t5,t4
    ac34:	00e307b3          	add	a5,t1,a4
    ac38:	01d9beb3          	sltu	t4,s3,t4
    ac3c:	01d78633          	add	a2,a5,t4
    ac40:	d39ff06f          	j	a978 <__subdf3+0x5b8>

0000ac44 <__unorddf2>:
    ac44:	0145d713          	srli	a4,a1,0x14
    ac48:	001007b7          	lui	a5,0x100
    ac4c:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf4e87>
    ac50:	fff74713          	not	a4,a4
    ac54:	0146d813          	srli	a6,a3,0x14
    ac58:	00b7f5b3          	and	a1,a5,a1
    ac5c:	00d7f7b3          	and	a5,a5,a3
    ac60:	01571693          	slli	a3,a4,0x15
    ac64:	7ff87813          	andi	a6,a6,2047
    ac68:	02068063          	beqz	a3,ac88 <__unorddf2+0x44>
    ac6c:	7ff00713          	li	a4,2047
    ac70:	00000513          	li	a0,0
    ac74:	00e80463          	beq	a6,a4,ac7c <__unorddf2+0x38>
    ac78:	00008067          	ret
    ac7c:	00c7e7b3          	or	a5,a5,a2
    ac80:	00f03533          	snez	a0,a5
    ac84:	00008067          	ret
    ac88:	00a5e5b3          	or	a1,a1,a0
    ac8c:	00100513          	li	a0,1
    ac90:	fc058ee3          	beqz	a1,ac6c <__unorddf2+0x28>
    ac94:	00008067          	ret

0000ac98 <__fixdfsi>:
    ac98:	0145d793          	srli	a5,a1,0x14
    ac9c:	001006b7          	lui	a3,0x100
    aca0:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xf4e87>
    aca4:	7ff7f793          	andi	a5,a5,2047
    aca8:	3fe00613          	li	a2,1022
    acac:	00b77733          	and	a4,a4,a1
    acb0:	01f5d593          	srli	a1,a1,0x1f
    acb4:	00f65e63          	bge	a2,a5,acd0 <__fixdfsi+0x38>
    acb8:	41d00613          	li	a2,1053
    acbc:	00f65e63          	bge	a2,a5,acd8 <__fixdfsi+0x40>
    acc0:	80000537          	lui	a0,0x80000
    acc4:	fff54513          	not	a0,a0
    acc8:	00a58533          	add	a0,a1,a0
    accc:	00008067          	ret
    acd0:	00000513          	li	a0,0
    acd4:	00008067          	ret
    acd8:	43300613          	li	a2,1075
    acdc:	40f60633          	sub	a2,a2,a5
    ace0:	01f00813          	li	a6,31
    ace4:	00d76733          	or	a4,a4,a3
    ace8:	02c85063          	bge	a6,a2,ad08 <__fixdfsi+0x70>
    acec:	41300693          	li	a3,1043
    acf0:	40f687b3          	sub	a5,a3,a5
    acf4:	00f757b3          	srl	a5,a4,a5
    acf8:	40f00533          	neg	a0,a5
    acfc:	fc059ce3          	bnez	a1,acd4 <__fixdfsi+0x3c>
    ad00:	00078513          	mv	a0,a5
    ad04:	00008067          	ret
    ad08:	bed78793          	addi	a5,a5,-1043
    ad0c:	00f717b3          	sll	a5,a4,a5
    ad10:	00c55533          	srl	a0,a0,a2
    ad14:	00a7e7b3          	or	a5,a5,a0
    ad18:	fe1ff06f          	j	acf8 <__fixdfsi+0x60>

0000ad1c <__floatsidf>:
    ad1c:	ff010113          	addi	sp,sp,-16
    ad20:	00112623          	sw	ra,12(sp)
    ad24:	00812423          	sw	s0,8(sp)
    ad28:	00912223          	sw	s1,4(sp)
    ad2c:	04050c63          	beqz	a0,ad84 <__floatsidf+0x68>
    ad30:	41f55793          	srai	a5,a0,0x1f
    ad34:	00a7c4b3          	xor	s1,a5,a0
    ad38:	40f484b3          	sub	s1,s1,a5
    ad3c:	00050413          	mv	s0,a0
    ad40:	00048513          	mv	a0,s1
    ad44:	ffffa097          	auipc	ra,0xffffa
    ad48:	ff0080e7          	jalr	-16(ra) # 4d34 <__clzsi2>
    ad4c:	41e00693          	li	a3,1054
    ad50:	40a686b3          	sub	a3,a3,a0
    ad54:	00a00793          	li	a5,10
    ad58:	01f45413          	srli	s0,s0,0x1f
    ad5c:	7ff6f693          	andi	a3,a3,2047
    ad60:	06a7c463          	blt	a5,a0,adc8 <__floatsidf+0xac>
    ad64:	00b00713          	li	a4,11
    ad68:	40a70733          	sub	a4,a4,a0
    ad6c:	00e4d7b3          	srl	a5,s1,a4
    ad70:	01550513          	addi	a0,a0,21 # 80000015 <__freertos_irq_stack_top+0x7eff0015>
    ad74:	00c79793          	slli	a5,a5,0xc
    ad78:	00a494b3          	sll	s1,s1,a0
    ad7c:	00c7d793          	srli	a5,a5,0xc
    ad80:	0140006f          	j	ad94 <__floatsidf+0x78>
    ad84:	00000413          	li	s0,0
    ad88:	00000693          	li	a3,0
    ad8c:	00000793          	li	a5,0
    ad90:	00000493          	li	s1,0
    ad94:	00c79793          	slli	a5,a5,0xc
    ad98:	01469693          	slli	a3,a3,0x14
    ad9c:	00c7d793          	srli	a5,a5,0xc
    ada0:	01f41413          	slli	s0,s0,0x1f
    ada4:	00d7e7b3          	or	a5,a5,a3
    ada8:	0087e7b3          	or	a5,a5,s0
    adac:	00c12083          	lw	ra,12(sp)
    adb0:	00812403          	lw	s0,8(sp)
    adb4:	00048513          	mv	a0,s1
    adb8:	00078593          	mv	a1,a5
    adbc:	00412483          	lw	s1,4(sp)
    adc0:	01010113          	addi	sp,sp,16
    adc4:	00008067          	ret
    adc8:	ff550513          	addi	a0,a0,-11
    adcc:	00a497b3          	sll	a5,s1,a0
    add0:	00c79793          	slli	a5,a5,0xc
    add4:	00c7d793          	srli	a5,a5,0xc
    add8:	00000493          	li	s1,0
    addc:	fb9ff06f          	j	ad94 <__floatsidf+0x78>

0000ade0 <__trunctfdf2>:
    ade0:	00c52803          	lw	a6,12(a0)
    ade4:	00052703          	lw	a4,0(a0)
    ade8:	00452683          	lw	a3,4(a0)
    adec:	00852583          	lw	a1,8(a0)
    adf0:	00008537          	lui	a0,0x8
    adf4:	fff50793          	addi	a5,a0,-1 # 7fff <__swhatbuf_r+0x6f>
    adf8:	01085613          	srli	a2,a6,0x10
    adfc:	00359e13          	slli	t3,a1,0x3
    ae00:	00f67633          	and	a2,a2,a5
    ae04:	01d75893          	srli	a7,a4,0x1d
    ae08:	01d6d793          	srli	a5,a3,0x1d
    ae0c:	01081313          	slli	t1,a6,0x10
    ae10:	00369693          	slli	a3,a3,0x3
    ae14:	ff010113          	addi	sp,sp,-16
    ae18:	01c7e7b3          	or	a5,a5,t3
    ae1c:	0116e6b3          	or	a3,a3,a7
    ae20:	01035313          	srli	t1,t1,0x10
    ae24:	00371e13          	slli	t3,a4,0x3
    ae28:	00160893          	addi	a7,a2,1
    ae2c:	ffe50513          	addi	a0,a0,-2
    ae30:	01d5d593          	srli	a1,a1,0x1d
    ae34:	00331313          	slli	t1,t1,0x3
    ae38:	00f12423          	sw	a5,8(sp)
    ae3c:	00d12223          	sw	a3,4(sp)
    ae40:	01c12023          	sw	t3,0(sp)
    ae44:	00a8f533          	and	a0,a7,a0
    ae48:	01f85813          	srli	a6,a6,0x1f
    ae4c:	0065e5b3          	or	a1,a1,t1
    ae50:	04050663          	beqz	a0,ae9c <__trunctfdf2+0xbc>
    ae54:	ffffc737          	lui	a4,0xffffc
    ae58:	40070713          	addi	a4,a4,1024 # ffffc400 <__freertos_irq_stack_top+0xfefec400>
    ae5c:	00e60633          	add	a2,a2,a4
    ae60:	7fe00713          	li	a4,2046
    ae64:	08c75463          	bge	a4,a2,aeec <__trunctfdf2+0x10c>
    ae68:	7ff00613          	li	a2,2047
    ae6c:	00000713          	li	a4,0
    ae70:	00000793          	li	a5,0
    ae74:	00c71713          	slli	a4,a4,0xc
    ae78:	01461613          	slli	a2,a2,0x14
    ae7c:	00c75713          	srli	a4,a4,0xc
    ae80:	01f81813          	slli	a6,a6,0x1f
    ae84:	00c76733          	or	a4,a4,a2
    ae88:	01076733          	or	a4,a4,a6
    ae8c:	00078513          	mv	a0,a5
    ae90:	00070593          	mv	a1,a4
    ae94:	01010113          	addi	sp,sp,16
    ae98:	00008067          	ret
    ae9c:	00f6e7b3          	or	a5,a3,a5
    aea0:	00b7e7b3          	or	a5,a5,a1
    aea4:	01c7e7b3          	or	a5,a5,t3
    aea8:	02061663          	bnez	a2,aed4 <__trunctfdf2+0xf4>
    aeac:	10078a63          	beqz	a5,afc0 <__trunctfdf2+0x1e0>
    aeb0:	00000793          	li	a5,0
    aeb4:	00500693          	li	a3,5
    aeb8:	0036d593          	srli	a1,a3,0x3
    aebc:	00979713          	slli	a4,a5,0x9
    aec0:	01d79693          	slli	a3,a5,0x1d
    aec4:	00b6e7b3          	or	a5,a3,a1
    aec8:	00c75713          	srli	a4,a4,0xc
    aecc:	7ff67613          	andi	a2,a2,2047
    aed0:	fa5ff06f          	j	ae74 <__trunctfdf2+0x94>
    aed4:	f8078ae3          	beqz	a5,ae68 <__trunctfdf2+0x88>
    aed8:	00000813          	li	a6,0
    aedc:	7ff00613          	li	a2,2047
    aee0:	00080737          	lui	a4,0x80
    aee4:	00000793          	li	a5,0
    aee8:	f8dff06f          	j	ae74 <__trunctfdf2+0x94>
    aeec:	0ec04063          	bgtz	a2,afcc <__trunctfdf2+0x1ec>
    aef0:	fcc00793          	li	a5,-52
    aef4:	14f64a63          	blt	a2,a5,b048 <__trunctfdf2+0x268>
    aef8:	03d00793          	li	a5,61
    aefc:	40c78633          	sub	a2,a5,a2
    af00:	40565793          	srai	a5,a2,0x5
    af04:	00080737          	lui	a4,0x80
    af08:	00e5e5b3          	or	a1,a1,a4
    af0c:	00279513          	slli	a0,a5,0x2
    af10:	00010713          	mv	a4,sp
    af14:	00000693          	li	a3,0
    af18:	00b12623          	sw	a1,12(sp)
    af1c:	00a108b3          	add	a7,sp,a0
    af20:	00470713          	addi	a4,a4,4 # 80004 <_data_lma+0x74e8c>
    af24:	01f67613          	andi	a2,a2,31
    af28:	01c6e6b3          	or	a3,a3,t3
    af2c:	01170a63          	beq	a4,a7,af40 <__trunctfdf2+0x160>
    af30:	00072e03          	lw	t3,0(a4)
    af34:	00470713          	addi	a4,a4,4
    af38:	01c6e6b3          	or	a3,a3,t3
    af3c:	ff171ae3          	bne	a4,a7,af30 <__trunctfdf2+0x150>
    af40:	00300713          	li	a4,3
    af44:	40f70733          	sub	a4,a4,a5
    af48:	12060463          	beqz	a2,b070 <__trunctfdf2+0x290>
    af4c:	01010893          	addi	a7,sp,16
    af50:	00a888b3          	add	a7,a7,a0
    af54:	ff08a883          	lw	a7,-16(a7)
    af58:	02000e13          	li	t3,32
    af5c:	40ce0e33          	sub	t3,t3,a2
    af60:	01c898b3          	sll	a7,a7,t3
    af64:	0116e6b3          	or	a3,a3,a7
    af68:	14070e63          	beqz	a4,b0c4 <__trunctfdf2+0x2e4>
    af6c:	00271713          	slli	a4,a4,0x2
    af70:	00a10533          	add	a0,sp,a0
    af74:	00e10eb3          	add	t4,sp,a4
    af78:	00010893          	mv	a7,sp
    af7c:	00052583          	lw	a1,0(a0)
    af80:	00452303          	lw	t1,4(a0)
    af84:	00488893          	addi	a7,a7,4
    af88:	00c5d5b3          	srl	a1,a1,a2
    af8c:	01c31333          	sll	t1,t1,t3
    af90:	0065e5b3          	or	a1,a1,t1
    af94:	feb8ae23          	sw	a1,-4(a7)
    af98:	00450513          	addi	a0,a0,4
    af9c:	ff1e90e3          	bne	t4,a7,af7c <__trunctfdf2+0x19c>
    afa0:	00400593          	li	a1,4
    afa4:	40f587b3          	sub	a5,a1,a5
    afa8:	00c12583          	lw	a1,12(sp)
    afac:	01010513          	addi	a0,sp,16
    afb0:	00e50733          	add	a4,a0,a4
    afb4:	00c5d5b3          	srl	a1,a1,a2
    afb8:	feb72823          	sw	a1,-16(a4)
    afbc:	0d80006f          	j	b094 <__trunctfdf2+0x2b4>
    afc0:	00000613          	li	a2,0
    afc4:	00000713          	li	a4,0
    afc8:	eadff06f          	j	ae74 <__trunctfdf2+0x94>
    afcc:	00469713          	slli	a4,a3,0x4
    afd0:	00479513          	slli	a0,a5,0x4
    afd4:	01c76733          	or	a4,a4,t3
    afd8:	01c6d693          	srli	a3,a3,0x1c
    afdc:	01c7d793          	srli	a5,a5,0x1c
    afe0:	00459593          	slli	a1,a1,0x4
    afe4:	00e03733          	snez	a4,a4
    afe8:	00a6e6b3          	or	a3,a3,a0
    afec:	00b7e7b3          	or	a5,a5,a1
    aff0:	00d766b3          	or	a3,a4,a3
    aff4:	0076f713          	andi	a4,a3,7
    aff8:	00070863          	beqz	a4,b008 <__trunctfdf2+0x228>
    affc:	00f6f713          	andi	a4,a3,15
    b000:	00400593          	li	a1,4
    b004:	04b71863          	bne	a4,a1,b054 <__trunctfdf2+0x274>
    b008:	00800737          	lui	a4,0x800
    b00c:	00e7f733          	and	a4,a5,a4
    b010:	ea0704e3          	beqz	a4,aeb8 <__trunctfdf2+0xd8>
    b014:	00160613          	addi	a2,a2,1
    b018:	7ff00713          	li	a4,2047
    b01c:	e4e606e3          	beq	a2,a4,ae68 <__trunctfdf2+0x88>
    b020:	ff800737          	lui	a4,0xff800
    b024:	fff70713          	addi	a4,a4,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    b028:	00e7f733          	and	a4,a5,a4
    b02c:	01d71793          	slli	a5,a4,0x1d
    b030:	0036d693          	srli	a3,a3,0x3
    b034:	00971713          	slli	a4,a4,0x9
    b038:	7ff67613          	andi	a2,a2,2047
    b03c:	00d7e7b3          	or	a5,a5,a3
    b040:	00c75713          	srli	a4,a4,0xc
    b044:	e31ff06f          	j	ae74 <__trunctfdf2+0x94>
    b048:	00100693          	li	a3,1
    b04c:	00000793          	li	a5,0
    b050:	00000613          	li	a2,0
    b054:	ffc6b713          	sltiu	a4,a3,-4
    b058:	00174713          	xori	a4,a4,1
    b05c:	00e787b3          	add	a5,a5,a4
    b060:	00800737          	lui	a4,0x800
    b064:	00468693          	addi	a3,a3,4
    b068:	00e7f733          	and	a4,a5,a4
    b06c:	fa5ff06f          	j	b010 <__trunctfdf2+0x230>
    b070:	00010593          	mv	a1,sp
    b074:	00a588b3          	add	a7,a1,a0
    b078:	0008a883          	lw	a7,0(a7)
    b07c:	00458593          	addi	a1,a1,4
    b080:	00160613          	addi	a2,a2,1
    b084:	ff15ae23          	sw	a7,-4(a1)
    b088:	fec756e3          	bge	a4,a2,b074 <__trunctfdf2+0x294>
    b08c:	00400713          	li	a4,4
    b090:	40f707b3          	sub	a5,a4,a5
    b094:	00279793          	slli	a5,a5,0x2
    b098:	00f107b3          	add	a5,sp,a5
    b09c:	01010713          	addi	a4,sp,16
    b0a0:	0007a023          	sw	zero,0(a5)
    b0a4:	00478793          	addi	a5,a5,4
    b0a8:	fee79ce3          	bne	a5,a4,b0a0 <__trunctfdf2+0x2c0>
    b0ac:	00012703          	lw	a4,0(sp)
    b0b0:	00d036b3          	snez	a3,a3
    b0b4:	00412783          	lw	a5,4(sp)
    b0b8:	00e6e6b3          	or	a3,a3,a4
    b0bc:	00000613          	li	a2,0
    b0c0:	f35ff06f          	j	aff4 <__trunctfdf2+0x214>
    b0c4:	00100793          	li	a5,1
    b0c8:	00000713          	li	a4,0
    b0cc:	ee1ff06f          	j	afac <__trunctfdf2+0x1cc>

0000b0d0 <_close>:
    b0d0:	05800793          	li	a5,88
    b0d4:	00ff6717          	auipc	a4,0xff6
    b0d8:	b8f72a23          	sw	a5,-1132(a4) # 1000c68 <errno>
    b0dc:	fff00513          	li	a0,-1
    b0e0:	00008067          	ret

0000b0e4 <_fstat>:
    b0e4:	05800793          	li	a5,88
    b0e8:	00ff6717          	auipc	a4,0xff6
    b0ec:	b8f72023          	sw	a5,-1152(a4) # 1000c68 <errno>
    b0f0:	fff00513          	li	a0,-1
    b0f4:	00008067          	ret

0000b0f8 <_isatty>:
    b0f8:	05800793          	li	a5,88
    b0fc:	00ff6717          	auipc	a4,0xff6
    b100:	b6f72623          	sw	a5,-1172(a4) # 1000c68 <errno>
    b104:	00000513          	li	a0,0
    b108:	00008067          	ret

0000b10c <_lseek>:
    b10c:	05800793          	li	a5,88
    b110:	00ff6717          	auipc	a4,0xff6
    b114:	b4f72c23          	sw	a5,-1192(a4) # 1000c68 <errno>
    b118:	fff00513          	li	a0,-1
    b11c:	00008067          	ret

0000b120 <_read>:
    b120:	05800793          	li	a5,88
    b124:	00ff6717          	auipc	a4,0xff6
    b128:	b4f72223          	sw	a5,-1212(a4) # 1000c68 <errno>
    b12c:	fff00513          	li	a0,-1
    b130:	00008067          	ret

0000b134 <_sbrk>:
    b134:	00ff6797          	auipc	a5,0xff6
    b138:	b2078793          	addi	a5,a5,-1248 # 1000c54 <heap_end.1518>
    b13c:	0007a783          	lw	a5,0(a5)
    b140:	00078c63          	beqz	a5,b158 <_sbrk+0x24>
    b144:	00a78533          	add	a0,a5,a0
    b148:	00ff6717          	auipc	a4,0xff6
    b14c:	b0a72623          	sw	a0,-1268(a4) # 1000c54 <heap_end.1518>
    b150:	00078513          	mv	a0,a5
    b154:	00008067          	ret
    b158:	00ff6797          	auipc	a5,0xff6
    b15c:	b1878793          	addi	a5,a5,-1256 # 1000c70 <_end>
    b160:	00a78533          	add	a0,a5,a0
    b164:	00ff6717          	auipc	a4,0xff6
    b168:	aea72823          	sw	a0,-1296(a4) # 1000c54 <heap_end.1518>
    b16c:	00078513          	mv	a0,a5
    b170:	00008067          	ret

Disassembly of section .sdata2._global_impure_ptr:

0000b174 <_global_impure_ptr>:
    b174:	0a60                	addi	s0,sp,284
    b176:	0100                	addi	s0,sp,128

Disassembly of section .data:

01000000 <errpat-0x4c4>:
 1000000:	72617473          	csrrci	s0,0x726,2
 1000004:	2074                	fld	fa3,192(s0)
 1000006:	6574                	flw	fa3,76(a0)
 1000008:	31347473          	csrrci	s0,0x313,8
	...
 1000014:	0000                	unimp
 1000016:	3ff0                	fld	fa2,248(a5)
 1000018:	0000                	unimp
 100001a:	0000                	unimp
 100001c:	0000                	unimp
 100001e:	4024                	lw	s1,64(s0)
 1000020:	72617473          	csrrci	s0,0x726,2
 1000024:	2074                	fld	fa3,192(s0)
 1000026:	6574                	flw	fa3,76(a0)
 1000028:	00317473          	csrrci	s0,fcsr,2
 100002c:	72617473          	csrrci	s0,0x726,2
 1000030:	2074                	fld	fa3,192(s0)
 1000032:	6574                	flw	fa3,76(a0)
 1000034:	00327473          	csrrci	s0,fcsr,4
 1000038:	72617473          	csrrci	s0,0x726,2
 100003c:	2074                	fld	fa3,192(s0)
 100003e:	6574                	flw	fa3,76(a0)
 1000040:	31327473          	csrrci	s0,0x313,4
 1000044:	0000                	unimp
 1000046:	0000                	unimp
 1000048:	72617473          	csrrci	s0,0x726,2
 100004c:	2074                	fld	fa3,192(s0)
 100004e:	6574                	flw	fa3,76(a0)
 1000050:	32327473          	csrrci	s0,mhpmevent3,4
 1000054:	0000                	unimp
 1000056:	0000                	unimp
 1000058:	72617473          	csrrci	s0,0x726,2
 100005c:	2074                	fld	fa3,192(s0)
 100005e:	6574                	flw	fa3,76(a0)
 1000060:	00337473          	csrrci	s0,fcsr,6
 1000064:	72617473          	csrrci	s0,0x726,2
 1000068:	2074                	fld	fa3,192(s0)
 100006a:	6574                	flw	fa3,76(a0)
 100006c:	00347473          	csrrci	s0,fcsr,8
 1000070:	72617473          	csrrci	s0,0x726,2
 1000074:	2074                	fld	fa3,192(s0)
 1000076:	6574                	flw	fa3,76(a0)
 1000078:	34347473          	csrrci	s0,mtval,8
 100007c:	0000                	unimp
 100007e:	0000                	unimp
 1000080:	6b36                	flw	fs6,76(sp)
 1000082:	7020                	flw	fs0,96(s0)
 1000084:	7265                	lui	tp,0xffff9
 1000086:	6f66                	flw	ft10,88(sp)
 1000088:	6d72                	flw	fs10,28(sp)
 100008a:	6e61                	lui	t3,0x18
 100008c:	72206563          	bltu	zero,sp,10007b6 <__clz_tab+0x16a>
 1000090:	6e75                	lui	t3,0x1d
 1000092:	7020                	flw	fs0,96(s0)
 1000094:	7261                	lui	tp,0xffff8
 1000096:	6d61                	lui	s10,0x18
 1000098:	7465                	lui	s0,0xffff9
 100009a:	7265                	lui	tp,0xffff9
 100009c:	6f662073          	csrs	0x6f6,a2
 10000a0:	2072                	fld	ft0,280(sp)
 10000a2:	65726f63          	bltu	tp,s7,1000700 <__clz_tab+0xb4>
 10000a6:	616d                	addi	sp,sp,240
 10000a8:	6b72                	flw	fs6,28(sp)
 10000aa:	002e                	c.slli	zero,0xb
 10000ac:	6b36                	flw	fs6,76(sp)
 10000ae:	7620                	flw	fs0,104(a2)
 10000b0:	6c61                	lui	s8,0x18
 10000b2:	6469                	lui	s0,0x1a
 10000b4:	7461                	lui	s0,0xffff8
 10000b6:	6f69                	lui	t5,0x1a
 10000b8:	206e                	fld	ft0,216(sp)
 10000ba:	7572                	flw	fa0,60(sp)
 10000bc:	206e                	fld	ft0,216(sp)
 10000be:	6170                	flw	fa2,68(a0)
 10000c0:	6172                	flw	ft2,28(sp)
 10000c2:	656d                	lui	a0,0x1b
 10000c4:	6574                	flw	fa3,76(a0)
 10000c6:	7372                	flw	ft6,60(sp)
 10000c8:	6620                	flw	fs0,72(a2)
 10000ca:	6320726f          	jal	tp,10076fc <__global_pointer$+0x62cc>
 10000ce:	6d65726f          	jal	tp,10577a4 <__freertos_irq_stack_top+0x477a4>
 10000d2:	7261                	lui	tp,0xffff8
 10000d4:	00002e6b          	0x2e6b
 10000d8:	7250                	flw	fa2,36(a2)
 10000da:	6c69666f          	jal	a2,10967a0 <__freertos_irq_stack_top+0x867a0>
 10000de:	2065                	jal	1000186 <_data+0x186>
 10000e0:	656e6567          	0x656e6567
 10000e4:	6172                	flw	ft2,28(sp)
 10000e6:	6974                	flw	fa3,84(a0)
 10000e8:	72206e6f          	jal	t3,100680a <__global_pointer$+0x53da>
 10000ec:	6e75                	lui	t3,0x1d
 10000ee:	7020                	flw	fs0,96(s0)
 10000f0:	7261                	lui	tp,0xffff8
 10000f2:	6d61                	lui	s10,0x18
 10000f4:	7465                	lui	s0,0xffff9
 10000f6:	7265                	lui	tp,0xffff9
 10000f8:	6f662073          	csrs	0x6f6,a2
 10000fc:	2072                	fld	ft0,280(sp)
 10000fe:	65726f63          	bltu	tp,s7,100075c <__clz_tab+0x110>
 1000102:	616d                	addi	sp,sp,240
 1000104:	6b72                	flw	fs6,28(sp)
 1000106:	002e                	c.slli	zero,0xb
 1000108:	4b32                	lw	s6,12(sp)
 100010a:	7020                	flw	fs0,96(s0)
 100010c:	7265                	lui	tp,0xffff9
 100010e:	6f66                	flw	ft10,88(sp)
 1000110:	6d72                	flw	fs10,28(sp)
 1000112:	6e61                	lui	t3,0x18
 1000114:	72206563          	bltu	zero,sp,100083e <__sf_fake_stdout+0x1e>
 1000118:	6e75                	lui	t3,0x1d
 100011a:	7020                	flw	fs0,96(s0)
 100011c:	7261                	lui	tp,0xffff8
 100011e:	6d61                	lui	s10,0x18
 1000120:	7465                	lui	s0,0xffff9
 1000122:	7265                	lui	tp,0xffff9
 1000124:	6f662073          	csrs	0x6f6,a2
 1000128:	2072                	fld	ft0,280(sp)
 100012a:	65726f63          	bltu	tp,s7,1000788 <__clz_tab+0x13c>
 100012e:	616d                	addi	sp,sp,240
 1000130:	6b72                	flw	fs6,28(sp)
 1000132:	002e                	c.slli	zero,0xb
 1000134:	4b32                	lw	s6,12(sp)
 1000136:	7620                	flw	fs0,104(a2)
 1000138:	6c61                	lui	s8,0x18
 100013a:	6469                	lui	s0,0x1a
 100013c:	7461                	lui	s0,0xffff8
 100013e:	6f69                	lui	t5,0x1a
 1000140:	206e                	fld	ft0,216(sp)
 1000142:	7572                	flw	fa0,60(sp)
 1000144:	206e                	fld	ft0,216(sp)
 1000146:	6170                	flw	fa2,68(a0)
 1000148:	6172                	flw	ft2,28(sp)
 100014a:	656d                	lui	a0,0x1b
 100014c:	6574                	flw	fa3,76(a0)
 100014e:	7372                	flw	ft6,60(sp)
 1000150:	6620                	flw	fs0,72(a2)
 1000152:	6320726f          	jal	tp,1007784 <__global_pointer$+0x6354>
 1000156:	6d65726f          	jal	tp,105782c <__freertos_irq_stack_top+0x4782c>
 100015a:	7261                	lui	tp,0xffff8
 100015c:	00002e6b          	0x2e6b
 1000160:	5d75255b          	0x5d75255b
 1000164:	5245                	li	tp,-15
 1000166:	4f52                	lw	t5,20(sp)
 1000168:	2152                	fld	ft2,272(sp)
 100016a:	6c20                	flw	fs0,88(s0)
 100016c:	7369                	lui	t1,0xffffa
 100016e:	2074                	fld	fa3,192(s0)
 1000170:	20637263          	bgeu	t1,t1,1000374 <_data+0x374>
 1000174:	7830                	flw	fa2,112(s0)
 1000176:	3025                	jal	fff99e <_data_lma+0xff4826>
 1000178:	7834                	flw	fa3,112(s0)
 100017a:	2d20                	fld	fs0,88(a0)
 100017c:	7320                	flw	fs0,96(a4)
 100017e:	6f68                	flw	fa0,92(a4)
 1000180:	6c75                	lui	s8,0x1d
 1000182:	2064                	fld	fs1,192(s0)
 1000184:	6562                	flw	fa0,24(sp)
 1000186:	3020                	fld	fs0,96(s0)
 1000188:	2578                	fld	fa4,200(a0)
 100018a:	3430                	fld	fa2,104(s0)
 100018c:	0a78                	addi	a4,sp,284
 100018e:	0000                	unimp
 1000190:	5d75255b          	0x5d75255b
 1000194:	5245                	li	tp,-15
 1000196:	4f52                	lw	t5,20(sp)
 1000198:	2152                	fld	ft2,272(sp)
 100019a:	6d20                	flw	fs0,88(a0)
 100019c:	7461                	lui	s0,0xffff8
 100019e:	6972                	flw	fs2,28(sp)
 10001a0:	2078                	fld	fa4,192(s0)
 10001a2:	20637263          	bgeu	t1,t1,10003a6 <_data+0x3a6>
 10001a6:	7830                	flw	fa2,112(s0)
 10001a8:	3025                	jal	fff9d0 <_data_lma+0xff4858>
 10001aa:	7834                	flw	fa3,112(s0)
 10001ac:	2d20                	fld	fs0,88(a0)
 10001ae:	7320                	flw	fs0,96(a4)
 10001b0:	6f68                	flw	fa0,92(a4)
 10001b2:	6c75                	lui	s8,0x1d
 10001b4:	2064                	fld	fs1,192(s0)
 10001b6:	6562                	flw	fa0,24(sp)
 10001b8:	3020                	fld	fs0,96(s0)
 10001ba:	2578                	fld	fa4,200(a0)
 10001bc:	3430                	fld	fa2,104(s0)
 10001be:	0a78                	addi	a4,sp,284
 10001c0:	0000                	unimp
 10001c2:	0000                	unimp
 10001c4:	5d75255b          	0x5d75255b
 10001c8:	5245                	li	tp,-15
 10001ca:	4f52                	lw	t5,20(sp)
 10001cc:	2152                	fld	ft2,272(sp)
 10001ce:	7320                	flw	fs0,96(a4)
 10001d0:	6174                	flw	fa3,68(a0)
 10001d2:	6574                	flw	fa3,76(a0)
 10001d4:	6320                	flw	fs0,64(a4)
 10001d6:	6372                	flw	ft6,28(sp)
 10001d8:	3020                	fld	fs0,96(s0)
 10001da:	2578                	fld	fa4,200(a0)
 10001dc:	3430                	fld	fa2,104(s0)
 10001de:	2078                	fld	fa4,192(s0)
 10001e0:	202d                	jal	100020a <_data+0x20a>
 10001e2:	756f6873          	csrrsi	a6,0x756,30
 10001e6:	646c                	flw	fa1,76(s0)
 10001e8:	6220                	flw	fs0,64(a2)
 10001ea:	2065                	jal	1000292 <_data+0x292>
 10001ec:	7830                	flw	fa2,112(s0)
 10001ee:	3025                	jal	fffa16 <_data_lma+0xff489e>
 10001f0:	7834                	flw	fa3,112(s0)
 10001f2:	000a                	c.slli	zero,0x2
 10001f4:	65726f43          	0x65726f43
 10001f8:	614d                	addi	sp,sp,176
 10001fa:	6b72                	flw	fs6,28(sp)
 10001fc:	5320                	lw	s0,96(a4)
 10001fe:	7a69                	lui	s4,0xffffa
 1000200:	2065                	jal	10002a8 <_data+0x2a8>
 1000202:	2020                	fld	fs0,64(s0)
 1000204:	3a20                	fld	fs0,112(a2)
 1000206:	2520                	fld	fs0,72(a0)
 1000208:	0a64                	addi	s1,sp,284
 100020a:	0000                	unimp
 100020c:	6f54                	flw	fa3,28(a4)
 100020e:	6174                	flw	fa3,68(a0)
 1000210:	206c                	fld	fa1,192(s0)
 1000212:	6974                	flw	fa3,84(a0)
 1000214:	20736b63          	bltu	t1,t2,100042a <_data+0x42a>
 1000218:	2020                	fld	fs0,64(s0)
 100021a:	2020                	fld	fs0,64(s0)
 100021c:	3a20                	fld	fs0,112(a2)
 100021e:	2520                	fld	fs0,72(a0)
 1000220:	0a64                	addi	s1,sp,284
 1000222:	0000                	unimp
 1000224:	6f54                	flw	fa3,28(a4)
 1000226:	6174                	flw	fa3,68(a0)
 1000228:	206c                	fld	fa1,192(s0)
 100022a:	6974                	flw	fa3,84(a0)
 100022c:	656d                	lui	a0,0x1b
 100022e:	2820                	fld	fs0,80(s0)
 1000230:	73636573          	csrrsi	a0,0x736,6
 1000234:	3a29                	jal	fffb4e <_data_lma+0xff49d6>
 1000236:	2520                	fld	fs0,72(a0)
 1000238:	666c                	flw	fa1,76(a2)
 100023a:	000a                	c.slli	zero,0x2
 100023c:	7449                	lui	s0,0xffff2
 100023e:	7265                	lui	tp,0xffff9
 1000240:	7461                	lui	s0,0xffff8
 1000242:	6f69                	lui	t5,0x1a
 1000244:	736e                	flw	ft6,248(sp)
 1000246:	6365532f          	0x6365532f
 100024a:	2020                	fld	fs0,64(s0)
 100024c:	3a20                	fld	fs0,112(a2)
 100024e:	2520                	fld	fs0,72(a0)
 1000250:	666c                	flw	fa1,76(a2)
 1000252:	000a                	c.slli	zero,0x2
 1000254:	5245                	li	tp,-15
 1000256:	4f52                	lw	t5,20(sp)
 1000258:	2152                	fld	ft2,272(sp)
 100025a:	4d20                	lw	s0,88(a0)
 100025c:	7375                	lui	t1,0xffffd
 100025e:	2074                	fld	fa3,192(s0)
 1000260:	7865                	lui	a6,0xffff9
 1000262:	6365                	lui	t1,0x19
 1000264:	7475                	lui	s0,0xffffd
 1000266:	2065                	jal	100030e <_data+0x30e>
 1000268:	6f66                	flw	ft10,88(sp)
 100026a:	2072                	fld	ft0,280(sp)
 100026c:	7461                	lui	s0,0xffff8
 100026e:	6c20                	flw	fs0,88(s0)
 1000270:	6165                	addi	sp,sp,112
 1000272:	31207473          	csrrci	s0,0x312,0
 1000276:	2030                	fld	fa2,64(s0)
 1000278:	73636573          	csrrsi	a0,0x736,6
 100027c:	6620                	flw	fs0,72(a2)
 100027e:	6120726f          	jal	tp,1007890 <__global_pointer$+0x6460>
 1000282:	7620                	flw	fs0,104(a2)
 1000284:	6c61                	lui	s8,0x18
 1000286:	6469                	lui	s0,0x1a
 1000288:	7220                	flw	fs0,96(a2)
 100028a:	7365                	lui	t1,0xffff9
 100028c:	6c75                	lui	s8,0x1d
 100028e:	2174                	fld	fa3,192(a0)
 1000290:	0000                	unimp
 1000292:	0000                	unimp
 1000294:	7449                	lui	s0,0xffff2
 1000296:	7265                	lui	tp,0xffff9
 1000298:	7461                	lui	s0,0xffff8
 100029a:	6f69                	lui	t5,0x1a
 100029c:	736e                	flw	ft6,248(sp)
 100029e:	2020                	fld	fs0,64(s0)
 10002a0:	2020                	fld	fs0,64(s0)
 10002a2:	2020                	fld	fs0,64(s0)
 10002a4:	3a20                	fld	fs0,112(a2)
 10002a6:	2520                	fld	fs0,72(a0)
 10002a8:	756c                	flw	fa1,108(a0)
 10002aa:	000a                	c.slli	zero,0x2
 10002ac:	38434347          	fmsub.s	ft6,ft6,ft4,ft7,rmm
 10002b0:	322e                	fld	ft4,232(sp)
 10002b2:	302e                	fld	ft0,232(sp)
 10002b4:	0000                	unimp
 10002b6:	0000                	unimp
 10002b8:	706d6f43          	fmadd.s	ft10,fs10,ft6,fa4,unknown
 10002bc:	6c69                	lui	s8,0x1a
 10002be:	7265                	lui	tp,0xffff9
 10002c0:	7620                	flw	fs0,104(a2)
 10002c2:	7265                	lui	tp,0xffff9
 10002c4:	6e6f6973          	csrrsi	s2,0x6e6,30
 10002c8:	3a20                	fld	fs0,112(a2)
 10002ca:	2520                	fld	fs0,72(a0)
 10002cc:	00000a73          	0xa73
 10002d0:	4f2d                	li	t5,11
 10002d2:	6f430033          	0x6f430033
 10002d6:	706d                	c.lui	zero,0xffffb
 10002d8:	6c69                	lui	s8,0x1a
 10002da:	7265                	lui	tp,0xffff9
 10002dc:	6620                	flw	fs0,72(a2)
 10002de:	616c                	flw	fa1,68(a0)
 10002e0:	20207367          	0x20207367
 10002e4:	3a20                	fld	fs0,112(a2)
 10002e6:	2520                	fld	fs0,72(a0)
 10002e8:	00000a73          	0xa73
 10002ec:	43415453          	0x43415453
 10002f0:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
 10002f4:	654d                	lui	a0,0x13
 10002f6:	6f6d                	lui	t5,0x1b
 10002f8:	7972                	flw	fs2,60(sp)
 10002fa:	6c20                	flw	fs0,88(s0)
 10002fc:	7461636f          	jal	t1,1016a42 <__freertos_irq_stack_top+0x6a42>
 1000300:	6f69                	lui	t5,0x1a
 1000302:	206e                	fld	ft0,216(sp)
 1000304:	3a20                	fld	fs0,112(a2)
 1000306:	2520                	fld	fs0,72(a0)
 1000308:	00000a73          	0xa73
 100030c:	64656573          	csrrsi	a0,0x646,10
 1000310:	20637263          	bgeu	t1,t1,1000514 <scipat+0x20>
 1000314:	2020                	fld	fs0,64(s0)
 1000316:	2020                	fld	fs0,64(s0)
 1000318:	2020                	fld	fs0,64(s0)
 100031a:	2020                	fld	fs0,64(s0)
 100031c:	3a20                	fld	fs0,112(a2)
 100031e:	3020                	fld	fs0,96(s0)
 1000320:	2578                	fld	fa4,200(a0)
 1000322:	3430                	fld	fa2,104(s0)
 1000324:	0a78                	addi	a4,sp,284
 1000326:	0000                	unimp
 1000328:	5d64255b          	0x5d64255b
 100032c:	6c637263          	bgeu	t1,t1,10009f0 <_ctype_+0x94>
 1000330:	7369                	lui	t1,0xffffa
 1000332:	2074                	fld	fa3,192(s0)
 1000334:	2020                	fld	fs0,64(s0)
 1000336:	2020                	fld	fs0,64(s0)
 1000338:	2020                	fld	fs0,64(s0)
 100033a:	203a                	fld	ft0,392(sp)
 100033c:	7830                	flw	fa2,112(s0)
 100033e:	3025                	jal	fffb66 <_data_lma+0xff49ee>
 1000340:	7834                	flw	fa3,112(s0)
 1000342:	000a                	c.slli	zero,0x2
 1000344:	5d64255b          	0x5d64255b
 1000348:	6d637263          	bgeu	t1,s6,1000a0c <_ctype_+0xb0>
 100034c:	7461                	lui	s0,0xffff8
 100034e:	6972                	flw	fs2,28(sp)
 1000350:	2078                	fld	fa4,192(s0)
 1000352:	2020                	fld	fs0,64(s0)
 1000354:	2020                	fld	fs0,64(s0)
 1000356:	203a                	fld	ft0,392(sp)
 1000358:	7830                	flw	fa2,112(s0)
 100035a:	3025                	jal	fffb82 <_data_lma+0xff4a0a>
 100035c:	7834                	flw	fa3,112(s0)
 100035e:	000a                	c.slli	zero,0x2
 1000360:	5d64255b          	0x5d64255b
 1000364:	73637263          	bgeu	t1,s6,1000a88 <impure_data+0x28>
 1000368:	6174                	flw	fa3,68(a0)
 100036a:	6574                	flw	fa3,76(a0)
 100036c:	2020                	fld	fs0,64(s0)
 100036e:	2020                	fld	fs0,64(s0)
 1000370:	2020                	fld	fs0,64(s0)
 1000372:	203a                	fld	ft0,392(sp)
 1000374:	7830                	flw	fa2,112(s0)
 1000376:	3025                	jal	fffb9e <_data_lma+0xff4a26>
 1000378:	7834                	flw	fa3,112(s0)
 100037a:	000a                	c.slli	zero,0x2
 100037c:	5d64255b          	0x5d64255b
 1000380:	66637263          	bgeu	t1,t1,10009e4 <_ctype_+0x88>
 1000384:	6e69                	lui	t3,0x1a
 1000386:	6c61                	lui	s8,0x18
 1000388:	2020                	fld	fs0,64(s0)
 100038a:	2020                	fld	fs0,64(s0)
 100038c:	2020                	fld	fs0,64(s0)
 100038e:	203a                	fld	ft0,392(sp)
 1000390:	7830                	flw	fa2,112(s0)
 1000392:	3025                	jal	fffbba <_data_lma+0xff4a42>
 1000394:	7834                	flw	fa3,112(s0)
 1000396:	000a                	c.slli	zero,0x2
 1000398:	72726f43          	fmadd.d	ft10,ft4,ft7,fa4,unknown
 100039c:	6365                	lui	t1,0x19
 100039e:	2074                	fld	fa3,192(s0)
 10003a0:	7265706f          	j	1057ac6 <__freertos_irq_stack_top+0x47ac6>
 10003a4:	7461                	lui	s0,0xffff8
 10003a6:	6f69                	lui	t5,0x1a
 10003a8:	206e                	fld	ft0,216(sp)
 10003aa:	6176                	flw	ft2,92(sp)
 10003ac:	696c                	flw	fa1,84(a0)
 10003ae:	6164                	flw	fs1,68(a0)
 10003b0:	6574                	flw	fa3,76(a0)
 10003b2:	2e64                	fld	fs1,216(a2)
 10003b4:	5320                	lw	s0,96(a4)
 10003b6:	6565                	lui	a0,0x19
 10003b8:	5220                	lw	s0,96(a2)
 10003ba:	4145                	li	sp,17
 10003bc:	4d44                	lw	s1,28(a0)
 10003be:	2e45                	jal	100076e <__clz_tab+0x122>
 10003c0:	646d                	lui	s0,0x1b
 10003c2:	6620                	flw	fs0,72(a2)
 10003c4:	7220726f          	jal	tp,1007ae6 <__global_pointer$+0x66b6>
 10003c8:	6e75                	lui	t3,0x1d
 10003ca:	6120                	flw	fs0,64(a0)
 10003cc:	646e                	flw	fs0,216(sp)
 10003ce:	7220                	flw	fs0,96(a2)
 10003d0:	7065                	c.lui	zero,0xffff9
 10003d2:	6974726f          	jal	tp,1048268 <__freertos_irq_stack_top+0x38268>
 10003d6:	676e                	flw	fa4,216(sp)
 10003d8:	7220                	flw	fs0,96(a2)
 10003da:	6c75                	lui	s8,0x1d
 10003dc:	7365                	lui	t1,0xffff9
 10003de:	002e                	c.slli	zero,0xb
 10003e0:	65726f43          	0x65726f43
 10003e4:	614d                	addi	sp,sp,176
 10003e6:	6b72                	flw	fs6,28(sp)
 10003e8:	3120                	fld	fs0,96(a0)
 10003ea:	302e                	fld	ft0,232(sp)
 10003ec:	3a20                	fld	fs0,112(a2)
 10003ee:	2520                	fld	fs0,72(a0)
 10003f0:	2066                	fld	ft0,88(sp)
 10003f2:	7325202f          	0x7325202f
 10003f6:	2520                	fld	fs0,72(a0)
 10003f8:	00000073          	ecall
 10003fc:	2f20                	fld	fs0,88(a4)
 10003fe:	2520                	fld	fs0,72(a0)
 1000400:	00000073          	ecall
 1000404:	7245                	lui	tp,0xffff1
 1000406:	6f72                	flw	ft10,28(sp)
 1000408:	7372                	flw	ft6,60(sp)
 100040a:	6420                	flw	fs0,72(s0)
 100040c:	7465                	lui	s0,0xffff9
 100040e:	6365                	lui	t1,0x19
 1000410:	6574                	flw	fa3,76(a0)
 1000412:	0064                	addi	s1,sp,12
 1000414:	6e6e6143          	fmadd.q	ft2,ft8,ft6,fa3,unknown
 1000418:	7620746f          	jal	s0,1007b7a <__global_pointer$+0x674a>
 100041c:	6c61                	lui	s8,0x18
 100041e:	6469                	lui	s0,0x1a
 1000420:	7461                	lui	s0,0xffff8
 1000422:	2065                	jal	10004ca <errpat+0x6>
 1000424:	7265706f          	j	1057b4a <__freertos_irq_stack_top+0x47b4a>
 1000428:	7461                	lui	s0,0xffff8
 100042a:	6f69                	lui	t5,0x1a
 100042c:	206e                	fld	ft0,216(sp)
 100042e:	6f66                	flw	ft10,88(sp)
 1000430:	2072                	fld	ft0,280(sp)
 1000432:	6874                	flw	fa3,84(s0)
 1000434:	7365                	lui	t1,0xffff9
 1000436:	2065                	jal	10004de <floatpat+0xa>
 1000438:	64656573          	csrrsi	a0,0x646,10
 100043c:	7620                	flw	fs0,104(a2)
 100043e:	6c61                	lui	s8,0x18
 1000440:	6575                	lui	a0,0x1d
 1000442:	70202c73          	csrr	s8,0x702
 1000446:	656c                	flw	fa1,76(a0)
 1000448:	7361                	lui	t1,0xffff8
 100044a:	2065                	jal	10004f2 <intpat+0xe>
 100044c:	706d6f63          	bltu	s10,t1,1000b6a <__global_locale+0xaa>
 1000450:	7261                	lui	tp,0xffff8
 1000452:	2065                	jal	10004fa <scipat+0x6>
 1000454:	68746977          	0x68746977
 1000458:	7220                	flw	fs0,96(a2)
 100045a:	7365                	lui	t1,0xffff9
 100045c:	6c75                	lui	s8,0x1d
 100045e:	7374                	flw	fa3,100(a4)
 1000460:	6f20                	flw	fs0,88(a4)
 1000462:	206e                	fld	ft0,216(sp)
 1000464:	2061                	jal	10004ec <intpat+0x8>
 1000466:	776f6e6b          	0x776f6e6b
 100046a:	206e                	fld	ft0,216(sp)
 100046c:	6c70                	flw	fa2,92(s0)
 100046e:	7461                	lui	s0,0xffff8
 1000470:	6f66                	flw	ft10,88(sp)
 1000472:	6d72                	flw	fs10,28(sp)
 1000474:	002e                	c.slli	zero,0xb
 1000476:	0000                	unimp
 1000478:	72617473          	csrrci	s0,0x726,2
 100047c:	2074                	fld	fa3,192(s0)
 100047e:	6574                	flw	fa3,76(a0)
 1000480:	32347473          	csrrci	s0,mhpmevent3,8
 1000484:	0000                	unimp
 1000486:	0000                	unimp
 1000488:	72617473          	csrrci	s0,0x726,2
 100048c:	2074                	fld	fa3,192(s0)
 100048e:	7572                	flw	fa0,60(sp)
 1000490:	216e                	fld	ft2,216(sp)
 1000492:	0021                	c.nop	8
 1000494:	0000                	unimp
 1000496:	0000                	unimp
 1000498:	a9fc                	fsd	fa5,208(a1)
 100049a:	d2f1                	beqz	a3,100045e <_data+0x45e>
 100049c:	624d                	lui	tp,0x13
 100049e:	3f50                	fld	fa2,184(a4)
 10004a0:	20f0                	fld	fa2,192(s1)
 10004a2:	0000                	unimp
 10004a4:	20f0                	fld	fa2,192(s1)
 10004a6:	0000                	unimp
 10004a8:	21ac                	fld	fa1,64(a1)
 10004aa:	0000                	unimp
 10004ac:	21ac                	fld	fa1,64(a1)
 10004ae:	0000                	unimp
 10004b0:	21f4                	fld	fa3,192(a1)
 10004b2:	0000                	unimp
 10004b4:	72617473          	csrrci	s0,0x726,2
 10004b8:	2074                	fld	fa3,192(s0)
 10004ba:	6574                	flw	fa3,76(a0)
 10004bc:	33347473          	csrrci	s0,mhpmevent19,8
 10004c0:	0000                	unimp
	...

010004c4 <errpat>:
static ee_u8 *errpat[4]   = { (ee_u8 *)"T0.3e-1F",
 10004c4:	0504                	addi	s1,sp,640
 10004c6:	0100                	addi	s0,sp,128
 10004c8:	0510                	addi	a2,sp,640
 10004ca:	0100                	addi	s0,sp,128
 10004cc:	051c                	addi	a5,sp,640
 10004ce:	0100                	addi	s0,sp,128
 10004d0:	0528                	addi	a0,sp,648
 10004d2:	0100                	addi	s0,sp,128

010004d4 <floatpat>:
static ee_u8 *floatpat[4] = { (ee_u8 *)"35.54400",
 10004d4:	0564                	addi	s1,sp,652
 10004d6:	0100                	addi	s0,sp,128
 10004d8:	0570                	addi	a2,sp,652
 10004da:	0100                	addi	s0,sp,128
 10004dc:	057c                	addi	a5,sp,652
 10004de:	0100                	addi	s0,sp,128
 10004e0:	0588                	addi	a0,sp,704
 10004e2:	0100                	addi	s0,sp,128

010004e4 <intpat>:
static ee_u8 *intpat[4]
 10004e4:	0594                	addi	a3,sp,704
 10004e6:	0100                	addi	s0,sp,128
 10004e8:	059c                	addi	a5,sp,704
 10004ea:	0100                	addi	s0,sp,128
 10004ec:	05a4                	addi	s1,sp,712
 10004ee:	0100                	addi	s0,sp,128
 10004f0:	05ac                	addi	a1,sp,712
 10004f2:	0100                	addi	s0,sp,128

010004f4 <scipat>:
static ee_u8 *scipat[4]   = { (ee_u8 *)"5.500e+3",
 10004f4:	0534                	addi	a3,sp,648
 10004f6:	0100                	addi	s0,sp,128
 10004f8:	0540                	addi	s0,sp,644
 10004fa:	0100                	addi	s0,sp,128
 10004fc:	054c                	addi	a1,sp,644
 10004fe:	0100                	addi	s0,sp,128
 1000500:	0558                	addi	a4,sp,644
 1000502:	0100                	addi	s0,sp,128
 1000504:	3054                	fld	fa3,160(s0)
 1000506:	332e                	fld	ft6,232(sp)
 1000508:	2d65                	jal	1000bc0 <__global_locale+0x100>
 100050a:	4631                	li	a2,12
 100050c:	0000                	unimp
 100050e:	0000                	unimp
 1000510:	542d                	li	s0,-21
 1000512:	542e                	lw	s0,232(sp)
 1000514:	71542b2b          	0x71542b2b
 1000518:	0000                	unimp
 100051a:	0000                	unimp
 100051c:	5431                	li	s0,-20
 100051e:	65342e33          	0x65342e33
 1000522:	7a34                	flw	fa3,112(a2)
 1000524:	0000                	unimp
 1000526:	0000                	unimp
 1000528:	302e3433          	0x302e3433
 100052c:	2d65                	jal	1000be4 <__global_locale+0x124>
 100052e:	5e54                	lw	a3,60(a2)
 1000530:	0000                	unimp
 1000532:	0000                	unimp
 1000534:	2e35                	jal	1000870 <__mprec_tens+0x8>
 1000536:	3035                	jal	fffd62 <_data_lma+0xff4bea>
 1000538:	6530                	flw	fa2,72(a0)
 100053a:	0000332b          	0x332b
 100053e:	0000                	unimp
 1000540:	2e2d                	jal	100087a <__mprec_tens+0x12>
 1000542:	3231                	jal	fffe4e <_data_lma+0xff4cd6>
 1000544:	322d6533          	0x322d6533
 1000548:	0000                	unimp
 100054a:	0000                	unimp
 100054c:	382d                	jal	fffd86 <_data_lma+0xff4c0e>
 100054e:	382b6537          	lui	a0,0x382b6
 1000552:	00003233          	snez	tp,zero
 1000556:	0000                	unimp
 1000558:	362e302b          	0x362e302b
 100055c:	2d65                	jal	1000c14 <__global_locale+0x154>
 100055e:	3231                	jal	fffe6a <_data_lma+0xff4cf2>
 1000560:	0000                	unimp
 1000562:	0000                	unimp
 1000564:	352e3533          	0x352e3533
 1000568:	3434                	fld	fa3,104(s0)
 100056a:	3030                	fld	fa2,96(s0)
 100056c:	0000                	unimp
 100056e:	0000                	unimp
 1000570:	312e                	fld	ft2,232(sp)
 1000572:	3332                	fld	ft6,296(sp)
 1000574:	3534                	fld	fa3,104(a0)
 1000576:	3030                	fld	fa2,96(s0)
 1000578:	0000                	unimp
 100057a:	0000                	unimp
 100057c:	312d                	jal	10001a6 <_data+0x1a6>
 100057e:	3031                	jal	fffd8a <_data_lma+0xff4c12>
 1000580:	372e                	fld	fa4,232(sp)
 1000582:	3030                	fld	fa2,96(s0)
 1000584:	0000                	unimp
 1000586:	0000                	unimp
 1000588:	362e302b          	0x362e302b
 100058c:	3434                	fld	fa3,104(s0)
 100058e:	3030                	fld	fa2,96(s0)
 1000590:	0000                	unimp
 1000592:	0000                	unimp
 1000594:	3035                	jal	fffdc0 <_data_lma+0xff4c48>
 1000596:	3231                	jal	fffea2 <_data_lma+0xff4d2a>
 1000598:	0000                	unimp
 100059a:	0000                	unimp
 100059c:	3231                	jal	fffea8 <_data_lma+0xff4d30>
 100059e:	00003433          	snez	s0,zero
 10005a2:	0000                	unimp
 10005a4:	382d                	jal	fffdde <_data_lma+0xff4c66>
 10005a6:	00003437          	lui	s0,0x3
 10005aa:	0000                	unimp
 10005ac:	3232312b          	0x3232312b
 10005b0:	0000                	unimp
 10005b2:	0000                	unimp
 10005b4:	27b4                	fld	fa3,72(a5)
 10005b6:	0000                	unimp
 10005b8:	2784                	fld	fs1,8(a5)
 10005ba:	0000                	unimp
 10005bc:	2790                	fld	fa2,8(a5)
 10005be:	0000                	unimp
 10005c0:	279c                	fld	fa5,8(a5)
 10005c2:	0000                	unimp
 10005c4:	27a8                	fld	fa0,72(a5)
 10005c6:	0000                	unimp
 10005c8:	2778                	fld	fa4,200(a4)
 10005ca:	0000                	unimp
 10005cc:	3658                	fld	fa4,168(a2)
 10005ce:	ff00                	fsw	fs0,56(a4)
 10005d0:	341c                	fld	fa5,40(s0)
 10005d2:	ff00                	fsw	fs0,56(a4)
 10005d4:	35c8                	fld	fa0,168(a1)
 10005d6:	ff00                	fsw	fs0,56(a4)
 10005d8:	35d8                	fld	fa4,168(a1)
 10005da:	ff00                	fsw	fs0,56(a4)
 10005dc:	35c8                	fld	fa0,168(a1)
 10005de:	ff00                	fsw	fs0,56(a4)
 10005e0:	3484                	fld	fs1,40(s1)
 10005e2:	ff00                	fsw	fs0,56(a4)
 10005e4:	35c8                	fld	fa0,168(a1)
 10005e6:	ff00                	fsw	fs0,56(a4)
 10005e8:	35d8                	fld	fa4,168(a1)
 10005ea:	ff00                	fsw	fs0,56(a4)
 10005ec:	341c                	fld	fa5,40(s0)
 10005ee:	ff00                	fsw	fs0,56(a4)
 10005f0:	341c                	fld	fa5,40(s0)
 10005f2:	ff00                	fsw	fs0,56(a4)
 10005f4:	3484                	fld	fs1,40(s1)
 10005f6:	ff00                	fsw	fs0,56(a4)
 10005f8:	35d8                	fld	fa4,168(a1)
 10005fa:	ff00                	fsw	fs0,56(a4)
 10005fc:	3644                	fld	fs1,168(a2)
 10005fe:	ff00                	fsw	fs0,56(a4)
 1000600:	3644                	fld	fs1,168(a2)
 1000602:	ff00                	fsw	fs0,56(a4)
 1000604:	3644                	fld	fs1,168(a2)
 1000606:	ff00                	fsw	fs0,56(a4)
 1000608:	3484                	fld	fs1,40(s1)
 100060a:	ff00                	fsw	fs0,56(a4)
 100060c:	40b0                	lw	a2,64(s1)
 100060e:	ff00                	fsw	fs0,56(a4)
 1000610:	3f24                	fld	fs1,120(a4)
 1000612:	ff00                	fsw	fs0,56(a4)
 1000614:	3f24                	fld	fs1,120(a4)
 1000616:	ff00                	fsw	fs0,56(a4)
 1000618:	3f20                	fld	fs0,120(a4)
 100061a:	ff00                	fsw	fs0,56(a4)
 100061c:	3f30                	fld	fa2,120(a4)
 100061e:	ff00                	fsw	fs0,56(a4)
 1000620:	3f30                	fld	fa2,120(a4)
 1000622:	ff00                	fsw	fs0,56(a4)
 1000624:	3ec4                	fld	fs1,184(a3)
 1000626:	ff00                	fsw	fs0,56(a4)
 1000628:	3f20                	fld	fs0,120(a4)
 100062a:	ff00                	fsw	fs0,56(a4)
 100062c:	3f30                	fld	fa2,120(a4)
 100062e:	ff00                	fsw	fs0,56(a4)
 1000630:	3ec4                	fld	fs1,184(a3)
 1000632:	ff00                	fsw	fs0,56(a4)
 1000634:	3f30                	fld	fa2,120(a4)
 1000636:	ff00                	fsw	fs0,56(a4)
 1000638:	3f20                	fld	fs0,120(a4)
 100063a:	ff00                	fsw	fs0,56(a4)
 100063c:	4090                	lw	a2,0(s1)
 100063e:	ff00                	fsw	fs0,56(a4)
 1000640:	4090                	lw	a2,0(s1)
 1000642:	ff00                	fsw	fs0,56(a4)
 1000644:	4090                	lw	a2,0(s1)
 1000646:	ff00                	fsw	fs0,56(a4)
 1000648:	3ec4                	fld	fs1,184(a3)
 100064a:	ff00                	fsw	fs0,56(a4)

0100064c <__clz_tab>:
 100064c:	0100                	addi	s0,sp,128
 100064e:	0202                	c.slli64	tp
 1000650:	03030303          	lb	t1,48(t1) # ffff9030 <__freertos_irq_stack_top+0xfefe9030>
 1000654:	0404                	addi	s1,sp,512
 1000656:	0404                	addi	s1,sp,512
 1000658:	0404                	addi	s1,sp,512
 100065a:	0404                	addi	s1,sp,512
 100065c:	0505                	addi	a0,a0,1
 100065e:	0505                	addi	a0,a0,1
 1000660:	0505                	addi	a0,a0,1
 1000662:	0505                	addi	a0,a0,1
 1000664:	0505                	addi	a0,a0,1
 1000666:	0505                	addi	a0,a0,1
 1000668:	0505                	addi	a0,a0,1
 100066a:	0505                	addi	a0,a0,1
 100066c:	0606                	slli	a2,a2,0x1
 100066e:	0606                	slli	a2,a2,0x1
 1000670:	0606                	slli	a2,a2,0x1
 1000672:	0606                	slli	a2,a2,0x1
 1000674:	0606                	slli	a2,a2,0x1
 1000676:	0606                	slli	a2,a2,0x1
 1000678:	0606                	slli	a2,a2,0x1
 100067a:	0606                	slli	a2,a2,0x1
 100067c:	0606                	slli	a2,a2,0x1
 100067e:	0606                	slli	a2,a2,0x1
 1000680:	0606                	slli	a2,a2,0x1
 1000682:	0606                	slli	a2,a2,0x1
 1000684:	0606                	slli	a2,a2,0x1
 1000686:	0606                	slli	a2,a2,0x1
 1000688:	0606                	slli	a2,a2,0x1
 100068a:	0606                	slli	a2,a2,0x1
 100068c:	07070707          	0x7070707
 1000690:	07070707          	0x7070707
 1000694:	07070707          	0x7070707
 1000698:	07070707          	0x7070707
 100069c:	07070707          	0x7070707
 10006a0:	07070707          	0x7070707
 10006a4:	07070707          	0x7070707
 10006a8:	07070707          	0x7070707
 10006ac:	07070707          	0x7070707
 10006b0:	07070707          	0x7070707
 10006b4:	07070707          	0x7070707
 10006b8:	07070707          	0x7070707
 10006bc:	07070707          	0x7070707
 10006c0:	07070707          	0x7070707
 10006c4:	07070707          	0x7070707
 10006c8:	07070707          	0x7070707
 10006cc:	0808                	addi	a0,sp,16
 10006ce:	0808                	addi	a0,sp,16
 10006d0:	0808                	addi	a0,sp,16
 10006d2:	0808                	addi	a0,sp,16
 10006d4:	0808                	addi	a0,sp,16
 10006d6:	0808                	addi	a0,sp,16
 10006d8:	0808                	addi	a0,sp,16
 10006da:	0808                	addi	a0,sp,16
 10006dc:	0808                	addi	a0,sp,16
 10006de:	0808                	addi	a0,sp,16
 10006e0:	0808                	addi	a0,sp,16
 10006e2:	0808                	addi	a0,sp,16
 10006e4:	0808                	addi	a0,sp,16
 10006e6:	0808                	addi	a0,sp,16
 10006e8:	0808                	addi	a0,sp,16
 10006ea:	0808                	addi	a0,sp,16
 10006ec:	0808                	addi	a0,sp,16
 10006ee:	0808                	addi	a0,sp,16
 10006f0:	0808                	addi	a0,sp,16
 10006f2:	0808                	addi	a0,sp,16
 10006f4:	0808                	addi	a0,sp,16
 10006f6:	0808                	addi	a0,sp,16
 10006f8:	0808                	addi	a0,sp,16
 10006fa:	0808                	addi	a0,sp,16
 10006fc:	0808                	addi	a0,sp,16
 10006fe:	0808                	addi	a0,sp,16
 1000700:	0808                	addi	a0,sp,16
 1000702:	0808                	addi	a0,sp,16
 1000704:	0808                	addi	a0,sp,16
 1000706:	0808                	addi	a0,sp,16
 1000708:	0808                	addi	a0,sp,16
 100070a:	0808                	addi	a0,sp,16
 100070c:	0808                	addi	a0,sp,16
 100070e:	0808                	addi	a0,sp,16
 1000710:	0808                	addi	a0,sp,16
 1000712:	0808                	addi	a0,sp,16
 1000714:	0808                	addi	a0,sp,16
 1000716:	0808                	addi	a0,sp,16
 1000718:	0808                	addi	a0,sp,16
 100071a:	0808                	addi	a0,sp,16
 100071c:	0808                	addi	a0,sp,16
 100071e:	0808                	addi	a0,sp,16
 1000720:	0808                	addi	a0,sp,16
 1000722:	0808                	addi	a0,sp,16
 1000724:	0808                	addi	a0,sp,16
 1000726:	0808                	addi	a0,sp,16
 1000728:	0808                	addi	a0,sp,16
 100072a:	0808                	addi	a0,sp,16
 100072c:	0808                	addi	a0,sp,16
 100072e:	0808                	addi	a0,sp,16
 1000730:	0808                	addi	a0,sp,16
 1000732:	0808                	addi	a0,sp,16
 1000734:	0808                	addi	a0,sp,16
 1000736:	0808                	addi	a0,sp,16
 1000738:	0808                	addi	a0,sp,16
 100073a:	0808                	addi	a0,sp,16
 100073c:	0808                	addi	a0,sp,16
 100073e:	0808                	addi	a0,sp,16
 1000740:	0808                	addi	a0,sp,16
 1000742:	0808                	addi	a0,sp,16
 1000744:	0808                	addi	a0,sp,16
 1000746:	0808                	addi	a0,sp,16
 1000748:	0808                	addi	a0,sp,16
 100074a:	0808                	addi	a0,sp,16
 100074c:	0000                	unimp
 100074e:	0000                	unimp
 1000750:	ffff                	0xffff
 1000752:	ffff                	0xffff
 1000754:	ffff                	0xffff
 1000756:	4e497fef          	jal	t6,1097c3a <__freertos_irq_stack_top+0x87c3a>
 100075a:	0046                	c.slli	zero,0x11
 100075c:	6e69                	lui	t3,0x1a
 100075e:	0066                	c.slli	zero,0x19
 1000760:	414e                	lw	sp,208(sp)
 1000762:	004e                	c.slli	zero,0x13
 1000764:	616e                	flw	ft2,216(sp)
 1000766:	006e                	c.slli	zero,0x1b
 1000768:	0030                	addi	a2,sp,8
 100076a:	0000                	unimp
 100076c:	3130                	fld	fa2,96(a0)
 100076e:	3332                	fld	ft6,296(sp)
 1000770:	3534                	fld	fa3,104(a0)
 1000772:	3736                	fld	fa4,360(sp)
 1000774:	3938                	fld	fa4,112(a0)
 1000776:	4241                	li	tp,16
 1000778:	46454443          	fmadd.q	fs0,fa0,ft4,fs0,rmm
 100077c:	0000                	unimp
 100077e:	0000                	unimp
 1000780:	3130                	fld	fa2,96(a0)
 1000782:	3332                	fld	ft6,296(sp)
 1000784:	3534                	fld	fa3,104(a0)
 1000786:	3736                	fld	fa4,360(sp)
 1000788:	3938                	fld	fa4,112(a0)
 100078a:	6261                	lui	tp,0x18
 100078c:	66656463          	bltu	a0,t1,1000df4 <_end+0x184>
	...
 100079c:	0000                	unimp
 100079e:	3ff8                	fld	fa4,248(a5)
 10007a0:	4361                	li	t1,24
 10007a2:	87a7636f          	jal	t1,f7681c <_data_lma+0xf6b6a4>
 10007a6:	3fd2                	fld	ft11,304(sp)
 10007a8:	8b60c8b3          	0x8b60c8b3
 10007ac:	8a28                	0x8a28
 10007ae:	3fc6                	fld	ft11,112(sp)
 10007b0:	509f79fb          	0x509f79fb
 10007b4:	3fd34413          	xori	s0,t1,1021
 10007b8:	0000                	unimp
 10007ba:	0000                	unimp
 10007bc:	0000                	unimp
 10007be:	401c                	lw	a5,0(s0)
 10007c0:	0000                	unimp
 10007c2:	0000                	unimp
 10007c4:	0000                	unimp
 10007c6:	4014                	lw	a3,0(s0)
 10007c8:	0000                	unimp
 10007ca:	0000                	unimp
 10007cc:	0000                	unimp
 10007ce:	3fe0                	fld	fs0,248(a5)
 10007d0:	6e49                	lui	t3,0x12
 10007d2:	6966                	flw	fs2,88(sp)
 10007d4:	696e                	flw	fs2,216(sp)
 10007d6:	7974                	flw	fa3,116(a0)
 10007d8:	0000                	unimp
 10007da:	0000                	unimp
 10007dc:	614e                	flw	ft2,208(sp)
 10007de:	004e                	c.slli	zero,0x13

010007e0 <__sf_fake_stderr>:
	...

01000800 <__sf_fake_stdin>:
	...

01000820 <__sf_fake_stdout>:
	...

01000840 <__mprec_bigtens>:
 1000840:	8000                	0x8000
 1000842:	37e0                	fld	fs0,232(a5)
 1000844:	c379                	beqz	a4,100090a <__mprec_tens+0xa2>
 1000846:	4341                	li	t1,16
 1000848:	b5056e17          	auipc	t3,0xb5056
 100084c:	b8b5                	j	10000c8 <_data+0xc8>
 100084e:	f9f54693          	xori	a3,a0,-97
 1000852:	4f03e93f 1d324d38 	0x1d324d384f03e93f
 100085a:	f930                	fsw	fa2,112(a0)
 100085c:	7748                	flw	fa0,44(a4)
 100085e:	5a82                	lw	s5,32(sp)
 1000860:	bf3c                	fsd	fa5,120(a4)
 1000862:	4fdd7f73          	csrrci	t5,0x4fd,26
 1000866:	7515                	lui	a0,0xfffe5

01000868 <__mprec_tens>:
 1000868:	0000                	unimp
 100086a:	0000                	unimp
 100086c:	0000                	unimp
 100086e:	3ff0                	fld	fa2,248(a5)
 1000870:	0000                	unimp
 1000872:	0000                	unimp
 1000874:	0000                	unimp
 1000876:	4024                	lw	s1,64(s0)
 1000878:	0000                	unimp
 100087a:	0000                	unimp
 100087c:	0000                	unimp
 100087e:	4059                	c.li	zero,22
 1000880:	0000                	unimp
 1000882:	0000                	unimp
 1000884:	4000                	lw	s0,0(s0)
 1000886:	0000408f          	0x408f
 100088a:	0000                	unimp
 100088c:	8800                	0x8800
 100088e:	000040c3          	fmadd.s	ft1,ft0,ft0,ft0,rmm
 1000892:	0000                	unimp
 1000894:	6a00                	flw	fs0,16(a2)
 1000896:	40f8                	lw	a4,68(s1)
 1000898:	0000                	unimp
 100089a:	0000                	unimp
 100089c:	8480                	0x8480
 100089e:	412e                	lw	sp,200(sp)
 10008a0:	0000                	unimp
 10008a2:	0000                	unimp
 10008a4:	12d0                	addi	a2,sp,356
 10008a6:	00004163          	bltz	zero,10008a8 <__mprec_tens+0x40>
 10008aa:	0000                	unimp
 10008ac:	d784                	sw	s1,40(a5)
 10008ae:	00004197          	auipc	gp,0x4
 10008b2:	0000                	unimp
 10008b4:	cd65                	beqz	a0,10009ac <_ctype_+0x50>
 10008b6:	41cd                	li	gp,19
 10008b8:	0000                	unimp
 10008ba:	2000                	fld	fs0,0(s0)
 10008bc:	a05f 4202 0000      	0x4202a05f
 10008c2:	e800                	fsw	fs0,16(s0)
 10008c4:	4876                	lw	a6,92(sp)
 10008c6:	00004237          	lui	tp,0x4
 10008ca:	a200                	fsd	fs0,0(a2)
 10008cc:	1a94                	addi	a3,sp,368
 10008ce:	426d                	li	tp,27
 10008d0:	0000                	unimp
 10008d2:	e540                	fsw	fs0,12(a0)
 10008d4:	309c                	fld	fa5,32(s1)
 10008d6:	42a2                	lw	t0,8(sp)
 10008d8:	0000                	unimp
 10008da:	1e90                	addi	a2,sp,880
 10008dc:	bcc4                	fsd	fs1,184(s1)
 10008de:	42d6                	lw	t0,84(sp)
 10008e0:	0000                	unimp
 10008e2:	2634                	fld	fa3,72(a2)
 10008e4:	6bf5                	lui	s7,0x1d
 10008e6:	430c                	lw	a1,0(a4)
 10008e8:	8000                	0x8000
 10008ea:	37e0                	fld	fs0,232(a5)
 10008ec:	c379                	beqz	a4,10009b2 <_ctype_+0x56>
 10008ee:	4341                	li	t1,16
 10008f0:	a000                	fsd	fs0,0(s0)
 10008f2:	85d8                	0x85d8
 10008f4:	43763457          	0x43763457
 10008f8:	c800                	sw	s0,16(s0)
 10008fa:	674e                	flw	fa4,208(sp)
 10008fc:	c16d                	beqz	a0,10009de <_ctype_+0x82>
 10008fe:	3d0043ab          	0x3d0043ab
 1000902:	6091                	lui	ra,0x4
 1000904:	58e4                	lw	s1,116(s1)
 1000906:	43e1                	li	t2,24
 1000908:	8c40                	0x8c40
 100090a:	78b5                	lui	a7,0xfffed
 100090c:	af1d                	j	1001042 <_end+0x3d2>
 100090e:	4415                	li	s0,5
 1000910:	ef50                	fsw	fa2,28(a4)
 1000912:	d6e2                	sw	s8,108(sp)
 1000914:	1ae4                	addi	s1,sp,380
 1000916:	d592444b          	0xd592444b
 100091a:	064d                	addi	a2,a2,19
 100091c:	4480f0cf          	0x4480f0cf
 1000920:	4af6                	lw	s5,92(sp)
 1000922:	c7e1                	beqz	a5,10009ea <_ctype_+0x8e>
 1000924:	2d02                	fld	fs10,0(sp)
 1000926:	44b5                	li	s1,13
 1000928:	9db4                	0x9db4
 100092a:	79d9                	lui	s3,0xffff6
 100092c:	44ea7843          	0x44ea7843

01000930 <p05.3319>:
 1000930:	0005                	c.nop	1
 1000932:	0000                	unimp
 1000934:	0019                	c.nop	6
 1000936:	0000                	unimp
 1000938:	007d                	c.nop	31
 100093a:	0000                	unimp
 100093c:	2b302d23          	sw	s3,698(zero) # 2ba <main+0x23e>
 1000940:	0020                	addi	s0,sp,8
 1000942:	0000                	unimp
 1000944:	6c68                	flw	fa0,92(s0)
 1000946:	004c                	addi	a1,sp,4
 1000948:	6665                	lui	a2,0x19
 100094a:	47464567          	0x47464567
 100094e:	0000                	unimp
 1000950:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
 1000954:	4f50                	lw	a2,28(a4)
 1000956:	00584953          	fadd.s	fs2,fa6,ft5,rmm
	...

0100095c <_ctype_>:
 100095c:	2000                	fld	fs0,0(s0)
 100095e:	2020                	fld	fs0,64(s0)
 1000960:	2020                	fld	fs0,64(s0)
 1000962:	2020                	fld	fs0,64(s0)
 1000964:	2020                	fld	fs0,64(s0)
 1000966:	2828                	fld	fa0,80(s0)
 1000968:	2828                	fld	fa0,80(s0)
 100096a:	2028                	fld	fa0,64(s0)
 100096c:	2020                	fld	fs0,64(s0)
 100096e:	2020                	fld	fs0,64(s0)
 1000970:	2020                	fld	fs0,64(s0)
 1000972:	2020                	fld	fs0,64(s0)
 1000974:	2020                	fld	fs0,64(s0)
 1000976:	2020                	fld	fs0,64(s0)
 1000978:	2020                	fld	fs0,64(s0)
 100097a:	2020                	fld	fs0,64(s0)
 100097c:	8820                	0x8820
 100097e:	1010                	addi	a2,sp,32
 1000980:	1010                	addi	a2,sp,32
 1000982:	1010                	addi	a2,sp,32
 1000984:	1010                	addi	a2,sp,32
 1000986:	1010                	addi	a2,sp,32
 1000988:	1010                	addi	a2,sp,32
 100098a:	1010                	addi	a2,sp,32
 100098c:	0410                	addi	a2,sp,512
 100098e:	0404                	addi	s1,sp,512
 1000990:	0404                	addi	s1,sp,512
 1000992:	0404                	addi	s1,sp,512
 1000994:	0404                	addi	s1,sp,512
 1000996:	1004                	addi	s1,sp,32
 1000998:	1010                	addi	a2,sp,32
 100099a:	1010                	addi	a2,sp,32
 100099c:	1010                	addi	a2,sp,32
 100099e:	4141                	li	sp,16
 10009a0:	4141                	li	sp,16
 10009a2:	4141                	li	sp,16
 10009a4:	0101                	addi	sp,sp,0
 10009a6:	0101                	addi	sp,sp,0
 10009a8:	0101                	addi	sp,sp,0
 10009aa:	0101                	addi	sp,sp,0
 10009ac:	0101                	addi	sp,sp,0
 10009ae:	0101                	addi	sp,sp,0
 10009b0:	0101                	addi	sp,sp,0
 10009b2:	0101                	addi	sp,sp,0
 10009b4:	0101                	addi	sp,sp,0
 10009b6:	0101                	addi	sp,sp,0
 10009b8:	1010                	addi	a2,sp,32
 10009ba:	1010                	addi	a2,sp,32
 10009bc:	1010                	addi	a2,sp,32
 10009be:	4242                	lw	tp,16(sp)
 10009c0:	4242                	lw	tp,16(sp)
 10009c2:	4242                	lw	tp,16(sp)
 10009c4:	0202                	c.slli64	tp
 10009c6:	0202                	c.slli64	tp
 10009c8:	0202                	c.slli64	tp
 10009ca:	0202                	c.slli64	tp
 10009cc:	0202                	c.slli64	tp
 10009ce:	0202                	c.slli64	tp
 10009d0:	0202                	c.slli64	tp
 10009d2:	0202                	c.slli64	tp
 10009d4:	0202                	c.slli64	tp
 10009d6:	0202                	c.slli64	tp
 10009d8:	1010                	addi	a2,sp,32
 10009da:	1010                	addi	a2,sp,32
 10009dc:	0020                	addi	s0,sp,8
	...

01000a60 <impure_data>:
 1000a60:	0000                	unimp
 1000a62:	0000                	unimp
 1000a64:	0800                	addi	s0,sp,16
 1000a66:	0100                	addi	s0,sp,128
 1000a68:	0820                	addi	s0,sp,24
 1000a6a:	0100                	addi	s0,sp,128
 1000a6c:	07e0                	addi	s0,sp,972
 1000a6e:	0100                	addi	s0,sp,128
	...

01000ac0 <__global_locale>:
 1000ac0:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000ae0:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b00:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b20:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b40:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b60:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b80:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000ba0:	9a78                	0x9a78
 1000ba2:	0000                	unimp
 1000ba4:	99bc                	0x99bc
 1000ba6:	0000                	unimp
 1000ba8:	0000                	unimp
 1000baa:	0000                	unimp
 1000bac:	095c                	addi	a5,sp,148
 1000bae:	0100                	addi	s0,sp,128
 1000bb0:	0474                	addi	a3,sp,524
 1000bb2:	0100                	addi	s0,sp,128
 1000bb4:	01c0                	addi	s0,sp,196
 1000bb6:	0100                	addi	s0,sp,128
 1000bb8:	01c0                	addi	s0,sp,196
 1000bba:	0100                	addi	s0,sp,128
 1000bbc:	01c0                	addi	s0,sp,196
 1000bbe:	0100                	addi	s0,sp,128
 1000bc0:	01c0                	addi	s0,sp,196
 1000bc2:	0100                	addi	s0,sp,128
 1000bc4:	01c0                	addi	s0,sp,196
 1000bc6:	0100                	addi	s0,sp,128
 1000bc8:	01c0                	addi	s0,sp,196
 1000bca:	0100                	addi	s0,sp,128
 1000bcc:	01c0                	addi	s0,sp,196
 1000bce:	0100                	addi	s0,sp,128
 1000bd0:	01c0                	addi	s0,sp,196
 1000bd2:	0100                	addi	s0,sp,128
 1000bd4:	01c0                	addi	s0,sp,196
 1000bd6:	0100                	addi	s0,sp,128
 1000bd8:	ffff                	0xffff
 1000bda:	ffff                	0xffff
 1000bdc:	ffff                	0xffff
 1000bde:	ffff                	0xffff
 1000be0:	ffff                	0xffff
 1000be2:	ffff                	0xffff
 1000be4:	ffff                	0xffff
 1000be6:	0000                	unimp
 1000be8:	0001                	nop
 1000bea:	5341                	li	t1,-16
 1000bec:	00494943          	fmadd.s	fs2,fs2,ft4,ft0,rmm
	...
 1000c08:	0000                	unimp
 1000c0a:	5341                	li	t1,-16
 1000c0c:	00494943          	fmadd.s	fs2,fs2,ft4,ft0,rmm
	...

01000c30 <default_num_contexts>:
 1000c30:	0001                	nop
	...

01000c34 <seed3_volatile>:
volatile ee_s32 seed3_volatile = 0x66;
 1000c34:	0066                	c.slli	zero,0x19
	...

01000c38 <seed4_volatile>:
volatile ee_s32 seed4_volatile = ITERATIONS;
 1000c38:	0005                	c.nop	1
	...

01000c3c <_impure_ptr>:
 1000c3c:	0a60                	addi	s0,sp,284
 1000c3e:	0100                	addi	s0,sp,128

Disassembly of section .bss:

01000c40 <seed1_volatile>:
volatile ee_s32 seed1_volatile = 0x0;
 1000c40:	0000                	unimp
	...

01000c44 <seed2_volatile>:
volatile ee_s32 seed2_volatile = 0x0;
 1000c44:	0000                	unimp
	...

01000c48 <seed5_volatile>:
volatile ee_s32 seed5_volatile = 0;
 1000c48:	0000                	unimp
	...

01000c4c <__malloc_free_list>:
 1000c4c:	0000                	unimp
	...

01000c50 <__malloc_sbrk_start>:
 1000c50:	0000                	unimp
	...

01000c54 <heap_end.1518>:
 1000c54:	0000                	unimp
	...

01000c58 <timer_1>:
	...

01000c60 <timer_0>:
	...

01000c68 <errno>:
 1000c68:	0000                	unimp
	...

Disassembly of section .stack:

0100f000 <__freertos_irq_stack_top-0x1000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
	la gp, __global_pointer$
       0:	00001a87          	0x1a87
       4:	0004                	0x4
       6:	0000                	unimp
	la sp, _sp
       8:	0000                	unimp
       a:	0104                	addi	s1,sp,128
       c:	040e                	slli	s0,s0,0x3
       e:	0000                	unimp
	la a0, _data_lma 
      10:	d60c                	sw	a1,40(a2)
      12:	0004                	0x4
      14:	1300                	addi	s0,sp,416
      16:	30000007          	0x30000007
	la a1, _data
      1a:	00000003          	lb	zero,0(zero) # 0 <_start>
      1e:	0000                	unimp
	la a2, _edata
      20:	0000                	unimp
      22:	0000                	unimp
      24:	0200                	addi	s0,sp,256
      26:	0601                	addi	a2,a2,0
	bgeu a1, a2, 2f
      28:	0612                	slli	a2,a2,0x4
      2a:	0000                	unimp
	lw t0, (a0)
      2c:	0102                	c.slli64	sp
      2e:	1008                	addi	a0,sp,32
	sw t0, (a1)
      30:	0006                	c.slli	zero,0x1
      32:	0200                	addi	s0,sp,256
	lw t1, (a1)
      34:	0502                	c.slli64	a0
      36:	04cc                	addi	a1,sp,580
	addi a0, a0, 4
      38:	0000                	unimp
      3a:	0202                	c.slli64	tp
	addi a1, a1, 4
      3c:	0006ea07          	0x6ea07
	bltu a1, a2, 1b
      40:	0200                	addi	s0,sp,256
      42:	0504                	addi	s1,sp,640
	la a0, __bss_start
      44:	0000036b          	0x36b
      48:	0402                	c.slli64	s0
      4a:	00019d07          	0x19d07
	la a1, _end
      4e:	0200                	addi	s0,sp,256
      50:	0508                	addi	a0,sp,640
      52:	0366                	slli	t1,t1,0x19
	bgeu a0, a1, 2f
      54:	0000                	unimp
      56:	0802                	c.slli64	a6
	sw zero, (a0)
      58:	00019807          	0x19807
	addi a0, a0, 4
      5c:	0300                	addi	s0,sp,384
      5e:	0504                	addi	s1,sp,640
	bltu a0, a1, 1b
      60:	6e69                	lui	t3,0x1a
      62:	0074                	addi	a3,sp,12
    li x31,0xa0
      64:	0402                	c.slli64	s0
      66:	0001a207          	flw	ft4,0(gp) # 10048ae <__global_pointer$+0x347e>
    call main
      6a:	0200                	addi	s0,sp,256
      6c:	0410                	addi	a2,sp,512
      6e:	0490                	addi	a2,sp,576
    li x31,0xaa
      70:	0000                	unimp
      72:	9c04                	0x9c04
	li tp,0xee
      74:	0004                	0x4
      76:	0200                	addi	s0,sp,256
    j loop
      78:	1922                	slli	s2,s2,0x28
      7a:	007e                	c.slli	zero,0x1f
{
      7c:	0000                	unimp
      7e:	0405                	addi	s0,s0,1
    portable_init(&(results[0].port), &argc, argv);
      80:	0084                	addi	s1,sp,64
      82:	0000                	unimp
{
      84:	0106                	slli	sp,sp,0x1
      86:	0006                	c.slli	zero,0x1
      88:	0400                	addi	s0,sp,512
      8a:	0731                	addi	a4,a4,12
      8c:	0000                	unimp
      8e:	410e2c03          	lw	s8,1040(t3) # 1a410 <_data_lma+0xf298>
      92:	0000                	unimp
      94:	0400                	addi	s0,sp,512
      96:	00ee                	slli	ra,ra,0x1b
      98:	0000                	unimp
      9a:	410e7203          	0x410e7203
      9e:	0000                	unimp
      a0:	0400                	addi	s0,sp,512
      a2:	06da                	slli	a3,a3,0x16
      a4:	0000                	unimp
      a6:	5d179103          	lh	sp,1489(a5)
      aa:	0000                	unimp
      ac:	0700                	addi	s0,sp,896
      ae:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
      b2:	6504                	flw	fs1,8(a0)
      b4:	1701                	addi	a4,a4,-32
      b6:	0064                	addi	s1,sp,12
      b8:	0000                	unimp
      ba:	0408                	addi	a0,sp,512
      bc:	dc03a603          	lw	a2,-576(t2)
    portable_init(&(results[0].port), &argc, argv);
      c0:	0000                	unimp
      c2:	0900                	addi	s0,sp,144
      c4:	02fa                	slli	t0,t0,0x1e
      c6:	0000                	unimp
      c8:	ad0ca803          	lw	a6,-1328(s9)
      cc:	0000                	unimp
      ce:	0900                	addi	s0,sp,144
{
      d0:	0000052f          	0x52f
    portable_init(&(results[0].port), &argc, argv);
      d4:	dc13a903          	lw	s2,-575(t2)
      d8:	0000                	unimp
      da:	0000                	unimp
      dc:	2c0a                	fld	fs8,128(sp)
      de:	0000                	unimp
      e0:	ec00                	fsw	fs0,24(s0)
      e2:	0000                	unimp
    printf("start test1\n");
      e4:	0b00                	addi	s0,sp,400
      e6:	0064                	addi	s1,sp,12
      e8:	0000                	unimp
      ea:	080c0003          	lb	zero,128(s8) # 1d080 <_data_lma+0x11f08>
      ee:	1009a303          	lw	t1,256(s3) # ffff6100 <__freertos_irq_stack_top+0xfefe6100>
      f2:	0001                	nop
    results[0].seed1      = get_seed(1);
      f4:	0d00                	addi	s0,sp,656
      f6:	0164                	addi	s1,sp,140
      f8:	0000                	unimp
      fa:	5d07a503          	lw	a0,1488(a5)
      fe:	0000                	unimp
     100:	0000                	unimp
     102:	6a0d                	lui	s4,0x3
    results[0].seed2      = get_seed(2);
     104:	0002                	c.slli64	zero
     106:	0300                	addi	s0,sp,384
     108:	05aa                	slli	a1,a1,0xa
     10a:	00ba                	slli	ra,ra,0xe
     10c:	0000                	unimp
     10e:	0004                	0x4
     110:	ea04                	fsw	fs1,16(a2)
     112:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
    results[0].seed3      = get_seed(3);
     116:	00ec03ab          	0xec03ab
     11a:	0000                	unimp
     11c:	e204                	fsw	fs1,0(a2)
     11e:	0002                	c.slli64	zero
     120:	0300                	addi	s0,sp,384
     122:	00721baf          	0x721baf
    results[0].iterations = get_seed_32(4);
     126:	0000                	unimp
     128:	040e                	slli	s0,s0,0x3
     12a:	9e04                	0x9e04
     12c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
     130:	1916                	slli	s2,s2,0x25
     132:	0048                	addi	a0,sp,4
    printf("start test2\n");
     134:	0000                	unimp
     136:	0001280f          	0x1280f
     13a:	1800                	addi	s0,sp,48
     13c:	2f05                	jal	86c <main+0x7f0>
     13e:	9008                	0x9008
     140:	0001                	nop
     142:	0d00                	addi	s0,sp,656
    results[0].execs = get_seed_32(5);
     144:	0000079b          	0x79b
     148:	3105                	jal	fffffd68 <__freertos_irq_stack_top+0xfefefd68>
     14a:	00019013          	slli	zero,gp,0x0
     14e:	0000                	unimp
     150:	5f10                	lw	a2,56(a4)
     152:	3205006b          	0x3205006b
    printf("start test21\n");
     156:	00005d07          	0x5d07
     15a:	0400                	addi	s0,sp,512
     15c:	940d                	srai	s0,s0,0x23
     15e:	0005                	c.nop	1
     160:	0500                	addi	s0,sp,640
     162:	0b32                	slli	s6,s6,0xc
    if (results[0].execs == 0)
     164:	005d                	c.nop	23
     166:	0000                	unimp
     168:	0d08                	addi	a0,sp,656
     16a:	050c                	addi	a1,sp,640
    printf("start test3\n");
     16c:	0000                	unimp
     16e:	3205                	jal	fffffa8e <__freertos_irq_stack_top+0xfefefa8e>
     170:	5d14                	lw	a3,56(a0)
     172:	0000                	unimp
     174:	0c00                	addi	s0,sp,528
     176:	c40d                	beqz	s0,1a0 <main+0x124>
     178:	0001                	nop
     17a:	0500                	addi	s0,sp,640
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	1b32                	slli	s6,s6,0x2c
     17e:	005d                	c.nop	23
     180:	0000                	unimp
     182:	1010                	addi	a2,sp,32
     184:	785f 0500 0b33      	0xb330500785f
     18a:	0196                	slli	gp,gp,0x5
     18c:	0000                	unimp
     18e:	0014                	0x14
     190:	0405                	addi	s0,s0,1
     192:	0136                	slli	sp,sp,0xd
     194:	0000                	unimp
     196:	2a0a                	fld	fs4,128(sp)
     198:	0001                	nop
     19a:	a600                	fsd	fs0,8(a2)
    printf("start test4\n");
     19c:	0001                	nop
     19e:	0b00                	addi	s0,sp,400
     1a0:	0064                	addi	s1,sp,12
     1a2:	0000                	unimp
     1a4:	0000                	unimp
     1a6:	0005bf0f          	0x5bf0f
     1aa:	2400                	fld	fs0,8(s0)
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	3705                	jal	cc <main+0x50>
     1ae:	2908                	fld	fa0,16(a0)
     1b0:	0002                	c.slli64	zero
     1b2:	0d00                	addi	s0,sp,656
     1b4:	0000022b          	0x22b
     1b8:	3905                	jal	fffffde8 <__freertos_irq_stack_top+0xfefefde8>
     1ba:	5d09                	li	s10,-30
     1bc:	0000                	unimp
     1be:	0000                	unimp
     1c0:	760d                	lui	a2,0xfffe3
     1c2:	0001                	nop
     1c4:	0500                	addi	s0,sp,640
     1c6:	093a                	slli	s2,s2,0xe
     1c8:	005d                	c.nop	23
     1ca:	0000                	unimp
     1cc:	0d04                	addi	s1,sp,656
     1ce:	0154                	addi	a3,sp,132
        if ((1 << (ee_u32)i) & results[0].execs)
     1d0:	0000                	unimp
     1d2:	3b05                	jal	ffffff02 <__freertos_irq_stack_top+0xfefeff02>
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d4:	5d09                	li	s10,-30
     1d6:	0000                	unimp
     1d8:	0800                	addi	s0,sp,16
     1da:	9a0d                	andi	a2,a2,-29
     1dc:	0002                	c.slli64	zero
     1de:	0500                	addi	s0,sp,640
     1e0:	093c                	addi	a5,sp,152
     1e2:	005d                	c.nop	23
     1e4:	0000                	unimp
     1e6:	0d0c                	addi	a1,sp,656
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	00000487          	0x487
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	3d05                	jal	1c <_start+0x1c>
     1ee:	5d09                	li	s10,-30
        if ((1 << (ee_u32)i) & results[0].execs)
     1f0:	0000                	unimp
     1f2:	1000                	addi	s0,sp,32
            num_algorithms++;
     1f4:	490d                	li	s2,3
     1f6:	0005                	c.nop	1
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1f8:	0500                	addi	s0,sp,640
     1fa:	093e                	slli	s2,s2,0xf
     1fc:	005d                	c.nop	23
     1fe:	0000                	unimp
    results[i].err         = 0;
     200:	0d14                	addi	a3,sp,656
     202:	0130                	addi	a2,sp,136
        if ((1 << (ee_u32)i) & results[0].execs)
     204:	0000                	unimp
     206:	3f05                	jal	136 <main+0xba>
            num_algorithms++;
     208:	5d09                	li	s10,-30
     20a:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     20c:	1800                	addi	s0,sp,48
     20e:	340d                	jal	fffffc30 <__freertos_irq_stack_top+0xfefefc30>
            num_algorithms++;
     210:	0002                	c.slli64	zero
     212:	0500                	addi	s0,sp,640
     214:	0940                	addi	s0,sp,148
     216:	005d                	c.nop	23
     218:	0000                	unimp
     21a:	0d1c                	addi	a5,sp,656
        results[i].size = results[i].size / num_algorithms;
     21c:	03fd                	addi	t2,t2,31
     21e:	0000                	unimp
     220:	4105                	li	sp,1
     222:	5d09                	li	s10,-30
     224:	0000                	unimp
     226:	2000                	fld	fs0,0(s0)
     228:	1100                	addi	s0,sp,160
     22a:	0029                	c.nop	10
     22c:	0000                	unimp
     22e:	0108                	addi	a0,sp,128
     230:	4a05                	li	s4,1
     232:	6e08                	flw	fa0,24(a2)
        if ((1 << (ee_u32)i) & results[0].execs)
     234:	0002                	c.slli64	zero
     236:	0d00                	addi	s0,sp,656
     238:	03f5                	addi	t2,t2,29
     23a:	0000                	unimp
     23c:	4b05                	li	s6,1
     23e:	6e0a                	flw	ft8,128(sp)
     240:	0002                	c.slli64	zero
     242:	0000                	unimp
        if (results[i].execs & ID_LIST)
     244:	f50d                	bnez	a0,16e <main+0xf2>
     246:	0005                	c.nop	1
        if (results[i].execs & ID_MATRIX)
     248:	0500                	addi	s0,sp,640
     24a:	094c                	addi	a1,sp,148
        if (results[i].execs & ID_STATE)
     24c:	026e                	slli	tp,tp,0x1b
     24e:	0000                	unimp
     250:	1280                	addi	s0,sp,352
     252:	0704                	addi	s1,sp,896
            core_init_state(
     254:	0000                	unimp
     256:	4e05                	li	t3,1
     258:	2a0a                	fld	fs4,128(sp)
     25a:	0001                	nop
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	0000                	unimp
     25e:	1201                	addi	tp,tp,-32
            core_init_state(
     260:	0780                	addi	s0,sp,960
     262:	0000                	unimp
     264:	5105                	li	sp,-31
     266:	2a0a                	fld	fs4,128(sp)
     268:	0001                	nop
     26a:	0400                	addi	s0,sp,512
     26c:	0001                	nop
     26e:	280a                	fld	fa6,128(sp)
     270:	0001                	nop
     272:	7e00                	flw	fs0,56(a2)
     274:	0002                	c.slli64	zero
     276:	0b00                	addi	s0,sp,400
     278:	0064                	addi	s1,sp,12
     27a:	0000                	unimp
     27c:	001f bb11 0004      	0x4bb11001f
    if (results[0].iterations == 0)
     282:	9000                	0x9000
     284:	0501                	addi	a0,a0,0
     286:	085d                	addi	a6,a6,23
        while (secs_passed < (secs_ret)1)
     288:	02c1                	addi	t0,t0,16
     28a:	0000                	unimp
     28c:	9b0d                	andi	a4,a4,-29
     28e:	05000007          	0x5000007
     292:	125e                	slli	tp,tp,0x37
        results[0].iterations = 1;
     294:	02c1                	addi	t0,t0,16
     296:	0000                	unimp
     298:	0d00                	addi	s0,sp,656
     29a:	00000243          	fmadd.s	ft4,ft0,ft0,ft0,rne
        crc      = core_bench_list(res, 1);
     29e:	5f05                	li	t5,-31
     2a0:	5d06                	lw	s10,96(sp)
     2a2:	0000                	unimp
     2a4:	0400                	addi	s0,sp,512
     2a6:	070d                	addi	a4,a4,3
     2a8:	0001                	nop
     2aa:	0500                	addi	s0,sp,640
     2ac:	0961                	addi	s2,s2,24
     2ae:	000002c7          	fmsub.s	ft5,ft0,ft0,ft0,rne
     2b2:	0d08                	addi	a0,sp,656
     2b4:	0029                	c.nop	10
     2b6:	0000                	unimp
            printf("start test44\n");
     2b8:	6205                	lui	tp,0x1
     2ba:	291e                	fld	fs2,448(sp)
     2bc:	0002                	c.slli64	zero
     2be:	8800                	0x8800
     2c0:	0500                	addi	s0,sp,640
     2c2:	7e04                	flw	fs1,56(a2)
            results[0].iterations *= 10;
     2c4:	0002                	c.slli64	zero
     2c6:	0a00                	addi	s0,sp,272
    for (i = 0; i < iterations; i++)
     2c8:	000002d7          	0x2d7
            results[0].iterations *= 10;
     2cc:	000002d7          	0x2d7
     2d0:	0000640b          	0x640b
     2d4:	1f00                	addi	s0,sp,944
     2d6:	0500                	addi	s0,sp,640
     2d8:	dd04                	sw	s1,56(a0)
     2da:	0002                	c.slli64	zero
            start_time();
     2dc:	1300                	addi	s0,sp,416
     2de:	0006820f          	0x6820f
     2e2:	0800                	addi	s0,sp,16
    ee_u32        iterations = res->iterations;
     2e4:	7505                	lui	a0,0xfffe1
     2e6:	0608                	addi	a0,sp,768
    res->crc                 = 0;
     2e8:	0d000003          	lb	zero,208(zero) # d0 <main+0x54>
     2ec:	0388                	addi	a0,sp,448
     2ee:	0000                	unimp
    for (i = 0; i < iterations; i++)
     2f0:	7605                	lui	a2,0xfffe1
     2f2:	0611                	addi	a2,a2,4
        crc      = core_bench_list(res, 1);
     2f4:	00000003          	lb	zero,0(zero) # 0 <_start>
     2f8:	0d0d                	addi	s10,s10,3
     2fa:	05000007          	0x5000007
     2fe:	005d0677          	0x5d0677
     302:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
     304:	0004                	0x4
     306:	0405                	addi	s0,s0,1
     308:	002c                	addi	a1,sp,8
     30a:	0000                	unimp
     30c:	0001bc0f          	0x1bc0f
     310:	6800                	flw	fs0,16(s0)
     312:	b505                	j	132 <main+0xb6>
        crc      = core_bench_list(res, -1);
     314:	4f08                	lw	a0,24(a4)
     316:	0004                	0x4
     318:	1000                	addi	s0,sp,32
     31a:	705f 0500 12b6      	0x12b60500705f
     320:	0306                	slli	t1,t1,0x1
     322:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
     324:	1000                	addi	s0,sp,32
     326:	725f 0500 07b7      	0x7b70500725f
     32c:	005d                	c.nop	23
     32e:	0000                	unimp
     330:	1004                	addi	s1,sp,32
     332:	775f 0500 07b8      	0x7b80500775f
    for (i = 0; i < iterations; i++)
     338:	005d                	c.nop	23
     33a:	0000                	unimp
     33c:	0d08                	addi	a0,sp,656
     33e:	007f                	0x7f
            stop_time();
     340:	0000                	unimp
     342:	b905                	j	ffffff72 <__freertos_irq_stack_top+0xfefeff72>
     344:	3309                	jal	46 <_start+0x46>
     346:	0000                	unimp
            secs_passed = time_in_secs(get_time());
     348:	0c00                	addi	s0,sp,528
     34a:	bc0d                	j	fffffd7c <__freertos_irq_stack_top+0xfefefd7c>
     34c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
     350:	09ba                	slli	s3,s3,0xe
     352:	00000033          	add	zero,zero,zero
     356:	100e                	c.slli	zero,0x23
        while (secs_passed < (secs_ret)1)
     358:	625f 0066 bb05      	0xbb050066625f
     35e:	de11                	beqz	a2,27a <main+0x1fe>
            secs_passed = time_in_secs(get_time());
     360:	0002                	c.slli64	zero
     362:	1000                	addi	s0,sp,32
     364:	760d                	lui	a2,0xfffe3
     366:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     368:	0500                	addi	s0,sp,640
     36a:	07bc                	addi	a5,sp,968
     36c:	005d                	c.nop	23
     36e:	0000                	unimp
     370:	0d18                	addi	a4,sp,656
     372:	0112                	slli	sp,sp,0x4
        divisor = (ee_u32)secs_passed;
     374:	0000                	unimp
     376:	c305                	beqz	a4,396 <main+0x31a>
     378:	280a                	fld	fa6,128(sp)
     37a:	0001                	nop
     37c:	1c00                	addi	s0,sp,560
     37e:	c00d                	beqz	s0,3a0 <main+0x324>
     380:	0000                	unimp
     382:	0500                	addi	s0,sp,640
     384:	1dc5                	addi	s11,s11,-15
     386:	000005d3          	fadd.s	fa1,ft0,ft0,rne
        if (divisor == 0) /* some machines cast float to int as 0 since this
     38a:	0d20                	addi	s0,sp,664
            divisor = 1;
     38c:	04a4                	addi	s1,sp,584
     38e:	0000                	unimp
        results[0].iterations *= 1 + 10 / divisor;
     390:	c705                	beqz	a4,3b8 <main+0x33c>
     392:	fd1d                	bnez	a0,2d0 <main+0x254>
     394:	0005                	c.nop	1
     396:	2400                	fld	fs0,8(s0)
     398:	ac0d                	j	5ca <main+0x54e>
     39a:	05000007          	0x5000007
     39e:	0dca                	slli	s11,s11,0x12
     3a0:	0621                	addi	a2,a2,8
     3a2:	0000                	unimp
     3a4:	0d28                	addi	a0,sp,664
     3a6:	0315                	addi	t1,t1,5
     3a8:	0000                	unimp
     3aa:	cb05                	beqz	a4,3da <main+0x35e>
     3ac:	3b09                	jal	be <main+0x42>
     3ae:	0006                	c.slli	zero,0x1
    start_time();
     3b0:	2c00                	fld	fs0,24(s0)
     3b2:	5f10                	lw	a2,56(a4)
     3b4:	6275                	lui	tp,0x1d
     3b6:	0500                	addi	s0,sp,640
    iterate(&results[0]);
     3b8:	11ce                	slli	gp,gp,0x33
     3ba:	02de                	slli	t0,t0,0x17
     3bc:	0000                	unimp
     3be:	1030                	addi	a2,sp,40
     3c0:	755f 0070 cf05      	0xcf050070755f
     3c6:	0612                	slli	a2,a2,0x4
     3c8:	38000003          	lb	zero,896(zero) # 380 <main+0x304>
     3cc:	5f10                	lw	a2,56(a4)
     3ce:	7275                	lui	tp,0xffffd
     3d0:	0500                	addi	s0,sp,640
     3d2:	07d0                	addi	a2,sp,964
     3d4:	005d                	c.nop	23
     3d6:	0000                	unimp
    stop_time();
     3d8:	0d3c                	addi	a5,sp,664
     3da:	07dc                	addi	a5,sp,964
     3dc:	0000                	unimp
     3de:	d305                	beqz	a4,2fe <main+0x282>
    total_time = get_time();
     3e0:	4111                	li	sp,4
     3e2:	0006                	c.slli	zero,0x1
     3e4:	4000                	lw	s0,0(s0)
     3e6:	380d                	jal	fffffc18 <__freertos_irq_stack_top+0xfefefc18>
    seedcrc = crc16(results[0].seed1, seedcrc);
     3e8:	05000007          	0x5000007
     3ec:	11d4                	addi	a3,sp,228
     3ee:	0651                	addi	a2,a2,20
     3f0:	0000                	unimp
     3f2:	6c5f1043          	0x6c5f1043
    total_time = get_time();
     3f6:	0062                	c.slli	zero,0x18
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	d705                	beqz	a4,320 <main+0x2a4>
     3fa:	de11                	beqz	a2,316 <main+0x29a>
     3fc:	0002                	c.slli64	zero
     3fe:	4400                	lw	s0,8(s0)
     400:	b60d                	j	ffffff22 <__freertos_irq_stack_top+0xfefeff22>
     402:	0005                	c.nop	1
     404:	0500                	addi	s0,sp,640
     406:	07da                	slli	a5,a5,0x16
     408:	005d                	c.nop	23
     40a:	0000                	unimp
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	0d4c                	addi	a1,sp,660
     40e:	01fd                	addi	gp,gp,31
     410:	0000                	unimp
     412:	db05                	beqz	a4,342 <main+0x2c6>
     414:	890a                	mv	s2,sp
     416:	0000                	unimp
     418:	5000                	lw	s0,32(s0)
     41a:	700d                	c.lui	zero,0xfffe3
     41c:	0001                	nop
     41e:	0500                	addi	s0,sp,640
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	12de                	slli	t0,t0,0x37
     422:	046d                	addi	s0,s0,27
     424:	0000                	unimp
     426:	0d54                	addi	a3,sp,660
     428:	0602                	c.slli64	a2
     42a:	0000                	unimp
     42c:	e205                	bnez	a2,44c <main+0x3d0>
     42e:	1c0c                	addi	a1,sp,560
     430:	0001                	nop
     432:	5800                	lw	s0,48(s0)
    seedcrc = crc16(results[0].size, seedcrc);
     434:	b70d                	j	356 <main+0x2da>
     436:	0000                	unimp
     438:	0500                	addi	s0,sp,640
     43a:	0ee4                	addi	s1,sp,860
     43c:	0110                	addi	a2,sp,128
     43e:	0000                	unimp
     440:	0d5c                	addi	a5,sp,660
     442:	0778                	addi	a4,sp,908
     444:	0000                	unimp
     446:	e505                	bnez	a0,46e <main+0x3f2>
     448:	5d09                	li	s10,-30
     44a:	0000                	unimp
     44c:	6400                	flw	fs0,8(s0)
     44e:	1400                	addi	s0,sp,544
    switch (seedcrc)
     450:	00a1                	addi	ra,ra,8
     452:	0000                	unimp
     454:	046d                	addi	s0,s0,27
     456:	0000                	unimp
     458:	6d15                	lui	s10,0x5
     45a:	0004                	0x4
     45c:	1500                	addi	s0,sp,672
     45e:	0128                	addi	a0,sp,136
     460:	0000                	unimp
     462:	c115                	beqz	a0,486 <main+0x40a>
     464:	0005                	c.nop	1
     466:	1500                	addi	s0,sp,672
     468:	005d                	c.nop	23
     46a:	0000                	unimp
     46c:	0500                	addi	s0,sp,640
     46e:	7804                	flw	fs1,48(s0)
            ee_printf("2K performance run parameters for coremark.\n");
     470:	0004                	0x4
     472:	1600                	addi	s0,sp,800
     474:	046d                	addi	s0,s0,27
     476:	0000                	unimp
     478:	0006e317          	auipc	t1,0x6e
     47c:	2800                	fld	fs0,16(s0)
     47e:	0504                	addi	s1,sp,640
     480:	0239                	addi	tp,tp,14
     482:	c108                	sw	a0,0(a0)
     484:	0005                	c.nop	1
     486:	1800                	addi	s0,sp,48
     488:	0480                	addi	s0,sp,576
     48a:	0000                	unimp
            known_id = 3;
     48c:	3b05                	jal	1bc <main+0x140>
     48e:	0702                	c.slli64	a4
            ee_printf("2K performance run parameters for coremark.\n");
     490:	005d                	c.nop	23
     492:	0000                	unimp
     494:	1800                	addi	s0,sp,48
     496:	0349                	addi	t1,t1,18
     498:	0000                	unimp
     49a:	4005                	c.li	zero,1
            known_id = 3;
     49c:	0b02                	c.slli64	s6
     49e:	06ad                	addi	a3,a3,11
        for (i = 0; i < default_num_contexts; i++)
     4a0:	0000                	unimp
     4a2:	1804                	addi	s1,sp,48
     4a4:	00e6                	slli	ra,ra,0x19
     4a6:	0000                	unimp
     4a8:	4005                	c.li	zero,1
     4aa:	1402                	slli	s0,s0,0x20
     4ac:	06ad                	addi	a3,a3,11
     4ae:	0000                	unimp
     4b0:	1808                	addi	a0,sp,48
     4b2:	000007cb          	fnmsub.s	fa5,ft0,ft0,ft0,rne
            results[i].err = 0;
     4b6:	4005                	c.li	zero,1
     4b8:	1e02                	slli	t3,t3,0x20
     4ba:	06ad                	addi	a3,a3,11
     4bc:	0000                	unimp
     4be:	180c                	addi	a1,sp,48
     4c0:	023e                	slli	tp,tp,0xf
     4c2:	0000                	unimp
     4c4:	4205                	li	tp,1
     4c6:	0802                	c.slli64	a6
     4c8:	005d                	c.nop	23
     4ca:	0000                	unimp
     4cc:	1810                	addi	a2,sp,48
     4ce:	0205                	addi	tp,tp,1
     4d0:	0000                	unimp
     4d2:	4305                	li	t1,1
     4d4:	0802                	c.slli64	a6
     4d6:	08ad                	addi	a7,a7,11
     4d8:	0000                	unimp
     4da:	1814                	addi	a3,sp,48
     4dc:	075f 0000 4605      	0x46050000075f
     4e2:	0702                	c.slli64	a4
     4e4:	005d                	c.nop	23
     4e6:	0000                	unimp
     4e8:	1830                	addi	a2,sp,56
     4ea:	06d2                	slli	a3,a3,0x14
            total_errors += results[i].err;
     4ec:	0000                	unimp
     4ee:	4705                	li	a4,1
        for (i = 0; i < default_num_contexts; i++)
     4f0:	1602                	slli	a2,a2,0x20
     4f2:	08c2                	slli	a7,a7,0x10
            total_errors += results[i].err;
     4f4:	0000                	unimp
     4f6:	1834                	addi	a3,sp,56
        for (i = 0; i < default_num_contexts; i++)
     4f8:	0322                	slli	t1,t1,0x8
     4fa:	0000                	unimp
            total_errors += results[i].err;
     4fc:	4905                	li	s2,1
     4fe:	0702                	c.slli64	a4
        for (i = 0; i < default_num_contexts; i++)
     500:	005d                	c.nop	23
     502:	0000                	unimp
            total_errors += results[i].err;
     504:	1838                	addi	a4,sp,56
     506:	03d4                	addi	a3,sp,452
        for (i = 0; i < default_num_contexts; i++)
     508:	0000                	unimp
     50a:	4b05                	li	s6,1
            total_errors += results[i].err;
     50c:	0a02                	c.slli64	s4
     50e:	000008d3          	fadd.s	fa7,ft0,ft0,rne
        for (i = 0; i < default_num_contexts; i++)
     512:	183c                	addi	a5,sp,56
            results[i].err = 0;
     514:	014c                	addi	a1,sp,132
     516:	0000                	unimp
     518:	4e05                	li	t3,1
     51a:	1302                	slli	t1,t1,0x20
     51c:	0190                	addi	a2,sp,192
     51e:	0000                	unimp
     520:	1840                	addi	s0,sp,52
     522:	018e                	slli	gp,gp,0x3
     524:	0000                	unimp
     526:	4f05                	li	t5,1
     528:	0702                	c.slli64	a4
     52a:	005d                	c.nop	23
            if ((results[i].execs & ID_LIST)
     52c:	0000                	unimp
     52e:	1844                	addi	s1,sp,52
            results[i].err = 0;
     530:	0272                	slli	tp,tp,0x1c
     532:	0000                	unimp
            if ((results[i].execs & ID_LIST)
     534:	5005                	c.li	zero,-31
     536:	1302                	slli	t1,t1,0x20
     538:	0190                	addi	a2,sp,192
     53a:	0000                	unimp
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	1848                	addi	a0,sp,52
     53e:	038e                	slli	t2,t2,0x3
     540:	0000                	unimp
     542:	5105                	li	sp,-31
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	1402                	slli	s0,s0,0x20
     546:	08d9                	addi	a7,a7,22
     548:	0000                	unimp
     54a:	184c                	addi	a1,sp,52
     54c:	058c                	addi	a1,sp,704
     54e:	0000                	unimp
     550:	5405                	li	s0,-31
     552:	0702                	c.slli64	a4
     554:	005d                	c.nop	23
     556:	0000                	unimp
     558:	1850                	addi	a2,sp,52
     55a:	0608                	addi	a0,sp,768
                results[i].err++;
     55c:	0000                	unimp
     55e:	5505                	li	a0,-31
     560:	0902                	c.slli64	s2
     562:	05c1                	addi	a1,a1,16
     564:	0000                	unimp
     566:	1854                	addi	a3,sp,52
            if ((results[i].execs & ID_MATRIX)
     568:	063a                	slli	a2,a2,0xe
     56a:	0000                	unimp
     56c:	7805                	lui	a6,0xfffe1
     56e:	0702                	c.slli64	a4
     570:	0888                	addi	a0,sp,80
     572:	0000                	unimp
     574:	1958                	addi	a4,sp,180
     576:	000004bb          	0x4bb
     57a:	7c05                	lui	s8,0xfffe1
     57c:	1302                	slli	t1,t1,0x20
     57e:	02c1                	addi	t0,t0,16
     580:	0000                	unimp
     582:	0148                	addi	a0,sp,132
     584:	bd19                	j	39a <main+0x31e>
     586:	0002                	c.slli64	zero
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	0500                	addi	s0,sp,640
     58a:	027d                	addi	tp,tp,31
     58c:	7e12                	flw	ft8,36(sp)
     58e:	0002                	c.slli64	zero
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     590:	4c00                	lw	s0,24(s0)
     592:	1901                	addi	s2,s2,-32
     594:	02a4                	addi	s1,sp,328
     596:	0000                	unimp
     598:	8105                	srli	a0,a0,0x1
     59a:	0c02                	c.slli64	s8
     59c:	08ea                	slli	a7,a7,0x1a
     59e:	0000                	unimp
     5a0:	02dc                	addi	a5,sp,324
     5a2:	af19                	j	cb8 <main+0xc3c>
     5a4:	0006                	c.slli	zero,0x1
     5a6:	0500                	addi	s0,sp,640
                results[i].err++;
     5a8:	0286                	slli	t0,t0,0x1
     5aa:	6e10                	flw	fa2,24(a2)
     5ac:	0006                	c.slli	zero,0x1
     5ae:	e000                	fsw	fs0,0(s0)
     5b0:	1902                	slli	s2,s2,0x20
     5b2:	00000507          	0x507
     5b6:	8805                	andi	s0,s0,1
            if ((results[i].execs & ID_STATE)
     5b8:	0a02                	c.slli64	s4
     5ba:	08f6                	slli	a7,a7,0x1d
     5bc:	0000                	unimp
     5be:	02ec                	addi	a1,sp,332
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	0500                	addi	s0,sp,640
     5c2:	c704                	sw	s1,8(a4)
     5c4:	0005                	c.nop	1
     5c6:	0200                	addi	s0,sp,256
     5c8:	0801                	addi	a6,a6,0
     5ca:	0619                	addi	a2,a2,6
     5cc:	0000                	unimp
     5ce:	c716                	sw	t0,140(sp)
     5d0:	0005                	c.nop	1
     5d2:	0500                	addi	s0,sp,640
     5d4:	4f04                	lw	s1,24(a4)
     5d6:	0004                	0x4
     5d8:	1400                	addi	s0,sp,544
     5da:	00a1                	addi	ra,ra,8
     5dc:	0000                	unimp
     5de:	000005f7          	0x5f7
     5e2:	6d15                	lui	s10,0x5
            results[i].list = core_list_init(
     5e4:	0004                	0x4
     5e6:	1500                	addi	s0,sp,672
     5e8:	0128                	addi	a0,sp,136
     5ea:	0000                	unimp
     5ec:	f715                	bnez	a4,518 <main+0x49c>
     5ee:	0005                	c.nop	1
     5f0:	1500                	addi	s0,sp,672
     5f2:	005d                	c.nop	23
     5f4:	0000                	unimp
     5f6:	0500                	addi	s0,sp,640
     5f8:	ce04                	sw	s1,24(a2)
     5fa:	0005                	c.nop	1
     5fc:	0500                	addi	s0,sp,640
     5fe:	d904                	sw	s1,48(a0)
     600:	0005                	c.nop	1
     602:	1400                	addi	s0,sp,544
     604:	0095                	addi	ra,ra,5
     606:	0000                	unimp
     608:	0621                	addi	a2,a2,8
     60a:	0000                	unimp
     60c:	6d15                	lui	s10,0x5
     60e:	0004                	0x4
     610:	1500                	addi	s0,sp,672
     612:	0128                	addi	a0,sp,136
     614:	0000                	unimp
     616:	9515                	srai	a0,a0,0x25
     618:	0000                	unimp
     61a:	1500                	addi	s0,sp,672
        if (results[i].execs & ID_MATRIX)
     61c:	005d                	c.nop	23
     61e:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	0500                	addi	s0,sp,640
     622:	0304                	addi	s1,sp,384
     624:	0006                	c.slli	zero,0x1
     626:	1400                	addi	s0,sp,544
     628:	005d                	c.nop	23
     62a:	0000                	unimp
            core_init_matrix(results[0].size,
     62c:	0000063b          	0x63b
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	6d15                	lui	s10,0x5
     632:	0004                	0x4
     634:	1500                	addi	s0,sp,672
     636:	0128                	addi	a0,sp,136
                             (ee_s32)results[i].seed1
     638:	0000                	unimp
     63a:	0500                	addi	s0,sp,640
                                 | (((ee_s32)results[i].seed2) << 16),
     63c:	2704                	fld	fs1,8(a4)
     63e:	0006                	c.slli	zero,0x1
            core_init_matrix(results[0].size,
     640:	0a00                	addi	s0,sp,272
     642:	002c                	addi	a1,sp,8
                             (ee_s32)results[i].seed1
     644:	0000                	unimp
     646:	0651                	addi	a2,a2,20
            core_init_matrix(results[0].size,
     648:	0000                	unimp
     64a:	0000640b          	0x640b
                                 | (((ee_s32)results[i].seed2) << 16),
     64e:	0200                	addi	s0,sp,256
            core_init_matrix(results[0].size,
     650:	0a00                	addi	s0,sp,272
     652:	002c                	addi	a1,sp,8
     654:	0000                	unimp
     656:	0661                	addi	a2,a2,24
     658:	0000                	unimp
     65a:	0000640b          	0x640b
     65e:	0000                	unimp
     660:	0700                	addi	s0,sp,896
     662:	01f6                	slli	gp,gp,0x1d
     664:	0000                	unimp
     666:	1f05                	addi	t5,t5,-31
     668:	1a01                	addi	s4,s4,-32
     66a:	030c                	addi	a1,sp,384
     66c:	0000                	unimp
     66e:	941a                	add	s0,s0,t1
     670:	0006                	c.slli	zero,0x1
     672:	0c00                	addi	s0,sp,528
     674:	2305                	jal	b94 <main+0xb18>
     676:	0801                	addi	a6,a6,0
     678:	000006a7          	0x6a7
     67c:	9b18                	0x9b18
     67e:	05000007          	0x5000007
            ee_printf("Profile generation run parameters for coremark.\n");
     682:	0125                	addi	sp,sp,9
     684:	a711                	j	d88 <core_bench_list+0x48>
     686:	0006                	c.slli	zero,0x1
     688:	0000                	unimp
     68a:	c418                	sw	a4,8(s0)
     68c:	0005                	c.nop	1
     68e:	0500                	addi	s0,sp,640
     690:	0126                	slli	sp,sp,0x9
     692:	00005d07          	0x5d07
     696:	0400                	addi	s0,sp,512
     698:	0018                	0x18
     69a:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
            known_id = 2;
     69e:	ad0b0127          	0xad0b0127
            ee_printf("Profile generation run parameters for coremark.\n");
     6a2:	0006                	c.slli	zero,0x1
     6a4:	0800                	addi	s0,sp,16
     6a6:	0500                	addi	s0,sp,640
     6a8:	6e04                	flw	fs1,24(a2)
     6aa:	0006                	c.slli	zero,0x1
            known_id = 2;
     6ac:	0500                	addi	s0,sp,640
     6ae:	6104                	flw	fs1,0(a0)
     6b0:	0006                	c.slli	zero,0x1
     6b2:	1a00                	addi	s0,sp,304
        && (results[0].seed3 == 0))
     6b4:	0186                	slli	gp,gp,0x1
     6b6:	0000                	unimp
     6b8:	050e                	slli	a0,a0,0x3
     6ba:	ec08013f 18000006 	0x18000006ec08013f
        results[0].seed3 = 0x66;
     6c2:	0790                	addi	a2,sp,960
     6c4:	0000                	unimp
     6c6:	4005                	c.li	zero,1
     6c8:	1201                	addi	tp,tp,-32
     6ca:	06ec                	addi	a1,sp,844
     6cc:	0000                	unimp
     6ce:	1800                	addi	s0,sp,48
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	0398                	addi	a4,sp,448
     6d2:	0000                	unimp
     6d4:	4105                	li	sp,1
     6d6:	1201                	addi	tp,tp,-32
     6d8:	06ec                	addi	a1,sp,844
     6da:	0000                	unimp
     6dc:	1806                	slli	a6,a6,0x21
     6de:	065e                	slli	a2,a2,0x17
     6e0:	0000                	unimp
     6e2:	4205                	li	tp,1
     6e4:	1201                	addi	tp,tp,-32
     6e6:	003a                	c.slli	zero,0xe
                results[i].err++;
     6e8:	0000                	unimp
     6ea:	000c                	0xc
     6ec:	3a0a                	fld	fs4,160(sp)
     6ee:	0000                	unimp
     6f0:	fc00                	fsw	fs0,56(s0)
     6f2:	0006                	c.slli	zero,0x1
     6f4:	0b00                	addi	s0,sp,400
     6f6:	0064                	addi	s1,sp,12
     6f8:	0000                	unimp
     6fa:	0002                	c.slli64	zero
     6fc:	5905d01b          	0x5905d01b
    switch (seedcrc)
     700:	0702                	c.slli64	a4
     702:	0811                	addi	a6,a6,4
    ee_s16       known_id = -1, total_errors = 0;
     704:	0000                	unimp
     706:	3e18                	fld	fa4,56(a2)
    switch (seedcrc)
     708:	05000007          	0x5000007
    ee_s16       known_id = -1, total_errors = 0;
     70c:	6418025b          	0x6418025b
     710:	0000                	unimp
     712:	0000                	unimp
    total_errors += check_data_types();
     714:	b718                	fsd	fa4,40(a4)
     716:	0006                	c.slli	zero,0x1
     718:	0500                	addi	s0,sp,640
     71a:	025c                	addi	a5,sp,260
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	c112                	sw	tp,128(sp)
     71e:	0005                	c.nop	1
    total_errors += check_data_types();
     720:	0400                	addi	s0,sp,512
     722:	af18                	fsd	fa4,24(a4)
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	0001                	nop
     726:	0500                	addi	s0,sp,640
     728:	025d                	addi	tp,tp,23
     72a:	1110                	addi	a2,sp,160
     72c:	0008                	0x8
     72e:	0800                	addi	s0,sp,16
     730:	6018                	flw	fa4,0(s0)
     732:	0005                	c.nop	1
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	0500                	addi	s0,sp,640
     736:	025e                	slli	tp,tp,0x17
     738:	0001a617          	auipc	a2,0x1a
     73c:	2400                	fld	fs0,8(s0)
     73e:	5018                	lw	a4,32(s0)
     740:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
     744:	025f 5d0f 0000      	0x5d0f025f
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     74a:	4800                	lw	s0,16(s0)
     74c:	9618                	0x9618
     74e:	05000007          	0x5000007
     752:	0260                	addi	s0,sp,268
     754:	562c                	lw	a1,104(a2)
     756:	0000                	unimp
     758:	5000                	lw	s0,32(s0)
     75a:	5e18                	lw	a4,56(a2)
     75c:	0000                	unimp
     75e:	0500                	addi	s0,sp,640
     760:	0261                	addi	tp,tp,24
     762:	b31a                	fsd	ft6,416(sp)
     764:	0006                	c.slli	zero,0x1
     766:	5800                	lw	s0,48(s0)
     768:	8d18                	0x8d18
     76a:	0002                	c.slli64	zero
    if (time_in_secs(total_time) > 0)
     76c:	0500                	addi	s0,sp,640
     76e:	0262                	slli	tp,tp,0x18
     770:	1016                	c.slli	zero,0x25
     772:	0001                	nop
     774:	6800                	flw	fs0,16(s0)
     776:	c418                	sw	a4,8(s0)
    total_errors += check_data_types();
     778:	0006                	c.slli	zero,0x1
     77a:	0500                	addi	s0,sp,640
    if (time_in_secs(total_time) > 0)
     77c:	10160263          	beq	a2,ra,880 <main+0x804>
     780:	0001                	nop
     782:	7000                	flw	fs0,32(s0)
    total_errors += check_data_types();
     784:	4118                	lw	a4,0(a0)
     786:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     788:	0500                	addi	s0,sp,640
     78a:	0264                	addi	s1,sp,268
     78c:	1016                	c.slli	zero,0x25
     78e:	0001                	nop
     790:	7800                	flw	fs0,48(s0)
     792:	9c18                	0x9c18
                  default_num_contexts * results[0].iterations
     794:	0005                	c.nop	1
     796:	0500                	addi	s0,sp,640
     798:	0265                	addi	tp,tp,25
     79a:	2110                	fld	fa2,0(a0)
     79c:	0008                	0x8
     79e:	8000                	0x8000
     7a0:	6318                	flw	fa4,0(a4)
     7a2:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     7a4:	0500                	addi	s0,sp,640
     7a6:	0266                	slli	tp,tp,0x19
     7a8:	3110                	fld	fa2,32(a0)
     7aa:	0008                	0x8
     7ac:	8800                	0x8800
     7ae:	3f18                	fld	fa4,56(a4)
                      / time_in_secs(total_time));
     7b0:	0006                	c.slli	zero,0x1
     7b2:	0500                	addi	s0,sp,640
        ee_printf("Iterations/Sec   : %lf\n",
     7b4:	5d0f0267          	jalr	tp,1488(t5) # 1a5d0 <_data_lma+0xf458>
                      / time_in_secs(total_time));
     7b8:	0000                	unimp
     7ba:	a000                	fsd	fs0,0(s0)
     7bc:	c618                	sw	a4,8(a2)
     7be:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     7c0:	0500                	addi	s0,sp,640
     7c2:	0268                	addi	a0,sp,268
     7c4:	1016                	c.slli	zero,0x25
     7c6:	0001                	nop
     7c8:	a400                	fsd	fs0,8(s0)
     7ca:	ae18                	fsd	fa4,24(a2)
     7cc:	0002                	c.slli64	zero
     7ce:	0500                	addi	s0,sp,640
     7d0:	0269                	addi	tp,tp,26
     7d2:	1016                	c.slli	zero,0x25
     7d4:	0001                	nop
     7d6:	ac00                	fsd	fs0,24(s0)
     7d8:	4818                	lw	a4,16(s0)
     7da:	0002                	c.slli64	zero
     7dc:	0500                	addi	s0,sp,640
     7de:	026a                	slli	tp,tp,0x1a
     7e0:	1016                	c.slli	zero,0x25
     7e2:	0001                	nop
     7e4:	b400                	fsd	fs0,40(s0)
     7e6:	ad18                	fsd	fa4,24(a0)
     7e8:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
     7ec:	1016026b          	0x1016026b
    if (time_in_secs(total_time) < 10)
     7f0:	0001                	nop
     7f2:	bc00                	fsd	fs0,56(s0)
     7f4:	7c18                	flw	fa4,56(s0)
     7f6:	0002                	c.slli64	zero
     7f8:	0500                	addi	s0,sp,640
     7fa:	026c                	addi	a1,sp,268
     7fc:	1016                	c.slli	zero,0x25
     7fe:	0001                	nop
     800:	c400                	sw	s0,8(s0)
     802:	7e18                	flw	fa4,56(a2)
     804:	0004                	0x4
     806:	0500                	addi	s0,sp,640
     808:	026d                	addi	tp,tp,27
     80a:	5d08                	lw	a0,56(a0)
     80c:	0000                	unimp
     80e:	cc00                	sw	s0,24(s0)
     810:	0a00                	addi	s0,sp,272
     812:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    ee_printf("Iterations       : %lu\n",
     816:	0821                	addi	a6,a6,8
     818:	0000                	unimp
     81a:	0000640b          	0x640b
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     81e:	1900                	addi	s0,sp,176
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     820:	0a00                	addi	s0,sp,272
     822:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    ee_printf("Iterations       : %lu\n",
     826:	0831                	addi	a6,a6,12
     828:	0000                	unimp
     82a:	0000640b          	0x640b
     82e:	0700                	addi	s0,sp,896
     830:	0a00                	addi	s0,sp,272
     832:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
     836:	0841                	addi	a6,a6,16
     838:	0000                	unimp
     83a:	0000640b          	0x640b
     83e:	1700                	addi	s0,sp,928
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     840:	1b00                	addi	s0,sp,432
     842:	05f0                	addi	a2,sp,716
     844:	0272                	slli	tp,tp,0x1c
     846:	00086807          	0x86807
     84a:	1800                	addi	s0,sp,48
     84c:	017f                	0x17f
     84e:	0000                	unimp
     850:	7505                	lui	a0,0xfffe1
     852:	1b02                	slli	s6,s6,0x20
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	0868                	addi	a0,sp,28
     856:	0000                	unimp
     858:	1800                	addi	s0,sp,48
     85a:	000007d3          	fadd.s	fa5,ft0,ft0,rne
     85e:	7605                	lui	a2,0xfffe1
     860:	1802                	slli	a6,a6,0x20
     862:	0878                	addi	a4,sp,28
     864:	0000                	unimp
     866:	0078                	addi	a4,sp,12
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     868:	060a                	slli	a2,a2,0x2
     86a:	78000003          	lb	zero,1920(zero) # 780 <main+0x704>
     86e:	0008                	0x8
     870:	0b00                	addi	s0,sp,400
     872:	0064                	addi	s1,sp,12
     874:	0000                	unimp
     876:	001d                	c.nop	7
     878:	640a                	flw	fs0,128(sp)
     87a:	0000                	unimp
     87c:	8800                	0x8800
     87e:	0008                	0x8
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     880:	0b00                	addi	s0,sp,400
     882:	0064                	addi	s1,sp,12
     884:	0000                	unimp
     886:	001d                	c.nop	7
     888:	f01c                	fsw	fa5,32(s0)
     88a:	5705                	li	a4,-31
     88c:	0302                	c.slli64	t1
     88e:	08ad                	addi	a7,a7,11
     890:	0000                	unimp
     892:	e31d                	bnez	a4,8b8 <main+0x83c>
    if (results[0].execs & ID_LIST)
     894:	0006                	c.slli	zero,0x1
     896:	0500                	addi	s0,sp,640
        total_errors++;
     898:	026e                	slli	tp,tp,0x1b
     89a:	0006fc0b          	0x6fc0b
     89e:	1d00                	addi	s0,sp,688
    if (results[0].execs & ID_LIST)
     8a0:	0000056f          	jal	a0,8a0 <main+0x824>
     8a4:	7705                	lui	a4,0xfffe1
     8a6:	0b02                	c.slli64	s6
        for (i = 0; i < default_num_contexts; i++)
     8a8:	0841                	addi	a6,a6,16
     8aa:	0000                	unimp
     8ac:	0a00                	addi	s0,sp,272
     8ae:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b2:	08bd                	addi	a7,a7,15
     8b4:	0000                	unimp
     8b6:	0000640b          	0x640b
     8ba:	1800                	addi	s0,sp,48
     8bc:	0600                	addi	s0,sp,768
     8be:	07a1                	addi	a5,a5,8
     8c0:	0000                	unimp
     8c2:	0405                	addi	s0,s0,1
        for (i = 0; i < default_num_contexts; i++)
     8c4:	08bd                	addi	a7,a7,15
     8c6:	0000                	unimp
     8c8:	d31e                	sw	t2,164(sp)
     8ca:	0008                	0x8
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8cc:	1500                	addi	s0,sp,672
     8ce:	046d                	addi	s0,s0,27
     8d0:	0000                	unimp
     8d2:	0500                	addi	s0,sp,640
     8d4:	c804                	sw	s1,16(s0)
     8d6:	0008                	0x8
     8d8:	0500                	addi	s0,sp,640
     8da:	9004                	0x9004
     8dc:	0001                	nop
     8de:	1e00                	addi	s0,sp,816
     8e0:	08ea                	slli	a7,a7,0x1a
     8e2:	0000                	unimp
     8e4:	5d15                	li	s10,-27
     8e6:	0000                	unimp
     8e8:	0000                	unimp
     8ea:	0405                	addi	s0,s0,1
     8ec:	08f0                	addi	a2,sp,92
     8ee:	0000                	unimp
     8f0:	0405                	addi	s0,s0,1
     8f2:	08df 0000 610a      	0x610a000008df
     8f8:	0006                	c.slli	zero,0x1
     8fa:	0600                	addi	s0,sp,768
     8fc:	0009                	c.nop	2
     8fe:	0b00                	addi	s0,sp,400
        for (i = 0; i < default_num_contexts; i++)
     900:	0064                	addi	s1,sp,12
     902:	0000                	unimp
     904:	0002                	c.slli64	zero
     906:	3d1f 0005 0500      	0x50000053d1f
     90c:	6d170307          	0x6d170307
     910:	0004                	0x4
     912:	1f00                	addi	s0,sp,944
     914:	0536                	slli	a0,a0,0xd
     916:	0000                	unimp
    if (results[0].execs & ID_MATRIX)
     918:	0805                	addi	a6,a6,1
     91a:	04731d03          	lh	s10,71(t1) # 6e4bf <_data_lma+0x63347>
     91e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     920:	2d20                	fld	fs0,88(a0)
     922:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
     926:	169a                	slli	a3,a3,0x26
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	0041                	c.nop	16
     92a:	0000                	unimp
     92c:	3720                	fld	fs0,104(a4)
     92e:	0000                	unimp
     930:	0600                	addi	s0,sp,768
     932:	005d159b          	0x5d159b
     936:	0000                	unimp
     938:	c10a                	sw	sp,128(sp)
     93a:	0005                	c.nop	1
        for (i = 0; i < default_num_contexts; i++)
     93c:	4800                	lw	s0,16(s0)
     93e:	0009                	c.nop	2
     940:	0b00                	addi	s0,sp,400
     942:	0064                	addi	s1,sp,12
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     944:	0000                	unimp
     946:	0001                	nop
     948:	6220                	flw	fs0,64(a2)
     94a:	0002                	c.slli64	zero
     94c:	0600                	addi	s0,sp,768
     94e:	179e                	slli	a5,a5,0x27
     950:	0938                	addi	a4,sp,152
     952:	0000                	unimp
     954:	8d04                	0x8d04
     956:	0000                	unimp
     958:	0700                	addi	s0,sp,896
     95a:	185e                	slli	a6,a6,0x37
     95c:	00000033          	add	zero,zero,zero
     960:	a804                	fsd	fs1,16(s0)
     962:	0006                	c.slli	zero,0x1
     964:	0700                	addi	s0,sp,896
     966:	185f 003a 0000      	0x3a185f
     96c:	4b04                	lw	s1,16(a4)
     96e:	07000007          	0x7000007
     972:	1860                	addi	s0,sp,60
     974:	005d                	c.nop	23
     976:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     978:	0802                	c.slli64	a6
     97a:	9504                	0x9504
     97c:	0004                	0x4
     97e:	0400                	addi	s0,sp,512
     980:	02c6                	slli	t0,t0,0x11
     982:	0000                	unimp
     984:	2c186207          	0x2c186207
     988:	0000                	unimp
     98a:	0400                	addi	s0,sp,512
     98c:	00000017          	auipc	zero,0x0
    if (results[0].execs & ID_STATE)
     990:	64186307          	0x64186307
     994:	0000                	unimp
     996:	2000                	fld	fs0,0(s0)
        for (i = 0; i < default_num_contexts; i++)
     998:	00000663          	beqz	zero,9a4 <main+0x928>
     99c:	8b0fba07          	fld	fs4,-1872(t6)
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	0009                	c.nop	2
     9a2:	0f00                	addi	s0,sp,912
     9a4:	000007bb          	0x7bb
     9a8:	0701                	addi	a4,a4,0
     9aa:	10bc                	addi	a5,sp,104
     9ac:	09be                	slli	s3,s3,0xf
     9ae:	0000                	unimp
     9b0:	ea0d                	bnez	a2,9e2 <main+0x966>
     9b2:	0001                	nop
        for (i = 0; i < default_num_contexts; i++)
     9b4:	0700                	addi	s0,sp,896
     9b6:	0bbe                	slli	s7,s7,0xf
     9b8:	097f                	0x97f
     9ba:	0000                	unimp
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9bc:	0000                	unimp
     9be:	9a04                	0x9a04
     9c0:	0006                	c.slli	zero,0x1
     9c2:	0700                	addi	s0,sp,896
     9c4:	09a303bf de0f0000 	0xde0f000009a303bf
     9cc:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
     9d0:	4308                	lw	a0,0(a4)
     9d2:	f210                	fsw	fa2,32(a2)
     9d4:	0009                	c.nop	2
     9d6:	0d00                	addi	s0,sp,656
     9d8:	06fd                	addi	a3,a3,31
     9da:	0000                	unimp
     9dc:	4508                	lw	a0,8(a0)
     9de:	540c                	lw	a1,40(s0)
     9e0:	0009                	c.nop	2
     9e2:	0000                	unimp
     9e4:	6910                	flw	fa2,16(a0)
     9e6:	7864                	flw	fs1,116(s0)
     9e8:	0800                	addi	s0,sp,16
     9ea:	0c46                	slli	s8,s8,0x11
     9ec:	0954                	addi	a3,sp,148
     9ee:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     9f0:	0002                	c.slli64	zero
     9f2:	6c04                	flw	fs1,24(s0)
     9f4:	0001                	nop
     9f6:	0800                	addi	s0,sp,16
     9f8:	09ca0347          	fmsub.s	ft6,fs4,ft8,ft1,rne
     9fc:	0000                	unimp
     9fe:	00061e0f          	0x61e0f
     a02:	0800                	addi	s0,sp,16
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	4908                	lw	a0,16(a0)
     a06:	2610                	fld	fa2,8(a2)
    for (i = 0; i < default_num_contexts; i++)
     a08:	000a                	c.slli	zero,0x2
     a0a:	0d00                	addi	s0,sp,656
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a0c:	079c                	addi	a5,sp,960
     a0e:	0000                	unimp
     a10:	4b08                	lw	a0,16(a4)
     a12:	2619                	jal	d18 <main+0xc9c>
     a14:	000a                	c.slli	zero,0x2
     a16:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     a18:	730d                	lui	t1,0xfffe3
     a1a:	08000007          	0x8000007
     a1e:	194c                	addi	a1,sp,180
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	0a2c                	addi	a1,sp,280
     a22:	0000                	unimp
     a24:	0004                	0x4
     a26:	0405                	addi	s0,s0,1
    for (i = 0; i < default_num_contexts; i++)
     a28:	09fe                	slli	s3,s3,0x1f
     a2a:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	0405                	addi	s0,s0,1
     a2e:	09ca                	slli	s3,s3,0x12
     a30:	0000                	unimp
     a32:	7804                	flw	fs1,48(s0)
     a34:	0006                	c.slli	zero,0x1
     a36:	0800                	addi	s0,sp,16
     a38:	034d                	addi	t1,t1,19
     a3a:	09fe                	slli	s3,s3,0x1f
     a3c:	0000                	unimp
     a3e:	c904                	sw	s1,16(a0)
     a40:	0001                	nop
     a42:	0800                	addi	s0,sp,16
     a44:	1052                	c.slli	zero,0x34
     a46:	0954                	addi	a3,sp,148
     a48:	0000                	unimp
     a4a:	6f04                	flw	fs1,24(a4)
     a4c:	0000                	unimp
     a4e:	0800                	addi	s0,sp,16
     a50:	096c1053          	fsub.s	ft0,fs8,fs6,rtz
    for (i = 0; i < default_num_contexts; i++)
     a54:	0000                	unimp
     a56:	0000940f          	0x940f
     a5a:	1000                	addi	s0,sp,32
     a5c:	5908                	lw	a0,48(a0)
     a5e:	9010                	0x9010
     a60:	000a                	c.slli	zero,0x2
     a62:	1000                	addi	s0,sp,32
     a64:	004e                	c.slli	zero,0x13
     a66:	5b08                	lw	a0,48(a4)
    if (total_errors == 0)
     a68:	5d0d                	li	s10,-29
     a6a:	0000                	unimp
    if (total_errors > 0)
     a6c:	0000                	unimp
     a6e:	4110                	lw	a2,0(a0)
        ee_printf("Errors detected\n");
     a70:	0800                	addi	s0,sp,16
     a72:	0d5c                	addi	a5,sp,660
     a74:	0a90                	addi	a2,sp,336
     a76:	0000                	unimp
     a78:	1004                	addi	s1,sp,32
     a7a:	0042                	c.slli	zero,0x10
     a7c:	5d08                	lw	a0,56(a0)
     a7e:	900d                	srli	s0,s0,0x23
    portable_fini(&(results[0].port));
     a80:	000a                	c.slli	zero,0x2
     a82:	0800                	addi	s0,sp,16
     a84:	4310                	lw	a2,0(a4)
     a86:	0800                	addi	s0,sp,16
     a88:	0d5e                	slli	s10,s10,0x17
     a8a:	0a96                	slli	s5,s5,0x5
}
     a8c:	0000                	unimp
     a8e:	000c                	0xc
     a90:	0405                	addi	s0,s0,1
     a92:	0a3e                	slli	s4,s4,0xf
     a94:	0000                	unimp
     a96:	0405                	addi	s0,s0,1
     a98:	0a4a                	slli	s4,s4,0x12
     a9a:	0000                	unimp
     a9c:	3e04                	fld	fs1,56(a2)
     a9e:	08000003          	lb	zero,128(zero) # 80 <main+0x4>
     aa2:	035f 0a56 0000      	0xa56035f
     aa8:	0004b10f          	0x4b10f
     aac:	4400                	lw	s0,8(s0)
     aae:	7108                	flw	fa0,32(a0)
     ab0:	7910                	flw	fa2,48(a0)
     ab2:	0d00000b          	0xd00000b
     ab6:	0512                	slli	a0,a0,0x4
     ab8:	0000                	unimp
     aba:	7408                	flw	fa0,40(s0)
     abc:	5419                	li	s0,-26
     abe:	0009                	c.nop	2
     ac0:	0000                	unimp
     ac2:	180d                	addi	a6,a6,-29
     ac4:	0005                	c.nop	1
     ac6:	0800                	addi	s0,sp,16
     ac8:	1975                	addi	s2,s2,-3
     aca:	0954                	addi	a3,sp,148
     acc:	0000                	unimp
     ace:	0d02                	c.slli64	s10
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	051e                	slli	a0,a0,0x7
     ad2:	0000                	unimp
     ad4:	7608                	flw	fa0,40(a2)
     ad6:	5419                	li	s0,-26
     ad8:	0009                	c.nop	2
     ada:	0400                	addi	s0,sp,512
     adc:	1e0d                	addi	t3,t3,-29
     ade:	0009                	c.nop	2
     ae0:	0800                	addi	s0,sp,16
     ae2:	0b791977          	0xb791977
     ae6:	0000                	unimp
     ae8:	0d08                	addi	a0,sp,656
     aea:	070e                	slli	a4,a4,0x3
            j++;
     aec:	0000                	unimp
     aee:	7808                	flw	fa0,48(s0)
        if ((1 << (ee_u32)i) & results[0].execs)
     af0:	8b19                	andi	a4,a4,6
     af2:	0009                	c.nop	2
     af4:	1800                	addi	s0,sp,48
     af6:	890d                	andi	a0,a0,3
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	0006                	c.slli	zero,0x1
     afa:	0800                	addi	s0,sp,16
     afc:	1979                	addi	s2,s2,-2
     afe:	0000098b          	0x98b
     b02:	0d1c                	addi	a5,sp,656
     b04:	000004ab          	0x4ab
     b08:	7a08                	flw	fa0,48(a2)
     b0a:	8b19                	andi	a4,a4,6
     b0c:	0009                	c.nop	2
     b0e:	2000                	fld	fs0,0(s0)
     b10:	db0d                	beqz	a4,a42 <main+0x9c6>
     b12:	0001                	nop
        if (results[i].execs & ID_LIST)
     b14:	0800                	addi	s0,sp,16
     b16:	0a26197b          	0xa26197b
     b1a:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1c:	1024                	addi	s1,sp,40
     b1e:	616d                	addi	sp,sp,240
     b20:	0074                	addi	a3,sp,12
     b22:	7c08                	flw	fa0,56(s0)
     b24:	9c19                	0x9c19
     b26:	000a                	c.slli	zero,0x2
     b28:	2800                	fld	fs0,16(s0)
     b2a:	6310                	flw	fa2,0(a4)
     b2c:	6372                	flw	ft6,28(sp)
     b2e:	0800                	addi	s0,sp,16
     b30:	0c7e                	slli	s8,s8,0x1f
     b32:	0960                	addi	s0,sp,156
     b34:	0000                	unimp
     b36:	0d38                	addi	a4,sp,664
     b38:	05df 0000 7f08      	0x7f08000005df
     b3e:	600c                	flw	fa1,0(s0)
     b40:	0009                	c.nop	2
     b42:	3a00                	fld	fs0,48(a2)
     b44:	fd0d                	bnez	a0,a7e <main+0xa02>
     b46:	0004                	0x4
            j++;
     b48:	0800                	addi	s0,sp,16
     b4a:	0c80                	addi	s0,sp,592
     b4c:	0960                	addi	s0,sp,156
     b4e:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	0d3c                	addi	a5,sp,664
     b52:	07b2                	slli	a5,a5,0xc
     b54:	0000                	unimp
     b56:	8108                	0x8108
            j++;
     b58:	600c                	flw	fa1,0(s0)
     b5a:	0009                	c.nop	2
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	3e00                	fld	fs0,56(a2)
     b5e:	6510                	flw	fa2,8(a0)
     b60:	7272                	flw	ft4,60(sp)
     b62:	0800                	addi	s0,sp,16
        ee_printf(
     b64:	0c82                	c.slli64	s9
     b66:	0954                	addi	a3,sp,148
     b68:	0000                	unimp
     b6a:	0d40                	addi	s0,sp,660
     b6c:	00000277          	0x277
     b70:	8408                	0x8408
     b72:	0009be13          	sltiu	t3,s3,0
     b76:	4200                	lw	s0,0(a2)
            res->crclist = res->crc;
     b78:	0a00                	addi	s0,sp,272
     b7a:	0128                	addi	a0,sp,136
    for (i = 0; i < iterations; i++)
     b7c:	0000                	unimp
     b7e:	0b89                	addi	s7,s7,2
     b80:	0000                	unimp
     b82:	0000640b          	0x640b
     b86:	0300                	addi	s0,sp,384
     b88:	0400                	addi	s0,sp,512
     b8a:	0651                	addi	a2,a2,20
        && (results[0].seed3 == 0))
     b8c:	0000                	unimp
     b8e:	8508                	0x8508
     b90:	000aa803          	lw	a6,0(s5)
     b94:	0400                	addi	s0,sp,512
     b96:	00000577          	0x577
        results[0].seed1 = 0x3415;
     b9a:	4001                	c.li	zero,0
     b9c:	a112                	fsd	ft4,128(sp)
     b9e:	0500000b          	0x500000b
     ba2:	a704                	fsd	fs1,8(a4)
     ba4:	1400000b          	0x1400000b
        results[0].seed3 = 0x66;
     ba8:	096c                	addi	a1,sp,156
     baa:	0000                	unimp
     bac:	0bc0                	addi	s0,sp,468
     bae:	0000                	unimp
     bb0:	c015                	beqz	s0,bd4 <main+0xb58>
     bb2:	1500000b          	0x1500000b
        printf("start test22\n");
     bb6:	0bc0                	addi	s0,sp,468
        results[0].execs = ALL_ALGORITHMS_MASK;
     bb8:	0000                	unimp
     bba:	c615                	beqz	a2,be6 <main+0xb6a>
        printf("start test22\n");
     bbc:	0000000b          	0xb
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	0405                	addi	s0,s0,1
     bc2:	09f2                	slli	s3,s3,0x1c
        printf("start test22\n");
     bc4:	0000                	unimp
     bc6:	0405                	addi	s0,s0,1
     bc8:	0b89                	addi	s7,s7,2
     bca:	0000                	unimp
     bcc:	7421                	lui	s0,0xfffe8
     bce:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
        ee_printf(
     bd2:	01f5                	addi	gp,gp,29
     bd4:	7301                	lui	t1,0xfffe0
     bd6:	000c                	0xc
     bd8:	0100                	addi	s0,sp,128
     bda:	00000c73          	0xc73
     bde:	db22                	sw	s0,180(sp)
        if (known_id == 3)
     be0:	0001                	nop
     be2:	0100                	addi	s0,sp,128
     be4:	01f5                	addi	gp,gp,29
     be6:	7320                	flw	fs0,96(a4)
     be8:	000c                	0xc
     bea:	2300                	fld	fs0,0(a4)
                      default_num_contexts * results[0].iterations
     bec:	00706d63          	bltu	zero,t2,c06 <main+0xb8a>
     bf0:	f501                	bnez	a0,af8 <main+0xa7c>
     bf2:	2f01                	jal	1302 <__stack_size+0x302>
     bf4:	0b95                	addi	s7,s7,5
     bf6:	0000                	unimp
     bf8:	73657223          	0x73657223
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	0100                	addi	s0,sp,128
     bfe:	01f5                	addi	gp,gp,29
     c00:	c642                	sw	a6,12(sp)
     c02:	2400000b          	0x2400000b
     c06:	0070                	addi	a2,sp,12
                          / time_in_secs(total_time),
     c08:	f701                	bnez	a4,b10 <main+0xa94>
     c0a:	1001                	c.nop	-32
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	00000c73          	0xc73
                          / time_in_secs(total_time),
     c10:	7124                	flw	fs1,96(a0)
     c12:	0100                	addi	s0,sp,128
     c14:	731401f7          	0x731401f7
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	000c                	0xc
     c1a:	2400                	fld	fs0,8(s0)
     c1c:	0065                	c.nop	25
     c1e:	f701                	bnez	a4,b26 <main+0xaaa>
     c20:	1801                	addi	a6,a6,-32
     c22:	00000c73          	0xc73
     c26:	4c25                	li	s8,9
     c28:	0006                	c.slli	zero,0x1
     c2a:	0100                	addi	s0,sp,128
     c2c:	731c01f7          	0x731c01f7
     c30:	000c                	0xc
     c32:	2500                	fld	fs0,8(a0)
     c34:	00b0                	addi	a2,sp,72
     c36:	0000                	unimp
     c38:	f801                	bnez	s0,b48 <main+0xacc>
     c3a:	1001                	c.nop	-32
     c3c:	096c                	addi	a1,sp,156
     c3e:	0000                	unimp
     c40:	8825                	andi	s0,s0,9
     c42:	01000007          	0x1000007
     c46:	01f8                	addi	a4,sp,204
     c48:	6c18                	flw	fa4,24(s0)
     c4a:	0009                	c.nop	2
     c4c:	2500                	fld	fs0,8(a0)
     c4e:	0011                	c.nop	4
            ee_printf(" / %s", MEM_LOCATION);
     c50:	0000                	unimp
     c52:	f801                	bnez	s0,b62 <main+0xae6>
     c54:	2101                	jal	1054 <__stack_size+0x54>
     c56:	096c                	addi	a1,sp,156
     c58:	0000                	unimp
     c5a:	5e25                	li	t3,-23
     c5c:	0001                	nop
     c5e:	0100                	addi	s0,sp,128
     c60:	01f8                	addi	a4,sp,204
     c62:	6c28                	flw	fa0,88(s0)
            ee_printf("\n");
     c64:	0009                	c.nop	2
     c66:	2400                	fld	fs0,8(s0)
     c68:	0069                	c.nop	26
     c6a:	f801                	bnez	s0,b7a <main+0xafe>
     c6c:	2f01                	jal	137c <__stack_size+0x37c>
     c6e:	096c                	addi	a1,sp,156
     c70:	0000                	unimp
     c72:	0500                	addi	s0,sp,640
        ee_printf(
     c74:	3204                	fld	fs1,32(a2)
     c76:	000a                	c.slli	zero,0x2
     c78:	2100                	fld	fs0,0(a0)
     c7a:	013a                	slli	sp,sp,0xe
     c7c:	0000                	unimp
     c7e:	d201                	beqz	a2,b7e <main+0xb02>
     c80:	0101                	addi	sp,sp,0
     c82:	00000c73          	0xc73
        total_errors++;
     c86:	b301                	j	986 <main+0x90a>
     c88:	000c                	0xc
     c8a:	2200                	fld	fs0,0(a2)
    if (results[0].execs & ID_STATE)
     c8c:	000001db          	0x1db
     c90:	d201                	beqz	a2,b90 <main+0xb14>
     c92:	1e01                	addi	t3,t3,-32
     c94:	00000c73          	0xc73
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	9c25                	0x9c25
     c9a:	01000007          	0x1000007
     c9e:	01d4                	addi	a3,sp,196
     ca0:	7310                	flw	fa2,32(a4)
     ca2:	000c                	0xc
     ca4:	2400                	fld	fs0,8(s0)
     ca6:	6d74                	flw	fa3,92(a0)
     ca8:	0070                	addi	a2,sp,12
     caa:	d401                	beqz	s0,bb2 <main+0xb36>
     cac:	1e01                	addi	t3,t3,-32
     cae:	00000c73          	0xc73
            known_id = 4;
     cb2:	2100                	fld	fs0,0(a0)
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	000002eb          	0x2eb
     cb8:	b401                	j	6b8 <main+0x63c>
     cba:	0101                	addi	sp,sp,0
     cbc:	00000c73          	0xc73
     cc0:	e001                	bnez	s0,cc0 <main+0xc44>
     cc2:	000c                	0xc
            known_id = 4;
     cc4:	2200                	fld	fs0,0(a2)
     cc6:	000001db          	0x1db
     cca:	b401                	j	6ca <main+0x64e>
            ee_printf("6k validation run parameters for coremark.\n");
     ccc:	1b01                	addi	s6,s6,-32
     cce:	00000c73          	0xc73
     cd2:	7322                	flw	ft6,40(sp)
     cd4:	01000007          	0x1000007
     cd8:	01b4                	addi	a3,sp,200
     cda:	c02c                	sw	a1,64(s0)
     cdc:	0000000b          	0xb
     ce0:	cc21                	beqz	s0,d38 <main+0xcbc>
     ce2:	0002                	c.slli64	zero
     ce4:	0100                	addi	s0,sp,128
     ce6:	0199                	addi	gp,gp,6
     ce8:	7301                	lui	t1,0xfffe0
     cea:	000c                	0xc
            known_id = 1;
     cec:	0100                	addi	s0,sp,128
     cee:	0d1a                	slli	s10,s10,0x6
            ee_printf("6k validation run parameters for coremark.\n");
     cf0:	0000                	unimp
     cf2:	5222                	lw	tp,40(sp)
     cf4:	01000007          	0x1000007
     cf8:	0199                	addi	gp,gp,6
     cfa:	7322                	flw	ft6,40(sp)
            known_id = 1;
     cfc:	000c                	0xc
     cfe:	2200                	fld	fs0,0(a2)
     d00:	011a                	slli	sp,sp,0x6
     d02:	0000                	unimp
            ee_printf("6k performance run parameters for coremark.\n");
     d04:	9901                	andi	a0,a0,-32
     d06:	3b01                	jal	a16 <main+0x99a>
     d08:	00000c73          	0xc73
     d0c:	7424                	flw	fs1,104(s0)
     d0e:	706d                	c.lui	zero,0xffffb
     d10:	0100                	addi	s0,sp,128
     d12:	c010019b          	0xc010019b
     d16:	0000000b          	0xb
     d1a:	f621                	bnez	a2,c62 <main+0xbe6>
     d1c:	0000                	unimp
     d1e:	0100                	addi	s0,sp,128
     d20:	017a                	slli	sp,sp,0x1e
     d22:	7301                	lui	t1,0xfffe0
     d24:	000c                	0xc
     d26:	0100                	addi	s0,sp,128
     d28:	0d54                	addi	a3,sp,660
     d2a:	0000                	unimp
     d2c:	c722                	sw	s0,140(sp)
     d2e:	0004                	0x4
            known_id = 0;
     d30:	0100                	addi	s0,sp,128
     d32:	017a                	slli	sp,sp,0x1e
     d34:	731d                	lui	t1,0xfffe7
     d36:	000c                	0xc
        for (i = 0; i < default_num_contexts; i++)
     d38:	2400                	fld	fs0,8(s0)
     d3a:	6d74                	flw	fa3,92(a0)
     d3c:	0070                	addi	a2,sp,12
     d3e:	7c01                	lui	s8,0xfffe0
    ee_s16     find_num = res->seed3;
     d40:	1001                	c.nop	-32
     d42:	0bc0                	addi	s0,sp,468
{
     d44:	0000                	unimp
     d46:	7224                	flw	fs1,96(a2)
     d48:	7465                	lui	s0,0xffff9
     d4a:	0100                	addi	s0,sp,128
     d4c:	017d                	addi	sp,sp,31
     d4e:	7310                	flw	fa2,32(a4)
     d50:	000c                	0xc
     d52:	0000                	unimp
     d54:	2a21                	jal	e6c <core_bench_list+0x12c>
     d56:	0006                	c.slli	zero,0x1
     d58:	0100                	addi	s0,sp,128
     d5a:	0151                	addi	sp,sp,20
     d5c:	7301                	lui	t1,0xfffe0
     d5e:	000c                	0xc
     d60:	0100                	addi	s0,sp,128
     d62:	0dc2                	slli	s11,s11,0x10
     d64:	0000                	unimp
     d66:	5322                	lw	t1,40(sp)
     d68:	0005                	c.nop	1
     d6a:	0100                	addi	s0,sp,128
     d6c:	0151                	addi	sp,sp,20
     d6e:	7322                	flw	ft6,40(sp)
     d70:	000c                	0xc
     d72:	2200                	fld	fs0,0(a2)
     d74:	00000773          	0x773
     d78:	5201                	li	tp,-32
     d7a:	2201                	jal	e7a <core_bench_list+0x13a>
     d7c:	0bc0                	addi	s0,sp,468
     d7e:	0000                	unimp
     d80:	1e22                	slli	t3,t3,0x28
     d82:	0009                	c.nop	2
    list_head *list     = res->list;
     d84:	0100                	addi	s0,sp,128
     d86:	c2220153          	0xc2220153
    for (i = 0; i < find_num; i++)
     d8a:	000d                	c.nop	3
    info.idx = finder_idx;
     d8c:	2200                	fld	fs0,0(a2)
     d8e:	00a6                	slli	ra,ra,0x9
    for (i = 0; i < find_num; i++)
     d90:	0000                	unimp
     d92:	5401                	li	s0,-32
    ee_u16     found = 0, missed = 0;
     d94:	2201                	jal	e94 <core_bench_list+0x154>
     d96:	0dc8                	addi	a0,sp,724
     d98:	0000                	unimp
     d9a:	d222                	sw	s0,36(sp)
    ee_u16     retval = 0;
     d9c:	0005                	c.nop	1
     d9e:	0100                	addi	s0,sp,128
    if (info->idx >= 0)
     da0:	0155                	addi	sp,sp,21
     da2:	7322                	flw	ft6,40(sp)
        info.data16 = (i & 0xff);
     da4:	000c                	0xc
     da6:	2200                	fld	fs0,0(a2)
     da8:	000005e7          	jalr	a1,zero # 0 <_start>
    if (info->idx >= 0)
     dac:	5601                	li	a2,-32
     dae:	2201                	jal	eae <core_bench_list+0x16e>
        while (list && (list->info->idx != info->idx))
     db0:	0bc0                	addi	s0,sp,468
     db2:	0000                	unimp
     db4:	a625                	j	10dc <__stack_size+0xdc>
     db6:	0005                	c.nop	1
     db8:	0100                	addi	s0,sp,128
     dba:	0158                	addi	a4,sp,132
     dbc:	7310                	flw	fa2,32(a4)
     dbe:	000c                	0xc
     dc0:	0000                	unimp
     dc2:	0405                	addi	s0,s0,1
     dc4:	00000c73          	0xc73
     dc8:	0405                	addi	s0,s0,1
     dca:	0bc0                	addi	s0,sp,468
     dcc:	0000                	unimp
     dce:	4f26                	lw	t5,72(sp)
     dd0:	0000                	unimp
     dd2:	0100                	addi	s0,sp,128
     dd4:	0c7301fb          	0xc7301fb
     dd8:	0000                	unimp
     dda:	13d0                	addi	a2,sp,484
            list = list->next;
     ddc:	0000                	unimp
     dde:	02bc                	addi	a5,sp,328
        while (list && (list->info->idx != info->idx))
     de0:	0000                	unimp
     de2:	9c01                	0x9c01
     de4:	10ba                	slli	ra,ra,0x2e
     de6:	0000                	unimp
     de8:	0005b727          	fsd	ft0,14(a1)
    while (list)
     dec:	0100                	addi	s0,sp,128
     dee:	098b17fb          	0x98b17fb
     df2:	0000                	unimp
        tmp        = list->next;
     df4:	0000                	unimp
     df6:	0000                	unimp
        list->next = next;
     df8:	00091e27          	0x91e27
    while (list)
     dfc:	0100                	addi	s0,sp,128
     dfe:	0c732bfb          	0xc732bfb
        if (this_find == NULL)
     e02:	0000                	unimp
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	002c                	addi	a1,sp,8
     e06:	0000                	unimp
            found++;
     e08:	00079127          	0x79127
     e0c:	0100                	addi	s0,sp,128
     e0e:	09543cfb          	0x9543cfb
            if (this_find->info->data16 & 0x1) /* use found value */
     e12:	0000                	unimp
            found++;
     e14:	008c                	addi	a1,sp,64
     e16:	0000                	unimp
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	c328                	sw	a0,64(a4)
     e1a:	0004                	0x4
     e1c:	0100                	addi	s0,sp,128
     e1e:	0cff                	0xcff
                retval += (this_find->info->data16 >> 9) & 1;
     e20:	0000098b          	0x98b
     e24:	2914                	fld	fa3,16(a0)
     e26:	070e                	slli	a4,a4,0x3
     e28:	0000                	unimp
     e2a:	0001                	nop
     e2c:	0c01                	addi	s8,s8,0
     e2e:	0000098b          	0x98b
     e32:	00ad                	addi	ra,ra,11
            if (this_find->next != NULL)
     e34:	0000                	unimp
     e36:	d229                	beqz	a2,d78 <core_bench_list+0x38>
     e38:	0005                	c.nop	1
     e3a:	0100                	addi	s0,sp,128
                this_find->next = finder->next;
     e3c:	73100103          	lb	sp,1841(zero) # 731 <main+0x6b5>
     e40:	000c                	0xc
     e42:	cb00                	sw	s0,16(a4)
                finder->next    = list->next;
     e44:	0000                	unimp
     e46:	2900                	fld	fs0,16(a0)
     e48:	00a6                	slli	ra,ra,0x9
     e4a:	0000                	unimp
                list->next      = finder;
     e4c:	0401                	addi	s0,s0,0
     e4e:	1001                	c.nop	-32
        if (info.idx >= 0)
     e50:	0bc0                	addi	s0,sp,468
     e52:	0000                	unimp
     e54:	00e9                	addi	ra,ra,26
     e56:	0000                	unimp
            info.idx++;
     e58:	e729                	bnez	a4,ea2 <core_bench_list+0x162>
     e5a:	0005                	c.nop	1
     e5c:	0100                	addi	s0,sp,128
     e5e:	0105                	addi	sp,sp,1
     e60:	c010                	sw	a2,0(s0)
     e62:	3300000b          	0x3300000b
     e66:	0001                	nop
     e68:	2a00                	fld	fs0,16(a2)
     e6a:	0069                	c.nop	26
     e6c:	0701                	addi	a4,a4,0
     e6e:	1001                	c.nop	-32
     e70:	0000098b          	0x98b
    for (i = 0; i < find_num; i++)
     e74:	0151                	addi	sp,sp,20
     e76:	0000                	unimp
     e78:	a629                	j	1182 <__stack_size+0x182>
     e7a:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
     e7e:	0108                	addi	a0,sp,128
     e80:	7310                	flw	fa2,32(a4)
     e82:	000c                	0xc
     e84:	b700                	fsd	fs0,40(a4)
     e86:	0001                	nop
     e88:	2900                	fld	fs0,16(a0)
     e8a:	000001db          	0x1db
     e8e:	0801                	addi	a6,a6,0
    if (finder_idx > 0)
     e90:	1901                	addi	s2,s2,-32
     e92:	00000c73          	0xc73
    remover = core_list_remove(list->next);
     e96:	000001f7          	0x1f7
    if (info->idx >= 0)
     e9a:	7329                	lui	t1,0xfffea
    list_head *ret = item->next;
     e9c:	01000007          	0x1000007
    tmp        = item->info;
     ea0:	0109                	addi	sp,sp,2
     ea2:	f210                	fsw	fa2,32(a2)
    item->info = ret->info;
     ea4:	0009                	c.nop	2
     ea6:	3c00                	fld	fs0,56(s0)
    item->next = item->next->next;
     ea8:	0002                	c.slli64	zero
     eaa:	2b00                	fld	fs0,16(a4)
    item->info = ret->info;
     eac:	0260                	addi	s0,sp,268
     eae:	0000                	unimp
    ret->info  = tmp;
     eb0:	0f52                	slli	t5,t5,0x14
     eb2:	0000                	unimp
    item->next = item->next->next;
     eb4:	8629                	srai	a2,a2,0xa
     eb6:	0000                	unimp
    if (info->idx >= 0)
     eb8:	0100                	addi	s0,sp,128
     eba:	011a                	slli	sp,sp,0x6
    ret->next  = NULL;
     ebc:	6010                	flw	fa2,0(s0)
     ebe:	0009                	c.nop	2
    if (info->idx >= 0)
     ec0:	b400                	fsd	fs0,40(s0)
     ec2:	0002                	c.slli64	zero
        while (list && (list->info->idx != info->idx))
     ec4:	2a00                	fld	fs0,16(a2)
     ec6:	6164                	flw	fs1,68(a0)
     ec8:	0074                	addi	a3,sp,12
     eca:	1b01                	addi	s6,s6,-32
     ecc:	1001                	c.nop	-32
     ece:	0960                	addi	s0,sp,156
     ed0:	0000                	unimp
     ed2:	02ce                	slli	t0,t0,0x13
            list = list->next;
     ed4:	0000                	unimp
     ed6:	542c                	lw	a1,104(s0)
        while (list && (list->info->idx != info->idx))
     ed8:	000d                	c.nop	3
     eda:	7800                	flw	fs0,48(s0)
        finder = list->next;
     edc:	0014                	0x14
     ede:	7800                	flw	fs0,48(s0)
    while (finder)
     ee0:	0002                	c.slli64	zero
     ee2:	0100                	addi	s0,sp,128
        retval = crc16(list->info->data16, retval);
     ee4:	011f 2d09 0da7      	0xda72d09011f
     eea:	0000                	unimp
     eec:	02f0                	addi	a2,sp,332
     eee:	0000                	unimp
     ef0:	9a2d                	andi	a2,a2,-21
     ef2:	000d                	c.nop	3
     ef4:	0300                	addi	s0,sp,384
     ef6:	2d000003          	lb	zero,720(zero) # 2d0 <main+0x254>
        finder = finder->next;
     efa:	0d8d                	addi	s11,s11,3
        retval = crc16(list->info->data16, retval);
     efc:	0000                	unimp
     efe:	0316                	slli	t1,t1,0x5
    while (finder)
     f00:	0000                	unimp
     f02:	802d                	srli	s0,s0,0xb
     f04:	000d                	c.nop	3
     f06:	2e00                	fld	fs0,24(a2)
     f08:	2d000003          	lb	zero,720(zero) # 2d0 <main+0x254>
    item_removed->info  = item_modified->info;
     f0c:	00000d73          	0xd73
    item_removed->next  = item_modified->next;
     f10:	0346                	slli	t1,t1,0x11
     f12:	0000                	unimp
    insize = 1;
     f14:	662d                	lui	a2,0xb
     f16:	000d                	c.nop	3
    item_removed->info  = item_modified->info;
     f18:	5e00                	lw	s0,56(a2)
     f1a:	2e000003          	lb	zero,736(zero) # 2e0 <main+0x264>
    item_modified->info = tmp;
     f1e:	0278                	addi	a4,sp,268
    item_removed->next  = item_modified->next;
     f20:	0000                	unimp
     f22:	000db42f          	0xdb42f
    item_modified->next = item_removed;
     f26:	7100                	flw	fs0,32(a0)
        tail = NULL;
     f28:	2c000003          	lb	zero,704(zero) # 2c0 <main+0x244>
        list = NULL;
     f2c:	156d                	addi	a0,a0,-5
     f2e:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
     f30:	1478                	addi	a4,sp,556
     f32:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	02b8                	addi	a4,sp,328
     f36:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
     f38:	6601                	0x6601
     f3a:	0501                	addi	a0,a0,0
     f3c:	852d                	srai	a0,a0,0xb
     f3e:	0015                	c.nop	5
            psize = 0;
     f40:	8400                	0x8400
     f42:	2d000003          	lb	zero,720(zero) # 2d0 <main+0x254>
                q = q->next;
     f46:	157a                	slli	a0,a0,0x3e
                psize++;
     f48:	0000                	unimp
     f4a:	039c                	addi	a5,sp,448
                if (!q)
     f4c:	0000                	unimp
     f4e:	0000                	unimp
            for (i = 0; i < insize; i++)
     f50:	0000                	unimp
     f52:	0002e82b          	0x2e82b
     f56:	6d00                	flw	fs0,24(a0)
                    list = e;
     f58:	2a00000f          	0x2a00000f
     f5c:	6170                	flw	fa2,68(a0)
     f5e:	0074                	addi	a3,sp,12
     f60:	2b01                	jal	1470 <core_list_init+0xa0>
     f62:	1401                	addi	s0,s0,-32
            while (psize > 0 || (qsize > 0 && q))
     f64:	0960                	addi	s0,sp,156
     f66:	0000                	unimp
                else if (qsize == 0 || !q)
     f68:	000003af          	0x3af
     f6c:	3000                	fld	fs0,32(s0)
     f6e:	0d54                	addi	a3,sp,660
                else if (cmp(p->info, q->info, res) <= 0)
     f70:	0000                	unimp
     f72:	1438                	addi	a4,sp,552
     f74:	0000                	unimp
     f76:	0240                	addi	s0,sp,260
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f78:	0000                	unimp
     f7a:	1401                	addi	s0,s0,-32
    return a->idx - b->idx;
     f7c:	0501                	addi	a0,a0,0
     f7e:	0ff5                	addi	t6,t6,29
     f80:	0000                	unimp
     f82:	a72d                	j	16ac <iterate+0x20>
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	000d                	c.nop	3
     f86:	ef00                	fsw	fs0,24(a4)
     f88:	2d000003          	lb	zero,720(zero) # 2d0 <main+0x254>
     f8c:	0d9a                	slli	s11,s11,0x6
     f8e:	0000                	unimp
     f90:	040d                	addi	s0,s0,3
     f92:	0000                	unimp
     f94:	8d31                	xor	a0,a0,a2
     f96:	000d                	c.nop	3
     f98:	0600                	addi	s0,sp,768
     f9a:	47f2                	lw	a5,28(sp)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     f9c:	000e                	c.slli	zero,0x3
     f9e:	0000                	unimp
    return a->idx - b->idx;
     fa0:	8031                	srli	s0,s0,0xc
     fa2:	000d                	c.nop	3
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	0600                	addi	s0,sp,768
     fa6:	f8f2                	fsw	ft8,112(sp)
     fa8:	000d                	c.nop	3
     faa:	0000                	unimp
     fac:	7331                	lui	t1,0xfffec
     fae:	000d                	c.nop	3
     fb0:	0600                	addi	s0,sp,768
     fb2:	9af2                	add	s5,s5,t3
     fb4:	000e                	c.slli	zero,0x3
     fb6:	0000                	unimp
     fb8:	662d                	lui	a2,0xb
     fba:	000d                	c.nop	3
                else if (cmp(p->info, q->info, res) <= 0)
     fbc:	2b00                	fld	fs0,16(a4)
     fbe:	0004                	0x4
                    qsize--;
     fc0:	2e00                	fld	fs0,24(a2)
     fc2:	0240                	addi	s0,sp,260
                    q = q->next;
     fc4:	0000                	unimp
     fc6:	000db42f          	0xdb42f
                    qsize--;
     fca:	7000                	flw	fs0,32(s0)
                if (tail)
     fcc:	0004                	0x4
     fce:	3200                	fld	fs0,32(a2)
                    tail->next = e;
     fd0:	156d                	addi	a0,a0,-5
     fd2:	0000                	unimp
                    list = e;
     fd4:	1460                	addi	s0,sp,556
     fd6:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
     fd8:	0010                	0x10
     fda:	0000                	unimp
     fdc:	6601                	0x6601
     fde:	0501                	addi	a0,a0,0
     fe0:	852d                	srai	a0,a0,0xb
     fe2:	0015                	c.nop	5
                    qsize--;
     fe4:	8300                	0x8300
     fe6:	0004                	0x4
     fe8:	2d00                	fld	fs0,24(a0)
     fea:	157a                	slli	a0,a0,0x3e
                    q = q->next;
     fec:	0000                	unimp
     fee:	0000049b          	0x49b
                if (tail)
     ff2:	0000                	unimp
                    list = e;
     ff4:	3300                	fld	fs0,32(a4)
     ff6:	0bcc                	addi	a1,sp,468
     ff8:	0000                	unimp
     ffa:	1520                	addi	s0,sp,680
     ffc:	0000                	unimp
     ffe:	0108                	addi	a0,sp,128
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1000:	0000                	unimp
    1002:	3301                	jal	d02 <main+0xc86>
    1004:	0c01                	addi	s8,s8,0
    1006:	10a6                	slli	ra,ra,0x29
    1008:	0000                	unimp
    100a:	f834                	fsw	fa3,112(s0)
    100c:	3400000b          	0x3400000b
            list = list->next;
    1010:	00000beb          	0xbeb
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1014:	de2d                	beqz	a2,f8e <core_bench_list+0x24e>
    1016:	ba00000b          	0xba00000b
        finder = list->next;
    101a:	0004                	0x4
    while (finder)
    101c:	3500                	fld	fs0,40(a0)
    101e:	1520                	addi	s0,sp,680
    1020:	0000                	unimp
    1022:	0108                	addi	a0,sp,128
                    psize--;
    1024:	0000                	unimp
    1026:	000c052f          	0xc052f
    102a:	0600                	addi	s0,sp,768
                    p = p->next;
    102c:	0005                	c.nop	1
    102e:	2f00                	fld	fs0,24(a4)
    1030:	0c10                	addi	a2,sp,528
    1032:	0000                	unimp
        while (p)
    1034:	055c                	addi	a5,sp,644
    1036:	0000                	unimp
        tail->next = NULL;
    1038:	000c1b2f          	0xc1b2f
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	c900                	sw	s0,16(a0)
    103e:	0005                	c.nop	1
        insize *= 2;
    1040:	2f00                	fld	fs0,24(a4)
    1042:	0c26                	slli	s8,s8,0x9
        while (p)
    1044:	0000                	unimp
    1046:	061e                	slli	a2,a2,0x7
    1048:	0000                	unimp
    104a:	000c332f          	0xc332f
        nmerges = 0; /* count number of merges we do in this pass */
    104e:	5f00                	lw	s0,56(a4)
        tail = NULL;
    1050:	0006                	c.slli	zero,0x1
    1052:	2f00                	fld	fs0,24(a4)
        list = NULL;
    1054:	0c40                	addi	s0,sp,532
    1056:	0000                	unimp
    1058:	0689                	addi	a3,a3,2
    105a:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	000c4d2f          	0xc4d2f
    1060:	bf00                	fsd	fs0,56(a4)
    1062:	0006                	c.slli	zero,0x1
    1064:	2f00                	fld	fs0,24(a4)
    1066:	0c5a                	slli	s8,s8,0x16
    1068:	0000                	unimp
    106a:	06e9                	addi	a3,a3,26
    106c:	0000                	unimp
    106e:	000c672f          	0xc672f
    1072:	0700                	addi	s0,sp,896
    1074:	32000007          	0x32000007
    1078:	1592                	slli	a1,a1,0x24
    107a:	0000                	unimp
    107c:	1574                	addi	a3,sp,684
    107e:	0000                	unimp
    1080:	0044                	addi	s1,sp,4
    1082:	0000                	unimp
            list = list->next;
    1084:	2801                	jal	1094 <__stack_size+0x94>
    1086:	1a02                	slli	s4,s4,0x20
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1088:	b72d                	j	fb2 <core_bench_list+0x272>
    108a:	0015                	c.nop	5
    108c:	3e00                	fld	fs0,56(a2)
    108e:	2d000007          	0x2d000007
            retval += (list->next->info->data16 >> 8) & 1;
    1092:	15ad                	addi	a1,a1,-21
            missed++;
    1094:	0000                	unimp
    1096:	0752                	slli	a4,a4,0x14
    1098:	0000                	unimp
    109a:	a32d                	j	15c4 <core_list_init+0x1f4>
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	0015                	c.nop	5
    109e:	6500                	flw	fs0,8(a0)
            missed++;
    10a0:	00000007          	0x7
            retval += (list->next->info->data16 >> 8) & 1;
    10a4:	0000                	unimp
    10a6:	0036                	c.slli	zero,0xd
    10a8:	0014                	0x14
    10aa:	4f00                	lw	s0,24(a4)
    10ac:	001a                	c.slli	zero,0x6
    10ae:	3700                	fld	fs0,40(a4)
    10b0:	5a01                	li	s4,-32
    10b2:	0305                	addi	t1,t1,1
    10b4:	0000                	unimp
    10b6:	0100                	addi	s0,sp,128
    finder = list->next;
    10b8:	0000                	unimp
    10ba:	d038                	sw	a4,96(s0)
    while (finder)
    10bc:	0001                	nop
    10be:	0100                	addi	s0,sp,128
        retval = crc16(list->info->data16, retval);
    10c0:	019f 0960 0000      	0x960019f
    10c6:	0d40                	addi	s0,sp,660
    10c8:	0000                	unimp
    10ca:	0690                	addi	a2,sp,832
    10cc:	0000                	unimp
    10ce:	9c01                	0x9c01
    10d0:	156d                	addi	a0,a0,-5
    10d2:	0000                	unimp
        finder = finder->next;
    10d4:	7239                	lui	tp,0xfffee
    10d6:	7365                	lui	t1,0xffff9
        retval = crc16(list->info->data16, retval);
    10d8:	0100                	addi	s0,sp,128
    10da:	1f9f 0bc6 0000      	0xbc61f9f
}
    10e0:	0784                	addi	s1,sp,960
    10e2:	0000                	unimp
    10e4:	00052427          	fsw	ft0,8(a0) # fffe1008 <__freertos_irq_stack_top+0xfefd1008>
    10e8:	0100                	addi	s0,sp,128
    10ea:	2b9f 0954 0000      	0x9542b9f
    10f0:	07c6                	slli	a5,a5,0x11
    10f2:	0000                	unimp
    10f4:	373a                	fld	fa4,424(sp)
    10f6:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    10fa:	10a1                	addi	ra,ra,-24
    10fc:	0960                	addi	s0,sp,156
    10fe:	0000                	unimp
    1100:	0824                	addi	s1,sp,24
    1102:	0000                	unimp
    1104:	0c3a                	slli	s8,s8,0xe
    1106:	0001                	nop
    1108:	0100                	addi	s0,sp,128
    110a:	10a2                	slli	ra,ra,0x28
    110c:	0960                	addi	s0,sp,156
    110e:	0000                	unimp
    1110:	000008a3          	sb	zero,17(zero) # 11 <_start+0x11>
    1114:	f63a                	fsw	fa4,44(sp)
    1116:	0004                	0x4
    1118:	0100                	addi	s0,sp,128
    111a:	1ba2                	slli	s7,s7,0x28
    info.idx = finder_idx;
    111c:	0960                	addi	s0,sp,156
    111e:	0000                	unimp
    1120:	000008ef          	jal	a7,1120 <__stack_size+0x120>
    if (finder_idx > 0)
    1124:	db3a                	sw	a4,180(sp)
    1126:	0001                	nop
        while (p)
    1128:	0100                	addi	s0,sp,128
    112a:	0c7310a3          	sh	t2,193(t1) # ffff90c1 <__freertos_irq_stack_top+0xfefe90c1>
    112e:	0000                	unimp
    1130:	091a                	slli	s2,s2,0x6
    1132:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	593a                	lw	s2,172(sp)
    1136:	0002                	c.slli64	zero
    1138:	0100                	addi	s0,sp,128
    113a:	10a4                	addi	s1,sp,104
        while (p)
    113c:	0954                	addi	a3,sp,148
    113e:	0000                	unimp
        tail = NULL;
    1140:	097a                	slli	s2,s2,0x1e
    1142:	0000                	unimp
        list = NULL;
    1144:	073a                	slli	a4,a4,0xe
    1146:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1148:	0100                	addi	s0,sp,128
    114a:	10a5                	addi	ra,ra,-23
    114c:	00000c73          	0xc73
            nmerges++; /* there exists a merge to be done */
    1150:	09ae                	slli	s3,s3,0xb
    1152:	0000                	unimp
    1154:	a63a                	fsd	fa4,264(sp)
    1156:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
            psize = 0;
    115a:	10a6                	slli	ra,ra,0x29
            nmerges++; /* there exists a merge to be done */
    115c:	00000c73          	0xc73
    1160:	09cc                	addi	a1,sp,212
    1162:	0000                	unimp
                q = q->next;
    1164:	ae3a                	fsd	fa4,280(sp)
    1166:	0005                	c.nop	1
                psize++;
    1168:	0100                	addi	s0,sp,128
    116a:	19a6                	slli	s3,s3,0x29
                if (!q)
    116c:	00000c73          	0xc73
            for (i = 0; i < insize; i++)
    1170:	0a39                	addi	s4,s4,14
    1172:	0000                	unimp
    1174:	733a                	flw	ft6,172(sp)
    1176:	01000007          	0x1000007
                    list = e;
    117a:	09f210a7          	0x9f210a7
            while (psize > 0 || (qsize > 0 && q))
    117e:	0000                	unimp
                else if (qsize == 0 || !q)
    1180:	0a62                	slli	s4,s4,0x18
    1182:	0000                	unimp
    1184:	0100693b          	0x100693b
                else if (cmp(p->info, q->info, res) <= 0)
    1188:	10a8                	addi	a0,sp,104
    118a:	0954                	addi	a3,sp,148
    118c:	0000                	unimp
    118e:	0b0d                	addi	s6,s6,3
    ee_s16 data = *pdata;
    1190:	0000                	unimp
    1192:	b33c                	fsd	fa5,96(a4)
    if (optype) /* if cached, use cache */
    1194:	000c                	0xc
    1196:	a000                	fsd	fs0,0(s0)
        return (data & 0x007f);
    1198:	000d                	c.nop	3
    119a:	c800                	sw	s0,16(s0)
    if (optype) /* if cached, use cache */
    119c:	0000                	unimp
    119e:	0100                	addi	s0,sp,128
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	17b0                	addi	a2,sp,1000
    11a2:	11d5                	addi	gp,gp,-11
        ee_s16 dtype
    11a4:	0000                	unimp
    11a6:	d22d                	beqz	a2,1108 <__stack_size+0x108>
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	000c                	0xc
    11aa:	5900                	lw	s0,48(a0)
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ac:	2d00000b          	0x2d00000b
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	0cc5                	addi	s9,s9,17
    11b2:	0000                	unimp
        switch (flag)
    11b4:	0b91                	addi	s7,s7,4
    11b6:	0000                	unimp
    11b8:	b33d                	j	ee6 <core_bench_list+0x1a6>
    11ba:	000c                	0xc
    11bc:	5c00                	lw	s0,56(s0)
    11be:	0010                	0x10
    11c0:	3400                	fld	fs0,40(s0)
    11c2:	0000                	unimp
    11c4:	3400                	fld	fs0,40(s0)
    11c6:	0cd2                	slli	s9,s9,0x14
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	0000                	unimp
    11ca:	c52d                	beqz	a0,1234 <__stack_size+0x234>
        res->crc = crcu16(retval, res->crc);
    11cc:	000c                	0xc
    11ce:	c500                	sw	s0,8(a0)
    11d0:	0000000b          	0xb
    11d4:	3c00                	fld	fs0,56(s0)
    11d6:	0c79                	addi	s8,s8,30
        retval &= 0x007f;
    11d8:	0000                	unimp
    11da:	0de4                	addi	s1,sp,732
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11dc:	0000                	unimp
    11de:	00f0                	addi	a2,sp,76
    11e0:	0000                	unimp
    11e2:	b101                	j	de2 <core_bench_list+0xa2>
        res->crc = crcu16(retval, res->crc);
    11e4:	00120b17          	auipc	s6,0x120
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	2d00                	fld	fs0,24(a0)
    11ea:	00000c8b          	0xc8b
    11ee:	00000be3          	beqz	zero,1a04 <matrix_test+0x2d0>
    ee_s16 data = *pdata;
    11f2:	f02e                	fsw	fa1,32(sp)
    if (optype) /* if cached, use cache */
    11f4:	0000                	unimp
    11f6:	2f00                	fld	fs0,24(a4)
        return (data & 0x007f);
    11f8:	0c98                	addi	a4,sp,592
    11fa:	0000                	unimp
    if (optype) /* if cached, use cache */
    11fc:	00000c17          	auipc	s8,0x0
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	000ca52f          	amoadd.w	a0,zero,(s9)
        ee_s16 dtype
    1204:	4c00                	lw	s0,24(s0)
    1206:	000c                	0xc
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	0000                	unimp
    120a:	3c00                	fld	fs0,56(s0)
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120c:	0d1a                	slli	s10,s10,0x6
    120e:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1210:	0e98                	addi	a4,sp,848
    1212:	0000                	unimp
        switch (flag)
    1214:	0108                	addi	a0,sp,128
    1216:	0000                	unimp
    1218:	cf01                	beqz	a4,1230 <__stack_size+0x230>
    121a:	0012410f          	0x12410f
    121e:	2d00                	fld	fs0,24(a0)
    1220:	0d2c                	addi	a1,sp,664
    1222:	0000                	unimp
    1224:	0c6a                	slli	s8,s8,0x1a
    1226:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1228:	082e                	slli	a6,a6,0xb
    122a:	0001                	nop
        res->crc = crcu16(retval, res->crc);
    122c:	2f00                	fld	fs0,24(a4)
    122e:	0d39                	addi	s10,s10,14
    1230:	0000                	unimp
    1232:	0c7d                	addi	s8,s8,31
    1234:	0000                	unimp
    1236:	000d462f          	0xd462f
        retval &= 0x007f;
    123a:	9000                	0x9000
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123c:	000c                	0xc
    123e:	0000                	unimp
    1240:	3c00                	fld	fs0,56(s0)
    1242:	00000cb3          	add	s9,zero,zero
        res->crc = crcu16(retval, res->crc);
    1246:	0e98                	addi	a4,sp,848
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	0000                	unimp
    124a:	0128                	addi	a0,sp,136
    124c:	0000                	unimp
    124e:	d201                	beqz	a2,114e <__stack_size+0x14e>
    return val1 - val2;
    1250:	840e                	mv	s0,gp
    1252:	0012                	c.slli	zero,0x4
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	2d00                	fld	fs0,24(a0)
    1256:	0cd2                	slli	s9,s9,0x14
                    qsize--;
    1258:	0000                	unimp
    125a:	00000ca3          	sb	zero,25(zero) # 19 <_start+0x19>
                    q = q->next;
    125e:	c52d                	beqz	a0,12c8 <__stack_size+0x2c8>
                    qsize--;
    1260:	000c                	0xc
    1262:	cb00                	sw	s0,16(a4)
                if (tail)
    1264:	000c                	0xc
    1266:	3d00                	fld	fs0,56(a0)
                    tail->next = e;
    1268:	00000cb3          	add	s9,zero,zero
                    list = e;
    126c:	1000                	addi	s0,sp,32
    126e:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    1270:	0018                	0x18
    1272:	0000                	unimp
    1274:	d234                	sw	a3,96(a2)
    1276:	000c                	0xc
    1278:	2d00                	fld	fs0,24(a0)
    127a:	0cc5                	addi	s9,s9,17
                    qsize--;
    127c:	0000                	unimp
    127e:	0cf4                	addi	a3,sp,604
    1280:	0000                	unimp
    1282:	0000                	unimp
                    q = q->next;
    1284:	e03c                	fsw	fa5,64(s0)
    1286:	000c                	0xc
                if (tail)
    1288:	0c00                	addi	s0,sp,528
    128a:	5000000f          	0x5000000f
                    list = e;
    128e:	0001                	nop
    1290:	0100                	addi	s0,sp,128
    1292:	0fdd                	addi	t6,t6,23
    1294:	12ba                	slli	t0,t0,0x2e
    1296:	0000                	unimp
                    psize--;
    1298:	ff2d                	bnez	a4,1212 <__stack_size+0x212>
    129a:	000c                	0xc
    129c:	0700                	addi	s0,sp,896
    129e:	000d                	c.nop	3
                    p = p->next;
    12a0:	2d00                	fld	fs0,24(a0)
    12a2:	0cf2                	slli	s9,s9,0x1c
    12a4:	0000                	unimp
    12a6:	00000d1b          	0xd1b
    12aa:	502e                	0x502e
        while (p)
    12ac:	0001                	nop
    12ae:	2f00                	fld	fs0,24(a4)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b0:	0d0c                	addi	a1,sp,656
    12b2:	0000                	unimp
        tail->next = NULL;
    12b4:	0d2e                	slli	s10,s10,0xb
    12b6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b8:	0000                	unimp
    12ba:	cc3c                	sw	a5,88(s0)
    12bc:	1400000b          	0x1400000b
        insize *= 2;
    12c0:	6800000f          	0x6800000f
    12c4:	0001                	nop
    12c6:	0100                	addi	s0,sp,128
    12c8:	0cdf 136e 0000      	0x136e0cdf
        while (p)
    12ce:	f82d                	bnez	s0,1240 <__stack_size+0x240>
        tail->next = NULL;
    12d0:	4200000b          	0x4200000b
    12d4:	000d                	c.nop	3
    12d6:	2d00                	fld	fs0,24(a0)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	00000beb          	0xbeb
    12dc:	0d62                	slli	s10,s10,0x18
    12de:	0000                	unimp
    12e0:	de2d                	beqz	a2,125a <__stack_size+0x25a>
    12e2:	8a00000b          	0x8a00000b
    12e6:	000d                	c.nop	3
                if (res->crcmatrix == 0)
    12e8:	2e00                	fld	fs0,24(a2)
    12ea:	0168                	addi	a0,sp,140
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	0000                	unimp
    12ee:	000c052f          	0xc052f
    12f2:	c000                	sw	s0,0(s0)
                if (res->crcmatrix == 0)
    12f4:	000d                	c.nop	3
    12f6:	2f00                	fld	fs0,24(a4)
                    res->crcmatrix = retval;
    12f8:	0c10                	addi	a2,sp,528
    12fa:	0000                	unimp
    12fc:	0e22                	slli	t3,t3,0x8
    12fe:	0000                	unimp
    1300:	000c1b2f          	0xc1b2f
                retval = core_bench_state(res->size,
    1304:	8f00                	0x8f00
    1306:	000e                	c.slli	zero,0x3
    1308:	2f00                	fld	fs0,24(a4)
    130a:	0c26                	slli	s8,s8,0x9
    130c:	0000                	unimp
    130e:	0ee4                	addi	s1,sp,860
    1310:	0000                	unimp
    1312:	000c332f          	0xc332f
    1316:	1a00                	addi	s0,sp,304
    1318:	2f00000f          	0x2f00000f
    131c:	0c40                	addi	s0,sp,532
    131e:	0000                	unimp
    1320:	0f39                	addi	t5,t5,14
    1322:	0000                	unimp
    1324:	000c4d2f          	0xc4d2f
    1328:	6f00                	flw	fs0,24(a4)
    132a:	2f00000f          	0x2f00000f
    132e:	0c5a                	slli	s8,s8,0x16
                if (res->crcstate == 0)
    1330:	0000                	unimp
    1332:	0fa4                	addi	s1,sp,984
                retval = core_bench_state(res->size,
    1334:	0000                	unimp
    1336:	000c672f          	0xc672f
    133a:	c200                	sw	s0,0(a2)
                if (res->crcstate == 0)
    133c:	3200000f          	0x3200000f
                    res->crcstate = retval;
    1340:	1592                	slli	a1,a1,0x24
    1342:	0000                	unimp
    1344:	0f78                	addi	a4,sp,924
    1346:	0000                	unimp
    1348:	0044                	addi	s1,sp,4
    134a:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134c:	2801                	jal	135c <__stack_size+0x35c>
    134e:	1a02                	slli	s4,s4,0x20
    1350:	b72d                	j	127a <__stack_size+0x27a>
    1352:	0015                	c.nop	5
    1354:	f900                	fsw	fs0,48(a0)
    1356:	2d00000f          	0x2d00000f
    135a:	15ad                	addi	a1,a1,-21
                if (res->crcmatrix == 0)
    135c:	0000                	unimp
    135e:	100d                	c.nop	-29
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	0000                	unimp
    1362:	a32d                	j	188c <matrix_test+0x158>
    1364:	0015                	c.nop	5
    1366:	2000                	fld	fs0,0(s0)
                if (res->crcmatrix == 0)
    1368:	0010                	0x10
    136a:	0000                	unimp
                    res->crcmatrix = retval;
    136c:	0000                	unimp
    136e:	cc3c                	sw	a5,88(s0)
    1370:	2800000b          	0x2800000b
    1374:	0011                	c.nop	4
    1376:	9800                	0x9800
                retval = core_bench_state(res->size,
    1378:	0001                	nop
    137a:	0100                	addi	s0,sp,128
    137c:	10ce                	slli	ra,ra,0x33
    137e:	1542                	slli	a0,a0,0x30
    1380:	0000                	unimp
    1382:	f834                	fsw	fa3,112(s0)
    1384:	3400000b          	0x3400000b
    1388:	00000beb          	0xbeb
    138c:	de2d                	beqz	a2,1306 <__stack_size+0x306>
    138e:	3f00000b          	0x3f00000b
    1392:	0010                	0x10
    1394:	2e00                	fld	fs0,24(a2)
    1396:	0198                	addi	a4,sp,192
    1398:	0000                	unimp
    139a:	000c052f          	0xc052f
    139e:	8c00                	0x8c00
    13a0:	0010                	0x10
    13a2:	2f00                	fld	fs0,24(a4)
                if (res->crcstate == 0)
    13a4:	0c10                	addi	a2,sp,528
    13a6:	0000                	unimp
                retval = core_bench_state(res->size,
    13a8:	10f9                	addi	ra,ra,-2
    13aa:	0000                	unimp
    13ac:	000c1b2f          	0xc1b2f
                if (res->crcstate == 0)
    13b0:	5000                	lw	s0,32(s0)
    13b2:	0011                	c.nop	4
                    res->crcstate = retval;
    13b4:	2f00                	fld	fs0,24(a4)
    13b6:	0c26                	slli	s8,s8,0x9
    13b8:	0000                	unimp
    13ba:	119a                	slli	gp,gp,0x26
    13bc:	0000                	unimp
    13be:	000c332f          	0xc332f
    13c2:	fd00                	fsw	fs0,56(a0)
    13c4:	0011                	c.nop	4
    13c6:	2f00                	fld	fs0,24(a4)
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	0c40                	addi	s0,sp,532
    13ca:	0000                	unimp
    13cc:	1236                	slli	tp,tp,0x2d
    13ce:	0000                	unimp
{
    13d0:	000c4d2f          	0xc4d2f
    13d4:	7c00                	flw	fs0,56(s0)
    13d6:	0012                	c.slli	zero,0x4
    13d8:	2f00                	fld	fs0,24(a4)
    13da:	0c5a                	slli	s8,s8,0x16
    printf("start test41\n");
    13dc:	0000                	unimp
    13de:	129a                	slli	t0,t0,0x26
    13e0:	0000                	unimp
    13e2:	000c672f          	0xc672f
{
    13e6:	b800                	fsd	fs0,48(s0)
    13e8:	0012                	c.slli	zero,0x4
    13ea:	2c00                	fld	fs0,24(s0)
    13ec:	15c4                	addi	s1,sp,740
    13ee:	0000                	unimp
    13f0:	1134                	addi	a3,sp,168
    13f2:	0000                	unimp
    13f4:	01b0                	addi	a2,sp,200
    13f6:	0000                	unimp
    printf("start test41\n");
    13f8:	2801                	jal	1408 <core_list_init+0x38>
    13fa:	1a02                	slli	s4,s4,0x20
    13fc:	e92d                	bnez	a0,146e <core_list_init+0x9e>
    13fe:	0015                	c.nop	5
    ee_u32 size     = (blksize / per_item)
    1400:	e300                	fsw	fs0,0(a4)
    1402:	0012                	c.slli	zero,0x4
    1404:	2d00                	fld	fs0,24(a0)
    1406:	15df 0000 1301      	0x1301000015df
    140c:	0000                	unimp
    140e:	d52d                	beqz	a0,1378 <__stack_size+0x378>
    1410:	0015                	c.nop	5
    1412:	1f00                	addi	s0,sp,944
    list_head *memblock_end  = memblock + size;
    1414:	2e000013          	li	zero,736
    1418:	01b0                	addi	a2,sp,200
    141a:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    141c:	0015f52f          	0x15f52f
    list->next         = NULL;
    1420:	3d00                	fld	fs0,56(a0)
    1422:	3e000013          	li	zero,992
    list->info         = datablock;
    1426:	1601                	addi	a2,a2,-32
    list->info->data16 = (ee_s16)0x8080;
    1428:	0000                	unimp
    142a:	0e3c                	addi	a5,sp,792
    list_data *datablock_end = datablock + size;
    142c:	0016                	c.slli	zero,0x5
    142e:	3400                	fld	fs0,40(s0)
    list->info->data16 = (ee_s16)0x8080;
    1430:	0011                	c.nop	4
    1432:	d000                	sw	s0,32(s0)
    list->info->idx    = 0x0000;
    1434:	0001                	nop
    1436:	0100                	addi	s0,sp,128
    if ((*memblock + 1) >= memblock_end)
    1438:	137c                	addi	a5,sp,428
    143a:	14b6                	slli	s1,s1,0x2d
    list_data *datablock_end = datablock + size;
    143c:	0000                	unimp
    143e:	2b2d                	jal	1978 <matrix_test+0x244>
    memblock++;
    1440:	0016                	c.slli	zero,0x5
    1442:	5b00                	lw	s0,48(a4)
    datablock++;
    1444:	2d000013          	li	zero,720
    if ((*memblock + 1) >= memblock_end)
    1448:	161f 0000 1379      	0x13790000161f
    if ((*datablock + 1) >= datablock_end)
    144e:	0000                	unimp
    1450:	d02e                	sw	a1,32(sp)
    1452:	0001                	nop
    newitem->info = *datablock;
    1454:	2f00                	fld	fs0,24(a4)
    1456:	00001637          	lui	a2,0x1
    newitem->next      = insert_point->next;
    145a:	00001397          	auipc	t2,0x1
    insert_point->next = newitem;
    145e:	0016432f          	0x16432f
    to->idx    = from->idx;
    1462:	b500                	fsd	fs0,40(a0)
    to->data16 = from->data16;
    1464:	2f000013          	li	zero,752
    1468:	0000164f          	fnmadd.s	fa2,ft0,ft0,ft0,rtz
    to->idx    = from->idx;
    146c:	13e9                	addi	t2,t2,-6
    146e:	0000                	unimp
    for (i = 0; i < size; i++)
    1470:	0016bc3f 0001f000 	0x1f0000016bc3f
    to->idx    = from->idx;
    1478:	2f00                	fld	fs0,24(a4)
    147a:	165c                	addi	a5,sp,804
    147c:	0000                	unimp
    147e:	00001413          	slli	s0,zero,0x0
    for (i = 0; i < size; i++)
    1482:	0016682f          	0x16682f
    to->idx    = from->idx;
    1486:	6900                	flw	fs0,16(a0)
    if ((*memblock + 1) >= memblock_end)
    1488:	0014                	0x14
    148a:	4000                	lw	s0,0(s0)
    148c:	1238                	addi	a4,sp,296
    148e:	0000                	unimp
    if ((*datablock + 1) >= datablock_end)
    1490:	1a5a                	slli	s4,s4,0x36
    1492:	0000                	unimp
    1494:	e841                	bnez	s0,1524 <core_list_init+0x154>
    1496:	0012                	c.slli	zero,0x4
    1498:	6600                	flw	fs0,8(a2)
    149a:	001a                	c.slli	zero,0x6
    149c:	aa00                	fsd	fs0,16(a2)
    149e:	0014                	0x14
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a0:	3700                	fld	fs0,40(a4)
    14a2:	5a01                	li	s4,-32
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a4:	9104                	0x9104
    14a6:	7fb8                	flw	fa4,120(a5)
    14a8:	0006                	c.slli	zero,0x1
    14aa:	3040                	fld	fs0,160(s0)
    14ac:	72000013          	li	zero,1824
    newitem->next      = insert_point->next;
    14b0:	001a                	c.slli	zero,0x6
    14b2:	0000                	unimp
        ee_u16 dat
    14b4:	0000                	unimp
    14b6:	0e42                	slli	t3,t3,0x10
    insert_point->next = newitem;
    14b8:	0016                	c.slli	zero,0x5
    14ba:	9000                	0x9000
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14bc:	0011                	c.nop	4
    14be:	1000                	addi	s0,sp,32
    newitem->info = *datablock;
    14c0:	0002                	c.slli64	zero
    14c2:	0100                	addi	s0,sp,128
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c4:	2b2d137b          	0x2b2d137b
    to->data16 = from->data16;
    14c8:	0016                	c.slli	zero,0x5
    14ca:	e600                	fsw	fs0,8(a2)
    to->idx    = from->idx;
    14cc:	0014                	0x14
    14ce:	2d00                	fld	fs0,24(a0)
    14d0:	161f 0000 1504      	0x15040000161f
    14d6:	0000                	unimp
    14d8:	102e                	c.slli	zero,0x2b
    14da:	0002                	c.slli64	zero
    for (i = 0; i < size; i++)
    14dc:	2f00                	fld	fs0,24(a4)
    14de:	00001637          	lui	a2,0x1
    14e2:	1522                	slli	a0,a0,0x28
    while (finder->next != NULL)
    14e4:	0000                	unimp
    14e6:	0016432f          	0x16432f
    14ea:	4000                	lw	s0,0(s0)
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	0015                	c.nop	5
    14ee:	2f00                	fld	fs0,24(a4)
    14f0:	0000164f          	fnmadd.s	fa2,ft0,ft0,ft0,rtz
    14f4:	1574                	addi	a3,sp,684
    14f6:	0000                	unimp
                                & (((i & 0x07) << 8)
    14f8:	0016bc3f 00022800 	0x228000016bc3f
    1500:	2f00                	fld	fs0,24(a4)
    1502:	165c                	addi	a5,sp,804
        if (i < size / 5) /* first 20% of the list in order */
    1504:	0000                	unimp
    1506:	159e                	slli	a1,a1,0x27
    1508:	0000                	unimp
    150a:	0016682f          	0x16682f
        finder = finder->next;
    150e:	f400                	fsw	fs0,40(s0)
            finder->info->idx = i++;
    1510:	0015                	c.nop	5
    1512:	4000                	lw	s0,0(s0)
        finder = finder->next;
    1514:	11d8                	addi	a4,sp,228
    1516:	0000                	unimp
    while (finder->next != NULL)
    1518:	1a5a                	slli	s4,s4,0x36
    151a:	0000                	unimp
    151c:	5c41                	li	s8,-16
    151e:	66000013          	li	zero,1632
    insize = 1;
    1522:	001a                	c.slli	zero,0x6
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	3200                	fld	fs0,32(a2)
    1526:	0015                	c.nop	5
    insize = 1;
    1528:	3700                	fld	fs0,40(a4)
    152a:	5a01                	li	s4,-32
        tail = NULL;
    152c:	9104                	0x9104
    152e:	7fb8                	flw	fa4,120(a5)
        list = NULL;
    1530:	0006                	c.slli	zero,0x1
    1532:	a440                	fsd	fs0,136(s0)
        nmerges = 0; /* count number of merges we do in this pass */
    1534:	72000013          	li	zero,1824
            nmerges++; /* there exists a merge to be done */
    1538:	001a                	c.slli	zero,0x6
	...
            psize = 0;
    1542:	f841                	bnez	s0,14d2 <core_list_init+0x102>
                q = q->next;
    1544:	000e                	c.slli	zero,0x3
    1546:	7e00                	flw	fs0,56(a2)
                psize++;
    1548:	001a                	c.slli	zero,0x6
    154a:	5900                	lw	s0,48(a0)
                if (!q)
    154c:	0015                	c.nop	5
    154e:	3700                	fld	fs0,40(a4)
            for (i = 0; i < insize; i++)
    1550:	5b01                	li	s6,-32
    1552:	9105                	srli	a0,a0,0x21
                    list = e;
    1554:	7fbc                	flw	fa5,120(a5)
    1556:	0294                	addi	a3,sp,320
    1558:	3600                	fld	fs0,40(a2)
    155a:	10d4                	addi	a3,sp,100
    155c:	0000                	unimp
    155e:	1a7e                	slli	s4,s4,0x3f
            while (psize > 0 || (qsize > 0 && q))
    1560:	0000                	unimp
    1562:	055b0137          	lui	sp,0x55b0
                else if (qsize == 0 || !q)
    1566:	bc91                	j	fba <core_bench_list+0x27a>
    1568:	947f                	0x947f
    156a:	0002                	c.slli64	zero
                else if (cmp(p->info, q->info, res) <= 0)
    156c:	4300                	lw	s0,0(a4)
    156e:	0210                	addi	a2,sp,256
    1570:	0000                	unimp
    1572:	9101                	srli	a0,a0,0x20
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	0101                	addi	sp,sp,0
    1576:	1592                	slli	a1,a1,0x24
    return a->idx - b->idx;
    1578:	0000                	unimp
    157a:	7444                	flw	fs1,44(s0)
    157c:	9101006f          	j	fff1168c <__freertos_irq_stack_top+0xfef0168c>
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1580:	c016                	sw	t0,0(sp)
    1582:	4500000b          	0x4500000b
    1586:	0024                	addi	s1,sp,8
    1588:	0000                	unimp
    158a:	9101                	srli	a0,a0,0x20
    158c:	c025                	beqz	s0,15ec <core_list_init+0x21c>
    158e:	0000000b          	0xb
    1592:	d446                	sw	a7,40(sp)
    1594:	0000                	unimp
    1596:	0100                	addi	s0,sp,128
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1598:	0186                	slli	gp,gp,0x1
    159a:	096c                	addi	a1,sp,156
    return a->idx - b->idx;
    159c:	0000                	unimp
    159e:	c401                	beqz	s0,15a6 <core_list_init+0x1d6>
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	0015                	c.nop	5
    15a2:	4400                	lw	s0,8(s0)
    15a4:	0061                	c.nop	24
    15a6:	8601                	c.srai64	a2
    15a8:	c014                	sw	a3,0(s0)
    15aa:	4400000b          	0x4400000b
    15ae:	0062                	c.slli	zero,0x18
    15b0:	8601                	c.srai64	a2
    15b2:	c022                	sw	s0,0(sp)
    15b4:	4400000b          	0x4400000b
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	6572                	flw	fa0,28(sp)
    15ba:	86010073          	0x86010073
                    qsize--;
    15be:	000bc633          	xor	a2,s7,zero
                    q = q->next;
    15c2:	0000                	unimp
                    qsize--;
    15c4:	8046                	c.mv	zero,a7
    15c6:	0005                	c.nop	1
                if (tail)
    15c8:	0100                	addi	s0,sp,128
    15ca:	0179                	addi	sp,sp,30
                    tail->next = e;
    15cc:	096c                	addi	a1,sp,156
    15ce:	0000                	unimp
                    list = e;
    15d0:	0e01                	addi	t3,t3,0
    15d2:	0016                	c.slli	zero,0x5
            while (psize > 0 || (qsize > 0 && q))
    15d4:	4400                	lw	s0,8(s0)
    15d6:	0061                	c.nop	24
    15d8:	7901                	lui	s2,0xfffe0
    15da:	c018                	sw	a4,0(s0)
    15dc:	4400000b          	0x4400000b
                    qsize--;
    15e0:	0062                	c.slli	zero,0x18
    15e2:	7901                	lui	s2,0xfffe0
    15e4:	c026                	sw	s1,0(sp)
    15e6:	4400000b          	0x4400000b
                    q = q->next;
    15ea:	6572                	flw	fa0,28(sp)
                if (tail)
    15ec:	79010073          	0x79010073
                    list = e;
    15f0:	000bc637          	lui	a2,0xbc
    15f4:	4700                	lw	s0,8(a4)
    15f6:	00dc                	addi	a5,sp,68
    15f8:	0000                	unimp
    15fa:	7b01                	lui	s6,0xfffe0
                    psize--;
    15fc:	540c                	lw	a1,40(s0)
    15fe:	0009                	c.nop	2
    1600:	4700                	lw	s0,8(a4)
    1602:	00e1                	addi	ra,ra,24
                    p = p->next;
    1604:	0000                	unimp
    1606:	7c01                	lui	s8,0xfffe0
    1608:	540c                	lw	a1,40(s0)
    160a:	0009                	c.nop	2
        while (p)
    160c:	0000                	unimp
    160e:	e046                	fsw	fa7,0(sp)
        tail->next = NULL;
    1610:	0001                	nop
    1612:	0100                	addi	s0,sp,128
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1614:	0146                	slli	sp,sp,0x11
    1616:	0954                	addi	a3,sp,148
        insize *= 2;
    1618:	0000                	unimp
    161a:	7601                	lui	a2,0xfffe0
        while (p)
    161c:	0016                	c.slli	zero,0x5
    161e:	4500                	lw	s0,8(a0)
        tail->next = NULL;
    1620:	0408                	addi	a0,sp,512
    1622:	0000                	unimp
    1624:	4601                	li	a2,0
    1626:	00167613          	andi	a2,a2,1
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    162a:	4400                	lw	s0,8(s0)
    162c:	6572                	flw	fa0,28(sp)
    162e:	46010073          	0x46010073
                                & (((i & 0x07) << 8)
    1632:	c628                	sw	a0,72(a2)
        finder = finder->next;
    1634:	4700000b          	0x4700000b
                                & (((i & 0x07) << 8)
    1638:	0171                	addi	sp,sp,28
    163a:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163c:	4801                	li	a6,0
    163e:	540c                	lw	a1,40(s0)
                                & (((i & 0x07) << 8)
    1640:	0009                	c.nop	2
    1642:	4700                	lw	s0,8(a4)
                                   | pat); /* make sure the mixed items end up
    1644:	00000337          	lui	t1,0x0
    while (finder->next != NULL)
    1648:	4901                	li	s2,0
    164a:	540c                	lw	a1,40(s0)
                                & (((i & 0x07) << 8)
    164c:	0009                	c.nop	2
    164e:	4700                	lw	s0,8(a4)
            finder->info->idx = 0x3fff
    1650:	0000                	unimp
    1652:	0000                	unimp
        finder = finder->next;
    1654:	4a01                	li	s4,0
    1656:	7f0c                	flw	fa1,56(a4)
    while (finder->next != NULL)
    1658:	0009                	c.nop	2
    165a:	4800                	lw	s0,16(s0)
    165c:	0000a147          	fmsub.s	ft2,ft1,ft0,ft0,rdn
}
    1660:	0100                	addi	s0,sp,128
    1662:	1051                	c.nop	-12
    1664:	0954                	addi	a3,sp,148
    1666:	0000                	unimp
    1668:	00031c47          	fmsub.s	fs8,ft6,ft0,ft0,rtz
    166c:	0100                	addi	s0,sp,128
    166e:	1052                	c.slli	zero,0x34
    1670:	0954                	addi	a3,sp,148
    1672:	0000                	unimp
    1674:	0000                	unimp
    1676:	0405                	addi	s0,s0,1
    1678:	0954                	addi	a3,sp,148
    167a:	0000                	unimp
    memblock++;
    167c:	0e49                	addi	t3,t3,18
    167e:	0016                	c.slli	zero,0x5
	...
    if ((*datablock + 1) >= datablock_end)
    1688:	0100                	addi	s0,sp,128
    168a:	f79c                	fsw	fa5,40(a5)
{
    168c:	0016                	c.slli	zero,0x5
    168e:	2d00                	fld	fs0,24(a0)
    1690:	161f 0000 1671      	0x16710000161f
    ee_u32        iterations = res->iterations;
    1696:	0000                	unimp
{
    1698:	2b2d                	jal	1bd2 <matrix_test+0x49e>
    169a:	0016                	c.slli	zero,0x5
    169c:	c900                	sw	s0,16(a0)
    169e:	0016                	c.slli	zero,0x5
    16a0:	2f00                	fld	fs0,24(a4)
    16a2:	00001637          	lui	a2,0x1
    res->crc                 = 0;
    16a6:	1700                	addi	s0,sp,928
    16a8:	0000                	unimp
    16aa:	0016432f          	0x16432f
{
    16ae:	1e00                	addi	s0,sp,816
    for (i = 0; i < iterations; i++)
    16b0:	2f000017          	auipc	zero,0x2f000
    16b4:	0000164f          	fnmadd.s	fa2,ft0,ft0,ft0,rtz
        crc      = core_bench_list(res, 1);
    16b8:	1752                	slli	a4,a4,0x34
    16ba:	0000                	unimp
    16bc:	002e                	c.slli	zero,0xb
    16be:	0000                	unimp
    16c0:	2f00                	fld	fs0,24(a4)
    16c2:	165c                	addi	a5,sp,804
    16c4:	0000                	unimp
    16c6:	177c                	addi	a5,sp,940
        res->crc = crcu16(crc, res->crc);
    16c8:	0000                	unimp
    16ca:	0016682f          	0x16682f
    16ce:	d200                	sw	s0,32(a2)
    16d0:	40000017          	auipc	zero,0x40000
    16d4:	0000                	unimp
    16d6:	0000                	unimp
        crc      = core_bench_list(res, -1);
    16d8:	1a5a                	slli	s4,s4,0x36
    16da:	0000                	unimp
    16dc:	0040                	addi	s0,sp,4
    16de:	0000                	unimp
    16e0:	7200                	flw	fs0,32(a2)
    16e2:	001a                	c.slli	zero,0x6
    16e4:	3600                	fld	fs0,40(a2)
    16e6:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
    16e8:	0000                	unimp
    16ea:	1a66                	slli	s4,s4,0x39
    16ec:	0000                	unimp
    16ee:	025a0137          	lui	sp,0x25a0
    16f2:	2879                	jal	1790 <matrix_test+0x5c>
    16f4:	0000                	unimp
    16f6:	4900                	lw	s0,16(a0)
        if (i == 0)
    16f8:	15c4                	addi	s1,sp,740
	...
    for (i = 0; i < iterations; i++)
    1702:	0000                	unimp
}
    1704:	9c01                	0x9c01
    1706:	1840                	addi	s0,sp,52
    1708:	0000                	unimp
    170a:	d52d                	beqz	a0,1674 <core_list_init+0x2a4>
    170c:	0015                	c.nop	5
    170e:	4f00                	lw	s0,24(a4)
    1710:	0018                	0x18
    1712:	2d00                	fld	fs0,24(a0)
    1714:	15df 0000 18c3      	0x18c3000015df
    171a:	0000                	unimp
    171c:	e92d                	bnez	a0,178e <matrix_test+0x5a>
    171e:	0015                	c.nop	5
            res->crclist = res->crc;
    1720:	fa00                	fsw	fs0,48(a2)
    1722:	0018                	0x18
    for (i = 0; i < iterations; i++)
    1724:	2f00                	fld	fs0,24(a4)
    1726:	15f5                	addi	a1,a1,-3
    1728:	0000                	unimp
    172a:	1931                	addi	s2,s2,-20
    172c:	0000                	unimp
    172e:	0016012f          	0x16012f
    1732:	5a00                	lw	s0,48(a2)
{
    1734:	0019                	c.nop	6
    1736:	3c00                	fld	fs0,56(s0)
    1738:	160e                	slli	a2,a2,0x23
    173a:	0000                	unimp
    173c:	0000                	unimp
    173e:	0000                	unimp
    MATDAT clipval = matrix_big(val);
    1740:	0020                	addi	s0,sp,8
    1742:	0000                	unimp
{
    1744:	7b01                	lui	s6,0xfffe0
    1746:	0017bd13          	seqz	s10,a5
    174a:	2d00                	fld	fs0,24(a0)
    174c:	0000162b          	0x162b
    1750:	196d                	addi	s2,s2,-5
    1752:	0000                	unimp
    1754:	1f2d                	addi	t5,t5,-21
    1756:	0016                	c.slli	zero,0x5
    1758:	a100                	fsd	fs0,0(a0)
    175a:	0019                	c.nop	6
    175c:	2e00                	fld	fs0,24(a2)
    175e:	0020                	addi	s0,sp,8
    1760:	0000                	unimp
    1762:	0016372f          	0x16372f
    1766:	eb00                	fsw	fs0,16(a4)
    1768:	0019                	c.nop	6
    176a:	2f00                	fld	fs0,24(a4)
    176c:	00001643          	fmadd.s	fa2,ft0,ft0,ft0,rtz
    1770:	1a14                	addi	a3,sp,304
    1772:	0000                	unimp
    1774:	00164f2f          	0x164f2f
    1778:	4800                	lw	s0,16(s0)
    177a:	001a                	c.slli	zero,0x6
    MATDAT clipval = matrix_big(val);
    177c:	3f00                	fld	fs0,56(a4)
    177e:	16bc                	addi	a5,sp,872
    for (i = 0; i < N; i++)
    1780:	0000                	unimp
    1782:	0058                	addi	a4,sp,4
    1784:	0000                	unimp
    1786:	00165c2f          	0x165c2f
    178a:	8300                	0x8300
    178c:	001a                	c.slli	zero,0x6
    178e:	2f00                	fld	fs0,24(a4)
    1790:	1668                	addi	a0,sp,812
    1792:	0000                	unimp
    1794:	1ad9                	addi	s5,s5,-10
    1796:	0000                	unimp
    1798:	0040                	addi	s0,sp,4
    179a:	0000                	unimp
    179c:	5a00                	lw	s0,48(a2)
    179e:	001a                	c.slli	zero,0x6
    17a0:	4000                	lw	s0,0(s0)
    17a2:	0000                	unimp
    17a4:	0000                	unimp
    17a6:	1a72                	slli	s4,s4,0x3c
    17a8:	0000                	unimp
    17aa:	0036                	c.slli	zero,0xd
    17ac:	0000                	unimp
    17ae:	6600                	flw	fs0,8(a2)
    17b0:	001a                	c.slli	zero,0x6
    17b2:	3700                	fld	fs0,40(a4)
    17b4:	5a01                	li	s4,-32
    17b6:	7902                	flw	fs2,32(sp)
    17b8:	0028                	addi	a0,sp,8
    17ba:	0000                	unimp
{
    17bc:	4200                	lw	s0,0(a2)
    17be:	160e                	slli	a2,a2,0x23
            A[i * N + j] += val;
    17c0:	0000                	unimp
    17c2:	0000                	unimp
    17c4:	0000                	unimp
    17c6:	0080                	addi	s0,sp,64
    17c8:	0000                	unimp
    17ca:	7c01                	lui	s8,0xfffe0
    17cc:	162b2d13          	slti	s10,s6,354
        for (j = 0; j < N; j++)
    17d0:	0000                	unimp
    17d2:	1b56                	slli	s6,s6,0x35
    for (i = 0; i < N; i++)
    17d4:	0000                	unimp
    17d6:	1f2d                	addi	t5,t5,-21
    17d8:	0016                	c.slli	zero,0x5
    17da:	7f00                	flw	fs0,56(a4)
    17dc:	2e00001b          	0x2e00001b
    17e0:	0080                	addi	s0,sp,64
    17e2:	0000                	unimp
    17e4:	0016372f          	0x16372f
    17e8:	a800                	fsd	fs0,16(s0)
    17ea:	2f00001b          	0x2f00001b
    17ee:	00001643          	fmadd.s	fa2,ft0,ft0,ft0,rtz
    17f2:	1bd1                	addi	s7,s7,-12
    17f4:	0000                	unimp
    17f6:	00164f2f          	0x164f2f
    17fa:	0500                	addi	s0,sp,640
    17fc:	001c                	0x1c
    17fe:	3f00                	fld	fs0,56(a4)
    1800:	16bc                	addi	a5,sp,872
    1802:	0000                	unimp
    for (i = 0; i < N; i++)
    1804:	00a0                	addi	s0,sp,72
    1806:	0000                	unimp
    1808:	00165c2f          	0x165c2f
    180c:	4000                	lw	s0,0(s0)
    180e:	001c                	0x1c
    for (i = 0; i < N; i++)
    1810:	2f00                	fld	fs0,24(a4)
    1812:	1668                	addi	a0,sp,812
    1814:	0000                	unimp
    1816:	1c96                	slli	s9,s9,0x25
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    1818:	0000                	unimp
    181a:	0040                	addi	s0,sp,4
    181c:	0000                	unimp
    181e:	5a00                	lw	s0,48(a2)
    1820:	001a                	c.slli	zero,0x6
    1822:	4000                	lw	s0,0(s0)
    1824:	0000                	unimp
    1826:	0000                	unimp
    1828:	1a72                	slli	s4,s4,0x3c
    182a:	0000                	unimp
    182c:	0036                	c.slli	zero,0xd
    182e:	0000                	unimp
    1830:	6600                	flw	fs0,8(a2)
    1832:	001a                	c.slli	zero,0x6
        for (j = 0; j < N; j++)
    1834:	3700                	fld	fs0,40(a4)
    1836:	5a01                	li	s4,-32
    1838:	7902                	flw	fs2,32(sp)
    183a:	0028                	addi	a0,sp,8
    for (i = 0; i < N; i++)
    183c:	0000                	unimp
    183e:	0000                	unimp
    1840:	9249                	srli	a2,a2,0x32
    1842:	0015                	c.nop	5
	...
    184c:	0100                	addi	s0,sp,128
    184e:	6b9c                	flw	fa5,16(a5)
    1850:	0018                	0x18
    1852:	2d00                	fld	fs0,24(a0)
    1854:	000015a3          	sh	zero,11(zero) # b <_start+0xb>
    1858:	00001d13          	slli	s10,zero,0x0
    185c:	ad31                	j	1e78 <core_init_matrix+0xec>
    185e:	0015                	c.nop	5
    1860:	0100                	addi	s0,sp,128
    1862:	15b7315b          	0x15b7315b
    ee_s16 ret = 0;
    1866:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1868:	5c01                	li	s8,-32
    186a:	4900                	lw	s0,16(a0)
    186c:	156d                	addi	a0,a0,-5
	...
    for (i = 0; i < N; i++)
    1876:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1878:	9c01                	0x9c01
    187a:	188d                	addi	a7,a7,-29
    for (i = 0; i < N; i++)
    187c:	0000                	unimp
    187e:	7a31                	lui	s4,0xfffec
    1880:	0015                	c.nop	5
    1882:	0100                	addi	s0,sp,128
    1884:	315a                	fld	ft2,432(sp)
    1886:	1585                	addi	a1,a1,-31
    1888:	0000                	unimp
    188a:	5b01                	li	s6,-32
    188c:	4900                	lw	s0,16(a0)
    188e:	0d54                	addi	a3,sp,660
	...
                ret += (cur > prev) ? 1 : 0;
    1898:	0000                	unimp
    189a:	9c01                	0x9c01
    189c:	1900                	addi	s0,sp,176
    189e:	0000                	unimp
            cur = C[i * N + j];
    18a0:	662d                	lui	a2,0xb
    18a2:	000d                	c.nop	3
        for (j = 0; j < N; j++)
    18a4:	4d00                	lw	s0,24(a0)
    18a6:	001d                	c.nop	7
            cur = C[i * N + j];
    18a8:	3100                	fld	fs0,32(a0)
    18aa:	00000d73          	0xd73
            tmp += cur;
    18ae:	5b01                	li	s6,-32
    18b0:	802d                	srli	s0,s0,0xb
    18b2:	000d                	c.nop	3
                ret += (cur > prev) ? 1 : 0;
    18b4:	8700                	0x8700
    18b6:	001d                	c.nop	7
            tmp += cur;
    18b8:	3100                	fld	fs0,32(a0)
    18ba:	0d8d                	addi	s11,s11,3
                ret += 10;
    18bc:	0000                	unimp
    18be:	5d01                	li	s10,-32
                ret += (cur > prev) ? 1 : 0;
    18c0:	9a2d                	andi	a2,a2,-21
    18c2:	000d                	c.nop	3
            if (tmp > clipval)
    18c4:	b300                	fsd	fs0,32(a4)
    18c6:	001d                	c.nop	7
                ret += 10;
    18c8:	2d00                	fld	fs0,24(a0)
    18ca:	00000da7          	0xda7
    18ce:	1dd4                	addi	a3,sp,756
    18d0:	0000                	unimp
    18d2:	000db42f          	0xdb42f
                tmp = 0;
    18d6:	0000                	unimp
            cur = C[i * N + j];
    18d8:	001e                	c.slli	zero,0x7
    18da:	2c00                	fld	fs0,24(s0)
        for (j = 0; j < N; j++)
    18dc:	156d                	addi	a0,a0,-5
    18de:	0000                	unimp
    for (i = 0; i < N; i++)
    18e0:	0000                	unimp
    18e2:	0000                	unimp
    18e4:	0318                	addi	a4,sp,384
    18e6:	0000                	unimp
    18e8:	6601                	0x6601
    18ea:	0501                	addi	a0,a0,0
    18ec:	852d                	srai	a0,a0,0xb
    18ee:	0015                	c.nop	5
    18f0:	1300                	addi	s0,sp,416
    18f2:	001e                	c.slli	zero,0x7
    crc = crc16(matrix_sum(N, C, clipval), crc);
    18f4:	2d00                	fld	fs0,24(a0)
    18f6:	157a                	slli	a0,a0,0x3e
    18f8:	0000                	unimp
    18fa:	1e26                	slli	t3,t3,0x29
    18fc:	0000                	unimp
    18fe:	0000                	unimp
    1900:	1a49                	addi	s4,s4,-14
    1902:	000d                	c.nop	3
	...
    for (i = 0; i < N; i++)
    190c:	0100                	addi	s0,sp,128
    190e:	2b9c                	fld	fa5,16(a5)
    1910:	0019                	c.nop	6
    1912:	2d00                	fld	fs0,24(a0)
    1914:	0d2c                	addi	a1,sp,664
    1916:	0000                	unimp
    1918:	1e39                	addi	t3,t3,-18
    191a:	0000                	unimp
    191c:	394a                	fld	fs2,176(sp)
    191e:	000d                	c.nop	3
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1920:	0100                	addi	s0,sp,128
    1922:	4a5c                	lw	a5,20(a2)
    1924:	0d46                	slli	s10,s10,0x11
    1926:	0000                	unimp
    1928:	5f01                	li	t5,-32
    192a:	4900                	lw	s0,16(a0)
    192c:	0ce0                	addi	s0,sp,604
	...
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    1936:	0000                	unimp
    1938:	9c01                	0x9c01
    193a:	1954                	addi	a3,sp,180
    193c:	0000                	unimp
    193e:	f231                	bnez	a2,1882 <matrix_test+0x14e>
    1940:	000c                	0xc
    1942:	0100                	addi	s0,sp,128
    1944:	315a                	fld	ft2,432(sp)
    1946:	0cff                	0xcff
    1948:	0000                	unimp
    194a:	5b01                	li	s6,-32
    194c:	0c4a                	slli	s8,s8,0x12
    194e:	000d                	c.nop	3
        for (j = 0; j < N; j++)
    1950:	0100                	addi	s0,sp,128
    1952:	005d                	c.nop	23
    1954:	b349                	j	16d6 <iterate+0x4a>
    1956:	000c                	0xc
	...
    for (i = 0; i < N; i++)
    1960:	0100                	addi	s0,sp,128
    1962:	949c                	0x949c
    1964:	0019                	c.nop	6
    1966:	2d00                	fld	fs0,24(a0)
    ee_s16 ret = 0;
    1968:	0cc5                	addi	s9,s9,17
    196a:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    196c:	00001e57          	0x1e57
    1970:	d231                	beqz	a2,18b4 <matrix_test+0x180>
    1972:	000c                	0xc
    for (i = 0; i < N; i++)
    1974:	0100                	addi	s0,sp,128
    1976:	0cb33d5b          	0xcb33d5b
	...
        for (j = 0; j < N; j++)
    1982:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1984:	d234                	sw	a3,96(a2)
    1986:	000c                	0xc
        for (j = 0; j < N; j++)
    1988:	2d00                	fld	fs0,24(a0)
    198a:	0cc5                	addi	s9,s9,17
                ret += (cur > prev) ? 1 : 0;
    198c:	0000                	unimp
    198e:	1e99                	addi	t4,t4,-26
            prev = cur;
    1990:	0000                	unimp
    1992:	0000                	unimp
            cur = C[i * N + j];
    1994:	7949                	lui	s2,0xffff2
    1996:	000c                	0xc
	...
            tmp += cur;
    19a0:	0100                	addi	s0,sp,128
    19a2:	c39c                	sw	a5,0(a5)
    19a4:	0019                	c.nop	6
    19a6:	2d00                	fld	fs0,24(a0)
                ret += (cur > prev) ? 1 : 0;
    19a8:	00000c8b          	0xc8b
            tmp += cur;
    19ac:	00001eb7          	lui	t4,0x1
                ret += 10;
    19b0:	000c982f          	0xc982f
                ret += (cur > prev) ? 1 : 0;
    19b4:	eb00                	fsw	fs0,16(a4)
    19b6:	001e                	c.slli	zero,0x7
            if (tmp > clipval)
    19b8:	2f00                	fld	fs0,24(a4)
    19ba:	0ca5                	addi	s9,s9,9
                ret += 10;
    19bc:	0000                	unimp
    19be:	1f20                	addi	s0,sp,952
        for (j = 0; j < N; j++)
    19c0:	0000                	unimp
    19c2:	4900                	lw	s0,16(a0)
                ret += 10;
    19c4:	0bcc                	addi	a1,sp,468
	...
            prev = cur;
    19ce:	0000                	unimp
            cur = C[i * N + j];
    19d0:	9c01                	0x9c01
    19d2:	00001a4f          	fnmadd.s	fs4,ft0,ft0,ft0,rtz
        for (j = 0; j < N; j++)
    19d6:	de2d                	beqz	a2,1950 <matrix_test+0x21c>
    19d8:	3e00000b          	0x3e00000b
    for (i = 0; i < N; i++)
    19dc:	001f 2d00 0beb      	0xbeb2d00001f
    19e2:	0000                	unimp
    19e4:	1fa1                	addi	t6,t6,-24
    19e6:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19e8:	f82d                	bnez	s0,195a <matrix_test+0x226>
    19ea:	d800000b          	0xd800000b
    19ee:	001f 2f00 0c05      	0xc052f00001f
            C[i * N + j] = 0;
    19f4:	0000                	unimp
    19f6:	0000200f          	0x200f
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19fa:	000c102f          	0xc102f
            C[i * N + j] = 0;
    19fe:	8600                	0x8600
    1a00:	0020                	addi	s0,sp,8
    1a02:	2f00                	fld	fs0,24(a4)
    1a04:	00000c1b          	0xc1b
    1a08:	20dd                	jal	1aee <matrix_test+0x3ba>
    1a0a:	0000                	unimp
    for (i = 0; i < N; i++)
    1a0c:	000c262f          	amoadd.w	a2,zero,(s8)
            C[i * N + j] = 0;
    1a10:	2700                	fld	fs0,8(a4)
    1a12:	0021                	c.nop	8
    1a14:	2f00                	fld	fs0,24(a4)
    1a16:	00000c33          	add	s8,zero,zero
    1a1a:	218a                	fld	ft3,128(sp)
    1a1c:	0000                	unimp
    1a1e:	000c402f          	0xc402f
    1a22:	b500                	fsd	fs0,40(a0)
    1a24:	0021                	c.nop	8
    1a26:	2f00                	fld	fs0,24(a4)
    1a28:	0c4d                	addi	s8,s8,19
    1a2a:	0000                	unimp
                tmp = 0;
    1a2c:	000021f7          	0x21f7
        for (j = 0; j < N; j++)
    1a30:	000c5a2f          	0xc5a2f
    1a34:	1600                	addi	s0,sp,800
    1a36:	0022                	c.slli	zero,0x8
    1a38:	2f00                	fld	fs0,24(a4)
    1a3a:	00000c67          	jalr	s8,zero # 0 <_start>
    1a3e:	2229                	jal	1b48 <matrix_test+0x414>
            for (k = 0; k < N; k++)
    1a40:	0000                	unimp
    1a42:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a46:	3700                	fld	fs0,40(a4)
    1a48:	5c01                	li	s8,-32
    1a4a:	8802                	jr	a6
            for (k = 0; k < N; k++)
    1a4c:	0000                	unimp
    1a4e:	4c00                	lw	s0,24(s0)
    1a50:	0310                	addi	a2,sp,384
    1a52:	0000                	unimp
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a54:	0306                	slli	t1,t1,0x1
    1a56:	0000                	unimp
    1a58:	0009                	c.nop	2
    1a5a:	5f4d                	li	t5,-13
    1a5c:	5f000003          	lb	zero,1520(zero) # 5f0 <main+0x574>
    1a60:	08000003          	lb	zero,128(zero) # 80 <main+0x4>
            for (k = 0; k < N; k++)
    1a64:	0834                	addi	a3,sp,24
    1a66:	c24d                	beqz	a2,1b08 <matrix_test+0x3d4>
    1a68:	c2000003          	lb	zero,-992(zero) # fffffc20 <__freertos_irq_stack_top+0xfefefc20>
        for (j = 0; j < N; j++)
    1a6c:	08000003          	lb	zero,128(zero) # 80 <main+0x4>
    1a70:	089f 1a4d 0002      	0x21a4d089f
    1a76:	1a00                	addi	s0,sp,304
    1a78:	0002                	c.slli64	zero
    1a7a:	0800                	addi	s0,sp,16
    for (i = 0; i < N; i++)
    1a7c:	1e4d0893          	addi	a7,s10,484 # 51e4 <_printf_float+0xdc>
    1a80:	0000                	unimp
    1a82:	1e00                	addi	s0,sp,816
    1a84:	0000                	unimp
    1a86:	0800                	addi	s0,sp,16
    1a88:	b1000833          	0xb1000833
    1a8c:	0014                	0x14
    1a8e:	0400                	addi	s0,sp,512
    1a90:	5200                	lw	s0,32(a2)
    1a92:	0004                	0x4
    1a94:	0400                	addi	s0,sp,512
    1a96:	0e01                	addi	t3,t3,0
    1a98:	0004                	0x4
    1a9a:	0c00                	addi	s0,sp,528
    1a9c:	0892                	slli	a7,a7,0x4
    1a9e:	0000                	unimp
    1aa0:	00000713          	li	a4,0
    ee_s16 ret = 0;
    1aa4:	0400                	addi	s0,sp,512
    1aa6:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1aa8:	0000                	unimp
    1aaa:	0000                	unimp
    1aac:	0000252b          	0x252b
    for (i = 0; i < N; i++)
    1ab0:	0102                	c.slli64	sp
    1ab2:	1206                	slli	tp,tp,0x21
    1ab4:	0006                	c.slli	zero,0x1
    1ab6:	0200                	addi	s0,sp,256
        for (j = 0; j < N; j++)
    1ab8:	0801                	addi	a6,a6,0
    1aba:	0610                	addi	a2,sp,768
    1abc:	0000                	unimp
    1abe:	0202                	c.slli64	tp
                ret += (cur > prev) ? 1 : 0;
    1ac0:	cc05                	beqz	s0,1af8 <matrix_test+0x3c4>
    1ac2:	0004                	0x4
        for (j = 0; j < N; j++)
    1ac4:	0200                	addi	s0,sp,256
    1ac6:	0702                	c.slli64	a4
                ret += (cur > prev) ? 1 : 0;
    1ac8:	06ea                	slli	a3,a3,0x1a
    1aca:	0000                	unimp
            prev = cur;
    1acc:	0402                	c.slli64	s0
    1ace:	6b05                	lui	s6,0x1
            cur = C[i * N + j];
    1ad0:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
        for (j = 0; j < N; j++)
    1ad4:	0704                	addi	s1,sp,896
    1ad6:	019d                	addi	gp,gp,7
            cur = C[i * N + j];
    1ad8:	0000                	unimp
    1ada:	0802                	c.slli64	a6
            tmp += cur;
    1adc:	6605                	lui	a2,0x1
    1ade:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    1ae2:	0708                	addi	a0,sp,896
                ret += (cur > prev) ? 1 : 0;
    1ae4:	0198                	addi	a4,sp,192
    1ae6:	0000                	unimp
            tmp += cur;
    1ae8:	69050403          	lb	s0,1680(a0)
                ret += 10;
    1aec:	746e                	flw	fs0,248(sp)
    1aee:	0200                	addi	s0,sp,256
                ret += (cur > prev) ? 1 : 0;
    1af0:	0704                	addi	s1,sp,896
    1af2:	01a2                	slli	gp,gp,0x8
            if (tmp > clipval)
    1af4:	0000                	unimp
    1af6:	1002                	c.slli	zero,0x20
                ret += 10;
    1af8:	9004                	0x9004
    1afa:	0004                	0x4
        for (j = 0; j < N; j++)
    1afc:	0400                	addi	s0,sp,512
    1afe:	049c                	addi	a5,sp,576
                ret += 10;
    1b00:	0000                	unimp
    1b02:	2202                	fld	ft4,0(sp)
                tmp = 0;
    1b04:	7e19                	lui	t3,0xfffe6
    1b06:	0000                	unimp
            prev = cur;
    1b08:	0500                	addi	s0,sp,640
    1b0a:	8404                	0x8404
            cur = C[i * N + j];
    1b0c:	0000                	unimp
    1b0e:	0600                	addi	s0,sp,768
        for (j = 0; j < N; j++)
    1b10:	0601                	addi	a2,a2,0
    1b12:	0000                	unimp
    1b14:	3104                	fld	fs1,32(a0)
    1b16:	03000007          	0x3000007
    for (i = 0; i < N; i++)
    1b1a:	0e2c                	addi	a1,sp,792
    1b1c:	0041                	c.nop	16
    1b1e:	0000                	unimp
    1b20:	ee04                	fsw	fs1,24(a2)
    1b22:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b24:	0300                	addi	s0,sp,384
    1b26:	0e72                	slli	t3,t3,0x1c
    1b28:	0041                	c.nop	16
    1b2a:	0000                	unimp
    1b2c:	da04                	sw	s1,48(a2)
    1b2e:	0006                	c.slli	zero,0x1
    1b30:	0300                	addi	s0,sp,384
    1b32:	1791                	addi	a5,a5,-28
    1b34:	005d                	c.nop	23
    1b36:	0000                	unimp
    1b38:	0005cb07          	flq	fs6,0(a1)
    1b3c:	0400                	addi	s0,sp,512
    1b3e:	0165                	addi	sp,sp,25
    for (i = 0; i < N; i++)
    1b40:	00006417          	auipc	s0,0x6
    1b44:	0800                	addi	s0,sp,16
    1b46:	0304                	addi	s1,sp,384
    1b48:	03a6                	slli	t2,t2,0x9
    1b4a:	00dc                	addi	a5,sp,68
    1b4c:	0000                	unimp
    1b4e:	fa09                	bnez	a2,1a60 <matrix_test+0x32c>
    1b50:	0002                	c.slli64	zero
    1b52:	0300                	addi	s0,sp,384
    1b54:	0ca8                	addi	a0,sp,600
    1b56:	00ad                	addi	ra,ra,11
    1b58:	0000                	unimp
    1b5a:	2f09                	jal	226c <core_state_transition+0x50>
                tmp = 0;
    1b5c:	0005                	c.nop	1
    1b5e:	0300                	addi	s0,sp,384
        for (j = 0; j < N; j++)
    1b60:	13a9                	addi	t2,t2,-22
    1b62:	00dc                	addi	a5,sp,68
    1b64:	0000                	unimp
    1b66:	0a00                	addi	s0,sp,272
    1b68:	002c                	addi	a1,sp,8
    1b6a:	0000                	unimp
    1b6c:	00ec                	addi	a1,sp,76
    1b6e:	0000                	unimp
            for (k = 0; k < N; k++)
    1b70:	0000640b          	0x640b
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b74:	0300                	addi	s0,sp,384
    1b76:	0c00                	addi	s0,sp,528
    1b78:	0308                	addi	a0,sp,384
    1b7a:	011009a3          	sb	a7,19(zero) # 13 <_start+0x13>
            for (k = 0; k < N; k++)
    1b7e:	0000                	unimp
    1b80:	640d                	lui	s0,0x3
    1b82:	0001                	nop
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b84:	0300                	addi	s0,sp,384
    1b86:	07a5                	addi	a5,a5,9
    1b88:	005d                	c.nop	23
    1b8a:	0000                	unimp
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    1b8c:	0d00                	addi	s0,sp,656
    1b8e:	026a                	slli	tp,tp,0x1a
    1b90:	0000                	unimp
    1b92:	ba05aa03          	lw	s4,-1120(a1)
    1b96:	0000                	unimp
    1b98:	0400                	addi	s0,sp,512
    1b9a:	0400                	addi	s0,sp,512
    1b9c:	03ea                	slli	t2,t2,0x1a
    1b9e:	0000                	unimp
    1ba0:	ec03ab03          	lw	s6,-320(t2) # 231a <core_state_transition+0xfe>
    1ba4:	0000                	unimp
    1ba6:	0400                	addi	s0,sp,512
    1ba8:	02e2                	slli	t0,t0,0x18
    1baa:	0000                	unimp
            for (k = 0; k < N; k++)
    1bac:	721baf03          	lw	t5,1825(s7) # 1d721 <_data_lma+0x125a9>
    1bb0:	0000                	unimp
    1bb2:	0e00                	addi	s0,sp,784
        for (j = 0; j < N; j++)
    1bb4:	0404                	addi	s1,sp,512
    1bb6:	039e                	slli	t2,t2,0x7
    1bb8:	0000                	unimp
    1bba:	1605                	addi	a2,a2,-31
    1bbc:	4819                	li	a6,6
    1bbe:	0000                	unimp
    1bc0:	0f00                	addi	s0,sp,912
    1bc2:	0128                	addi	a0,sp,136
    for (i = 0; i < N; i++)
    1bc4:	0000                	unimp
    1bc6:	0518                	addi	a4,sp,640
    1bc8:	0190082f          	0x190082f
    1bcc:	0000                	unimp
    1bce:	9b0d                	andi	a4,a4,-29
    1bd0:	05000007          	0x5000007
    1bd4:	1331                	addi	t1,t1,-20
    1bd6:	0190                	addi	a2,sp,192
    1bd8:	0000                	unimp
    1bda:	1000                	addi	s0,sp,32
    1bdc:	6b5f 0500 0732      	0x73205006b5f
    1be2:	005d                	c.nop	23
    1be4:	0000                	unimp
    1be6:	0d04                	addi	s1,sp,656
    ee_s16 ret = 0;
    1be8:	0594                	addi	a3,sp,704
    1bea:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1bec:	3205                	jal	150c <core_list_init+0x13c>
    1bee:	00005d0b          	0x5d0b
    1bf2:	0800                	addi	s0,sp,16
    for (i = 0; i < N; i++)
    1bf4:	0c0d                	addi	s8,s8,3
    1bf6:	0005                	c.nop	1
    1bf8:	0500                	addi	s0,sp,640
    1bfa:	1432                	slli	s0,s0,0x2c
        for (j = 0; j < N; j++)
    1bfc:	005d                	c.nop	23
    1bfe:	0000                	unimp
    1c00:	0d0c                	addi	a1,sp,656
    1c02:	01c4                	addi	s1,sp,196
                ret += (cur > prev) ? 1 : 0;
    1c04:	0000                	unimp
    1c06:	3205                	jal	1526 <core_list_init+0x156>
        for (j = 0; j < N; j++)
    1c08:	00005d1b          	0x5d1b
                ret += (cur > prev) ? 1 : 0;
    1c0c:	1000                	addi	s0,sp,32
    1c0e:	5f10                	lw	a2,56(a4)
            prev = cur;
    1c10:	0078                	addi	a4,sp,12
    1c12:	3305                	jal	1932 <matrix_test+0x1fe>
            cur = C[i * N + j];
    1c14:	0001960b          	0x1960b
        for (j = 0; j < N; j++)
    1c18:	1400                	addi	s0,sp,544
    1c1a:	0500                	addi	s0,sp,640
            cur = C[i * N + j];
    1c1c:	3604                	fld	fs1,40(a2)
    1c1e:	0001                	nop
            tmp += cur;
    1c20:	0a00                	addi	s0,sp,272
    1c22:	012a                	slli	sp,sp,0xa
    1c24:	0000                	unimp
    1c26:	01a6                	slli	gp,gp,0x9
                ret += (cur > prev) ? 1 : 0;
    1c28:	0000                	unimp
    1c2a:	0000640b          	0x640b
            tmp += cur;
    1c2e:	0000                	unimp
                ret += 10;
    1c30:	0f00                	addi	s0,sp,912
    1c32:	000005bf 08370524 	0x8370524000005bf
            if (tmp > clipval)
    1c3a:	0229                	addi	tp,tp,10
                ret += 10;
    1c3c:	0000                	unimp
    1c3e:	2b0d                	jal	2170 <core_init_state+0x130>
        for (j = 0; j < N; j++)
    1c40:	0002                	c.slli64	zero
    1c42:	0500                	addi	s0,sp,640
                ret += 10;
    1c44:	0939                	addi	s2,s2,14
    1c46:	005d                	c.nop	23
                tmp = 0;
    1c48:	0000                	unimp
    1c4a:	0d00                	addi	s0,sp,656
            prev = cur;
    1c4c:	0176                	slli	sp,sp,0x1d
    1c4e:	0000                	unimp
            cur = C[i * N + j];
    1c50:	3a05                	jal	1580 <core_list_init+0x1b0>
    1c52:	5d09                	li	s10,-30
        for (j = 0; j < N; j++)
    1c54:	0000                	unimp
    1c56:	0400                	addi	s0,sp,512
    1c58:	540d                	li	s0,-29
    1c5a:	0001                	nop
    1c5c:	0500                	addi	s0,sp,640
    1c5e:	005d093b          	0x5d093b
    for (i = 0; i < N; i++)
    1c62:	0000                	unimp
    1c64:	0d08                	addi	a0,sp,656
    1c66:	029a                	slli	t0,t0,0x6
    1c68:	0000                	unimp
    1c6a:	3c05                	jal	169a <iterate+0xe>
            cur = C[i * N + j];
    1c6c:	5d09                	li	s10,-30
    1c6e:	0000                	unimp
    for (i = 0; i < N; i++)
    1c70:	0c00                	addi	s0,sp,528
    1c72:	870d                	srai	a4,a4,0x3
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1c74:	0004                	0x4
    1c76:	0500                	addi	s0,sp,640
    1c78:	093d                	addi	s2,s2,15
    1c7a:	005d                	c.nop	23
    1c7c:	0000                	unimp
    1c7e:	0d10                	addi	a2,sp,656
    for (i = 0; i < N; i++)
    1c80:	0549                	addi	a0,a0,18
    1c82:	0000                	unimp
                tmp = 0;
    1c84:	3e05                	jal	17b4 <matrix_test+0x80>
    1c86:	5d09                	li	s10,-30
        for (j = 0; j < N; j++)
    1c88:	0000                	unimp
    1c8a:	1400                	addi	s0,sp,544
            A[i * N + j] += val;
    1c8c:	300d                	jal	14ae <core_list_init+0xde>
    1c8e:	0001                	nop
    1c90:	0500                	addi	s0,sp,640
    1c92:	005d093f 0d180000 	0xd180000005d093f
    1c9a:	0234                	addi	a3,sp,264
    1c9c:	0000                	unimp
    1c9e:	4005                	c.li	zero,1
        for (j = 0; j < N; j++)
    1ca0:	5d09                	li	s10,-30
    1ca2:	0000                	unimp
    1ca4:	1c00                	addi	s0,sp,560
    1ca6:	fd0d                	bnez	a0,1be0 <matrix_test+0x4ac>
    for (i = 0; i < N; i++)
    1ca8:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1cac:	0941                	addi	s2,s2,16
    1cae:	005d                	c.nop	23
    1cb0:	0000                	unimp
    1cb2:	0020                	addi	s0,sp,8
    1cb4:	2911                	jal	20c8 <core_init_state+0x88>
    1cb6:	0000                	unimp
}
    1cb8:	0800                	addi	s0,sp,16
    1cba:	0501                	addi	a0,a0,0
    1cbc:	084a                	slli	a6,a6,0x12
    1cbe:	026e                	slli	tp,tp,0x1b
    return crc;
    1cc0:	0000                	unimp
    1cc2:	f50d                	bnez	a0,1bec <matrix_test+0x4b8>
}
    1cc4:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1cc8:	026e0a4b          	fnmsub.d	fs4,ft8,ft6,ft0,rne
    1ccc:	0000                	unimp
    1cce:	0d00                	addi	s0,sp,656
    1cd0:	05f5                	addi	a1,a1,29
    1cd2:	0000                	unimp
    1cd4:	4c05                	li	s8,1
    1cd6:	6e09                	lui	t3,0x2
    1cd8:	0002                	c.slli64	zero
    1cda:	8000                	0x8000
    1cdc:	0412                	slli	s0,s0,0x4
    1cde:	05000007          	0x5000007
    1ce2:	0a4e                	slli	s4,s4,0x13
    1ce4:	012a                	slli	sp,sp,0xa
    1ce6:	0000                	unimp
    1ce8:	0100                	addi	s0,sp,128
    1cea:	8012                	c.mv	zero,tp
    1cec:	05000007          	0x5000007
    return crc;
    1cf0:	0a51                	addi	s4,s4,20
    1cf2:	012a                	slli	sp,sp,0xa
}
    1cf4:	0000                	unimp
    1cf6:	0104                	addi	s1,sp,128
    1cf8:	0a00                	addi	s0,sp,272
    1cfa:	0128                	addi	a0,sp,136
            C[i * N + j] = 0;
    1cfc:	0000                	unimp
    1cfe:	027e                	slli	tp,tp,0x1f
    1d00:	0000                	unimp
    1d02:	0000640b          	0x640b
    1d06:	1f00                	addi	s0,sp,944
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d08:	1100                	addi	s0,sp,160
    1d0a:	000004bb          	0x4bb
    1d0e:	0190                	addi	a2,sp,192
    1d10:	5d05                	li	s10,-31
    1d12:	c108                	sw	a0,0(a0)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d14:	0002                	c.slli64	zero
    1d16:	0d00                	addi	s0,sp,656
    1d18:	0000079b          	0x79b
    1d1c:	5e05                	li	t3,-31
    1d1e:	c112                	sw	tp,128(sp)
    1d20:	0002                	c.slli64	zero
    1d22:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d24:	430d                	li	t1,3
    1d26:	0002                	c.slli64	zero
    1d28:	0500                	addi	s0,sp,640
    1d2a:	065f 005d 0000      	0x5d065f
    1d30:	0d04                	addi	s1,sp,656
    1d32:	00000107          	0x107
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d36:	6105                	addi	sp,sp,32
    1d38:	c709                	beqz	a4,1d42 <matrix_test+0x60e>
    1d3a:	0002                	c.slli64	zero
    1d3c:	0800                	addi	s0,sp,16
    1d3e:	290d                	jal	2170 <core_init_state+0x130>
    1d40:	0000                	unimp
    1d42:	0500                	addi	s0,sp,640
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1d44:	1e62                	slli	t3,t3,0x38
    1d46:	0229                	addi	tp,tp,10
{
    1d48:	0000                	unimp
    1d4a:	0088                	addi	a0,sp,64
    1d4c:	0405                	addi	s0,s0,1
    1d4e:	027e                	slli	tp,tp,0x1f
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d50:	0000                	unimp
    1d52:	d70a                	sw	sp,172(sp)
{
    1d54:	0002                	c.slli64	zero
    1d56:	d700                	sw	s0,40(a4)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d58:	0002                	c.slli64	zero
    1d5a:	0b00                	addi	s0,sp,400
    1d5c:	0064                	addi	s1,sp,12
    1d5e:	0000                	unimp
    1d60:	001f 0405 02dd      	0x2dd0405001f
    1d66:	0000                	unimp
{
    1d68:	06820f13          	addi	t5,tp,104 # fffee068 <__freertos_irq_stack_top+0xfefde068>
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d6c:	0000                	unimp
    1d6e:	0508                	addi	a0,sp,640
    1d70:	0875                	addi	a6,a6,29
    1d72:	0306                	slli	t1,t1,0x1
    1d74:	0000                	unimp
    1d76:	880d                	andi	s0,s0,3
}
    1d78:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1d7c:	1176                	slli	sp,sp,0x3d
    1d7e:	0306                	slli	t1,t1,0x1
    1d80:	0000                	unimp
    1d82:	0d00                	addi	s0,sp,656
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d84:	070d                	addi	a4,a4,3
    1d86:	0000                	unimp
    1d88:	7705                	lui	a4,0xfffe1
    1d8a:	5d06                	lw	s10,96(sp)
{
    1d8c:	0000                	unimp
    1d8e:	0400                	addi	s0,sp,512
    1d90:	0500                	addi	s0,sp,640
    1d92:	2c04                	fld	fs1,24(s0)
    1d94:	0000                	unimp
    1d96:	0f00                	addi	s0,sp,912
    printf("start test42\n");
    1d98:	01bc                	addi	a5,sp,200
    1d9a:	0000                	unimp
{
    1d9c:	0568                	addi	a0,sp,652
    1d9e:	08b5                	addi	a7,a7,13
    printf("start test42\n");
    1da0:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
{
    1da4:	5f10                	lw	a2,56(a4)
    1da6:	0070                	addi	a2,sp,12
    1da8:	b605                	j	18c8 <matrix_test+0x194>
    1daa:	0612                	slli	a2,a2,0x4
    1dac:	00000003          	lb	zero,0(zero) # 0 <_start>
    1db0:	5f10                	lw	a2,56(a4)
    1db2:	0072                	c.slli	zero,0x1c
    1db4:	b705                	j	1cd4 <matrix_test+0x5a0>
    1db6:	00005d07          	0x5d07
    1dba:	0400                	addi	s0,sp,512
    1dbc:	5f10                	lw	a2,56(a4)
    1dbe:	b8050077          	0xb8050077
    1dc2:	00005d07          	0x5d07
    1dc6:	0800                	addi	s0,sp,16
    1dc8:	7f0d                	lui	t5,0xfffe3
    1dca:	0000                	unimp
    1dcc:	0500                	addi	s0,sp,640
    1dce:	09b9                	addi	s3,s3,14
    1dd0:	00000033          	add	zero,zero,zero
    1dd4:	0d0c                	addi	a1,sp,656
    1dd6:	03bc                	addi	a5,sp,456
    1dd8:	0000                	unimp
    1dda:	ba05                	j	170a <iterate+0x7e>
    printf("start test42\n");
    1ddc:	3309                	jal	1ade <matrix_test+0x3aa>
    1dde:	0000                	unimp
    1de0:	0e00                	addi	s0,sp,784
    1de2:	5f10                	lw	a2,56(a4)
    if (seed == 0)
    1de4:	6662                	flw	fa2,24(sp)
    1de6:	0500                	addi	s0,sp,640
        seed = 1;
    1de8:	02de11bb          	0x2de11bb
    1dec:	0000                	unimp
    1dee:	0d10                	addi	a2,sp,656
    1df0:	0076                	c.slli	zero,0x1d
    1df2:	0000                	unimp
    1df4:	bc05                	j	1824 <matrix_test+0xf0>
    1df6:	00005d07          	0x5d07
    1dfa:	1800                	addi	s0,sp,48
    while (j < blksize)
    1dfc:	120d                	addi	tp,tp,-29
    1dfe:	0001                	nop
    1e00:	0500                	addi	s0,sp,640
    1e02:	01280ac3          	fmadd.s	fs5,fa6,fs2,ft0,rne
    1e06:	0000                	unimp
        i++;
    1e08:	0d1c                	addi	a5,sp,656
    1e0a:	00c0                	addi	s0,sp,68
    1e0c:	0000                	unimp
    1e0e:	c505                	beqz	a0,1e36 <core_init_matrix+0xaa>
        j = i * i * 2 * 4;
    1e10:	d31d                	beqz	a4,1d36 <matrix_test+0x602>
    1e12:	0005                	c.nop	1
    1e14:	2000                	fld	fs0,0(s0)
    1e16:	a40d                	j	2038 <portable_fini>
    1e18:	0004                	0x4
    1e1a:	0500                	addi	s0,sp,640
    1e1c:	05fd1dc7          	0x5fd1dc7
    1e20:	0000                	unimp
    1e22:	0d24                	addi	s1,sp,664
    while (j < blksize)
    1e24:	07ac                	addi	a1,sp,968
    1e26:	0000                	unimp
    B = A + N * N;
    1e28:	ca05                	beqz	a2,1e58 <core_init_matrix+0xcc>
    1e2a:	210d                	jal	224c <core_state_transition+0x30>
    1e2c:	0006                	c.slli	zero,0x1
    1e2e:	2800                	fld	fs0,16(s0)
    1e30:	150d                	addi	a0,a0,-29
    1e32:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1e36:	063b09cb          	fnmsub.q	fs3,fs6,ft3,ft0,rne
    1e3a:	0000                	unimp
    1e3c:	102c                	addi	a1,sp,40
    1e3e:	755f 0062 ce05      	0xce050062755f
    1e44:	de11                	beqz	a2,1d60 <core_bench_matrix+0x18>
    1e46:	0002                	c.slli64	zero
    1e48:	3000                	fld	fs0,32(s0)
    1e4a:	5f10                	lw	a2,56(a4)
    for (i = 0; i < N; i++)
    1e4c:	7075                	c.lui	zero,0xffffd
    1e4e:	0500                	addi	s0,sp,640
    1e50:	030612cf          	fnmadd.d	ft5,fa2,fa6,ft0,rtz
            seed         = ((order * seed) % 65536);
    1e54:	0000                	unimp
    1e56:	1038                	addi	a4,sp,40
    1e58:	755f 0072 d005      	0xd0050072755f
    B = A + N * N;
    1e5e:	00005d07          	0x5d07
    1e62:	3c00                	fld	fs0,56(s0)
    1e64:	dc0d                	beqz	s0,1d9e <core_init_matrix+0x12>
    1e66:	05000007          	0x5000007
    1e6a:	064111d3          	fadd.q	ft3,ft2,ft4,rtz
            seed         = ((order * seed) % 65536);
    1e6e:	0000                	unimp
        seed = 1;
    1e70:	0d40                	addi	s0,sp,660
    1e72:	0738                	addi	a4,sp,904
        for (j = 0; j < N; j++)
    1e74:	0000                	unimp
    1e76:	d405                	beqz	s0,1d9e <core_init_matrix+0x12>
            seed         = ((order * seed) % 65536);
    1e78:	5111                	li	sp,-28
    1e7a:	0006                	c.slli	zero,0x1
    1e7c:	4300                	lw	s0,0(a4)
    1e7e:	5f10                	lw	a2,56(a4)
    1e80:	626c                	flw	fa1,68(a2)
    1e82:	0500                	addi	s0,sp,640
    1e84:	02de11d7          	0x2de11d7
    1e88:	0000                	unimp
    1e8a:	0d44                	addi	s1,sp,660
    1e8c:	05b6                	slli	a1,a1,0xd
    1e8e:	0000                	unimp
    1e90:	da05                	beqz	a2,1dc0 <core_init_matrix+0x34>
    1e92:	00005d07          	0x5d07
    1e96:	4c00                	lw	s0,24(s0)
    1e98:	fd0d                	bnez	a0,1dd2 <core_init_matrix+0x46>
    1e9a:	0001                	nop
    1e9c:	0500                	addi	s0,sp,640
    1e9e:	00890adb          	0x890adb
    1ea2:	0000                	unimp
            val          = (seed + order);
    1ea4:	0d50                	addi	a2,sp,660
    1ea6:	0170                	addi	a2,sp,140
    1ea8:	0000                	unimp
    1eaa:	de05                	beqz	a2,1de2 <core_init_matrix+0x56>
    1eac:	6d12                	flw	fs10,4(sp)
    1eae:	0004                	0x4
            val          = (val + order);
    1eb0:	5400                	lw	s0,40(s0)
    1eb2:	020d                	addi	tp,tp,3
            B[i * N + j] = val;
    1eb4:	0006                	c.slli	zero,0x1
    1eb6:	0500                	addi	s0,sp,640
            val          = matrix_clip(val, 1);
    1eb8:	0ce2                	slli	s9,s9,0x18
    1eba:	011c                	addi	a5,sp,128
            A[i * N + j] = val;
    1ebc:	0000                	unimp
    1ebe:	0d58                	addi	a4,sp,660
    1ec0:	000000b7          	lui	ra,0x0
        for (j = 0; j < N; j++)
    1ec4:	e405                	bnez	s0,1eec <core_init_matrix+0x160>
    1ec6:	100e                	c.slli	zero,0x23
            order++;
    1ec8:	0001                	nop
    1eca:	5c00                	lw	s0,56(s0)
    1ecc:	780d                	lui	a6,0xfffe3
    1ece:	05000007          	0x5000007
        for (j = 0; j < N; j++)
    1ed2:	09e5                	addi	s3,s3,25
    for (i = 0; i < N; i++)
    1ed4:	005d                	c.nop	23
    1ed6:	0000                	unimp
    1ed8:	0064                	addi	s1,sp,12
    1eda:	a114                	fsd	fa3,0(a0)
    1edc:	0000                	unimp
    1ede:	6d00                	flw	fs0,24(a0)
    p->C = (MATRES *)align_mem(B + N * N);
    1ee0:	0004                	0x4
    1ee2:	1500                	addi	s0,sp,672
    p->A = A;
    1ee4:	046d                	addi	s0,s0,27
    1ee6:	0000                	unimp
}
    1ee8:	2815                	jal	1f1c <core_init_matrix+0x190>
    1eea:	0001                	nop
    p->C = (MATRES *)align_mem(B + N * N);
    1eec:	1500                	addi	s0,sp,672
    1eee:	05c1                	addi	a1,a1,16
    1ef0:	0000                	unimp
    1ef2:	5d15                	li	s10,-27
    1ef4:	0000                	unimp
    1ef6:	0000                	unimp
    1ef8:	0405                	addi	s0,s0,1
    1efa:	0478                	addi	a4,sp,524
    1efc:	0000                	unimp
    1efe:	6d16                	flw	fs10,68(sp)
    p->N = N;
    1f00:	0004                	0x4
    1f02:	1700                	addi	s0,sp,928
}
    1f04:	000006e3          	beqz	zero,2710 <core_bench_state+0x1c4>
    p->B = B;
    1f08:	0428                	addi	a0,sp,520
    1f0a:	3905                	jal	1b3a <matrix_test+0x406>
    p->A = A;
    1f0c:	0802                	c.slli64	a6
    1f0e:	05c1                	addi	a1,a1,16
    p->N = N;
    1f10:	0000                	unimp
    1f12:	8018                	0x8018
}
    1f14:	0004                	0x4
    1f16:	0500                	addi	s0,sp,640
    1f18:	5d07023b          	0x5d07023b
    1f1c:	0000                	unimp
    1f1e:	0000                	unimp
    1f20:	4918                	lw	a4,16(a0)
    1f22:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1f26:	0240                	addi	s0,sp,260
    1f28:	0006ad0b          	0x6ad0b
    1f2c:	0400                	addi	s0,sp,512
    1f2e:	e618                	fsw	fa4,8(a2)
    1f30:	0000                	unimp
    1f32:	0500                	addi	s0,sp,640
    1f34:	0240                	addi	s0,sp,260
    1f36:	ad14                	fsd	fa3,24(a0)
    1f38:	0006                	c.slli	zero,0x1
    1f3a:	0800                	addi	s0,sp,16
    1f3c:	cb18                	sw	a4,16(a4)
    1f3e:	05000007          	0x5000007
    1f42:	0240                	addi	s0,sp,260
    1f44:	ad1e                	fsd	ft7,152(sp)
    1f46:	0006                	c.slli	zero,0x1
    1f48:	0c00                	addi	s0,sp,528
    1f4a:	3e18                	fld	fa4,56(a2)
    B = A + N * N;
    1f4c:	0002                	c.slli64	zero
    1f4e:	0500                	addi	s0,sp,640
    1f50:	0242                	slli	tp,tp,0x10
    1f52:	5d08                	lw	a0,56(a0)
    1f54:	0000                	unimp
    1f56:	1000                	addi	s0,sp,32
    1f58:	0518                	addi	a4,sp,640
    1f5a:	0002                	c.slli64	zero
    N = i - 1;
    1f5c:	0500                	addi	s0,sp,640
    1f5e:	ad080243          	0xad080243
    B = A + N * N;
    1f62:	0008                	0x8
    1f64:	1400                	addi	s0,sp,544
    1f66:	5f18                	lw	a4,56(a4)
start_time(void) {
    1f68:	05000007          	0x5000007
    1f6c:	0246                	slli	tp,tp,0x11
    1f6e:	00005d07          	0x5d07
    timer_0 = timer_getms();
    1f72:	3000                	fld	fs0,32(s0)
    1f74:	d218                	sw	a4,32(a2)
    1f76:	0006                	c.slli	zero,0x1
}
    1f78:	0500                	addi	s0,sp,640
    1f7a:	c2160247          	fmsub.d	ft4,fa2,ft1,fs8,rne
    timer_0 = timer_getms();
    1f7e:	0008                	0x8
    1f80:	3400                	fld	fs0,40(s0)
    1f82:	2218                	fld	fa4,0(a2)
    1f84:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
}
    1f88:	0249                	addi	tp,tp,18
    1f8a:	00005d07          	0x5d07
    1f8e:	3800                	fld	fs0,48(s0)
stop_time(void) {
    1f90:	d418                	sw	a4,40(s0)
    1f92:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1f96:	d30a024b          	fnmsub.d	ft4,fs4,fa6,fs10,rne
    timer_1 = timer_getms();
    1f9a:	0008                	0x8
    1f9c:	3c00                	fld	fs0,56(s0)
    1f9e:	4c18                	lw	a4,24(s0)
}
    1fa0:	0001                	nop
    1fa2:	0500                	addi	s0,sp,640
    timer_1 = timer_getms();
    1fa4:	024e                	slli	tp,tp,0x13
    1fa6:	00019013          	slli	zero,gp,0x0
    1faa:	4000                	lw	s0,0(s0)
    1fac:	8e18                	0x8e18
    1fae:	0001                	nop
}
    1fb0:	0500                	addi	s0,sp,640
    1fb2:	5d07024f          	0x5d07024f
    1fb6:	0000                	unimp
    return timer_1 - timer_0;
    1fb8:	4400                	lw	s0,8(s0)
    1fba:	7218                	flw	fa4,32(a2)
    1fbc:	0002                	c.slli64	zero
    1fbe:	0500                	addi	s0,sp,640
    1fc0:	0250                	addi	a2,sp,260
    1fc2:	00019013          	slli	zero,gp,0x0
    1fc6:	4800                	lw	s0,16(s0)
}
    1fc8:	8e18                	0x8e18
    1fca:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    1fce:	0251                	addi	tp,tp,20
time_in_secs(CORE_TICKS ticks) {
    1fd0:	d914                	sw	a3,48(a0)
    1fd2:	0008                	0x8
    1fd4:	4c00                	lw	s0,24(s0)
    1fd6:	8c18                	0x8c18
    return ((double)ticks) / 1000.0;
    1fd8:	0005                	c.nop	1
    1fda:	0500                	addi	s0,sp,640
    1fdc:	0254                	addi	a3,sp,260
    1fde:	00005d07          	0x5d07
    1fe2:	5000                	lw	s0,32(s0)
    1fe4:	0818                	addi	a4,sp,16
    1fe6:	0006                	c.slli	zero,0x1
    1fe8:	0500                	addi	s0,sp,640
    1fea:	0255                	addi	tp,tp,21
    1fec:	c109                	beqz	a0,1fee <time_in_secs+0x1e>
    1fee:	0005                	c.nop	1
    1ff0:	5400                	lw	s0,40(s0)
    1ff2:	3a18                	fld	fa4,48(a2)
}
    1ff4:	0006                	c.slli	zero,0x1
    1ff6:	0500                	addi	s0,sp,640
    1ff8:	0278                	addi	a4,sp,268
    1ffa:	00088807          	0x88807
    1ffe:	5800                	lw	s0,48(s0)
portable_init(core_portable* p, int* argc, char* argv[]) {
    2000:	bb19                	j	1d16 <matrix_test+0x5e2>
    2002:	0004                	0x4
    2004:	0500                	addi	s0,sp,640
    2006:	027c                	addi	a5,sp,268
    2008:	0002c113          	xori	sp,t0,0
    printf("start run!!\n");
    200c:	4800                	lw	s0,16(s0)
    200e:	1901                	addi	s2,s2,-32
    2010:	02bd                	addi	t0,t0,15
    2012:	0000                	unimp
portable_init(core_portable* p, int* argc, char* argv[]) {
    2014:	7d05                	lui	s10,0xfffe1
    2016:	1202                	slli	tp,tp,0x20
    printf("start run!!\n");
    2018:	027e                	slli	tp,tp,0x1f
    201a:	0000                	unimp
    201c:	014c                	addi	a1,sp,132
    201e:	a419                	j	2224 <core_state_transition+0x8>
    p->portable_id = 1;
    2020:	0002                	c.slli64	zero
    2022:	0500                	addi	s0,sp,640
    2024:	0281                	addi	t0,t0,0
    2026:	ea0c                	fsw	fa1,16(a2)
}
    2028:	0008                	0x8
    202a:	dc00                	sw	s0,56(s0)
    202c:	1902                	slli	s2,s2,0x20
    202e:	000006af          	0x6af
    2032:	8605                	srai	a2,a2,0x1
    2034:	1002                	c.slli	zero,0x20
    2036:	066e                	slli	a2,a2,0x1b
    p->portable_id = 0;
    2038:	0000                	unimp
    203a:	02e0                	addi	s0,sp,332
}
    203c:	0719                	addi	a4,a4,6
    203e:	0005                	c.nop	1
{
    2040:	0500                	addi	s0,sp,640
    2042:	0288                	addi	a0,sp,320
    2044:	f60a                	fsw	ft2,44(sp)
    2046:	0008                	0x8
    2048:	ec00                	fsw	fs0,24(s0)
    204a:	0002                	c.slli64	zero
    printf("start test43\n");
    204c:	0405                	addi	s0,s0,1
    204e:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    2052:	0102                	c.slli64	sp
{
    2054:	1908                	addi	a0,sp,176
    2056:	0006                	c.slli	zero,0x1
    2058:	1600                	addi	s0,sp,800
    205a:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    205e:	0405                	addi	s0,s0,1
    2060:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
    2064:	a114                	fsd	fa3,0(a0)
    2066:	0000                	unimp
    printf("start test43\n");
    2068:	f700                	fsw	fs0,40(a4)
    206a:	0005                	c.nop	1
    206c:	1500                	addi	s0,sp,672
    206e:	046d                	addi	s0,s0,27
    size--;
    2070:	0000                	unimp
    2072:	2815                	jal	20a6 <core_init_state+0x66>
    while ((total + next + 1) < size)
    2074:	0001                	nop
    2076:	1500                	addi	s0,sp,672
    2078:	000005f7          	0x5f7
    207c:	5d15                	li	s10,-27
    207e:	0000                	unimp
    2080:	0000                	unimp
    2082:	0405                	addi	s0,s0,1
    2084:	05ce                	slli	a1,a1,0x13
    2086:	0000                	unimp
        switch (seed & 0x7)
    2088:	0405                	addi	s0,s0,1
    208a:	05d9                	addi	a1,a1,22
    208c:	0000                	unimp
    208e:	9514                	0x9514
    2090:	0000                	unimp
    2092:	2100                	fld	fs0,0(a0)
                buf  = intpat[(seed >> 3) & 0x3];
    2094:	0006                	c.slli	zero,0x1
    2096:	1500                	addi	s0,sp,672
        switch (seed & 0x7)
    2098:	046d                	addi	s0,s0,27
    209a:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    209c:	2815                	jal	20d0 <core_init_state+0x90>
    209e:	0001                	nop
                buf  = scipat[(seed >> 3) & 0x3];
    20a0:	1500                	addi	s0,sp,672
    20a2:	0095                	addi	ra,ra,5
                buf  = floatpat[(seed >> 3) & 0x3];
    20a4:	0000                	unimp
    20a6:	5d15                	li	s10,-27
    20a8:	0000                	unimp
    20aa:	0000                	unimp
        switch (seed & 0x7)
    20ac:	0405                	addi	s0,s0,1
    20ae:	00000603          	lb	a2,0(zero) # 0 <_start>
    20b2:	5d14                	lw	a3,56(a0)
    ee_u32 total = 0, next = 0, i;
    20b4:	0000                	unimp
    20b6:	3b00                	fld	fs0,48(a4)
                buf  = intpat[(seed >> 3) & 0x3];
    20b8:	0006                	c.slli	zero,0x1
    20ba:	1500                	addi	s0,sp,672
        switch (seed & 0x7)
    20bc:	046d                	addi	s0,s0,27
    20be:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    20c0:	2815                	jal	20f4 <core_init_state+0xb4>
    20c2:	0001                	nop
                next = 8;
    20c4:	0000                	unimp
    20c6:	0405                	addi	s0,s0,1
                buf  = scipat[(seed >> 3) & 0x3];
    20c8:	00000627          	0x627
                buf  = floatpat[(seed >> 3) & 0x3];
    20cc:	2c0a                	fld	fs8,128(sp)
    20ce:	0000                	unimp
            *(p + total + i) = ',';
    20d0:	5100                	lw	s0,32(a0)
    20d2:	0006                	c.slli	zero,0x1
    20d4:	0b00                	addi	s0,sp,400
    20d6:	0064                	addi	s1,sp,12
        switch (seed & 0x7)
    20d8:	0000                	unimp
    20da:	0002                	c.slli64	zero
    20dc:	2c0a                	fld	fs8,128(sp)
    20de:	0000                	unimp
    20e0:	6100                	flw	fs0,0(a0)
    20e2:	0006                	c.slli	zero,0x1
    20e4:	0b00                	addi	s0,sp,400
    20e6:	0064                	addi	s1,sp,12
                buf  = errpat[(seed >> 3) & 0x3];
    20e8:	0000                	unimp
    20ea:	0000                	unimp
        switch (seed & 0x7)
    20ec:	0001f607          	0x1f607
                buf  = floatpat[(seed >> 3) & 0x3];
    20f0:	0500                	addi	s0,sp,640
    20f2:	011f 0c1a 0003      	0x30c1a011f
    20f8:	1a00                	addi	s0,sp,304
    20fa:	0694                	addi	a3,sp,832
    while ((total + next + 1) < size)
    20fc:	0000                	unimp
    20fe:	050c                	addi	a1,sp,640
                buf  = errpat[(seed >> 3) & 0x3];
    2100:	a7080123          	sb	a6,-1438(a6) # fffe2a62 <__freertos_irq_stack_top+0xfefd2a62>
                break;
    2104:	0006                	c.slli	zero,0x1
    2106:	1800                	addi	s0,sp,48
    while ((total + next + 1) < size)
    2108:	0000079b          	0x79b
                next = 8;
    210c:	2505                	jal	272c <core_bench_state+0x1e0>
    210e:	1101                	addi	sp,sp,-32
                *(p + total + i) = buf[i];
    2110:	000006a7          	0x6a7
    2114:	1800                	addi	s0,sp,48
    2116:	05c4                	addi	s1,sp,708
    2118:	0000                	unimp
    211a:	2605                	jal	243a <core_state_transition+0x21e>
    211c:	0701                	addi	a4,a4,0
    211e:	005d                	c.nop	23
    2120:	0000                	unimp
    2122:	1804                	addi	s1,sp,48
    2124:	0300                	addi	s0,sp,384
    2126:	0000                	unimp
    2128:	2705                	jal	2848 <crcu16+0x8c>
    212a:	0b01                	addi	s6,s6,0
    212c:	06ad                	addi	a3,a3,11
    212e:	0000                	unimp
    2130:	0008                	0x8
    2132:	0405                	addi	s0,s0,1
            for (i = 0; i < next; i++)
    2134:	066e                	slli	a2,a2,0x1b
    2136:	0000                	unimp
                *(p + total + i) = buf[i];
    2138:	0405                	addi	s0,s0,1
    213a:	0661                	addi	a2,a2,24
    213c:	0000                	unimp
    213e:	861a                	mv	a2,t1
    2140:	0001                	nop
    2142:	0e00                	addi	s0,sp,784
    2144:	3f05                	jal	2074 <core_init_state+0x34>
    2146:	0801                	addi	a6,a6,0
    2148:	06ec                	addi	a1,sp,844
    214a:	0000                	unimp
    214c:	9018                	0x9018
    214e:	05000007          	0x5000007
            for (i = 0; i < next; i++)
    2152:	0140                	addi	s0,sp,132
                *(p + total + i) = buf[i];
    2154:	ec12                	fsw	ft4,24(sp)
    2156:	0006                	c.slli	zero,0x1
    2158:	0000                	unimp
    215a:	9818                	0x9818
            *(p + total + i) = ',';
    215c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    2160:	0141                	addi	sp,sp,16
    2162:	ec12                	fsw	ft4,24(sp)
    2164:	0006                	c.slli	zero,0x1
    2166:	0600                	addi	s0,sp,768
        switch (seed & 0x7)
    2168:	5e18                	lw	a4,56(a2)
    216a:	0006                	c.slli	zero,0x1
    216c:	0500                	addi	s0,sp,640
    216e:	0142                	slli	sp,sp,0x10
    2170:	3a12                	fld	fs4,288(sp)
    2172:	0000                	unimp
    2174:	0c00                	addi	s0,sp,528
    2176:	0a00                	addi	s0,sp,272
    2178:	003a                	c.slli	zero,0xe
    217a:	0000                	unimp
    217c:	06fc                	addi	a5,sp,844
    217e:	0000                	unimp
    2180:	0000640b          	0x640b
                buf  = intpat[(seed >> 3) & 0x3];
    2184:	0200                	addi	s0,sp,256
    2186:	1b00                	addi	s0,sp,432
    2188:	05d0                	addi	a2,sp,708
    218a:	0259                	addi	tp,tp,22
    218c:	00081107          	0x81107
    2190:	1800                	addi	s0,sp,48
    2192:	073e                	slli	a4,a4,0xf
    while ((total + next + 1) < size)
    2194:	0000                	unimp
    2196:	5b05                	li	s6,-31
                buf  = intpat[(seed >> 3) & 0x3];
    2198:	1802                	slli	a6,a6,0x20
    219a:	0064                	addi	s1,sp,12
                break;
    219c:	0000                	unimp
    219e:	1800                	addi	s0,sp,48
    while ((total + next + 1) < size)
    21a0:	000006b7          	lui	a3,0x0
                next = 4;
    21a4:	5c05                	li	s8,-31
    21a6:	1202                	slli	tp,tp,0x20
    21a8:	05c1                	addi	a1,a1,16
    21aa:	0000                	unimp
                buf  = scipat[(seed >> 3) & 0x3];
    21ac:	1804                	addi	s1,sp,48
    21ae:	000001af          	0x1af
    21b2:	5d05                	li	s10,-31
    21b4:	1002                	c.slli	zero,0x20
    21b6:	0811                	addi	a6,a6,4
    while ((total + next + 1) < size)
    21b8:	0000                	unimp
    21ba:	1808                	addi	a0,sp,48
                buf  = errpat[(seed >> 3) & 0x3];
    21bc:	0560                	addi	s0,sp,652
    21be:	0000                	unimp
                break;
    21c0:	5e05                	li	t3,-31
    21c2:	1702                	slli	a4,a4,0x20
    while ((total + next + 1) < size)
    21c4:	01a6                	slli	gp,gp,0x9
    21c6:	0000                	unimp
    while (total < size)
    21c8:	1824                	addi	s1,sp,56
    21ca:	0350                	addi	a2,sp,388
    21cc:	0000                	unimp
    21ce:	5f05                	li	t5,-31
    21d0:	0f02                	c.slli64	t5
    21d2:	005d                	c.nop	23
}
    21d4:	0000                	unimp
    21d6:	1848                	addi	a0,sp,52
    21d8:	0796                	slli	a5,a5,0x5
    21da:	0000                	unimp
    21dc:	6005                	c.lui	zero,0x1
    21de:	2c02                	fld	fs8,0(sp)
    21e0:	0056                	c.slli	zero,0x15
    21e2:	0000                	unimp
    21e4:	1850                	addi	a2,sp,52
    21e6:	005e                	c.slli	zero,0x17
    21e8:	0000                	unimp
    21ea:	6105                	addi	sp,sp,32
    21ec:	1a02                	slli	s4,s4,0x20
    21ee:	000006b3          	add	a3,zero,zero
    21f2:	1858                	addi	a4,sp,52
                buf  = errpat[(seed >> 3) & 0x3];
    21f4:	028d                	addi	t0,t0,3
    21f6:	0000                	unimp
    21f8:	6205                	lui	tp,0x1
    21fa:	1602                	slli	a2,a2,0x20
}
    21fc:	0110                	addi	a2,sp,128
    21fe:	0000                	unimp
    2200:	1868                	addi	a0,sp,60
    2202:	06c4                	addi	s1,sp,836
    2204:	0000                	unimp
    2206:	6305                	lui	t1,0x1
    2208:	1602                	slli	a2,a2,0x20
    220a:	0110                	addi	a2,sp,128
    220c:	0000                	unimp
    220e:	1870                	addi	a2,sp,60
    2210:	0041                	c.nop	16
    2212:	0000                	unimp
    ee_u32 total = 0, next = 0, i;
    2214:	6405                	lui	s0,0x1
    2216:	1602                	slli	a2,a2,0x20
    2218:	0110                	addi	a2,sp,128
    221a:	0000                	unimp
    ee_u8 *         str = *instr;
    221c:	1878                	addi	a4,sp,60
    221e:	059c                	addi	a5,sp,704
    for (; *str && state != CORE_INVALID; str++)
    2220:	0000                	unimp
    2222:	6505                	lui	a0,0x1
    2224:	1002                	c.slli	zero,0x20
    2226:	0821                	addi	a6,a6,8
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	0000                	unimp
    222a:	1880                	addi	s0,sp,112
    222c:	00000063          	beqz	zero,222c <core_state_transition+0x10>
    2230:	6605                	lui	a2,0x1
    2232:	1002                	c.slli	zero,0x20
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2234:	0831                	addi	a6,a6,12
    2236:	0000                	unimp
    2238:	1888                	addi	a0,sp,112
    223a:	0000063f 0f026705 	0xf0267050000063f
    2242:	005d                	c.nop	23
    2244:	0000                	unimp
    2246:	18a0                	addi	s0,sp,120
    2248:	00c6                	slli	ra,ra,0x11
    224a:	0000                	unimp
                transition_count[CORE_START]++;
    224c:	6805                	lui	a6,0x1
    224e:	1602                	slli	a2,a2,0x20
    for (; *str && state != CORE_INVALID; str++)
    2250:	0110                	addi	a2,sp,128
    2252:	0000                	unimp
    2254:	18a4                	addi	s1,sp,120
    2256:	02ae                	slli	t0,t0,0xb
        if (NEXT_SYMBOL == ',') /* end of this input */
    2258:	0000                	unimp
    225a:	6905                	lui	s2,0x1
    225c:	1602                	slli	a2,a2,0x20
    225e:	0110                	addi	a2,sp,128
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2260:	0000                	unimp
    2262:	18ac                	addi	a1,sp,120
                if (NEXT_SYMBOL == '.')
    2264:	0248                	addi	a0,sp,260
    2266:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2268:	6a05                	lui	s4,0x1
    226a:	1602                	slli	a2,a2,0x20
        if (NEXT_SYMBOL == ',') /* end of this input */
    226c:	0110                	addi	a2,sp,128
    226e:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2270:	18b4                	addi	a3,sp,120
    2272:	03ad                	addi	t2,t2,11
                if (NEXT_SYMBOL == '.')
    2274:	0000                	unimp
    2276:	6b05                	lui	s6,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2278:	1602                	slli	a2,a2,0x20
    227a:	0110                	addi	a2,sp,128
    for (; *str && state != CORE_INVALID; str++)
    227c:	0000                	unimp
    227e:	18bc                	addi	a5,sp,120
        if (NEXT_SYMBOL == ',') /* end of this input */
    2280:	027c                	addi	a5,sp,268
    2282:	0000                	unimp
    2284:	6c05                	lui	s8,0x1
    2286:	1602                	slli	a2,a2,0x20
    for (; *str && state != CORE_INVALID; str++)
    2288:	0110                	addi	a2,sp,128
    228a:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    228c:	18c4                	addi	s1,sp,116
    228e:	047e                	slli	s0,s0,0x1f
    2290:	0000                	unimp
    2292:	6d05                	lui	s10,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2294:	0802                	c.slli64	a6
    2296:	005d                	c.nop	23
    2298:	0000                	unimp
    229a:	00cc                	addi	a1,sp,68
                if (NEXT_SYMBOL == '.')
    229c:	c70a                	sw	sp,140(sp)
    229e:	0005                	c.nop	1
                    transition_count[CORE_INT]++;
    22a0:	2100                	fld	fs0,0(a0)
    22a2:	0008                	0x8
    22a4:	0b00                	addi	s0,sp,400
    22a6:	0064                	addi	s1,sp,12
    22a8:	0000                	unimp
    22aa:	0019                	c.nop	6
    for (; *str && state != CORE_INVALID; str++)
    22ac:	c70a                	sw	sp,140(sp)
    22ae:	0005                	c.nop	1
    22b0:	3100                	fld	fs0,32(a0)
    22b2:	0008                	0x8
        if (NEXT_SYMBOL == ',') /* end of this input */
    22b4:	0b00                	addi	s0,sp,400
    22b6:	0064                	addi	s1,sp,12
    22b8:	0000                	unimp
    22ba:	c70a0007          	0xc70a0007
    22be:	0005                	c.nop	1
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22c0:	4100                	lw	s0,0(a0)
    22c2:	0008                	0x8
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22c4:	0b00                	addi	s0,sp,400
    22c6:	0064                	addi	s1,sp,12
        if (NEXT_SYMBOL == ',') /* end of this input */
    22c8:	0000                	unimp
    22ca:	f01b0017          	auipc	zero,0xf01b0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22ce:	7205                	lui	tp,0xfffe1
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d0:	0702                	c.slli64	a4
    22d2:	0868                	addi	a0,sp,28
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22d4:	0000                	unimp
    22d6:	7f18                	flw	fa4,56(a4)
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d8:	0001                	nop
    22da:	0500                	addi	s0,sp,640
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22dc:	0275                	addi	tp,tp,29
    22de:	0008681b          	0x8681b
                    transition_count[CORE_FLOAT]++;
    22e2:	0000                	unimp
    22e4:	d318                	sw	a4,32(a4)
    22e6:	05000007          	0x5000007
                    state = CORE_INVALID;
    22ea:	0276                	slli	tp,tp,0x1d
                    transition_count[CORE_FLOAT]++;
    22ec:	7818                	flw	fa4,48(s0)
    22ee:	0008                	0x8
    22f0:	7800                	flw	fs0,48(s0)
    22f2:	0a00                	addi	s0,sp,272
    *instr = str;
    22f4:	0306                	slli	t1,t1,0x1
    22f6:	0000                	unimp
}
    22f8:	0878                	addi	a4,sp,28
    22fa:	0000                	unimp
    22fc:	0000640b          	0x640b
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2300:	1d00                	addi	s0,sp,688
    2302:	0a00                	addi	s0,sp,272
    2304:	0064                	addi	s1,sp,12
    2306:	0000                	unimp
    2308:	0888                	addi	a0,sp,80
    230a:	0000                	unimp
    230c:	0000640b          	0x640b
                else if (NEXT_SYMBOL == '.')
    2310:	1d00                	addi	s0,sp,688
    2312:	1c00                	addi	s0,sp,560
    2314:	05f0                	addi	a2,sp,716
    2316:	ad030257          	0xad030257
                    transition_count[CORE_INVALID]++;
    231a:	0008                	0x8
                transition_count[CORE_START]++;
    231c:	1d00                	addi	s0,sp,688
    231e:	000006e3          	beqz	zero,2b2a <crcu32+0xee>
                    state = CORE_INVALID;
    2322:	6e05                	lui	t3,0x1
                    transition_count[CORE_INVALID]++;
    2324:	0b02                	c.slli64	s6
    2326:	06fc                	addi	a5,sp,844
    2328:	0000                	unimp
    232a:	6f1d                	lui	t5,0x7
    *instr = str;
    232c:	0005                	c.nop	1
    232e:	0500                	addi	s0,sp,640
}
    2330:	410b0277          	0x410b0277
    2334:	0008                	0x8
    2336:	0000                	unimp
                    transition_count[CORE_INT]++;
    2338:	c70a                	sw	sp,140(sp)
    233a:	0005                	c.nop	1
    233c:	bd00                	fsd	fs0,56(a0)
    233e:	0008                	0x8
                    state = CORE_INVALID;
    2340:	0b00                	addi	s0,sp,400
    2342:	0064                	addi	s1,sp,12
                    transition_count[CORE_INT]++;
    2344:	0000                	unimp
    2346:	0018                	0x18
    2348:	a106                	fsd	ft1,128(sp)
    234a:	05000007          	0x5000007
    *instr = str;
    234e:	bd04                	fsd	fs1,56(a0)
}
    2350:	0008                	0x8
    2352:	1e00                	addi	s0,sp,816
    2354:	000008d3          	fadd.s	fa7,ft0,ft0,rne
                transition_count[CORE_START]++;
    2358:	6d15                	lui	s10,0x5
    235a:	0004                	0x4
    for (; *str && state != CORE_INVALID; str++)
    235c:	0000                	unimp
    235e:	0405                	addi	s0,s0,1
    2360:	08c8                	addi	a0,sp,84
    2362:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    2364:	0405                	addi	s0,s0,1
    2366:	0190                	addi	a2,sp,192
    2368:	0000                	unimp
    236a:	ea1e                	fsw	ft7,20(sp)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    236c:	0008                	0x8
    236e:	1500                	addi	s0,sp,672
    2370:	005d                	c.nop	23
    2372:	0000                	unimp
    2374:	0500                	addi	s0,sp,640
    2376:	f004                	fsw	fs1,32(s0)
    2378:	0008                	0x8
    237a:	0500                	addi	s0,sp,640
    237c:	df04                	sw	s1,56(a4)
    237e:	0008                	0x8
    2380:	0a00                	addi	s0,sp,272
    2382:	0661                	addi	a2,a2,24
                else if (NEXT_SYMBOL == '.')
    2384:	0000                	unimp
    2386:	0906                	slli	s2,s2,0x1
    2388:	0000                	unimp
    238a:	0000640b          	0x640b
                    transition_count[CORE_S1]++;
    238e:	0200                	addi	s0,sp,256
                    state = CORE_INVALID;
    2390:	1f00                	addi	s0,sp,944
    2392:	053d                	addi	a0,a0,15
    *instr = str;
    2394:	0000                	unimp
    2396:	0705                	addi	a4,a4,1
}
    2398:	046d1703          	lh	a4,70(s10) # 5046 <__exponent+0x3e>
    239c:	0000                	unimp
    239e:	361f 0005 0500      	0x5000005361f
    for (; *str && state != CORE_INVALID; str++)
    23a4:	0308                	addi	a0,sp,384
    23a6:	731d                	lui	t1,0xfffe7
    23a8:	0004                	0x4
    23aa:	0400                	addi	s0,sp,512
        if (NEXT_SYMBOL == ',') /* end of this input */
    23ac:	085d                	addi	a6,a6,23
    23ae:	0000                	unimp
    23b0:	7b06                	flw	fs6,96(sp)
    23b2:	00004813          	xori	a6,zero,0
    23b6:	2000                	fld	fs0,0(s0)
    for (; *str && state != CORE_INVALID; str++)
    23b8:	032d                	addi	t1,t1,11
    23ba:	0000                	unimp
    23bc:	41169a07          	0x41169a07
    23c0:	0000                	unimp
    23c2:	2000                	fld	fs0,0(s0)
                    transition_count[CORE_FLOAT]++;
    23c4:	00000037          	lui	zero,0x0
    23c8:	5d159b07          	0x5d159b07
    23cc:	0000                	unimp
    23ce:	0a00                	addi	s0,sp,272
    for (; *str && state != CORE_INVALID; str++)
    23d0:	05c1                	addi	a1,a1,16
    23d2:	0000                	unimp
    23d4:	0954                	addi	a3,sp,148
    23d6:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    23d8:	0000640b          	0x640b
    23dc:	0100                	addi	s0,sp,128
    23de:	2000                	fld	fs0,0(s0)
    23e0:	0262                	slli	tp,tp,0x18
    23e2:	0000                	unimp
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23e4:	44179e07          	0x44179e07
    23e8:	0009                	c.nop	2
    23ea:	0400                	addi	s0,sp,512
    23ec:	07f9                	addi	a5,a5,30
    23ee:	0000                	unimp
    23f0:	4208                	lw	a0,0(a2)
    23f2:	2011                	jal	23f6 <core_state_transition+0x1da>
                    transition_count[CORE_S2]++;
    23f4:	0009                	c.nop	2
    23f6:	0400                	addi	s0,sp,512
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23f8:	008d                	addi	ra,ra,3
    23fa:	0000                	unimp
                    state = CORE_INVALID;
    23fc:	5e08                	lw	a0,56(a2)
    23fe:	3318                	fld	fa4,32(a4)
    *instr = str;
    2400:	0000                	unimp
    2402:	0400                	addi	s0,sp,512
}
    2404:	06a8                	addi	a0,sp,840
    2406:	0000                	unimp
    2408:	5f08                	lw	a0,56(a4)
    240a:	3a18                	fld	fa4,48(a2)
    for (; *str && state != CORE_INVALID; str++)
    240c:	0000                	unimp
    240e:	0400                	addi	s0,sp,512
    2410:	0000074b          	fnmsub.s	fa4,ft0,ft0,ft0,rne
        if (NEXT_SYMBOL == ',') /* end of this input */
    2414:	6008                	flw	fa0,0(s0)
    2416:	5d18                	lw	a4,56(a0)
    2418:	0000                	unimp
    241a:	0200                	addi	s0,sp,256
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    241c:	0408                	addi	a0,sp,512
    241e:	0495                	addi	s1,s1,5
    2420:	0000                	unimp
    2422:	c604                	sw	s1,8(a2)
    2424:	0002                	c.slli64	zero
    2426:	0800                	addi	s0,sp,16
    2428:	1862                	slli	a6,a6,0x38
    242a:	002c                	addi	a1,sp,8
    242c:	0000                	unimp
    242e:	1704                	addi	s1,sp,928
                    transition_count[CORE_EXPONENT]++;
    2430:	0000                	unimp
    2432:	0800                	addi	s0,sp,16
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2434:	00641863          	bne	s0,t1,2444 <core_state_transition+0x228>
    for (; *str && state != CORE_INVALID; str++)
    2438:	0000                	unimp
    243a:	6320                	flw	fs0,64(a4)
    243c:	0006                	c.slli	zero,0x1
    243e:	0800                	addi	s0,sp,16
        if (NEXT_SYMBOL == ',') /* end of this input */
    2440:	0fba                	slli	t6,t6,0xe
    2442:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    2446:	0007bb0f          	0x7bb0f
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    244a:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    244c:	bc08                	fsd	fa0,56(s0)
    244e:	d610                	sw	a2,40(a2)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2450:	0009                	c.nop	2
    2452:	0d00                	addi	s0,sp,656
    2454:	01ea                	slli	gp,gp,0x1a
    2456:	0000                	unimp
    2458:	be08                	fsd	fa0,56(a2)
    245a:	0009970b          	0x9970b
                    transition_count[CORE_INVALID]++;
    245e:	0000                	unimp
    2460:	0400                	addi	s0,sp,512
    2462:	069a                	slli	a3,a3,0x6
                    state = CORE_INVALID;
    2464:	0000                	unimp
    2466:	bf08                	fsd	fa0,56(a4)
                    transition_count[CORE_INVALID]++;
    2468:	0009bb03          	0x9bb03
    246c:	0400                	addi	s0,sp,512
    246e:	0811                	addi	a6,a6,4
    2470:	0000                	unimp
    2472:	1f09                	addi	t5,t5,-30
    for (; *str && state != CORE_INVALID; str++)
    2474:	9010                	0x9010
    2476:	0009                	c.nop	2
        if (NEXT_SYMBOL == ',') /* end of this input */
    2478:	0f00                	addi	s0,sp,912
    247a:	03de                	slli	t2,t2,0x17
    247c:	0000                	unimp
    247e:	0904                	addi	s1,sp,144
    for (; *str && state != CORE_INVALID; str++)
    2480:	0a161043          	fmadd.d	ft0,fa2,ft1,ft1,rtz
        if (NEXT_SYMBOL == ',') /* end of this input */
    2484:	0000                	unimp
    2486:	fd0d                	bnez	a0,23c0 <core_state_transition+0x1a4>
    2488:	0006                	c.slli	zero,0x1
    248a:	0900                	addi	s0,sp,144
    248c:	0c45                	addi	s8,s8,17
    248e:	096c                	addi	a1,sp,156
    for (; *str && state != CORE_INVALID; str++)
    2490:	0000                	unimp
    2492:	1000                	addi	s0,sp,32
        if (NEXT_SYMBOL == ',') /* end of this input */
    2494:	6469                	lui	s0,0x1a
    2496:	0078                	addi	a4,sp,12
    2498:	4609                	li	a2,2
    249a:	6c0c                	flw	fa1,24(s0)
    for (; *str && state != CORE_INVALID; str++)
    249c:	0009                	c.nop	2
    249e:	0200                	addi	s0,sp,256
        if (NEXT_SYMBOL == ',') /* end of this input */
    24a0:	0f00                	addi	s0,sp,912
    24a2:	061e                	slli	a2,a2,0x7
    24a4:	0000                	unimp
    24a6:	0908                	addi	a0,sp,144
    24a8:	1049                	c.nop	-14
    24aa:	0a3e                	slli	s4,s4,0xf
                transition_count[CORE_START]++;
    24ac:	0000                	unimp
    24ae:	9c0d                	0x9c0d
    for (; *str && state != CORE_INVALID; str++)
    24b0:	09000007          	0x9000007
    24b4:	0a3e194b          	fnmsub.d	fs2,ft8,ft3,ft1,rtz
        if (NEXT_SYMBOL == ',') /* end of this input */
    24b8:	0000                	unimp
    24ba:	0d00                	addi	s0,sp,656
    24bc:	00000773          	0x773
    24c0:	4c09                	li	s8,2
    24c2:	4419                	li	s0,6
    24c4:	000a                	c.slli	zero,0x2
    24c6:	0400                	addi	s0,sp,512
                    transition_count[CORE_S1]++;
    24c8:	0500                	addi	s0,sp,640
    24ca:	1604                	addi	s1,sp,800
    for (; *str && state != CORE_INVALID; str++)
    24cc:	000a                	c.slli	zero,0x2
    24ce:	0500                	addi	s0,sp,640
    24d0:	ee04                	fsw	fs1,24(a2)
    24d2:	0009                	c.nop	2
        if (NEXT_SYMBOL == ',') /* end of this input */
    24d4:	0400                	addi	s0,sp,512
    24d6:	01c9                	addi	gp,gp,18
    24d8:	0000                	unimp
    24da:	5209                	li	tp,-30
    24dc:	6c10                	flw	fa2,24(s0)
    24de:	0009                	c.nop	2
    for (; *str && state != CORE_INVALID; str++)
    24e0:	0400                	addi	s0,sp,512
    24e2:	0000006f          	j	24e2 <core_state_transition+0x2c6>
                    state = CORE_FLOAT;
    24e6:	5309                	li	t1,-30
    24e8:	8410                	0x8410
    24ea:	0009                	c.nop	2
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ec:	0f00                	addi	s0,sp,912
    24ee:	0094                	addi	a3,sp,64
            break;
    24f0:	0000                	unimp
    24f2:	0910                	addi	a2,sp,144
    for (; *str && state != CORE_INVALID; str++)
    24f4:	1059                	c.nop	-10
    24f6:	0a9c                	addi	a5,sp,336
    24f8:	0000                	unimp
    24fa:	4e10                	lw	a2,24(a2)
    24fc:	0900                	addi	s0,sp,144
    24fe:	005d0d5b          	0x5d0d5b
                    state = CORE_EXPONENT;
    2502:	0000                	unimp
    2504:	1000                	addi	s0,sp,32
    2506:	0041                	c.nop	16
    for (; *str && state != CORE_INVALID; str++)
    2508:	5c09                	li	s8,-30
    250a:	9c0d                	0x9c0d
                    state = CORE_S2;
    250c:	000a                	c.slli	zero,0x2
    250e:	0400                	addi	s0,sp,512
    2510:	4210                	lw	a2,0(a2)
    2512:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    2514:	0d5d                	addi	s10,s10,23
    2516:	0a9c                	addi	a5,sp,336
    enum CORE_STATE state = CORE_START;
    2518:	0000                	unimp
    251a:	1008                	addi	a0,sp,32
    251c:	5e090043          	fmadd.q	ft0,fs2,ft0,fa1,rne
                    state = CORE_S1;
    2520:	a20d                	j	2642 <core_bench_state+0xf6>
    2522:	000a                	c.slli	zero,0x2
    2524:	0c00                	addi	s0,sp,528
    2526:	0500                	addi	s0,sp,640
        if (NEXT_SYMBOL == ',') /* end of this input */
    2528:	4a04                	lw	s1,16(a2)
    252a:	000a                	c.slli	zero,0x2
    252c:	0500                	addi	s0,sp,640
    252e:	5604                	lw	s1,40(a2)
    2530:	000a                	c.slli	zero,0x2
    2532:	0400                	addi	s0,sp,512
    for (; *str && state != CORE_INVALID; str++)
    2534:	033e                	slli	t1,t1,0xf
    2536:	0000                	unimp
                    state = CORE_FLOAT;
    2538:	5f09                	li	t5,-30
    253a:	000a6203          	0xa6203
    253e:	0f00                	addi	s0,sp,912
        if (NEXT_SYMBOL == ',') /* end of this input */
    2540:	04b1                	addi	s1,s1,12
    2542:	0000                	unimp
    2544:	0944                	addi	s1,sp,148
    2546:	1071                	c.nop	-4
    2548:	0b85                	addi	s7,s7,1
    254a:	0000                	unimp
{
    254c:	120d                	addi	tp,tp,-29
    254e:	0005                	c.nop	1
    2550:	0900                	addi	s0,sp,144
    2552:	1974                	addi	a3,sp,188
    2554:	096c                	addi	a1,sp,156
    2556:	0000                	unimp
    2558:	0d00                	addi	s0,sp,656
    255a:	0518                	addi	a4,sp,640
    255c:	0000                	unimp
    255e:	7509                	lui	a0,0xfffe2
    2560:	6c19                	lui	s8,0x6
    2562:	0009                	c.nop	2
    2564:	0200                	addi	s0,sp,256
    2566:	1e0d                	addi	t3,t3,-29
    2568:	0005                	c.nop	1
    256a:	0900                	addi	s0,sp,144
    256c:	1976                	slli	s2,s2,0x3d
    256e:	096c                	addi	a1,sp,156
    2570:	0000                	unimp
    2572:	0d04                	addi	s1,sp,656
    2574:	091e                	slli	s2,s2,0x7
    2576:	0000                	unimp
    while (*p != 0)
    2578:	7709                	lui	a4,0xfffe2
    257a:	8519                	srai	a0,a0,0x6
    257c:	0800000b          	0x800000b
    2580:	0e0d                	addi	t3,t3,3
    2582:	09000007          	0x9000007
    ee_u8 *p = memblock;
    2586:	1978                	addi	a4,sp,188
    for (i = 0; i < NUM_CORE_STATES; i++)
    2588:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    258c:	0d18                	addi	a4,sp,656
    258e:	0689                	addi	a3,a3,2
    2590:	0000                	unimp
    2592:	7909                	lui	s2,0xfffe2
    2594:	a319                	j	2a9a <crcu32+0x5e>
    2596:	0009                	c.nop	2
    2598:	1c00                	addi	s0,sp,560
    259a:	ab0d                	j	2acc <crcu32+0x90>
    259c:	0004                	0x4
    259e:	0900                	addi	s0,sp,144
    25a0:	197a                	slli	s2,s2,0x3e
    25a2:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    25a6:	0d20                	addi	s0,sp,664
    25a8:	000001db          	0x1db
    25ac:	7b09                	lui	s6,0xfffe2
    25ae:	3e19                	jal	20c4 <core_init_state+0x84>
    25b0:	000a                	c.slli	zero,0x2
    25b2:	2400                	fld	fs0,8(s0)
    25b4:	6d10                	flw	fa2,24(a0)
    25b6:	7461                	lui	s0,0xffff8
    25b8:	0900                	addi	s0,sp,144
    25ba:	197c                	addi	a5,sp,188
    25bc:	0aa8                	addi	a0,sp,344
    25be:	0000                	unimp
    25c0:	1028                	addi	a0,sp,40
    25c2:	00637263          	bgeu	t1,t1,25c6 <core_bench_state+0x7a>
{
    25c6:	7e09                	lui	t3,0xfffe2
    25c8:	780c                	flw	fa1,48(s0)
    25ca:	0009                	c.nop	2
    25cc:	3800                	fld	fs0,48(s0)
    25ce:	df0d                	beqz	a4,2508 <core_state_transition+0x2ec>
    25d0:	0005                	c.nop	1
    25d2:	0900                	addi	s0,sp,144
    25d4:	0c7f                	0xc7f
    25d6:	0978                	addi	a4,sp,156
    while (*p != 0)
    25d8:	0000                	unimp
    25da:	0d3a                	slli	s10,s10,0xe
    25dc:	04fd                	addi	s1,s1,31
    25de:	0000                	unimp
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    25e0:	8009                	srli	s0,s0,0x2
    25e2:	780c                	flw	fa1,48(s0)
    25e4:	0009                	c.nop	2
    25e6:	3c00                	fld	fs0,56(s0)
    25e8:	b20d                	j	1f0a <core_init_matrix+0x17e>
    25ea:	09000007          	0x9000007
    25ee:	0c81                	addi	s9,s9,0
        final_counts[fstate]++;
    25f0:	0978                	addi	a4,sp,156
    25f2:	0000                	unimp
    25f4:	103e                	c.slli	zero,0x2f
    25f6:	7265                	lui	tp,0xffff9
    25f8:	0072                	c.slli	zero,0x1c
    25fa:	8209                	srli	a2,a2,0x2
    while (*p != 0)
    25fc:	6c0c                	flw	fa1,24(s0)
    25fe:	0009                	c.nop	2
        final_counts[fstate]++;
    2600:	4000                	lw	s0,0(s0)
    2602:	770d                	lui	a4,0xfffe3
    while (*p != 0)
    2604:	0002                	c.slli64	zero
    2606:	0900                	addi	s0,sp,144
        final_counts[fstate]++;
    2608:	1384                	addi	s1,sp,480
    260a:	09d6                	slli	s3,s3,0x15
    260c:	0000                	unimp
    260e:	0042                	c.slli	zero,0x10
    while (*p != 0)
    2610:	280a                	fld	fa6,128(sp)
    2612:	0001                	nop
    p = memblock;
    2614:	9500                	0x9500
    2616:	0b00000b          	0xb00000b
    while (p < (memblock + blksize))
    261a:	0064                	addi	s1,sp,12
    261c:	0000                	unimp
    261e:	51040003          	lb	zero,1296(s0) # ffff8510 <__freertos_irq_stack_top+0xfefe8510>
    2622:	0006                	c.slli	zero,0x1
        if (*p != ',')
    2624:	0900                	addi	s0,sp,144
    2626:	0385                	addi	t2,t2,1
{
    2628:	0ab4                	addi	a3,sp,344
    262a:	0000                	unimp
            *p ^= (ee_u8)seed1;
    262c:	780a                	flw	fa6,160(sp)
    262e:	0009                	c.nop	2
        if (*p != ',')
    2630:	b100                	fsd	fs0,32(a0)
    2632:	0b00000b          	0xb00000b
            *p ^= (ee_u8)seed1;
    2636:	0064                	addi	s1,sp,12
        p += step;
    2638:	0000                	unimp
    263a:	0004                	0x4
    263c:	ea21                	bnez	a2,268c <core_bench_state+0x140>
    263e:	01000007          	0x1000007
    2642:	0f05                	addi	t5,t5,1
    while (p < (memblock + blksize))
    2644:	0ba1                	addi	s7,s7,8
    2646:	0000                	unimp
    2648:	5621                	li	a2,-24
    264a:	0009                	c.nop	2
            *p ^= (ee_u8)seed1;
    264c:	0100                	addi	s0,sp,128
    264e:	0f0a                	slli	t5,t5,0x2
        if (*p != ',')
    2650:	0ba1                	addi	s7,s7,8
    2652:	0000                	unimp
        p += step;
    2654:	f721                	bnez	a4,259c <core_bench_state+0x50>
    2656:	0008                	0x8
    2658:	0100                	addi	s0,sp,128
    265a:	0ba10f0f          	0xba10f0f
    while (p < (memblock + blksize))
    265e:	0000                	unimp
    while (*p != 0)
    2660:	c10a                	sw	sp,128(sp)
    2662:	0005                	c.nop	1
    p = memblock;
    2664:	e500                	fsw	fs0,8(a0)
    2666:	0b00000b          	0xb00000b
    while (*p != 0)
    266a:	0064                	addi	s1,sp,12
    266c:	0000                	unimp
    266e:	0002                	c.slli64	zero
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2670:	4d22                	lw	s10,8(sp)
    2672:	0009                	c.nop	2
    2674:	0100                	addi	s0,sp,128
    2676:	0738                	addi	a4,sp,904
    2678:	0bd5                	addi	s7,s7,21
    267a:	0000                	unimp
    267c:	0305                	addi	t1,t1,1
    267e:	0000                	unimp
        final_counts[fstate]++;
    2680:	0000                	unimp
    2682:	0008de23          	0x8de23
    2686:	0100                	addi	s0,sp,128
    2688:	0154                	addi	a3,sp,132
    268a:	005d                	c.nop	23
    while (*p != 0)
    268c:	0000                	unimp
    268e:	007c                	addi	a5,sp,12
        final_counts[fstate]++;
    2690:	0000                	unimp
    2692:	0cc4                	addi	s1,sp,596
    while (*p != 0)
    2694:	0000                	unimp
    2696:	9c01                	0x9c01
        final_counts[fstate]++;
    2698:	000012eb          	0x12eb
    269c:	d424                	sw	s1,104(s0)
    269e:	0008                	0x8
    while (*p != 0)
    26a0:	0100                	addi	s0,sp,128
    26a2:	0a54                	addi	a3,sp,276
    p = memblock;
    26a4:	005d                	c.nop	23
    26a6:	0000                	unimp
    while (p < (memblock + blksize))
    26a8:	2260                	fld	fs0,192(a2)
    26aa:	0000                	unimp
        if (*p != ',')
    26ac:	d924                	sw	s1,112(a0)
    26ae:	0008                	0x8
    26b0:	0100                	addi	s0,sp,128
    26b2:	1654                	addi	a3,sp,804
            *p ^= (ee_u8)seed2;
    26b4:	000012eb          	0x12eb
        if (*p != ',')
    26b8:	2280                	fld	fs0,0(a3)
    26ba:	0000                	unimp
            *p ^= (ee_u8)seed2;
    26bc:	6925                	lui	s2,0x9
    26be:	0100                	addi	s0,sp,128
        p += step;
    26c0:	0978125b          	0x978125b
    26c4:	0000                	unimp
    26c6:	22ac                	fld	fa1,64(a3)
    26c8:	0000                	unimp
    26ca:	6a25                	lui	s4,0x9
    while (p < (memblock + blksize))
    26cc:	0100                	addi	s0,sp,128
    26ce:	0978155b          	0x978155b
    26d2:	0000                	unimp
    26d4:	2429                	jal	28de <crcu16+0x122>
    26d6:	0000                	unimp
        crc = crcu32(final_counts[i], crc);
    26d8:	1f26                	slli	t5,t5,0x29
    26da:	0008                	0x8
    26dc:	0100                	addi	s0,sp,128
    26de:	09781c5b          	0x9781c5b
    26e2:	0000                	unimp
    26e4:	246d                	jal	298e <crcu16+0x1d2>
    26e6:	0000                	unimp
    26e8:	6526                	flw	fa0,72(sp)
    26ea:	0008                	0x8
        crc = crcu32(track_counts[i], crc);
    26ec:	0100                	addi	s0,sp,128
    26ee:	125c                	addi	a5,sp,292
    26f0:	096c                	addi	a1,sp,156
    26f2:	0000                	unimp
    26f4:	000024d7          	0x24d7
    26f8:	4026                	0x4026
    26fa:	0009                	c.nop	2
    26fc:	0100                	addi	s0,sp,128
    26fe:	215c                	fld	fa5,128(a0)
    2700:	096c                	addi	a1,sp,156
    2702:	0000                	unimp
    for (i = 0; i < NUM_CORE_STATES; i++)
    2704:	2569                	jal	2d8e <crcu32+0x352>
    2706:	0000                	unimp
}
    2708:	ef26                	fsw	fs1,156(sp)
    270a:	0008                	0x8
    270c:	0100                	addi	s0,sp,128
    270e:	125d                	addi	tp,tp,-9
    2710:	0978                	addi	a4,sp,156
    2712:	0000                	unimp
    2714:	2629                	jal	2a1e <crcu16+0x262>
    2716:	0000                	unimp
    2718:	3526                	fld	fa0,104(sp)
    271a:	0009                	c.nop	2
    271c:	0100                	addi	s0,sp,128
    271e:	125e                	slli	tp,tp,0x37
    2720:	0960                	addi	s0,sp,156
    2722:	0000                	unimp
    2724:	26d0                	fld	fa2,136(a3)
    2726:	0000                	unimp
    2728:	00065627          	0x65627
    272c:	0100                	addi	s0,sp,128
    272e:	125f 12f1 0000      	0x12f1125f
        p += step;
    2734:	6fac9103          	lh	sp,1786(s9)
    2738:	00091827          	0x91827
    while (p < (memblock + blksize))
    273c:	0100                	addi	s0,sp,128
    273e:	0b61                	addi	s6,s6,24
    2740:	1301                	addi	t1,t1,-32
    2742:	0000                	unimp
    while (p < (memblock + blksize))
    2744:	6ff09103          	lh	sp,1791(ra) # 6ff <main+0x683>
    2748:	9828                	0x9828
    274a:	d7000003          	lb	zero,-656(zero) # fffffd70 <__freertos_irq_stack_top+0xfefefd70>
    274e:	000c                	0xc
    while (*p != 0)
    2750:	2500                	fld	fs0,8(a0)
    2752:	00787463          	bgeu	a6,t2,275a <get_seed_32+0x2>
    2756:	bd01                	j	2566 <core_bench_state+0x1a>
    switch (i)
    2758:	a310                	fsd	fa2,0(a4)
    275a:	0009                	c.nop	2
    275c:	1a00                	addi	s0,sp,304
    275e:	00000027          	0x27
    2762:	c028                	sw	a0,64(s0)
    2764:	c9000003          	lb	zero,-880(zero) # fffffc90 <__freertos_irq_stack_top+0xfefefc90>
    2768:	000d                	c.nop	3
    276a:	2600                	fld	fs0,8(a2)
    276c:	000008e3          	beqz	zero,2f7c <crc16+0x30>
    2770:	e001                	bnez	s0,2770 <get_seed_32+0x18>
    2772:	e212                	fsw	ft4,4(sp)
    2774:	0009                	c.nop	2
    2776:	6a00                	flw	fs0,16(a2)
            retval = seed5_volatile;
    2778:	26000027          	0x26000027
    277c:	0855                	addi	a6,a6,21
    277e:	0000                	unimp
            break;
    2780:	e101                	bnez	a0,2780 <get_seed_32+0x28>
    2782:	a312                	fsd	ft4,384(sp)
            retval = seed1_volatile;
    2784:	0009                	c.nop	2
    2786:	aa00                	fsd	fs0,16(a2)
    2788:	29000027          	0x29000027
            break;
    278c:	1312                	slli	t1,t1,0x24
    278e:	0000                	unimp
            retval = seed2_volatile;
    2790:	029c                	addi	a5,sp,320
    2792:	0000                	unimp
    2794:	03d8                	addi	a4,sp,452
    2796:	0000                	unimp
            break;
    2798:	e801                	bnez	s0,27a8 <get_seed_32+0x50>
    279a:	8d0d                	sub	a0,a0,a1
            retval = seed3_volatile;
    279c:	000d                	c.nop	3
    279e:	2a00                	fld	fs0,16(a2)
    27a0:	00001323          	sh	zero,6(zero) # 6 <_start+0x6>
            break;
    27a4:	27c8                	fld	fa0,136(a5)
    27a6:	0000                	unimp
            retval = seed4_volatile;
    27a8:	0003d82b          	0x3d82b
    27ac:	2c00                	fld	fs0,24(s0)
    27ae:	0000132f          	0x132f
            break;
    27b2:	27ec                	fld	fa1,200(a5)
            retval = 0;
    27b4:	0000                	unimp
    27b6:	392c                	fld	fa1,112(a0)
}
    27b8:	23000013          	li	zero,560
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27bc:	0028                	addi	a0,sp,8
    27be:	2c00                	fld	fs0,24(s0)
    crc = crcu8((ee_u8)(newval), crc);
    27c0:	1345                	addi	t1,t1,-15
    27c2:	0000                	unimp
        if (x16 == 1)
    27c4:	2841                	jal	2854 <crcu16+0x98>
    27c6:	0000                	unimp
        data >>= 1;
    27c8:	512c                	lw	a1,96(a0)
    27ca:	65000013          	li	zero,1616
        if (x16 == 1)
    27ce:	0028                	addi	a0,sp,8
    27d0:	2d00                	fld	fs0,24(a0)
    27d2:	0304                	addi	s1,sp,384
            crc |= 0x8000;
    27d4:	0000                	unimp
    27d6:	13ea                	slli	t2,t2,0x3a
    27d8:	0000                	unimp
    27da:	0d5f 0000 012e      	0x12e00000d5f
    27e0:	025a                	slli	tp,tp,0x16
    27e2:	0079                	c.nop	30
    27e4:	012e                	slli	sp,sp,0xb
    27e6:	0031015b          	0x31015b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27ea:	0003102f          	0x3102f
        if (x16 == 1)
    27ee:	f600                	fsw	fs0,40(a2)
    27f0:	2d000013          	li	zero,720
        data >>= 1;
    27f4:	0324                	addi	s1,sp,392
    27f6:	0000                	unimp
        if (x16 == 1)
    27f8:	13ea                	slli	t2,t2,0x3a
    27fa:	0000                	unimp
            crc |= 0x8000;
    27fc:	0d82                	c.slli64	s11
    27fe:	0000                	unimp
    2800:	012e                	slli	sp,sp,0xb
    2802:	025a                	slli	tp,tp,0x16
    2804:	0079                	c.nop	30
    2806:	012e                	slli	sp,sp,0xb
    2808:	ff09025b          	0xff09025b
    280c:	2f00                	fld	fs0,24(a4)
    280e:	0330                	addi	a2,sp,392
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2810:	0000                	unimp
    2812:	13f6                	slli	t2,t2,0x3d
        if (x16 == 1)
    2814:	0000                	unimp
    2816:	0000                	unimp
        data >>= 1;
    2818:	c42d                	beqz	s0,2882 <crcu16+0xc6>
    281a:	0002                	c.slli64	zero
        if (x16 == 1)
    281c:	0200                	addi	s0,sp,256
    281e:	0014                	0x14
    2820:	a400                	fsd	fs0,8(s0)
    2822:	000d                	c.nop	3
            crc |= 0x8000;
    2824:	2e00                	fld	fs0,24(a2)
    2826:	5a01                	li	s4,-32
    2828:	0305                	addi	t1,t1,1
    282a:	0070                	addi	a2,sp,12
    282c:	0100                	addi	s0,sp,128
    282e:	2f00                	fld	fs0,24(a4)
    2830:	02e4                	addi	s1,sp,332
    2832:	0000                	unimp
    2834:	140d                	addi	s0,s0,-29
    2836:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2838:	0003482f          	0x3482f
        if (x16 == 1)
    283c:	1900                	addi	s0,sp,176
    283e:	0014                	0x14
        data >>= 1;
    2840:	2f00                	fld	fs0,24(a4)
    2842:	0350                	addi	a2,sp,388
        if (x16 == 1)
    2844:	0000                	unimp
    2846:	1425                	addi	s0,s0,-23
    2848:	0000                	unimp
    284a:	0003582f          	0x3582f
            crc |= 0x8000;
    284e:	3100                	fld	fs0,32(a0)
    2850:	0014                	0x14
    2852:	0000                	unimp
    2854:	e42d                	bnez	s0,28be <crcu16+0x102>
    2856:	0000                	unimp
    2858:	3d00                	fld	fs0,56(a0)
    285a:	0014                	0x14
    285c:	ec00                	fsw	fs0,24(s0)
    285e:	000d                	c.nop	3
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2860:	2e00                	fld	fs0,24(a2)
    2862:	5a01                	li	s4,-32
        if (x16 == 1)
    2864:	6fee9103          	lh	sp,1790(t4) # 16fe <iterate+0x72>
        data >>= 1;
    2868:	012e                	slli	sp,sp,0xb
    286a:	9c91035b          	0x9c91035b
        if (x16 == 1)
    286e:	5c012e6f          	jal	t3,14e2e <_data_lma+0x9cb6>
    2872:	5b01f303          	0x5b01f303
            crc |= 0x8000;
    2876:	2d00                	fld	fs0,24(a0)
    2878:	00f4                	addi	a3,sp,76
    287a:	0000                	unimp
    287c:	1402                	slli	s0,s0,0x20
    287e:	0000                	unimp
    2880:	00000e03          	lb	t3,0(zero) # 0 <_start>
    2884:	012e                	slli	sp,sp,0xb
    2886:	055a                	slli	a0,a0,0x16
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2888:	00002003          	lw	zero,0(zero) # 0 <_start>
        if (x16 == 1)
    288c:	0001                	nop
    288e:	002d                	c.nop	11
        data >>= 1;
    2890:	0001                	nop
    2892:	4900                	lw	s0,16(a0)
        if (x16 == 1)
    2894:	0014                	0x14
    2896:	1600                	addi	s0,sp,800
    2898:	000e                	c.slli	zero,0x3
    289a:	2e00                	fld	fs0,24(a2)
            crc |= 0x8000;
    289c:	5a01                	li	s4,-32
    289e:	3101                	jal	249e <core_state_transition+0x282>
    28a0:	2d00                	fld	fs0,24(a0)
    28a2:	0110                	addi	a2,sp,128
    28a4:	0000                	unimp
    28a6:	1449                	addi	s0,s0,-14
    28a8:	0000                	unimp
    28aa:	0e29                	addi	t3,t3,10
    28ac:	0000                	unimp
    28ae:	012e                	slli	sp,sp,0xb
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28b0:	015a                	slli	sp,sp,0x16
    28b2:	0032                	c.slli	zero,0xc
        if (x16 == 1)
    28b4:	202d                	jal	28de <crcu16+0x122>
    28b6:	0001                	nop
        data >>= 1;
    28b8:	4900                	lw	s0,16(a0)
    28ba:	0014                	0x14
        if (x16 == 1)
    28bc:	3c00                	fld	fs0,56(s0)
    28be:	000e                	c.slli	zero,0x3
    28c0:	2e00                	fld	fs0,24(a2)
    28c2:	5a01                	li	s4,-32
            crc |= 0x8000;
    28c4:	3301                	jal	25c4 <core_bench_state+0x78>
    28c6:	2d00                	fld	fs0,24(a0)
    28c8:	0130                	addi	a2,sp,136
    28ca:	0000                	unimp
    28cc:	1449                	addi	s0,s0,-14
    28ce:	0000                	unimp
    28d0:	00000e4f          	fnmadd.s	ft8,ft0,ft0,ft0,rne
    28d4:	012e                	slli	sp,sp,0xb
    28d6:	015a                	slli	sp,sp,0x16
        if (x16 == 1)
    28d8:	0034                	addi	a3,sp,8
    28da:	442d                	li	s0,11
    28dc:	0001                	nop
    28de:	0200                	addi	s0,sp,256
    28e0:	0014                	0x14
    28e2:	6600                	flw	fs0,8(a2)
            crc |= 0x8000;
    28e4:	000e                	c.slli	zero,0x3
    28e6:	2e00                	fld	fs0,24(a2)
    28e8:	5a01                	li	s4,-32
    28ea:	0305                	addi	t1,t1,1
    28ec:	002c                	addi	a1,sp,8
    28ee:	0100                	addi	s0,sp,128
    28f0:	2d00                	fld	fs0,24(a0)
    28f2:	0150                	addi	a2,sp,132
    28f4:	0000                	unimp
    28f6:	1449                	addi	s0,s0,-14
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28f8:	0000                	unimp
    28fa:	0e79                	addi	t3,t3,30
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28fc:	0000                	unimp
    28fe:	012e                	slli	sp,sp,0xb
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2900:	015a                	slli	sp,sp,0x16
    2902:	0035                	c.nop	13
        if (x16 == 1)
    2904:	642d                	lui	s0,0xb
    2906:	0001                	nop
        data >>= 1;
    2908:	0200                	addi	s0,sp,256
    290a:	0014                	0x14
        if (x16 == 1)
    290c:	9000                	0x9000
    290e:	000e                	c.slli	zero,0x3
    2910:	2e00                	fld	fs0,24(a2)
    2912:	5a01                	li	s4,-32
            crc |= 0x8000;
    2914:	0305                	addi	t1,t1,1
    2916:	0038                	addi	a4,sp,8
    2918:	0100                	addi	s0,sp,128
    291a:	2d00                	fld	fs0,24(a0)
    291c:	017c                	addi	a5,sp,140
    291e:	0000                	unimp
    2920:	1402                	slli	s0,s0,0x20
    2922:	0000                	unimp
    2924:	00000ea7          	0xea7
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2928:	012e                	slli	sp,sp,0xb
    292a:	055a                	slli	a0,a0,0x16
        if (x16 == 1)
    292c:	00005803          	lhu	a6,0(zero) # 0 <_start>
        data >>= 1;
    2930:	0001                	nop
    2932:	ac2d                	j	2b6c <crcu32+0x130>
        if (x16 == 1)
    2934:	0001                	nop
    2936:	0200                	addi	s0,sp,256
    2938:	0014                	0x14
    293a:	be00                	fsd	fs0,56(a2)
            crc |= 0x8000;
    293c:	000e                	c.slli	zero,0x3
    293e:	2e00                	fld	fs0,24(a2)
    2940:	5a01                	li	s4,-32
    2942:	0305                	addi	t1,t1,1
    2944:	0064                	addi	s1,sp,12
    2946:	0100                	addi	s0,sp,128
    2948:	2f00                	fld	fs0,24(a4)
    294a:	0280                	addi	s0,sp,320
    294c:	0000                	unimp
    294e:	1455                	addi	s0,s0,-11
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2950:	0000                	unimp
    2952:	0003b82f          	0x3b82f
        if (x16 == 1)
    2956:	0d00                	addi	s0,sp,656
        data >>= 1;
    2958:	0014                	0x14
    295a:	2d00                	fld	fs0,24(a0)
        if (x16 == 1)
    295c:	03d8                	addi	a4,sp,452
    295e:	0000                	unimp
    2960:	1312                	slli	t1,t1,0x24
    2962:	0000                	unimp
            crc |= 0x8000;
    2964:	0eee                	slli	t4,t4,0x1b
    2966:	0000                	unimp
    2968:	012e                	slli	sp,sp,0xb
    296a:	0c5a                	slli	s8,s8,0x16
    296c:	0091                	addi	ra,ra,4
    296e:	0078                	addi	a4,sp,12
    2970:	7922                	flw	fs2,40(sp)
    2972:	2200                	fld	fs0,0(a2)
    2974:	540a                	lw	s0,160(sp)
    2976:	1c08                	addi	a0,sp,560
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2978:	2f00                	fld	fs0,24(a4)
    297a:	03e0                	addi	s0,sp,460
        if (x16 == 1)
    297c:	0000                	unimp
    297e:	1419                	addi	s0,s0,-26
        data >>= 1;
    2980:	0000                	unimp
    2982:	0003e82f          	0x3e82f
        if (x16 == 1)
    2986:	2500                	fld	fs0,8(a0)
    2988:	0014                	0x14
    298a:	2d00                	fld	fs0,24(a0)
            crc |= 0x8000;
    298c:	040c                	addi	a1,sp,512
    298e:	0000                	unimp
    2990:	1461                	addi	s0,s0,-8
    2992:	0000                	unimp
    2994:	00000f13          	li	t5,0
    2998:	012e                	slli	sp,sp,0xb
    299a:	0030015b          	0x30015b
    299e:	0004202f          	amoadd.w	zero,zero,(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a2:	6100                	flw	fs0,0(a0)
        if (x16 == 1)
    29a4:	0014                	0x14
    29a6:	2f00                	fld	fs0,24(a4)
        data >>= 1;
    29a8:	0434                	addi	a3,sp,520
    29aa:	0000                	unimp
        if (x16 == 1)
    29ac:	1461                	addi	s0,s0,-8
    29ae:	0000                	unimp
    29b0:	0004442f          	0x4442f
            crc |= 0x8000;
    29b4:	6100                	flw	fs0,0(a0)
    29b6:	0014                	0x14
    29b8:	2d00                	fld	fs0,24(a0)
    29ba:	0480                	addi	s0,sp,576
    29bc:	0000                	unimp
    29be:	1402                	slli	s0,s0,0x20
    29c0:	0000                	unimp
    29c2:	0f45                	addi	t5,t5,17
    29c4:	0000                	unimp
    29c6:	012e                	slli	sp,sp,0xb
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29c8:	055a                	slli	a0,a0,0x16
    29ca:	00010803          	lb	a6,0(sp) # 25a0000 <__freertos_irq_stack_top+0x1590000>
        if (x16 == 1)
    29ce:	0001                	nop
        data >>= 1;
    29d0:	5c2d                	li	s8,-21
    29d2:	0005                	c.nop	1
        if (x16 == 1)
    29d4:	6d00                	flw	fs0,24(a0)
    29d6:	0014                	0x14
    29d8:	6800                	flw	fs0,16(s0)
    29da:	2e00000f          	0x2e00000f
            crc |= 0x8000;
    29de:	5a01                	li	s4,-32
    29e0:	0305                	addi	t1,t1,1
    29e2:	0160                	addi	s0,sp,140
    29e4:	0100                	addi	s0,sp,128
    29e6:	012e                	slli	sp,sp,0xb
    29e8:	008a025b          	0x8a025b
    29ec:	012e                	slli	sp,sp,0xb
    29ee:	025d                	addi	tp,tp,23
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29f0:	0085                	addi	ra,ra,1
    29f2:	2d00                	fld	fs0,24(a0)
        if (x16 == 1)
    29f4:	05a8                	addi	a0,sp,712
    29f6:	0000                	unimp
        data >>= 1;
    29f8:	146d                	addi	s0,s0,-5
    29fa:	0000                	unimp
        if (x16 == 1)
    29fc:	00000f8b          	0xf8b
    2a00:	012e                	slli	sp,sp,0xb
    2a02:	055a                	slli	a0,a0,0x16
            crc |= 0x8000;
    2a04:	00019003          	lh	zero,0(gp) # 1001430 <__global_pointer$>
    2a08:	2e01                	jal	2d18 <crcu32+0x2dc>
    2a0a:	5b01                	li	s6,-32
    2a0c:	8a02                	jr	s4
    2a0e:	2e00                	fld	fs0,24(a2)
    2a10:	5d01                	li	s10,-32
    2a12:	8602                	jr	a2
    2a14:	0000                	unimp
    2a16:	102d                	c.nop	-21
        if (x16 == 1)
    2a18:	0006                	c.slli	zero,0x1
    2a1a:	7900                	flw	fs0,48(a0)
    2a1c:	0014                	0x14
    2a1e:	9f00                	0x9f00
    2a20:	2e00000f          	0x2e00000f
            crc |= 0x8000;
    2a24:	5a01                	li	s4,-32
    2a26:	8402                	jr	s0
    2a28:	0000                	unimp
    2a2a:	602d                	c.lui	zero,0xb
    2a2c:	0006                	c.slli	zero,0x1
    2a2e:	8500                	0x8500
    2a30:	0014                	0x14
    2a32:	b400                	fsd	fs0,40(s0)
    2a34:	2e00000f          	0x2e00000f
}
    2a38:	5d01                	li	s10,-32
    2a3a:	6fd49103          	lh	sp,1789(s1)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a3e:	2d00                	fld	fs0,24(a0)
    crc = crcu8((ee_u8)(newval), crc);
    2a40:	0690                	addi	a2,sp,832
    2a42:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    2a44:	1402                	slli	s0,s0,0x20
    2a46:	0000                	unimp
        if (x16 == 1)
    2a48:	00000fcb          	fnmsub.s	ft11,ft0,ft0,ft0,rne
    return crcu16((ee_u16)newval, crc);
    2a4c:	012e                	slli	sp,sp,0xb
    2a4e:	055a                	slli	a0,a0,0x16
        data >>= 1;
    2a50:	0000d803          	lhu	a6,0(ra)
        if (x16 == 1)
    2a54:	0001                	nop
    2a56:	e82d                	bnez	s0,2ac8 <crcu32+0x8c>
    2a58:	0006                	c.slli	zero,0x1
    2a5a:	6d00                	flw	fs0,24(a0)
            crc |= 0x8000;
    2a5c:	0014                	0x14
    2a5e:	ee00                	fsw	fs0,24(a2)
    2a60:	2e00000f          	0x2e00000f
    2a64:	5a01                	li	s4,-32
    2a66:	0305                	addi	t1,t1,1
    2a68:	01c4                	addi	s1,sp,196
    2a6a:	0100                	addi	s0,sp,128
    2a6c:	012e                	slli	sp,sp,0xb
    2a6e:	008a025b          	0x8a025b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a72:	012e                	slli	sp,sp,0xb
        if (x16 == 1)
    2a74:	025d                	addi	tp,tp,23
    2a76:	0082                	c.slli64	ra
    2a78:	2f00                	fld	fs0,24(a4)
    2a7a:	071c                	addi	a5,sp,896
        data >>= 1;
    2a7c:	0000                	unimp
    2a7e:	1491                	addi	s1,s1,-28
        if (x16 == 1)
    2a80:	0000                	unimp
    2a82:	342d                	jal	24ac <core_state_transition+0x290>
            crc |= 0x8000;
    2a84:	6d000007          	0x6d000007
    2a88:	0014                	0x14
    2a8a:	0e00                	addi	s0,sp,784
    2a8c:	0010                	0x10
    2a8e:	2e00                	fld	fs0,24(a2)
    2a90:	5a01                	li	s4,-32
    2a92:	0305                	addi	t1,t1,1
    2a94:	01f4                	addi	a3,sp,204
    2a96:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a98:	2d00                	fld	fs0,24(a0)
    2a9a:	0748                	addi	a0,sp,900
        if (x16 == 1)
    2a9c:	0000                	unimp
    2a9e:	146d                	addi	s0,s0,-5
        data >>= 1;
    2aa0:	0000                	unimp
    2aa2:	0000102b          	0x102b
        if (x16 == 1)
    2aa6:	012e                	slli	sp,sp,0xb
    2aa8:	055a                	slli	a0,a0,0x16
    2aaa:	00020c03          	lb	s8,0(tp) # ffff9000 <__freertos_irq_stack_top+0xfefe9000>
            crc |= 0x8000;
    2aae:	2e01                	jal	2dbe <crcu32+0x382>
    2ab0:	5b01                	li	s6,-32
    2ab2:	8402                	jr	s0
    2ab4:	0000                	unimp
    2ab6:	542d                	li	s0,-21
    2ab8:	31000007          	0x31000007
    2abc:	0014                	0x14
    2abe:	3f00                	fld	fs0,56(a4)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac0:	0010                	0x10
    2ac2:	2e00                	fld	fs0,24(a2)
        if (x16 == 1)
    2ac4:	5a01                	li	s4,-32
    2ac6:	8402                	jr	s0
        data >>= 1;
    2ac8:	0000                	unimp
    2aca:	6c2d                	lui	s8,0xb
        if (x16 == 1)
    2acc:	6d000007          	0x6d000007
    2ad0:	0014                	0x14
    2ad2:	5600                	lw	s0,40(a2)
            crc |= 0x8000;
    2ad4:	0010                	0x10
    2ad6:	2e00                	fld	fs0,24(a2)
    2ad8:	5a01                	li	s4,-32
    2ada:	0305                	addi	t1,t1,1
    2adc:	0224                	addi	s1,sp,264
    2ade:	0100                	addi	s0,sp,128
    2ae0:	2d00                	fld	fs0,24(a0)
    2ae2:	0778                	addi	a4,sp,908
    2ae4:	0000                	unimp
    2ae6:	1431                	addi	s0,s0,-20
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ae8:	0000                	unimp
    2aea:	106a                	c.slli	zero,0x3a
        if (x16 == 1)
    2aec:	0000                	unimp
    2aee:	012e                	slli	sp,sp,0xb
        data >>= 1;
    2af0:	025a                	slli	tp,tp,0x16
    2af2:	0084                	addi	s1,sp,64
        if (x16 == 1)
    2af4:	2d00                	fld	fs0,24(a0)
    2af6:	07c0                	addi	s0,sp,964
    2af8:	0000                	unimp
    2afa:	1431                	addi	s0,s0,-20
            crc |= 0x8000;
    2afc:	0000                	unimp
    2afe:	107e                	c.slli	zero,0x3f
    2b00:	0000                	unimp
    2b02:	012e                	slli	sp,sp,0xb
    2b04:	025a                	slli	tp,tp,0x16
    2b06:	0084                	addi	s1,sp,64
    2b08:	2d00                	fld	fs0,24(a0)
    2b0a:	07f0                	addi	a2,sp,972
    2b0c:	0000                	unimp
    2b0e:	146d                	addi	s0,s0,-5
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b10:	0000                	unimp
    2b12:	1095                	addi	ra,ra,-27
        if (x16 == 1)
    2b14:	0000                	unimp
    2b16:	012e                	slli	sp,sp,0xb
        data >>= 1;
    2b18:	055a                	slli	a0,a0,0x16
    2b1a:	00023c03          	0x23c03
        if (x16 == 1)
    2b1e:	0001                	nop
    2b20:	fc2d                	bnez	s0,2a9a <crcu32+0x5e>
    2b22:	31000007          	0x31000007
            crc |= 0x8000;
    2b26:	0014                	0x14
    2b28:	a900                	fsd	fs0,16(a0)
    2b2a:	0010                	0x10
    2b2c:	2e00                	fld	fs0,24(a2)
    2b2e:	5a01                	li	s4,-32
    2b30:	8402                	jr	s0
    2b32:	0000                	unimp
    2b34:	402d                	c.li	zero,11
    2b36:	0008                	0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b38:	6d00                	flw	fs0,24(a0)
    2b3a:	0014                	0x14
        if (x16 == 1)
    2b3c:	c000                	sw	s0,0(s0)
    2b3e:	0010                	0x10
        data >>= 1;
    2b40:	2e00                	fld	fs0,24(a2)
    2b42:	5a01                	li	s4,-32
        if (x16 == 1)
    2b44:	0305                	addi	t1,t1,1
    2b46:	0294                	addi	a3,sp,320
    2b48:	0100                	addi	s0,sp,128
    2b4a:	2d00                	fld	fs0,24(a0)
            crc |= 0x8000;
    2b4c:	0854                	addi	a3,sp,20
    2b4e:	0000                	unimp
    2b50:	146d                	addi	s0,s0,-5
    2b52:	0000                	unimp
    2b54:	10e0                	addi	s0,sp,108
    2b56:	0000                	unimp
    2b58:	012e                	slli	sp,sp,0xb
    2b5a:	055a                	slli	a0,a0,0x16
    2b5c:	0002b803          	0x2b803
        if (x16 == 1)
    2b60:	2e01                	jal	2e70 <crcu32+0x434>
    2b62:	5b01                	li	s6,-32
    2b64:	0305                	addi	t1,t1,1
    2b66:	02ac                	addi	a1,sp,328
    2b68:	0100                	addi	s0,sp,128
    2b6a:	2d00                	fld	fs0,24(a0)
            crc |= 0x8000;
    2b6c:	0868                	addi	a0,sp,28
    2b6e:	0000                	unimp
    2b70:	146d                	addi	s0,s0,-5
    2b72:	0000                	unimp
    2b74:	1100                	addi	s0,sp,160
    2b76:	0000                	unimp
    2b78:	012e                	slli	sp,sp,0xb
    2b7a:	055a                	slli	a0,a0,0x16
    2b7c:	0002d403          	lhu	s0,0(t0) # 4e7c <memset+0xb4>
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b80:	2e01                	jal	2e90 <crcu32+0x454>
    2b82:	5b01                	li	s6,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b84:	0305                	addi	t1,t1,1
    2b86:	02d0                	addi	a2,sp,324
        if (x16 == 1)
    2b88:	0100                	addi	s0,sp,128
    2b8a:	2d00                	fld	fs0,24(a0)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b8c:	0880                	addi	s0,sp,80
    2b8e:	0000                	unimp
        data >>= 1;
    2b90:	146d                	addi	s0,s0,-5
    2b92:	0000                	unimp
        if (x16 == 1)
    2b94:	1120                	addi	s0,sp,168
    2b96:	0000                	unimp
    2b98:	012e                	slli	sp,sp,0xb
    2b9a:	055a                	slli	a0,a0,0x16
            crc |= 0x8000;
    2b9c:	0002f403          	0x2f403
    2ba0:	2e01                	jal	2eb0 <crcu32+0x474>
    2ba2:	5b01                	li	s6,-32
    2ba4:	0305                	addi	t1,t1,1
    2ba6:	02ec                	addi	a1,sp,332
    2ba8:	0100                	addi	s0,sp,128
    2baa:	2d00                	fld	fs0,24(a0)
    2bac:	0894                	addi	a3,sp,80
    2bae:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb0:	146d                	addi	s0,s0,-5
    2bb2:	0000                	unimp
        if (x16 == 1)
    2bb4:	113d                	addi	sp,sp,-17
    2bb6:	0000                	unimp
        data >>= 1;
    2bb8:	012e                	slli	sp,sp,0xb
    2bba:	055a                	slli	a0,a0,0x16
        if (x16 == 1)
    2bbc:	00030c03          	lb	s8,0(t1) # fffe7000 <__freertos_irq_stack_top+0xfefd7000>
    2bc0:	2e01                	jal	2ed0 <crcu32+0x494>
    2bc2:	5b01                	li	s6,-32
            crc |= 0x8000;
    2bc4:	8302                	jr	t1
    2bc6:	0000                	unimp
    2bc8:	002d                	c.nop	11
    2bca:	0009                	c.nop	2
    2bcc:	6d00                	flw	fs0,24(a0)
    2bce:	0014                	0x14
    2bd0:	5a00                	lw	s0,48(a2)
    2bd2:	0011                	c.nop	4
    2bd4:	2e00                	fld	fs0,24(a2)
    2bd6:	5a01                	li	s4,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bd8:	0305                	addi	t1,t1,1
    2bda:	0328                	addi	a0,sp,392
        if (x16 == 1)
    2bdc:	0100                	addi	s0,sp,128
    2bde:	012e                	slli	sp,sp,0xb
        data >>= 1;
    2be0:	0083025b          	0x83025b
        if (x16 == 1)
    2be4:	2d00                	fld	fs0,24(a0)
    2be6:	0978                	addi	a4,sp,156
    2be8:	0000                	unimp
    2bea:	146d                	addi	s0,s0,-5
            crc |= 0x8000;
    2bec:	0000                	unimp
    2bee:	00001177          	0x1177
    2bf2:	012e                	slli	sp,sp,0xb
    2bf4:	055a                	slli	a0,a0,0x16
    2bf6:	00034403          	lbu	s0,0(t1)
    2bfa:	2e01                	jal	2f0a <crcu32+0x4ce>
    2bfc:	5b01                	li	s6,-32
    2bfe:	8302                	jr	t1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c00:	0000                	unimp
    2c02:	f02d                	bnez	s0,2b64 <crcu32+0x128>
        if (x16 == 1)
    2c04:	0009                	c.nop	2
    2c06:	6d00                	flw	fs0,24(a0)
        data >>= 1;
    2c08:	0014                	0x14
    2c0a:	9400                	0x9400
        if (x16 == 1)
    2c0c:	0011                	c.nop	4
    2c0e:	2e00                	fld	fs0,24(a2)
    2c10:	5a01                	li	s4,-32
    2c12:	0305                	addi	t1,t1,1
            crc |= 0x8000;
    2c14:	0360                	addi	s0,sp,396
    2c16:	0100                	addi	s0,sp,128
    2c18:	012e                	slli	sp,sp,0xb
    2c1a:	0083025b          	0x83025b
    2c1e:	2d00                	fld	fs0,24(a0)
    2c20:	0a54                	addi	a3,sp,276
    2c22:	0000                	unimp
    2c24:	146d                	addi	s0,s0,-5
    2c26:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c28:	11b1                	addi	gp,gp,-20
    2c2a:	0000                	unimp
        if (x16 == 1)
    2c2c:	012e                	slli	sp,sp,0xb
    2c2e:	055a                	slli	a0,a0,0x16
        data >>= 1;
    2c30:	00037c03          	0x37c03
        if (x16 == 1)
    2c34:	2e01                	jal	2f44 <crcu32+0x508>
    2c36:	5b01                	li	s6,-32
    2c38:	8902                	jr	s2
    2c3a:	0000                	unimp
            crc |= 0x8000;
    2c3c:	802d                	srli	s0,s0,0xb
    2c3e:	000a                	c.slli	zero,0x2
    2c40:	0200                	addi	s0,sp,256
    2c42:	0014                	0x14
    2c44:	c800                	sw	s0,16(s0)
    2c46:	0011                	c.nop	4
    2c48:	2e00                	fld	fs0,24(a2)
    2c4a:	5a01                	li	s4,-32
    2c4c:	0305                	addi	t1,t1,1
    2c4e:	0404                	addi	s1,sp,512
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c50:	0100                	addi	s0,sp,128
    2c52:	2d00                	fld	fs0,24(a0)
        if (x16 == 1)
    2c54:	0a8c                	addi	a1,sp,336
    2c56:	0000                	unimp
        data >>= 1;
    2c58:	149d                	addi	s1,s1,-25
    2c5a:	0000                	unimp
        if (x16 == 1)
    2c5c:	11dd                	addi	gp,gp,-9
    2c5e:	0000                	unimp
    2c60:	012e                	slli	sp,sp,0xb
    2c62:	035a                	slli	t1,t1,0x16
            crc |= 0x8000;
    2c64:	ee91                	bnez	a3,2c80 <crcu32+0x244>
    2c66:	742d006f          	j	d33a8 <_data_lma+0xc8230>
    2c6a:	0200000b          	0x200000b
    2c6e:	0014                	0x14
    2c70:	f400                	fsw	fs0,40(s0)
    2c72:	0011                	c.nop	4
    2c74:	2e00                	fld	fs0,24(a2)
    2c76:	5a01                	li	s4,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c78:	0305                	addi	t1,t1,1
    2c7a:	0414                	addi	a3,sp,512
        if (x16 == 1)
    2c7c:	0100                	addi	s0,sp,128
    2c7e:	2d00                	fld	fs0,24(a0)
        data >>= 1;
    2c80:	0bcc                	addi	a1,sp,468
    2c82:	0000                	unimp
        if (x16 == 1)
    2c84:	1402                	slli	s0,s0,0x20
    2c86:	0000                	unimp
    2c88:	0000120b          	0x120b
            crc |= 0x8000;
    2c8c:	012e                	slli	sp,sp,0xb
    2c8e:	055a                	slli	a0,a0,0x16
    2c90:	00004803          	lbu	a6,0(zero) # 0 <_start>
    2c94:	0001                	nop
    2c96:	e02d                	bnez	s0,2cf8 <crcu32+0x2bc>
    2c98:	0200000b          	0x200000b
    2c9c:	0014                	0x14
    2c9e:	2200                	fld	fs0,0(a2)
        if (x16 == 1)
    2ca0:	0012                	c.slli	zero,0x4
    2ca2:	2e00                	fld	fs0,24(a2)
    2ca4:	5a01                	li	s4,-32
    2ca6:	0305                	addi	t1,t1,1
    2ca8:	0398                	addi	a4,sp,448
    2caa:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2cac:	2d00                	fld	fs0,24(a0)
    2cae:	0c18                	addi	a4,sp,528
    2cb0:	0000                	unimp
    2cb2:	1431                	addi	s0,s0,-20
    2cb4:	0000                	unimp
    2cb6:	1236                	slli	tp,tp,0x2d
    2cb8:	0000                	unimp
    2cba:	012e                	slli	sp,sp,0xb
    2cbc:	025a                	slli	tp,tp,0x16
    2cbe:	0084                	addi	s1,sp,64
    crc = crc16((ee_s16)(newval >> 16), crc);
    2cc0:	2d00                	fld	fs0,24(a0)
    2cc2:	0c50                	addi	a2,sp,532
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cc4:	0000                	unimp
    2cc6:	146d                	addi	s0,s0,-5
    crc = crcu8((ee_u8)(newval), crc);
    2cc8:	0000                	unimp
    2cca:	125f 0000 012e      	0x12e0000125f
        if (x16 == 1)
    2cd0:	055a                	slli	a0,a0,0x16
    2cd2:	0003e003          	0x3e003
    return crcu16((ee_u16)newval, crc);
    2cd6:	2e01                	jal	2fe6 <crc16+0x9a>
        data >>= 1;
    2cd8:	5e01                	li	t3,-32
    2cda:	0305                	addi	t1,t1,1
        if (x16 == 1)
    2cdc:	02ac                	addi	a1,sp,328
    2cde:	0100                	addi	s0,sp,128
    2ce0:	012e                	slli	sp,sp,0xb
    2ce2:	055f d003 0002      	0x2d003055f
            crc |= 0x8000;
    2ce8:	0001                	nop
    2cea:	642d                	lui	s0,0xb
    2cec:	000c                	0xc
    2cee:	6d00                	flw	fs0,24(a0)
    2cf0:	0014                	0x14
    2cf2:	7f00                	flw	fs0,56(a4)
    2cf4:	0012                	c.slli	zero,0x4
    2cf6:	2e00                	fld	fs0,24(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cf8:	5a01                	li	s4,-32
    2cfa:	0305                	addi	t1,t1,1
        if (x16 == 1)
    2cfc:	03fc                	addi	a5,sp,460
    2cfe:	0100                	addi	s0,sp,128
        data >>= 1;
    2d00:	012e                	slli	sp,sp,0xb
    2d02:	ec03055b          	0xec03055b
        if (x16 == 1)
    2d06:	0002                	c.slli64	zero
    2d08:	0001                	nop
    2d0a:	702d                	c.lui	zero,0xfffeb
            crc |= 0x8000;
    2d0c:	000c                	0xc
    2d0e:	a900                	fsd	fs0,16(a0)
    2d10:	0014                	0x14
    2d12:	9200                	0x9200
    2d14:	0012                	c.slli	zero,0x4
    2d16:	2e00                	fld	fs0,24(a2)
    2d18:	5a01                	li	s4,-32
    2d1a:	3a01                	jal	262a <core_bench_state+0xde>
    2d1c:	2d00                	fld	fs0,24(a0)
    2d1e:	0c84                	addi	s1,sp,592
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d20:	0000                	unimp
    2d22:	1402                	slli	s0,s0,0x20
        if (x16 == 1)
    2d24:	0000                	unimp
    2d26:	12a9                	addi	t0,t0,-22
        data >>= 1;
    2d28:	0000                	unimp
    2d2a:	012e                	slli	sp,sp,0xb
        if (x16 == 1)
    2d2c:	055a                	slli	a0,a0,0x16
    2d2e:	00025403          	lhu	s0,0(tp) # 0 <_start>
    2d32:	0001                	nop
            crc |= 0x8000;
    2d34:	a82d                	j	2d6e <crcu32+0x332>
    2d36:	000c                	0xc
    2d38:	0200                	addi	s0,sp,256
    2d3a:	0014                	0x14
    2d3c:	c000                	sw	s0,0(s0)
    2d3e:	0012                	c.slli	zero,0x4
    2d40:	2e00                	fld	fs0,24(a2)
    2d42:	5a01                	li	s4,-32
    2d44:	0305                	addi	t1,t1,1
    2d46:	0134                	addi	a3,sp,136
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d48:	0100                	addi	s0,sp,128
    2d4a:	2d00                	fld	fs0,24(a0)
        if (x16 == 1)
    2d4c:	0cdc                	addi	a5,sp,596
    2d4e:	0000                	unimp
        data >>= 1;
    2d50:	1402                	slli	s0,s0,0x20
    2d52:	0000                	unimp
        if (x16 == 1)
    2d54:	000012d7          	0x12d7
    2d58:	012e                	slli	sp,sp,0xb
    2d5a:	055a                	slli	a0,a0,0x16
            crc |= 0x8000;
    2d5c:	0000ac03          	lw	s8,0(ra)
    2d60:	0001                	nop
    2d62:	2430                	fld	fa2,72(s0)
    2d64:	000d                	c.nop	3
    2d66:	0200                	addi	s0,sp,256
    2d68:	0014                	0x14
    2d6a:	2e00                	fld	fs0,24(a2)
    2d6c:	5a01                	li	s4,-32
    2d6e:	0305                	addi	t1,t1,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d70:	0080                	addi	s0,sp,64
    2d72:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d74:	0000                	unimp
    2d76:	0405                	addi	s0,s0,1
        data >>= 1;
    2d78:	05c1                	addi	a1,a1,16
    2d7a:	0000                	unimp
        if (x16 == 1)
    2d7c:	950a                	add	a0,a0,sp
    2d7e:	0100000b          	0x100000b
    2d82:	0b000013          	li	zero,176
            crc |= 0x8000;
    2d86:	0064                	addi	s1,sp,12
    2d88:	0000                	unimp
    2d8a:	0000                	unimp
    2d8c:	970a                	add	a4,a4,sp
    2d8e:	0009                	c.nop	2
    2d90:	1200                	addi	s0,sp,288
    2d92:	31000013          	li	zero,784
    2d96:	0064                	addi	s1,sp,12
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d98:	0000                	unimp
    2d9a:	320007cf          	fnmadd.d	fa5,ft0,ft0,ft6,rne
        if (x16 == 1)
    2d9e:	07e2                	slli	a5,a5,0x18
        data >>= 1;
    2da0:	0000                	unimp
    2da2:	1501                	addi	a0,a0,-32
        if (x16 == 1)
    2da4:	2801                	jal	2db4 <crcu32+0x378>
    2da6:	0001                	nop
    2da8:	0100                	addi	s0,sp,128
    2daa:	135e                	slli	t1,t1,0x37
            crc |= 0x8000;
    2dac:	0000                	unimp
    2dae:	00081a33          	sll	s4,a6,zero
    2db2:	0100                	addi	s0,sp,128
    2db4:	0f15                	addi	t5,t5,5
    2db6:	0128                	addi	a0,sp,136
    2db8:	0000                	unimp
    2dba:	6934                	flw	fa3,80(a0)
    2dbc:	0100                	addi	s0,sp,128
    2dbe:	09a31317          	auipc	t1,0x9a31
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2dc2:	0000                	unimp
        if (x16 == 1)
    2dc4:	6334                	flw	fa3,64(a4)
    2dc6:	6372                	flw	ft6,28(sp)
        data >>= 1;
    2dc8:	0100                	addi	s0,sp,128
    2dca:	1318                	addi	a4,sp,416
        if (x16 == 1)
    2dcc:	0978                	addi	a4,sp,156
    2dce:	0000                	unimp
    2dd0:	7234                	flw	fa3,96(a2)
    2dd2:	7365                	lui	t1,0xffff9
            crc |= 0x8000;
    2dd4:	0100                	addi	s0,sp,128
    2dd6:	1319                	addi	t1,t1,-26
    2dd8:	135e                	slli	t1,t1,0x37
    2dda:	0000                	unimp
    2ddc:	8921                	andi	a0,a0,8
    2dde:	0006                	c.slli	zero,0x1
    2de0:	0100                	addi	s0,sp,128
    2de2:	131a                	slli	t1,t1,0x26
    2de4:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
        if (x16 == 1)
    2de8:	0500                	addi	s0,sp,640
    2dea:	9504                	0x9504
    2dec:	3500000b          	0x3500000b
    2df0:	1312                	slli	t1,t1,0x24
    2df2:	0000                	unimp
            crc |= 0x8000;
    2df4:	168c                	addi	a1,sp,864
    2df6:	0000                	unimp
    2df8:	00a8                	addi	a0,sp,72
    2dfa:	0000                	unimp
    2dfc:	9c01                	0x9c01
    2dfe:	13ea                	slli	t2,t2,0x3a
    2e00:	0000                	unimp
    2e02:	232a                	fld	ft6,136(sp)
    2e04:	83000013          	li	zero,-2000
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e08:	0028                	addi	a0,sp,8
    2e0a:	2c00                	fld	fs0,24(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e0c:	0000132f          	0x132f
        if (x16 == 1)
    2e10:	28ba                	fld	fa7,392(sp)
    2e12:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e14:	392c                	fld	fa1,112(a0)
    2e16:	f1000013          	li	zero,-240
        data >>= 1;
    2e1a:	0028                	addi	a0,sp,8
        if (x16 == 1)
    2e1c:	2c00                	fld	fs0,24(s0)
    2e1e:	1345                	addi	t1,t1,-15
    2e20:	0000                	unimp
    2e22:	0000290f          	0x290f
            crc |= 0x8000;
    2e26:	512c                	lw	a1,96(a0)
    2e28:	46000013          	li	zero,1120
    2e2c:	0029                	c.nop	10
    2e2e:	2d00                	fld	fs0,24(a0)
    2e30:	16c8                	addi	a0,sp,868
    2e32:	0000                	unimp
    2e34:	13ea                	slli	t2,t2,0x3a
    2e36:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e38:	13bd                	addi	t2,t2,-17
    2e3a:	0000                	unimp
        if (x16 == 1)
    2e3c:	012e                	slli	sp,sp,0xb
    2e3e:	025a                	slli	tp,tp,0x16
        data >>= 1;
    2e40:	0078                	addi	a4,sp,12
    2e42:	012e                	slli	sp,sp,0xb
        if (x16 == 1)
    2e44:	0031015b          	0x31015b
    2e48:	0016d42f          	0x16d42f
            crc |= 0x8000;
    2e4c:	f600                	fsw	fs0,40(a2)
    2e4e:	2d000013          	li	zero,720
    2e52:	16e8                	addi	a0,sp,876
    2e54:	0000                	unimp
    2e56:	13ea                	slli	t2,t2,0x3a
    2e58:	0000                	unimp
    2e5a:	13e0                	addi	s0,sp,492
    2e5c:	0000                	unimp
    2e5e:	012e                	slli	sp,sp,0xb
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e60:	025a                	slli	tp,tp,0x16
    2e62:	0078                	addi	a4,sp,12
        if (x16 == 1)
    2e64:	012e                	slli	sp,sp,0xb
    2e66:	ff09025b          	0xff09025b
        data >>= 1;
    2e6a:	2f00                	fld	fs0,24(a4)
        if (x16 == 1)
    2e6c:	16f4                	addi	a3,sp,876
    2e6e:	0000                	unimp
    2e70:	13f6                	slli	t2,t2,0x3d
    2e72:	0000                	unimp
            crc |= 0x8000;
    2e74:	3600                	fld	fs0,40(a2)
    2e76:	01d0                	addi	a2,sp,196
    2e78:	0000                	unimp
    2e7a:	01d0                	addi	a2,sp,196
    2e7c:	0000                	unimp
    2e7e:	8f09                	sub	a4,a4,a0
    2e80:	360c                	fld	fa1,40(a2)
    2e82:	035f 0000 035f      	0x35f0000035f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e88:	0000                	unimp
    2e8a:	3409                	jal	288c <crcu16+0xd0>
        if (x16 == 1)
    2e8c:	3708                	fld	fa0,40(a4)
    2e8e:	0310                	addi	a2,sp,384
        data >>= 1;
    2e90:	0000                	unimp
    2e92:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2e94:	0000                	unimp
    2e96:	ad36000b          	0xad36000b
    2e9a:	0008                	0x8
            crc |= 0x8000;
    2e9c:	ad00                	fsd	fs0,24(a0)
    2e9e:	0008                	0x8
    2ea0:	0900                	addi	s0,sp,144
    2ea2:	0c2c                	addi	a1,sp,536
    2ea4:	ca36                	sw	a3,20(sp)
    2ea6:	0008                	0x8
    2ea8:	ca00                	sw	s0,16(a2)
    2eaa:	0008                	0x8
    2eac:	0900                	addi	s0,sp,144
    2eae:	0c2d                	addi	s8,s8,11
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb0:	2e36                	fld	ft8,328(sp)
    2eb2:	0008                	0x8
        if (x16 == 1)
    2eb4:	2e00                	fld	fs0,24(a2)
    2eb6:	0008                	0x8
        data >>= 1;
    2eb8:	0900                	addi	s0,sp,144
    2eba:	0c2e                	slli	s8,s8,0xb
        if (x16 == 1)
    2ebc:	0436                	slli	s0,s0,0xd
    2ebe:	0008                	0x8
    2ec0:	0400                	addi	s0,sp,512
    2ec2:	0008                	0x8
            crc |= 0x8000;
    2ec4:	0900                	addi	s0,sp,144
    2ec6:	37360c2f          	0x37360c2f
    2eca:	0008                	0x8
    2ecc:	3700                	fld	fs0,40(a4)
    2ece:	0008                	0x8
    2ed0:	0800                	addi	s0,sp,16
    2ed2:	06c2                	slli	a3,a3,0x10
    2ed4:	8636                	mv	a2,a3
    2ed6:	0008                	0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ed8:	8600                	0x8600
    2eda:	0008                	0x8
        if (x16 == 1)
    2edc:	0100                	addi	s0,sp,128
    2ede:	0831                	addi	a6,a6,12
        data >>= 1;
    2ee0:	4536                	lw	a0,76(sp)
    2ee2:	0008                	0x8
        if (x16 == 1)
    2ee4:	4500                	lw	s0,8(a0)
    2ee6:	0008                	0x8
    2ee8:	0900                	addi	s0,sp,144
    2eea:	0892                	slli	a7,a7,0x4
            crc |= 0x8000;
    2eec:	1e36                	slli	t3,t3,0x2d
    2eee:	0000                	unimp
    2ef0:	1e00                	addi	s0,sp,816
    2ef2:	0000                	unimp
    2ef4:	0900                	addi	s0,sp,144
    2ef6:	6e360833          	0x6e360833
    2efa:	0008                	0x8
    2efc:	6e00                	flw	fs0,24(a2)
    2efe:	0008                	0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f00:	0a00                	addi	s0,sp,272
    2f02:	05c8                	addi	a0,sp,708
        if (x16 == 1)
    2f04:	4f36                	lw	t5,76(sp)
    2f06:	0000                	unimp
        data >>= 1;
    2f08:	4f00                	lw	s0,24(a4)
    2f0a:	0000                	unimp
        if (x16 == 1)
    2f0c:	0900                	addi	s0,sp,144
    2f0e:	0c8e                	slli	s9,s9,0x3
    2f10:	0736                	slli	a4,a4,0xd
    2f12:	0009                	c.nop	2
            crc |= 0x8000;
    2f14:	0700                	addi	s0,sp,896
    2f16:	0009                	c.nop	2
    2f18:	0900                	addi	s0,sp,144
    2f1a:	7536089b          	0x7536089b
    2f1e:	0008                	0x8
    2f20:	7500                	flw	fs0,40(a0)
    2f22:	0008                	0x8
    2f24:	0900                	addi	s0,sp,144
    2f26:	0836                	slli	a6,a6,0xd
        if (x16 == 1)
    2f28:	2736                	fld	fa4,328(sp)
    2f2a:	0009                	c.nop	2
    2f2c:	2700                	fld	fs0,8(a4)
    2f2e:	0009                	c.nop	2
    2f30:	0800                	addi	s0,sp,16
    2f32:	c23706c3          	fmadd.d	fa3,fa4,ft3,fs8,rne
            crc |= 0x8000;
    2f36:	0008                	0x8
    2f38:	b800                	fsd	fs0,48(s0)
    2f3a:	0008                	0x8
    2f3c:	0b00                	addi	s0,sp,400
    2f3e:	0000                	unimp
    2f40:	14ff                	0x14ff
    2f42:	0000                	unimp
    2f44:	0004                	0x4
    2f46:	00000763          	beqz	zero,2f54 <crc16+0x8>
}
    2f4a:	0104                	addi	s1,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f4c:	040e                	slli	s0,s0,0x3
    2f4e:	0000                	unimp
    crc = crcu8((ee_u8)(newval), crc);
    2f50:	6c0c                	flw	fa1,24(s0)
    2f52:	0009                	c.nop	2
    return crcu16((ee_u16)newval, crc);
    2f54:	1300                	addi	s0,sp,416
    2f56:	88000007          	0x88000007
        if (x16 == 1)
    2f5a:	0005                	c.nop	1
    return crcu16((ee_u16)newval, crc);
    2f5c:	0000                	unimp
    2f5e:	0000                	unimp
        data >>= 1;
    2f60:	b900                	fsd	fs0,48(a0)
    2f62:	0036                	c.slli	zero,0xd
        if (x16 == 1)
    2f64:	0200                	addi	s0,sp,256
    2f66:	0601                	addi	a2,a2,0
    2f68:	0612                	slli	a2,a2,0x4
    2f6a:	0000                	unimp
            crc |= 0x8000;
    2f6c:	0102                	c.slli64	sp
    2f6e:	1008                	addi	a0,sp,32
    2f70:	0006                	c.slli	zero,0x1
    2f72:	0200                	addi	s0,sp,256
    2f74:	0502                	c.slli64	a0
    2f76:	04cc                	addi	a1,sp,580
    2f78:	0000                	unimp
    2f7a:	0202                	c.slli64	tp
    2f7c:	0006ea07          	0x6ea07
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f80:	0200                	addi	s0,sp,256
    2f82:	0504                	addi	s1,sp,640
        if (x16 == 1)
    2f84:	0000036b          	0x36b
    2f88:	0402                	c.slli64	s0
    2f8a:	00019d07          	0x19d07
        data >>= 1;
    2f8e:	0200                	addi	s0,sp,256
        if (x16 == 1)
    2f90:	0508                	addi	a0,sp,640
    2f92:	0366                	slli	t1,t1,0x19
            crc |= 0x8000;
    2f94:	0000                	unimp
    2f96:	0802                	c.slli64	a6
    2f98:	00019807          	0x19807
    2f9c:	0300                	addi	s0,sp,384
    2f9e:	0504                	addi	s1,sp,640
    2fa0:	6e69                	lui	t3,0x1a
    2fa2:	0074                	addi	a3,sp,12
    2fa4:	0402                	c.slli64	s0
    2fa6:	0001a207          	flw	ft4,0(gp) # 1001430 <__global_pointer$>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2faa:	0200                	addi	s0,sp,256
        if (x16 == 1)
    2fac:	0410                	addi	a2,sp,512
    2fae:	0490                	addi	a2,sp,576
        data >>= 1;
    2fb0:	0000                	unimp
    2fb2:	9c04                	0x9c04
        if (x16 == 1)
    2fb4:	0004                	0x4
    2fb6:	0200                	addi	s0,sp,256
    2fb8:	1922                	slli	s2,s2,0x28
    2fba:	007e                	c.slli	zero,0x1f
            crc |= 0x8000;
    2fbc:	0000                	unimp
    2fbe:	0405                	addi	s0,s0,1
    2fc0:	0084                	addi	s1,sp,64
    2fc2:	0000                	unimp
    2fc4:	0106                	slli	sp,sp,0x1
    2fc6:	0006                	c.slli	zero,0x1
    2fc8:	0400                	addi	s0,sp,512
    2fca:	0731                	addi	a4,a4,12
    2fcc:	0000                	unimp
    2fce:	410e2c03          	lw	s8,1040(t3) # 1a410 <_data_lma+0xf298>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fd2:	0000                	unimp
        if (x16 == 1)
    2fd4:	0400                	addi	s0,sp,512
    2fd6:	00ee                	slli	ra,ra,0x1b
        data >>= 1;
    2fd8:	0000                	unimp
    2fda:	410e7203          	0x410e7203
        if (x16 == 1)
    2fde:	0000                	unimp
    2fe0:	0400                	addi	s0,sp,512
    2fe2:	06da                	slli	a3,a3,0x16
            crc |= 0x8000;
    2fe4:	0000                	unimp
    2fe6:	5d179103          	lh	sp,1489(a5)
    2fea:	0000                	unimp
    2fec:	0700                	addi	s0,sp,896
    2fee:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
    2ff2:	6504                	flw	fs1,8(a0)
    2ff4:	1701                	addi	a4,a4,-32
    2ff6:	0064                	addi	s1,sp,12
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ff8:	0000                	unimp
    2ffa:	0408                	addi	a0,sp,512
        if (x16 == 1)
    2ffc:	dc03a603          	lw	a2,-576(t2)
        data >>= 1;
    3000:	0000                	unimp
    3002:	0900                	addi	s0,sp,144
        if (x16 == 1)
    3004:	02fa                	slli	t0,t0,0x1e
    3006:	0000                	unimp
    3008:	ad0ca803          	lw	a6,-1328(s9)
            crc |= 0x8000;
    300c:	0000                	unimp
    300e:	0900                	addi	s0,sp,144
    3010:	0000052f          	0x52f
    3014:	dc13a903          	lw	s2,-575(t2)
    3018:	0000                	unimp
    301a:	0000                	unimp
    301c:	2c0a                	fld	fs8,128(sp)
    301e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3020:	ec00                	fsw	fs0,24(s0)
    3022:	0000                	unimp
        if (x16 == 1)
    3024:	0b00                	addi	s0,sp,400
    3026:	0064                	addi	s1,sp,12
        data >>= 1;
    3028:	0000                	unimp
    302a:	080c0003          	lb	zero,128(s8) # b080 <__trunctfdf2+0x2a0>
        if (x16 == 1)
    302e:	1009a303          	lw	t1,256(s3)
    3032:	0001                	nop
            crc |= 0x8000;
    3034:	0d00                	addi	s0,sp,656
    3036:	0164                	addi	s1,sp,140
    3038:	0000                	unimp
    303a:	5d07a503          	lw	a0,1488(a5)
    303e:	0000                	unimp
    3040:	0000                	unimp
    3042:	6a0d                	lui	s4,0x3
    3044:	0002                	c.slli64	zero
    3046:	0300                	addi	s0,sp,384
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3048:	05aa                	slli	a1,a1,0xa
    304a:	00ba                	slli	ra,ra,0xe
        if (x16 == 1)
    304c:	0000                	unimp
    304e:	0004                	0x4
        data >>= 1;
    3050:	ea04                	fsw	fs1,16(a2)
    3052:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
        if (x16 == 1)
    3056:	00ec03ab          	0xec03ab
    305a:	0000                	unimp
            crc |= 0x8000;
    305c:	e204                	fsw	fs1,0(a2)
    305e:	0002                	c.slli64	zero
    3060:	0300                	addi	s0,sp,384
    3062:	00721baf          	0x721baf
    3066:	0000                	unimp
    3068:	040e                	slli	s0,s0,0x3
    306a:	9e04                	0x9e04
    306c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
        if (x16 == 1)
    3070:	1916                	slli	s2,s2,0x25
    3072:	0048                	addi	a0,sp,4
    3074:	0000                	unimp
    3076:	0001280f          	0x1280f
    307a:	1800                	addi	s0,sp,48
            crc |= 0x8000;
    307c:	2f05                	jal	37ac <__udivdi3+0x57c>
    307e:	9008                	0x9008
    3080:	0001                	nop
    3082:	0d00                	addi	s0,sp,656
    3084:	0000079b          	0x79b
    3088:	3105                	jal	2ca8 <crcu32+0x26c>
    308a:	00019013          	slli	zero,gp,0x0
    308e:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    3090:	5f10                	lw	a2,56(a4)
    3092:	3205006b          	0x3205006b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3096:	00005d07          	0x5d07
        if (x16 == 1)
    309a:	0400                	addi	s0,sp,512
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    309c:	940d                	srai	s0,s0,0x23
    309e:	0005                	c.nop	1
        data >>= 1;
    30a0:	0500                	addi	s0,sp,640
    30a2:	0b32                	slli	s6,s6,0xc
        if (x16 == 1)
    30a4:	005d                	c.nop	23
    30a6:	0000                	unimp
    30a8:	0d08                	addi	a0,sp,656
    30aa:	050c                	addi	a1,sp,640
            crc |= 0x8000;
    30ac:	0000                	unimp
    30ae:	3205                	jal	29ce <crcu16+0x212>
    30b0:	5d14                	lw	a3,56(a0)
    30b2:	0000                	unimp
    30b4:	0c00                	addi	s0,sp,528
    30b6:	c40d                	beqz	s0,30e0 <crc16+0x194>
    30b8:	0001                	nop
    30ba:	0500                	addi	s0,sp,640
    30bc:	1b32                	slli	s6,s6,0x2c
    30be:	005d                	c.nop	23
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30c0:	0000                	unimp
    30c2:	1010                	addi	a2,sp,32
        if (x16 == 1)
    30c4:	785f 0500 0b33      	0xb330500785f
        data >>= 1;
    30ca:	0196                	slli	gp,gp,0x5
        if (x16 == 1)
    30cc:	0000                	unimp
    30ce:	0014                	0x14
    30d0:	0405                	addi	s0,s0,1
    30d2:	0136                	slli	sp,sp,0xd
            crc |= 0x8000;
    30d4:	0000                	unimp
    30d6:	2a0a                	fld	fs4,128(sp)
    30d8:	0001                	nop
    30da:	a600                	fsd	fs0,8(a2)
    30dc:	0001                	nop
    30de:	0b00                	addi	s0,sp,400
    30e0:	0064                	addi	s1,sp,12
    30e2:	0000                	unimp
    30e4:	0000                	unimp
    30e6:	0005bf0f          	0x5bf0f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30ea:	2400                	fld	fs0,8(s0)
        if (x16 == 1)
    30ec:	3705                	jal	300c <crc16+0xc0>
    30ee:	2908                	fld	fa0,16(a0)
        data >>= 1;
    30f0:	0002                	c.slli64	zero
    30f2:	0d00                	addi	s0,sp,656
        if (x16 == 1)
    30f4:	0000022b          	0x22b
    30f8:	3905                	jal	2d28 <crcu32+0x2ec>
    30fa:	5d09                	li	s10,-30
            crc |= 0x8000;
    30fc:	0000                	unimp
    30fe:	0000                	unimp
    3100:	760d                	lui	a2,0xfffe3
    3102:	0001                	nop
    3104:	0500                	addi	s0,sp,640
    3106:	093a                	slli	s2,s2,0xe
    3108:	005d                	c.nop	23
    310a:	0000                	unimp
    310c:	0d04                	addi	s1,sp,656
    310e:	0154                	addi	a3,sp,132
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3110:	0000                	unimp
    3112:	3b05                	jal	2e42 <crcu32+0x406>
        if (x16 == 1)
    3114:	5d09                	li	s10,-30
    3116:	0000                	unimp
        data >>= 1;
    3118:	0800                	addi	s0,sp,16
    311a:	9a0d                	andi	a2,a2,-29
        if (x16 == 1)
    311c:	0002                	c.slli64	zero
    311e:	0500                	addi	s0,sp,640
    3120:	093c                	addi	a5,sp,152
    3122:	005d                	c.nop	23
            crc |= 0x8000;
    3124:	0000                	unimp
    3126:	0d0c                	addi	a1,sp,656
    3128:	00000487          	0x487
    312c:	3d05                	jal	2f5c <crc16+0x10>
    312e:	5d09                	li	s10,-30
    3130:	0000                	unimp
    3132:	1000                	addi	s0,sp,32
    3134:	490d                	li	s2,3
    3136:	0005                	c.nop	1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3138:	0500                	addi	s0,sp,640
    313a:	093e                	slli	s2,s2,0xf
        if (x16 == 1)
    313c:	005d                	c.nop	23
    313e:	0000                	unimp
        data >>= 1;
    3140:	0d14                	addi	a3,sp,656
    3142:	0130                	addi	a2,sp,136
        if (x16 == 1)
    3144:	0000                	unimp
    3146:	3f05                	jal	3076 <crc16+0x12a>
    3148:	5d09                	li	s10,-30
    314a:	0000                	unimp
            crc |= 0x8000;
    314c:	1800                	addi	s0,sp,48
    314e:	340d                	jal	2b70 <crcu32+0x134>
    3150:	0002                	c.slli64	zero
    3152:	0500                	addi	s0,sp,640
    3154:	0940                	addi	s0,sp,148
    3156:	005d                	c.nop	23
    3158:	0000                	unimp
    315a:	0d1c                	addi	a5,sp,656
    315c:	03fd                	addi	t2,t2,31
    315e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3160:	4105                	li	sp,1
    3162:	5d09                	li	s10,-30
        if (x16 == 1)
    3164:	0000                	unimp
    3166:	2000                	fld	fs0,0(s0)
        data >>= 1;
    3168:	1100                	addi	s0,sp,160
    316a:	0029                	c.nop	10
        if (x16 == 1)
    316c:	0000                	unimp
    316e:	0108                	addi	a0,sp,128
    3170:	4a05                	li	s4,1
    3172:	6e08                	flw	fa0,24(a2)
            crc |= 0x8000;
    3174:	0002                	c.slli64	zero
    3176:	0d00                	addi	s0,sp,656
    3178:	03f5                	addi	t2,t2,29
    317a:	0000                	unimp
    317c:	4b05                	li	s6,1
    317e:	6e0a                	flw	ft8,128(sp)
    3180:	0002                	c.slli64	zero
    3182:	0000                	unimp
    3184:	f50d                	bnez	a0,30ae <crc16+0x162>
    3186:	0005                	c.nop	1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3188:	0500                	addi	s0,sp,640
    318a:	094c                	addi	a1,sp,148
        if (x16 == 1)
    318c:	026e                	slli	tp,tp,0x1b
    318e:	0000                	unimp
        data >>= 1;
    3190:	1280                	addi	s0,sp,352
    3192:	0704                	addi	s1,sp,896
        if (x16 == 1)
    3194:	0000                	unimp
    3196:	4e05                	li	t3,1
    3198:	2a0a                	fld	fs4,128(sp)
    319a:	0001                	nop
            crc |= 0x8000;
    319c:	0000                	unimp
    319e:	1201                	addi	tp,tp,-32
    31a0:	0780                	addi	s0,sp,960
    31a2:	0000                	unimp
    31a4:	5105                	li	sp,-31
    31a6:	2a0a                	fld	fs4,128(sp)
    31a8:	0001                	nop
    31aa:	0400                	addi	s0,sp,512
    31ac:	0001                	nop
    31ae:	280a                	fld	fa6,128(sp)
        if (x16 == 1)
    31b0:	0001                	nop
    31b2:	7e00                	flw	fs0,56(a2)
    31b4:	0002                	c.slli64	zero
    31b6:	0b00                	addi	s0,sp,400
    31b8:	0064                	addi	s1,sp,12
    31ba:	0000                	unimp
            crc |= 0x8000;
    31bc:	001f bb11 0004      	0x4bb11001f
    31c2:	9000                	0x9000
    31c4:	0501                	addi	a0,a0,0
    31c6:	085d                	addi	a6,a6,23
    31c8:	02c1                	addi	t0,t0,16
    31ca:	0000                	unimp
    31cc:	9b0d                	andi	a4,a4,-29
    31ce:	05000007          	0x5000007
}
    31d2:	125e                	slli	tp,tp,0x37
}
    31d4:	02c1                	addi	t0,t0,16
    31d6:	0000                	unimp
    31d8:	0d00                	addi	s0,sp,656
    31da:	00000243          	fmadd.s	ft4,ft0,ft0,ft0,rne
    unsigned lo = TIMER->lo;
    31de:	5f05                	li	t5,-31
    31e0:	5d06                	lw	s10,96(sp)
    31e2:	0000                	unimp
    unsigned hi = TIMER->hi;
    31e4:	0400                	addi	s0,sp,512
    31e6:	070d                	addi	a4,a4,3
__UINT64_TYPE__ timer_getms() {
    31e8:	0001                	nop
    31ea:	0500                	addi	s0,sp,640
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31ec:	0961                	addi	s2,s2,24
    31ee:	000002c7          	fmsub.s	ft5,ft0,ft0,ft0,rne
    31f2:	0d08                	addi	a0,sp,656
__UINT64_TYPE__ timer_getms() {
    31f4:	0029                	c.nop	10
    31f6:	0000                	unimp
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31f8:	6205                	lui	tp,0x1
    31fa:	291e                	fld	fs2,448(sp)
    31fc:	0002                	c.slli64	zero
    31fe:	8800                	0x8800
    3200:	0500                	addi	s0,sp,640
    3202:	7e04                	flw	fs1,56(a2)
    3204:	0002                	c.slli64	zero
    3206:	0a00                	addi	s0,sp,272
    3208:	000002d7          	0x2d7
    for (int i = 0; i < size; i++) {
    320c:	000002d7          	0x2d7
    3210:	0000640b          	0x640b
    USART->write = c;
    3214:	1f00                	addi	s0,sp,944
    3216:	0500                	addi	s0,sp,640
    3218:	dd04                	sw	s1,56(a0)
    321a:	0002                	c.slli64	zero
    321c:	1300                	addi	s0,sp,416
    321e:	0006820f          	0x6820f
    3222:	0800                	addi	s0,sp,16
    for (int i = 0; i < size; i++) {
    3224:	7505                	lui	a0,0xfffe1
    3226:	0608                	addi	a0,sp,768
    3228:	0d000003          	lb	zero,208(zero) # d0 <main+0x54>
    322c:	0388                	addi	a0,sp,448
    322e:	0000                	unimp
    3230:	7605                	lui	a2,0xfffe1
    3232:	0611                	addi	a2,a2,4
    3234:	00000003          	lb	zero,0(zero) # 0 <_start>
    3238:	0d0d                	addi	s10,s10,3
    323a:	05000007          	0x5000007
    323e:	005d0677          	0x5d0677
    3242:	0000                	unimp
    3244:	0004                	0x4
    3246:	0405                	addi	s0,s0,1
    3248:	002c                	addi	a1,sp,8
    324a:	0000                	unimp
    324c:	0001bc0f          	0x1bc0f
    3250:	6800                	flw	fs0,16(s0)
    3252:	b505                	j	3072 <crc16+0x126>
    3254:	4f08                	lw	a0,24(a4)
    3256:	0004                	0x4
    3258:	1000                	addi	s0,sp,32
    325a:	705f 0500 12b6      	0x12b60500705f
    3260:	0306                	slli	t1,t1,0x1
    3262:	0000                	unimp
    3264:	1000                	addi	s0,sp,32
    3266:	725f 0500 07b7      	0x7b70500725f
    326c:	005d                	c.nop	23
    326e:	0000                	unimp
    3270:	1004                	addi	s1,sp,32
    3272:	775f 0500 07b8      	0x7b80500775f
    3278:	005d                	c.nop	23
    327a:	0000                	unimp
    327c:	0d08                	addi	a0,sp,656
    327e:	007f                	0x7f
    3280:	0000                	unimp
    3282:	b905                	j	2eb2 <crcu32+0x476>
    3284:	3309                	jal	2f86 <crc16+0x3a>
    3286:	0000                	unimp
    3288:	0c00                	addi	s0,sp,528
    328a:	bc0d                	j	2cbc <crcu32+0x280>
    328c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    3290:	09ba                	slli	s3,s3,0xe
    3292:	00000033          	add	zero,zero,zero
    3296:	100e                	c.slli	zero,0x23
    3298:	625f 0066 bb05      	0xbb050066625f
    329e:	de11                	beqz	a2,31ba <crc16+0x26e>
    32a0:	0002                	c.slli64	zero
    32a2:	1000                	addi	s0,sp,32
    32a4:	760d                	lui	a2,0xfffe3
    32a6:	0000                	unimp
    32a8:	0500                	addi	s0,sp,640
    32aa:	07bc                	addi	a5,sp,968
    32ac:	005d                	c.nop	23
    32ae:	0000                	unimp
    32b0:	0d18                	addi	a4,sp,656
    32b2:	0112                	slli	sp,sp,0x4
    32b4:	0000                	unimp
    32b6:	c305                	beqz	a4,32d6 <__udivdi3+0xa6>
    32b8:	280a                	fld	fa6,128(sp)
    32ba:	0001                	nop
    32bc:	1c00                	addi	s0,sp,560
    32be:	c00d                	beqz	s0,32e0 <__udivdi3+0xb0>
    32c0:	0000                	unimp
    32c2:	0500                	addi	s0,sp,640
    32c4:	1dc5                	addi	s11,s11,-15
    32c6:	000005d3          	fadd.s	fa1,ft0,ft0,rne
    32ca:	0d20                	addi	s0,sp,664
    32cc:	04a4                	addi	s1,sp,584
    32ce:	0000                	unimp
    32d0:	c705                	beqz	a4,32f8 <__udivdi3+0xc8>
    32d2:	fd1d                	bnez	a0,3210 <_write+0x4>
    32d4:	0005                	c.nop	1
    32d6:	2400                	fld	fs0,8(s0)
    32d8:	ac0d                	j	350a <__udivdi3+0x2da>
    32da:	05000007          	0x5000007
    32de:	0dca                	slli	s11,s11,0x12
    32e0:	0621                	addi	a2,a2,8
    32e2:	0000                	unimp
    32e4:	0d28                	addi	a0,sp,664
    32e6:	0315                	addi	t1,t1,5
    32e8:	0000                	unimp
    32ea:	cb05                	beqz	a4,331a <__udivdi3+0xea>
    32ec:	3b09                	jal	2ffe <crc16+0xb2>
    32ee:	0006                	c.slli	zero,0x1
    32f0:	2c00                	fld	fs0,24(s0)
    32f2:	5f10                	lw	a2,56(a4)
    32f4:	6275                	lui	tp,0x1d
    32f6:	0500                	addi	s0,sp,640
    32f8:	11ce                	slli	gp,gp,0x33
    32fa:	02de                	slli	t0,t0,0x17
    32fc:	0000                	unimp
    32fe:	1030                	addi	a2,sp,40
    3300:	755f 0070 cf05      	0xcf050070755f
    3306:	0612                	slli	a2,a2,0x4
    3308:	38000003          	lb	zero,896(zero) # 380 <main+0x304>
    330c:	5f10                	lw	a2,56(a4)
    330e:	7275                	lui	tp,0xffffd
    3310:	0500                	addi	s0,sp,640
    3312:	07d0                	addi	a2,sp,964
    3314:	005d                	c.nop	23
    3316:	0000                	unimp
    3318:	0d3c                	addi	a5,sp,664
    331a:	07dc                	addi	a5,sp,964
    331c:	0000                	unimp
    331e:	d305                	beqz	a4,323e <__udivdi3+0xe>
    3320:	4111                	li	sp,4
    3322:	0006                	c.slli	zero,0x1
    3324:	4000                	lw	s0,0(s0)
    3326:	380d                	jal	2b58 <crcu32+0x11c>
    3328:	05000007          	0x5000007
    332c:	11d4                	addi	a3,sp,228
    332e:	0651                	addi	a2,a2,20
    3330:	0000                	unimp
    3332:	6c5f1043          	0x6c5f1043
    3336:	0062                	c.slli	zero,0x18
    3338:	d705                	beqz	a4,3260 <__udivdi3+0x30>
    333a:	de11                	beqz	a2,3256 <__udivdi3+0x26>
    333c:	0002                	c.slli64	zero
    333e:	4400                	lw	s0,8(s0)
    3340:	b60d                	j	2e62 <crcu32+0x426>
    3342:	0005                	c.nop	1
    3344:	0500                	addi	s0,sp,640
    3346:	07da                	slli	a5,a5,0x16
    3348:	005d                	c.nop	23
    334a:	0000                	unimp
    334c:	0d4c                	addi	a1,sp,660
    334e:	01fd                	addi	gp,gp,31
    3350:	0000                	unimp
    3352:	db05                	beqz	a4,3282 <__udivdi3+0x52>
    3354:	890a                	mv	s2,sp
    3356:	0000                	unimp
    3358:	5000                	lw	s0,32(s0)
    335a:	700d                	c.lui	zero,0xfffe3
    335c:	0001                	nop
    335e:	0500                	addi	s0,sp,640
    3360:	12de                	slli	t0,t0,0x37
    3362:	046d                	addi	s0,s0,27
    3364:	0000                	unimp
    3366:	0d54                	addi	a3,sp,660
    3368:	0602                	c.slli64	a2
    336a:	0000                	unimp
    336c:	e205                	bnez	a2,338c <__udivdi3+0x15c>
    336e:	1c0c                	addi	a1,sp,560
    3370:	0001                	nop
    3372:	5800                	lw	s0,48(s0)
    3374:	b70d                	j	3296 <__udivdi3+0x66>
    3376:	0000                	unimp
    3378:	0500                	addi	s0,sp,640
    337a:	0ee4                	addi	s1,sp,860
    337c:	0110                	addi	a2,sp,128
    337e:	0000                	unimp
    3380:	0d5c                	addi	a5,sp,660
    3382:	0778                	addi	a4,sp,908
    3384:	0000                	unimp
    3386:	e505                	bnez	a0,33ae <__udivdi3+0x17e>
    3388:	5d09                	li	s10,-30
    338a:	0000                	unimp
    338c:	6400                	flw	fs0,8(s0)
    338e:	1400                	addi	s0,sp,544
    3390:	00a1                	addi	ra,ra,8
    3392:	0000                	unimp
    3394:	046d                	addi	s0,s0,27
    3396:	0000                	unimp
    3398:	6d15                	lui	s10,0x5
    339a:	0004                	0x4
    339c:	1500                	addi	s0,sp,672
    339e:	0128                	addi	a0,sp,136
    33a0:	0000                	unimp
    33a2:	c115                	beqz	a0,33c6 <__udivdi3+0x196>
    33a4:	0005                	c.nop	1
    33a6:	1500                	addi	s0,sp,672
    33a8:	005d                	c.nop	23
    33aa:	0000                	unimp
    33ac:	0500                	addi	s0,sp,640
    33ae:	7804                	flw	fs1,48(s0)
    33b0:	0004                	0x4
    33b2:	1600                	addi	s0,sp,800
    33b4:	046d                	addi	s0,s0,27
    33b6:	0000                	unimp
    33b8:	0006e317          	auipc	t1,0x6e
    33bc:	2800                	fld	fs0,16(s0)
    33be:	0504                	addi	s1,sp,640
    33c0:	0239                	addi	tp,tp,14
    33c2:	c108                	sw	a0,0(a0)
    33c4:	0005                	c.nop	1
    33c6:	1800                	addi	s0,sp,48
    33c8:	0480                	addi	s0,sp,576
    33ca:	0000                	unimp
    33cc:	3b05                	jal	30fc <crc16+0x1b0>
    33ce:	0702                	c.slli64	a4
    33d0:	005d                	c.nop	23
    33d2:	0000                	unimp
    33d4:	1800                	addi	s0,sp,48
    33d6:	0349                	addi	t1,t1,18
    33d8:	0000                	unimp
    33da:	4005                	c.li	zero,1
    33dc:	0b02                	c.slli64	s6
    33de:	06ad                	addi	a3,a3,11
    33e0:	0000                	unimp
    33e2:	1804                	addi	s1,sp,48
    33e4:	00e6                	slli	ra,ra,0x19
    33e6:	0000                	unimp
    33e8:	4005                	c.li	zero,1
    33ea:	1402                	slli	s0,s0,0x20
    33ec:	06ad                	addi	a3,a3,11
    33ee:	0000                	unimp
    33f0:	1808                	addi	a0,sp,48
    33f2:	000007cb          	fnmsub.s	fa5,ft0,ft0,ft0,rne
    33f6:	4005                	c.li	zero,1
    33f8:	1e02                	slli	t3,t3,0x20
    33fa:	06ad                	addi	a3,a3,11
    33fc:	0000                	unimp
    33fe:	180c                	addi	a1,sp,48
    3400:	023e                	slli	tp,tp,0xf
    3402:	0000                	unimp
    3404:	4205                	li	tp,1
    3406:	0802                	c.slli64	a6
    3408:	005d                	c.nop	23
    340a:	0000                	unimp
    340c:	1810                	addi	a2,sp,48
    340e:	0205                	addi	tp,tp,1
    3410:	0000                	unimp
    3412:	4305                	li	t1,1
    3414:	0802                	c.slli64	a6
    3416:	08ad                	addi	a7,a7,11
    3418:	0000                	unimp
    341a:	1814                	addi	a3,sp,48
    341c:	075f 0000 4605      	0x46050000075f
    3422:	0702                	c.slli64	a4
    3424:	005d                	c.nop	23
    3426:	0000                	unimp
    3428:	1830                	addi	a2,sp,56
    342a:	06d2                	slli	a3,a3,0x14
    342c:	0000                	unimp
    342e:	4705                	li	a4,1
    3430:	1602                	slli	a2,a2,0x20
    3432:	08c2                	slli	a7,a7,0x10
    3434:	0000                	unimp
    3436:	1834                	addi	a3,sp,56
    3438:	0322                	slli	t1,t1,0x8
    343a:	0000                	unimp
    343c:	4905                	li	s2,1
    343e:	0702                	c.slli64	a4
    3440:	005d                	c.nop	23
    3442:	0000                	unimp
    3444:	1838                	addi	a4,sp,56
    3446:	03d4                	addi	a3,sp,452
    3448:	0000                	unimp
    344a:	4b05                	li	s6,1
    344c:	0a02                	c.slli64	s4
    344e:	000008d3          	fadd.s	fa7,ft0,ft0,rne
    3452:	183c                	addi	a5,sp,56
    3454:	014c                	addi	a1,sp,132
    3456:	0000                	unimp
    3458:	4e05                	li	t3,1
    345a:	1302                	slli	t1,t1,0x20
    345c:	0190                	addi	a2,sp,192
    345e:	0000                	unimp
    3460:	1840                	addi	s0,sp,52
    3462:	018e                	slli	gp,gp,0x3
    3464:	0000                	unimp
    3466:	4f05                	li	t5,1
    3468:	0702                	c.slli64	a4
    346a:	005d                	c.nop	23
    346c:	0000                	unimp
    346e:	1844                	addi	s1,sp,52
    3470:	0272                	slli	tp,tp,0x1c
    3472:	0000                	unimp
    3474:	5005                	c.li	zero,-31
    3476:	1302                	slli	t1,t1,0x20
    3478:	0190                	addi	a2,sp,192
    347a:	0000                	unimp
    347c:	1848                	addi	a0,sp,52
    347e:	038e                	slli	t2,t2,0x3
    3480:	0000                	unimp
    3482:	5105                	li	sp,-31
    3484:	1402                	slli	s0,s0,0x20
    3486:	08d9                	addi	a7,a7,22
    3488:	0000                	unimp
    348a:	184c                	addi	a1,sp,52
    348c:	058c                	addi	a1,sp,704
    348e:	0000                	unimp
    3490:	5405                	li	s0,-31
    3492:	0702                	c.slli64	a4
    3494:	005d                	c.nop	23
    3496:	0000                	unimp
    3498:	1850                	addi	a2,sp,52
    349a:	0608                	addi	a0,sp,768
    349c:	0000                	unimp
    349e:	5505                	li	a0,-31
    34a0:	0902                	c.slli64	s2
    34a2:	05c1                	addi	a1,a1,16
    34a4:	0000                	unimp
    34a6:	1854                	addi	a3,sp,52
    34a8:	063a                	slli	a2,a2,0xe
    34aa:	0000                	unimp
    34ac:	7805                	lui	a6,0xfffe1
    34ae:	0702                	c.slli64	a4
    34b0:	0888                	addi	a0,sp,80
    34b2:	0000                	unimp
    34b4:	1958                	addi	a4,sp,180
    34b6:	000004bb          	0x4bb
    34ba:	7c05                	lui	s8,0xfffe1
    34bc:	1302                	slli	t1,t1,0x20
    34be:	02c1                	addi	t0,t0,16
    34c0:	0000                	unimp
    34c2:	0148                	addi	a0,sp,132
    34c4:	bd19                	j	32da <__udivdi3+0xaa>
    34c6:	0002                	c.slli64	zero
    34c8:	0500                	addi	s0,sp,640
    34ca:	027d                	addi	tp,tp,31
    34cc:	7e12                	flw	ft8,36(sp)
    34ce:	0002                	c.slli64	zero
    34d0:	4c00                	lw	s0,24(s0)
    34d2:	1901                	addi	s2,s2,-32
    34d4:	02a4                	addi	s1,sp,328
    34d6:	0000                	unimp
    34d8:	8105                	srli	a0,a0,0x1
    34da:	0c02                	c.slli64	s8
    34dc:	08ea                	slli	a7,a7,0x1a
    34de:	0000                	unimp
    34e0:	02dc                	addi	a5,sp,324
    34e2:	af19                	j	3bf8 <__divdf3+0x31c>
    34e4:	0006                	c.slli	zero,0x1
    34e6:	0500                	addi	s0,sp,640
    34e8:	0286                	slli	t0,t0,0x1
    34ea:	6e10                	flw	fa2,24(a2)
    34ec:	0006                	c.slli	zero,0x1
    34ee:	e000                	fsw	fs0,0(s0)
    34f0:	1902                	slli	s2,s2,0x20
    34f2:	00000507          	0x507
    34f6:	8805                	andi	s0,s0,1
    34f8:	0a02                	c.slli64	s4
    34fa:	08f6                	slli	a7,a7,0x1d
    34fc:	0000                	unimp
    34fe:	02ec                	addi	a1,sp,332
    3500:	0500                	addi	s0,sp,640
    3502:	c704                	sw	s1,8(a4)
    3504:	0005                	c.nop	1
    3506:	0200                	addi	s0,sp,256
    3508:	0801                	addi	a6,a6,0
    350a:	0619                	addi	a2,a2,6
    350c:	0000                	unimp
    350e:	c716                	sw	t0,140(sp)
    3510:	0005                	c.nop	1
    3512:	0500                	addi	s0,sp,640
    3514:	4f04                	lw	s1,24(a4)
    3516:	0004                	0x4
    3518:	1400                	addi	s0,sp,544
    351a:	00a1                	addi	ra,ra,8
    351c:	0000                	unimp
    351e:	000005f7          	0x5f7
    3522:	6d15                	lui	s10,0x5
    3524:	0004                	0x4
    3526:	1500                	addi	s0,sp,672
    3528:	0128                	addi	a0,sp,136
    352a:	0000                	unimp
    352c:	f715                	bnez	a4,3458 <__udivdi3+0x228>
    352e:	0005                	c.nop	1
    3530:	1500                	addi	s0,sp,672
    3532:	005d                	c.nop	23
    3534:	0000                	unimp
    3536:	0500                	addi	s0,sp,640
    3538:	ce04                	sw	s1,24(a2)
    353a:	0005                	c.nop	1
    353c:	0500                	addi	s0,sp,640
    353e:	d904                	sw	s1,48(a0)
    3540:	0005                	c.nop	1
    3542:	1400                	addi	s0,sp,544
    3544:	0095                	addi	ra,ra,5
    3546:	0000                	unimp
    3548:	0621                	addi	a2,a2,8
    354a:	0000                	unimp
    354c:	6d15                	lui	s10,0x5
    354e:	0004                	0x4
    3550:	1500                	addi	s0,sp,672
    3552:	0128                	addi	a0,sp,136
    3554:	0000                	unimp
    3556:	9515                	srai	a0,a0,0x25
    3558:	0000                	unimp
    355a:	1500                	addi	s0,sp,672
    355c:	005d                	c.nop	23
    355e:	0000                	unimp
    3560:	0500                	addi	s0,sp,640
    3562:	0304                	addi	s1,sp,384
    3564:	0006                	c.slli	zero,0x1
    3566:	1400                	addi	s0,sp,544
    3568:	005d                	c.nop	23
    356a:	0000                	unimp
    356c:	0000063b          	0x63b
    3570:	6d15                	lui	s10,0x5
    3572:	0004                	0x4
    3574:	1500                	addi	s0,sp,672
    3576:	0128                	addi	a0,sp,136
    3578:	0000                	unimp
    357a:	0500                	addi	s0,sp,640
    357c:	2704                	fld	fs1,8(a4)
    357e:	0006                	c.slli	zero,0x1
    3580:	0a00                	addi	s0,sp,272
    3582:	002c                	addi	a1,sp,8
    3584:	0000                	unimp
    3586:	0651                	addi	a2,a2,20
    3588:	0000                	unimp
    358a:	0000640b          	0x640b
    358e:	0200                	addi	s0,sp,256
    3590:	0a00                	addi	s0,sp,272
    3592:	002c                	addi	a1,sp,8
    3594:	0000                	unimp
    3596:	0661                	addi	a2,a2,24
    3598:	0000                	unimp
    359a:	0000640b          	0x640b
    359e:	0000                	unimp
    35a0:	0700                	addi	s0,sp,896
    35a2:	01f6                	slli	gp,gp,0x1d
    35a4:	0000                	unimp
    35a6:	1f05                	addi	t5,t5,-31
    35a8:	1a01                	addi	s4,s4,-32
    35aa:	030c                	addi	a1,sp,384
    35ac:	0000                	unimp
    35ae:	941a                	add	s0,s0,t1
    35b0:	0006                	c.slli	zero,0x1
    35b2:	0c00                	addi	s0,sp,528
    35b4:	2305                	jal	3ad4 <__divdf3+0x1f8>
    35b6:	0801                	addi	a6,a6,0
    35b8:	000006a7          	0x6a7
    35bc:	9b18                	0x9b18
    35be:	05000007          	0x5000007
    35c2:	0125                	addi	sp,sp,9
    35c4:	a711                	j	3cc8 <__divdf3+0x3ec>
    35c6:	0006                	c.slli	zero,0x1
    35c8:	0000                	unimp
    35ca:	c418                	sw	a4,8(s0)
    35cc:	0005                	c.nop	1
    35ce:	0500                	addi	s0,sp,640
    35d0:	0126                	slli	sp,sp,0x9
    35d2:	00005d07          	0x5d07
    35d6:	0400                	addi	s0,sp,512
    35d8:	0018                	0x18
    35da:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    35de:	ad0b0127          	0xad0b0127
    35e2:	0006                	c.slli	zero,0x1
    35e4:	0800                	addi	s0,sp,16
    35e6:	0500                	addi	s0,sp,640
    35e8:	6e04                	flw	fs1,24(a2)
    35ea:	0006                	c.slli	zero,0x1
    35ec:	0500                	addi	s0,sp,640
    35ee:	6104                	flw	fs1,0(a0)
    35f0:	0006                	c.slli	zero,0x1
    35f2:	1a00                	addi	s0,sp,304
    35f4:	0186                	slli	gp,gp,0x1
    35f6:	0000                	unimp
    35f8:	050e                	slli	a0,a0,0x3
    35fa:	ec08013f 18000006 	0x18000006ec08013f
    3602:	0790                	addi	a2,sp,960
    3604:	0000                	unimp
    3606:	4005                	c.li	zero,1
    3608:	1201                	addi	tp,tp,-32
    360a:	06ec                	addi	a1,sp,844
    360c:	0000                	unimp
    360e:	1800                	addi	s0,sp,48
    3610:	0398                	addi	a4,sp,448
    3612:	0000                	unimp
    3614:	4105                	li	sp,1
    3616:	1201                	addi	tp,tp,-32
    3618:	06ec                	addi	a1,sp,844
    361a:	0000                	unimp
    361c:	1806                	slli	a6,a6,0x21
    361e:	065e                	slli	a2,a2,0x17
    3620:	0000                	unimp
    3622:	4205                	li	tp,1
    3624:	1201                	addi	tp,tp,-32
    3626:	003a                	c.slli	zero,0xe
    3628:	0000                	unimp
    362a:	000c                	0xc
    362c:	3a0a                	fld	fs4,160(sp)
    362e:	0000                	unimp
    3630:	fc00                	fsw	fs0,56(s0)
    3632:	0006                	c.slli	zero,0x1
    3634:	0b00                	addi	s0,sp,400
    3636:	0064                	addi	s1,sp,12
    3638:	0000                	unimp
    363a:	0002                	c.slli64	zero
    363c:	5905d01b          	0x5905d01b
    3640:	0702                	c.slli64	a4
    3642:	0811                	addi	a6,a6,4
    3644:	0000                	unimp
    3646:	3e18                	fld	fa4,56(a2)
    3648:	05000007          	0x5000007
    364c:	6418025b          	0x6418025b
    3650:	0000                	unimp
    3652:	0000                	unimp
    3654:	b718                	fsd	fa4,40(a4)
    3656:	0006                	c.slli	zero,0x1
    3658:	0500                	addi	s0,sp,640
    365a:	025c                	addi	a5,sp,260
    365c:	c112                	sw	tp,128(sp)
    365e:	0005                	c.nop	1
    3660:	0400                	addi	s0,sp,512
    3662:	af18                	fsd	fa4,24(a4)
    3664:	0001                	nop
    3666:	0500                	addi	s0,sp,640
    3668:	025d                	addi	tp,tp,23
    366a:	1110                	addi	a2,sp,160
    366c:	0008                	0x8
    366e:	0800                	addi	s0,sp,16
    3670:	6018                	flw	fa4,0(s0)
    3672:	0005                	c.nop	1
    3674:	0500                	addi	s0,sp,640
    3676:	025e                	slli	tp,tp,0x17
    3678:	0001a617          	auipc	a2,0x1a
    367c:	2400                	fld	fs0,8(s0)
    367e:	5018                	lw	a4,32(s0)
    3680:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    3684:	025f 5d0f 0000      	0x5d0f025f
    368a:	4800                	lw	s0,16(s0)
    368c:	9618                	0x9618
    368e:	05000007          	0x5000007
    3692:	0260                	addi	s0,sp,268
    3694:	562c                	lw	a1,104(a2)
    3696:	0000                	unimp
    3698:	5000                	lw	s0,32(s0)
    369a:	5e18                	lw	a4,56(a2)
    369c:	0000                	unimp
    369e:	0500                	addi	s0,sp,640
    36a0:	0261                	addi	tp,tp,24
    36a2:	b31a                	fsd	ft6,416(sp)
    36a4:	0006                	c.slli	zero,0x1
    36a6:	5800                	lw	s0,48(s0)
    36a8:	8d18                	0x8d18
    36aa:	0002                	c.slli64	zero
    36ac:	0500                	addi	s0,sp,640
    36ae:	0262                	slli	tp,tp,0x18
    36b0:	1016                	c.slli	zero,0x25
    36b2:	0001                	nop
    36b4:	6800                	flw	fs0,16(s0)
    36b6:	c418                	sw	a4,8(s0)
    36b8:	0006                	c.slli	zero,0x1
    36ba:	0500                	addi	s0,sp,640
    36bc:	10160263          	beq	a2,ra,37c0 <__udivdi3+0x590>
    36c0:	0001                	nop
    36c2:	7000                	flw	fs0,32(s0)
    36c4:	4118                	lw	a4,0(a0)
    36c6:	0000                	unimp
    36c8:	0500                	addi	s0,sp,640
    36ca:	0264                	addi	s1,sp,268
    36cc:	1016                	c.slli	zero,0x25
    36ce:	0001                	nop
    36d0:	7800                	flw	fs0,48(s0)
    36d2:	9c18                	0x9c18
    36d4:	0005                	c.nop	1
    36d6:	0500                	addi	s0,sp,640
    36d8:	0265                	addi	tp,tp,25
    36da:	2110                	fld	fa2,0(a0)
    36dc:	0008                	0x8
    36de:	8000                	0x8000
    36e0:	6318                	flw	fa4,0(a4)
    36e2:	0000                	unimp
    36e4:	0500                	addi	s0,sp,640
    36e6:	0266                	slli	tp,tp,0x19
    36e8:	3110                	fld	fa2,32(a0)
    36ea:	0008                	0x8
    36ec:	8800                	0x8800
    36ee:	3f18                	fld	fa4,56(a4)
    36f0:	0006                	c.slli	zero,0x1
    36f2:	0500                	addi	s0,sp,640
    36f4:	5d0f0267          	jalr	tp,1488(t5) # 75d0 <_dtoa_r+0xfe4>
    36f8:	0000                	unimp
    36fa:	a000                	fsd	fs0,0(s0)
    36fc:	c618                	sw	a4,8(a2)
    36fe:	0000                	unimp
    3700:	0500                	addi	s0,sp,640
    3702:	0268                	addi	a0,sp,268
    3704:	1016                	c.slli	zero,0x25
    3706:	0001                	nop
    3708:	a400                	fsd	fs0,8(s0)
    370a:	ae18                	fsd	fa4,24(a2)
    370c:	0002                	c.slli64	zero
    370e:	0500                	addi	s0,sp,640
    3710:	0269                	addi	tp,tp,26
    3712:	1016                	c.slli	zero,0x25
    3714:	0001                	nop
    3716:	ac00                	fsd	fs0,24(s0)
    3718:	4818                	lw	a4,16(s0)
    371a:	0002                	c.slli64	zero
    371c:	0500                	addi	s0,sp,640
    371e:	026a                	slli	tp,tp,0x1a
    3720:	1016                	c.slli	zero,0x25
    3722:	0001                	nop
    3724:	b400                	fsd	fs0,40(s0)
    3726:	ad18                	fsd	fa4,24(a0)
    3728:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    372c:	1016026b          	0x1016026b
    3730:	0001                	nop
    3732:	bc00                	fsd	fs0,56(s0)
    3734:	7c18                	flw	fa4,56(s0)
    3736:	0002                	c.slli64	zero
    3738:	0500                	addi	s0,sp,640
    373a:	026c                	addi	a1,sp,268
    373c:	1016                	c.slli	zero,0x25
    373e:	0001                	nop
    3740:	c400                	sw	s0,8(s0)
    3742:	7e18                	flw	fa4,56(a2)
    3744:	0004                	0x4
    3746:	0500                	addi	s0,sp,640
    3748:	026d                	addi	tp,tp,27
    374a:	5d08                	lw	a0,56(a0)
    374c:	0000                	unimp
    374e:	cc00                	sw	s0,24(s0)
    3750:	0a00                	addi	s0,sp,272
    3752:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    3756:	0821                	addi	a6,a6,8
    3758:	0000                	unimp
    375a:	0000640b          	0x640b
    375e:	1900                	addi	s0,sp,176
    3760:	0a00                	addi	s0,sp,272
    3762:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    3766:	0831                	addi	a6,a6,12
    3768:	0000                	unimp
    376a:	0000640b          	0x640b
    376e:	0700                	addi	s0,sp,896
    3770:	0a00                	addi	s0,sp,272
    3772:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    3776:	0841                	addi	a6,a6,16
    3778:	0000                	unimp
    377a:	0000640b          	0x640b
    377e:	1700                	addi	s0,sp,928
    3780:	1b00                	addi	s0,sp,432
    3782:	05f0                	addi	a2,sp,716
    3784:	0272                	slli	tp,tp,0x1c
    3786:	00086807          	0x86807
    378a:	1800                	addi	s0,sp,48
    378c:	017f                	0x17f
    378e:	0000                	unimp
    3790:	7505                	lui	a0,0xfffe1
    3792:	1b02                	slli	s6,s6,0x20
    3794:	0868                	addi	a0,sp,28
    3796:	0000                	unimp
    3798:	1800                	addi	s0,sp,48
    379a:	000007d3          	fadd.s	fa5,ft0,ft0,rne
    379e:	7605                	lui	a2,0xfffe1
    37a0:	1802                	slli	a6,a6,0x20
    37a2:	0878                	addi	a4,sp,28
    37a4:	0000                	unimp
    37a6:	0078                	addi	a4,sp,12
    37a8:	060a                	slli	a2,a2,0x2
    37aa:	78000003          	lb	zero,1920(zero) # 780 <main+0x704>
    37ae:	0008                	0x8
    37b0:	0b00                	addi	s0,sp,400
    37b2:	0064                	addi	s1,sp,12
    37b4:	0000                	unimp
    37b6:	001d                	c.nop	7
    37b8:	640a                	flw	fs0,128(sp)
    37ba:	0000                	unimp
    37bc:	8800                	0x8800
    37be:	0008                	0x8
    37c0:	0b00                	addi	s0,sp,400
    37c2:	0064                	addi	s1,sp,12
    37c4:	0000                	unimp
    37c6:	001d                	c.nop	7
    37c8:	f01c                	fsw	fa5,32(s0)
    37ca:	5705                	li	a4,-31
    37cc:	0302                	c.slli64	t1
    37ce:	08ad                	addi	a7,a7,11
    37d0:	0000                	unimp
    37d2:	e31d                	bnez	a4,37f8 <__udivdi3+0x5c8>
    37d4:	0006                	c.slli	zero,0x1
    37d6:	0500                	addi	s0,sp,640
    37d8:	026e                	slli	tp,tp,0x1b
    37da:	0006fc0b          	0x6fc0b
    37de:	1d00                	addi	s0,sp,688
    37e0:	0000056f          	jal	a0,37e0 <__udivdi3+0x5b0>
    37e4:	7705                	lui	a4,0xfffe1
    37e6:	0b02                	c.slli64	s6
    37e8:	0841                	addi	a6,a6,16
    37ea:	0000                	unimp
    37ec:	0a00                	addi	s0,sp,272
    37ee:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    37f2:	08bd                	addi	a7,a7,15
    37f4:	0000                	unimp
    37f6:	0000640b          	0x640b
    37fa:	1800                	addi	s0,sp,48
    37fc:	0600                	addi	s0,sp,768
    37fe:	07a1                	addi	a5,a5,8
    3800:	0000                	unimp
    3802:	0405                	addi	s0,s0,1
    3804:	08bd                	addi	a7,a7,15
    3806:	0000                	unimp
    3808:	d31e                	sw	t2,164(sp)
    380a:	0008                	0x8
    380c:	1500                	addi	s0,sp,672
    380e:	046d                	addi	s0,s0,27
    3810:	0000                	unimp
    3812:	0500                	addi	s0,sp,640
    3814:	c804                	sw	s1,16(s0)
    3816:	0008                	0x8
    3818:	0500                	addi	s0,sp,640
    381a:	9004                	0x9004
    381c:	0001                	nop
    381e:	1e00                	addi	s0,sp,816
    3820:	08ea                	slli	a7,a7,0x1a
    3822:	0000                	unimp
    3824:	5d15                	li	s10,-27
    3826:	0000                	unimp
    3828:	0000                	unimp
    382a:	0405                	addi	s0,s0,1
    382c:	08f0                	addi	a2,sp,92
    382e:	0000                	unimp
    3830:	0405                	addi	s0,s0,1
    3832:	08df 0000 610a      	0x610a000008df
    3838:	0006                	c.slli	zero,0x1
    383a:	0600                	addi	s0,sp,768
    383c:	0009                	c.nop	2
    383e:	0b00                	addi	s0,sp,400
    3840:	0064                	addi	s1,sp,12
    3842:	0000                	unimp
    3844:	0002                	c.slli64	zero
    3846:	3d1f 0005 0500      	0x50000053d1f
    384c:	6d170307          	0x6d170307
    3850:	0004                	0x4
    3852:	1f00                	addi	s0,sp,944
    3854:	0536                	slli	a0,a0,0xd
    3856:	0000                	unimp
    3858:	0805                	addi	a6,a6,1
    385a:	04731d03          	lh	s10,71(t1) # 713ff <_data_lma+0x66287>
    385e:	0000                	unimp
    3860:	2d20                	fld	fs0,88(a0)
    3862:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    3866:	169a                	slli	a3,a3,0x26
    3868:	0041                	c.nop	16
    386a:	0000                	unimp
    386c:	3720                	fld	fs0,104(a4)
    386e:	0000                	unimp
    3870:	0600                	addi	s0,sp,768
    3872:	005d159b          	0x5d159b
    3876:	0000                	unimp
    3878:	c10a                	sw	sp,128(sp)
    387a:	0005                	c.nop	1
    387c:	4800                	lw	s0,16(s0)
    387e:	0009                	c.nop	2
    3880:	0b00                	addi	s0,sp,400
    3882:	0064                	addi	s1,sp,12
    3884:	0000                	unimp
    3886:	0001                	nop
    3888:	6220                	flw	fs0,64(a2)
    388a:	0002                	c.slli64	zero
    388c:	0600                	addi	s0,sp,768
    388e:	179e                	slli	a5,a5,0x27
    3890:	0938                	addi	a4,sp,152
    3892:	0000                	unimp
    3894:	8d04                	0x8d04
    3896:	0000                	unimp
    3898:	0700                	addi	s0,sp,896
    389a:	185e                	slli	a6,a6,0x37
    389c:	00000033          	add	zero,zero,zero
    38a0:	a804                	fsd	fs1,16(s0)
    38a2:	0006                	c.slli	zero,0x1
    38a4:	0700                	addi	s0,sp,896
    38a6:	185f 003a 0000      	0x3a185f
    38ac:	4b04                	lw	s1,16(a4)
    38ae:	07000007          	0x7000007
    38b2:	1860                	addi	s0,sp,60
    38b4:	005d                	c.nop	23
    38b6:	0000                	unimp
    38b8:	0802                	c.slli64	a6
    38ba:	9504                	0x9504
    38bc:	0004                	0x4
    38be:	0400                	addi	s0,sp,512
    38c0:	00000017          	auipc	zero,0x0
    38c4:	64186307          	0x64186307
    38c8:	0000                	unimp
    38ca:	0400                	addi	s0,sp,512
    38cc:	09dc                	addi	a5,sp,212
    38ce:	0000                	unimp
    38d0:	7f186407          	0x7f186407
    38d4:	0009                	c.nop	2
    38d6:	2000                	fld	fs0,0(s0)
    38d8:	00000663          	beqz	zero,38e4 <__divdf3+0x8>
    38dc:	7f0fba07          	fld	fs4,2032(t6)
    38e0:	0009                	c.nop	2
    38e2:	0400                	addi	s0,sp,512
    38e4:	01c9                	addi	gp,gp,18
    38e6:	0000                	unimp
    38e8:	5208                	lw	a0,32(a2)
    38ea:	5410                	lw	a2,40(s0)
    38ec:	0009                	c.nop	2
    38ee:	0400                	addi	s0,sp,512
    38f0:	0000006f          	j	38f0 <__divdf3+0x14>
    38f4:	5308                	lw	a0,32(a4)
    38f6:	6c10                	flw	fa2,24(s0)
    38f8:	0009                	c.nop	2
    38fa:	0f00                	addi	s0,sp,912
    38fc:	0094                	addi	a3,sp,64
    38fe:	0000                	unimp
    3900:	0810                	addi	a2,sp,16
    3902:	1059                	c.nop	-10
    3904:	09f5                	addi	s3,s3,29
    3906:	0000                	unimp
    3908:	4e10                	lw	a2,24(a2)
    390a:	0800                	addi	s0,sp,16
    390c:	005d0d5b          	0x5d0d5b
    3910:	0000                	unimp
    3912:	1000                	addi	s0,sp,32
    3914:	0041                	c.nop	16
    3916:	5c08                	lw	a0,56(s0)
    3918:	f50d                	bnez	a0,3842 <__udivdi3+0x612>
    391a:	0009                	c.nop	2
    391c:	0400                	addi	s0,sp,512
    391e:	4210                	lw	a2,0(a2)
    3920:	0800                	addi	s0,sp,16
    3922:	0d5d                	addi	s10,s10,23
    3924:	09f5                	addi	s3,s3,29
    3926:	0000                	unimp
    3928:	1008                	addi	a0,sp,32
    392a:	5e080043          	fmadd.q	ft0,fa6,ft0,fa1,rne
    392e:	fb0d                	bnez	a4,3860 <__udivdi3+0x630>
    3930:	0009                	c.nop	2
    3932:	0c00                	addi	s0,sp,528
    3934:	0500                	addi	s0,sp,640
    3936:	a304                	fsd	fs1,0(a4)
    3938:	0009                	c.nop	2
    393a:	0500                	addi	s0,sp,640
    393c:	af04                	fsd	fs1,24(a4)
    393e:	0009                	c.nop	2
    3940:	0400                	addi	s0,sp,512
    3942:	033e                	slli	t1,t1,0xf
    3944:	0000                	unimp
    3946:	5f08                	lw	a0,56(a4)
    3948:	0009bb03          	0x9bb03
    394c:	2100                	fld	fs0,0(a0)
    394e:	000009bf 01015901 	0x1015901000009bf
    3956:	7801                	lui	a6,0xfffe0
    3958:	000a                	c.slli	zero,0x2
    395a:	2200                	fld	fs0,0(a2)
    395c:	004e                	c.slli	zero,0x13
    395e:	5901                	li	s2,-32
    3960:	2501                	jal	3f60 <__divdf3+0x684>
    3962:	097f                	0x97f
    3964:	0000                	unimp
    3966:	4322                	lw	t1,8(sp)
    3968:	0100                	addi	s0,sp,128
    396a:	0159                	addi	sp,sp,22
    396c:	fb30                	fsw	fa2,112(a4)
    396e:	0009                	c.nop	2
    3970:	2200                	fld	fs0,0(a2)
    3972:	0041                	c.nop	16
    3974:	5901                	li	s2,-32
    3976:	3b01                	jal	3686 <__udivdi3+0x456>
    3978:	09f5                	addi	s3,s3,29
    397a:	0000                	unimp
    397c:	4222                	lw	tp,8(sp)
    397e:	0100                	addi	s0,sp,128
    3980:	0159                	addi	sp,sp,22
    3982:	f546                	fsw	fa7,168(sp)
    3984:	0009                	c.nop	2
    3986:	2300                	fld	fs0,0(a4)
    3988:	0069                	c.nop	26
    398a:	5b01                	li	s6,-32
    398c:	0c01                	addi	s8,s8,0
    398e:	097f                	0x97f
    3990:	0000                	unimp
    3992:	01006a23          	0x1006a23
    3996:	7f0f015b          	0x7f0f015b
    399a:	0009                	c.nop	2
    399c:	2300                	fld	fs0,0(a4)
    399e:	5b01006b          	0x5b01006b
    39a2:	1201                	addi	tp,tp,-32
    39a4:	097f                	0x97f
    39a6:	0000                	unimp
    39a8:	2324                	fld	fs1,64(a4)
    39aa:	6d74                	flw	fa3,92(a0)
    39ac:	0070                	addi	a2,sp,12
    39ae:	6301                	0x6301
    39b0:	1801                	addi	a6,a6,-32
    39b2:	000009af          	0x9af
    39b6:	0000                	unimp
    39b8:	2021                	jal	39c0 <__divdf3+0xe4>
    39ba:	000a                	c.slli	zero,0x2
    39bc:	0100                	addi	s0,sp,128
    39be:	01010143          	fmadd.s	ft2,ft2,fa6,ft0,rne
    39c2:	0ad4                	addi	a3,sp,340
    39c4:	0000                	unimp
    39c6:	4e22                	lw	t3,8(sp)
    39c8:	0100                	addi	s0,sp,128
    39ca:	7f1a0143          	fmadd.q	ft2,fs4,fa7,fa5,rne
    39ce:	0009                	c.nop	2
    39d0:	2200                	fld	fs0,0(a2)
    39d2:	43010043          	fmadd.d	ft0,ft2,fa6,fs0,rne
    39d6:	2501                	jal	3fd6 <__divdf3+0x6fa>
    39d8:	000009fb          	0x9fb
    39dc:	4122                	lw	sp,8(sp)
    39de:	0100                	addi	s0,sp,128
    39e0:	f5300143          	0xf5300143
    39e4:	0009                	c.nop	2
    39e6:	2200                	fld	fs0,0(a2)
    39e8:	0042                	c.slli	zero,0x10
    39ea:	4301                	li	t1,0
    39ec:	3b01                	jal	36fc <__udivdi3+0x4cc>
    39ee:	09f5                	addi	s3,s3,29
    39f0:	0000                	unimp
    39f2:	01006923          	0x1006923
    39f6:	0145                	addi	sp,sp,17
    39f8:	7f0c                	flw	fa1,56(a4)
    39fa:	0009                	c.nop	2
    39fc:	2300                	fld	fs0,0(a4)
    39fe:	006a                	c.slli	zero,0x1a
    3a00:	4501                	li	a0,0
    3a02:	0f01                	addi	t5,t5,0
    3a04:	097f                	0x97f
    3a06:	0000                	unimp
    3a08:	01006b23          	0x1006b23
    3a0c:	0145                	addi	sp,sp,17
    3a0e:	7f12                	flw	ft10,36(sp)
    3a10:	0009                	c.nop	2
    3a12:	0000                	unimp
    3a14:	ed21                	bnez	a0,3a6c <__divdf3+0x190>
    3a16:	0009                	c.nop	2
    3a18:	0100                	addi	s0,sp,128
    3a1a:	0130                	addi	a2,sp,136
    3a1c:	0101                	addi	sp,sp,0
    3a1e:	0b25                	addi	s6,s6,9
    3a20:	0000                	unimp
    3a22:	4e22                	lw	t3,8(sp)
    3a24:	0100                	addi	s0,sp,128
    3a26:	0130                	addi	a2,sp,136
    3a28:	7f18                	flw	fa4,56(a4)
    3a2a:	0009                	c.nop	2
    3a2c:	2200                	fld	fs0,0(a2)
    3a2e:	30010043          	fmadd.s	ft0,ft2,ft0,ft6,rne
    3a32:	2301                	jal	3f32 <__divdf3+0x656>
    3a34:	000009fb          	0x9fb
    3a38:	4122                	lw	sp,8(sp)
    3a3a:	0100                	addi	s0,sp,128
    3a3c:	0130                	addi	a2,sp,136
    3a3e:	f52e                	fsw	fa1,168(sp)
    3a40:	0009                	c.nop	2
    3a42:	2200                	fld	fs0,0(a2)
    3a44:	0042                	c.slli	zero,0x10
    3a46:	3001                	jal	3246 <__udivdi3+0x16>
    3a48:	3901                	jal	3658 <__udivdi3+0x428>
    3a4a:	09f5                	addi	s3,s3,29
    3a4c:	0000                	unimp
    3a4e:	01006923          	0x1006923
    3a52:	0132                	slli	sp,sp,0xc
    3a54:	7f0c                	flw	fa1,56(a4)
    3a56:	0009                	c.nop	2
    3a58:	2300                	fld	fs0,0(a4)
    3a5a:	006a                	c.slli	zero,0x1a
    3a5c:	3201                	jal	335c <__udivdi3+0x12c>
    3a5e:	0f01                	addi	t5,t5,0
    3a60:	097f                	0x97f
    3a62:	0000                	unimp
    3a64:	2100                	fld	fs0,0(a0)
    3a66:	0991                	addi	s3,s3,4
    3a68:	0000                	unimp
    3a6a:	1e01                	addi	t3,t3,-32
    3a6c:	0101                	addi	sp,sp,0
    3a6e:	6d01                	0x6d01
    3a70:	2200000b          	0x2200000b
    3a74:	004e                	c.slli	zero,0x13
    3a76:	1e01                	addi	t3,t3,-32
    3a78:	1901                	addi	s2,s2,-32
    3a7a:	097f                	0x97f
    3a7c:	0000                	unimp
    3a7e:	4122                	lw	sp,8(sp)
    3a80:	0100                	addi	s0,sp,128
    3a82:	011e                	slli	sp,sp,0x7
    3a84:	f524                	fsw	fs1,104(a0)
    3a86:	0009                	c.nop	2
    3a88:	2200                	fld	fs0,0(a2)
    3a8a:	6176                	flw	ft2,92(sp)
    3a8c:	006c                	addi	a1,sp,12
    3a8e:	1e01                	addi	t3,t3,-32
    3a90:	2e01                	jal	3da0 <__divdf3+0x4c4>
    3a92:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    3a96:	01006923          	0x1006923
    3a9a:	0120                	addi	s0,sp,136
    3a9c:	7f0c                	flw	fa1,56(a4)
    3a9e:	0009                	c.nop	2
    3aa0:	2300                	fld	fs0,0(a4)
    3aa2:	006a                	c.slli	zero,0x1a
    3aa4:	2001                	jal	3aa4 <__divdf3+0x1c8>
    3aa6:	0f01                	addi	t5,t5,0
    3aa8:	097f                	0x97f
    3aaa:	0000                	unimp
    3aac:	2100                	fld	fs0,0(a0)
    3aae:	09ae                	slli	s3,s3,0xb
    3ab0:	0000                	unimp
    3ab2:	0e01                	addi	t3,t3,0
    3ab4:	0101                	addi	sp,sp,0
    3ab6:	c001                	beqz	s0,3ab6 <__divdf3+0x1da>
    3ab8:	2200000b          	0x2200000b
    3abc:	004e                	c.slli	zero,0x13
    3abe:	0e01                	addi	t3,t3,0
    3ac0:	1901                	addi	s2,s2,-32
    3ac2:	097f                	0x97f
    3ac4:	0000                	unimp
    3ac6:	4322                	lw	t1,8(sp)
    3ac8:	0100                	addi	s0,sp,128
    3aca:	010e                	slli	sp,sp,0x3
    3acc:	fb24                	fsw	fs1,112(a4)
    3ace:	0009                	c.nop	2
    3ad0:	2200                	fld	fs0,0(a2)
    3ad2:	0041                	c.nop	16
    3ad4:	0e01                	addi	t3,t3,0
    3ad6:	2f01                	jal	41e6 <__gedf2+0x6>
    3ad8:	09f5                	addi	s3,s3,29
    3ada:	0000                	unimp
    3adc:	7622                	flw	fa2,40(sp)
    3ade:	6c61                	lui	s8,0x18
    3ae0:	0100                	addi	s0,sp,128
    3ae2:	010e                	slli	sp,sp,0x3
    3ae4:	a339                	j	3ff2 <__divdf3+0x716>
    3ae6:	0009                	c.nop	2
    3ae8:	2300                	fld	fs0,0(a4)
    3aea:	0069                	c.nop	26
    3aec:	1001                	c.nop	-32
    3aee:	0c01                	addi	s8,s8,0
    3af0:	097f                	0x97f
    3af2:	0000                	unimp
    3af4:	01006a23          	0x1006a23
    3af8:	0110                	addi	a2,sp,128
    3afa:	00097f0f          	0x97f0f
    3afe:	0000                	unimp
    3b00:	fd25                	bnez	a0,3a78 <__divdf3+0x19c>
    3b02:	0009                	c.nop	2
    3b04:	0100                	addi	s0,sp,128
    3b06:	095401ef          	jal	gp,4439a <_data_lma+0x39222>
    3b0a:	0000                	unimp
    3b0c:	3601                	jal	360c <__udivdi3+0x3dc>
    3b0e:	000c                	0xc
    3b10:	2600                	fld	fs0,8(a2)
    3b12:	004e                	c.slli	zero,0x13
    3b14:	ef01                	bnez	a4,3b2c <__divdf3+0x250>
    3b16:	00097f13          	andi	t5,s2,0
    3b1a:	2600                	fld	fs0,8(a2)
    3b1c:	ef010043          	fmadd.q	ft0,ft2,fa6,ft9,rne
    3b20:	fb1e                	fsw	ft7,180(sp)
    3b22:	0009                	c.nop	2
    3b24:	2700                	fld	fs0,8(a4)
    3b26:	0989                	addi	s3,s3,2
    3b28:	0000                	unimp
    3b2a:	ef01                	bnez	a4,3b42 <__divdf3+0x266>
    3b2c:	a328                	fsd	fa0,64(a4)
    3b2e:	0009                	c.nop	2
    3b30:	2800                	fld	fs0,16(s0)
    3b32:	6d74                	flw	fa3,92(a0)
    3b34:	0070                	addi	a2,sp,12
    3b36:	f101                	bnez	a0,3a36 <__divdf3+0x15a>
    3b38:	af0c                	fsd	fa1,24(a4)
    3b3a:	0009                	c.nop	2
    3b3c:	2900                	fld	fs0,16(a0)
    3b3e:	00000967          	jalr	s2,zero # 0 <_start>
    3b42:	f101                	bnez	a0,3a42 <__divdf3+0x166>
    3b44:	af15                	j	4278 <__gedf2+0x98>
    3b46:	0009                	c.nop	2
    3b48:	2800                	fld	fs0,16(s0)
    3b4a:	00727563          	bgeu	tp,t2,3b54 <__divdf3+0x278>
    3b4e:	f101                	bnez	a0,3a4e <__divdf3+0x172>
    3b50:	af1f 0009 2800      	0x28000009af1f
    3b56:	6572                	flw	fa0,28(sp)
    3b58:	0074                	addi	a3,sp,12
    3b5a:	f201                	bnez	a2,3a5a <__divdf3+0x17e>
    3b5c:	540c                	lw	a1,40(s0)
    3b5e:	0009                	c.nop	2
    3b60:	2800                	fld	fs0,16(s0)
    3b62:	0069                	c.nop	26
    3b64:	f301                	bnez	a4,3a64 <__divdf3+0x188>
    3b66:	7f0c                	flw	fa1,56(a4)
    3b68:	0009                	c.nop	2
    3b6a:	2800                	fld	fs0,16(s0)
    3b6c:	006a                	c.slli	zero,0x1a
    3b6e:	f301                	bnez	a4,3a6e <__divdf3+0x192>
    3b70:	00097f0f          	0x97f0f
    3b74:	0000                	unimp
    3b76:	072a                	slli	a4,a4,0xa
    3b78:	0009                	c.nop	2
    3b7a:	0100                	addi	s0,sp,128
    3b7c:	01b5                	addi	gp,gp,13
    3b7e:	097f                	0x97f
    3b80:	0000                	unimp
    3b82:	1d8c                	addi	a1,sp,752
    3b84:	0000                	unimp
    3b86:	01dc                	addi	a5,sp,196
    3b88:	0000                	unimp
    3b8a:	9c01                	0x9c01
    3b8c:	0d08                	addi	a0,sp,656
    3b8e:	0000                	unimp
    3b90:	0005b72b          	0x5b72b
    3b94:	0100                	addi	s0,sp,128
    3b96:	19b5                	addi	s3,s3,-19
    3b98:	097f                	0x97f
    3b9a:	0000                	unimp
    3b9c:	2964                	fld	fs1,208(a0)
    3b9e:	0000                	unimp
    3ba0:	000a082b          	0xa082b
    3ba4:	0100                	addi	s0,sp,128
    3ba6:	28b5                	jal	3c22 <__divdf3+0x346>
    3ba8:	0128                	addi	a0,sp,136
    3baa:	0000                	unimp
    3bac:	0000299b          	0x299b
    3bb0:	0007912b          	0x7912b
    3bb4:	0100                	addi	s0,sp,128
    3bb6:	37b5                	jal	3b22 <__divdf3+0x246>
    3bb8:	096c                	addi	a1,sp,156
    3bba:	0000                	unimp
    3bbc:	29d4                	fld	fa3,144(a1)
    3bbe:	0000                	unimp
    3bc0:	702c                	flw	fa1,96(s0)
    3bc2:	0100                	addi	s0,sp,128
    3bc4:	49b5                	li	s3,13
    3bc6:	0d08                	addi	a0,sp,656
    3bc8:	0000                	unimp
    3bca:	2a08                	fld	fa0,16(a2)
    3bcc:	0000                	unimp
    3bce:	4e2d                	li	t3,11
    3bd0:	0100                	addi	s0,sp,128
    3bd2:	0db8                	addi	a4,sp,728
    3bd4:	097f                	0x97f
    3bd6:	0000                	unimp
    3bd8:	00002a3f 0100412d 	0x100412d00002a3f
    3be0:	0db9                	addi	s11,s11,14
    3be2:	09f5                	addi	s3,s3,29
    3be4:	0000                	unimp
    3be6:	00002a6b          	0x2a6b
    3bea:	422d                	li	tp,11
    3bec:	0100                	addi	s0,sp,128
    3bee:	0dba                	slli	s11,s11,0xe
    3bf0:	09f5                	addi	s3,s3,29
    3bf2:	0000                	unimp
    3bf4:	2a9d                	jal	3d6a <__divdf3+0x48e>
    3bf6:	0000                	unimp
    3bf8:	e72e                	fsw	fa1,140(sp)
    3bfa:	0009                	c.nop	2
    3bfc:	0100                	addi	s0,sp,128
    3bfe:	096c0dbb          	0x96c0dbb
    3c02:	0000                	unimp
    3c04:	2ad6                	fld	fs5,336(sp)
    3c06:	0000                	unimp
    3c08:	762d                	lui	a2,0xfffeb
    3c0a:	6c61                	lui	s8,0x18
    3c0c:	0100                	addi	s0,sp,128
    3c0e:	0dbc                	addi	a5,sp,728
    3c10:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    3c14:	2b01                	jal	4124 <__divdf3+0x848>
    3c16:	0000                	unimp
    3c18:	692d                	lui	s2,0xb
    3c1a:	0100                	addi	s0,sp,128
    3c1c:	0dbd                	addi	s11,s11,15
    3c1e:	097f                	0x97f
    3c20:	0000                	unimp
    3c22:	2b7f                	0x2b7f
    3c24:	0000                	unimp
    3c26:	6a2d                	lui	s4,0xb
    3c28:	0100                	addi	s0,sp,128
    3c2a:	14bd                	addi	s1,s1,-17
    3c2c:	097f                	0x97f
    3c2e:	0000                	unimp
    3c30:	00002bd7          	0x2bd7
    3c34:	001de42f          	0x1de42f
    3c38:	e000                	fsw	fs0,0(s0)
    3c3a:	0014                	0x14
    3c3c:	3000                	fld	fs0,32(s0)
    3c3e:	5a01                	li	s4,-32
    3c40:	0305                	addi	t1,t1,1
    3c42:	0478                	addi	a4,sp,524
    3c44:	0100                	addi	s0,sp,128
    3c46:	0000                	unimp
    3c48:	0405                	addi	s0,s0,1
    3c4a:	0a01                	addi	s4,s4,0
    3c4c:	0000                	unimp
    3c4e:	a22a                	fsd	fa0,256(sp)
    3c50:	0009                	c.nop	2
    3c52:	0100                	addi	s0,sp,128
    3c54:	0182                	c.slli64	gp
    3c56:	0954                	addi	a3,sp,148
    3c58:	0000                	unimp
    3c5a:	1734                	addi	a3,sp,936
    3c5c:	0000                	unimp
    3c5e:	0614                	addi	a3,sp,768
    3c60:	0000                	unimp
    3c62:	9c01                	0x9c01
    3c64:	11f6                	slli	gp,gp,0x3d
    3c66:	0000                	unimp
    3c68:	4e2c                	lw	a1,88(a2)
    3c6a:	0100                	addi	s0,sp,128
    3c6c:	1482                	slli	s1,s1,0x20
    3c6e:	097f                	0x97f
    3c70:	0000                	unimp
    3c72:	2c48                	fld	fa0,152(s0)
    3c74:	0000                	unimp
    3c76:	432c                	lw	a1,64(a4)
    3c78:	0100                	addi	s0,sp,128
    3c7a:	1f82                	slli	t6,t6,0x20
    3c7c:	000009fb          	0x9fb
    3c80:	2c82                	fld	fs9,0(sp)
    3c82:	0000                	unimp
    3c84:	412c                	lw	a1,64(a0)
    3c86:	0100                	addi	s0,sp,128
    3c88:	2a82                	fld	fs5,0(sp)
    3c8a:	09f5                	addi	s3,s3,29
    3c8c:	0000                	unimp
    3c8e:	2cd4                	fld	fa3,152(s1)
    3c90:	0000                	unimp
    3c92:	422c                	lw	a1,64(a2)
    3c94:	0100                	addi	s0,sp,128
    3c96:	3582                	fld	fa1,32(sp)
    3c98:	09f5                	addi	s3,s3,29
    3c9a:	0000                	unimp
    3c9c:	2d26                	fld	fs10,72(sp)
    3c9e:	0000                	unimp
    3ca0:	762c                	flw	fa1,104(a2)
    3ca2:	6c61                	lui	s8,0x18
    3ca4:	0100                	addi	s0,sp,128
    3ca6:	3f82                	fld	ft11,32(sp)
    3ca8:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    3cac:	2d78                	fld	fa4,216(a0)
    3cae:	0000                	unimp
    3cb0:	632d                	lui	t1,0xb
    3cb2:	6372                	flw	ft6,28(sp)
    3cb4:	0100                	addi	s0,sp,128
    3cb6:	0c84                	addi	s1,sp,592
    3cb8:	0960                	addi	s0,sp,156
    3cba:	0000                	unimp
    3cbc:	2db2                	fld	fs11,264(sp)
    3cbe:	0000                	unimp
    3cc0:	892e                	mv	s2,a1
    3cc2:	0009                	c.nop	2
    3cc4:	0100                	addi	s0,sp,128
    3cc6:	0c85                	addi	s9,s9,1
    3cc8:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    3ccc:	2e2e                	fld	ft8,200(sp)
    3cce:	0000                	unimp
    3cd0:	2531                	jal	42dc <__ledf2+0xc>
    3cd2:	8000000b          	0x8000000b
    3cd6:	18000017          	auipc	zero,0x18000
    3cda:	0004                	0x4
    3cdc:	0100                	addi	s0,sp,128
    3cde:	0dd80587          	0xdd80587
    3ce2:	0000                	unimp
    3ce4:	4932                	lw	s2,12(sp)
    3ce6:	4c00000b          	0x4c00000b
    3cea:	002e                	c.slli	zero,0xb
    3cec:	3200                	fld	fs0,32(a2)
    3cee:	0b3e                	slli	s6,s6,0xf
    3cf0:	0000                	unimp
    3cf2:	2e75                	jal	40ae <__divdf3+0x7d2>
    3cf4:	0000                	unimp
    3cf6:	3332                	fld	ft6,296(sp)
    3cf8:	c700000b          	0xc700000b
    3cfc:	002e                	c.slli	zero,0xb
    3cfe:	3300                	fld	fs0,32(a4)
    3d00:	0418                	addi	a4,sp,512
    3d02:	0000                	unimp
    3d04:	5634                	lw	a3,104(a2)
    3d06:	0100000b          	0x100000b
    3d0a:	3400002f          	0x3400002f
    3d0e:	0b61                	addi	s6,s6,24
    3d10:	0000                	unimp
    3d12:	2f42                	fld	ft10,16(sp)
    3d14:	0000                	unimp
    3d16:	0000                	unimp
    3d18:	6d31                	lui	s10,0xc
    3d1a:	0400000b          	0x400000b
    3d1e:	0018                	0x18
    3d20:	3800                	fld	fs0,48(s0)
    3d22:	0004                	0x4
    3d24:	0100                	addi	s0,sp,128
    3d26:	0e19058b          	0xe19058b
    3d2a:	0000                	unimp
    3d2c:	9c35                	0x9c35
    3d2e:	3500000b          	0x3500000b
    3d32:	0b91                	addi	s7,s7,4
    3d34:	0000                	unimp
    3d36:	8635                	srai	a2,a2,0xd
    3d38:	3500000b          	0x3500000b
    3d3c:	00000b7b          	0xb7b
    3d40:	00043833          	sltu	a6,s0,zero
    3d44:	3400                	fld	fs0,40(s0)
    3d46:	0ba9                	addi	s7,s7,10
    3d48:	0000                	unimp
    3d4a:	2f56                	fld	ft10,336(sp)
    3d4c:	0000                	unimp
    3d4e:	b434                	fsd	fa3,104(s0)
    3d50:	9300000b          	0x9300000b
    3d54:	0000002f          	0x2f
    3d58:	3100                	fld	fs0,32(a0)
    3d5a:	0bc0                	addi	s0,sp,468
    3d5c:	0000                	unimp
    3d5e:	1864                	addi	s1,sp,60
    3d60:	0000                	unimp
    3d62:	0458                	addi	a4,sp,516
    3d64:	0000                	unimp
    3d66:	8c01                	sub	s0,s0,s0
    3d68:	000e790b          	0xe790b
    3d6c:	3500                	fld	fs0,40(a0)
    3d6e:	0be5                	addi	s7,s7,25
    3d70:	0000                	unimp
    3d72:	db35                	beqz	a4,3ce6 <__divdf3+0x40a>
    3d74:	3500000b          	0x3500000b
    3d78:	0bd1                	addi	s7,s7,20
    3d7a:	0000                	unimp
    3d7c:	00045833          	srl	a6,s0,zero
    3d80:	3400                	fld	fs0,40(s0)
    3d82:	0bf1                	addi	s7,s7,28
    3d84:	0000                	unimp
    3d86:	00002fa7          	fsw	ft0,31(zero) # 1f <_start+0x1f>
    3d8a:	fd34                	fsw	fa3,120(a0)
    3d8c:	d100000b          	0xd100000b
    3d90:	3400002f          	0x3400002f
    3d94:	0c09                	addi	s8,s8,2
    3d96:	0000                	unimp
    3d98:	3005                	jal	35b8 <__udivdi3+0x388>
    3d9a:	0000                	unimp
    3d9c:	1534                	addi	a3,sp,680
    3d9e:	000c                	0xc
    3da0:	2300                	fld	fs0,0(a4)
    3da2:	0030                	addi	a2,sp,8
    3da4:	3400                	fld	fs0,40(s0)
    3da6:	0c21                	addi	s8,s8,8
    3da8:	0000                	unimp
    3daa:	304c                	fld	fa1,160(s0)
    3dac:	0000                	unimp
    3dae:	2b34                	fld	fa3,80(a4)
    3db0:	000c                	0xc
    3db2:	6a00                	flw	fs0,16(a2)
    3db4:	0030                	addi	a2,sp,8
    3db6:	0000                	unimp
    3db8:	3100                	fld	fs0,32(a0)
    3dba:	0ad4                	addi	a3,sp,340
    3dbc:	0000                	unimp
    3dbe:	190c                	addi	a1,sp,176
    3dc0:	0000                	unimp
    3dc2:	0478                	addi	a4,sp,524
    3dc4:	0000                	unimp
    3dc6:	9001                	srli	s0,s0,0x20
    3dc8:	ca05                	beqz	a2,3df8 <__divdf3+0x51c>
    3dca:	000e                	c.slli	zero,0x3
    3dcc:	3200                	fld	fs0,32(a2)
    3dce:	00000b03          	lb	s6,0(zero) # 0 <_start>
    3dd2:	307e                	fld	ft0,504(sp)
    3dd4:	0000                	unimp
    3dd6:	f832                	fsw	fa2,48(sp)
    3dd8:	000a                	c.slli	zero,0x2
    3dda:	ba00                	fsd	fs0,48(a2)
    3ddc:	0030                	addi	a2,sp,8
    3dde:	3200                	fld	fs0,32(a2)
    3de0:	0aed                	addi	s5,s5,27
    3de2:	0000                	unimp
    3de4:	30f6                	fld	ft1,376(sp)
    3de6:	0000                	unimp
    3de8:	e232                	fsw	fa2,4(sp)
    3dea:	000a                	c.slli	zero,0x2
    3dec:	3200                	fld	fs0,32(a2)
    3dee:	0031                	c.nop	12
    3df0:	3300                	fld	fs0,32(a4)
    3df2:	0478                	addi	a4,sp,524
    3df4:	0000                	unimp
    3df6:	0e34                	addi	a3,sp,792
    3df8:	5c00000b          	0x5c00000b
    3dfc:	0031                	c.nop	12
    3dfe:	3400                	fld	fs0,40(s0)
    3e00:	0b19                	addi	s6,s6,6
    3e02:	0000                	unimp
    3e04:	317c                	fld	fa5,224(a0)
    3e06:	0000                	unimp
    3e08:	0000                	unimp
    3e0a:	c031                	beqz	s0,3e4e <__divdf3+0x572>
    3e0c:	6800000b          	0x6800000b
    3e10:	0019                	c.nop	6
    3e12:	a000                	fsd	fs0,0(s0)
    3e14:	0004                	0x4
    3e16:	0100                	addi	s0,sp,128
    3e18:	0b91                	addi	s7,s7,4
    3e1a:	0f2a                	slli	t5,t5,0xa
    3e1c:	0000                	unimp
    3e1e:	e535                	bnez	a0,3e8a <__divdf3+0x5ae>
    3e20:	3500000b          	0x3500000b
    3e24:	00000bdb          	0xbdb
    3e28:	d135                	beqz	a0,3d8c <__divdf3+0x4b0>
    3e2a:	3300000b          	0x3300000b
    3e2e:	04a0                	addi	s0,sp,584
    3e30:	0000                	unimp
    3e32:	f134                	fsw	fa3,96(a0)
    3e34:	9000000b          	0x9000000b
    3e38:	0031                	c.nop	12
    3e3a:	3400                	fld	fs0,40(s0)
    3e3c:	0bfd                	addi	s7,s7,31
    3e3e:	0000                	unimp
    3e40:	31ba                	fld	ft3,424(sp)
    3e42:	0000                	unimp
    3e44:	0934                	addi	a3,sp,152
    3e46:	000c                	0xc
    3e48:	ee00                	fsw	fs0,24(a2)
    3e4a:	0031                	c.nop	12
    3e4c:	3400                	fld	fs0,40(s0)
    3e4e:	0c15                	addi	s8,s8,5
    3e50:	0000                	unimp
    3e52:	320c                	fld	fa1,32(a2)
    3e54:	0000                	unimp
    3e56:	2134                	fld	fa3,64(a0)
    3e58:	000c                	0xc
    3e5a:	3500                	fld	fs0,40(a0)
    3e5c:	0032                	c.slli	zero,0xc
    3e5e:	3400                	fld	fs0,40(s0)
    3e60:	00000c2b          	0xc2b
    3e64:	3248                	fld	fa0,160(a2)
    3e66:	0000                	unimp
    3e68:	0000                	unimp
    3e6a:	7831                	lui	a6,0xfffec
    3e6c:	000a                	c.slli	zero,0x2
    3e6e:	f400                	fsw	fs0,40(s0)
    3e70:	0019                	c.nop	6
    3e72:	c000                	sw	s0,0(s0)
    3e74:	0004                	0x4
    3e76:	0100                	addi	s0,sp,128
    3e78:	0595                	addi	a1,a1,5
    3e7a:	0f84                	addi	s1,sp,976
    3e7c:	0000                	unimp
    3e7e:	a732                	fsd	fa2,392(sp)
    3e80:	000a                	c.slli	zero,0x2
    3e82:	9700                	0x9700
    3e84:	0032                	c.slli	zero,0xc
    3e86:	3200                	fld	fs0,32(a2)
    3e88:	0a9c                	addi	a5,sp,336
    3e8a:	0000                	unimp
    3e8c:	000032d3          	fadd.s	ft5,ft0,ft0,rup
    3e90:	9132                	add	sp,sp,a2
    3e92:	000a                	c.slli	zero,0x2
    3e94:	0f00                	addi	s0,sp,912
    3e96:	32000033          	0x32000033
    3e9a:	0a86                	slli	s5,s5,0x1
    3e9c:	0000                	unimp
    3e9e:	0000334b          	fnmsub.s	ft6,ft0,ft0,ft0,rup
    3ea2:	0004c033          	xor	zero,s1,zero
    3ea6:	3400                	fld	fs0,40(s0)
    3ea8:	0ab2                	slli	s5,s5,0xc
    3eaa:	0000                	unimp
    3eac:	3375                	jal	3c58 <__divdf3+0x37c>
    3eae:	0000                	unimp
    3eb0:	bd34                	fsd	fa3,120(a0)
    3eb2:	000a                	c.slli	zero,0x2
    3eb4:	c600                	sw	s0,8(a2)
    3eb6:	34000033          	0x34000033
    3eba:	0ac8                	addi	a0,sp,340
    3ebc:	0000                	unimp
    3ebe:	33e5                	jal	3ca6 <__divdf3+0x3ca>
    3ec0:	0000                	unimp
    3ec2:	0000                	unimp
    3ec4:	c031                	beqz	s0,3f08 <__divdf3+0x62c>
    3ec6:	a400000b          	0xa400000b
    3eca:	001a                	c.slli	zero,0x6
    3ecc:	f000                	fsw	fs0,32(s0)
    3ece:	0004                	0x4
    3ed0:	0100                	addi	s0,sp,128
    3ed2:	0b96                	slli	s7,s7,0x5
    3ed4:	0fe4                	addi	s1,sp,988
    3ed6:	0000                	unimp
    3ed8:	e535                	bnez	a0,3f44 <__divdf3+0x668>
    3eda:	3500000b          	0x3500000b
    3ede:	00000bdb          	0xbdb
    3ee2:	d135                	beqz	a0,3e46 <__divdf3+0x56a>
    3ee4:	3300000b          	0x3300000b
    3ee8:	04f0                	addi	a2,sp,588
    3eea:	0000                	unimp
    3eec:	f134                	fsw	fa3,96(a0)
    3eee:	1c00000b          	0x1c00000b
    3ef2:	0034                	addi	a3,sp,8
    3ef4:	3400                	fld	fs0,40(s0)
    3ef6:	0bfd                	addi	s7,s7,31
    3ef8:	0000                	unimp
    3efa:	3446                	fld	fs0,112(sp)
    3efc:	0000                	unimp
    3efe:	0934                	addi	a3,sp,152
    3f00:	000c                	0xc
    3f02:	7a00                	flw	fs0,48(a2)
    3f04:	0034                	addi	a3,sp,8
    3f06:	3400                	fld	fs0,40(s0)
    3f08:	0c15                	addi	s8,s8,5
    3f0a:	0000                	unimp
    3f0c:	3498                	fld	fa4,40(s1)
    3f0e:	0000                	unimp
    3f10:	2134                	fld	fa3,64(a0)
    3f12:	000c                	0xc
    3f14:	c100                	sw	s0,0(a0)
    3f16:	0034                	addi	a3,sp,8
    3f18:	3400                	fld	fs0,40(s0)
    3f1a:	00000c2b          	0xc2b
    3f1e:	34d4                	fld	fa3,168(s1)
    3f20:	0000                	unimp
    3f22:	0000                	unimp
    3f24:	0d31                	addi	s10,s10,12
    3f26:	000a                	c.slli	zero,0x2
    3f28:	3c00                	fld	fs0,56(s0)
    3f2a:	1000001b          	0x1000001b
    3f2e:	0005                	c.nop	1
    3f30:	0100                	addi	s0,sp,128
    3f32:	059a                	slli	a1,a1,0x6
    3f34:	1051                	c.nop	-12
    3f36:	0000                	unimp
    3f38:	3c32                	fld	fs8,296(sp)
    3f3a:	000a                	c.slli	zero,0x2
    3f3c:	2300                	fld	fs0,0(a4)
    3f3e:	0035                	c.nop	13
    3f40:	3200                	fld	fs0,32(a2)
    3f42:	0a31                	addi	s4,s4,12
    3f44:	0000                	unimp
    3f46:	3552                	fld	fa0,304(sp)
    3f48:	0000                	unimp
    3f4a:	2632                	fld	fa2,264(sp)
    3f4c:	000a                	c.slli	zero,0x2
    3f4e:	8100                	0x8100
    3f50:	0035                	c.nop	13
    3f52:	3200                	fld	fs0,32(a2)
    3f54:	00000a1b          	0xa1b
    3f58:	35b0                	fld	fa2,104(a1)
    3f5a:	0000                	unimp
    3f5c:	00051033          	sll	zero,a0,zero
    3f60:	3400                	fld	fs0,40(s0)
    3f62:	00000a47          	fmsub.s	fs4,ft0,ft0,ft0,rne
    3f66:	000035cf          	fnmadd.s	fa1,ft0,ft0,ft0,rup
    3f6a:	5234                	lw	a3,96(a2)
    3f6c:	000a                	c.slli	zero,0x2
    3f6e:	1400                	addi	s0,sp,544
    3f70:	0036                	c.slli	zero,0xd
    3f72:	3400                	fld	fs0,40(s0)
    3f74:	0a5d                	addi	s4,s4,23
    3f76:	0000                	unimp
    3f78:	00003633          	snez	a2,zero
    3f7c:	6836                	flw	fa6,76(sp)
    3f7e:	000a                	c.slli	zero,0x2
    3f80:	3800                	fld	fs0,48(s0)
    3f82:	0005                	c.nop	1
    3f84:	3400                	fld	fs0,40(s0)
    3f86:	0a69                	addi	s4,s4,26
    3f88:	0000                	unimp
    3f8a:	366a                	fld	fa2,184(sp)
    3f8c:	0000                	unimp
    3f8e:	0000                	unimp
    3f90:	3100                	fld	fs0,32(a0)
    3f92:	0bc0                	addi	s0,sp,468
    3f94:	0000                	unimp
    3f96:	1be8                	addi	a0,sp,508
    3f98:	0000                	unimp
    3f9a:	0550                	addi	a2,sp,644
    3f9c:	0000                	unimp
    3f9e:	9b01                	andi	a4,a4,-32
    3fa0:	0010b10b          	0x10b10b
    3fa4:	3500                	fld	fs0,40(a0)
    3fa6:	0be5                	addi	s7,s7,25
    3fa8:	0000                	unimp
    3faa:	db35                	beqz	a4,3f1e <__divdf3+0x642>
    3fac:	3500000b          	0x3500000b
    3fb0:	0bd1                	addi	s7,s7,20
    3fb2:	0000                	unimp
    3fb4:	00055033          	srl	zero,a0,zero
    3fb8:	3400                	fld	fs0,40(s0)
    3fba:	0bf1                	addi	s7,s7,28
    3fbc:	0000                	unimp
    3fbe:	367d                	jal	3b6c <__divdf3+0x290>
    3fc0:	0000                	unimp
    3fc2:	fd34                	fsw	fa3,120(a0)
    3fc4:	a700000b          	0xa700000b
    3fc8:	0036                	c.slli	zero,0xd
    3fca:	3400                	fld	fs0,40(s0)
    3fcc:	0c09                	addi	s8,s8,2
    3fce:	0000                	unimp
    3fd0:	000036db          	0x36db
    3fd4:	1534                	addi	a3,sp,680
    3fd6:	000c                	0xc
    3fd8:	f900                	fsw	fs0,48(a0)
    3fda:	0036                	c.slli	zero,0xd
    3fdc:	3400                	fld	fs0,40(s0)
    3fde:	0c21                	addi	s8,s8,8
    3fe0:	0000                	unimp
    3fe2:	3722                	fld	fa4,40(sp)
    3fe4:	0000                	unimp
    3fe6:	2b34                	fld	fa3,80(a4)
    3fe8:	000c                	0xc
    3fea:	3500                	fld	fs0,40(a0)
    3fec:	00000037          	lui	zero,0x0
    3ff0:	3100                	fld	fs0,32(a0)
    3ff2:	0b25                	addi	s6,s6,9
    3ff4:	0000                	unimp
    3ff6:	1c80                	addi	s0,sp,624
    3ff8:	0000                	unimp
    3ffa:	0570                	addi	a2,sp,652
    3ffc:	0000                	unimp
    3ffe:	a001                	j	3ffe <__divdf3+0x722>
    4000:	f505                	bnez	a0,3f28 <__divdf3+0x64c>
    4002:	0010                	0x10
    4004:	3500                	fld	fs0,40(a0)
    4006:	0b49                	addi	s6,s6,18
    4008:	0000                	unimp
    400a:	3e32                	fld	ft8,296(sp)
    400c:	8400000b          	0x8400000b
    4010:	32000037          	lui	zero,0x32000
    4014:	00000b33          	add	s6,zero,zero
    4018:	37a6                	fld	fa5,104(sp)
    401a:	0000                	unimp
    401c:	00057033          	and	zero,a0,zero
    4020:	3400                	fld	fs0,40(s0)
    4022:	0b56                	slli	s6,s6,0x15
    4024:	0000                	unimp
    4026:	37c5                	jal	4006 <__divdf3+0x72a>
    4028:	0000                	unimp
    402a:	6134                	flw	fa3,64(a0)
    402c:	f000000b          	0xf000000b
    4030:	00000037          	lui	zero,0x0
    4034:	3700                	fld	fs0,40(a4)
    4036:	1900                	addi	s0,sp,176
    4038:	0000                	unimp
    403a:	000014eb          	0x14eb
    403e:	1108                	addi	a0,sp,160
    4040:	0000                	unimp
    4042:	0130                	addi	a2,sp,136
    4044:	0030015b          	0x30015b
    4048:	00191c37          	lui	s8,0x191
    404c:	f700                	fsw	fs0,40(a4)
    404e:	0014                	0x14
    4050:	2900                	fld	fs0,16(a0)
    4052:	0011                	c.nop	4
    4054:	3000                	fld	fs0,32(s0)
    4056:	5a01                	li	s4,-32
    4058:	8602                	jr	a2
    405a:	3000                	fld	fs0,32(s0)
    405c:	5b01                	li	s6,-32
    405e:	3001                	jal	385e <__udivdi3+0x62e>
    4060:	0130                	addi	a2,sp,136
    4062:	045c                	addi	a5,sp,516
    4064:	9891                	andi	s1,s1,-28
    4066:	067f                	0x67f
    4068:	3700                	fld	fs0,40(a4)
    406a:	19f4                	addi	a3,sp,252
    406c:	0000                	unimp
    406e:	000014eb          	0x14eb
    4072:	113d                	addi	sp,sp,-17
    4074:	0000                	unimp
    4076:	0130                	addi	a2,sp,136
    4078:	008b025b          	0x8b025b
    407c:	3700                	fld	fs0,40(a4)
    407e:	1a2c                	addi	a1,sp,312
    4080:	0000                	unimp
    4082:	000014f7          	0x14f7
    4086:	115e                	slli	sp,sp,0x37
    4088:	0000                	unimp
    408a:	0130                	addi	a2,sp,136
    408c:	025a                	slli	tp,tp,0x16
    408e:	01300087          	0x1300087
    4092:	3030015b          	0x3030015b
    4096:	5c01                	li	s8,-32
    4098:	9104                	0x9104
    409a:	7fac                	flw	fa1,120(a5)
    409c:	0006                	c.slli	zero,0x1
    409e:	001b3037          	lui	zero,0x1b3
    40a2:	eb00                	fsw	fs0,16(a4)
    40a4:	0014                	0x14
    40a6:	7500                	flw	fs0,40(a0)
    40a8:	0011                	c.nop	4
    40aa:	3000                	fld	fs0,32(s0)
    40ac:	5b01                	li	s6,-32
    40ae:	9105                	srli	a0,a0,0x21
    40b0:	7fbc                	flw	fa5,120(a5)
    40b2:	0294                	addi	a3,sp,320
    40b4:	3700                	fld	fs0,40(a4)
    40b6:	1b5c                	addi	a5,sp,436
    40b8:	0000                	unimp
    40ba:	000014f7          	0x14f7
    40be:	1196                	slli	gp,gp,0x25
    40c0:	0000                	unimp
    40c2:	0130                	addi	a2,sp,136
    40c4:	025a                	slli	tp,tp,0x16
    40c6:	008a                	slli	ra,ra,0x2
    40c8:	0130                	addi	a2,sp,136
    40ca:	3030015b          	0x3030015b
    40ce:	5c01                	li	s8,-32
    40d0:	9104                	0x9104
    40d2:	7fac                	flw	fa1,120(a5)
    40d4:	0006                	c.slli	zero,0x1
    40d6:	001c8037          	lui	zero,0x1c8
    40da:	eb00                	fsw	fs0,16(a4)
    40dc:	0014                	0x14
    40de:	ad00                	fsd	fs0,24(a0)
    40e0:	0011                	c.nop	4
    40e2:	3000                	fld	fs0,32(s0)
    40e4:	5b01                	li	s6,-32
    40e6:	9105                	srli	a0,a0,0x21
    40e8:	7fbc                	flw	fa5,120(a5)
    40ea:	0294                	addi	a3,sp,320
    40ec:	3700                	fld	fs0,40(a4)
    40ee:	1d14                	addi	a3,sp,688
    40f0:	0000                	unimp
    40f2:	000014eb          	0x14eb
    40f6:	11c0                	addi	s0,sp,228
    40f8:	0000                	unimp
    40fa:	0130                	addi	a2,sp,136
    40fc:	0030015b          	0x30015b
    4100:	001d2437          	lui	s0,0x1d2
    4104:	eb00                	fsw	fs0,16(a4)
    4106:	0014                	0x14
    4108:	d300                	sw	s0,32(a4)
    410a:	0011                	c.nop	4
    410c:	3000                	fld	fs0,32(s0)
    410e:	5a01                	li	s4,-32
    4110:	3001                	jal	3910 <__divdf3+0x34>
    4112:	3700                	fld	fs0,40(a4)
    4114:	1d34                	addi	a3,sp,696
    4116:	0000                	unimp
    4118:	000014eb          	0x14eb
    411c:	11e6                	slli	gp,gp,0x39
    411e:	0000                	unimp
    4120:	0130                	addi	a2,sp,136
    4122:	015a                	slli	sp,sp,0x16
    4124:	0030                	addi	a2,sp,8
    4126:	001d442f          	0x1d442f
    412a:	eb00                	fsw	fs0,16(a4)
    412c:	0014                	0x14
    412e:	3000                	fld	fs0,32(s0)
    4130:	5a01                	li	s4,-32
    4132:	3001                	jal	3932 <__divdf3+0x56>
    4134:	0000                	unimp
    4136:	c238                	sw	a4,64(a2)
    4138:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    413c:	015c                	addi	a5,sp,132
    413e:	0960                	addi	s0,sp,156
    4140:	0000                	unimp
    4142:	1d48                	addi	a0,sp,692
    4144:	0000                	unimp
    4146:	0044                	addi	s1,sp,4
    4148:	0000                	unimp
    414a:	9c01                	0x9c01
    414c:	1299                	addi	t0,t0,-26
    414e:	0000                	unimp
    4150:	702c                	flw	fa1,96(s0)
    4152:	0100                	addi	s0,sp,128
    4154:	1f5c                	addi	a5,sp,948
    4156:	0d08                	addi	a0,sp,656
    4158:	0000                	unimp
    415a:	0000380f          	0x380f
    415e:	0007912b          	0x7912b
    4162:	0100                	addi	s0,sp,128
    4164:	295c                	fld	fa5,144(a0)
    4166:	0954                	addi	a3,sp,148
    4168:	0000                	unimp
    416a:	3830                	fld	fa2,112(s0)
    416c:	0000                	unimp
    416e:	632c                	flw	fa1,64(a4)
    4170:	6372                	flw	ft6,28(sp)
    4172:	0100                	addi	s0,sp,128
    4174:	365c                	fld	fa5,168(a2)
    4176:	0960                	addi	s0,sp,156
    4178:	0000                	unimp
    417a:	3851                	jal	3a0e <__divdf3+0x132>
    417c:	0000                	unimp
    417e:	4e2d                	li	t3,11
    4180:	0100                	addi	s0,sp,128
    4182:	0d5e                	slli	s10,s10,0x17
    4184:	097f                	0x97f
    4186:	0000                	unimp
    4188:	3872                	fld	fa6,312(sp)
    418a:	0000                	unimp
    418c:	432d                	li	t1,11
    418e:	0100                	addi	s0,sp,128
    4190:	0d5f 09fb 0000      	0x9fb0d5f
    4196:	00003893          	sltiu	a7,zero,0
    419a:	412d                	li	sp,11
    419c:	0100                	addi	s0,sp,128
    419e:	0d60                	addi	s0,sp,668
    41a0:	09f5                	addi	s3,s3,29
    41a2:	0000                	unimp
    41a4:	38b6                	fld	fa7,360(sp)
    41a6:	0000                	unimp
    41a8:	422d                	li	tp,11
    41aa:	0100                	addi	s0,sp,128
    41ac:	0d61                	addi	s10,s10,24
    41ae:	09f5                	addi	s3,s3,29
    41b0:	0000                	unimp
    41b2:	38d9                	jal	3a88 <__divdf3+0x1ac>
    41b4:	0000                	unimp
    41b6:	762d                	lui	a2,0xfffeb
    41b8:	6c61                	lui	s8,0x18
    41ba:	0100                	addi	s0,sp,128
    41bc:	0d62                	slli	s10,s10,0x18
    41be:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    41c2:	38fc                	fld	fa5,240(s1)
    41c4:	0000                	unimp
    41c6:	7439                	lui	s0,0xfffee
    41c8:	001d                	c.nop	7
    41ca:	0e00                	addi	s0,sp,784
    41cc:	000d                	c.nop	3
    41ce:	3a00                	fld	fs0,48(a2)
    41d0:	1d8c                	addi	a1,sp,752
    41d2:	0000                	unimp
    41d4:	000014eb          	0x14eb
    41d8:	3b00                	fld	fs0,48(a4)
    41da:	0bc0                	addi	s0,sp,468
	...
    41e4:	0000                	unimp
    41e6:	9c01                	0x9c01
    41e8:	12fc                	addi	a5,sp,364
    41ea:	0000                	unimp
    41ec:	d132                	sw	a2,160(sp)
    41ee:	1d00000b          	0x1d00000b
    41f2:	0039                	c.nop	14
    41f4:	3200                	fld	fs0,32(a2)
    41f6:	00000bdb          	0xbdb
    41fa:	3951                	jal	3e8e <__divdf3+0x5b2>
    41fc:	0000                	unimp
    41fe:	e53c                	fsw	fa5,72(a0)
    4200:	0100000b          	0x100000b
    4204:	345c                	fld	fa5,168(s0)
    4206:	0bf1                	addi	s7,s7,28
    4208:	0000                	unimp
    420a:	397d                	jal	3ec8 <__divdf3+0x5ec>
    420c:	0000                	unimp
    420e:	fd34                	fsw	fa3,120(a0)
    4210:	bf00000b          	0xbf00000b
    4214:	0039                	c.nop	14
    4216:	3400                	fld	fs0,40(s0)
    4218:	0c09                	addi	s8,s8,2
    421a:	0000                	unimp
    421c:	00003a0b          	0x3a0b
    4220:	1534                	addi	a3,sp,680
    4222:	000c                	0xc
    4224:	4100                	lw	s0,0(a0)
    4226:	003a                	c.slli	zero,0xe
    4228:	3400                	fld	fs0,40(s0)
    422a:	0c21                	addi	s8,s8,8
    422c:	0000                	unimp
    422e:	3a82                	fld	fs5,32(sp)
    4230:	0000                	unimp
    4232:	2b34                	fld	fa3,80(a4)
    4234:	000c                	0xc
    4236:	ad00                	fsd	fs0,24(a0)
    4238:	003a                	c.slli	zero,0xe
    423a:	0000                	unimp
    423c:	6d3d                	lui	s10,0xf
    423e:	0000000b          	0xb
    4242:	0000                	unimp
    4244:	0000                	unimp
    4246:	0000                	unimp
    4248:	0100                	addi	s0,sp,128
    424a:	469c                	lw	a5,8(a3)
    424c:	32000013          	li	zero,800
    4250:	00000b7b          	0xb7b
    4254:	3ac1                	jal	3c24 <__divdf3+0x348>
    4256:	0000                	unimp
    4258:	8632                	mv	a2,a2
    425a:	f800000b          	0xf800000b
    425e:	003a                	c.slli	zero,0xe
    4260:	3200                	fld	fs0,32(a2)
    4262:	0b91                	addi	s7,s7,4
    4264:	0000                	unimp
    4266:	3b24                	fld	fs1,112(a4)
    4268:	0000                	unimp
    426a:	9c32                	add	s8,s8,a2
    426c:	5000000b          	0x5000000b
    4270:	3400003b          	0x3400003b
    4274:	0ba9                	addi	s7,s7,10
    4276:	0000                	unimp
    4278:	3b7c                	fld	fa5,240(a4)
    427a:	0000                	unimp
    427c:	b434                	fsd	fa3,104(s0)
    427e:	a700000b          	0xa700000b
    4282:	0000003b          	0x3b
    4286:	000b253b          	0xb253b
	...
    4292:	0100                	addi	s0,sp,128
    4294:	859c                	0x859c
    4296:	3c000013          	li	zero,960
    429a:	00000b33          	add	s6,zero,zero
    429e:	5a01                	li	s4,-32
    42a0:	3e32                	fld	ft8,296(sp)
    42a2:	bb00000b          	0xbb00000b
    42a6:	3200003b          	0x3200003b
    42aa:	0b49                	addi	s6,s6,18
    42ac:	0000                	unimp
    42ae:	3bdc                	fld	fa5,176(a5)
    42b0:	0000                	unimp
    42b2:	5634                	lw	a3,104(a2)
    42b4:	fd00000b          	0xfd00000b
    42b8:	3400003b          	0x3400003b
    42bc:	0b61                	addi	s6,s6,24
    42be:	0000                	unimp
    42c0:	3c1c                	fld	fa5,56(s0)
    42c2:	0000                	unimp
    42c4:	3d00                	fld	fs0,56(a0)
    42c6:	0ad4                	addi	a3,sp,340
	...
    42d0:	0000                	unimp
    42d2:	9c01                	0x9c01
    42d4:	13ed                	addi	t2,t2,-5
    42d6:	0000                	unimp
    42d8:	e232                	fsw	fa2,4(sp)
    42da:	000a                	c.slli	zero,0x2
    42dc:	3000                	fld	fs0,32(s0)
    42de:	003c                	addi	a5,sp,8
    42e0:	3200                	fld	fs0,32(a2)
    42e2:	0aed                	addi	s5,s5,27
    42e4:	0000                	unimp
    42e6:	00003c67          	0x3c67
    42ea:	f832                	fsw	fa2,48(sp)
    42ec:	000a                	c.slli	zero,0x2
    42ee:	a900                	fsd	fs0,16(a0)
    42f0:	003c                	addi	a5,sp,8
    42f2:	3200                	fld	fs0,32(a2)
    42f4:	00000b03          	lb	s6,0(zero) # 0 <_start>
    42f8:	3ce0                	fld	fs0,248(s1)
    42fa:	0000                	unimp
    42fc:	0e34                	addi	a3,sp,792
    42fe:	1700000b          	0x1700000b
    4302:	003d                	c.nop	15
    4304:	3400                	fld	fs0,40(s0)
    4306:	0b19                	addi	s6,s6,6
    4308:	0000                	unimp
    430a:	00003d37          	lui	s10,0x3
    430e:	0000002f          	0x2f
    4312:	f700                	fsw	fs0,40(a4)
    4314:	0014                	0x14
    4316:	3000                	fld	fs0,32(s0)
    4318:	5a01                	li	s4,-32
    431a:	8402                	jr	s0
    431c:	3000                	fld	fs0,32(s0)
    431e:	5b01                	li	s6,-32
    4320:	3001                	jal	3b20 <__divdf3+0x244>
    4322:	0130                	addi	a2,sp,136
    4324:	055c                	addi	a5,sp,644
    4326:	325a01f3          	0x325a01f3
    432a:	0024                	addi	s1,sp,8
    432c:	3d00                	fld	fs0,56(a0)
    432e:	0a78                	addi	a4,sp,284
	...
    4338:	0000                	unimp
    433a:	9c01                	0x9c01
    433c:	0000145b          	0x145b
    4340:	8632                	mv	a2,a2
    4342:	000a                	c.slli	zero,0x2
    4344:	4b00                	lw	s0,16(a4)
    4346:	003d                	c.nop	15
    4348:	3200                	fld	fs0,32(a2)
    434a:	0a91                	addi	s5,s5,4
    434c:	0000                	unimp
    434e:	00003d83          	0x3d83
    4352:	9c32                	add	s8,s8,a2
    4354:	000a                	c.slli	zero,0x2
    4356:	af00                	fsd	fs0,24(a4)
    4358:	003d                	c.nop	15
    435a:	3200                	fld	fs0,32(a2)
    435c:	00000aa7          	0xaa7
    4360:	00003ddb          	0x3ddb
    4364:	b234                	fsd	fa3,96(a2)
    4366:	000a                	c.slli	zero,0x2
    4368:	1300                	addi	s0,sp,416
    436a:	003e                	c.slli	zero,0xf
    436c:	3400                	fld	fs0,40(s0)
    436e:	0abd                	addi	s5,s5,15
    4370:	0000                	unimp
    4372:	3e3e                	fld	ft8,488(sp)
    4374:	0000                	unimp
    4376:	c834                	sw	a3,80(s0)
    4378:	000a                	c.slli	zero,0x2
    437a:	5200                	lw	s0,32(a2)
    437c:	003e                	c.slli	zero,0xf
    437e:	2f00                	fld	fs0,24(a4)
    4380:	0000                	unimp
    4382:	0000                	unimp
    4384:	000014f7          	0x14f7
    4388:	0130                	addi	a2,sp,136
    438a:	025a                	slli	tp,tp,0x16
    438c:	01300087          	0x1300087
    4390:	3030015b          	0x3030015b
    4394:	5c01                	li	s8,-32
    4396:	8902                	jr	s2
    4398:	0000                	unimp
    439a:	3d00                	fld	fs0,56(a0)
    439c:	0a0d                	addi	s4,s4,3
	...
    43a6:	0000                	unimp
    43a8:	9c01                	0x9c01
    43aa:	14e0                	addi	s0,sp,620
    43ac:	0000                	unimp
    43ae:	1b32                	slli	s6,s6,0x2c
    43b0:	000a                	c.slli	zero,0x2
    43b2:	6600                	flw	fs0,8(a2)
    43b4:	003e                	c.slli	zero,0xf
    43b6:	3200                	fld	fs0,32(a2)
    43b8:	0a26                	slli	s4,s4,0x9
    43ba:	0000                	unimp
    43bc:	3e9e                	fld	ft9,480(sp)
    43be:	0000                	unimp
    43c0:	3132                	fld	ft2,296(sp)
    43c2:	000a                	c.slli	zero,0x2
    43c4:	ca00                	sw	s0,16(a2)
    43c6:	003e                	c.slli	zero,0xf
    43c8:	3200                	fld	fs0,32(a2)
    43ca:	0a3c                	addi	a5,sp,280
    43cc:	0000                	unimp
    43ce:	3ef6                	fld	ft9,376(sp)
    43d0:	0000                	unimp
    43d2:	4734                	lw	a3,72(a4)
    43d4:	000a                	c.slli	zero,0x2
    43d6:	2e00                	fld	fs0,24(a2)
    43d8:	3400003f 00000a52 	0xa523400003f
    43e0:	3f59                	jal	4376 <__ledf2+0xa6>
    43e2:	0000                	unimp
    43e4:	5d34                	lw	a3,120(a0)
    43e6:	000a                	c.slli	zero,0x2
    43e8:	6d00                	flw	fs0,24(a0)
    43ea:	3e00003f 00000000 	0x3e00003f
    43f2:	0000                	unimp
    43f4:	0000                	unimp
    43f6:	14c4                	addi	s1,sp,612
    43f8:	0000                	unimp
    43fa:	6934                	flw	fa3,80(a0)
    43fc:	000a                	c.slli	zero,0x2
    43fe:	8100                	0x8100
    4400:	0000003f 0000002f 	0x2f0000003f
    4408:	f700                	fsw	fs0,40(a4)
    440a:	0014                	0x14
    440c:	3000                	fld	fs0,32(s0)
    440e:	5a01                	li	s4,-32
    4410:	8602                	jr	a2
    4412:	3000                	fld	fs0,32(s0)
    4414:	5b01                	li	s6,-32
    4416:	3001                	jal	3c16 <__divdf3+0x33a>
    4418:	0130                	addi	a2,sp,136
    441a:	025c                	addi	a5,sp,260
    441c:	0088                	addi	a0,sp,64
    441e:	0000                	unimp
    4420:	0003103f 00030600 	0x306000003103f
    4428:	0900                	addi	s0,sp,144
    442a:	4000                	lw	s0,0(s0)
    442c:	001e                	c.slli	zero,0x7
    442e:	0000                	unimp
    4430:	001e                	c.slli	zero,0x7
    4432:	0000                	unimp
    4434:	3308                	fld	fa0,32(a4)
    4436:	3f08                	fld	fa0,56(a4)
    4438:	0a19                	addi	s4,s4,6
    443a:	0000                	unimp
    443c:	00000a0f          	0xa0f
    4440:	0009                	c.nop	2
    4442:	ad00                	fsd	fs0,24(a0)
    4444:	0400000b          	0x400000b
    4448:	f800                	fsw	fs0,48(s0)
    444a:	000a                	c.slli	zero,0x2
    444c:	0400                	addi	s0,sp,512
    444e:	0e01                	addi	t3,t3,0
    4450:	0004                	0x4
    4452:	0c00                	addi	s0,sp,528
    4454:	0ab8                	addi	a4,sp,344
    4456:	0000                	unimp
    4458:	00000713          	li	a4,0
    445c:	05d8                	addi	a4,sp,708
    445e:	0000                	unimp
    4460:	0000                	unimp
    4462:	0000                	unimp
    4464:	489c                	lw	a5,16(s1)
    4466:	0000                	unimp
    4468:	0102                	c.slli64	sp
    446a:	1206                	slli	tp,tp,0x21
    446c:	0006                	c.slli	zero,0x1
    446e:	0200                	addi	s0,sp,256
    4470:	0801                	addi	a6,a6,0
    4472:	0610                	addi	a2,sp,768
    4474:	0000                	unimp
    4476:	0202                	c.slli64	tp
    4478:	cc05                	beqz	s0,44b0 <__muldf3+0xe4>
    447a:	0004                	0x4
    447c:	0200                	addi	s0,sp,256
    447e:	0702                	c.slli64	a4
    4480:	06ea                	slli	a3,a3,0x1a
    4482:	0000                	unimp
    4484:	0402                	c.slli64	s0
    4486:	6b05                	lui	s6,0x1
    4488:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    448c:	0704                	addi	s1,sp,896
    448e:	019d                	addi	gp,gp,7
    4490:	0000                	unimp
    4492:	0802                	c.slli64	a6
    4494:	6605                	lui	a2,0x1
    4496:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    449a:	0708                	addi	a0,sp,896
    449c:	0198                	addi	a4,sp,192
    449e:	0000                	unimp
    44a0:	69050403          	lb	s0,1680(a0) # fffe1690 <__freertos_irq_stack_top+0xfefd1690>
    44a4:	746e                	flw	fs0,248(sp)
    44a6:	0200                	addi	s0,sp,256
    44a8:	0704                	addi	s1,sp,896
    44aa:	01a2                	slli	gp,gp,0x8
    44ac:	0000                	unimp
    44ae:	1002                	c.slli	zero,0x20
    44b0:	9004                	0x9004
    44b2:	0004                	0x4
    44b4:	0400                	addi	s0,sp,512
    44b6:	049c                	addi	a5,sp,576
    44b8:	0000                	unimp
    44ba:	2202                	fld	ft4,0(sp)
    44bc:	7e19                	lui	t3,0xfffe6
    44be:	0000                	unimp
    44c0:	0500                	addi	s0,sp,640
    44c2:	8404                	0x8404
    44c4:	0000                	unimp
    44c6:	0600                	addi	s0,sp,768
    44c8:	0601                	addi	a2,a2,0
    44ca:	0000                	unimp
    44cc:	3104                	fld	fs1,32(a0)
    44ce:	03000007          	0x3000007
    44d2:	0e2c                	addi	a1,sp,792
    44d4:	0041                	c.nop	16
    44d6:	0000                	unimp
    44d8:	ee04                	fsw	fs1,24(a2)
    44da:	0000                	unimp
    44dc:	0300                	addi	s0,sp,384
    44de:	0e72                	slli	t3,t3,0x1c
    44e0:	0041                	c.nop	16
    44e2:	0000                	unimp
    44e4:	da04                	sw	s1,48(a2)
    44e6:	0006                	c.slli	zero,0x1
    44e8:	0300                	addi	s0,sp,384
    44ea:	1791                	addi	a5,a5,-28
    44ec:	005d                	c.nop	23
    44ee:	0000                	unimp
    44f0:	0005cb07          	flq	fs6,0(a1)
    44f4:	0400                	addi	s0,sp,512
    44f6:	0165                	addi	sp,sp,25
    44f8:	00006417          	auipc	s0,0x6
    44fc:	0800                	addi	s0,sp,16
    44fe:	0304                	addi	s1,sp,384
    4500:	03a6                	slli	t2,t2,0x9
    4502:	00dc                	addi	a5,sp,68
    4504:	0000                	unimp
    4506:	fa09                	bnez	a2,4418 <__muldf3+0x4c>
    4508:	0002                	c.slli64	zero
    450a:	0300                	addi	s0,sp,384
    450c:	0ca8                	addi	a0,sp,600
    450e:	00ad                	addi	ra,ra,11
    4510:	0000                	unimp
    4512:	2f09                	jal	4c24 <__floatunsidf+0x7c>
    4514:	0005                	c.nop	1
    4516:	0300                	addi	s0,sp,384
    4518:	13a9                	addi	t2,t2,-22
    451a:	00dc                	addi	a5,sp,68
    451c:	0000                	unimp
    451e:	0a00                	addi	s0,sp,272
    4520:	002c                	addi	a1,sp,8
    4522:	0000                	unimp
    4524:	00ec                	addi	a1,sp,76
    4526:	0000                	unimp
    4528:	0000640b          	0x640b
    452c:	0300                	addi	s0,sp,384
    452e:	0c00                	addi	s0,sp,528
    4530:	0308                	addi	a0,sp,384
    4532:	011009a3          	sb	a7,19(zero) # 13 <_start+0x13>
    4536:	0000                	unimp
    4538:	640d                	lui	s0,0x3
    453a:	0001                	nop
    453c:	0300                	addi	s0,sp,384
    453e:	07a5                	addi	a5,a5,9
    4540:	005d                	c.nop	23
    4542:	0000                	unimp
    4544:	0d00                	addi	s0,sp,656
    4546:	026a                	slli	tp,tp,0x1a
    4548:	0000                	unimp
    454a:	ba05aa03          	lw	s4,-1120(a1)
    454e:	0000                	unimp
    4550:	0400                	addi	s0,sp,512
    4552:	0400                	addi	s0,sp,512
    4554:	03ea                	slli	t2,t2,0x1a
    4556:	0000                	unimp
    4558:	ec03ab03          	lw	s6,-320(t2)
    455c:	0000                	unimp
    455e:	0400                	addi	s0,sp,512
    4560:	02e2                	slli	t0,t0,0x18
    4562:	0000                	unimp
    4564:	721baf03          	lw	t5,1825(s7)
    4568:	0000                	unimp
    456a:	0e00                	addi	s0,sp,784
    456c:	0404                	addi	s1,sp,512
    456e:	039e                	slli	t2,t2,0x7
    4570:	0000                	unimp
    4572:	1605                	addi	a2,a2,-31
    4574:	4819                	li	a6,6
    4576:	0000                	unimp
    4578:	0f00                	addi	s0,sp,912
    457a:	0128                	addi	a0,sp,136
    457c:	0000                	unimp
    457e:	0518                	addi	a4,sp,640
    4580:	0190082f          	0x190082f
    4584:	0000                	unimp
    4586:	9b0d                	andi	a4,a4,-29
    4588:	05000007          	0x5000007
    458c:	1331                	addi	t1,t1,-20
    458e:	0190                	addi	a2,sp,192
    4590:	0000                	unimp
    4592:	1000                	addi	s0,sp,32
    4594:	6b5f 0500 0732      	0x73205006b5f
    459a:	005d                	c.nop	23
    459c:	0000                	unimp
    459e:	0d04                	addi	s1,sp,656
    45a0:	0594                	addi	a3,sp,704
    45a2:	0000                	unimp
    45a4:	3205                	jal	3ec4 <__divdf3+0x5e8>
    45a6:	00005d0b          	0x5d0b
    45aa:	0800                	addi	s0,sp,16
    45ac:	0c0d                	addi	s8,s8,3
    45ae:	0005                	c.nop	1
    45b0:	0500                	addi	s0,sp,640
    45b2:	1432                	slli	s0,s0,0x2c
    45b4:	005d                	c.nop	23
    45b6:	0000                	unimp
    45b8:	0d0c                	addi	a1,sp,656
    45ba:	01c4                	addi	s1,sp,196
    45bc:	0000                	unimp
    45be:	3205                	jal	3ede <__divdf3+0x602>
    45c0:	00005d1b          	0x5d1b
    45c4:	1000                	addi	s0,sp,32
    45c6:	5f10                	lw	a2,56(a4)
    45c8:	0078                	addi	a4,sp,12
    45ca:	3305                	jal	42ea <__ledf2+0x1a>
    45cc:	0001960b          	0x1960b
    45d0:	1400                	addi	s0,sp,544
    45d2:	0500                	addi	s0,sp,640
    45d4:	3604                	fld	fs1,40(a2)
    45d6:	0001                	nop
    45d8:	0a00                	addi	s0,sp,272
    45da:	012a                	slli	sp,sp,0xa
    45dc:	0000                	unimp
    45de:	01a6                	slli	gp,gp,0x9
    45e0:	0000                	unimp
    45e2:	0000640b          	0x640b
    45e6:	0000                	unimp
    45e8:	0f00                	addi	s0,sp,912
    45ea:	000005bf 08370524 	0x8370524000005bf
    45f2:	0229                	addi	tp,tp,10
    45f4:	0000                	unimp
    45f6:	2b0d                	jal	4b28 <__muldf3+0x75c>
    45f8:	0002                	c.slli64	zero
    45fa:	0500                	addi	s0,sp,640
    45fc:	0939                	addi	s2,s2,14
    45fe:	005d                	c.nop	23
    4600:	0000                	unimp
    4602:	0d00                	addi	s0,sp,656
    4604:	0176                	slli	sp,sp,0x1d
    4606:	0000                	unimp
    4608:	3a05                	jal	3f38 <__divdf3+0x65c>
    460a:	5d09                	li	s10,-30
    460c:	0000                	unimp
    460e:	0400                	addi	s0,sp,512
    4610:	540d                	li	s0,-29
    4612:	0001                	nop
    4614:	0500                	addi	s0,sp,640
    4616:	005d093b          	0x5d093b
    461a:	0000                	unimp
    461c:	0d08                	addi	a0,sp,656
    461e:	029a                	slli	t0,t0,0x6
    4620:	0000                	unimp
    4622:	3c05                	jal	4052 <__divdf3+0x776>
    4624:	5d09                	li	s10,-30
    4626:	0000                	unimp
    4628:	0c00                	addi	s0,sp,528
    462a:	870d                	srai	a4,a4,0x3
    462c:	0004                	0x4
    462e:	0500                	addi	s0,sp,640
    4630:	093d                	addi	s2,s2,15
    4632:	005d                	c.nop	23
    4634:	0000                	unimp
    4636:	0d10                	addi	a2,sp,656
    4638:	0549                	addi	a0,a0,18
    463a:	0000                	unimp
    463c:	3e05                	jal	416c <__divdf3+0x890>
    463e:	5d09                	li	s10,-30
    4640:	0000                	unimp
    4642:	1400                	addi	s0,sp,544
    4644:	300d                	jal	3e66 <__divdf3+0x58a>
    4646:	0001                	nop
    4648:	0500                	addi	s0,sp,640
    464a:	005d093f 0d180000 	0xd180000005d093f
    4652:	0234                	addi	a3,sp,264
    4654:	0000                	unimp
    4656:	4005                	c.li	zero,1
    4658:	5d09                	li	s10,-30
    465a:	0000                	unimp
    465c:	1c00                	addi	s0,sp,560
    465e:	fd0d                	bnez	a0,4598 <__muldf3+0x1cc>
    4660:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4664:	0941                	addi	s2,s2,16
    4666:	005d                	c.nop	23
    4668:	0000                	unimp
    466a:	0020                	addi	s0,sp,8
    466c:	2911                	jal	4a80 <__muldf3+0x6b4>
    466e:	0000                	unimp
    4670:	0800                	addi	s0,sp,16
    4672:	0501                	addi	a0,a0,0
    4674:	084a                	slli	a6,a6,0x12
    4676:	026e                	slli	tp,tp,0x1b
    4678:	0000                	unimp
    467a:	f50d                	bnez	a0,45a4 <__muldf3+0x1d8>
    467c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4680:	026e0a4b          	fnmsub.d	fs4,ft8,ft6,ft0,rne
    4684:	0000                	unimp
    4686:	0d00                	addi	s0,sp,656
    4688:	05f5                	addi	a1,a1,29
    468a:	0000                	unimp
    468c:	4c05                	li	s8,1
    468e:	6e09                	lui	t3,0x2
    4690:	0002                	c.slli64	zero
    4692:	8000                	0x8000
    4694:	0412                	slli	s0,s0,0x4
    4696:	05000007          	0x5000007
    469a:	0a4e                	slli	s4,s4,0x13
    469c:	012a                	slli	sp,sp,0xa
    469e:	0000                	unimp
    46a0:	0100                	addi	s0,sp,128
    46a2:	8012                	c.mv	zero,tp
    46a4:	05000007          	0x5000007
    46a8:	0a51                	addi	s4,s4,20
    46aa:	012a                	slli	sp,sp,0xa
    46ac:	0000                	unimp
    46ae:	0104                	addi	s1,sp,128
    46b0:	0a00                	addi	s0,sp,272
    46b2:	0128                	addi	a0,sp,136
    46b4:	0000                	unimp
    46b6:	027e                	slli	tp,tp,0x1f
    46b8:	0000                	unimp
    46ba:	0000640b          	0x640b
    46be:	1f00                	addi	s0,sp,944
    46c0:	1100                	addi	s0,sp,160
    46c2:	000004bb          	0x4bb
    46c6:	0190                	addi	a2,sp,192
    46c8:	5d05                	li	s10,-31
    46ca:	c108                	sw	a0,0(a0)
    46cc:	0002                	c.slli64	zero
    46ce:	0d00                	addi	s0,sp,656
    46d0:	0000079b          	0x79b
    46d4:	5e05                	li	t3,-31
    46d6:	c112                	sw	tp,128(sp)
    46d8:	0002                	c.slli64	zero
    46da:	0000                	unimp
    46dc:	430d                	li	t1,3
    46de:	0002                	c.slli64	zero
    46e0:	0500                	addi	s0,sp,640
    46e2:	065f 005d 0000      	0x5d065f
    46e8:	0d04                	addi	s1,sp,656
    46ea:	00000107          	0x107
    46ee:	6105                	addi	sp,sp,32
    46f0:	c709                	beqz	a4,46fa <__muldf3+0x32e>
    46f2:	0002                	c.slli64	zero
    46f4:	0800                	addi	s0,sp,16
    46f6:	290d                	jal	4b28 <__muldf3+0x75c>
    46f8:	0000                	unimp
    46fa:	0500                	addi	s0,sp,640
    46fc:	1e62                	slli	t3,t3,0x38
    46fe:	0229                	addi	tp,tp,10
    4700:	0000                	unimp
    4702:	0088                	addi	a0,sp,64
    4704:	0405                	addi	s0,s0,1
    4706:	027e                	slli	tp,tp,0x1f
    4708:	0000                	unimp
    470a:	d70a                	sw	sp,172(sp)
    470c:	0002                	c.slli64	zero
    470e:	d700                	sw	s0,40(a4)
    4710:	0002                	c.slli64	zero
    4712:	0b00                	addi	s0,sp,400
    4714:	0064                	addi	s1,sp,12
    4716:	0000                	unimp
    4718:	001f 0405 02dd      	0x2dd0405001f
    471e:	0000                	unimp
    4720:	06820f13          	addi	t5,tp,104 # ffffd068 <__freertos_irq_stack_top+0xfefed068>
    4724:	0000                	unimp
    4726:	0508                	addi	a0,sp,640
    4728:	0875                	addi	a6,a6,29
    472a:	0306                	slli	t1,t1,0x1
    472c:	0000                	unimp
    472e:	880d                	andi	s0,s0,3
    4730:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4734:	1176                	slli	sp,sp,0x3d
    4736:	0306                	slli	t1,t1,0x1
    4738:	0000                	unimp
    473a:	0d00                	addi	s0,sp,656
    473c:	070d                	addi	a4,a4,3
    473e:	0000                	unimp
    4740:	7705                	lui	a4,0xfffe1
    4742:	5d06                	lw	s10,96(sp)
    4744:	0000                	unimp
    4746:	0400                	addi	s0,sp,512
    4748:	0500                	addi	s0,sp,640
    474a:	2c04                	fld	fs1,24(s0)
    474c:	0000                	unimp
    474e:	0f00                	addi	s0,sp,912
    4750:	01bc                	addi	a5,sp,200
    4752:	0000                	unimp
    4754:	0568                	addi	a0,sp,652
    4756:	08b5                	addi	a7,a7,13
    4758:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
    475c:	5f10                	lw	a2,56(a4)
    475e:	0070                	addi	a2,sp,12
    4760:	b605                	j	4280 <__gedf2+0xa0>
    4762:	0612                	slli	a2,a2,0x4
    4764:	00000003          	lb	zero,0(zero) # 0 <_start>
    4768:	5f10                	lw	a2,56(a4)
    476a:	0072                	c.slli	zero,0x1c
    476c:	b705                	j	468c <__muldf3+0x2c0>
    476e:	00005d07          	0x5d07
    4772:	0400                	addi	s0,sp,512
    4774:	5f10                	lw	a2,56(a4)
    4776:	b8050077          	0xb8050077
    477a:	00005d07          	0x5d07
    477e:	0800                	addi	s0,sp,16
    4780:	7f0d                	lui	t5,0xfffe3
    4782:	0000                	unimp
    4784:	0500                	addi	s0,sp,640
    4786:	09b9                	addi	s3,s3,14
    4788:	00000033          	add	zero,zero,zero
    478c:	0d0c                	addi	a1,sp,656
    478e:	03bc                	addi	a5,sp,456
    4790:	0000                	unimp
    4792:	ba05                	j	40c2 <__divdf3+0x7e6>
    4794:	3309                	jal	4496 <__muldf3+0xca>
    4796:	0000                	unimp
    4798:	0e00                	addi	s0,sp,784
    479a:	5f10                	lw	a2,56(a4)
    479c:	6662                	flw	fa2,24(sp)
    479e:	0500                	addi	s0,sp,640
    47a0:	02de11bb          	0x2de11bb
    47a4:	0000                	unimp
    47a6:	0d10                	addi	a2,sp,656
    47a8:	0076                	c.slli	zero,0x1d
    47aa:	0000                	unimp
    47ac:	bc05                	j	41dc <__divdf3+0x900>
    47ae:	00005d07          	0x5d07
    47b2:	1800                	addi	s0,sp,48
    47b4:	120d                	addi	tp,tp,-29
    47b6:	0001                	nop
    47b8:	0500                	addi	s0,sp,640
    47ba:	01280ac3          	fmadd.s	fs5,fa6,fs2,ft0,rne
    47be:	0000                	unimp
    47c0:	0d1c                	addi	a5,sp,656
    47c2:	00c0                	addi	s0,sp,68
    47c4:	0000                	unimp
    47c6:	c505                	beqz	a0,47ee <__muldf3+0x422>
    47c8:	d31d                	beqz	a4,46ee <__muldf3+0x322>
    47ca:	0005                	c.nop	1
    47cc:	2000                	fld	fs0,0(s0)
    47ce:	a40d                	j	49f0 <__muldf3+0x624>
    47d0:	0004                	0x4
    47d2:	0500                	addi	s0,sp,640
    47d4:	05fd1dc7          	0x5fd1dc7
    47d8:	0000                	unimp
    47da:	0d24                	addi	s1,sp,664
    47dc:	07ac                	addi	a1,sp,968
    47de:	0000                	unimp
    47e0:	ca05                	beqz	a2,4810 <__muldf3+0x444>
    47e2:	210d                	jal	4c04 <__floatunsidf+0x5c>
    47e4:	0006                	c.slli	zero,0x1
    47e6:	2800                	fld	fs0,16(s0)
    47e8:	150d                	addi	a0,a0,-29
    47ea:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    47ee:	063b09cb          	fnmsub.q	fs3,fs6,ft3,ft0,rne
    47f2:	0000                	unimp
    47f4:	102c                	addi	a1,sp,40
    47f6:	755f 0062 ce05      	0xce050062755f
    47fc:	de11                	beqz	a2,4718 <__muldf3+0x34c>
    47fe:	0002                	c.slli64	zero
    4800:	3000                	fld	fs0,32(s0)
    4802:	5f10                	lw	a2,56(a4)
    4804:	7075                	c.lui	zero,0xffffd
    4806:	0500                	addi	s0,sp,640
    4808:	030612cf          	fnmadd.d	ft5,fa2,fa6,ft0,rtz
    480c:	0000                	unimp
    480e:	1038                	addi	a4,sp,40
    4810:	755f 0072 d005      	0xd0050072755f
    4816:	00005d07          	0x5d07
    481a:	3c00                	fld	fs0,56(s0)
    481c:	dc0d                	beqz	s0,4756 <__muldf3+0x38a>
    481e:	05000007          	0x5000007
    4822:	064111d3          	fadd.q	ft3,ft2,ft4,rtz
    4826:	0000                	unimp
    4828:	0d40                	addi	s0,sp,660
    482a:	0738                	addi	a4,sp,904
    482c:	0000                	unimp
    482e:	d405                	beqz	s0,4756 <__muldf3+0x38a>
    4830:	5111                	li	sp,-28
    4832:	0006                	c.slli	zero,0x1
    4834:	4300                	lw	s0,0(a4)
    4836:	5f10                	lw	a2,56(a4)
    4838:	626c                	flw	fa1,68(a2)
    483a:	0500                	addi	s0,sp,640
    483c:	02de11d7          	0x2de11d7
    4840:	0000                	unimp
    4842:	0d44                	addi	s1,sp,660
    4844:	05b6                	slli	a1,a1,0xd
    4846:	0000                	unimp
    4848:	da05                	beqz	a2,4778 <__muldf3+0x3ac>
    484a:	00005d07          	0x5d07
    484e:	4c00                	lw	s0,24(s0)
    4850:	fd0d                	bnez	a0,478a <__muldf3+0x3be>
    4852:	0001                	nop
    4854:	0500                	addi	s0,sp,640
    4856:	00890adb          	0x890adb
    485a:	0000                	unimp
    485c:	0d50                	addi	a2,sp,660
    485e:	0170                	addi	a2,sp,140
    4860:	0000                	unimp
    4862:	de05                	beqz	a2,479a <__muldf3+0x3ce>
    4864:	6d12                	flw	fs10,4(sp)
    4866:	0004                	0x4
    4868:	5400                	lw	s0,40(s0)
    486a:	020d                	addi	tp,tp,3
    486c:	0006                	c.slli	zero,0x1
    486e:	0500                	addi	s0,sp,640
    4870:	0ce2                	slli	s9,s9,0x18
    4872:	011c                	addi	a5,sp,128
    4874:	0000                	unimp
    4876:	0d58                	addi	a4,sp,660
    4878:	000000b7          	lui	ra,0x0
    487c:	e405                	bnez	s0,48a4 <__muldf3+0x4d8>
    487e:	100e                	c.slli	zero,0x23
    4880:	0001                	nop
    4882:	5c00                	lw	s0,56(s0)
    4884:	780d                	lui	a6,0xfffe3
    4886:	05000007          	0x5000007
    488a:	09e5                	addi	s3,s3,25
    488c:	005d                	c.nop	23
    488e:	0000                	unimp
    4890:	0064                	addi	s1,sp,12
    4892:	a114                	fsd	fa3,0(a0)
    4894:	0000                	unimp
    4896:	6d00                	flw	fs0,24(a0)
    4898:	0004                	0x4
    489a:	1500                	addi	s0,sp,672
    489c:	046d                	addi	s0,s0,27
    489e:	0000                	unimp
    48a0:	2815                	jal	48d4 <__muldf3+0x508>
    48a2:	0001                	nop
    48a4:	1500                	addi	s0,sp,672
    48a6:	05c1                	addi	a1,a1,16
    48a8:	0000                	unimp
    48aa:	5d15                	li	s10,-27
    48ac:	0000                	unimp
    48ae:	0000                	unimp
    48b0:	0405                	addi	s0,s0,1
    48b2:	0478                	addi	a4,sp,524
    48b4:	0000                	unimp
    48b6:	6d16                	flw	fs10,68(sp)
    48b8:	0004                	0x4
    48ba:	1700                	addi	s0,sp,928
    48bc:	000006e3          	beqz	zero,50c8 <__exponent+0xc0>
    48c0:	0428                	addi	a0,sp,520
    48c2:	3905                	jal	44f2 <__muldf3+0x126>
    48c4:	0802                	c.slli64	a6
    48c6:	05c1                	addi	a1,a1,16
    48c8:	0000                	unimp
    48ca:	8018                	0x8018
    48cc:	0004                	0x4
    48ce:	0500                	addi	s0,sp,640
    48d0:	5d07023b          	0x5d07023b
    48d4:	0000                	unimp
    48d6:	0000                	unimp
    48d8:	4918                	lw	a4,16(a0)
    48da:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    48de:	0240                	addi	s0,sp,260
    48e0:	0006ad0b          	0x6ad0b
    48e4:	0400                	addi	s0,sp,512
    48e6:	e618                	fsw	fa4,8(a2)
    48e8:	0000                	unimp
    48ea:	0500                	addi	s0,sp,640
    48ec:	0240                	addi	s0,sp,260
    48ee:	ad14                	fsd	fa3,24(a0)
    48f0:	0006                	c.slli	zero,0x1
    48f2:	0800                	addi	s0,sp,16
    48f4:	cb18                	sw	a4,16(a4)
    48f6:	05000007          	0x5000007
    48fa:	0240                	addi	s0,sp,260
    48fc:	ad1e                	fsd	ft7,152(sp)
    48fe:	0006                	c.slli	zero,0x1
    4900:	0c00                	addi	s0,sp,528
    4902:	3e18                	fld	fa4,56(a2)
    4904:	0002                	c.slli64	zero
    4906:	0500                	addi	s0,sp,640
    4908:	0242                	slli	tp,tp,0x10
    490a:	5d08                	lw	a0,56(a0)
    490c:	0000                	unimp
    490e:	1000                	addi	s0,sp,32
    4910:	0518                	addi	a4,sp,640
    4912:	0002                	c.slli64	zero
    4914:	0500                	addi	s0,sp,640
    4916:	ad080243          	0xad080243
    491a:	0008                	0x8
    491c:	1400                	addi	s0,sp,544
    491e:	5f18                	lw	a4,56(a4)
    4920:	05000007          	0x5000007
    4924:	0246                	slli	tp,tp,0x11
    4926:	00005d07          	0x5d07
    492a:	3000                	fld	fs0,32(s0)
    492c:	d218                	sw	a4,32(a2)
    492e:	0006                	c.slli	zero,0x1
    4930:	0500                	addi	s0,sp,640
    4932:	c2160247          	fmsub.d	ft4,fa2,ft1,fs8,rne
    4936:	0008                	0x8
    4938:	3400                	fld	fs0,40(s0)
    493a:	2218                	fld	fa4,0(a2)
    493c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4940:	0249                	addi	tp,tp,18
    4942:	00005d07          	0x5d07
    4946:	3800                	fld	fs0,48(s0)
    4948:	d418                	sw	a4,40(s0)
    494a:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    494e:	d30a024b          	fnmsub.d	ft4,fs4,fa6,fs10,rne
    4952:	0008                	0x8
    4954:	3c00                	fld	fs0,56(s0)
    4956:	4c18                	lw	a4,24(s0)
    4958:	0001                	nop
    495a:	0500                	addi	s0,sp,640
    495c:	024e                	slli	tp,tp,0x13
    495e:	00019013          	slli	zero,gp,0x0
    4962:	4000                	lw	s0,0(s0)
    4964:	8e18                	0x8e18
    4966:	0001                	nop
    4968:	0500                	addi	s0,sp,640
    496a:	5d07024f          	0x5d07024f
    496e:	0000                	unimp
    4970:	4400                	lw	s0,8(s0)
    4972:	7218                	flw	fa4,32(a2)
    4974:	0002                	c.slli64	zero
    4976:	0500                	addi	s0,sp,640
    4978:	0250                	addi	a2,sp,260
    497a:	00019013          	slli	zero,gp,0x0
    497e:	4800                	lw	s0,16(s0)
    4980:	8e18                	0x8e18
    4982:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4986:	0251                	addi	tp,tp,20
    4988:	d914                	sw	a3,48(a0)
    498a:	0008                	0x8
    498c:	4c00                	lw	s0,24(s0)
    498e:	8c18                	0x8c18
    4990:	0005                	c.nop	1
    4992:	0500                	addi	s0,sp,640
    4994:	0254                	addi	a3,sp,260
    4996:	00005d07          	0x5d07
    499a:	5000                	lw	s0,32(s0)
    499c:	0818                	addi	a4,sp,16
    499e:	0006                	c.slli	zero,0x1
    49a0:	0500                	addi	s0,sp,640
    49a2:	0255                	addi	tp,tp,21
    49a4:	c109                	beqz	a0,49a6 <__muldf3+0x5da>
    49a6:	0005                	c.nop	1
    49a8:	5400                	lw	s0,40(s0)
    49aa:	3a18                	fld	fa4,48(a2)
    49ac:	0006                	c.slli	zero,0x1
    49ae:	0500                	addi	s0,sp,640
    49b0:	0278                	addi	a4,sp,268
    49b2:	00088807          	0x88807
    49b6:	5800                	lw	s0,48(s0)
    49b8:	bb19                	j	46ce <__muldf3+0x302>
    49ba:	0004                	0x4
    49bc:	0500                	addi	s0,sp,640
    49be:	027c                	addi	a5,sp,268
    49c0:	0002c113          	xori	sp,t0,0
    49c4:	4800                	lw	s0,16(s0)
    49c6:	1901                	addi	s2,s2,-32
    49c8:	02bd                	addi	t0,t0,15
    49ca:	0000                	unimp
    49cc:	7d05                	lui	s10,0xfffe1
    49ce:	1202                	slli	tp,tp,0x20
    49d0:	027e                	slli	tp,tp,0x1f
    49d2:	0000                	unimp
    49d4:	014c                	addi	a1,sp,132
    49d6:	a419                	j	4bdc <__floatunsidf+0x34>
    49d8:	0002                	c.slli64	zero
    49da:	0500                	addi	s0,sp,640
    49dc:	0281                	addi	t0,t0,0
    49de:	ea0c                	fsw	fa1,16(a2)
    49e0:	0008                	0x8
    49e2:	dc00                	sw	s0,56(s0)
    49e4:	1902                	slli	s2,s2,0x20
    49e6:	000006af          	0x6af
    49ea:	8605                	srai	a2,a2,0x1
    49ec:	1002                	c.slli	zero,0x20
    49ee:	066e                	slli	a2,a2,0x1b
    49f0:	0000                	unimp
    49f2:	02e0                	addi	s0,sp,332
    49f4:	0719                	addi	a4,a4,6
    49f6:	0005                	c.nop	1
    49f8:	0500                	addi	s0,sp,640
    49fa:	0288                	addi	a0,sp,320
    49fc:	f60a                	fsw	ft2,44(sp)
    49fe:	0008                	0x8
    4a00:	ec00                	fsw	fs0,24(s0)
    4a02:	0002                	c.slli64	zero
    4a04:	0405                	addi	s0,s0,1
    4a06:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    4a0a:	0102                	c.slli64	sp
    4a0c:	1908                	addi	a0,sp,176
    4a0e:	0006                	c.slli	zero,0x1
    4a10:	1600                	addi	s0,sp,800
    4a12:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    4a16:	0405                	addi	s0,s0,1
    4a18:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
    4a1c:	a114                	fsd	fa3,0(a0)
    4a1e:	0000                	unimp
    4a20:	f700                	fsw	fs0,40(a4)
    4a22:	0005                	c.nop	1
    4a24:	1500                	addi	s0,sp,672
    4a26:	046d                	addi	s0,s0,27
    4a28:	0000                	unimp
    4a2a:	2815                	jal	4a5e <__muldf3+0x692>
    4a2c:	0001                	nop
    4a2e:	1500                	addi	s0,sp,672
    4a30:	000005f7          	0x5f7
    4a34:	5d15                	li	s10,-27
    4a36:	0000                	unimp
    4a38:	0000                	unimp
    4a3a:	0405                	addi	s0,s0,1
    4a3c:	05ce                	slli	a1,a1,0x13
    4a3e:	0000                	unimp
    4a40:	0405                	addi	s0,s0,1
    4a42:	05d9                	addi	a1,a1,22
    4a44:	0000                	unimp
    4a46:	9514                	0x9514
    4a48:	0000                	unimp
    4a4a:	2100                	fld	fs0,0(a0)
    4a4c:	0006                	c.slli	zero,0x1
    4a4e:	1500                	addi	s0,sp,672
    4a50:	046d                	addi	s0,s0,27
    4a52:	0000                	unimp
    4a54:	2815                	jal	4a88 <__muldf3+0x6bc>
    4a56:	0001                	nop
    4a58:	1500                	addi	s0,sp,672
    4a5a:	0095                	addi	ra,ra,5
    4a5c:	0000                	unimp
    4a5e:	5d15                	li	s10,-27
    4a60:	0000                	unimp
    4a62:	0000                	unimp
    4a64:	0405                	addi	s0,s0,1
    4a66:	00000603          	lb	a2,0(zero) # 0 <_start>
    4a6a:	5d14                	lw	a3,56(a0)
    4a6c:	0000                	unimp
    4a6e:	3b00                	fld	fs0,48(a4)
    4a70:	0006                	c.slli	zero,0x1
    4a72:	1500                	addi	s0,sp,672
    4a74:	046d                	addi	s0,s0,27
    4a76:	0000                	unimp
    4a78:	2815                	jal	4aac <__muldf3+0x6e0>
    4a7a:	0001                	nop
    4a7c:	0000                	unimp
    4a7e:	0405                	addi	s0,s0,1
    4a80:	00000627          	0x627
    4a84:	2c0a                	fld	fs8,128(sp)
    4a86:	0000                	unimp
    4a88:	5100                	lw	s0,32(a0)
    4a8a:	0006                	c.slli	zero,0x1
    4a8c:	0b00                	addi	s0,sp,400
    4a8e:	0064                	addi	s1,sp,12
    4a90:	0000                	unimp
    4a92:	0002                	c.slli64	zero
    4a94:	2c0a                	fld	fs8,128(sp)
    4a96:	0000                	unimp
    4a98:	6100                	flw	fs0,0(a0)
    4a9a:	0006                	c.slli	zero,0x1
    4a9c:	0b00                	addi	s0,sp,400
    4a9e:	0064                	addi	s1,sp,12
    4aa0:	0000                	unimp
    4aa2:	0000                	unimp
    4aa4:	0001f607          	0x1f607
    4aa8:	0500                	addi	s0,sp,640
    4aaa:	011f 0c1a 0003      	0x30c1a011f
    4ab0:	1a00                	addi	s0,sp,304
    4ab2:	0694                	addi	a3,sp,832
    4ab4:	0000                	unimp
    4ab6:	050c                	addi	a1,sp,640
    4ab8:	a7080123          	sb	a6,-1438(a6) # fffe2a62 <__freertos_irq_stack_top+0xfefd2a62>
    4abc:	0006                	c.slli	zero,0x1
    4abe:	1800                	addi	s0,sp,48
    4ac0:	0000079b          	0x79b
    4ac4:	2505                	jal	50e4 <__exponent+0xdc>
    4ac6:	1101                	addi	sp,sp,-32
    4ac8:	000006a7          	0x6a7
    4acc:	1800                	addi	s0,sp,48
    4ace:	05c4                	addi	s1,sp,708
    4ad0:	0000                	unimp
    4ad2:	2605                	jal	4df2 <memset+0x2a>
    4ad4:	0701                	addi	a4,a4,0
    4ad6:	005d                	c.nop	23
    4ad8:	0000                	unimp
    4ada:	1804                	addi	s1,sp,48
    4adc:	0300                	addi	s0,sp,384
    4ade:	0000                	unimp
    4ae0:	2705                	jal	5200 <_printf_float+0xf8>
    4ae2:	0b01                	addi	s6,s6,0
    4ae4:	06ad                	addi	a3,a3,11
    4ae6:	0000                	unimp
    4ae8:	0008                	0x8
    4aea:	0405                	addi	s0,s0,1
    4aec:	066e                	slli	a2,a2,0x1b
    4aee:	0000                	unimp
    4af0:	0405                	addi	s0,s0,1
    4af2:	0661                	addi	a2,a2,24
    4af4:	0000                	unimp
    4af6:	861a                	mv	a2,t1
    4af8:	0001                	nop
    4afa:	0e00                	addi	s0,sp,784
    4afc:	3f05                	jal	4a2c <__muldf3+0x660>
    4afe:	0801                	addi	a6,a6,0
    4b00:	06ec                	addi	a1,sp,844
    4b02:	0000                	unimp
    4b04:	9018                	0x9018
    4b06:	05000007          	0x5000007
    4b0a:	0140                	addi	s0,sp,132
    4b0c:	ec12                	fsw	ft4,24(sp)
    4b0e:	0006                	c.slli	zero,0x1
    4b10:	0000                	unimp
    4b12:	9818                	0x9818
    4b14:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    4b18:	0141                	addi	sp,sp,16
    4b1a:	ec12                	fsw	ft4,24(sp)
    4b1c:	0006                	c.slli	zero,0x1
    4b1e:	0600                	addi	s0,sp,768
    4b20:	5e18                	lw	a4,56(a2)
    4b22:	0006                	c.slli	zero,0x1
    4b24:	0500                	addi	s0,sp,640
    4b26:	0142                	slli	sp,sp,0x10
    4b28:	3a12                	fld	fs4,288(sp)
    4b2a:	0000                	unimp
    4b2c:	0c00                	addi	s0,sp,528
    4b2e:	0a00                	addi	s0,sp,272
    4b30:	003a                	c.slli	zero,0xe
    4b32:	0000                	unimp
    4b34:	06fc                	addi	a5,sp,844
    4b36:	0000                	unimp
    4b38:	0000640b          	0x640b
    4b3c:	0200                	addi	s0,sp,256
    4b3e:	1b00                	addi	s0,sp,432
    4b40:	05d0                	addi	a2,sp,708
    4b42:	0259                	addi	tp,tp,22
    4b44:	00081107          	0x81107
    4b48:	1800                	addi	s0,sp,48
    4b4a:	073e                	slli	a4,a4,0xf
    4b4c:	0000                	unimp
    4b4e:	5b05                	li	s6,-31
    4b50:	1802                	slli	a6,a6,0x20
    4b52:	0064                	addi	s1,sp,12
    4b54:	0000                	unimp
    4b56:	1800                	addi	s0,sp,48
    4b58:	000006b7          	lui	a3,0x0
    4b5c:	5c05                	li	s8,-31
    4b5e:	1202                	slli	tp,tp,0x20
    4b60:	05c1                	addi	a1,a1,16
    4b62:	0000                	unimp
    4b64:	1804                	addi	s1,sp,48
    4b66:	000001af          	0x1af
    4b6a:	5d05                	li	s10,-31
    4b6c:	1002                	c.slli	zero,0x20
    4b6e:	0811                	addi	a6,a6,4
    4b70:	0000                	unimp
    4b72:	1808                	addi	a0,sp,48
    4b74:	0560                	addi	s0,sp,652
    4b76:	0000                	unimp
    4b78:	5e05                	li	t3,-31
    4b7a:	1702                	slli	a4,a4,0x20
    4b7c:	01a6                	slli	gp,gp,0x9
    4b7e:	0000                	unimp
    4b80:	1824                	addi	s1,sp,56
    4b82:	0350                	addi	a2,sp,388
    4b84:	0000                	unimp
    4b86:	5f05                	li	t5,-31
    4b88:	0f02                	c.slli64	t5
    4b8a:	005d                	c.nop	23
    4b8c:	0000                	unimp
    4b8e:	1848                	addi	a0,sp,52
    4b90:	0796                	slli	a5,a5,0x5
    4b92:	0000                	unimp
    4b94:	6005                	c.lui	zero,0x1
    4b96:	2c02                	fld	fs8,0(sp)
    4b98:	0056                	c.slli	zero,0x15
    4b9a:	0000                	unimp
    4b9c:	1850                	addi	a2,sp,52
    4b9e:	005e                	c.slli	zero,0x17
    4ba0:	0000                	unimp
    4ba2:	6105                	addi	sp,sp,32
    4ba4:	1a02                	slli	s4,s4,0x20
    4ba6:	000006b3          	add	a3,zero,zero
    4baa:	1858                	addi	a4,sp,52
    4bac:	028d                	addi	t0,t0,3
    4bae:	0000                	unimp
    4bb0:	6205                	lui	tp,0x1
    4bb2:	1602                	slli	a2,a2,0x20
    4bb4:	0110                	addi	a2,sp,128
    4bb6:	0000                	unimp
    4bb8:	1868                	addi	a0,sp,60
    4bba:	06c4                	addi	s1,sp,836
    4bbc:	0000                	unimp
    4bbe:	6305                	lui	t1,0x1
    4bc0:	1602                	slli	a2,a2,0x20
    4bc2:	0110                	addi	a2,sp,128
    4bc4:	0000                	unimp
    4bc6:	1870                	addi	a2,sp,60
    4bc8:	0041                	c.nop	16
    4bca:	0000                	unimp
    4bcc:	6405                	lui	s0,0x1
    4bce:	1602                	slli	a2,a2,0x20
    4bd0:	0110                	addi	a2,sp,128
    4bd2:	0000                	unimp
    4bd4:	1878                	addi	a4,sp,60
    4bd6:	059c                	addi	a5,sp,704
    4bd8:	0000                	unimp
    4bda:	6505                	lui	a0,0x1
    4bdc:	1002                	c.slli	zero,0x20
    4bde:	0821                	addi	a6,a6,8
    4be0:	0000                	unimp
    4be2:	1880                	addi	s0,sp,112
    4be4:	00000063          	beqz	zero,4be4 <__floatunsidf+0x3c>
    4be8:	6605                	lui	a2,0x1
    4bea:	1002                	c.slli	zero,0x20
    4bec:	0831                	addi	a6,a6,12
    4bee:	0000                	unimp
    4bf0:	1888                	addi	a0,sp,112
    4bf2:	0000063f 0f026705 	0xf0267050000063f
    4bfa:	005d                	c.nop	23
    4bfc:	0000                	unimp
    4bfe:	18a0                	addi	s0,sp,120
    4c00:	00c6                	slli	ra,ra,0x11
    4c02:	0000                	unimp
    4c04:	6805                	lui	a6,0x1
    4c06:	1602                	slli	a2,a2,0x20
    4c08:	0110                	addi	a2,sp,128
    4c0a:	0000                	unimp
    4c0c:	18a4                	addi	s1,sp,120
    4c0e:	02ae                	slli	t0,t0,0xb
    4c10:	0000                	unimp
    4c12:	6905                	lui	s2,0x1
    4c14:	1602                	slli	a2,a2,0x20
    4c16:	0110                	addi	a2,sp,128
    4c18:	0000                	unimp
    4c1a:	18ac                	addi	a1,sp,120
    4c1c:	0248                	addi	a0,sp,260
    4c1e:	0000                	unimp
    4c20:	6a05                	lui	s4,0x1
    4c22:	1602                	slli	a2,a2,0x20
    4c24:	0110                	addi	a2,sp,128
    4c26:	0000                	unimp
    4c28:	18b4                	addi	a3,sp,120
    4c2a:	03ad                	addi	t2,t2,11
    4c2c:	0000                	unimp
    4c2e:	6b05                	lui	s6,0x1
    4c30:	1602                	slli	a2,a2,0x20
    4c32:	0110                	addi	a2,sp,128
    4c34:	0000                	unimp
    4c36:	18bc                	addi	a5,sp,120
    4c38:	027c                	addi	a5,sp,268
    4c3a:	0000                	unimp
    4c3c:	6c05                	lui	s8,0x1
    4c3e:	1602                	slli	a2,a2,0x20
    4c40:	0110                	addi	a2,sp,128
    4c42:	0000                	unimp
    4c44:	18c4                	addi	s1,sp,116
    4c46:	047e                	slli	s0,s0,0x1f
    4c48:	0000                	unimp
    4c4a:	6d05                	lui	s10,0x1
    4c4c:	0802                	c.slli64	a6
    4c4e:	005d                	c.nop	23
    4c50:	0000                	unimp
    4c52:	00cc                	addi	a1,sp,68
    4c54:	c70a                	sw	sp,140(sp)
    4c56:	0005                	c.nop	1
    4c58:	2100                	fld	fs0,0(a0)
    4c5a:	0008                	0x8
    4c5c:	0b00                	addi	s0,sp,400
    4c5e:	0064                	addi	s1,sp,12
    4c60:	0000                	unimp
    4c62:	0019                	c.nop	6
    4c64:	c70a                	sw	sp,140(sp)
    4c66:	0005                	c.nop	1
    4c68:	3100                	fld	fs0,32(a0)
    4c6a:	0008                	0x8
    4c6c:	0b00                	addi	s0,sp,400
    4c6e:	0064                	addi	s1,sp,12
    4c70:	0000                	unimp
    4c72:	c70a0007          	0xc70a0007
    4c76:	0005                	c.nop	1
    4c78:	4100                	lw	s0,0(a0)
    4c7a:	0008                	0x8
    4c7c:	0b00                	addi	s0,sp,400
    4c7e:	0064                	addi	s1,sp,12
    4c80:	0000                	unimp
    4c82:	f01b0017          	auipc	zero,0xf01b0
    4c86:	7205                	lui	tp,0xfffe1
    4c88:	0702                	c.slli64	a4
    4c8a:	0868                	addi	a0,sp,28
    4c8c:	0000                	unimp
    4c8e:	7f18                	flw	fa4,56(a4)
    4c90:	0001                	nop
    4c92:	0500                	addi	s0,sp,640
    4c94:	0275                	addi	tp,tp,29
    4c96:	0008681b          	0x8681b
    4c9a:	0000                	unimp
    4c9c:	d318                	sw	a4,32(a4)
    4c9e:	05000007          	0x5000007
    4ca2:	0276                	slli	tp,tp,0x1d
    4ca4:	7818                	flw	fa4,48(s0)
    4ca6:	0008                	0x8
    4ca8:	7800                	flw	fs0,48(s0)
    4caa:	0a00                	addi	s0,sp,272
    4cac:	0306                	slli	t1,t1,0x1
    4cae:	0000                	unimp
    4cb0:	0878                	addi	a4,sp,28
    4cb2:	0000                	unimp
    4cb4:	0000640b          	0x640b
    4cb8:	1d00                	addi	s0,sp,688
    4cba:	0a00                	addi	s0,sp,272
    4cbc:	0064                	addi	s1,sp,12
    4cbe:	0000                	unimp
    4cc0:	0888                	addi	a0,sp,80
    4cc2:	0000                	unimp
    4cc4:	0000640b          	0x640b
    4cc8:	1d00                	addi	s0,sp,688
    4cca:	1c00                	addi	s0,sp,560
    4ccc:	05f0                	addi	a2,sp,716
    4cce:	ad030257          	0xad030257
    4cd2:	0008                	0x8
    4cd4:	1d00                	addi	s0,sp,688
    4cd6:	000006e3          	beqz	zero,54e2 <_printf_float+0x3da>
    4cda:	6e05                	lui	t3,0x1
    4cdc:	0b02                	c.slli64	s6
    4cde:	06fc                	addi	a5,sp,844
    4ce0:	0000                	unimp
    4ce2:	6f1d                	lui	t5,0x7
    4ce4:	0005                	c.nop	1
    4ce6:	0500                	addi	s0,sp,640
    4ce8:	410b0277          	0x410b0277
    4cec:	0008                	0x8
    4cee:	0000                	unimp
    4cf0:	c70a                	sw	sp,140(sp)
    4cf2:	0005                	c.nop	1
    4cf4:	bd00                	fsd	fs0,56(a0)
    4cf6:	0008                	0x8
    4cf8:	0b00                	addi	s0,sp,400
    4cfa:	0064                	addi	s1,sp,12
    4cfc:	0000                	unimp
    4cfe:	0018                	0x18
    4d00:	a106                	fsd	ft1,128(sp)
    4d02:	05000007          	0x5000007
    4d06:	bd04                	fsd	fs1,56(a0)
    4d08:	0008                	0x8
    4d0a:	1e00                	addi	s0,sp,816
    4d0c:	000008d3          	fadd.s	fa7,ft0,ft0,rne
    4d10:	6d15                	lui	s10,0x5
    4d12:	0004                	0x4
    4d14:	0000                	unimp
    4d16:	0405                	addi	s0,s0,1
    4d18:	08c8                	addi	a0,sp,84
    4d1a:	0000                	unimp
    4d1c:	0405                	addi	s0,s0,1
    4d1e:	0190                	addi	a2,sp,192
    4d20:	0000                	unimp
    4d22:	ea1e                	fsw	ft7,20(sp)
    4d24:	0008                	0x8
    4d26:	1500                	addi	s0,sp,672
    4d28:	005d                	c.nop	23
    4d2a:	0000                	unimp
    4d2c:	0500                	addi	s0,sp,640
    4d2e:	f004                	fsw	fs1,32(s0)
    4d30:	0008                	0x8
    4d32:	0500                	addi	s0,sp,640
    4d34:	df04                	sw	s1,56(a4)
    4d36:	0008                	0x8
    4d38:	0a00                	addi	s0,sp,272
    4d3a:	0661                	addi	a2,a2,24
    4d3c:	0000                	unimp
    4d3e:	0906                	slli	s2,s2,0x1
    4d40:	0000                	unimp
    4d42:	0000640b          	0x640b
    4d46:	0200                	addi	s0,sp,256
    4d48:	1f00                	addi	s0,sp,944
    4d4a:	053d                	addi	a0,a0,15
    4d4c:	0000                	unimp
    4d4e:	0705                	addi	a4,a4,1
    4d50:	046d1703          	lh	a4,70(s10) # 5046 <__exponent+0x3e>
    4d54:	0000                	unimp
    4d56:	361f 0005 0500      	0x5000005361f
    4d5c:	0308                	addi	a0,sp,384
    4d5e:	731d                	lui	t1,0xfffe7
    4d60:	0004                	0x4
    4d62:	0400                	addi	s0,sp,512
    4d64:	085d                	addi	a6,a6,23
    4d66:	0000                	unimp
    4d68:	7b06                	flw	fs6,96(sp)
    4d6a:	00004813          	xori	a6,zero,0
    4d6e:	2000                	fld	fs0,0(s0)
    4d70:	0a7a                	slli	s4,s4,0x1e
    4d72:	0000                	unimp
    4d74:	c10e6307          	0xc10e6307
    4d78:	0005                	c.nop	1
    4d7a:	2000                	fld	fs0,0(s0)
    4d7c:	032d                	addi	t1,t1,11
    4d7e:	0000                	unimp
    4d80:	9a08                	0x9a08
    4d82:	4116                	lw	sp,68(sp)
    4d84:	0000                	unimp
    4d86:	2000                	fld	fs0,0(s0)
    4d88:	00000037          	lui	zero,0x0
    4d8c:	9b08                	0x9b08
    4d8e:	5d15                	li	s10,-27
    4d90:	0000                	unimp
    4d92:	0a00                	addi	s0,sp,272
    4d94:	05c1                	addi	a1,a1,16
    4d96:	0000                	unimp
    4d98:	0960                	addi	s0,sp,156
    4d9a:	0000                	unimp
    4d9c:	0000640b          	0x640b
    4da0:	0100                	addi	s0,sp,128
    4da2:	2000                	fld	fs0,0(s0)
    4da4:	0262                	slli	tp,tp,0x18
    4da6:	0000                	unimp
    4da8:	9e08                	0x9e08
    4daa:	00095017          	auipc	zero,0x95
    4dae:	0400                	addi	s0,sp,512
    4db0:	07f9                	addi	a5,a5,30
    4db2:	0000                	unimp
    4db4:	4209                	li	tp,2
    4db6:	2011                	jal	4dba <__clzsi2+0x86>
    4db8:	0009                	c.nop	2
    4dba:	0400                	addi	s0,sp,512
    4dbc:	0000074b          	fnmsub.s	fa4,ft0,ft0,ft0,rne
    4dc0:	6009                	c.lui	zero,0x2
    4dc2:	5d18                	lw	a4,56(a0)
    4dc4:	0000                	unimp
    4dc6:	2100                	fld	fs0,0(a0)
    4dc8:	0978                	addi	a4,sp,156
    4dca:	0000                	unimp
    4dcc:	0802                	c.slli64	a6
    4dce:	9504                	0x9504
    4dd0:	0004                	0x4
    4dd2:	0400                	addi	s0,sp,512
    4dd4:	02c6                	slli	t0,t0,0x11
    4dd6:	0000                	unimp
    4dd8:	6209                	lui	tp,0x2
    4dda:	2c18                	fld	fa4,24(s0)
    4ddc:	0000                	unimp
    4dde:	0400                	addi	s0,sp,512
    4de0:	00000017          	auipc	zero,0x0
    4de4:	6309                	lui	t1,0x2
    4de6:	6418                	flw	fa4,8(s0)
    4de8:	0000                	unimp
    4dea:	2000                	fld	fs0,0(s0)
    4dec:	00000663          	beqz	zero,4df8 <memset+0x30>
    4df0:	ba09                	j	4702 <__muldf3+0x336>
    4df2:	00099c0f          	0x99c0f
    4df6:	0f00                	addi	s0,sp,912
    4df8:	000007bb          	0x7bb
    4dfc:	0901                	addi	s2,s2,0
    4dfe:	10bc                	addi	a5,sp,104
    4e00:	000009cf          	fnmadd.s	fs3,ft0,ft0,ft0,rne
    4e04:	ea0d                	bnez	a2,4e36 <memset+0x6e>
    4e06:	0001                	nop
    4e08:	0900                	addi	s0,sp,144
    4e0a:	0bbe                	slli	s7,s7,0xf
    4e0c:	0990                	addi	a2,sp,208
    4e0e:	0000                	unimp
    4e10:	0000                	unimp
    4e12:	9a04                	0x9a04
    4e14:	0006                	c.slli	zero,0x1
    4e16:	0900                	addi	s0,sp,144
    4e18:	09b403bf 11040000 	0x1104000009b403bf
    4e20:	0008                	0x8
    4e22:	0a00                	addi	s0,sp,272
    4e24:	101f 0989 0000      	0x989101f
    4e2a:	5022                	0x5022
    4e2c:	000a                	c.slli	zero,0x2
    4e2e:	0100                	addi	s0,sp,128
    4e30:	0984110f          	0x984110f
    4e34:	0000                	unimp
    4e36:	0305                	addi	t1,t1,1
    4e38:	0c40                	addi	s0,sp,532
    4e3a:	0100                	addi	s0,sp,128
    4e3c:	a922                	fsd	fs0,144(sp)
    4e3e:	000a                	c.slli	zero,0x2
    4e40:	0100                	addi	s0,sp,128
    4e42:	1110                	addi	a2,sp,160
    4e44:	0984                	addi	s1,sp,208
    4e46:	0000                	unimp
    4e48:	0305                	addi	t1,t1,1
    4e4a:	0c44                	addi	s1,sp,532
    4e4c:	0100                	addi	s0,sp,128
    4e4e:	8a22                	mv	s4,s0
    4e50:	000a                	c.slli	zero,0x2
    4e52:	0100                	addi	s0,sp,128
    4e54:	1111                	addi	sp,sp,-28
    4e56:	0984                	addi	s1,sp,208
    4e58:	0000                	unimp
    4e5a:	0305                	addi	t1,t1,1
    4e5c:	0c34                	addi	a3,sp,536
    4e5e:	0100                	addi	s0,sp,128
    4e60:	3222                	fld	ft4,40(sp)
    4e62:	000a                	c.slli	zero,0x2
    4e64:	0100                	addi	s0,sp,128
    4e66:	1119                	addi	sp,sp,-26
    4e68:	0984                	addi	s1,sp,208
    4e6a:	0000                	unimp
    4e6c:	0305                	addi	t1,t1,1
    4e6e:	0c38                	addi	a4,sp,536
    4e70:	0100                	addi	s0,sp,128
    4e72:	6b22                	flw	fs6,8(sp)
    4e74:	000a                	c.slli	zero,0x2
    4e76:	0100                	addi	s0,sp,128
    4e78:	111a                	slli	sp,sp,0x26
    4e7a:	0984                	addi	s1,sp,208
    4e7c:	0000                	unimp
    4e7e:	0305                	addi	t1,t1,1
    4e80:	0c48                	addi	a0,sp,532
    4e82:	0100                	addi	s0,sp,128
    4e84:	000a4123          	0xa4123
    4e88:	0100                	addi	s0,sp,128
    4e8a:	1525                	addi	a0,a0,-23
    4e8c:	0920                	addi	s0,sp,152
    4e8e:	0000                	unimp
    4e90:	000ad523          	0xad523
    4e94:	0100                	addi	s0,sp,128
    4e96:	2525                	jal	54be <_printf_float+0x3b6>
    4e98:	0920                	addi	s0,sp,152
    4e9a:	0000                	unimp
    4e9c:	9922                	add	s2,s2,s0
    4e9e:	000a                	c.slli	zero,0x2
    4ea0:	0100                	addi	s0,sp,128
    4ea2:	0b2a                	slli	s6,s6,0xa
    4ea4:	0000004f          	fnmadd.s	ft0,ft0,ft0,ft0,rne
    4ea8:	0305                	addi	t1,t1,1
    4eaa:	0c60                	addi	s0,sp,540
    4eac:	0100                	addi	s0,sp,128
    4eae:	a122                	fsd	fs0,128(sp)
    4eb0:	000a                	c.slli	zero,0x2
    4eb2:	0100                	addi	s0,sp,128
    4eb4:	142a                	slli	s0,s0,0x2a
    4eb6:	0000004f          	fnmadd.s	ft0,ft0,ft0,ft0,rne
    4eba:	0305                	addi	t1,t1,1
    4ebc:	0c58                	addi	a4,sp,532
    4ebe:	0100                	addi	s0,sp,128
    4ec0:	a824                	fsd	fs1,80(s0)
    4ec2:	0009                	c.nop	2
    4ec4:	0100                	addi	s0,sp,128
    4ec6:	084e                	slli	a6,a6,0x13
    4ec8:	0305                	addi	t1,t1,1
    4eca:	0c30                	addi	a2,sp,536
    4ecc:	0100                	addi	s0,sp,128
    4ece:	2725                	jal	55f6 <_printf_float+0x4ee>
    4ed0:	0009                	c.nop	2
    4ed2:	0100                	addi	s0,sp,128
    4ed4:	016a                	slli	sp,sp,0x1a
    4ed6:	2038                	fld	fa4,64(s0)
    4ed8:	0000                	unimp
    4eda:	0008                	0x8
    4edc:	0000                	unimp
    4ede:	9c01                	0x9c01
    4ee0:	0aae                	slli	s5,s5,0xb
    4ee2:	0000                	unimp
    4ee4:	7026                	flw	ft0,104(sp)
    4ee6:	0100                	addi	s0,sp,128
    4ee8:	1e6a                	slli	t3,t3,0x3a
    4eea:	0aae                	slli	s5,s5,0xb
    4eec:	0000                	unimp
    4eee:	5a01                	li	s4,-32
    4ef0:	0500                	addi	s0,sp,640
    4ef2:	cf04                	sw	s1,24(a4)
    4ef4:	0009                	c.nop	2
    4ef6:	2500                	fld	fs0,8(a0)
    4ef8:	00000837          	lui	a6,0x0
    4efc:	5901                	li	s2,-32
    4efe:	0001                	nop
    4f00:	0020                	addi	s0,sp,8
    4f02:	3800                	fld	fs0,48(s0)
    4f04:	0000                	unimp
    4f06:	0100                	addi	s0,sp,128
    4f08:	0c9c                	addi	a5,sp,592
    4f0a:	2700000b          	0x2700000b
    4f0e:	0070                	addi	a2,sp,12
    4f10:	5901                	li	s2,-32
    4f12:	ae1e                	fsd	ft7,280(sp)
    4f14:	000a                	c.slli	zero,0x2
    4f16:	9400                	0x9400
    4f18:	2800003f 000008d4 	0x8d42800003f
    4f20:	5901                	li	s2,-32
    4f22:	0c26                	slli	s8,s8,0x9
    4f24:	c000000b          	0xc000000b
    4f28:	2800003f 000008d9 	0x8d92800003f
    4f30:	5901                	li	s2,-32
    4f32:	1232                	slli	tp,tp,0x2c
    4f34:	e100000b          	0xe100000b
    4f38:	2900003f 00002020 	0x20202900003f
    4f40:	0b99                	addi	s7,s7,6
    4f42:	0000                	unimp
    4f44:	012a                	slli	sp,sp,0xa
    4f46:	055a                	slli	a0,a0,0x16
    4f48:	00048803          	lb	a6,0(s1)
    4f4c:	0001                	nop
    4f4e:	0500                	addi	s0,sp,640
    4f50:	5d04                	lw	s1,56(a0)
    4f52:	0000                	unimp
    4f54:	0500                	addi	s0,sp,640
    4f56:	c104                	sw	s1,0(a0)
    4f58:	0005                	c.nop	1
    4f5a:	2b00                	fld	fs0,16(a4)
    4f5c:	0804                	addi	s1,sp,16
    4f5e:	0000                	unimp
    4f60:	4901                	li	s2,0
    4f62:	db01                	beqz	a4,4e72 <memset+0xaa>
    4f64:	0009                	c.nop	2
    4f66:	d000                	sw	s0,32(s0)
    4f68:	001f 3000 0000      	0x3000001f
    4f6e:	0100                	addi	s0,sp,128
    4f70:	439c                	lw	a5,0(a5)
    4f72:	2800000b          	0x2800000b
    4f76:	0a84                	addi	s1,sp,336
    4f78:	0000                	unimp
    4f7a:	4901                	li	s2,0
    4f7c:	6c19                	lui	s8,0x6
    4f7e:	0009                	c.nop	2
    4f80:	0200                	addi	s0,sp,256
    4f82:	0040                	addi	s0,sp,4
    4f84:	0000                	unimp
    4f86:	2e2c                	fld	fa1,88(a2)
    4f88:	0008                	0x8
    4f8a:	0100                	addi	s0,sp,128
    4f8c:	013c                	addi	a5,sp,136
    4f8e:	096c                	addi	a1,sp,156
    4f90:	0000                	unimp
    4f92:	1fb8                	addi	a4,sp,1016
    4f94:	0000                	unimp
    4f96:	0018                	0x18
    4f98:	0000                	unimp
    4f9a:	9c01                	0x9c01
    4f9c:	ca25                	beqz	a2,500c <__exponent+0x4>
    4f9e:	0008                	0x8
    4fa0:	0100                	addi	s0,sp,128
    4fa2:	0134                	addi	a3,sp,136
    4fa4:	1f90                	addi	a2,sp,1008
    4fa6:	0000                	unimp
    4fa8:	0028                	addi	a0,sp,8
    4faa:	0000                	unimp
    4fac:	9c01                	0x9c01
    4fae:	0b79                	addi	s6,s6,30
    4fb0:	0000                	unimp
    4fb2:	a02d                	j	4fdc <__cvt+0x138>
    4fb4:	001f a400 000b      	0xba400001f
    4fba:	0000                	unimp
    4fbc:	ad25                	j	55f4 <_printf_float+0x4ec>
    4fbe:	0008                	0x8
    4fc0:	0100                	addi	s0,sp,128
    4fc2:	012d                	addi	sp,sp,11
    4fc4:	1f68                	addi	a0,sp,956
    4fc6:	0000                	unimp
    4fc8:	0028                	addi	a0,sp,8
    4fca:	0000                	unimp
    4fcc:	9c01                	0x9c01
    4fce:	0b99                	addi	s7,s7,6
    4fd0:	0000                	unimp
    4fd2:	782d                	lui	a6,0xfffeb
    4fd4:	001f a400 000b      	0xba400001f
    4fda:	0000                	unimp
    4fdc:	102e                	c.slli	zero,0x2b
    4fde:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    4fe2:	0b000003          	lb	zero,176(zero) # b0 <main+0x34>
    4fe6:	2f00                	fld	fs0,24(a4)
    4fe8:	0a5f 0000 0a5f      	0xa5f00000a5f
    4fee:	0000                	unimp
    4ff0:	170c                	addi	a1,sp,928
    4ff2:	0011                	c.nop	4
    4ff4:	0df5                	addi	s11,s11,29
    4ff6:	0000                	unimp
    4ff8:	0004                	0x4
    4ffa:	0db4                	addi	a3,sp,728
    4ffc:	0000                	unimp
    4ffe:	0104                	addi	s1,sp,128
    5000:	040e                	slli	s0,s0,0x3
    5002:	0000                	unimp
    5004:	e30c                	fsw	fa1,0(a4)
    5006:	000a                	c.slli	zero,0x2
    5008:	1300                	addi	s0,sp,416
    500a:	20000007          	0x20000007
    500e:	00000007          	0x7
    5012:	0000                	unimp
    5014:	1700                	addi	s0,sp,928
    5016:	004c                	addi	a1,sp,4
    5018:	0200                	addi	s0,sp,256
    501a:	0601                	addi	a2,a2,0
    501c:	0612                	slli	a2,a2,0x4
    501e:	0000                	unimp
    5020:	0102                	c.slli64	sp
    5022:	1008                	addi	a0,sp,32
    5024:	0006                	c.slli	zero,0x1
    5026:	0200                	addi	s0,sp,256
    5028:	0502                	c.slli64	a0
    502a:	04cc                	addi	a1,sp,580
    502c:	0000                	unimp
    502e:	0202                	c.slli64	tp
    5030:	0006ea07          	0x6ea07
    5034:	0200                	addi	s0,sp,256
    5036:	0504                	addi	s1,sp,640
    5038:	0000036b          	0x36b
    503c:	0402                	c.slli64	s0
    503e:	00019d07          	0x19d07
    5042:	0200                	addi	s0,sp,256
    5044:	0508                	addi	a0,sp,640
    5046:	0366                	slli	t1,t1,0x19
    5048:	0000                	unimp
    504a:	0802                	c.slli64	a6
    504c:	00019807          	0x19807
    5050:	0300                	addi	s0,sp,384
    5052:	0504                	addi	s1,sp,640
    5054:	6e69                	lui	t3,0x1a
    5056:	0074                	addi	a3,sp,12
    5058:	0402                	c.slli64	s0
    505a:	0001a207          	flw	ft4,0(gp) # 1001430 <__global_pointer$>
    505e:	0200                	addi	s0,sp,256
    5060:	0410                	addi	a2,sp,512
    5062:	0490                	addi	a2,sp,576
    5064:	0000                	unimp
    5066:	9c04                	0x9c04
    5068:	0004                	0x4
    506a:	0200                	addi	s0,sp,256
    506c:	1922                	slli	s2,s2,0x28
    506e:	007e                	c.slli	zero,0x1f
    5070:	0000                	unimp
    5072:	0405                	addi	s0,s0,1
    5074:	0084                	addi	s1,sp,64
    5076:	0000                	unimp
    5078:	0106                	slli	sp,sp,0x1
    507a:	0006                	c.slli	zero,0x1
    507c:	0400                	addi	s0,sp,512
    507e:	0731                	addi	a4,a4,12
    5080:	0000                	unimp
    5082:	410e2c03          	lw	s8,1040(t3) # 1a410 <_data_lma+0xf298>
    5086:	0000                	unimp
    5088:	0400                	addi	s0,sp,512
    508a:	00ee                	slli	ra,ra,0x1b
    508c:	0000                	unimp
    508e:	410e7203          	0x410e7203
    5092:	0000                	unimp
    5094:	0400                	addi	s0,sp,512
    5096:	06da                	slli	a3,a3,0x16
    5098:	0000                	unimp
    509a:	5d179103          	lh	sp,1489(a5)
    509e:	0000                	unimp
    50a0:	0700                	addi	s0,sp,896
    50a2:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
    50a6:	6504                	flw	fs1,8(a0)
    50a8:	1701                	addi	a4,a4,-32
    50aa:	0064                	addi	s1,sp,12
    50ac:	0000                	unimp
    50ae:	0408                	addi	a0,sp,512
    50b0:	dc03a603          	lw	a2,-576(t2)
    50b4:	0000                	unimp
    50b6:	0900                	addi	s0,sp,144
    50b8:	02fa                	slli	t0,t0,0x1e
    50ba:	0000                	unimp
    50bc:	ad0ca803          	lw	a6,-1328(s9)
    50c0:	0000                	unimp
    50c2:	0900                	addi	s0,sp,144
    50c4:	0000052f          	0x52f
    50c8:	dc13a903          	lw	s2,-575(t2)
    50cc:	0000                	unimp
    50ce:	0000                	unimp
    50d0:	2c0a                	fld	fs8,128(sp)
    50d2:	0000                	unimp
    50d4:	ec00                	fsw	fs0,24(s0)
    50d6:	0000                	unimp
    50d8:	0b00                	addi	s0,sp,400
    50da:	0064                	addi	s1,sp,12
    50dc:	0000                	unimp
    50de:	080c0003          	lb	zero,128(s8) # 6080 <_puts_r+0x150>
    50e2:	1009a303          	lw	t1,256(s3)
    50e6:	0001                	nop
    50e8:	0d00                	addi	s0,sp,656
    50ea:	0164                	addi	s1,sp,140
    50ec:	0000                	unimp
    50ee:	5d07a503          	lw	a0,1488(a5)
    50f2:	0000                	unimp
    50f4:	0000                	unimp
    50f6:	6a0d                	lui	s4,0x3
    50f8:	0002                	c.slli64	zero
    50fa:	0300                	addi	s0,sp,384
    50fc:	05aa                	slli	a1,a1,0xa
    50fe:	00ba                	slli	ra,ra,0xe
    5100:	0000                	unimp
    5102:	0004                	0x4
    5104:	ea04                	fsw	fs1,16(a2)
    5106:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
    510a:	00ec03ab          	0xec03ab
    510e:	0000                	unimp
    5110:	e204                	fsw	fs1,0(a2)
    5112:	0002                	c.slli64	zero
    5114:	0300                	addi	s0,sp,384
    5116:	00721baf          	0x721baf
    511a:	0000                	unimp
    511c:	040e                	slli	s0,s0,0x3
    511e:	9e04                	0x9e04
    5120:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    5124:	1916                	slli	s2,s2,0x25
    5126:	0048                	addi	a0,sp,4
    5128:	0000                	unimp
    512a:	0001280f          	0x1280f
    512e:	1800                	addi	s0,sp,48
    5130:	2f05                	jal	5860 <_printf_float+0x758>
    5132:	9008                	0x9008
    5134:	0001                	nop
    5136:	0d00                	addi	s0,sp,656
    5138:	0000079b          	0x79b
    513c:	3105                	jal	4d5c <__clzsi2+0x28>
    513e:	00019013          	slli	zero,gp,0x0
    5142:	0000                	unimp
    5144:	5f10                	lw	a2,56(a4)
    5146:	3205006b          	0x3205006b
    514a:	00005d07          	0x5d07
    514e:	0400                	addi	s0,sp,512
    5150:	940d                	srai	s0,s0,0x23
    5152:	0005                	c.nop	1
    5154:	0500                	addi	s0,sp,640
    5156:	0b32                	slli	s6,s6,0xc
    5158:	005d                	c.nop	23
    515a:	0000                	unimp
    515c:	0d08                	addi	a0,sp,656
    515e:	050c                	addi	a1,sp,640
    5160:	0000                	unimp
    5162:	3205                	jal	4a82 <__muldf3+0x6b6>
    5164:	5d14                	lw	a3,56(a0)
    5166:	0000                	unimp
    5168:	0c00                	addi	s0,sp,528
    516a:	c40d                	beqz	s0,5194 <_printf_float+0x8c>
    516c:	0001                	nop
    516e:	0500                	addi	s0,sp,640
    5170:	1b32                	slli	s6,s6,0x2c
    5172:	005d                	c.nop	23
    5174:	0000                	unimp
    5176:	1010                	addi	a2,sp,32
    5178:	785f 0500 0b33      	0xb330500785f
    517e:	0196                	slli	gp,gp,0x5
    5180:	0000                	unimp
    5182:	0014                	0x14
    5184:	0405                	addi	s0,s0,1
    5186:	0136                	slli	sp,sp,0xd
    5188:	0000                	unimp
    518a:	2a0a                	fld	fs4,128(sp)
    518c:	0001                	nop
    518e:	a600                	fsd	fs0,8(a2)
    5190:	0001                	nop
    5192:	0b00                	addi	s0,sp,400
    5194:	0064                	addi	s1,sp,12
    5196:	0000                	unimp
    5198:	0000                	unimp
    519a:	0005bf0f          	0x5bf0f
    519e:	2400                	fld	fs0,8(s0)
    51a0:	3705                	jal	50c0 <__exponent+0xb8>
    51a2:	2908                	fld	fa0,16(a0)
    51a4:	0002                	c.slli64	zero
    51a6:	0d00                	addi	s0,sp,656
    51a8:	0000022b          	0x22b
    51ac:	3905                	jal	4ddc <memset+0x14>
    51ae:	5d09                	li	s10,-30
    51b0:	0000                	unimp
    51b2:	0000                	unimp
    51b4:	760d                	lui	a2,0xfffe3
    51b6:	0001                	nop
    51b8:	0500                	addi	s0,sp,640
    51ba:	093a                	slli	s2,s2,0xe
    51bc:	005d                	c.nop	23
    51be:	0000                	unimp
    51c0:	0d04                	addi	s1,sp,656
    51c2:	0154                	addi	a3,sp,132
    51c4:	0000                	unimp
    51c6:	3b05                	jal	4ef6 <__cvt+0x52>
    51c8:	5d09                	li	s10,-30
    51ca:	0000                	unimp
    51cc:	0800                	addi	s0,sp,16
    51ce:	9a0d                	andi	a2,a2,-29
    51d0:	0002                	c.slli64	zero
    51d2:	0500                	addi	s0,sp,640
    51d4:	093c                	addi	a5,sp,152
    51d6:	005d                	c.nop	23
    51d8:	0000                	unimp
    51da:	0d0c                	addi	a1,sp,656
    51dc:	00000487          	0x487
    51e0:	3d05                	jal	5010 <__exponent+0x8>
    51e2:	5d09                	li	s10,-30
    51e4:	0000                	unimp
    51e6:	1000                	addi	s0,sp,32
    51e8:	490d                	li	s2,3
    51ea:	0005                	c.nop	1
    51ec:	0500                	addi	s0,sp,640
    51ee:	093e                	slli	s2,s2,0xf
    51f0:	005d                	c.nop	23
    51f2:	0000                	unimp
    51f4:	0d14                	addi	a3,sp,656
    51f6:	0130                	addi	a2,sp,136
    51f8:	0000                	unimp
    51fa:	3f05                	jal	512a <_printf_float+0x22>
    51fc:	5d09                	li	s10,-30
    51fe:	0000                	unimp
    5200:	1800                	addi	s0,sp,48
    5202:	340d                	jal	4c24 <__floatunsidf+0x7c>
    5204:	0002                	c.slli64	zero
    5206:	0500                	addi	s0,sp,640
    5208:	0940                	addi	s0,sp,148
    520a:	005d                	c.nop	23
    520c:	0000                	unimp
    520e:	0d1c                	addi	a5,sp,656
    5210:	03fd                	addi	t2,t2,31
    5212:	0000                	unimp
    5214:	4105                	li	sp,1
    5216:	5d09                	li	s10,-30
    5218:	0000                	unimp
    521a:	2000                	fld	fs0,0(s0)
    521c:	1100                	addi	s0,sp,160
    521e:	0029                	c.nop	10
    5220:	0000                	unimp
    5222:	0108                	addi	a0,sp,128
    5224:	4a05                	li	s4,1
    5226:	6e08                	flw	fa0,24(a2)
    5228:	0002                	c.slli64	zero
    522a:	0d00                	addi	s0,sp,656
    522c:	03f5                	addi	t2,t2,29
    522e:	0000                	unimp
    5230:	4b05                	li	s6,1
    5232:	6e0a                	flw	ft8,128(sp)
    5234:	0002                	c.slli64	zero
    5236:	0000                	unimp
    5238:	f50d                	bnez	a0,5162 <_printf_float+0x5a>
    523a:	0005                	c.nop	1
    523c:	0500                	addi	s0,sp,640
    523e:	094c                	addi	a1,sp,148
    5240:	026e                	slli	tp,tp,0x1b
    5242:	0000                	unimp
    5244:	1280                	addi	s0,sp,352
    5246:	0704                	addi	s1,sp,896
    5248:	0000                	unimp
    524a:	4e05                	li	t3,1
    524c:	2a0a                	fld	fs4,128(sp)
    524e:	0001                	nop
    5250:	0000                	unimp
    5252:	1201                	addi	tp,tp,-32
    5254:	0780                	addi	s0,sp,960
    5256:	0000                	unimp
    5258:	5105                	li	sp,-31
    525a:	2a0a                	fld	fs4,128(sp)
    525c:	0001                	nop
    525e:	0400                	addi	s0,sp,512
    5260:	0001                	nop
    5262:	280a                	fld	fa6,128(sp)
    5264:	0001                	nop
    5266:	7e00                	flw	fs0,56(a2)
    5268:	0002                	c.slli64	zero
    526a:	0b00                	addi	s0,sp,400
    526c:	0064                	addi	s1,sp,12
    526e:	0000                	unimp
    5270:	001f bb11 0004      	0x4bb11001f
    5276:	9000                	0x9000
    5278:	0501                	addi	a0,a0,0
    527a:	085d                	addi	a6,a6,23
    527c:	02c1                	addi	t0,t0,16
    527e:	0000                	unimp
    5280:	9b0d                	andi	a4,a4,-29
    5282:	05000007          	0x5000007
    5286:	125e                	slli	tp,tp,0x37
    5288:	02c1                	addi	t0,t0,16
    528a:	0000                	unimp
    528c:	0d00                	addi	s0,sp,656
    528e:	00000243          	fmadd.s	ft4,ft0,ft0,ft0,rne
    5292:	5f05                	li	t5,-31
    5294:	5d06                	lw	s10,96(sp)
    5296:	0000                	unimp
    5298:	0400                	addi	s0,sp,512
    529a:	070d                	addi	a4,a4,3
    529c:	0001                	nop
    529e:	0500                	addi	s0,sp,640
    52a0:	0961                	addi	s2,s2,24
    52a2:	000002c7          	fmsub.s	ft5,ft0,ft0,ft0,rne
    52a6:	0d08                	addi	a0,sp,656
    52a8:	0029                	c.nop	10
    52aa:	0000                	unimp
    52ac:	6205                	lui	tp,0x1
    52ae:	291e                	fld	fs2,448(sp)
    52b0:	0002                	c.slli64	zero
    52b2:	8800                	0x8800
    52b4:	0500                	addi	s0,sp,640
    52b6:	7e04                	flw	fs1,56(a2)
    52b8:	0002                	c.slli64	zero
    52ba:	0a00                	addi	s0,sp,272
    52bc:	000002d7          	0x2d7
    52c0:	000002d7          	0x2d7
    52c4:	0000640b          	0x640b
    52c8:	1f00                	addi	s0,sp,944
    52ca:	0500                	addi	s0,sp,640
    52cc:	dd04                	sw	s1,56(a0)
    52ce:	0002                	c.slli64	zero
    52d0:	1300                	addi	s0,sp,416
    52d2:	0006820f          	0x6820f
    52d6:	0800                	addi	s0,sp,16
    52d8:	7505                	lui	a0,0xfffe1
    52da:	0608                	addi	a0,sp,768
    52dc:	0d000003          	lb	zero,208(zero) # d0 <main+0x54>
    52e0:	0388                	addi	a0,sp,448
    52e2:	0000                	unimp
    52e4:	7605                	lui	a2,0xfffe1
    52e6:	0611                	addi	a2,a2,4
    52e8:	00000003          	lb	zero,0(zero) # 0 <_start>
    52ec:	0d0d                	addi	s10,s10,3
    52ee:	05000007          	0x5000007
    52f2:	005d0677          	0x5d0677
    52f6:	0000                	unimp
    52f8:	0004                	0x4
    52fa:	0405                	addi	s0,s0,1
    52fc:	002c                	addi	a1,sp,8
    52fe:	0000                	unimp
    5300:	0001bc0f          	0x1bc0f
    5304:	6800                	flw	fs0,16(s0)
    5306:	b505                	j	5126 <_printf_float+0x1e>
    5308:	4f08                	lw	a0,24(a4)
    530a:	0004                	0x4
    530c:	1000                	addi	s0,sp,32
    530e:	705f 0500 12b6      	0x12b60500705f
    5314:	0306                	slli	t1,t1,0x1
    5316:	0000                	unimp
    5318:	1000                	addi	s0,sp,32
    531a:	725f 0500 07b7      	0x7b70500725f
    5320:	005d                	c.nop	23
    5322:	0000                	unimp
    5324:	1004                	addi	s1,sp,32
    5326:	775f 0500 07b8      	0x7b80500775f
    532c:	005d                	c.nop	23
    532e:	0000                	unimp
    5330:	0d08                	addi	a0,sp,656
    5332:	007f                	0x7f
    5334:	0000                	unimp
    5336:	b905                	j	4f66 <__cvt+0xc2>
    5338:	3309                	jal	503a <__exponent+0x32>
    533a:	0000                	unimp
    533c:	0c00                	addi	s0,sp,528
    533e:	bc0d                	j	4d70 <__clzsi2+0x3c>
    5340:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    5344:	09ba                	slli	s3,s3,0xe
    5346:	00000033          	add	zero,zero,zero
    534a:	100e                	c.slli	zero,0x23
    534c:	625f 0066 bb05      	0xbb050066625f
    5352:	de11                	beqz	a2,526e <_printf_float+0x166>
    5354:	0002                	c.slli64	zero
    5356:	1000                	addi	s0,sp,32
    5358:	760d                	lui	a2,0xfffe3
    535a:	0000                	unimp
    535c:	0500                	addi	s0,sp,640
    535e:	07bc                	addi	a5,sp,968
    5360:	005d                	c.nop	23
    5362:	0000                	unimp
    5364:	0d18                	addi	a4,sp,656
    5366:	0112                	slli	sp,sp,0x4
    5368:	0000                	unimp
    536a:	c305                	beqz	a4,538a <_printf_float+0x282>
    536c:	280a                	fld	fa6,128(sp)
    536e:	0001                	nop
    5370:	1c00                	addi	s0,sp,560
    5372:	c00d                	beqz	s0,5394 <_printf_float+0x28c>
    5374:	0000                	unimp
    5376:	0500                	addi	s0,sp,640
    5378:	1dc5                	addi	s11,s11,-15
    537a:	000005d3          	fadd.s	fa1,ft0,ft0,rne
    537e:	0d20                	addi	s0,sp,664
    5380:	04a4                	addi	s1,sp,584
    5382:	0000                	unimp
    5384:	c705                	beqz	a4,53ac <_printf_float+0x2a4>
    5386:	fd1d                	bnez	a0,52c4 <_printf_float+0x1bc>
    5388:	0005                	c.nop	1
    538a:	2400                	fld	fs0,8(s0)
    538c:	ac0d                	j	55be <_printf_float+0x4b6>
    538e:	05000007          	0x5000007
    5392:	0dca                	slli	s11,s11,0x12
    5394:	0621                	addi	a2,a2,8
    5396:	0000                	unimp
    5398:	0d28                	addi	a0,sp,664
    539a:	0315                	addi	t1,t1,5
    539c:	0000                	unimp
    539e:	cb05                	beqz	a4,53ce <_printf_float+0x2c6>
    53a0:	3b09                	jal	50b2 <__exponent+0xaa>
    53a2:	0006                	c.slli	zero,0x1
    53a4:	2c00                	fld	fs0,24(s0)
    53a6:	5f10                	lw	a2,56(a4)
    53a8:	6275                	lui	tp,0x1d
    53aa:	0500                	addi	s0,sp,640
    53ac:	11ce                	slli	gp,gp,0x33
    53ae:	02de                	slli	t0,t0,0x17
    53b0:	0000                	unimp
    53b2:	1030                	addi	a2,sp,40
    53b4:	755f 0070 cf05      	0xcf050070755f
    53ba:	0612                	slli	a2,a2,0x4
    53bc:	38000003          	lb	zero,896(zero) # 380 <main+0x304>
    53c0:	5f10                	lw	a2,56(a4)
    53c2:	7275                	lui	tp,0xffffd
    53c4:	0500                	addi	s0,sp,640
    53c6:	07d0                	addi	a2,sp,964
    53c8:	005d                	c.nop	23
    53ca:	0000                	unimp
    53cc:	0d3c                	addi	a5,sp,664
    53ce:	07dc                	addi	a5,sp,964
    53d0:	0000                	unimp
    53d2:	d305                	beqz	a4,52f2 <_printf_float+0x1ea>
    53d4:	4111                	li	sp,4
    53d6:	0006                	c.slli	zero,0x1
    53d8:	4000                	lw	s0,0(s0)
    53da:	380d                	jal	4c0c <__floatunsidf+0x64>
    53dc:	05000007          	0x5000007
    53e0:	11d4                	addi	a3,sp,228
    53e2:	0651                	addi	a2,a2,20
    53e4:	0000                	unimp
    53e6:	6c5f1043          	0x6c5f1043
    53ea:	0062                	c.slli	zero,0x18
    53ec:	d705                	beqz	a4,5314 <_printf_float+0x20c>
    53ee:	de11                	beqz	a2,530a <_printf_float+0x202>
    53f0:	0002                	c.slli64	zero
    53f2:	4400                	lw	s0,8(s0)
    53f4:	b60d                	j	4f16 <__cvt+0x72>
    53f6:	0005                	c.nop	1
    53f8:	0500                	addi	s0,sp,640
    53fa:	07da                	slli	a5,a5,0x16
    53fc:	005d                	c.nop	23
    53fe:	0000                	unimp
    5400:	0d4c                	addi	a1,sp,660
    5402:	01fd                	addi	gp,gp,31
    5404:	0000                	unimp
    5406:	db05                	beqz	a4,5336 <_printf_float+0x22e>
    5408:	890a                	mv	s2,sp
    540a:	0000                	unimp
    540c:	5000                	lw	s0,32(s0)
    540e:	700d                	c.lui	zero,0xfffe3
    5410:	0001                	nop
    5412:	0500                	addi	s0,sp,640
    5414:	12de                	slli	t0,t0,0x37
    5416:	046d                	addi	s0,s0,27
    5418:	0000                	unimp
    541a:	0d54                	addi	a3,sp,660
    541c:	0602                	c.slli64	a2
    541e:	0000                	unimp
    5420:	e205                	bnez	a2,5440 <_printf_float+0x338>
    5422:	1c0c                	addi	a1,sp,560
    5424:	0001                	nop
    5426:	5800                	lw	s0,48(s0)
    5428:	b70d                	j	534a <_printf_float+0x242>
    542a:	0000                	unimp
    542c:	0500                	addi	s0,sp,640
    542e:	0ee4                	addi	s1,sp,860
    5430:	0110                	addi	a2,sp,128
    5432:	0000                	unimp
    5434:	0d5c                	addi	a5,sp,660
    5436:	0778                	addi	a4,sp,908
    5438:	0000                	unimp
    543a:	e505                	bnez	a0,5462 <_printf_float+0x35a>
    543c:	5d09                	li	s10,-30
    543e:	0000                	unimp
    5440:	6400                	flw	fs0,8(s0)
    5442:	1400                	addi	s0,sp,544
    5444:	00a1                	addi	ra,ra,8
    5446:	0000                	unimp
    5448:	046d                	addi	s0,s0,27
    544a:	0000                	unimp
    544c:	6d15                	lui	s10,0x5
    544e:	0004                	0x4
    5450:	1500                	addi	s0,sp,672
    5452:	0128                	addi	a0,sp,136
    5454:	0000                	unimp
    5456:	c115                	beqz	a0,547a <_printf_float+0x372>
    5458:	0005                	c.nop	1
    545a:	1500                	addi	s0,sp,672
    545c:	005d                	c.nop	23
    545e:	0000                	unimp
    5460:	0500                	addi	s0,sp,640
    5462:	7804                	flw	fs1,48(s0)
    5464:	0004                	0x4
    5466:	1600                	addi	s0,sp,800
    5468:	046d                	addi	s0,s0,27
    546a:	0000                	unimp
    546c:	0006e317          	auipc	t1,0x6e
    5470:	2800                	fld	fs0,16(s0)
    5472:	0504                	addi	s1,sp,640
    5474:	0239                	addi	tp,tp,14
    5476:	c108                	sw	a0,0(a0)
    5478:	0005                	c.nop	1
    547a:	1800                	addi	s0,sp,48
    547c:	0480                	addi	s0,sp,576
    547e:	0000                	unimp
    5480:	3b05                	jal	51b0 <_printf_float+0xa8>
    5482:	0702                	c.slli64	a4
    5484:	005d                	c.nop	23
    5486:	0000                	unimp
    5488:	1800                	addi	s0,sp,48
    548a:	0349                	addi	t1,t1,18
    548c:	0000                	unimp
    548e:	4005                	c.li	zero,1
    5490:	0b02                	c.slli64	s6
    5492:	06ad                	addi	a3,a3,11
    5494:	0000                	unimp
    5496:	1804                	addi	s1,sp,48
    5498:	00e6                	slli	ra,ra,0x19
    549a:	0000                	unimp
    549c:	4005                	c.li	zero,1
    549e:	1402                	slli	s0,s0,0x20
    54a0:	06ad                	addi	a3,a3,11
    54a2:	0000                	unimp
    54a4:	1808                	addi	a0,sp,48
    54a6:	000007cb          	fnmsub.s	fa5,ft0,ft0,ft0,rne
    54aa:	4005                	c.li	zero,1
    54ac:	1e02                	slli	t3,t3,0x20
    54ae:	06ad                	addi	a3,a3,11
    54b0:	0000                	unimp
    54b2:	180c                	addi	a1,sp,48
    54b4:	023e                	slli	tp,tp,0xf
    54b6:	0000                	unimp
    54b8:	4205                	li	tp,1
    54ba:	0802                	c.slli64	a6
    54bc:	005d                	c.nop	23
    54be:	0000                	unimp
    54c0:	1810                	addi	a2,sp,48
    54c2:	0205                	addi	tp,tp,1
    54c4:	0000                	unimp
    54c6:	4305                	li	t1,1
    54c8:	0802                	c.slli64	a6
    54ca:	08ad                	addi	a7,a7,11
    54cc:	0000                	unimp
    54ce:	1814                	addi	a3,sp,48
    54d0:	075f 0000 4605      	0x46050000075f
    54d6:	0702                	c.slli64	a4
    54d8:	005d                	c.nop	23
    54da:	0000                	unimp
    54dc:	1830                	addi	a2,sp,56
    54de:	06d2                	slli	a3,a3,0x14
    54e0:	0000                	unimp
    54e2:	4705                	li	a4,1
    54e4:	1602                	slli	a2,a2,0x20
    54e6:	08c2                	slli	a7,a7,0x10
    54e8:	0000                	unimp
    54ea:	1834                	addi	a3,sp,56
    54ec:	0322                	slli	t1,t1,0x8
    54ee:	0000                	unimp
    54f0:	4905                	li	s2,1
    54f2:	0702                	c.slli64	a4
    54f4:	005d                	c.nop	23
    54f6:	0000                	unimp
    54f8:	1838                	addi	a4,sp,56
    54fa:	03d4                	addi	a3,sp,452
    54fc:	0000                	unimp
    54fe:	4b05                	li	s6,1
    5500:	0a02                	c.slli64	s4
    5502:	000008d3          	fadd.s	fa7,ft0,ft0,rne
    5506:	183c                	addi	a5,sp,56
    5508:	014c                	addi	a1,sp,132
    550a:	0000                	unimp
    550c:	4e05                	li	t3,1
    550e:	1302                	slli	t1,t1,0x20
    5510:	0190                	addi	a2,sp,192
    5512:	0000                	unimp
    5514:	1840                	addi	s0,sp,52
    5516:	018e                	slli	gp,gp,0x3
    5518:	0000                	unimp
    551a:	4f05                	li	t5,1
    551c:	0702                	c.slli64	a4
    551e:	005d                	c.nop	23
    5520:	0000                	unimp
    5522:	1844                	addi	s1,sp,52
    5524:	0272                	slli	tp,tp,0x1c
    5526:	0000                	unimp
    5528:	5005                	c.li	zero,-31
    552a:	1302                	slli	t1,t1,0x20
    552c:	0190                	addi	a2,sp,192
    552e:	0000                	unimp
    5530:	1848                	addi	a0,sp,52
    5532:	038e                	slli	t2,t2,0x3
    5534:	0000                	unimp
    5536:	5105                	li	sp,-31
    5538:	1402                	slli	s0,s0,0x20
    553a:	08d9                	addi	a7,a7,22
    553c:	0000                	unimp
    553e:	184c                	addi	a1,sp,52
    5540:	058c                	addi	a1,sp,704
    5542:	0000                	unimp
    5544:	5405                	li	s0,-31
    5546:	0702                	c.slli64	a4
    5548:	005d                	c.nop	23
    554a:	0000                	unimp
    554c:	1850                	addi	a2,sp,52
    554e:	0608                	addi	a0,sp,768
    5550:	0000                	unimp
    5552:	5505                	li	a0,-31
    5554:	0902                	c.slli64	s2
    5556:	05c1                	addi	a1,a1,16
    5558:	0000                	unimp
    555a:	1854                	addi	a3,sp,52
    555c:	063a                	slli	a2,a2,0xe
    555e:	0000                	unimp
    5560:	7805                	lui	a6,0xfffe1
    5562:	0702                	c.slli64	a4
    5564:	0888                	addi	a0,sp,80
    5566:	0000                	unimp
    5568:	1958                	addi	a4,sp,180
    556a:	000004bb          	0x4bb
    556e:	7c05                	lui	s8,0xfffe1
    5570:	1302                	slli	t1,t1,0x20
    5572:	02c1                	addi	t0,t0,16
    5574:	0000                	unimp
    5576:	0148                	addi	a0,sp,132
    5578:	bd19                	j	538e <_printf_float+0x286>
    557a:	0002                	c.slli64	zero
    557c:	0500                	addi	s0,sp,640
    557e:	027d                	addi	tp,tp,31
    5580:	7e12                	flw	ft8,36(sp)
    5582:	0002                	c.slli64	zero
    5584:	4c00                	lw	s0,24(s0)
    5586:	1901                	addi	s2,s2,-32
    5588:	02a4                	addi	s1,sp,328
    558a:	0000                	unimp
    558c:	8105                	srli	a0,a0,0x1
    558e:	0c02                	c.slli64	s8
    5590:	08ea                	slli	a7,a7,0x1a
    5592:	0000                	unimp
    5594:	02dc                	addi	a5,sp,324
    5596:	af19                	j	5cac <_printf_i+0x244>
    5598:	0006                	c.slli	zero,0x1
    559a:	0500                	addi	s0,sp,640
    559c:	0286                	slli	t0,t0,0x1
    559e:	6e10                	flw	fa2,24(a2)
    55a0:	0006                	c.slli	zero,0x1
    55a2:	e000                	fsw	fs0,0(s0)
    55a4:	1902                	slli	s2,s2,0x20
    55a6:	00000507          	0x507
    55aa:	8805                	andi	s0,s0,1
    55ac:	0a02                	c.slli64	s4
    55ae:	08f6                	slli	a7,a7,0x1d
    55b0:	0000                	unimp
    55b2:	02ec                	addi	a1,sp,332
    55b4:	0500                	addi	s0,sp,640
    55b6:	c704                	sw	s1,8(a4)
    55b8:	0005                	c.nop	1
    55ba:	0200                	addi	s0,sp,256
    55bc:	0801                	addi	a6,a6,0
    55be:	0619                	addi	a2,a2,6
    55c0:	0000                	unimp
    55c2:	c716                	sw	t0,140(sp)
    55c4:	0005                	c.nop	1
    55c6:	0500                	addi	s0,sp,640
    55c8:	4f04                	lw	s1,24(a4)
    55ca:	0004                	0x4
    55cc:	1400                	addi	s0,sp,544
    55ce:	00a1                	addi	ra,ra,8
    55d0:	0000                	unimp
    55d2:	000005f7          	0x5f7
    55d6:	6d15                	lui	s10,0x5
    55d8:	0004                	0x4
    55da:	1500                	addi	s0,sp,672
    55dc:	0128                	addi	a0,sp,136
    55de:	0000                	unimp
    55e0:	f715                	bnez	a4,550c <_printf_float+0x404>
    55e2:	0005                	c.nop	1
    55e4:	1500                	addi	s0,sp,672
    55e6:	005d                	c.nop	23
    55e8:	0000                	unimp
    55ea:	0500                	addi	s0,sp,640
    55ec:	ce04                	sw	s1,24(a2)
    55ee:	0005                	c.nop	1
    55f0:	0500                	addi	s0,sp,640
    55f2:	d904                	sw	s1,48(a0)
    55f4:	0005                	c.nop	1
    55f6:	1400                	addi	s0,sp,544
    55f8:	0095                	addi	ra,ra,5
    55fa:	0000                	unimp
    55fc:	0621                	addi	a2,a2,8
    55fe:	0000                	unimp
    5600:	6d15                	lui	s10,0x5
    5602:	0004                	0x4
    5604:	1500                	addi	s0,sp,672
    5606:	0128                	addi	a0,sp,136
    5608:	0000                	unimp
    560a:	9515                	srai	a0,a0,0x25
    560c:	0000                	unimp
    560e:	1500                	addi	s0,sp,672
    5610:	005d                	c.nop	23
    5612:	0000                	unimp
    5614:	0500                	addi	s0,sp,640
    5616:	0304                	addi	s1,sp,384
    5618:	0006                	c.slli	zero,0x1
    561a:	1400                	addi	s0,sp,544
    561c:	005d                	c.nop	23
    561e:	0000                	unimp
    5620:	0000063b          	0x63b
    5624:	6d15                	lui	s10,0x5
    5626:	0004                	0x4
    5628:	1500                	addi	s0,sp,672
    562a:	0128                	addi	a0,sp,136
    562c:	0000                	unimp
    562e:	0500                	addi	s0,sp,640
    5630:	2704                	fld	fs1,8(a4)
    5632:	0006                	c.slli	zero,0x1
    5634:	0a00                	addi	s0,sp,272
    5636:	002c                	addi	a1,sp,8
    5638:	0000                	unimp
    563a:	0651                	addi	a2,a2,20
    563c:	0000                	unimp
    563e:	0000640b          	0x640b
    5642:	0200                	addi	s0,sp,256
    5644:	0a00                	addi	s0,sp,272
    5646:	002c                	addi	a1,sp,8
    5648:	0000                	unimp
    564a:	0661                	addi	a2,a2,24
    564c:	0000                	unimp
    564e:	0000640b          	0x640b
    5652:	0000                	unimp
    5654:	0700                	addi	s0,sp,896
    5656:	01f6                	slli	gp,gp,0x1d
    5658:	0000                	unimp
    565a:	1f05                	addi	t5,t5,-31
    565c:	1a01                	addi	s4,s4,-32
    565e:	030c                	addi	a1,sp,384
    5660:	0000                	unimp
    5662:	941a                	add	s0,s0,t1
    5664:	0006                	c.slli	zero,0x1
    5666:	0c00                	addi	s0,sp,528
    5668:	2305                	jal	5b88 <_printf_i+0x120>
    566a:	0801                	addi	a6,a6,0
    566c:	000006a7          	0x6a7
    5670:	9b18                	0x9b18
    5672:	05000007          	0x5000007
    5676:	0125                	addi	sp,sp,9
    5678:	a711                	j	5d7c <_printf_i+0x314>
    567a:	0006                	c.slli	zero,0x1
    567c:	0000                	unimp
    567e:	c418                	sw	a4,8(s0)
    5680:	0005                	c.nop	1
    5682:	0500                	addi	s0,sp,640
    5684:	0126                	slli	sp,sp,0x9
    5686:	00005d07          	0x5d07
    568a:	0400                	addi	s0,sp,512
    568c:	0018                	0x18
    568e:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    5692:	ad0b0127          	0xad0b0127
    5696:	0006                	c.slli	zero,0x1
    5698:	0800                	addi	s0,sp,16
    569a:	0500                	addi	s0,sp,640
    569c:	6e04                	flw	fs1,24(a2)
    569e:	0006                	c.slli	zero,0x1
    56a0:	0500                	addi	s0,sp,640
    56a2:	6104                	flw	fs1,0(a0)
    56a4:	0006                	c.slli	zero,0x1
    56a6:	1a00                	addi	s0,sp,304
    56a8:	0186                	slli	gp,gp,0x1
    56aa:	0000                	unimp
    56ac:	050e                	slli	a0,a0,0x3
    56ae:	ec08013f 18000006 	0x18000006ec08013f
    56b6:	0790                	addi	a2,sp,960
    56b8:	0000                	unimp
    56ba:	4005                	c.li	zero,1
    56bc:	1201                	addi	tp,tp,-32
    56be:	06ec                	addi	a1,sp,844
    56c0:	0000                	unimp
    56c2:	1800                	addi	s0,sp,48
    56c4:	0398                	addi	a4,sp,448
    56c6:	0000                	unimp
    56c8:	4105                	li	sp,1
    56ca:	1201                	addi	tp,tp,-32
    56cc:	06ec                	addi	a1,sp,844
    56ce:	0000                	unimp
    56d0:	1806                	slli	a6,a6,0x21
    56d2:	065e                	slli	a2,a2,0x17
    56d4:	0000                	unimp
    56d6:	4205                	li	tp,1
    56d8:	1201                	addi	tp,tp,-32
    56da:	003a                	c.slli	zero,0xe
    56dc:	0000                	unimp
    56de:	000c                	0xc
    56e0:	3a0a                	fld	fs4,160(sp)
    56e2:	0000                	unimp
    56e4:	fc00                	fsw	fs0,56(s0)
    56e6:	0006                	c.slli	zero,0x1
    56e8:	0b00                	addi	s0,sp,400
    56ea:	0064                	addi	s1,sp,12
    56ec:	0000                	unimp
    56ee:	0002                	c.slli64	zero
    56f0:	5905d01b          	0x5905d01b
    56f4:	0702                	c.slli64	a4
    56f6:	0811                	addi	a6,a6,4
    56f8:	0000                	unimp
    56fa:	3e18                	fld	fa4,56(a2)
    56fc:	05000007          	0x5000007
    5700:	6418025b          	0x6418025b
    5704:	0000                	unimp
    5706:	0000                	unimp
    5708:	b718                	fsd	fa4,40(a4)
    570a:	0006                	c.slli	zero,0x1
    570c:	0500                	addi	s0,sp,640
    570e:	025c                	addi	a5,sp,260
    5710:	c112                	sw	tp,128(sp)
    5712:	0005                	c.nop	1
    5714:	0400                	addi	s0,sp,512
    5716:	af18                	fsd	fa4,24(a4)
    5718:	0001                	nop
    571a:	0500                	addi	s0,sp,640
    571c:	025d                	addi	tp,tp,23
    571e:	1110                	addi	a2,sp,160
    5720:	0008                	0x8
    5722:	0800                	addi	s0,sp,16
    5724:	6018                	flw	fa4,0(s0)
    5726:	0005                	c.nop	1
    5728:	0500                	addi	s0,sp,640
    572a:	025e                	slli	tp,tp,0x17
    572c:	0001a617          	auipc	a2,0x1a
    5730:	2400                	fld	fs0,8(s0)
    5732:	5018                	lw	a4,32(s0)
    5734:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    5738:	025f 5d0f 0000      	0x5d0f025f
    573e:	4800                	lw	s0,16(s0)
    5740:	9618                	0x9618
    5742:	05000007          	0x5000007
    5746:	0260                	addi	s0,sp,268
    5748:	562c                	lw	a1,104(a2)
    574a:	0000                	unimp
    574c:	5000                	lw	s0,32(s0)
    574e:	5e18                	lw	a4,56(a2)
    5750:	0000                	unimp
    5752:	0500                	addi	s0,sp,640
    5754:	0261                	addi	tp,tp,24
    5756:	b31a                	fsd	ft6,416(sp)
    5758:	0006                	c.slli	zero,0x1
    575a:	5800                	lw	s0,48(s0)
    575c:	8d18                	0x8d18
    575e:	0002                	c.slli64	zero
    5760:	0500                	addi	s0,sp,640
    5762:	0262                	slli	tp,tp,0x18
    5764:	1016                	c.slli	zero,0x25
    5766:	0001                	nop
    5768:	6800                	flw	fs0,16(s0)
    576a:	c418                	sw	a4,8(s0)
    576c:	0006                	c.slli	zero,0x1
    576e:	0500                	addi	s0,sp,640
    5770:	10160263          	beq	a2,ra,5874 <_printf_float+0x76c>
    5774:	0001                	nop
    5776:	7000                	flw	fs0,32(s0)
    5778:	4118                	lw	a4,0(a0)
    577a:	0000                	unimp
    577c:	0500                	addi	s0,sp,640
    577e:	0264                	addi	s1,sp,268
    5780:	1016                	c.slli	zero,0x25
    5782:	0001                	nop
    5784:	7800                	flw	fs0,48(s0)
    5786:	9c18                	0x9c18
    5788:	0005                	c.nop	1
    578a:	0500                	addi	s0,sp,640
    578c:	0265                	addi	tp,tp,25
    578e:	2110                	fld	fa2,0(a0)
    5790:	0008                	0x8
    5792:	8000                	0x8000
    5794:	6318                	flw	fa4,0(a4)
    5796:	0000                	unimp
    5798:	0500                	addi	s0,sp,640
    579a:	0266                	slli	tp,tp,0x19
    579c:	3110                	fld	fa2,32(a0)
    579e:	0008                	0x8
    57a0:	8800                	0x8800
    57a2:	3f18                	fld	fa4,56(a4)
    57a4:	0006                	c.slli	zero,0x1
    57a6:	0500                	addi	s0,sp,640
    57a8:	5d0f0267          	jalr	tp,1488(t5) # 75d0 <_dtoa_r+0xfe4>
    57ac:	0000                	unimp
    57ae:	a000                	fsd	fs0,0(s0)
    57b0:	c618                	sw	a4,8(a2)
    57b2:	0000                	unimp
    57b4:	0500                	addi	s0,sp,640
    57b6:	0268                	addi	a0,sp,268
    57b8:	1016                	c.slli	zero,0x25
    57ba:	0001                	nop
    57bc:	a400                	fsd	fs0,8(s0)
    57be:	ae18                	fsd	fa4,24(a2)
    57c0:	0002                	c.slli64	zero
    57c2:	0500                	addi	s0,sp,640
    57c4:	0269                	addi	tp,tp,26
    57c6:	1016                	c.slli	zero,0x25
    57c8:	0001                	nop
    57ca:	ac00                	fsd	fs0,24(s0)
    57cc:	4818                	lw	a4,16(s0)
    57ce:	0002                	c.slli64	zero
    57d0:	0500                	addi	s0,sp,640
    57d2:	026a                	slli	tp,tp,0x1a
    57d4:	1016                	c.slli	zero,0x25
    57d6:	0001                	nop
    57d8:	b400                	fsd	fs0,40(s0)
    57da:	ad18                	fsd	fa4,24(a0)
    57dc:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    57e0:	1016026b          	0x1016026b
    57e4:	0001                	nop
    57e6:	bc00                	fsd	fs0,56(s0)
    57e8:	7c18                	flw	fa4,56(s0)
    57ea:	0002                	c.slli64	zero
    57ec:	0500                	addi	s0,sp,640
    57ee:	026c                	addi	a1,sp,268
    57f0:	1016                	c.slli	zero,0x25
    57f2:	0001                	nop
    57f4:	c400                	sw	s0,8(s0)
    57f6:	7e18                	flw	fa4,56(a2)
    57f8:	0004                	0x4
    57fa:	0500                	addi	s0,sp,640
    57fc:	026d                	addi	tp,tp,27
    57fe:	5d08                	lw	a0,56(a0)
    5800:	0000                	unimp
    5802:	cc00                	sw	s0,24(s0)
    5804:	0a00                	addi	s0,sp,272
    5806:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    580a:	0821                	addi	a6,a6,8
    580c:	0000                	unimp
    580e:	0000640b          	0x640b
    5812:	1900                	addi	s0,sp,176
    5814:	0a00                	addi	s0,sp,272
    5816:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    581a:	0831                	addi	a6,a6,12
    581c:	0000                	unimp
    581e:	0000640b          	0x640b
    5822:	0700                	addi	s0,sp,896
    5824:	0a00                	addi	s0,sp,272
    5826:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    582a:	0841                	addi	a6,a6,16
    582c:	0000                	unimp
    582e:	0000640b          	0x640b
    5832:	1700                	addi	s0,sp,928
    5834:	1b00                	addi	s0,sp,432
    5836:	05f0                	addi	a2,sp,716
    5838:	0272                	slli	tp,tp,0x1c
    583a:	00086807          	0x86807
    583e:	1800                	addi	s0,sp,48
    5840:	017f                	0x17f
    5842:	0000                	unimp
    5844:	7505                	lui	a0,0xfffe1
    5846:	1b02                	slli	s6,s6,0x20
    5848:	0868                	addi	a0,sp,28
    584a:	0000                	unimp
    584c:	1800                	addi	s0,sp,48
    584e:	000007d3          	fadd.s	fa5,ft0,ft0,rne
    5852:	7605                	lui	a2,0xfffe1
    5854:	1802                	slli	a6,a6,0x20
    5856:	0878                	addi	a4,sp,28
    5858:	0000                	unimp
    585a:	0078                	addi	a4,sp,12
    585c:	060a                	slli	a2,a2,0x2
    585e:	78000003          	lb	zero,1920(zero) # 780 <main+0x704>
    5862:	0008                	0x8
    5864:	0b00                	addi	s0,sp,400
    5866:	0064                	addi	s1,sp,12
    5868:	0000                	unimp
    586a:	001d                	c.nop	7
    586c:	640a                	flw	fs0,128(sp)
    586e:	0000                	unimp
    5870:	8800                	0x8800
    5872:	0008                	0x8
    5874:	0b00                	addi	s0,sp,400
    5876:	0064                	addi	s1,sp,12
    5878:	0000                	unimp
    587a:	001d                	c.nop	7
    587c:	f01c                	fsw	fa5,32(s0)
    587e:	5705                	li	a4,-31
    5880:	0302                	c.slli64	t1
    5882:	08ad                	addi	a7,a7,11
    5884:	0000                	unimp
    5886:	e31d                	bnez	a4,58ac <_printf_float+0x7a4>
    5888:	0006                	c.slli	zero,0x1
    588a:	0500                	addi	s0,sp,640
    588c:	026e                	slli	tp,tp,0x1b
    588e:	0006fc0b          	0x6fc0b
    5892:	1d00                	addi	s0,sp,688
    5894:	0000056f          	jal	a0,5894 <_printf_float+0x78c>
    5898:	7705                	lui	a4,0xfffe1
    589a:	0b02                	c.slli64	s6
    589c:	0841                	addi	a6,a6,16
    589e:	0000                	unimp
    58a0:	0a00                	addi	s0,sp,272
    58a2:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    58a6:	08bd                	addi	a7,a7,15
    58a8:	0000                	unimp
    58aa:	0000640b          	0x640b
    58ae:	1800                	addi	s0,sp,48
    58b0:	0600                	addi	s0,sp,768
    58b2:	07a1                	addi	a5,a5,8
    58b4:	0000                	unimp
    58b6:	0405                	addi	s0,s0,1
    58b8:	08bd                	addi	a7,a7,15
    58ba:	0000                	unimp
    58bc:	d31e                	sw	t2,164(sp)
    58be:	0008                	0x8
    58c0:	1500                	addi	s0,sp,672
    58c2:	046d                	addi	s0,s0,27
    58c4:	0000                	unimp
    58c6:	0500                	addi	s0,sp,640
    58c8:	c804                	sw	s1,16(s0)
    58ca:	0008                	0x8
    58cc:	0500                	addi	s0,sp,640
    58ce:	9004                	0x9004
    58d0:	0001                	nop
    58d2:	1e00                	addi	s0,sp,816
    58d4:	08ea                	slli	a7,a7,0x1a
    58d6:	0000                	unimp
    58d8:	5d15                	li	s10,-27
    58da:	0000                	unimp
    58dc:	0000                	unimp
    58de:	0405                	addi	s0,s0,1
    58e0:	08f0                	addi	a2,sp,92
    58e2:	0000                	unimp
    58e4:	0405                	addi	s0,s0,1
    58e6:	08df 0000 610a      	0x610a000008df
    58ec:	0006                	c.slli	zero,0x1
    58ee:	0600                	addi	s0,sp,768
    58f0:	0009                	c.nop	2
    58f2:	0b00                	addi	s0,sp,400
    58f4:	0064                	addi	s1,sp,12
    58f6:	0000                	unimp
    58f8:	0002                	c.slli64	zero
    58fa:	3d1f 0005 0500      	0x50000053d1f
    5900:	6d170307          	0x6d170307
    5904:	0004                	0x4
    5906:	1f00                	addi	s0,sp,944
    5908:	0536                	slli	a0,a0,0xd
    590a:	0000                	unimp
    590c:	0805                	addi	a6,a6,1
    590e:	04731d03          	lh	s10,71(t1) # 734b3 <_data_lma+0x6833b>
    5912:	0000                	unimp
    5914:	2d20                	fld	fs0,88(a0)
    5916:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    591a:	169a                	slli	a3,a3,0x26
    591c:	0041                	c.nop	16
    591e:	0000                	unimp
    5920:	3720                	fld	fs0,104(a4)
    5922:	0000                	unimp
    5924:	0600                	addi	s0,sp,768
    5926:	005d159b          	0x5d159b
    592a:	0000                	unimp
    592c:	c10a                	sw	sp,128(sp)
    592e:	0005                	c.nop	1
    5930:	4800                	lw	s0,16(s0)
    5932:	0009                	c.nop	2
    5934:	0b00                	addi	s0,sp,400
    5936:	0064                	addi	s1,sp,12
    5938:	0000                	unimp
    593a:	0001                	nop
    593c:	6220                	flw	fs0,64(a2)
    593e:	0002                	c.slli64	zero
    5940:	0600                	addi	s0,sp,768
    5942:	179e                	slli	a5,a5,0x27
    5944:	0938                	addi	a4,sp,152
    5946:	0000                	unimp
    5948:	8d04                	0x8d04
    594a:	0000                	unimp
    594c:	0700                	addi	s0,sp,896
    594e:	185e                	slli	a6,a6,0x37
    5950:	00000033          	add	zero,zero,zero
    5954:	a804                	fsd	fs1,16(s0)
    5956:	0006                	c.slli	zero,0x1
    5958:	0700                	addi	s0,sp,896
    595a:	185f 003a 0000      	0x3a185f
    5960:	0802                	c.slli64	a6
    5962:	9504                	0x9504
    5964:	0004                	0x4
    5966:	0400                	addi	s0,sp,512
    5968:	02c6                	slli	t0,t0,0x11
    596a:	0000                	unimp
    596c:	2c186207          	0x2c186207
    5970:	0000                	unimp
    5972:	0400                	addi	s0,sp,512
    5974:	00000017          	auipc	zero,0x0
    5978:	64186307          	0x64186307
    597c:	0000                	unimp
    597e:	2000                	fld	fs0,0(s0)
    5980:	00000663          	beqz	zero,598c <_printf_common+0xd4>
    5984:	7f0fba07          	fld	fs4,2032(t6)
    5988:	0009                	c.nop	2
    598a:	2100                	fld	fs0,0(a0)
    598c:	0b9a                	slli	s7,s7,0x6
    598e:	0000                	unimp
    5990:	00640407          	0x640407
    5994:	0000                	unimp
    5996:	6309                	lui	t1,0x2
    5998:	e00e                	fsw	ft3,0(sp)
    599a:	0009                	c.nop	2
    599c:	2200                	fld	fs0,0(a2)
    599e:	0b66                	slli	s6,s6,0x19
    59a0:	0000                	unimp
    59a2:	2200                	fld	fs0,0(a2)
    59a4:	0b28                	addi	a0,sp,408
    59a6:	0000                	unimp
    59a8:	2201                	jal	5aa8 <_printf_i+0x40>
    59aa:	0b92                	slli	s7,s7,0x4
    59ac:	0000                	unimp
    59ae:	2202                	fld	ft4,0(sp)
    59b0:	0b0c                	addi	a1,sp,400
    59b2:	0000                	unimp
    59b4:	0b712203          	lw	tp,183(sp)
    59b8:	0000                	unimp
    59ba:	2204                	fld	fs1,0(a2)
    59bc:	0b35                	addi	s6,s6,13
    59be:	0000                	unimp
    59c0:	2205                	jal	5ae0 <_printf_i+0x78>
    59c2:	00000bdb          	0xbdb
    59c6:	2206                	fld	ft4,64(sp)
    59c8:	0b56                	slli	s6,s6,0x15
    59ca:	0000                	unimp
    59cc:	0bc42207          	flw	ft4,188(s0) # 10bc <__stack_size+0xbc>
    59d0:	0000                	unimp
    59d2:	0008                	0x8
    59d4:	f00a                	fsw	ft2,32(sp)
    59d6:	0009                	c.nop	2
    59d8:	f000                	fsw	fs0,32(s0)
    59da:	0009                	c.nop	2
    59dc:	0b00                	addi	s0,sp,400
    59de:	0064                	addi	s1,sp,12
    59e0:	0000                	unimp
    59e2:	04050003          	lb	zero,64(a0) # fffe1040 <__freertos_irq_stack_top+0xfefd1040>
    59e6:	00000973          	0x973
    59ea:	000ba523          	sw	zero,10(s7)
    59ee:	0100                	addi	s0,sp,128
    59f0:	0f72                	slli	t5,t5,0x1c
    59f2:	09e0                	addi	s0,sp,220
    59f4:	0000                	unimp
    59f6:	0305                	addi	t1,t1,1
    59f8:	04e4                	addi	s1,sp,588
    59fa:	0100                	addi	s0,sp,128
    59fc:	000c0023          	sb	zero,0(s8) # fffe1000 <__freertos_irq_stack_top+0xfefd1000>
    5a00:	0100                	addi	s0,sp,128
    5a02:	0f74                	addi	a3,sp,924
    5a04:	09e0                	addi	s0,sp,220
    5a06:	0000                	unimp
    5a08:	0305                	addi	t1,t1,1
    5a0a:	04d4                	addi	a3,sp,580
    5a0c:	0100                	addi	s0,sp,128
    5a0e:	000b1423          	sh	zero,8(s6) # 1008 <__stack_size+0x8>
    5a12:	0100                	addi	s0,sp,128
    5a14:	0f78                	addi	a4,sp,924
    5a16:	09e0                	addi	s0,sp,220
    5a18:	0000                	unimp
    5a1a:	0305                	addi	t1,t1,1
    5a1c:	04f4                	addi	a3,sp,588
    5a1e:	0100                	addi	s0,sp,128
    5a20:	000bac23          	sw	zero,24(s7)
    5a24:	0100                	addi	s0,sp,128
    5a26:	0f7c                	addi	a5,sp,924
    5a28:	09e0                	addi	s0,sp,220
    5a2a:	0000                	unimp
    5a2c:	0305                	addi	t1,t1,1
    5a2e:	04c4                	addi	s1,sp,580
    5a30:	0100                	addi	s0,sp,128
    5a32:	4024                	lw	s1,64(s0)
    5a34:	0100000b          	0x100000b
    5a38:	01da                	slli	gp,gp,0x16
    5a3a:	00000997          	auipc	s3,0x0
    5a3e:	221c                	fld	fa5,0(a2)
    5a40:	0000                	unimp
    5a42:	0330                	addi	a2,sp,392
    5a44:	0000                	unimp
    5a46:	9c01                	0x9c01
    5a48:	0bb5                	addi	s7,s7,13
    5a4a:	0000                	unimp
    5a4c:	1b25                	addi	s6,s6,-23
    5a4e:	0100000b          	0x100000b
    5a52:	1fda                	slli	t6,t6,0x36
    5a54:	0bb5                	addi	s7,s7,13
    5a56:	0000                	unimp
    5a58:	00004023          	0x4023
    5a5c:	e926                	fsw	fs1,144(sp)
    5a5e:	0100000b          	0x100000b
    5a62:	2eda                	fld	ft9,400(sp)
    5a64:	00000bbb          	0xbbb
    5a68:	5b01                	li	s6,-32
    5a6a:	72747327          	0x72747327
    5a6e:	0100                	addi	s0,sp,128
    5a70:	15dc                	addi	a5,sp,740
    5a72:	09f0                	addi	a2,sp,220
    5a74:	0000                	unimp
    5a76:	000040b3          	xor	ra,zero,zero
    5a7a:	b828                	fsd	fa0,112(s0)
    5a7c:	0100000b          	0x100000b
    5a80:	15dd                	addi	a1,a1,-9
    5a82:	00000973          	0x973
    5a86:	4288                	lw	a0,0(a3)
    5a88:	0000                	unimp
    5a8a:	4928                	lw	a0,80(a0)
    5a8c:	0000                	unimp
    5a8e:	0100                	addi	s0,sp,128
    5a90:	15de                	slli	a1,a1,0x37
    5a92:	00000997          	auipc	s3,0x0
    5a96:	00004393          	xori	t2,zero,0
    5a9a:	c129                	beqz	a0,5adc <_printf_i+0x74>
    5a9c:	3400000b          	0x3400000b
    5aa0:	0022                	c.slli	zero,0x8
    5aa2:	1000                	addi	s0,sp,32
    5aa4:	0006                	c.slli	zero,0x1
    5aa6:	0100                	addi	s0,sp,128
    5aa8:	15ea                	slli	a1,a1,0x3a
    5aaa:	00000ad3          	fadd.s	fs5,ft0,ft0,rne
    5aae:	d22a                	sw	a0,36(sp)
    5ab0:	c700000b          	0xc700000b
    5ab4:	0044                	addi	s1,sp,4
    5ab6:	2b00                	fld	fs0,16(a4)
    5ab8:	0610                	addi	a2,sp,768
    5aba:	0000                	unimp
    5abc:	dc2c                	sw	a1,120(s0)
    5abe:	da00000b          	0xda00000b
    5ac2:	0044                	addi	s1,sp,4
    5ac4:	0000                	unimp
    5ac6:	2d00                	fld	fs0,24(a0)
    5ac8:	0bc1                	addi	s7,s7,16
    5aca:	0000                	unimp
    5acc:	2260                	fld	fs0,192(a2)
    5ace:	0000                	unimp
    5ad0:	0628                	addi	a0,sp,776
    5ad2:	0000                	unimp
    5ad4:	1401                	addi	s0,s0,-32
    5ad6:	1b01                	addi	s6,s6,-32
    5ad8:	0b01                	addi	s6,s6,0
    5ada:	0000                	unimp
    5adc:	d22a                	sw	a0,36(sp)
    5ade:	1200000b          	0x1200000b
    5ae2:	0045                	c.nop	17
    5ae4:	2b00                	fld	fs0,16(a4)
    5ae6:	0628                	addi	a0,sp,776
    5ae8:	0000                	unimp
    5aea:	dc2c                	sw	a1,120(s0)
    5aec:	3000000b          	0x3000000b
    5af0:	0045                	c.nop	17
    5af2:	0000                	unimp
    5af4:	2d00                	fld	fs0,24(a0)
    5af6:	0bc1                	addi	s7,s7,16
    5af8:	0000                	unimp
    5afa:	22c4                	fld	fs1,128(a3)
    5afc:	0000                	unimp
    5afe:	0660                	addi	s0,sp,780
    5b00:	0000                	unimp
    5b02:	2001                	jal	5b02 <_printf_i+0x9a>
    5b04:	1b01                	addi	s6,s6,-32
    5b06:	00000b2f          	0xb2f
    5b0a:	d22a                	sw	a0,36(sp)
    5b0c:	4400000b          	0x4400000b
    5b10:	0045                	c.nop	17
    5b12:	2b00                	fld	fs0,16(a4)
    5b14:	0660                	addi	s0,sp,780
    5b16:	0000                	unimp
    5b18:	dc2c                	sw	a1,120(s0)
    5b1a:	5700000b          	0x5700000b
    5b1e:	0045                	c.nop	17
    5b20:	0000                	unimp
    5b22:	2900                	fld	fs0,16(a0)
    5b24:	0bc1                	addi	s7,s7,16
    5b26:	0000                	unimp
    5b28:	236c                	fld	fa1,192(a4)
    5b2a:	0000                	unimp
    5b2c:	0688                	addi	a0,sp,832
    5b2e:	0000                	unimp
    5b30:	fe01                	bnez	a2,5a48 <_printf_common+0x190>
    5b32:	5c15                	li	s8,-27
    5b34:	2a00000b          	0x2a00000b
    5b38:	0bd2                	slli	s7,s7,0x14
    5b3a:	0000                	unimp
    5b3c:	0000456b          	0x456b
    5b40:	0006882b          	0x6882b
    5b44:	2c00                	fld	fs0,24(s0)
    5b46:	0bdc                	addi	a5,sp,468
    5b48:	0000                	unimp
    5b4a:	457e                	lw	a0,220(sp)
    5b4c:	0000                	unimp
    5b4e:	0000                	unimp
    5b50:	c12d                	beqz	a0,5bb2 <_printf_i+0x14a>
    5b52:	fc00000b          	0xfc00000b
    5b56:	a0000023          	sb	zero,-1536(zero) # fffffa00 <__freertos_irq_stack_top+0xfefefa00>
    5b5a:	0006                	c.slli	zero,0x1
    5b5c:	0100                	addi	s0,sp,128
    5b5e:	8a150133          	0x8a150133
    5b62:	2a00000b          	0x2a00000b
    5b66:	0bd2                	slli	s7,s7,0x14
    5b68:	0000                	unimp
    5b6a:	45aa                	lw	a1,136(sp)
    5b6c:	0000                	unimp
    5b6e:	0006a02b          	0x6a02b
    5b72:	2c00                	fld	fs0,24(s0)
    5b74:	0bdc                	addi	a5,sp,468
    5b76:	0000                	unimp
    5b78:	45d6                	lw	a1,84(sp)
    5b7a:	0000                	unimp
    5b7c:	0000                	unimp
    5b7e:	c12e                	sw	a1,128(sp)
    5b80:	4800000b          	0x4800000b
    5b84:	0024                	addi	s1,sp,8
    5b86:	c000                	sw	s0,0(s0)
    5b88:	0006                	c.slli	zero,0x1
    5b8a:	0100                	addi	s0,sp,128
    5b8c:	2a16013f 00000bd2 	0xbd22a16013f
    5b94:	460e                	lw	a2,192(sp)
    5b96:	0000                	unimp
    5b98:	0006c02b          	0x6c02b
    5b9c:	2c00                	fld	fs0,24(s0)
    5b9e:	0bdc                	addi	a5,sp,468
    5ba0:	0000                	unimp
    5ba2:	4621                	li	a2,8
    5ba4:	0000                	unimp
    5ba6:	0000                	unimp
    5ba8:	0500                	addi	s0,sp,640
    5baa:	f004                	fsw	fs1,32(s0)
    5bac:	0009                	c.nop	2
    5bae:	0500                	addi	s0,sp,640
    5bb0:	7f04                	flw	fs1,56(a4)
    5bb2:	0009                	c.nop	2
    5bb4:	2f00                	fld	fs0,24(a4)
    5bb6:	0b7a                	slli	s6,s6,0x1e
    5bb8:	0000                	unimp
    5bba:	c701                	beqz	a4,5bc2 <_printf_i+0x15a>
    5bbc:	7301                	lui	t1,0xfffe0
    5bbe:	0009                	c.nop	2
    5bc0:	0100                	addi	s0,sp,128
    5bc2:	0be9                	addi	s7,s7,26
    5bc4:	0000                	unimp
    5bc6:	6330                	flw	fa2,64(a4)
    5bc8:	0100                	addi	s0,sp,128
    5bca:	097312c7          	fmsub.s	ft5,ft6,fs7,ft1,rtz
    5bce:	0000                	unimp
    5bd0:	3731                	jal	5adc <_printf_i+0x74>
    5bd2:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    5bd6:	0bc9                	addi	s7,s7,18
    5bd8:	00000973          	0x973
    5bdc:	3200                	fld	fs0,32(a2)
    5bde:	0845                	addi	a6,a6,17
    5be0:	0000                	unimp
    5be2:	8c01                	sub	s0,s0,s0
    5be4:	4001                	c.li	zero,0
    5be6:	0020                	addi	s0,sp,8
    5be8:	dc00                	sw	s0,56(s0)
    5bea:	0001                	nop
    5bec:	0100                	addi	s0,sp,128
    5bee:	929c                	0x929c
    5bf0:	000c                	0xc
    5bf2:	2500                	fld	fs0,8(a0)
    5bf4:	070e                	slli	a4,a4,0x3
    5bf6:	0000                	unimp
    5bf8:	8c01                	sub	s0,s0,s0
    5bfa:	7f18                	flw	fa4,56(a4)
    5bfc:	0009                	c.nop	2
    5bfe:	3500                	fld	fs0,40(a0)
    5c00:	0046                	c.slli	zero,0x11
    5c02:	2500                	fld	fs0,8(a0)
    5c04:	0791                	addi	a5,a5,4
    5c06:	0000                	unimp
    5c08:	8c01                	sub	s0,s0,s0
    5c0a:	5425                	li	s0,-23
    5c0c:	0009                	c.nop	2
    5c0e:	7900                	flw	fs0,48(a0)
    5c10:	0046                	c.slli	zero,0x11
    5c12:	3300                	fld	fs0,32(a4)
    5c14:	0070                	addi	a2,sp,12
    5c16:	8c01                	sub	s0,s0,s0
    5c18:	f032                	fsw	fa2,32(sp)
    5c1a:	0009                	c.nop	2
    5c1c:	e900                	fsw	fs0,16(a0)
    5c1e:	0046                	c.slli	zero,0x11
    5c20:	2800                	fld	fs0,16(s0)
    5c22:	0bfa                	slli	s7,s7,0x1e
    5c24:	0000                	unimp
    5c26:	8f01                	sub	a4,a4,s0
    5c28:	7f0c                	flw	fa1,56(a4)
    5c2a:	0009                	c.nop	2
    5c2c:	3900                	fld	fs0,48(a0)
    5c2e:	28000047          	fmsub.s	ft0,ft0,ft0,ft5,rne
    5c32:	079c                	addi	a5,sp,960
    5c34:	0000                	unimp
    5c36:	8f01                	sub	a4,a4,s0
    5c38:	00097f17          	auipc	t5,0x97
    5c3c:	8500                	0x8500
    5c3e:	27000047          	fmsub.q	ft0,ft0,fa6,ft4,rne
    5c42:	0069                	c.nop	26
    5c44:	8f01                	sub	a4,a4,s0
    5c46:	7f21                	lui	t5,0xfffe8
    5c48:	0009                	c.nop	2
    5c4a:	c900                	sw	s0,16(a0)
    5c4c:	27000047          	fmsub.q	ft0,ft0,fa6,ft4,rne
    5c50:	7562                	flw	fa0,56(sp)
    5c52:	0066                	c.slli	zero,0x19
    5c54:	9001                	srli	s0,s0,0x20
    5c56:	f00c                	fsw	fa1,32(s0)
    5c58:	0009                	c.nop	2
    5c5a:	3100                	fld	fs0,32(a0)
    5c5c:	0048                	addi	a0,sp,4
    5c5e:	3400                	fld	fs0,40(s0)
    5c60:	2070                	fld	fa2,192(s0)
    5c62:	0000                	unimp
    5c64:	0dd6                	slli	s11,s11,0x15
    5c66:	0000                	unimp
    5c68:	0c82                	c.slli64	s9
    5c6a:	0000                	unimp
    5c6c:	0135                	addi	sp,sp,13
    5c6e:	055a                	slli	a0,a0,0x16
    5c70:	0004b403          	0x4b403
    5c74:	0001                	nop
    5c76:	f436                	fsw	fa3,40(sp)
    5c78:	0021                	c.nop	8
    5c7a:	e100                	fsw	fs0,0(a0)
    5c7c:	000d                	c.nop	3
    5c7e:	3500                	fld	fs0,40(a0)
    5c80:	5b01                	li	s6,-32
    5c82:	3001                	jal	5482 <_printf_float+0x37a>
    5c84:	0000                	unimp
    5c86:	1a24                	addi	s1,sp,312
    5c88:	0002                	c.slli64	zero
    5c8a:	0100                	addi	s0,sp,128
    5c8c:	012e                	slli	sp,sp,0xb
    5c8e:	0960                	addi	s0,sp,156
    5c90:	0000                	unimp
    5c92:	254c                	fld	fa1,136(a0)
    5c94:	0000                	unimp
    5c96:	020c                	addi	a1,sp,256
    5c98:	0000                	unimp
    5c9a:	9c01                	0x9c01
    5c9c:	0dc6                	slli	s11,s11,0x11
    5c9e:	0000                	unimp
    5ca0:	b725                	j	5bc8 <_printf_i+0x160>
    5ca2:	0005                	c.nop	1
    5ca4:	0100                	addi	s0,sp,128
    5ca6:	192e                	slli	s2,s2,0x2b
    5ca8:	097f                	0x97f
    5caa:	0000                	unimp
    5cac:	487d                	li	a6,31
    5cae:	0000                	unimp
    5cb0:	1e25                	addi	t3,t3,-23
    5cb2:	0009                	c.nop	2
    5cb4:	0100                	addi	s0,sp,128
    5cb6:	09f0192f          	0x9f0192f
    5cba:	0000                	unimp
    5cbc:	48c2                	lw	a7,16(sp)
    5cbe:	0000                	unimp
    5cc0:	1225                	addi	tp,tp,-23
    5cc2:	0005                	c.nop	1
    5cc4:	0100                	addi	s0,sp,128
    5cc6:	1930                	addi	a2,sp,184
    5cc8:	0954                	addi	a3,sp,148
    5cca:	0000                	unimp
    5ccc:	48f9                	li	a7,30
    5cce:	0000                	unimp
    5cd0:	1825                	addi	a6,a6,-23
    5cd2:	0005                	c.nop	1
    5cd4:	0100                	addi	s0,sp,128
    5cd6:	1931                	addi	s2,s2,-20
    5cd8:	0954                	addi	a3,sp,148
    5cda:	0000                	unimp
    5cdc:	00004933          	xor	s2,zero,zero
    5ce0:	b325                	j	5a08 <_printf_common+0x150>
    5ce2:	0100000b          	0x100000b
    5ce6:	1932                	slli	s2,s2,0x2c
    5ce8:	0954                	addi	a3,sp,148
    5cea:	0000                	unimp
    5cec:	496d                	li	s2,27
    5cee:	0000                	unimp
    5cf0:	63726333          	0x63726333
    5cf4:	0100                	addi	s0,sp,128
    5cf6:	09601933          	0x9601933
    5cfa:	0000                	unimp
    5cfc:	000049a7          	fsq	ft0,19(zero) # 13 <_start+0x13>
    5d00:	000aff23          	0xaff23
    5d04:	0100                	addi	s0,sp,128
    5d06:	0c35                	addi	s8,s8,13
    5d08:	0dc6                	slli	s11,s11,0x11
    5d0a:	0000                	unimp
    5d0c:	7f909103          	lh	sp,2041(ra) # 7f9 <main+0x77d>
    5d10:	000b8523          	sb	zero,10(s7)
    5d14:	0100                	addi	s0,sp,128
    5d16:	0c36                	slli	s8,s8,0xd
    5d18:	0dc6                	slli	s11,s11,0x11
    5d1a:	0000                	unimp
    5d1c:	7fb09103          	lh	sp,2043(ra)
    5d20:	01007037          	lui	zero,0x1007
    5d24:	09f00c37          	lui	s8,0x9f00
    5d28:	0000                	unimp
    5d2a:	7f8c9103          	lh	sp,2040(s9)
    5d2e:	01006927          	0x1006927
    5d32:	0c38                	addi	a4,sp,536
    5d34:	097f                	0x97f
    5d36:	0000                	unimp
    5d38:	4a10                	lw	a2,16(a2)
    5d3a:	0000                	unimp
    5d3c:	e038                	fsw	fa4,64(s0)
    5d3e:	0006                	c.slli	zero,0x1
    5d40:	7800                	flw	fs0,48(s0)
    5d42:	000d                	c.nop	3
    5d44:	2800                	fld	fs0,16(s0)
    5d46:	0b21                	addi	s6,s6,8
    5d48:	0000                	unimp
    5d4a:	4401                	li	s0,0
    5d4c:	9719                	srai	a4,a4,0x26
    5d4e:	0009                	c.nop	2
    5d50:	3000                	fld	fs0,32(s0)
    5d52:	004a                	c.slli	zero,0x12
    5d54:	3900                	fld	fs0,48(a0)
    5d56:	25f0                	fld	fa2,200(a1)
    5d58:	0000                	unimp
    5d5a:	0a3e                	slli	s4,s4,0xf
    5d5c:	0000                	unimp
    5d5e:	0135                	addi	sp,sp,13
    5d60:	025a                	slli	tp,tp,0x16
    5d62:	0085                	addi	ra,ra,1
    5d64:	0135                	addi	sp,sp,13
    5d66:	0079025b          	0x79025b
    5d6a:	0000                	unimp
    5d6c:	0038                	addi	a4,sp,8
    5d6e:	a8000007          	0xa8000007
    5d72:	000d                	c.nop	3
    5d74:	2800                	fld	fs0,16(s0)
    5d76:	0b21                	addi	s6,s6,8
    5d78:	0000                	unimp
    5d7a:	5801                	li	a6,-32
    5d7c:	9719                	srai	a4,a4,0x26
    5d7e:	0009                	c.nop	2
    5d80:	4300                	lw	s0,0(a4)
    5d82:	004a                	c.slli	zero,0x12
    5d84:	3900                	fld	fs0,48(a0)
    5d86:	2680                	fld	fs0,8(a3)
    5d88:	0000                	unimp
    5d8a:	0a3e                	slli	s4,s4,0xf
    5d8c:	0000                	unimp
    5d8e:	0135                	addi	sp,sp,13
    5d90:	025a                	slli	tp,tp,0x16
    5d92:	0085                	addi	ra,ra,1
    5d94:	0135                	addi	sp,sp,13
    5d96:	0079025b          	0x79025b
    5d9a:	0000                	unimp
    5d9c:	ec34                	fsw	fa3,88(s0)
    5d9e:	0026                	c.slli	zero,0x9
    5da0:	ec00                	fsw	fs0,24(s0)
    5da2:	000d                	c.nop	3
    5da4:	bc00                	fsd	fs0,56(s0)
    5da6:	000d                	c.nop	3
    5da8:	3500                	fld	fs0,40(a0)
    5daa:	5b01                	li	s6,-32
    5dac:	8302                	jr	t1
    5dae:	0000                	unimp
    5db0:	003a                	c.slli	zero,0xe
    5db2:	ec000027          	0xec000027
    5db6:	000d                	c.nop	3
    5db8:	0000                	unimp
    5dba:	7f0a                	flw	ft10,160(sp)
    5dbc:	0009                	c.nop	2
    5dbe:	d600                	sw	s0,40(a2)
    5dc0:	000d                	c.nop	3
    5dc2:	0b00                	addi	s0,sp,400
    5dc4:	0064                	addi	s1,sp,12
    5dc6:	0000                	unimp
    5dc8:	103b0007          	0x103b0007
    5dcc:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    5dd0:	08000003          	lb	zero,128(zero) # 80 <main+0x4>
    5dd4:	3b00                	fld	fs0,48(a4)
    5dd6:	0a19                	addi	s4,s4,6
    5dd8:	0000                	unimp
    5dda:	00000a0f          	0xa0f
    5dde:	0008                	0x8
    5de0:	d43c                	sw	a5,104(s0)
    5de2:	d400000b          	0xd400000b
    5de6:	0900000b          	0x900000b
    5dea:	0835                	addi	a6,a6,13
    5dec:	4900                	lw	s0,16(a0)
    5dee:	000e                	c.slli	zero,0x3
    5df0:	0400                	addi	s0,sp,512
    5df2:	2500                	fld	fs0,8(a0)
    5df4:	0011                	c.nop	4
    5df6:	0400                	addi	s0,sp,512
    5df8:	0e01                	addi	t3,t3,0
    5dfa:	0004                	0x4
    5dfc:	0c00                	addi	s0,sp,528
    5dfe:	0c1c                	addi	a5,sp,528
    5e00:	0000                	unimp
    5e02:	00000713          	li	a4,0
    5e06:	0878                	addi	a4,sp,28
    5e08:	0000                	unimp
    5e0a:	0000                	unimp
    5e0c:	0000                	unimp
    5e0e:	5bac                	lw	a1,112(a5)
    5e10:	0000                	unimp
    5e12:	0102                	c.slli64	sp
    5e14:	1206                	slli	tp,tp,0x21
    5e16:	0006                	c.slli	zero,0x1
    5e18:	0200                	addi	s0,sp,256
    5e1a:	0801                	addi	a6,a6,0
    5e1c:	0610                	addi	a2,sp,768
    5e1e:	0000                	unimp
    5e20:	0202                	c.slli64	tp
    5e22:	cc05                	beqz	s0,5e5a <iprintf+0x6>
    5e24:	0004                	0x4
    5e26:	0200                	addi	s0,sp,256
    5e28:	0702                	c.slli64	a4
    5e2a:	06ea                	slli	a3,a3,0x1a
    5e2c:	0000                	unimp
    5e2e:	0402                	c.slli64	s0
    5e30:	6b05                	lui	s6,0x1
    5e32:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    5e36:	0704                	addi	s1,sp,896
    5e38:	019d                	addi	gp,gp,7
    5e3a:	0000                	unimp
    5e3c:	0802                	c.slli64	a6
    5e3e:	6605                	lui	a2,0x1
    5e40:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    5e44:	0708                	addi	a0,sp,896
    5e46:	0198                	addi	a4,sp,192
    5e48:	0000                	unimp
    5e4a:	69050403          	lb	s0,1680(a0)
    5e4e:	746e                	flw	fs0,248(sp)
    5e50:	0200                	addi	s0,sp,256
    5e52:	0704                	addi	s1,sp,896
    5e54:	01a2                	slli	gp,gp,0x8
    5e56:	0000                	unimp
    5e58:	1002                	c.slli	zero,0x20
    5e5a:	9004                	0x9004
    5e5c:	0004                	0x4
    5e5e:	0400                	addi	s0,sp,512
    5e60:	049c                	addi	a5,sp,576
    5e62:	0000                	unimp
    5e64:	2202                	fld	ft4,0(sp)
    5e66:	7e19                	lui	t3,0xfffe6
    5e68:	0000                	unimp
    5e6a:	0500                	addi	s0,sp,640
    5e6c:	8404                	0x8404
    5e6e:	0000                	unimp
    5e70:	0600                	addi	s0,sp,768
    5e72:	0601                	addi	a2,a2,0
    5e74:	0000                	unimp
    5e76:	3104                	fld	fs1,32(a0)
    5e78:	03000007          	0x3000007
    5e7c:	0e2c                	addi	a1,sp,792
    5e7e:	0041                	c.nop	16
    5e80:	0000                	unimp
    5e82:	ee04                	fsw	fs1,24(a2)
    5e84:	0000                	unimp
    5e86:	0300                	addi	s0,sp,384
    5e88:	0e72                	slli	t3,t3,0x1c
    5e8a:	0041                	c.nop	16
    5e8c:	0000                	unimp
    5e8e:	da04                	sw	s1,48(a2)
    5e90:	0006                	c.slli	zero,0x1
    5e92:	0300                	addi	s0,sp,384
    5e94:	1791                	addi	a5,a5,-28
    5e96:	005d                	c.nop	23
    5e98:	0000                	unimp
    5e9a:	0005cb07          	flq	fs6,0(a1)
    5e9e:	0400                	addi	s0,sp,512
    5ea0:	0165                	addi	sp,sp,25
    5ea2:	00006417          	auipc	s0,0x6
    5ea6:	0800                	addi	s0,sp,16
    5ea8:	0304                	addi	s1,sp,384
    5eaa:	03a6                	slli	t2,t2,0x9
    5eac:	00dc                	addi	a5,sp,68
    5eae:	0000                	unimp
    5eb0:	fa09                	bnez	a2,5dc2 <_printf_i+0x35a>
    5eb2:	0002                	c.slli64	zero
    5eb4:	0300                	addi	s0,sp,384
    5eb6:	0ca8                	addi	a0,sp,600
    5eb8:	00ad                	addi	ra,ra,11
    5eba:	0000                	unimp
    5ebc:	2f09                	jal	65ce <quorem+0x222>
    5ebe:	0005                	c.nop	1
    5ec0:	0300                	addi	s0,sp,384
    5ec2:	13a9                	addi	t2,t2,-22
    5ec4:	00dc                	addi	a5,sp,68
    5ec6:	0000                	unimp
    5ec8:	0a00                	addi	s0,sp,272
    5eca:	002c                	addi	a1,sp,8
    5ecc:	0000                	unimp
    5ece:	00ec                	addi	a1,sp,76
    5ed0:	0000                	unimp
    5ed2:	0000640b          	0x640b
    5ed6:	0300                	addi	s0,sp,384
    5ed8:	0c00                	addi	s0,sp,528
    5eda:	0308                	addi	a0,sp,384
    5edc:	011009a3          	sb	a7,19(zero) # 13 <_start+0x13>
    5ee0:	0000                	unimp
    5ee2:	640d                	lui	s0,0x3
    5ee4:	0001                	nop
    5ee6:	0300                	addi	s0,sp,384
    5ee8:	07a5                	addi	a5,a5,9
    5eea:	005d                	c.nop	23
    5eec:	0000                	unimp
    5eee:	0d00                	addi	s0,sp,656
    5ef0:	026a                	slli	tp,tp,0x1a
    5ef2:	0000                	unimp
    5ef4:	ba05aa03          	lw	s4,-1120(a1)
    5ef8:	0000                	unimp
    5efa:	0400                	addi	s0,sp,512
    5efc:	0400                	addi	s0,sp,512
    5efe:	03ea                	slli	t2,t2,0x1a
    5f00:	0000                	unimp
    5f02:	ec03ab03          	lw	s6,-320(t2)
    5f06:	0000                	unimp
    5f08:	0400                	addi	s0,sp,512
    5f0a:	02e2                	slli	t0,t0,0x18
    5f0c:	0000                	unimp
    5f0e:	721baf03          	lw	t5,1825(s7)
    5f12:	0000                	unimp
    5f14:	0e00                	addi	s0,sp,784
    5f16:	0404                	addi	s1,sp,512
    5f18:	039e                	slli	t2,t2,0x7
    5f1a:	0000                	unimp
    5f1c:	1605                	addi	a2,a2,-31
    5f1e:	4819                	li	a6,6
    5f20:	0000                	unimp
    5f22:	0f00                	addi	s0,sp,912
    5f24:	0128                	addi	a0,sp,136
    5f26:	0000                	unimp
    5f28:	0518                	addi	a4,sp,640
    5f2a:	0190082f          	0x190082f
    5f2e:	0000                	unimp
    5f30:	9b0d                	andi	a4,a4,-29
    5f32:	05000007          	0x5000007
    5f36:	1331                	addi	t1,t1,-20
    5f38:	0190                	addi	a2,sp,192
    5f3a:	0000                	unimp
    5f3c:	1000                	addi	s0,sp,32
    5f3e:	6b5f 0500 0732      	0x73205006b5f
    5f44:	005d                	c.nop	23
    5f46:	0000                	unimp
    5f48:	0d04                	addi	s1,sp,656
    5f4a:	0594                	addi	a3,sp,704
    5f4c:	0000                	unimp
    5f4e:	3205                	jal	586e <_printf_float+0x766>
    5f50:	00005d0b          	0x5d0b
    5f54:	0800                	addi	s0,sp,16
    5f56:	0c0d                	addi	s8,s8,3
    5f58:	0005                	c.nop	1
    5f5a:	0500                	addi	s0,sp,640
    5f5c:	1432                	slli	s0,s0,0x2c
    5f5e:	005d                	c.nop	23
    5f60:	0000                	unimp
    5f62:	0d0c                	addi	a1,sp,656
    5f64:	01c4                	addi	s1,sp,196
    5f66:	0000                	unimp
    5f68:	3205                	jal	5888 <_printf_float+0x780>
    5f6a:	00005d1b          	0x5d1b
    5f6e:	1000                	addi	s0,sp,32
    5f70:	5f10                	lw	a2,56(a4)
    5f72:	0078                	addi	a4,sp,12
    5f74:	3305                	jal	5c94 <_printf_i+0x22c>
    5f76:	0001960b          	0x1960b
    5f7a:	1400                	addi	s0,sp,544
    5f7c:	0500                	addi	s0,sp,640
    5f7e:	3604                	fld	fs1,40(a2)
    5f80:	0001                	nop
    5f82:	0a00                	addi	s0,sp,272
    5f84:	012a                	slli	sp,sp,0xa
    5f86:	0000                	unimp
    5f88:	01a6                	slli	gp,gp,0x9
    5f8a:	0000                	unimp
    5f8c:	0000640b          	0x640b
    5f90:	0000                	unimp
    5f92:	0f00                	addi	s0,sp,912
    5f94:	000005bf 08370524 	0x8370524000005bf
    5f9c:	0229                	addi	tp,tp,10
    5f9e:	0000                	unimp
    5fa0:	2b0d                	jal	64d2 <quorem+0x126>
    5fa2:	0002                	c.slli64	zero
    5fa4:	0500                	addi	s0,sp,640
    5fa6:	0939                	addi	s2,s2,14
    5fa8:	005d                	c.nop	23
    5faa:	0000                	unimp
    5fac:	0d00                	addi	s0,sp,656
    5fae:	0176                	slli	sp,sp,0x1d
    5fb0:	0000                	unimp
    5fb2:	3a05                	jal	58e2 <_printf_common+0x2a>
    5fb4:	5d09                	li	s10,-30
    5fb6:	0000                	unimp
    5fb8:	0400                	addi	s0,sp,512
    5fba:	540d                	li	s0,-29
    5fbc:	0001                	nop
    5fbe:	0500                	addi	s0,sp,640
    5fc0:	005d093b          	0x5d093b
    5fc4:	0000                	unimp
    5fc6:	0d08                	addi	a0,sp,656
    5fc8:	029a                	slli	t0,t0,0x6
    5fca:	0000                	unimp
    5fcc:	3c05                	jal	59fc <_printf_common+0x144>
    5fce:	5d09                	li	s10,-30
    5fd0:	0000                	unimp
    5fd2:	0c00                	addi	s0,sp,528
    5fd4:	870d                	srai	a4,a4,0x3
    5fd6:	0004                	0x4
    5fd8:	0500                	addi	s0,sp,640
    5fda:	093d                	addi	s2,s2,15
    5fdc:	005d                	c.nop	23
    5fde:	0000                	unimp
    5fe0:	0d10                	addi	a2,sp,656
    5fe2:	0549                	addi	a0,a0,18
    5fe4:	0000                	unimp
    5fe6:	3e05                	jal	5b16 <_printf_i+0xae>
    5fe8:	5d09                	li	s10,-30
    5fea:	0000                	unimp
    5fec:	1400                	addi	s0,sp,544
    5fee:	300d                	jal	5810 <_printf_float+0x708>
    5ff0:	0001                	nop
    5ff2:	0500                	addi	s0,sp,640
    5ff4:	005d093f 0d180000 	0xd180000005d093f
    5ffc:	0234                	addi	a3,sp,264
    5ffe:	0000                	unimp
    6000:	4005                	c.li	zero,1
    6002:	5d09                	li	s10,-30
    6004:	0000                	unimp
    6006:	1c00                	addi	s0,sp,560
    6008:	fd0d                	bnez	a0,5f42 <_puts_r+0x12>
    600a:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    600e:	0941                	addi	s2,s2,16
    6010:	005d                	c.nop	23
    6012:	0000                	unimp
    6014:	0020                	addi	s0,sp,8
    6016:	2911                	jal	642a <quorem+0x7e>
    6018:	0000                	unimp
    601a:	0800                	addi	s0,sp,16
    601c:	0501                	addi	a0,a0,0
    601e:	084a                	slli	a6,a6,0x12
    6020:	026e                	slli	tp,tp,0x1b
    6022:	0000                	unimp
    6024:	f50d                	bnez	a0,5f4e <_puts_r+0x1e>
    6026:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    602a:	026e0a4b          	fnmsub.d	fs4,ft8,ft6,ft0,rne
    602e:	0000                	unimp
    6030:	0d00                	addi	s0,sp,656
    6032:	05f5                	addi	a1,a1,29
    6034:	0000                	unimp
    6036:	4c05                	li	s8,1
    6038:	6e09                	lui	t3,0x2
    603a:	0002                	c.slli64	zero
    603c:	8000                	0x8000
    603e:	0412                	slli	s0,s0,0x4
    6040:	05000007          	0x5000007
    6044:	0a4e                	slli	s4,s4,0x13
    6046:	012a                	slli	sp,sp,0xa
    6048:	0000                	unimp
    604a:	0100                	addi	s0,sp,128
    604c:	8012                	c.mv	zero,tp
    604e:	05000007          	0x5000007
    6052:	0a51                	addi	s4,s4,20
    6054:	012a                	slli	sp,sp,0xa
    6056:	0000                	unimp
    6058:	0104                	addi	s1,sp,128
    605a:	0a00                	addi	s0,sp,272
    605c:	0128                	addi	a0,sp,136
    605e:	0000                	unimp
    6060:	027e                	slli	tp,tp,0x1f
    6062:	0000                	unimp
    6064:	0000640b          	0x640b
    6068:	1f00                	addi	s0,sp,944
    606a:	1100                	addi	s0,sp,160
    606c:	000004bb          	0x4bb
    6070:	0190                	addi	a2,sp,192
    6072:	5d05                	li	s10,-31
    6074:	c108                	sw	a0,0(a0)
    6076:	0002                	c.slli64	zero
    6078:	0d00                	addi	s0,sp,656
    607a:	0000079b          	0x79b
    607e:	5e05                	li	t3,-31
    6080:	c112                	sw	tp,128(sp)
    6082:	0002                	c.slli64	zero
    6084:	0000                	unimp
    6086:	430d                	li	t1,3
    6088:	0002                	c.slli64	zero
    608a:	0500                	addi	s0,sp,640
    608c:	065f 005d 0000      	0x5d065f
    6092:	0d04                	addi	s1,sp,656
    6094:	00000107          	0x107
    6098:	6105                	addi	sp,sp,32
    609a:	c709                	beqz	a4,60a4 <puts>
    609c:	0002                	c.slli64	zero
    609e:	0800                	addi	s0,sp,16
    60a0:	290d                	jal	64d2 <quorem+0x126>
    60a2:	0000                	unimp
    60a4:	0500                	addi	s0,sp,640
    60a6:	1e62                	slli	t3,t3,0x38
    60a8:	0229                	addi	tp,tp,10
    60aa:	0000                	unimp
    60ac:	0088                	addi	a0,sp,64
    60ae:	0405                	addi	s0,s0,1
    60b0:	027e                	slli	tp,tp,0x1f
    60b2:	0000                	unimp
    60b4:	d70a                	sw	sp,172(sp)
    60b6:	0002                	c.slli64	zero
    60b8:	d700                	sw	s0,40(a4)
    60ba:	0002                	c.slli64	zero
    60bc:	0b00                	addi	s0,sp,400
    60be:	0064                	addi	s1,sp,12
    60c0:	0000                	unimp
    60c2:	001f 0405 02dd      	0x2dd0405001f
    60c8:	0000                	unimp
    60ca:	06820f13          	addi	t5,tp,104 # ffffd068 <__freertos_irq_stack_top+0xfefed068>
    60ce:	0000                	unimp
    60d0:	0508                	addi	a0,sp,640
    60d2:	0875                	addi	a6,a6,29
    60d4:	0306                	slli	t1,t1,0x1
    60d6:	0000                	unimp
    60d8:	880d                	andi	s0,s0,3
    60da:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    60de:	1176                	slli	sp,sp,0x3d
    60e0:	0306                	slli	t1,t1,0x1
    60e2:	0000                	unimp
    60e4:	0d00                	addi	s0,sp,656
    60e6:	070d                	addi	a4,a4,3
    60e8:	0000                	unimp
    60ea:	7705                	lui	a4,0xfffe1
    60ec:	5d06                	lw	s10,96(sp)
    60ee:	0000                	unimp
    60f0:	0400                	addi	s0,sp,512
    60f2:	0500                	addi	s0,sp,640
    60f4:	2c04                	fld	fs1,24(s0)
    60f6:	0000                	unimp
    60f8:	0f00                	addi	s0,sp,912
    60fa:	01bc                	addi	a5,sp,200
    60fc:	0000                	unimp
    60fe:	0568                	addi	a0,sp,652
    6100:	08b5                	addi	a7,a7,13
    6102:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
    6106:	5f10                	lw	a2,56(a4)
    6108:	0070                	addi	a2,sp,12
    610a:	b605                	j	5c2a <_printf_i+0x1c2>
    610c:	0612                	slli	a2,a2,0x4
    610e:	00000003          	lb	zero,0(zero) # 0 <_start>
    6112:	5f10                	lw	a2,56(a4)
    6114:	0072                	c.slli	zero,0x1c
    6116:	b705                	j	6036 <_puts_r+0x106>
    6118:	00005d07          	0x5d07
    611c:	0400                	addi	s0,sp,512
    611e:	5f10                	lw	a2,56(a4)
    6120:	b8050077          	0xb8050077
    6124:	00005d07          	0x5d07
    6128:	0800                	addi	s0,sp,16
    612a:	7f0d                	lui	t5,0xfffe3
    612c:	0000                	unimp
    612e:	0500                	addi	s0,sp,640
    6130:	09b9                	addi	s3,s3,14
    6132:	00000033          	add	zero,zero,zero
    6136:	0d0c                	addi	a1,sp,656
    6138:	03bc                	addi	a5,sp,456
    613a:	0000                	unimp
    613c:	ba05                	j	5a6c <_printf_i+0x4>
    613e:	3309                	jal	5e40 <_printf_i+0x3d8>
    6140:	0000                	unimp
    6142:	0e00                	addi	s0,sp,784
    6144:	5f10                	lw	a2,56(a4)
    6146:	6662                	flw	fa2,24(sp)
    6148:	0500                	addi	s0,sp,640
    614a:	02de11bb          	0x2de11bb
    614e:	0000                	unimp
    6150:	0d10                	addi	a2,sp,656
    6152:	0076                	c.slli	zero,0x1d
    6154:	0000                	unimp
    6156:	bc05                	j	5b86 <_printf_i+0x11e>
    6158:	00005d07          	0x5d07
    615c:	1800                	addi	s0,sp,48
    615e:	120d                	addi	tp,tp,-29
    6160:	0001                	nop
    6162:	0500                	addi	s0,sp,640
    6164:	01280ac3          	fmadd.s	fs5,fa6,fs2,ft0,rne
    6168:	0000                	unimp
    616a:	0d1c                	addi	a5,sp,656
    616c:	00c0                	addi	s0,sp,68
    616e:	0000                	unimp
    6170:	c505                	beqz	a0,6198 <__swbuf_r+0xc0>
    6172:	d31d                	beqz	a4,6098 <_puts_r+0x168>
    6174:	0005                	c.nop	1
    6176:	2000                	fld	fs0,0(s0)
    6178:	a40d                	j	639a <__swsetup_r+0x17a>
    617a:	0004                	0x4
    617c:	0500                	addi	s0,sp,640
    617e:	05fd1dc7          	0x5fd1dc7
    6182:	0000                	unimp
    6184:	0d24                	addi	s1,sp,664
    6186:	07ac                	addi	a1,sp,968
    6188:	0000                	unimp
    618a:	ca05                	beqz	a2,61ba <__swbuf_r+0xe2>
    618c:	210d                	jal	65ae <quorem+0x202>
    618e:	0006                	c.slli	zero,0x1
    6190:	2800                	fld	fs0,16(s0)
    6192:	150d                	addi	a0,a0,-29
    6194:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    6198:	063b09cb          	fnmsub.q	fs3,fs6,ft3,ft0,rne
    619c:	0000                	unimp
    619e:	102c                	addi	a1,sp,40
    61a0:	755f 0062 ce05      	0xce050062755f
    61a6:	de11                	beqz	a2,60c2 <strlen+0x6>
    61a8:	0002                	c.slli64	zero
    61aa:	3000                	fld	fs0,32(s0)
    61ac:	5f10                	lw	a2,56(a4)
    61ae:	7075                	c.lui	zero,0xffffd
    61b0:	0500                	addi	s0,sp,640
    61b2:	030612cf          	fnmadd.d	ft5,fa2,fa6,ft0,rtz
    61b6:	0000                	unimp
    61b8:	1038                	addi	a4,sp,40
    61ba:	755f 0072 d005      	0xd0050072755f
    61c0:	00005d07          	0x5d07
    61c4:	3c00                	fld	fs0,56(s0)
    61c6:	dc0d                	beqz	s0,6100 <__swbuf_r+0x28>
    61c8:	05000007          	0x5000007
    61cc:	064111d3          	fadd.q	ft3,ft2,ft4,rtz
    61d0:	0000                	unimp
    61d2:	0d40                	addi	s0,sp,660
    61d4:	0738                	addi	a4,sp,904
    61d6:	0000                	unimp
    61d8:	d405                	beqz	s0,6100 <__swbuf_r+0x28>
    61da:	5111                	li	sp,-28
    61dc:	0006                	c.slli	zero,0x1
    61de:	4300                	lw	s0,0(a4)
    61e0:	5f10                	lw	a2,56(a4)
    61e2:	626c                	flw	fa1,68(a2)
    61e4:	0500                	addi	s0,sp,640
    61e6:	02de11d7          	0x2de11d7
    61ea:	0000                	unimp
    61ec:	0d44                	addi	s1,sp,660
    61ee:	05b6                	slli	a1,a1,0xd
    61f0:	0000                	unimp
    61f2:	da05                	beqz	a2,6122 <__swbuf_r+0x4a>
    61f4:	00005d07          	0x5d07
    61f8:	4c00                	lw	s0,24(s0)
    61fa:	fd0d                	bnez	a0,6134 <__swbuf_r+0x5c>
    61fc:	0001                	nop
    61fe:	0500                	addi	s0,sp,640
    6200:	00890adb          	0x890adb
    6204:	0000                	unimp
    6206:	0d50                	addi	a2,sp,660
    6208:	0170                	addi	a2,sp,140
    620a:	0000                	unimp
    620c:	de05                	beqz	a2,6144 <__swbuf_r+0x6c>
    620e:	6d12                	flw	fs10,4(sp)
    6210:	0004                	0x4
    6212:	5400                	lw	s0,40(s0)
    6214:	020d                	addi	tp,tp,3
    6216:	0006                	c.slli	zero,0x1
    6218:	0500                	addi	s0,sp,640
    621a:	0ce2                	slli	s9,s9,0x18
    621c:	011c                	addi	a5,sp,128
    621e:	0000                	unimp
    6220:	0d58                	addi	a4,sp,660
    6222:	000000b7          	lui	ra,0x0
    6226:	e405                	bnez	s0,624e <__swsetup_r+0x2e>
    6228:	100e                	c.slli	zero,0x23
    622a:	0001                	nop
    622c:	5c00                	lw	s0,56(s0)
    622e:	780d                	lui	a6,0xfffe3
    6230:	05000007          	0x5000007
    6234:	09e5                	addi	s3,s3,25
    6236:	005d                	c.nop	23
    6238:	0000                	unimp
    623a:	0064                	addi	s1,sp,12
    623c:	a114                	fsd	fa3,0(a0)
    623e:	0000                	unimp
    6240:	6d00                	flw	fs0,24(a0)
    6242:	0004                	0x4
    6244:	1500                	addi	s0,sp,672
    6246:	046d                	addi	s0,s0,27
    6248:	0000                	unimp
    624a:	2815                	jal	627e <__swsetup_r+0x5e>
    624c:	0001                	nop
    624e:	1500                	addi	s0,sp,672
    6250:	05c1                	addi	a1,a1,16
    6252:	0000                	unimp
    6254:	5d15                	li	s10,-27
    6256:	0000                	unimp
    6258:	0000                	unimp
    625a:	0405                	addi	s0,s0,1
    625c:	0478                	addi	a4,sp,524
    625e:	0000                	unimp
    6260:	6d16                	flw	fs10,68(sp)
    6262:	0004                	0x4
    6264:	1700                	addi	s0,sp,928
    6266:	000006e3          	beqz	zero,6a72 <_dtoa_r+0x486>
    626a:	0428                	addi	a0,sp,520
    626c:	3905                	jal	5e9c <iprintf+0x48>
    626e:	0802                	c.slli64	a6
    6270:	05c1                	addi	a1,a1,16
    6272:	0000                	unimp
    6274:	8018                	0x8018
    6276:	0004                	0x4
    6278:	0500                	addi	s0,sp,640
    627a:	5d07023b          	0x5d07023b
    627e:	0000                	unimp
    6280:	0000                	unimp
    6282:	4918                	lw	a4,16(a0)
    6284:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    6288:	0240                	addi	s0,sp,260
    628a:	0006ad0b          	0x6ad0b
    628e:	0400                	addi	s0,sp,512
    6290:	e618                	fsw	fa4,8(a2)
    6292:	0000                	unimp
    6294:	0500                	addi	s0,sp,640
    6296:	0240                	addi	s0,sp,260
    6298:	ad14                	fsd	fa3,24(a0)
    629a:	0006                	c.slli	zero,0x1
    629c:	0800                	addi	s0,sp,16
    629e:	cb18                	sw	a4,16(a4)
    62a0:	05000007          	0x5000007
    62a4:	0240                	addi	s0,sp,260
    62a6:	ad1e                	fsd	ft7,152(sp)
    62a8:	0006                	c.slli	zero,0x1
    62aa:	0c00                	addi	s0,sp,528
    62ac:	3e18                	fld	fa4,56(a2)
    62ae:	0002                	c.slli64	zero
    62b0:	0500                	addi	s0,sp,640
    62b2:	0242                	slli	tp,tp,0x10
    62b4:	5d08                	lw	a0,56(a0)
    62b6:	0000                	unimp
    62b8:	1000                	addi	s0,sp,32
    62ba:	0518                	addi	a4,sp,640
    62bc:	0002                	c.slli64	zero
    62be:	0500                	addi	s0,sp,640
    62c0:	ad080243          	0xad080243
    62c4:	0008                	0x8
    62c6:	1400                	addi	s0,sp,544
    62c8:	5f18                	lw	a4,56(a4)
    62ca:	05000007          	0x5000007
    62ce:	0246                	slli	tp,tp,0x11
    62d0:	00005d07          	0x5d07
    62d4:	3000                	fld	fs0,32(s0)
    62d6:	d218                	sw	a4,32(a2)
    62d8:	0006                	c.slli	zero,0x1
    62da:	0500                	addi	s0,sp,640
    62dc:	c2160247          	fmsub.d	ft4,fa2,ft1,fs8,rne
    62e0:	0008                	0x8
    62e2:	3400                	fld	fs0,40(s0)
    62e4:	2218                	fld	fa4,0(a2)
    62e6:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    62ea:	0249                	addi	tp,tp,18
    62ec:	00005d07          	0x5d07
    62f0:	3800                	fld	fs0,48(s0)
    62f2:	d418                	sw	a4,40(s0)
    62f4:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    62f8:	d30a024b          	fnmsub.d	ft4,fs4,fa6,fs10,rne
    62fc:	0008                	0x8
    62fe:	3c00                	fld	fs0,56(s0)
    6300:	4c18                	lw	a4,24(s0)
    6302:	0001                	nop
    6304:	0500                	addi	s0,sp,640
    6306:	024e                	slli	tp,tp,0x13
    6308:	00019013          	slli	zero,gp,0x0
    630c:	4000                	lw	s0,0(s0)
    630e:	8e18                	0x8e18
    6310:	0001                	nop
    6312:	0500                	addi	s0,sp,640
    6314:	5d07024f          	0x5d07024f
    6318:	0000                	unimp
    631a:	4400                	lw	s0,8(s0)
    631c:	7218                	flw	fa4,32(a2)
    631e:	0002                	c.slli64	zero
    6320:	0500                	addi	s0,sp,640
    6322:	0250                	addi	a2,sp,260
    6324:	00019013          	slli	zero,gp,0x0
    6328:	4800                	lw	s0,16(s0)
    632a:	8e18                	0x8e18
    632c:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    6330:	0251                	addi	tp,tp,20
    6332:	d914                	sw	a3,48(a0)
    6334:	0008                	0x8
    6336:	4c00                	lw	s0,24(s0)
    6338:	8c18                	0x8c18
    633a:	0005                	c.nop	1
    633c:	0500                	addi	s0,sp,640
    633e:	0254                	addi	a3,sp,260
    6340:	00005d07          	0x5d07
    6344:	5000                	lw	s0,32(s0)
    6346:	0818                	addi	a4,sp,16
    6348:	0006                	c.slli	zero,0x1
    634a:	0500                	addi	s0,sp,640
    634c:	0255                	addi	tp,tp,21
    634e:	c109                	beqz	a0,6350 <__swsetup_r+0x130>
    6350:	0005                	c.nop	1
    6352:	5400                	lw	s0,40(s0)
    6354:	3a18                	fld	fa4,48(a2)
    6356:	0006                	c.slli	zero,0x1
    6358:	0500                	addi	s0,sp,640
    635a:	0278                	addi	a4,sp,268
    635c:	00088807          	0x88807
    6360:	5800                	lw	s0,48(s0)
    6362:	bb19                	j	6078 <_puts_r+0x148>
    6364:	0004                	0x4
    6366:	0500                	addi	s0,sp,640
    6368:	027c                	addi	a5,sp,268
    636a:	0002c113          	xori	sp,t0,0
    636e:	4800                	lw	s0,16(s0)
    6370:	1901                	addi	s2,s2,-32
    6372:	02bd                	addi	t0,t0,15
    6374:	0000                	unimp
    6376:	7d05                	lui	s10,0xfffe1
    6378:	1202                	slli	tp,tp,0x20
    637a:	027e                	slli	tp,tp,0x1f
    637c:	0000                	unimp
    637e:	014c                	addi	a1,sp,132
    6380:	a419                	j	6586 <quorem+0x1da>
    6382:	0002                	c.slli64	zero
    6384:	0500                	addi	s0,sp,640
    6386:	0281                	addi	t0,t0,0
    6388:	ea0c                	fsw	fa1,16(a2)
    638a:	0008                	0x8
    638c:	dc00                	sw	s0,56(s0)
    638e:	1902                	slli	s2,s2,0x20
    6390:	000006af          	0x6af
    6394:	8605                	srai	a2,a2,0x1
    6396:	1002                	c.slli	zero,0x20
    6398:	066e                	slli	a2,a2,0x1b
    639a:	0000                	unimp
    639c:	02e0                	addi	s0,sp,332
    639e:	0719                	addi	a4,a4,6
    63a0:	0005                	c.nop	1
    63a2:	0500                	addi	s0,sp,640
    63a4:	0288                	addi	a0,sp,320
    63a6:	f60a                	fsw	ft2,44(sp)
    63a8:	0008                	0x8
    63aa:	ec00                	fsw	fs0,24(s0)
    63ac:	0002                	c.slli64	zero
    63ae:	0405                	addi	s0,s0,1
    63b0:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    63b4:	0102                	c.slli64	sp
    63b6:	1908                	addi	a0,sp,176
    63b8:	0006                	c.slli	zero,0x1
    63ba:	1600                	addi	s0,sp,800
    63bc:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    63c0:	0405                	addi	s0,s0,1
    63c2:	0000044f          	fnmadd.s	fs0,ft0,ft0,ft0,rne
    63c6:	a114                	fsd	fa3,0(a0)
    63c8:	0000                	unimp
    63ca:	f700                	fsw	fs0,40(a4)
    63cc:	0005                	c.nop	1
    63ce:	1500                	addi	s0,sp,672
    63d0:	046d                	addi	s0,s0,27
    63d2:	0000                	unimp
    63d4:	2815                	jal	6408 <quorem+0x5c>
    63d6:	0001                	nop
    63d8:	1500                	addi	s0,sp,672
    63da:	000005f7          	0x5f7
    63de:	5d15                	li	s10,-27
    63e0:	0000                	unimp
    63e2:	0000                	unimp
    63e4:	0405                	addi	s0,s0,1
    63e6:	05ce                	slli	a1,a1,0x13
    63e8:	0000                	unimp
    63ea:	0405                	addi	s0,s0,1
    63ec:	05d9                	addi	a1,a1,22
    63ee:	0000                	unimp
    63f0:	9514                	0x9514
    63f2:	0000                	unimp
    63f4:	2100                	fld	fs0,0(a0)
    63f6:	0006                	c.slli	zero,0x1
    63f8:	1500                	addi	s0,sp,672
    63fa:	046d                	addi	s0,s0,27
    63fc:	0000                	unimp
    63fe:	2815                	jal	6432 <quorem+0x86>
    6400:	0001                	nop
    6402:	1500                	addi	s0,sp,672
    6404:	0095                	addi	ra,ra,5
    6406:	0000                	unimp
    6408:	5d15                	li	s10,-27
    640a:	0000                	unimp
    640c:	0000                	unimp
    640e:	0405                	addi	s0,s0,1
    6410:	00000603          	lb	a2,0(zero) # 0 <_start>
    6414:	5d14                	lw	a3,56(a0)
    6416:	0000                	unimp
    6418:	3b00                	fld	fs0,48(a4)
    641a:	0006                	c.slli	zero,0x1
    641c:	1500                	addi	s0,sp,672
    641e:	046d                	addi	s0,s0,27
    6420:	0000                	unimp
    6422:	2815                	jal	6456 <quorem+0xaa>
    6424:	0001                	nop
    6426:	0000                	unimp
    6428:	0405                	addi	s0,s0,1
    642a:	00000627          	0x627
    642e:	2c0a                	fld	fs8,128(sp)
    6430:	0000                	unimp
    6432:	5100                	lw	s0,32(a0)
    6434:	0006                	c.slli	zero,0x1
    6436:	0b00                	addi	s0,sp,400
    6438:	0064                	addi	s1,sp,12
    643a:	0000                	unimp
    643c:	0002                	c.slli64	zero
    643e:	2c0a                	fld	fs8,128(sp)
    6440:	0000                	unimp
    6442:	6100                	flw	fs0,0(a0)
    6444:	0006                	c.slli	zero,0x1
    6446:	0b00                	addi	s0,sp,400
    6448:	0064                	addi	s1,sp,12
    644a:	0000                	unimp
    644c:	0000                	unimp
    644e:	0001f607          	0x1f607
    6452:	0500                	addi	s0,sp,640
    6454:	011f 0c1a 0003      	0x30c1a011f
    645a:	1a00                	addi	s0,sp,304
    645c:	0694                	addi	a3,sp,832
    645e:	0000                	unimp
    6460:	050c                	addi	a1,sp,640
    6462:	a7080123          	sb	a6,-1438(a6) # fffe2a62 <__freertos_irq_stack_top+0xfefd2a62>
    6466:	0006                	c.slli	zero,0x1
    6468:	1800                	addi	s0,sp,48
    646a:	0000079b          	0x79b
    646e:	2505                	jal	6a8e <_dtoa_r+0x4a2>
    6470:	1101                	addi	sp,sp,-32
    6472:	000006a7          	0x6a7
    6476:	1800                	addi	s0,sp,48
    6478:	05c4                	addi	s1,sp,708
    647a:	0000                	unimp
    647c:	2605                	jal	679c <_dtoa_r+0x1b0>
    647e:	0701                	addi	a4,a4,0
    6480:	005d                	c.nop	23
    6482:	0000                	unimp
    6484:	1804                	addi	s1,sp,48
    6486:	0300                	addi	s0,sp,384
    6488:	0000                	unimp
    648a:	2705                	jal	6baa <_dtoa_r+0x5be>
    648c:	0b01                	addi	s6,s6,0
    648e:	06ad                	addi	a3,a3,11
    6490:	0000                	unimp
    6492:	0008                	0x8
    6494:	0405                	addi	s0,s0,1
    6496:	066e                	slli	a2,a2,0x1b
    6498:	0000                	unimp
    649a:	0405                	addi	s0,s0,1
    649c:	0661                	addi	a2,a2,24
    649e:	0000                	unimp
    64a0:	861a                	mv	a2,t1
    64a2:	0001                	nop
    64a4:	0e00                	addi	s0,sp,784
    64a6:	3f05                	jal	63d6 <quorem+0x2a>
    64a8:	0801                	addi	a6,a6,0
    64aa:	06ec                	addi	a1,sp,844
    64ac:	0000                	unimp
    64ae:	9018                	0x9018
    64b0:	05000007          	0x5000007
    64b4:	0140                	addi	s0,sp,132
    64b6:	ec12                	fsw	ft4,24(sp)
    64b8:	0006                	c.slli	zero,0x1
    64ba:	0000                	unimp
    64bc:	9818                	0x9818
    64be:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    64c2:	0141                	addi	sp,sp,16
    64c4:	ec12                	fsw	ft4,24(sp)
    64c6:	0006                	c.slli	zero,0x1
    64c8:	0600                	addi	s0,sp,768
    64ca:	5e18                	lw	a4,56(a2)
    64cc:	0006                	c.slli	zero,0x1
    64ce:	0500                	addi	s0,sp,640
    64d0:	0142                	slli	sp,sp,0x10
    64d2:	3a12                	fld	fs4,288(sp)
    64d4:	0000                	unimp
    64d6:	0c00                	addi	s0,sp,528
    64d8:	0a00                	addi	s0,sp,272
    64da:	003a                	c.slli	zero,0xe
    64dc:	0000                	unimp
    64de:	06fc                	addi	a5,sp,844
    64e0:	0000                	unimp
    64e2:	0000640b          	0x640b
    64e6:	0200                	addi	s0,sp,256
    64e8:	1b00                	addi	s0,sp,432
    64ea:	05d0                	addi	a2,sp,708
    64ec:	0259                	addi	tp,tp,22
    64ee:	00081107          	0x81107
    64f2:	1800                	addi	s0,sp,48
    64f4:	073e                	slli	a4,a4,0xf
    64f6:	0000                	unimp
    64f8:	5b05                	li	s6,-31
    64fa:	1802                	slli	a6,a6,0x20
    64fc:	0064                	addi	s1,sp,12
    64fe:	0000                	unimp
    6500:	1800                	addi	s0,sp,48
    6502:	000006b7          	lui	a3,0x0
    6506:	5c05                	li	s8,-31
    6508:	1202                	slli	tp,tp,0x20
    650a:	05c1                	addi	a1,a1,16
    650c:	0000                	unimp
    650e:	1804                	addi	s1,sp,48
    6510:	000001af          	0x1af
    6514:	5d05                	li	s10,-31
    6516:	1002                	c.slli	zero,0x20
    6518:	0811                	addi	a6,a6,4
    651a:	0000                	unimp
    651c:	1808                	addi	a0,sp,48
    651e:	0560                	addi	s0,sp,652
    6520:	0000                	unimp
    6522:	5e05                	li	t3,-31
    6524:	1702                	slli	a4,a4,0x20
    6526:	01a6                	slli	gp,gp,0x9
    6528:	0000                	unimp
    652a:	1824                	addi	s1,sp,56
    652c:	0350                	addi	a2,sp,388
    652e:	0000                	unimp
    6530:	5f05                	li	t5,-31
    6532:	0f02                	c.slli64	t5
    6534:	005d                	c.nop	23
    6536:	0000                	unimp
    6538:	1848                	addi	a0,sp,52
    653a:	0796                	slli	a5,a5,0x5
    653c:	0000                	unimp
    653e:	6005                	c.lui	zero,0x1
    6540:	2c02                	fld	fs8,0(sp)
    6542:	0056                	c.slli	zero,0x15
    6544:	0000                	unimp
    6546:	1850                	addi	a2,sp,52
    6548:	005e                	c.slli	zero,0x17
    654a:	0000                	unimp
    654c:	6105                	addi	sp,sp,32
    654e:	1a02                	slli	s4,s4,0x20
    6550:	000006b3          	add	a3,zero,zero
    6554:	1858                	addi	a4,sp,52
    6556:	028d                	addi	t0,t0,3
    6558:	0000                	unimp
    655a:	6205                	lui	tp,0x1
    655c:	1602                	slli	a2,a2,0x20
    655e:	0110                	addi	a2,sp,128
    6560:	0000                	unimp
    6562:	1868                	addi	a0,sp,60
    6564:	06c4                	addi	s1,sp,836
    6566:	0000                	unimp
    6568:	6305                	lui	t1,0x1
    656a:	1602                	slli	a2,a2,0x20
    656c:	0110                	addi	a2,sp,128
    656e:	0000                	unimp
    6570:	1870                	addi	a2,sp,60
    6572:	0041                	c.nop	16
    6574:	0000                	unimp
    6576:	6405                	lui	s0,0x1
    6578:	1602                	slli	a2,a2,0x20
    657a:	0110                	addi	a2,sp,128
    657c:	0000                	unimp
    657e:	1878                	addi	a4,sp,60
    6580:	059c                	addi	a5,sp,704
    6582:	0000                	unimp
    6584:	6505                	lui	a0,0x1
    6586:	1002                	c.slli	zero,0x20
    6588:	0821                	addi	a6,a6,8
    658a:	0000                	unimp
    658c:	1880                	addi	s0,sp,112
    658e:	00000063          	beqz	zero,658e <quorem+0x1e2>
    6592:	6605                	lui	a2,0x1
    6594:	1002                	c.slli	zero,0x20
    6596:	0831                	addi	a6,a6,12
    6598:	0000                	unimp
    659a:	1888                	addi	a0,sp,112
    659c:	0000063f 0f026705 	0xf0267050000063f
    65a4:	005d                	c.nop	23
    65a6:	0000                	unimp
    65a8:	18a0                	addi	s0,sp,120
    65aa:	00c6                	slli	ra,ra,0x11
    65ac:	0000                	unimp
    65ae:	6805                	lui	a6,0x1
    65b0:	1602                	slli	a2,a2,0x20
    65b2:	0110                	addi	a2,sp,128
    65b4:	0000                	unimp
    65b6:	18a4                	addi	s1,sp,120
    65b8:	02ae                	slli	t0,t0,0xb
    65ba:	0000                	unimp
    65bc:	6905                	lui	s2,0x1
    65be:	1602                	slli	a2,a2,0x20
    65c0:	0110                	addi	a2,sp,128
    65c2:	0000                	unimp
    65c4:	18ac                	addi	a1,sp,120
    65c6:	0248                	addi	a0,sp,260
    65c8:	0000                	unimp
    65ca:	6a05                	lui	s4,0x1
    65cc:	1602                	slli	a2,a2,0x20
    65ce:	0110                	addi	a2,sp,128
    65d0:	0000                	unimp
    65d2:	18b4                	addi	a3,sp,120
    65d4:	03ad                	addi	t2,t2,11
    65d6:	0000                	unimp
    65d8:	6b05                	lui	s6,0x1
    65da:	1602                	slli	a2,a2,0x20
    65dc:	0110                	addi	a2,sp,128
    65de:	0000                	unimp
    65e0:	18bc                	addi	a5,sp,120
    65e2:	027c                	addi	a5,sp,268
    65e4:	0000                	unimp
    65e6:	6c05                	lui	s8,0x1
    65e8:	1602                	slli	a2,a2,0x20
    65ea:	0110                	addi	a2,sp,128
    65ec:	0000                	unimp
    65ee:	18c4                	addi	s1,sp,116
    65f0:	047e                	slli	s0,s0,0x1f
    65f2:	0000                	unimp
    65f4:	6d05                	lui	s10,0x1
    65f6:	0802                	c.slli64	a6
    65f8:	005d                	c.nop	23
    65fa:	0000                	unimp
    65fc:	00cc                	addi	a1,sp,68
    65fe:	c70a                	sw	sp,140(sp)
    6600:	0005                	c.nop	1
    6602:	2100                	fld	fs0,0(a0)
    6604:	0008                	0x8
    6606:	0b00                	addi	s0,sp,400
    6608:	0064                	addi	s1,sp,12
    660a:	0000                	unimp
    660c:	0019                	c.nop	6
    660e:	c70a                	sw	sp,140(sp)
    6610:	0005                	c.nop	1
    6612:	3100                	fld	fs0,32(a0)
    6614:	0008                	0x8
    6616:	0b00                	addi	s0,sp,400
    6618:	0064                	addi	s1,sp,12
    661a:	0000                	unimp
    661c:	c70a0007          	0xc70a0007
    6620:	0005                	c.nop	1
    6622:	4100                	lw	s0,0(a0)
    6624:	0008                	0x8
    6626:	0b00                	addi	s0,sp,400
    6628:	0064                	addi	s1,sp,12
    662a:	0000                	unimp
    662c:	f01b0017          	auipc	zero,0xf01b0
    6630:	7205                	lui	tp,0xfffe1
    6632:	0702                	c.slli64	a4
    6634:	0868                	addi	a0,sp,28
    6636:	0000                	unimp
    6638:	7f18                	flw	fa4,56(a4)
    663a:	0001                	nop
    663c:	0500                	addi	s0,sp,640
    663e:	0275                	addi	tp,tp,29
    6640:	0008681b          	0x8681b
    6644:	0000                	unimp
    6646:	d318                	sw	a4,32(a4)
    6648:	05000007          	0x5000007
    664c:	0276                	slli	tp,tp,0x1d
    664e:	7818                	flw	fa4,48(s0)
    6650:	0008                	0x8
    6652:	7800                	flw	fs0,48(s0)
    6654:	0a00                	addi	s0,sp,272
    6656:	0306                	slli	t1,t1,0x1
    6658:	0000                	unimp
    665a:	0878                	addi	a4,sp,28
    665c:	0000                	unimp
    665e:	0000640b          	0x640b
    6662:	1d00                	addi	s0,sp,688
    6664:	0a00                	addi	s0,sp,272
    6666:	0064                	addi	s1,sp,12
    6668:	0000                	unimp
    666a:	0888                	addi	a0,sp,80
    666c:	0000                	unimp
    666e:	0000640b          	0x640b
    6672:	1d00                	addi	s0,sp,688
    6674:	1c00                	addi	s0,sp,560
    6676:	05f0                	addi	a2,sp,716
    6678:	ad030257          	0xad030257
    667c:	0008                	0x8
    667e:	1d00                	addi	s0,sp,688
    6680:	000006e3          	beqz	zero,6e8c <_dtoa_r+0x8a0>
    6684:	6e05                	lui	t3,0x1
    6686:	0b02                	c.slli64	s6
    6688:	06fc                	addi	a5,sp,844
    668a:	0000                	unimp
    668c:	6f1d                	lui	t5,0x7
    668e:	0005                	c.nop	1
    6690:	0500                	addi	s0,sp,640
    6692:	410b0277          	0x410b0277
    6696:	0008                	0x8
    6698:	0000                	unimp
    669a:	c70a                	sw	sp,140(sp)
    669c:	0005                	c.nop	1
    669e:	bd00                	fsd	fs0,56(a0)
    66a0:	0008                	0x8
    66a2:	0b00                	addi	s0,sp,400
    66a4:	0064                	addi	s1,sp,12
    66a6:	0000                	unimp
    66a8:	0018                	0x18
    66aa:	a106                	fsd	ft1,128(sp)
    66ac:	05000007          	0x5000007
    66b0:	bd04                	fsd	fs1,56(a0)
    66b2:	0008                	0x8
    66b4:	1e00                	addi	s0,sp,816
    66b6:	000008d3          	fadd.s	fa7,ft0,ft0,rne
    66ba:	6d15                	lui	s10,0x5
    66bc:	0004                	0x4
    66be:	0000                	unimp
    66c0:	0405                	addi	s0,s0,1
    66c2:	08c8                	addi	a0,sp,84
    66c4:	0000                	unimp
    66c6:	0405                	addi	s0,s0,1
    66c8:	0190                	addi	a2,sp,192
    66ca:	0000                	unimp
    66cc:	ea1e                	fsw	ft7,20(sp)
    66ce:	0008                	0x8
    66d0:	1500                	addi	s0,sp,672
    66d2:	005d                	c.nop	23
    66d4:	0000                	unimp
    66d6:	0500                	addi	s0,sp,640
    66d8:	f004                	fsw	fs1,32(s0)
    66da:	0008                	0x8
    66dc:	0500                	addi	s0,sp,640
    66de:	df04                	sw	s1,56(a4)
    66e0:	0008                	0x8
    66e2:	0a00                	addi	s0,sp,272
    66e4:	0661                	addi	a2,a2,24
    66e6:	0000                	unimp
    66e8:	0906                	slli	s2,s2,0x1
    66ea:	0000                	unimp
    66ec:	0000640b          	0x640b
    66f0:	0200                	addi	s0,sp,256
    66f2:	1f00                	addi	s0,sp,944
    66f4:	053d                	addi	a0,a0,15
    66f6:	0000                	unimp
    66f8:	0705                	addi	a4,a4,1
    66fa:	046d1703          	lh	a4,70(s10) # 5046 <__exponent+0x3e>
    66fe:	0000                	unimp
    6700:	361f 0005 0500      	0x5000005361f
    6706:	0308                	addi	a0,sp,384
    6708:	731d                	lui	t1,0xfffe7
    670a:	0004                	0x4
    670c:	2000                	fld	fs0,0(s0)
    670e:	032d                	addi	t1,t1,11
    6710:	0000                	unimp
    6712:	9a06                	add	s4,s4,ra
    6714:	4116                	lw	sp,68(sp)
    6716:	0000                	unimp
    6718:	2000                	fld	fs0,0(s0)
    671a:	00000037          	lui	zero,0x0
    671e:	9b06                	add	s6,s6,ra
    6720:	5d15                	li	s10,-27
    6722:	0000                	unimp
    6724:	0a00                	addi	s0,sp,272
    6726:	05c1                	addi	a1,a1,16
    6728:	0000                	unimp
    672a:	0948                	addi	a0,sp,148
    672c:	0000                	unimp
    672e:	0000640b          	0x640b
    6732:	0100                	addi	s0,sp,128
    6734:	2000                	fld	fs0,0(s0)
    6736:	0262                	slli	tp,tp,0x18
    6738:	0000                	unimp
    673a:	9e06                	add	t3,t3,ra
    673c:	00093817          	auipc	a6,0x93
    6740:	0400                	addi	s0,sp,512
    6742:	008d                	addi	ra,ra,3
    6744:	0000                	unimp
    6746:	33185e07          	0x33185e07
    674a:	0000                	unimp
    674c:	0400                	addi	s0,sp,512
    674e:	06a8                	addi	a0,sp,840
    6750:	0000                	unimp
    6752:	3a185f07          	0x3a185f07
    6756:	0000                	unimp
    6758:	0400                	addi	s0,sp,512
    675a:	0000074b          	fnmsub.s	fa4,ft0,ft0,ft0,rne
    675e:	5d186007          	0x5d186007
    6762:	0000                	unimp
    6764:	2100                	fld	fs0,0(a0)
    6766:	096c                	addi	a1,sp,156
    6768:	0000                	unimp
    676a:	0802                	c.slli64	a6
    676c:	9504                	0x9504
    676e:	0004                	0x4
    6770:	0400                	addi	s0,sp,512
    6772:	02c6                	slli	t0,t0,0x11
    6774:	0000                	unimp
    6776:	2c186207          	0x2c186207
    677a:	0000                	unimp
    677c:	0400                	addi	s0,sp,512
    677e:	00000017          	auipc	zero,0x0
    6782:	64186307          	0x64186307
    6786:	0000                	unimp
    6788:	2000                	fld	fs0,0(s0)
    678a:	00000663          	beqz	zero,6796 <_dtoa_r+0x1aa>
    678e:	900fba07          	fld	fs4,-1792(t6)
    6792:	0009                	c.nop	2
    6794:	2000                	fld	fs0,0(s0)
    6796:	0a50                	addi	a2,sp,276
    6798:	0000                	unimp
    679a:	2501                	jal	6d9a <_dtoa_r+0x7ae>
    679c:	7818                	flw	fa4,48(s0)
    679e:	0009                	c.nop	2
    67a0:	2000                	fld	fs0,0(s0)
    67a2:	0aa9                	addi	s5,s5,10
    67a4:	0000                	unimp
    67a6:	2601                	jal	6aa6 <_dtoa_r+0x4ba>
    67a8:	7818                	flw	fa4,48(s0)
    67aa:	0009                	c.nop	2
    67ac:	2000                	fld	fs0,0(s0)
    67ae:	0a8a                	slli	s5,s5,0x2
    67b0:	0000                	unimp
    67b2:	2701                	jal	6eb2 <_dtoa_r+0x8c6>
    67b4:	7818                	flw	fa4,48(s0)
    67b6:	0009                	c.nop	2
    67b8:	2000                	fld	fs0,0(s0)
    67ba:	0a32                	slli	s4,s4,0xc
    67bc:	0000                	unimp
    67be:	2801                	jal	67ce <_dtoa_r+0x1e2>
    67c0:	7818                	flw	fa4,48(s0)
    67c2:	0009                	c.nop	2
    67c4:	2000                	fld	fs0,0(s0)
    67c6:	00000a6b          	0xa6b
    67ca:	2901                	jal	6bda <_dtoa_r+0x5ee>
    67cc:	7818                	flw	fa4,48(s0)
    67ce:	0009                	c.nop	2
    67d0:	2200                	fld	fs0,0(a2)
    67d2:	0875                	addi	a6,a6,29
    67d4:	0000                	unimp
    67d6:	d201                	beqz	a2,66d6 <_dtoa_r+0xea>
    67d8:	8401                	c.srai64	s0
    67da:	0009                	c.nop	2
    67dc:	d400                	sw	s0,40(s0)
    67de:	0031                	c.nop	12
    67e0:	0800                	addi	s0,sp,16
    67e2:	0000                	unimp
    67e4:	0100                	addi	s0,sp,128
    67e6:	0c9c                	addi	a5,sp,592
    67e8:	000a                	c.slli	zero,0x2
    67ea:	2300                	fld	fs0,0(a4)
    67ec:	00000337          	lui	t1,0x0
    67f0:	d401                	beqz	s0,66f8 <_dtoa_r+0x10c>
    67f2:	0009840b          	0x9840b
    67f6:	0000                	unimp
    67f8:	2400                	fld	fs0,8(s0)
    67fa:	001e                	c.slli	zero,0x7
    67fc:	0000                	unimp
    67fe:	cc01                	beqz	s0,6816 <_dtoa_r+0x22a>
    6800:	6001                	0x6001
    6802:	0009                	c.nop	2
    6804:	0100                	addi	s0,sp,128
    6806:	0a36                	slli	s4,s4,0xd
    6808:	0000                	unimp
    680a:	1525                	addi	a0,a0,-23
    680c:	000c                	0xc
    680e:	0100                	addi	s0,sp,128
    6810:	0ecc                	addi	a1,sp,852
    6812:	0954                	addi	a3,sp,148
    6814:	0000                	unimp
    6816:	6326                	flw	ft6,72(sp)
    6818:	6372                	flw	ft6,28(sp)
    681a:	0100                	addi	s0,sp,128
    681c:	1dcc                	addi	a1,sp,756
    681e:	0960                	addi	s0,sp,156
    6820:	0000                	unimp
    6822:	2200                	fld	fs0,0(a2)
    6824:	0bd4                	addi	a3,sp,468
    6826:	0000                	unimp
    6828:	c501                	beqz	a0,6830 <_dtoa_r+0x244>
    682a:	6001                	0x6001
    682c:	0009                	c.nop	2
    682e:	3c00                	fld	fs0,56(s0)
    6830:	002a                	c.slli	zero,0xa
    6832:	1000                	addi	s0,sp,32
    6834:	0005                	c.nop	1
    6836:	0100                	addi	s0,sp,128
    6838:	f59c                	fsw	fa5,40(a1)
    683a:	2700000b          	0x2700000b
    683e:	0c15                	addi	s8,s8,5
    6840:	0000                	unimp
    6842:	c501                	beqz	a0,684a <_dtoa_r+0x25e>
    6844:	0009900f          	0x9900f
    6848:	5600                	lw	s0,40(a2)
    684a:	004a                	c.slli	zero,0x12
    684c:	2800                	fld	fs0,16(s0)
    684e:	00637263          	bgeu	t1,t1,6852 <_dtoa_r+0x266>
    6852:	c501                	beqz	a0,685a <_dtoa_r+0x26e>
    6854:	601e                	flw	ft0,196(sp)
    6856:	0009                	c.nop	2
    6858:	7700                	flw	fs0,40(a4)
    685a:	004a                	c.slli	zero,0x12
    685c:	2900                	fld	fs0,16(a0)
    685e:	0a0c                	addi	a1,sp,272
    6860:	0000                	unimp
    6862:	2a3c                	fld	fa5,80(a2)
    6864:	0000                	unimp
    6866:	0284                	addi	s1,sp,320
    6868:	0000                	unimp
    686a:	c701                	beqz	a4,6872 <_dtoa_r+0x286>
    686c:	000b3a0b          	0xb3a0b
    6870:	2a00                	fld	fs0,16(a2)
    6872:	0a29                	addi	s4,s4,10
    6874:	0000                	unimp
    6876:	00004aa3          	0x4aa3
    687a:	1d2a                	slli	s10,s10,0x2a
    687c:	000a                	c.slli	zero,0x2
    687e:	b600                	fsd	fs0,40(a2)
    6880:	004a                	c.slli	zero,0x12
    6882:	2b00                	fld	fs0,16(a4)
    6884:	0bf5                	addi	s7,s7,29
    6886:	0000                	unimp
    6888:	2a3c                	fld	fa5,80(a2)
    688a:	0000                	unimp
    688c:	0770                	addi	a2,sp,908
    688e:	0000                	unimp
    6890:	ce01                	beqz	a2,68a8 <_dtoa_r+0x2bc>
    6892:	2a0c                	fld	fa1,16(a2)
    6894:	0c12                	slli	s8,s8,0x4
    6896:	0000                	unimp
    6898:	4ac9                	li	s5,18
    689a:	0000                	unimp
    689c:	062a                	slli	a2,a2,0xa
    689e:	000c                	0xc
    68a0:	dc00                	sw	s0,56(s0)
    68a2:	004a                	c.slli	zero,0x12
    68a4:	2c00                	fld	fs0,24(s0)
    68a6:	0c1f 0000 2a3c      	0x2a3c00000c1f
    68ac:	0000                	unimp
    68ae:	0790                	addi	a2,sp,960
    68b0:	0000                	unimp
    68b2:	c001                	beqz	s0,68b2 <_dtoa_r+0x2c6>
    68b4:	000afc0b          	0xafc0b
    68b8:	2a00                	fld	fs0,16(a2)
    68ba:	0c3c                	addi	a5,sp,536
    68bc:	0000                	unimp
    68be:	4b00                	lw	s0,16(a4)
    68c0:	0000                	unimp
    68c2:	302a                	fld	ft0,168(sp)
    68c4:	000c                	0xc
    68c6:	9b00                	0x9b00
    68c8:	2d00004b          	0x2d00004b
    68cc:	0790                	addi	a2,sp,960
    68ce:	0000                	unimp
    68d0:	482e                	lw	a6,200(sp)
    68d2:	000c                	0xc
    68d4:	2f00                	fld	fs0,24(a4)
    68d6:	0c52                	slli	s8,s8,0x14
    68d8:	0000                	unimp
    68da:	4c61                	li	s8,24
    68dc:	0000                	unimp
    68de:	000c5e2f          	0xc5e2f
    68e2:	7b00                	flw	fs0,48(a4)
    68e4:	004c                	addi	a1,sp,4
    68e6:	0000                	unimp
    68e8:	2b00                	fld	fs0,16(a4)
    68ea:	0c1f 0000 2b84      	0x2b8400000c1f
    68f0:	0000                	unimp
    68f2:	07b0                	addi	a2,sp,968
    68f4:	0000                	unimp
    68f6:	c101                	beqz	a0,68f6 <_dtoa_r+0x30a>
    68f8:	0c3c2a0b          	0xc3c2a0b
    68fc:	0000                	unimp
    68fe:	00004cef          	jal	s9,a8fe <__subdf3+0x53e>
    6902:	302a                	fld	ft0,168(sp)
    6904:	000c                	0xc
    6906:	7f00                	flw	fs0,56(a4)
    6908:	004d                	c.nop	19
    690a:	2d00                	fld	fs0,24(a0)
    690c:	07b0                	addi	a2,sp,968
    690e:	0000                	unimp
    6910:	482e                	lw	a6,200(sp)
    6912:	000c                	0xc
    6914:	2e00                	fld	fs0,24(a2)
    6916:	0c52                	slli	s8,s8,0x14
    6918:	0000                	unimp
    691a:	000c5e2f          	0xc5e2f
    691e:	4500                	lw	s0,8(a0)
    6920:	004e                	c.slli	zero,0x13
    6922:	0000                	unimp
    6924:	0000                	unimp
    6926:	3000                	fld	fs0,32(s0)
    6928:	0a0c                	addi	a1,sp,272
    692a:	0000                	unimp
    692c:	2cc4                	fld	fs1,152(s1)
    692e:	0000                	unimp
    6930:	0284                	addi	s1,sp,320
    6932:	0000                	unimp
    6934:	c801                	beqz	s0,6944 <_dtoa_r+0x358>
    6936:	0a29310b          	0xa29310b
    693a:	0000                	unimp
    693c:	1d2a                	slli	s10,s10,0x2a
    693e:	000a                	c.slli	zero,0x2
    6940:	ad00                	fsd	fs0,24(a0)
    6942:	004e                	c.slli	zero,0x13
    6944:	2b00                	fld	fs0,16(a4)
    6946:	0bf5                	addi	s7,s7,29
    6948:	0000                	unimp
    694a:	2cc4                	fld	fs1,152(s1)
    694c:	0000                	unimp
    694e:	07c8                	addi	a0,sp,964
    6950:	0000                	unimp
    6952:	ce01                	beqz	a2,696a <_dtoa_r+0x37e>
    6954:	310c                	fld	fa1,32(a0)
    6956:	0c12                	slli	s8,s8,0x4
    6958:	0000                	unimp
    695a:	062a                	slli	a2,a2,0xa
    695c:	000c                	0xc
    695e:	d000                	sw	s0,32(s0)
    6960:	004e                	c.slli	zero,0x13
    6962:	2c00                	fld	fs0,24(s0)
    6964:	0c1f 0000 2cc4      	0x2cc400000c1f
    696a:	0000                	unimp
    696c:	07e8                	addi	a0,sp,972
    696e:	0000                	unimp
    6970:	c001                	beqz	s0,6970 <_dtoa_r+0x384>
    6972:	000bb60b          	0xbb60b
    6976:	2a00                	fld	fs0,16(a2)
    6978:	0c3c                	addi	a5,sp,536
    697a:	0000                	unimp
    697c:	00004ef7          	0x4ef7
    6980:	302a                	fld	ft0,168(sp)
    6982:	000c                	0xc
    6984:	8700                	0x8700
    6986:	2d00004f          	0x2d00004f
    698a:	07e8                	addi	a0,sp,972
    698c:	0000                	unimp
    698e:	482e                	lw	a6,200(sp)
    6990:	000c                	0xc
    6992:	2e00                	fld	fs0,24(a2)
    6994:	0c52                	slli	s8,s8,0x14
    6996:	0000                	unimp
    6998:	000c5e2f          	0xc5e2f
    699c:	4d00                	lw	s0,24(a0)
    699e:	0050                	addi	a2,sp,4
    69a0:	0000                	unimp
    69a2:	2b00                	fld	fs0,16(a4)
    69a4:	0c1f 0000 2e0c      	0x2e0c00000c1f
    69aa:	0000                	unimp
    69ac:	0808                	addi	a0,sp,16
    69ae:	0000                	unimp
    69b0:	c101                	beqz	a0,69b0 <_dtoa_r+0x3c4>
    69b2:	0c3c2a0b          	0xc3c2a0b
    69b6:	0000                	unimp
    69b8:	50c1                	li	ra,-16
    69ba:	0000                	unimp
    69bc:	302a                	fld	ft0,168(sp)
    69be:	000c                	0xc
    69c0:	6600                	flw	fs0,8(a2)
    69c2:	0051                	c.nop	20
    69c4:	2d00                	fld	fs0,24(a0)
    69c6:	0808                	addi	a0,sp,16
    69c8:	0000                	unimp
    69ca:	482e                	lw	a6,200(sp)
    69cc:	000c                	0xc
    69ce:	2e00                	fld	fs0,24(a2)
    69d0:	0c52                	slli	s8,s8,0x14
    69d2:	0000                	unimp
    69d4:	000c5e2f          	0xc5e2f
    69d8:	2c00                	fld	fs0,24(s0)
    69da:	0052                	c.slli	zero,0x14
    69dc:	0000                	unimp
    69de:	0000                	unimp
    69e0:	0000                	unimp
    69e2:	5f24                	lw	s1,120(a4)
    69e4:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    69e8:	01be                	slli	gp,gp,0xf
    69ea:	0960                	addi	s0,sp,156
    69ec:	0000                	unimp
    69ee:	1f01                	addi	t5,t5,-32
    69f0:	000c                	0xc
    69f2:	2500                	fld	fs0,8(a0)
    69f4:	0c15                	addi	s8,s8,5
    69f6:	0000                	unimp
    69f8:	be01                	j	6508 <quorem+0x15c>
    69fa:	0009600f          	0x9600f
    69fe:	2600                	fld	fs0,8(a2)
    6a00:	00637263          	bgeu	t1,t1,6a04 <_dtoa_r+0x418>
    6a04:	be01                	j	6514 <quorem+0x168>
    6a06:	601e                	flw	ft0,196(sp)
    6a08:	0009                	c.nop	2
    6a0a:	0000                	unimp
    6a0c:	0924                	addi	s1,sp,152
    6a0e:	000c                	0xc
    6a10:	0100                	addi	s0,sp,128
    6a12:	01a5                	addi	gp,gp,9
    6a14:	0960                	addi	s0,sp,156
    6a16:	0000                	unimp
    6a18:	6b01                	0x6b01
    6a1a:	000c                	0xc
    6a1c:	2500                	fld	fs0,8(a0)
    6a1e:	0171                	addi	sp,sp,28
    6a20:	0000                	unimp
    6a22:	a501                	j	7022 <_dtoa_r+0xa36>
    6a24:	840d                	srai	s0,s0,0x3
    6a26:	0009                	c.nop	2
    6a28:	2600                	fld	fs0,8(a2)
    6a2a:	00637263          	bgeu	t1,t1,6a2e <_dtoa_r+0x442>
    6a2e:	a501                	j	702e <_dtoa_r+0xa42>
    6a30:	601a                	flw	ft0,132(sp)
    6a32:	0009                	c.nop	2
    6a34:	3200                	fld	fs0,32(a2)
    6a36:	0069                	c.nop	26
    6a38:	a701                	j	7138 <_dtoa_r+0xb4c>
    6a3a:	0009840b          	0x9840b
    6a3e:	3200                	fld	fs0,32(a2)
    6a40:	3178                	fld	fa4,224(a0)
    6a42:	0036                	c.slli	zero,0xd
    6a44:	a701                	j	7144 <_dtoa_r+0xb58>
    6a46:	8412                	mv	s0,tp
    6a48:	0009                	c.nop	2
    6a4a:	3300                	fld	fs0,32(a4)
    6a4c:	00000c0f          	0xc0f
    6a50:	a701                	j	7150 <_dtoa_r+0xb64>
    6a52:	0009841b          	0x9841b
    6a56:	0000                	unimp
    6a58:	8622                	mv	a2,s0
    6a5a:	0008                	0x8
    6a5c:	0100                	addi	s0,sp,128
    6a5e:	096c012b          	0x96c012b
    6a62:	0000                	unimp
    6a64:	2758                	fld	fa4,136(a4)
    6a66:	0000                	unimp
    6a68:	0064                	addi	s1,sp,12
    6a6a:	0000                	unimp
    6a6c:	9c01                	0x9c01
    6a6e:	0ca4                	addi	s1,sp,600
    6a70:	0000                	unimp
    6a72:	6928                	flw	fa0,80(a0)
    6a74:	0100                	addi	s0,sp,128
    6a76:	005d112b          	0x5d112b
    6a7a:	0000                	unimp
    6a7c:	5294                	lw	a3,32(a3)
    6a7e:	0000                	unimp
    6a80:	3734                	fld	fa3,104(a4)
    6a82:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    6a86:	0c2d                	addi	s8,s8,11
    6a88:	096c                	addi	a1,sp,156
    6a8a:	0000                	unimp
    6a8c:	52b5                	li	t0,-19
    6a8e:	0000                	unimp
    6a90:	3500                	fld	fs0,40(a0)
    6a92:	0c1f 0000 0000      	0xc1f
    6a98:	0000                	unimp
    6a9a:	0000                	unimp
    6a9c:	0000                	unimp
    6a9e:	9c01                	0x9c01
    6aa0:	0ce1                	addi	s9,s9,24
    6aa2:	0000                	unimp
    6aa4:	302a                	fld	ft0,168(sp)
    6aa6:	000c                	0xc
    6aa8:	0000                	unimp
    6aaa:	2a000053          	fmin.d	ft0,ft0,ft0
    6aae:	0c3c                	addi	a5,sp,536
    6ab0:	0000                	unimp
    6ab2:	53c6                	lw	t2,112(sp)
    6ab4:	0000                	unimp
    6ab6:	482e                	lw	a6,200(sp)
    6ab8:	000c                	0xc
    6aba:	2f00                	fld	fs0,24(a4)
    6abc:	0c52                	slli	s8,s8,0x14
    6abe:	0000                	unimp
    6ac0:	00005497          	auipc	s1,0x5
    6ac4:	000c5e2f          	0xc5e2f
    6ac8:	b100                	fsd	fs0,32(a0)
    6aca:	0054                	addi	a3,sp,4
    6acc:	0000                	unimp
    6ace:	f535                	bnez	a0,6a3a <_dtoa_r+0x44e>
    6ad0:	bc00000b          	0xbc00000b
    6ad4:	80000027          	0x80000027
    6ad8:	0002                	c.slli64	zero
    6ada:	0100                	addi	s0,sp,128
    6adc:	879c                	0x879c
    6ade:	000d                	c.nop	3
    6ae0:	2a00                	fld	fs0,16(a2)
    6ae2:	0c06                	slli	s8,s8,0x1
    6ae4:	0000                	unimp
    6ae6:	5525                	li	a0,-23
    6ae8:	0000                	unimp
    6aea:	122a                	slli	tp,tp,0x2a
    6aec:	000c                	0xc
    6aee:	4600                	lw	s0,8(a2)
    6af0:	0055                	c.nop	21
    6af2:	2c00                	fld	fs0,24(s0)
    6af4:	0c1f 0000 27bc      	0x27bc00000c1f
    6afa:	0000                	unimp
    6afc:	0740                	addi	s0,sp,900
    6afe:	0000                	unimp
    6b00:	c001                	beqz	s0,6b00 <_dtoa_r+0x514>
    6b02:	000d4a0b          	0xd4a0b
    6b06:	2a00                	fld	fs0,16(a2)
    6b08:	0c3c                	addi	a5,sp,536
    6b0a:	0000                	unimp
    6b0c:	5564                	lw	s1,108(a0)
    6b0e:	0000                	unimp
    6b10:	302a                	fld	ft0,168(sp)
    6b12:	000c                	0xc
    6b14:	1500                	addi	s0,sp,672
    6b16:	0056                	c.slli	zero,0x15
    6b18:	2d00                	fld	fs0,24(a0)
    6b1a:	0740                	addi	s0,sp,900
    6b1c:	0000                	unimp
    6b1e:	482e                	lw	a6,200(sp)
    6b20:	000c                	0xc
    6b22:	2f00                	fld	fs0,24(a4)
    6b24:	0c52                	slli	s8,s8,0x14
    6b26:	0000                	unimp
    6b28:	000056db          	0x56db
    6b2c:	000c5e2f          	0xc5e2f
    6b30:	f500                	fsw	fs0,40(a0)
    6b32:	0056                	c.slli	zero,0x15
    6b34:	0000                	unimp
    6b36:	2b00                	fld	fs0,16(a4)
    6b38:	0c1f 0000 28fc      	0x28fc00000c1f
    6b3e:	0000                	unimp
    6b40:	0758                	addi	a4,sp,900
    6b42:	0000                	unimp
    6b44:	c101                	beqz	a0,6b44 <_dtoa_r+0x558>
    6b46:	0c3c2a0b          	0xc3c2a0b
    6b4a:	0000                	unimp
    6b4c:	5769                	li	a4,-6
    6b4e:	0000                	unimp
    6b50:	302a                	fld	ft0,168(sp)
    6b52:	000c                	0xc
    6b54:	0e00                	addi	s0,sp,784
    6b56:	0058                	addi	a4,sp,4
    6b58:	2d00                	fld	fs0,24(a0)
    6b5a:	0758                	addi	a4,sp,900
    6b5c:	0000                	unimp
    6b5e:	482e                	lw	a6,200(sp)
    6b60:	000c                	0xc
    6b62:	2e00                	fld	fs0,24(a2)
    6b64:	0c52                	slli	s8,s8,0x14
    6b66:	0000                	unimp
    6b68:	000c5e2f          	0xc5e2f
    6b6c:	d400                	sw	s0,40(s0)
    6b6e:	0058                	addi	a4,sp,4
    6b70:	0000                	unimp
    6b72:	0000                	unimp
    6b74:	0c36                	slli	s8,s8,0xd
    6b76:	000a                	c.slli	zero,0x2
    6b78:	4c00                	lw	s0,24(s0)
    6b7a:	8800002f          	0x8800002f
    6b7e:	0002                	c.slli64	zero
    6b80:	0100                	addi	s0,sp,128
    6b82:	2a9c                	fld	fa5,16(a3)
    6b84:	0a1d                	addi	s4,s4,7
    6b86:	0000                	unimp
    6b88:	593c                	lw	a5,112(a0)
    6b8a:	0000                	unimp
    6b8c:	292a                	fld	fs2,136(sp)
    6b8e:	000a                	c.slli	zero,0x2
    6b90:	5d00                	lw	s0,56(a0)
    6b92:	0059                	c.nop	22
    6b94:	2b00                	fld	fs0,16(a4)
    6b96:	0bf5                	addi	s7,s7,29
    6b98:	0000                	unimp
    6b9a:	2f4c                	fld	fa1,152(a4)
    6b9c:	0000                	unimp
    6b9e:	0820                	addi	s0,sp,24
    6ba0:	0000                	unimp
    6ba2:	ce01                	beqz	a2,6bba <_dtoa_r+0x5ce>
    6ba4:	2a0c                	fld	fa1,16(a2)
    6ba6:	0c12                	slli	s8,s8,0x4
    6ba8:	0000                	unimp
    6baa:	597e                	lw	s2,252(sp)
    6bac:	0000                	unimp
    6bae:	062a                	slli	a2,a2,0xa
    6bb0:	000c                	0xc
    6bb2:	9100                	0x9100
    6bb4:	0059                	c.nop	22
    6bb6:	2c00                	fld	fs0,24(s0)
    6bb8:	0c1f 0000 2f4c      	0x2f4c00000c1f
    6bbe:	0000                	unimp
    6bc0:	0840                	addi	s0,sp,20
    6bc2:	0000                	unimp
    6bc4:	c001                	beqz	s0,6bc4 <_dtoa_r+0x5d8>
    6bc6:	000e0e0b          	0xe0e0b
    6bca:	2a00                	fld	fs0,16(a2)
    6bcc:	0c3c                	addi	a5,sp,536
    6bce:	0000                	unimp
    6bd0:	59a4                	lw	s1,112(a1)
    6bd2:	0000                	unimp
    6bd4:	302a                	fld	ft0,168(sp)
    6bd6:	000c                	0xc
    6bd8:	3f00                	fld	fs0,56(a4)
    6bda:	005a                	c.slli	zero,0x16
    6bdc:	2d00                	fld	fs0,24(a0)
    6bde:	0840                	addi	s0,sp,20
    6be0:	0000                	unimp
    6be2:	482e                	lw	a6,200(sp)
    6be4:	000c                	0xc
    6be6:	2f00                	fld	fs0,24(a4)
    6be8:	0c52                	slli	s8,s8,0x14
    6bea:	0000                	unimp
    6bec:	5b05                	li	s6,-31
    6bee:	0000                	unimp
    6bf0:	000c5e2f          	0xc5e2f
    6bf4:	1f00                	addi	s0,sp,944
    6bf6:	0000005b          	0x5b
    6bfa:	2b00                	fld	fs0,16(a4)
    6bfc:	0c1f 0000 3094      	0x309400000c1f
    6c02:	0000                	unimp
    6c04:	0860                	addi	s0,sp,28
    6c06:	0000                	unimp
    6c08:	c101                	beqz	a0,6c08 <_dtoa_r+0x61c>
    6c0a:	0c3c2a0b          	0xc3c2a0b
    6c0e:	0000                	unimp
    6c10:	00005b93          	srli	s7,zero,0x0
    6c14:	302a                	fld	ft0,168(sp)
    6c16:	000c                	0xc
    6c18:	3800                	fld	fs0,48(s0)
    6c1a:	005c                	addi	a5,sp,4
    6c1c:	2d00                	fld	fs0,24(a0)
    6c1e:	0860                	addi	s0,sp,28
    6c20:	0000                	unimp
    6c22:	482e                	lw	a6,200(sp)
    6c24:	000c                	0xc
    6c26:	2e00                	fld	fs0,24(a2)
    6c28:	0c52                	slli	s8,s8,0x14
    6c2a:	0000                	unimp
    6c2c:	000c5e2f          	0xc5e2f
    6c30:	fe00                	fsw	fs0,56(a2)
    6c32:	005c                	addi	a5,sp,4
    6c34:	0000                	unimp
    6c36:	0000                	unimp
    6c38:	0000                	unimp
    6c3a:	000009a3          	sb	zero,19(zero) # 13 <_start+0x13>
    6c3e:	0004                	0x4
    6c40:	00001427          	0x1427
    6c44:	0104                	addi	s1,sp,128
    6c46:	040e                	slli	s0,s0,0x3
    6c48:	0000                	unimp
    6c4a:	370c                	fld	fa1,40(a4)
    6c4c:	000c                	0xc
    6c4e:	1300                	addi	s0,sp,416
    6c50:	b0000007          	0xb0000007
    6c54:	0008                	0x8
    6c56:	0000                	unimp
    6c58:	0000                	unimp
    6c5a:	be00                	fsd	fs0,56(a2)
    6c5c:	007c                	addi	a5,sp,12
    6c5e:	0200                	addi	s0,sp,256
    6c60:	0601                	addi	a2,a2,0
    6c62:	0612                	slli	a2,a2,0x4
    6c64:	0000                	unimp
    6c66:	0102                	c.slli64	sp
    6c68:	1008                	addi	a0,sp,32
    6c6a:	0006                	c.slli	zero,0x1
    6c6c:	0200                	addi	s0,sp,256
    6c6e:	0502                	c.slli64	a0
    6c70:	04cc                	addi	a1,sp,580
    6c72:	0000                	unimp
    6c74:	0202                	c.slli64	tp
    6c76:	0006ea07          	0x6ea07
    6c7a:	0200                	addi	s0,sp,256
    6c7c:	0504                	addi	s1,sp,640
    6c7e:	0000036b          	0x36b
    6c82:	0402                	c.slli64	s0
    6c84:	00019d07          	0x19d07
    6c88:	0200                	addi	s0,sp,256
    6c8a:	0508                	addi	a0,sp,640
    6c8c:	0366                	slli	t1,t1,0x19
    6c8e:	0000                	unimp
    6c90:	0802                	c.slli64	a6
    6c92:	00019807          	0x19807
    6c96:	0300                	addi	s0,sp,384
    6c98:	0504                	addi	s1,sp,640
    6c9a:	6e69                	lui	t3,0x1a
    6c9c:	0074                	addi	a3,sp,12
    6c9e:	0402                	c.slli64	s0
    6ca0:	0001a207          	flw	ft4,0(gp) # 1001430 <__global_pointer$>
    6ca4:	0200                	addi	s0,sp,256
    6ca6:	0410                	addi	a2,sp,512
    6ca8:	0490                	addi	a2,sp,576
    6caa:	0000                	unimp
    6cac:	9c04                	0x9c04
    6cae:	0004                	0x4
    6cb0:	0200                	addi	s0,sp,256
    6cb2:	1922                	slli	s2,s2,0x28
    6cb4:	007e                	c.slli	zero,0x1f
    6cb6:	0000                	unimp
    6cb8:	0405                	addi	s0,s0,1
    6cba:	0084                	addi	s1,sp,64
    6cbc:	0000                	unimp
    6cbe:	0106                	slli	sp,sp,0x1
    6cc0:	0006                	c.slli	zero,0x1
    6cc2:	0400                	addi	s0,sp,512
    6cc4:	0731                	addi	a4,a4,12
    6cc6:	0000                	unimp
    6cc8:	410e2c03          	lw	s8,1040(t3) # 1a410 <_data_lma+0xf298>
    6ccc:	0000                	unimp
    6cce:	0400                	addi	s0,sp,512
    6cd0:	00ee                	slli	ra,ra,0x1b
    6cd2:	0000                	unimp
    6cd4:	410e7203          	0x410e7203
    6cd8:	0000                	unimp
    6cda:	0400                	addi	s0,sp,512
    6cdc:	06da                	slli	a3,a3,0x16
    6cde:	0000                	unimp
    6ce0:	5d179103          	lh	sp,1489(a5)
    6ce4:	0000                	unimp
    6ce6:	0700                	addi	s0,sp,896
    6ce8:	000005cb          	fnmsub.s	fa1,ft0,ft0,ft0,rne
    6cec:	6504                	flw	fs1,8(a0)
    6cee:	1701                	addi	a4,a4,-32
    6cf0:	0064                	addi	s1,sp,12
    6cf2:	0000                	unimp
    6cf4:	0408                	addi	a0,sp,512
    6cf6:	dc03a603          	lw	a2,-576(t2)
    6cfa:	0000                	unimp
    6cfc:	0900                	addi	s0,sp,144
    6cfe:	02fa                	slli	t0,t0,0x1e
    6d00:	0000                	unimp
    6d02:	ad0ca803          	lw	a6,-1328(s9)
    6d06:	0000                	unimp
    6d08:	0900                	addi	s0,sp,144
    6d0a:	0000052f          	0x52f
    6d0e:	dc13a903          	lw	s2,-575(t2)
    6d12:	0000                	unimp
    6d14:	0000                	unimp
    6d16:	2c0a                	fld	fs8,128(sp)
    6d18:	0000                	unimp
    6d1a:	ec00                	fsw	fs0,24(s0)
    6d1c:	0000                	unimp
    6d1e:	0b00                	addi	s0,sp,400
    6d20:	0064                	addi	s1,sp,12
    6d22:	0000                	unimp
    6d24:	080c0003          	lb	zero,128(s8) # 1080 <__stack_size+0x80>
    6d28:	1009a303          	lw	t1,256(s3) # 5b92 <_printf_i+0x12a>
    6d2c:	0001                	nop
    6d2e:	0d00                	addi	s0,sp,656
    6d30:	0164                	addi	s1,sp,140
    6d32:	0000                	unimp
    6d34:	5d07a503          	lw	a0,1488(a5)
    6d38:	0000                	unimp
    6d3a:	0000                	unimp
    6d3c:	6a0d                	lui	s4,0x3
    6d3e:	0002                	c.slli64	zero
    6d40:	0300                	addi	s0,sp,384
    6d42:	05aa                	slli	a1,a1,0xa
    6d44:	00ba                	slli	ra,ra,0xe
    6d46:	0000                	unimp
    6d48:	0004                	0x4
    6d4a:	ea04                	fsw	fs1,16(a2)
    6d4c:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
    6d50:	00ec03ab          	0xec03ab
    6d54:	0000                	unimp
    6d56:	e204                	fsw	fs1,0(a2)
    6d58:	0002                	c.slli64	zero
    6d5a:	0300                	addi	s0,sp,384
    6d5c:	00721baf          	0x721baf
    6d60:	0000                	unimp
    6d62:	040e                	slli	s0,s0,0x3
    6d64:	9e04                	0x9e04
    6d66:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    6d6a:	1916                	slli	s2,s2,0x25
    6d6c:	0048                	addi	a0,sp,4
    6d6e:	0000                	unimp
    6d70:	0001280f          	0x1280f
    6d74:	1800                	addi	s0,sp,48
    6d76:	2f05                	jal	74a6 <_dtoa_r+0xeba>
    6d78:	9008                	0x9008
    6d7a:	0001                	nop
    6d7c:	0d00                	addi	s0,sp,656
    6d7e:	0000079b          	0x79b
    6d82:	3105                	jal	69a2 <_dtoa_r+0x3b6>
    6d84:	00019013          	slli	zero,gp,0x0
    6d88:	0000                	unimp
    6d8a:	5f10                	lw	a2,56(a4)
    6d8c:	3205006b          	0x3205006b
    6d90:	00005d07          	0x5d07
    6d94:	0400                	addi	s0,sp,512
    6d96:	940d                	srai	s0,s0,0x23
    6d98:	0005                	c.nop	1
    6d9a:	0500                	addi	s0,sp,640
    6d9c:	0b32                	slli	s6,s6,0xc
    6d9e:	005d                	c.nop	23
    6da0:	0000                	unimp
    6da2:	0d08                	addi	a0,sp,656
    6da4:	050c                	addi	a1,sp,640
    6da6:	0000                	unimp
    6da8:	3205                	jal	66c8 <_dtoa_r+0xdc>
    6daa:	5d14                	lw	a3,56(a0)
    6dac:	0000                	unimp
    6dae:	0c00                	addi	s0,sp,528
    6db0:	c40d                	beqz	s0,6dda <_dtoa_r+0x7ee>
    6db2:	0001                	nop
    6db4:	0500                	addi	s0,sp,640
    6db6:	1b32                	slli	s6,s6,0x2c
    6db8:	005d                	c.nop	23
    6dba:	0000                	unimp
    6dbc:	1010                	addi	a2,sp,32
    6dbe:	785f 0500 0b33      	0xb330500785f
    6dc4:	0196                	slli	gp,gp,0x5
    6dc6:	0000                	unimp
    6dc8:	0014                	0x14
    6dca:	0405                	addi	s0,s0,1
    6dcc:	0136                	slli	sp,sp,0xd
    6dce:	0000                	unimp
    6dd0:	2a0a                	fld	fs4,128(sp)
    6dd2:	0001                	nop
    6dd4:	a600                	fsd	fs0,8(a2)
    6dd6:	0001                	nop
    6dd8:	0b00                	addi	s0,sp,400
    6dda:	0064                	addi	s1,sp,12
    6ddc:	0000                	unimp
    6dde:	0000                	unimp
    6de0:	0005bf0f          	0x5bf0f
    6de4:	2400                	fld	fs0,8(s0)
    6de6:	3705                	jal	6d06 <_dtoa_r+0x71a>
    6de8:	2908                	fld	fa0,16(a0)
    6dea:	0002                	c.slli64	zero
    6dec:	0d00                	addi	s0,sp,656
    6dee:	0000022b          	0x22b
    6df2:	3905                	jal	6a22 <_dtoa_r+0x436>
    6df4:	5d09                	li	s10,-30
    6df6:	0000                	unimp
    6df8:	0000                	unimp
    6dfa:	760d                	lui	a2,0xfffe3
    6dfc:	0001                	nop
    6dfe:	0500                	addi	s0,sp,640
    6e00:	093a                	slli	s2,s2,0xe
    6e02:	005d                	c.nop	23
    6e04:	0000                	unimp
    6e06:	0d04                	addi	s1,sp,656
    6e08:	0154                	addi	a3,sp,132
    6e0a:	0000                	unimp
    6e0c:	3b05                	jal	6b3c <_dtoa_r+0x550>
    6e0e:	5d09                	li	s10,-30
    6e10:	0000                	unimp
    6e12:	0800                	addi	s0,sp,16
    6e14:	9a0d                	andi	a2,a2,-29
    6e16:	0002                	c.slli64	zero
    6e18:	0500                	addi	s0,sp,640
    6e1a:	093c                	addi	a5,sp,152
    6e1c:	005d                	c.nop	23
    6e1e:	0000                	unimp
    6e20:	0d0c                	addi	a1,sp,656
    6e22:	00000487          	0x487
    6e26:	3d05                	jal	6c56 <_dtoa_r+0x66a>
    6e28:	5d09                	li	s10,-30
    6e2a:	0000                	unimp
    6e2c:	1000                	addi	s0,sp,32
    6e2e:	490d                	li	s2,3
    6e30:	0005                	c.nop	1
    6e32:	0500                	addi	s0,sp,640
    6e34:	093e                	slli	s2,s2,0xf
    6e36:	005d                	c.nop	23
    6e38:	0000                	unimp
    6e3a:	0d14                	addi	a3,sp,656
    6e3c:	0130                	addi	a2,sp,136
    6e3e:	0000                	unimp
    6e40:	3f05                	jal	6d70 <_dtoa_r+0x784>
    6e42:	5d09                	li	s10,-30
    6e44:	0000                	unimp
    6e46:	1800                	addi	s0,sp,48
    6e48:	340d                	jal	686a <_dtoa_r+0x27e>
    6e4a:	0002                	c.slli64	zero
    6e4c:	0500                	addi	s0,sp,640
    6e4e:	0940                	addi	s0,sp,148
    6e50:	005d                	c.nop	23
    6e52:	0000                	unimp
    6e54:	0d1c                	addi	a5,sp,656
    6e56:	03fd                	addi	t2,t2,31
    6e58:	0000                	unimp
    6e5a:	4105                	li	sp,1
    6e5c:	5d09                	li	s10,-30
    6e5e:	0000                	unimp
    6e60:	2000                	fld	fs0,0(s0)
    6e62:	1100                	addi	s0,sp,160
    6e64:	0029                	c.nop	10
    6e66:	0000                	unimp
    6e68:	0108                	addi	a0,sp,128
    6e6a:	4a05                	li	s4,1
    6e6c:	6e08                	flw	fa0,24(a2)
    6e6e:	0002                	c.slli64	zero
    6e70:	0d00                	addi	s0,sp,656
    6e72:	03f5                	addi	t2,t2,29
    6e74:	0000                	unimp
    6e76:	4b05                	li	s6,1
    6e78:	6e0a                	flw	ft8,128(sp)
    6e7a:	0002                	c.slli64	zero
    6e7c:	0000                	unimp
    6e7e:	f50d                	bnez	a0,6da8 <_dtoa_r+0x7bc>
    6e80:	0005                	c.nop	1
    6e82:	0500                	addi	s0,sp,640
    6e84:	094c                	addi	a1,sp,148
    6e86:	026e                	slli	tp,tp,0x1b
    6e88:	0000                	unimp
    6e8a:	1280                	addi	s0,sp,352
    6e8c:	0704                	addi	s1,sp,896
    6e8e:	0000                	unimp
    6e90:	4e05                	li	t3,1
    6e92:	2a0a                	fld	fs4,128(sp)
    6e94:	0001                	nop
    6e96:	0000                	unimp
    6e98:	1201                	addi	tp,tp,-32
    6e9a:	0780                	addi	s0,sp,960
    6e9c:	0000                	unimp
    6e9e:	5105                	li	sp,-31
    6ea0:	2a0a                	fld	fs4,128(sp)
    6ea2:	0001                	nop
    6ea4:	0400                	addi	s0,sp,512
    6ea6:	0001                	nop
    6ea8:	280a                	fld	fa6,128(sp)
    6eaa:	0001                	nop
    6eac:	7e00                	flw	fs0,56(a2)
    6eae:	0002                	c.slli64	zero
    6eb0:	0b00                	addi	s0,sp,400
    6eb2:	0064                	addi	s1,sp,12
    6eb4:	0000                	unimp
    6eb6:	001f bb11 0004      	0x4bb11001f
    6ebc:	9000                	0x9000
    6ebe:	0501                	addi	a0,a0,0
    6ec0:	085d                	addi	a6,a6,23
    6ec2:	02c1                	addi	t0,t0,16
    6ec4:	0000                	unimp
    6ec6:	9b0d                	andi	a4,a4,-29
    6ec8:	05000007          	0x5000007
    6ecc:	125e                	slli	tp,tp,0x37
    6ece:	02c1                	addi	t0,t0,16
    6ed0:	0000                	unimp
    6ed2:	0d00                	addi	s0,sp,656
    6ed4:	00000243          	fmadd.s	ft4,ft0,ft0,ft0,rne
    6ed8:	5f05                	li	t5,-31
    6eda:	5d06                	lw	s10,96(sp)
    6edc:	0000                	unimp
    6ede:	0400                	addi	s0,sp,512
    6ee0:	070d                	addi	a4,a4,3
    6ee2:	0001                	nop
    6ee4:	0500                	addi	s0,sp,640
    6ee6:	0961                	addi	s2,s2,24
    6ee8:	000002c7          	fmsub.s	ft5,ft0,ft0,ft0,rne
    6eec:	0d08                	addi	a0,sp,656
    6eee:	0029                	c.nop	10
    6ef0:	0000                	unimp
    6ef2:	6205                	lui	tp,0x1
    6ef4:	291e                	fld	fs2,448(sp)
    6ef6:	0002                	c.slli64	zero
    6ef8:	8800                	0x8800
    6efa:	0500                	addi	s0,sp,640
    6efc:	7e04                	flw	fs1,56(a2)
    6efe:	0002                	c.slli64	zero
    6f00:	0a00                	addi	s0,sp,272
    6f02:	000002d7          	0x2d7
    6f06:	000002d7          	0x2d7
    6f0a:	0000640b          	0x640b
    6f0e:	1f00                	addi	s0,sp,944
    6f10:	0500                	addi	s0,sp,640
    6f12:	dd04                	sw	s1,56(a0)
    6f14:	0002                	c.slli64	zero
    6f16:	1300                	addi	s0,sp,416
    6f18:	0006820f          	0x6820f
    6f1c:	0800                	addi	s0,sp,16
    6f1e:	7505                	lui	a0,0xfffe1
    6f20:	0608                	addi	a0,sp,768
    6f22:	0d000003          	lb	zero,208(zero) # d0 <main+0x54>
    6f26:	0388                	addi	a0,sp,448
    6f28:	0000                	unimp
    6f2a:	7605                	lui	a2,0xfffe1
    6f2c:	0611                	addi	a2,a2,4
    6f2e:	00000003          	lb	zero,0(zero) # 0 <_start>
    6f32:	0d0d                	addi	s10,s10,3
    6f34:	05000007          	0x5000007
    6f38:	005d0677          	0x5d0677
    6f3c:	0000                	unimp
    6f3e:	0004                	0x4
    6f40:	0405                	addi	s0,s0,1
    6f42:	002c                	addi	a1,sp,8
    6f44:	0000                	unimp
    6f46:	0001bc0f          	0x1bc0f
    6f4a:	6800                	flw	fs0,16(s0)
    6f4c:	b505                	j	6d6c <_dtoa_r+0x780>
    6f4e:	4f08                	lw	a0,24(a4)
    6f50:	0004                	0x4
    6f52:	1000                	addi	s0,sp,32
    6f54:	705f 0500 12b6      	0x12b60500705f
    6f5a:	0306                	slli	t1,t1,0x1
    6f5c:	0000                	unimp
    6f5e:	1000                	addi	s0,sp,32
    6f60:	725f 0500 07b7      	0x7b70500725f
    6f66:	005d                	c.nop	23
    6f68:	0000                	unimp
    6f6a:	1004                	addi	s1,sp,32
    6f6c:	775f 0500 07b8      	0x7b80500775f
    6f72:	005d                	c.nop	23
    6f74:	0000                	unimp
    6f76:	0d08                	addi	a0,sp,656
    6f78:	007f                	0x7f
    6f7a:	0000                	unimp
    6f7c:	b905                	j	6bac <_dtoa_r+0x5c0>
    6f7e:	3309                	jal	6c80 <_dtoa_r+0x694>
    6f80:	0000                	unimp
    6f82:	0c00                	addi	s0,sp,528
    6f84:	bc0d                	j	69b6 <_dtoa_r+0x3ca>
    6f86:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    6f8a:	09ba                	slli	s3,s3,0xe
    6f8c:	00000033          	add	zero,zero,zero
    6f90:	100e                	c.slli	zero,0x23
    6f92:	625f 0066 bb05      	0xbb050066625f
    6f98:	de11                	beqz	a2,6eb4 <_dtoa_r+0x8c8>
    6f9a:	0002                	c.slli64	zero
    6f9c:	1000                	addi	s0,sp,32
    6f9e:	760d                	lui	a2,0xfffe3
    6fa0:	0000                	unimp
    6fa2:	0500                	addi	s0,sp,640
    6fa4:	07bc                	addi	a5,sp,968
    6fa6:	005d                	c.nop	23
    6fa8:	0000                	unimp
    6faa:	0d18                	addi	a4,sp,656
    6fac:	0112                	slli	sp,sp,0x4
    6fae:	0000                	unimp
    6fb0:	c305                	beqz	a4,6fd0 <_dtoa_r+0x9e4>
    6fb2:	280a                	fld	fa6,128(sp)
    6fb4:	0001                	nop
    6fb6:	1c00                	addi	s0,sp,560
    6fb8:	c00d                	beqz	s0,6fda <_dtoa_r+0x9ee>
    6fba:	0000                	unimp
    6fbc:	0500                	addi	s0,sp,640
    6fbe:	1dc5                	addi	s11,s11,-15
    6fc0:	000005d3          	fadd.s	fa1,ft0,ft0,rne
    6fc4:	0d20                	addi	s0,sp,664
    6fc6:	04a4                	addi	s1,sp,584
    6fc8:	0000                	unimp
    6fca:	c705                	beqz	a4,6ff2 <_dtoa_r+0xa06>
    6fcc:	fd1d                	bnez	a0,6f0a <_dtoa_r+0x91e>
    6fce:	0005                	c.nop	1
    6fd0:	2400                	fld	fs0,8(s0)
    6fd2:	ac0d                	j	7204 <_dtoa_r+0xc18>
    6fd4:	05000007          	0x5000007
    6fd8:	0dca                	slli	s11,s11,0x12
    6fda:	0621                	addi	a2,a2,8
    6fdc:	0000                	unimp
    6fde:	0d28                	addi	a0,sp,664
    6fe0:	0315                	addi	t1,t1,5
    6fe2:	0000                	unimp
    6fe4:	cb05                	beqz	a4,7014 <_dtoa_r+0xa28>
    6fe6:	3b09                	jal	6cf8 <_dtoa_r+0x70c>
    6fe8:	0006                	c.slli	zero,0x1
    6fea:	2c00                	fld	fs0,24(s0)
    6fec:	5f10                	lw	a2,56(a4)
    6fee:	6275                	lui	tp,0x1d
    6ff0:	0500                	addi	s0,sp,640
    6ff2:	11ce                	slli	gp,gp,0x33
    6ff4:	02de                	slli	t0,t0,0x17
    6ff6:	0000                	unimp
    6ff8:	1030                	addi	a2,sp,40
    6ffa:	755f 0070 cf05      	0xcf050070755f
    7000:	0612                	slli	a2,a2,0x4
    7002:	38000003          	lb	zero,896(zero) # 380 <main+0x304>
    7006:	5f10                	lw	a2,56(a4)
    7008:	7275                	lui	tp,0xffffd
    700a:	0500                	addi	s0,sp,640
    700c:	07d0                	addi	a2,sp,964
    700e:	005d                	c.nop	23
    7010:	0000                	unimp
    7012:	0d3c                	addi	a5,sp,664
    7014:	07dc                	addi	a5,sp,964
    7016:	0000                	unimp
    7018:	d305                	beqz	a4,6f38 <_dtoa_r+0x94c>
    701a:	4111                	li	sp,4
    701c:	0006                	c.slli	zero,0x1
    701e:	4000                	lw	s0,0(s0)
    7020:	380d                	jal	6852 <_dtoa_r+0x266>
    7022:	05000007          	0x5000007
    7026:	11d4                	addi	a3,sp,228
    7028:	0651                	addi	a2,a2,20
    702a:	0000                	unimp
    702c:	6c5f1043          	0x6c5f1043
    7030:	0062                	c.slli	zero,0x18
    7032:	d705                	beqz	a4,6f5a <_dtoa_r+0x96e>
    7034:	de11                	beqz	a2,6f50 <_dtoa_r+0x964>
    7036:	0002                	c.slli64	zero
    7038:	4400                	lw	s0,8(s0)
    703a:	b60d                	j	6b5c <_dtoa_r+0x570>
    703c:	0005                	c.nop	1
    703e:	0500                	addi	s0,sp,640
    7040:	07da                	slli	a5,a5,0x16
    7042:	005d                	c.nop	23
    7044:	0000                	unimp
    7046:	0d4c                	addi	a1,sp,660
    7048:	01fd                	addi	gp,gp,31
    704a:	0000                	unimp
    704c:	db05                	beqz	a4,6f7c <_dtoa_r+0x990>
    704e:	890a                	mv	s2,sp
    7050:	0000                	unimp
    7052:	5000                	lw	s0,32(s0)
    7054:	700d                	c.lui	zero,0xfffe3
    7056:	0001                	nop
    7058:	0500                	addi	s0,sp,640
    705a:	12de                	slli	t0,t0,0x37
    705c:	046d                	addi	s0,s0,27
    705e:	0000                	unimp
    7060:	0d54                	addi	a3,sp,660
    7062:	0602                	c.slli64	a2
    7064:	0000                	unimp
    7066:	e205                	bnez	a2,7086 <_dtoa_r+0xa9a>
    7068:	1c0c                	addi	a1,sp,560
    706a:	0001                	nop
    706c:	5800                	lw	s0,48(s0)
    706e:	b70d                	j	6f90 <_dtoa_r+0x9a4>
    7070:	0000                	unimp
    7072:	0500                	addi	s0,sp,640
    7074:	0ee4                	addi	s1,sp,860
    7076:	0110                	addi	a2,sp,128
    7078:	0000                	unimp
    707a:	0d5c                	addi	a5,sp,660
    707c:	0778                	addi	a4,sp,908
    707e:	0000                	unimp
    7080:	e505                	bnez	a0,70a8 <_dtoa_r+0xabc>
    7082:	5d09                	li	s10,-30
    7084:	0000                	unimp
    7086:	6400                	flw	fs0,8(s0)
    7088:	1400                	addi	s0,sp,544
    708a:	00a1                	addi	ra,ra,8
    708c:	0000                	unimp
    708e:	046d                	addi	s0,s0,27
    7090:	0000                	unimp
    7092:	6d15                	lui	s10,0x5
    7094:	0004                	0x4
    7096:	1500                	addi	s0,sp,672
    7098:	0128                	addi	a0,sp,136
    709a:	0000                	unimp
    709c:	c115                	beqz	a0,70c0 <_dtoa_r+0xad4>
    709e:	0005                	c.nop	1
    70a0:	1500                	addi	s0,sp,672
    70a2:	005d                	c.nop	23
    70a4:	0000                	unimp
    70a6:	0500                	addi	s0,sp,640
    70a8:	7804                	flw	fs1,48(s0)
    70aa:	0004                	0x4
    70ac:	1600                	addi	s0,sp,800
    70ae:	046d                	addi	s0,s0,27
    70b0:	0000                	unimp
    70b2:	0006e317          	auipc	t1,0x6e
    70b6:	2800                	fld	fs0,16(s0)
    70b8:	0504                	addi	s1,sp,640
    70ba:	0239                	addi	tp,tp,14
    70bc:	c108                	sw	a0,0(a0)
    70be:	0005                	c.nop	1
    70c0:	1800                	addi	s0,sp,48
    70c2:	0480                	addi	s0,sp,576
    70c4:	0000                	unimp
    70c6:	3b05                	jal	6df6 <_dtoa_r+0x80a>
    70c8:	0702                	c.slli64	a4
    70ca:	005d                	c.nop	23
    70cc:	0000                	unimp
    70ce:	1800                	addi	s0,sp,48
    70d0:	0349                	addi	t1,t1,18
    70d2:	0000                	unimp
    70d4:	4005                	c.li	zero,1
    70d6:	0b02                	c.slli64	s6
    70d8:	06ad                	addi	a3,a3,11
    70da:	0000                	unimp
    70dc:	1804                	addi	s1,sp,48
    70de:	00e6                	slli	ra,ra,0x19
    70e0:	0000                	unimp
    70e2:	4005                	c.li	zero,1
    70e4:	1402                	slli	s0,s0,0x20
    70e6:	06ad                	addi	a3,a3,11
    70e8:	0000                	unimp
    70ea:	1808                	addi	a0,sp,48
    70ec:	000007cb          	fnmsub.s	fa5,ft0,ft0,ft0,rne
    70f0:	4005                	c.li	zero,1
    70f2:	1e02                	slli	t3,t3,0x20
    70f4:	06ad                	addi	a3,a3,11
    70f6:	0000                	unimp
    70f8:	180c                	addi	a1,sp,48
    70fa:	023e                	slli	tp,tp,0xf
    70fc:	0000                	unimp
    70fe:	4205                	li	tp,1
    7100:	0802                	c.slli64	a6
    7102:	005d                	c.nop	23
    7104:	0000                	unimp
    7106:	1810                	addi	a2,sp,48
    7108:	0205                	addi	tp,tp,1
    710a:	0000                	unimp
    710c:	4305                	li	t1,1
    710e:	0802                	c.slli64	a6
    7110:	08ad                	addi	a7,a7,11
    7112:	0000                	unimp
    7114:	1814                	addi	a3,sp,48
    7116:	075f 0000 4605      	0x46050000075f
    711c:	0702                	c.slli64	a4
    711e:	005d                	c.nop	23
    7120:	0000                	unimp
    7122:	1830                	addi	a2,sp,56
    7124:	06d2                	slli	a3,a3,0x14
    7126:	0000                	unimp
    7128:	4705                	li	a4,1
    712a:	1602                	slli	a2,a2,0x20
    712c:	08c2                	slli	a7,a7,0x10
    712e:	0000                	unimp
    7130:	1834                	addi	a3,sp,56
    7132:	0322                	slli	t1,t1,0x8
    7134:	0000                	unimp
    7136:	4905                	li	s2,1
    7138:	0702                	c.slli64	a4
    713a:	005d                	c.nop	23
    713c:	0000                	unimp
    713e:	1838                	addi	a4,sp,56
    7140:	03d4                	addi	a3,sp,452
    7142:	0000                	unimp
    7144:	4b05                	li	s6,1
    7146:	0a02                	c.slli64	s4
    7148:	000008d3          	fadd.s	fa7,ft0,ft0,rne
    714c:	183c                	addi	a5,sp,56
    714e:	014c                	addi	a1,sp,132
    7150:	0000                	unimp
    7152:	4e05                	li	t3,1
    7154:	1302                	slli	t1,t1,0x20
    7156:	0190                	addi	a2,sp,192
    7158:	0000                	unimp
    715a:	1840                	addi	s0,sp,52
    715c:	018e                	slli	gp,gp,0x3
    715e:	0000                	unimp
    7160:	4f05                	li	t5,1
    7162:	0702                	c.slli64	a4
    7164:	005d                	c.nop	23
    7166:	0000                	unimp
    7168:	1844                	addi	s1,sp,52
    716a:	0272                	slli	tp,tp,0x1c
    716c:	0000                	unimp
    716e:	5005                	c.li	zero,-31
    7170:	1302                	slli	t1,t1,0x20
    7172:	0190                	addi	a2,sp,192
    7174:	0000                	unimp
    7176:	1848                	addi	a0,sp,52
    7178:	038e                	slli	t2,t2,0x3
    717a:	0000                	unimp
    717c:	5105                	li	sp,-31
    717e:	1402                	slli	s0,s0,0x20
    7180:	08d9                	addi	a7,a7,22
    7182:	0000                	unimp
    7184:	184c                	addi	a1,sp,52
    7186:	058c                	addi	a1,sp,704
    7188:	0000                	unimp
    718a:	5405                	li	s0,-31
    718c:	0702                	c.slli64	a4
    718e:	005d                	c.nop	23
    7190:	0000                	unimp
    7192:	1850                	addi	a2,sp,52
    7194:	0608                	addi	a0,sp,768
    7196:	0000                	unimp
    7198:	5505                	li	a0,-31
    719a:	0902                	c.slli64	s2
    719c:	05c1                	addi	a1,a1,16
    719e:	0000                	unimp
    71a0:	1854                	addi	a3,sp,52
    71a2:	063a                	slli	a2,a2,0xe
    71a4:	0000                	unimp
    71a6:	7805                	lui	a6,0xfffe1
    71a8:	0702                	c.slli64	a4
    71aa:	0888                	addi	a0,sp,80
    71ac:	0000                	unimp
    71ae:	1958                	addi	a4,sp,180
    71b0:	000004bb          	0x4bb
    71b4:	7c05                	lui	s8,0xfffe1
    71b6:	1302                	slli	t1,t1,0x20
    71b8:	02c1                	addi	t0,t0,16
    71ba:	0000                	unimp
    71bc:	0148                	addi	a0,sp,132
    71be:	bd19                	j	6fd4 <_dtoa_r+0x9e8>
    71c0:	0002                	c.slli64	zero
    71c2:	0500                	addi	s0,sp,640
    71c4:	027d                	addi	tp,tp,31
    71c6:	7e12                	flw	ft8,36(sp)
    71c8:	0002                	c.slli64	zero
    71ca:	4c00                	lw	s0,24(s0)
    71cc:	1901                	addi	s2,s2,-32
    71ce:	02a4                	addi	s1,sp,328
    71d0:	0000                	unimp
    71d2:	8105                	srli	a0,a0,0x1
    71d4:	0c02                	c.slli64	s8
    71d6:	08ea                	slli	a7,a7,0x1a
    71d8:	0000                	unimp
    71da:	02dc                	addi	a5,sp,324
    71dc:	af19                	j	78f2 <_dtoa_r+0x1306>
    71de:	0006                	c.slli	zero,0x1
    71e0:	0500                	addi	s0,sp,640
    71e2:	0286                	slli	t0,t0,0x1
    71e4:	6e10                	flw	fa2,24(a2)
    71e6:	0006                	c.slli	zero,0x1
    71e8:	e000                	fsw	fs0,0(s0)
    71ea:	1902                	slli	s2,s2,0x20
    71ec:	00000507          	0x507
    71f0:	8805                	andi	s0,s0,1
    71f2:	0a02                	c.slli64	s4
    71f4:	08f6                	slli	a7,a7,0x1d
    71f6:	0000                	unimp
    71f8:	02ec                	addi	a1,sp,332
    71fa:	0500                	addi	s0,sp,640
    71fc:	c704                	sw	s1,8(a4)
    71fe:	0005                	c.nop	1
    7200:	0200                	addi	s0,sp,256
    7202:	0801                	addi	a6,a6,0
    7204:	0619                	addi	a2,a2,6
    7206:	0000                	unimp
    7208:	c716                	sw	t0,140(sp)
    720a:	0005                	c.nop	1
    720c:	0500                	addi	s0,sp,640
    720e:	4f04                	lw	s1,24(a4)
    7210:	0004                	0x4
    7212:	1400                	addi	s0,sp,544
    7214:	00a1                	addi	ra,ra,8
    7216:	0000                	unimp
    7218:	000005f7          	0x5f7
    721c:	6d15                	lui	s10,0x5
    721e:	0004                	0x4
    7220:	1500                	addi	s0,sp,672
    7222:	0128                	addi	a0,sp,136
    7224:	0000                	unimp
    7226:	f715                	bnez	a4,7152 <_dtoa_r+0xb66>
    7228:	0005                	c.nop	1
    722a:	1500                	addi	s0,sp,672
    722c:	005d                	c.nop	23
    722e:	0000                	unimp
    7230:	0500                	addi	s0,sp,640
    7232:	ce04                	sw	s1,24(a2)
    7234:	0005                	c.nop	1
    7236:	0500                	addi	s0,sp,640
    7238:	d904                	sw	s1,48(a0)
    723a:	0005                	c.nop	1
    723c:	1400                	addi	s0,sp,544
    723e:	0095                	addi	ra,ra,5
    7240:	0000                	unimp
    7242:	0621                	addi	a2,a2,8
    7244:	0000                	unimp
    7246:	6d15                	lui	s10,0x5
    7248:	0004                	0x4
    724a:	1500                	addi	s0,sp,672
    724c:	0128                	addi	a0,sp,136
    724e:	0000                	unimp
    7250:	9515                	srai	a0,a0,0x25
    7252:	0000                	unimp
    7254:	1500                	addi	s0,sp,672
    7256:	005d                	c.nop	23
    7258:	0000                	unimp
    725a:	0500                	addi	s0,sp,640
    725c:	0304                	addi	s1,sp,384
    725e:	0006                	c.slli	zero,0x1
    7260:	1400                	addi	s0,sp,544
    7262:	005d                	c.nop	23
    7264:	0000                	unimp
    7266:	0000063b          	0x63b
    726a:	6d15                	lui	s10,0x5
    726c:	0004                	0x4
    726e:	1500                	addi	s0,sp,672
    7270:	0128                	addi	a0,sp,136
    7272:	0000                	unimp
    7274:	0500                	addi	s0,sp,640
    7276:	2704                	fld	fs1,8(a4)
    7278:	0006                	c.slli	zero,0x1
    727a:	0a00                	addi	s0,sp,272
    727c:	002c                	addi	a1,sp,8
    727e:	0000                	unimp
    7280:	0651                	addi	a2,a2,20
    7282:	0000                	unimp
    7284:	0000640b          	0x640b
    7288:	0200                	addi	s0,sp,256
    728a:	0a00                	addi	s0,sp,272
    728c:	002c                	addi	a1,sp,8
    728e:	0000                	unimp
    7290:	0661                	addi	a2,a2,24
    7292:	0000                	unimp
    7294:	0000640b          	0x640b
    7298:	0000                	unimp
    729a:	0700                	addi	s0,sp,896
    729c:	01f6                	slli	gp,gp,0x1d
    729e:	0000                	unimp
    72a0:	1f05                	addi	t5,t5,-31
    72a2:	1a01                	addi	s4,s4,-32
    72a4:	030c                	addi	a1,sp,384
    72a6:	0000                	unimp
    72a8:	941a                	add	s0,s0,t1
    72aa:	0006                	c.slli	zero,0x1
    72ac:	0c00                	addi	s0,sp,528
    72ae:	2305                	jal	77ce <_dtoa_r+0x11e2>
    72b0:	0801                	addi	a6,a6,0
    72b2:	000006a7          	0x6a7
    72b6:	9b18                	0x9b18
    72b8:	05000007          	0x5000007
    72bc:	0125                	addi	sp,sp,9
    72be:	a711                	j	79c2 <__sflush_r+0x76>
    72c0:	0006                	c.slli	zero,0x1
    72c2:	0000                	unimp
    72c4:	c418                	sw	a4,8(s0)
    72c6:	0005                	c.nop	1
    72c8:	0500                	addi	s0,sp,640
    72ca:	0126                	slli	sp,sp,0x9
    72cc:	00005d07          	0x5d07
    72d0:	0400                	addi	s0,sp,512
    72d2:	0018                	0x18
    72d4:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    72d8:	ad0b0127          	0xad0b0127
    72dc:	0006                	c.slli	zero,0x1
    72de:	0800                	addi	s0,sp,16
    72e0:	0500                	addi	s0,sp,640
    72e2:	6e04                	flw	fs1,24(a2)
    72e4:	0006                	c.slli	zero,0x1
    72e6:	0500                	addi	s0,sp,640
    72e8:	6104                	flw	fs1,0(a0)
    72ea:	0006                	c.slli	zero,0x1
    72ec:	1a00                	addi	s0,sp,304
    72ee:	0186                	slli	gp,gp,0x1
    72f0:	0000                	unimp
    72f2:	050e                	slli	a0,a0,0x3
    72f4:	ec08013f 18000006 	0x18000006ec08013f
    72fc:	0790                	addi	a2,sp,960
    72fe:	0000                	unimp
    7300:	4005                	c.li	zero,1
    7302:	1201                	addi	tp,tp,-32
    7304:	06ec                	addi	a1,sp,844
    7306:	0000                	unimp
    7308:	1800                	addi	s0,sp,48
    730a:	0398                	addi	a4,sp,448
    730c:	0000                	unimp
    730e:	4105                	li	sp,1
    7310:	1201                	addi	tp,tp,-32
    7312:	06ec                	addi	a1,sp,844
    7314:	0000                	unimp
    7316:	1806                	slli	a6,a6,0x21
    7318:	065e                	slli	a2,a2,0x17
    731a:	0000                	unimp
    731c:	4205                	li	tp,1
    731e:	1201                	addi	tp,tp,-32
    7320:	003a                	c.slli	zero,0xe
    7322:	0000                	unimp
    7324:	000c                	0xc
    7326:	3a0a                	fld	fs4,160(sp)
    7328:	0000                	unimp
    732a:	fc00                	fsw	fs0,56(s0)
    732c:	0006                	c.slli	zero,0x1
    732e:	0b00                	addi	s0,sp,400
    7330:	0064                	addi	s1,sp,12
    7332:	0000                	unimp
    7334:	0002                	c.slli64	zero
    7336:	5905d01b          	0x5905d01b
    733a:	0702                	c.slli64	a4
    733c:	0811                	addi	a6,a6,4
    733e:	0000                	unimp
    7340:	3e18                	fld	fa4,56(a2)
    7342:	05000007          	0x5000007
    7346:	6418025b          	0x6418025b
    734a:	0000                	unimp
    734c:	0000                	unimp
    734e:	b718                	fsd	fa4,40(a4)
    7350:	0006                	c.slli	zero,0x1
    7352:	0500                	addi	s0,sp,640
    7354:	025c                	addi	a5,sp,260
    7356:	c112                	sw	tp,128(sp)
    7358:	0005                	c.nop	1
    735a:	0400                	addi	s0,sp,512
    735c:	af18                	fsd	fa4,24(a4)
    735e:	0001                	nop
    7360:	0500                	addi	s0,sp,640
    7362:	025d                	addi	tp,tp,23
    7364:	1110                	addi	a2,sp,160
    7366:	0008                	0x8
    7368:	0800                	addi	s0,sp,16
    736a:	6018                	flw	fa4,0(s0)
    736c:	0005                	c.nop	1
    736e:	0500                	addi	s0,sp,640
    7370:	025e                	slli	tp,tp,0x17
    7372:	0001a617          	auipc	a2,0x1a
    7376:	2400                	fld	fs0,8(s0)
    7378:	5018                	lw	a4,32(s0)
    737a:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    737e:	025f 5d0f 0000      	0x5d0f025f
    7384:	4800                	lw	s0,16(s0)
    7386:	9618                	0x9618
    7388:	05000007          	0x5000007
    738c:	0260                	addi	s0,sp,268
    738e:	562c                	lw	a1,104(a2)
    7390:	0000                	unimp
    7392:	5000                	lw	s0,32(s0)
    7394:	5e18                	lw	a4,56(a2)
    7396:	0000                	unimp
    7398:	0500                	addi	s0,sp,640
    739a:	0261                	addi	tp,tp,24
    739c:	b31a                	fsd	ft6,416(sp)
    739e:	0006                	c.slli	zero,0x1
    73a0:	5800                	lw	s0,48(s0)
    73a2:	8d18                	0x8d18
    73a4:	0002                	c.slli64	zero
    73a6:	0500                	addi	s0,sp,640
    73a8:	0262                	slli	tp,tp,0x18
    73aa:	1016                	c.slli	zero,0x25
    73ac:	0001                	nop
    73ae:	6800                	flw	fs0,16(s0)
    73b0:	c418                	sw	a4,8(s0)
    73b2:	0006                	c.slli	zero,0x1
    73b4:	0500                	addi	s0,sp,640
    73b6:	10160263          	beq	a2,ra,74ba <_dtoa_r+0xece>
    73ba:	0001                	nop
    73bc:	7000                	flw	fs0,32(s0)
    73be:	4118                	lw	a4,0(a0)
    73c0:	0000                	unimp
    73c2:	0500                	addi	s0,sp,640
    73c4:	0264                	addi	s1,sp,268
    73c6:	1016                	c.slli	zero,0x25
    73c8:	0001                	nop
    73ca:	7800                	flw	fs0,48(s0)
    73cc:	9c18                	0x9c18
    73ce:	0005                	c.nop	1
    73d0:	0500                	addi	s0,sp,640
    73d2:	0265                	addi	tp,tp,25
    73d4:	2110                	fld	fa2,0(a0)
    73d6:	0008                	0x8
    73d8:	8000                	0x8000
    73da:	6318                	flw	fa4,0(a4)
    73dc:	0000                	unimp
    73de:	0500                	addi	s0,sp,640
    73e0:	0266                	slli	tp,tp,0x19
    73e2:	3110                	fld	fa2,32(a0)
    73e4:	0008                	0x8
    73e6:	8800                	0x8800
    73e8:	3f18                	fld	fa4,56(a4)
    73ea:	0006                	c.slli	zero,0x1
    73ec:	0500                	addi	s0,sp,640
    73ee:	5d0f0267          	jalr	tp,1488(t5) # 75d0 <_dtoa_r+0xfe4>
    73f2:	0000                	unimp
    73f4:	a000                	fsd	fs0,0(s0)
    73f6:	c618                	sw	a4,8(a2)
    73f8:	0000                	unimp
    73fa:	0500                	addi	s0,sp,640
    73fc:	0268                	addi	a0,sp,268
    73fe:	1016                	c.slli	zero,0x25
    7400:	0001                	nop
    7402:	a400                	fsd	fs0,8(s0)
    7404:	ae18                	fsd	fa4,24(a2)
    7406:	0002                	c.slli64	zero
    7408:	0500                	addi	s0,sp,640
    740a:	0269                	addi	tp,tp,26
    740c:	1016                	c.slli	zero,0x25
    740e:	0001                	nop
    7410:	ac00                	fsd	fs0,24(s0)
    7412:	4818                	lw	a4,16(s0)
    7414:	0002                	c.slli64	zero
    7416:	0500                	addi	s0,sp,640
    7418:	026a                	slli	tp,tp,0x1a
    741a:	1016                	c.slli	zero,0x25
    741c:	0001                	nop
    741e:	b400                	fsd	fs0,40(s0)
    7420:	ad18                	fsd	fa4,24(a0)
    7422:	05000003          	lb	zero,80(zero) # 50 <_start+0x50>
    7426:	1016026b          	0x1016026b
    742a:	0001                	nop
    742c:	bc00                	fsd	fs0,56(s0)
    742e:	7c18                	flw	fa4,56(s0)
    7430:	0002                	c.slli64	zero
    7432:	0500                	addi	s0,sp,640
    7434:	026c                	addi	a1,sp,268
    7436:	1016                	c.slli	zero,0x25
    7438:	0001                	nop
    743a:	c400                	sw	s0,8(s0)
    743c:	7e18                	flw	fa4,56(a2)
    743e:	0004                	0x4
    7440:	0500                	addi	s0,sp,640
    7442:	026d                	addi	tp,tp,27
    7444:	5d08                	lw	a0,56(a0)
    7446:	0000                	unimp
    7448:	cc00                	sw	s0,24(s0)
    744a:	0a00                	addi	s0,sp,272
    744c:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    7450:	0821                	addi	a6,a6,8
    7452:	0000                	unimp
    7454:	0000640b          	0x640b
    7458:	1900                	addi	s0,sp,176
    745a:	0a00                	addi	s0,sp,272
    745c:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    7460:	0831                	addi	a6,a6,12
    7462:	0000                	unimp
    7464:	0000640b          	0x640b
    7468:	0700                	addi	s0,sp,896
    746a:	0a00                	addi	s0,sp,272
    746c:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    7470:	0841                	addi	a6,a6,16
    7472:	0000                	unimp
    7474:	0000640b          	0x640b
    7478:	1700                	addi	s0,sp,928
    747a:	1b00                	addi	s0,sp,432
    747c:	05f0                	addi	a2,sp,716
    747e:	0272                	slli	tp,tp,0x1c
    7480:	00086807          	0x86807
    7484:	1800                	addi	s0,sp,48
    7486:	017f                	0x17f
    7488:	0000                	unimp
    748a:	7505                	lui	a0,0xfffe1
    748c:	1b02                	slli	s6,s6,0x20
    748e:	0868                	addi	a0,sp,28
    7490:	0000                	unimp
    7492:	1800                	addi	s0,sp,48
    7494:	000007d3          	fadd.s	fa5,ft0,ft0,rne
    7498:	7605                	lui	a2,0xfffe1
    749a:	1802                	slli	a6,a6,0x20
    749c:	0878                	addi	a4,sp,28
    749e:	0000                	unimp
    74a0:	0078                	addi	a4,sp,12
    74a2:	060a                	slli	a2,a2,0x2
    74a4:	78000003          	lb	zero,1920(zero) # 780 <main+0x704>
    74a8:	0008                	0x8
    74aa:	0b00                	addi	s0,sp,400
    74ac:	0064                	addi	s1,sp,12
    74ae:	0000                	unimp
    74b0:	001d                	c.nop	7
    74b2:	640a                	flw	fs0,128(sp)
    74b4:	0000                	unimp
    74b6:	8800                	0x8800
    74b8:	0008                	0x8
    74ba:	0b00                	addi	s0,sp,400
    74bc:	0064                	addi	s1,sp,12
    74be:	0000                	unimp
    74c0:	001d                	c.nop	7
    74c2:	f01c                	fsw	fa5,32(s0)
    74c4:	5705                	li	a4,-31
    74c6:	0302                	c.slli64	t1
    74c8:	08ad                	addi	a7,a7,11
    74ca:	0000                	unimp
    74cc:	e31d                	bnez	a4,74f2 <_dtoa_r+0xf06>
    74ce:	0006                	c.slli	zero,0x1
    74d0:	0500                	addi	s0,sp,640
    74d2:	026e                	slli	tp,tp,0x1b
    74d4:	0006fc0b          	0x6fc0b
    74d8:	1d00                	addi	s0,sp,688
    74da:	0000056f          	jal	a0,74da <_dtoa_r+0xeee>
    74de:	7705                	lui	a4,0xfffe1
    74e0:	0b02                	c.slli64	s6
    74e2:	0841                	addi	a6,a6,16
    74e4:	0000                	unimp
    74e6:	0a00                	addi	s0,sp,272
    74e8:	000005c7          	fmsub.s	fa1,ft0,ft0,ft0,rne
    74ec:	08bd                	addi	a7,a7,15
    74ee:	0000                	unimp
    74f0:	0000640b          	0x640b
    74f4:	1800                	addi	s0,sp,48
    74f6:	0600                	addi	s0,sp,768
    74f8:	07a1                	addi	a5,a5,8
    74fa:	0000                	unimp
    74fc:	0405                	addi	s0,s0,1
    74fe:	08bd                	addi	a7,a7,15
    7500:	0000                	unimp
    7502:	d31e                	sw	t2,164(sp)
    7504:	0008                	0x8
    7506:	1500                	addi	s0,sp,672
    7508:	046d                	addi	s0,s0,27
    750a:	0000                	unimp
    750c:	0500                	addi	s0,sp,640
    750e:	c804                	sw	s1,16(s0)
    7510:	0008                	0x8
    7512:	0500                	addi	s0,sp,640
    7514:	9004                	0x9004
    7516:	0001                	nop
    7518:	1e00                	addi	s0,sp,816
    751a:	08ea                	slli	a7,a7,0x1a
    751c:	0000                	unimp
    751e:	5d15                	li	s10,-27
    7520:	0000                	unimp
    7522:	0000                	unimp
    7524:	0405                	addi	s0,s0,1
    7526:	08f0                	addi	a2,sp,92
    7528:	0000                	unimp
    752a:	0405                	addi	s0,s0,1
    752c:	08df 0000 610a      	0x610a000008df
    7532:	0006                	c.slli	zero,0x1
    7534:	0600                	addi	s0,sp,768
    7536:	0009                	c.nop	2
    7538:	0b00                	addi	s0,sp,400
    753a:	0064                	addi	s1,sp,12
    753c:	0000                	unimp
    753e:	0002                	c.slli64	zero
    7540:	3d1f 0005 0500      	0x50000053d1f
    7546:	6d170307          	0x6d170307
    754a:	0004                	0x4
    754c:	1f00                	addi	s0,sp,944
    754e:	0536                	slli	a0,a0,0xd
    7550:	0000                	unimp
    7552:	0805                	addi	a6,a6,1
    7554:	04731d03          	lh	s10,71(t1) # 750f9 <_data_lma+0x69f81>
    7558:	0000                	unimp
    755a:	0c0c                	addi	a1,sp,528
    755c:	0906                	slli	s2,s2,0x1
    755e:	4f09                	li	t5,2
    7560:	0009                	c.nop	2
    7562:	0d00                	addi	s0,sp,656
    7564:	0c58                	addi	a4,sp,532
    7566:	0000                	unimp
    7568:	0a06                	slli	s4,s4,0x1
    756a:	5d09                	li	s10,-30
    756c:	0000                	unimp
    756e:	0000                	unimp
    7570:	6c10                	flw	fa2,24(s0)
    7572:	0b06006f          	j	67622 <_data_lma+0x5c4aa>
    7576:	5d09                	li	s10,-30
    7578:	0000                	unimp
    757a:	0400                	addi	s0,sp,512
    757c:	6810                	flw	fa2,16(s0)
    757e:	0069                	c.nop	26
    7580:	0c06                	slli	s8,s8,0x1
    7582:	5d09                	li	s10,-30
    7584:	0000                	unimp
    7586:	0800                	addi	s0,sp,16
    7588:	0400                	addi	s0,sp,512
    758a:	0c4e                	slli	s8,s8,0x13
    758c:	0000                	unimp
    758e:	0d06                	slli	s10,s10,0x1
    7590:	2002                	fld	ft0,0(sp)
    7592:	0009                	c.nop	2
    7594:	2000                	fld	fs0,0(s0)
    7596:	0a5f 0000 0d01      	0xd0100000a5f
    759c:	5611                	li	a2,-28
    759e:	0000                	unimp
    75a0:	dc00                	sw	s0,56(s0)
    75a2:	0031                	c.nop	12
    75a4:	3000                	fld	fs0,32(s0)
    75a6:	0000                	unimp
    75a8:	0100                	addi	s0,sp,128
    75aa:	949c                	0x949c
    75ac:	0009                	c.nop	2
    75ae:	2100                	fld	fs0,0(a0)
    75b0:	6f6c                	flw	fa1,92(a4)
    75b2:	0100                	addi	s0,sp,128
    75b4:	0e0e                	slli	t3,t3,0x3
    75b6:	0064                	addi	s1,sp,12
    75b8:	0000                	unimp
    75ba:	5d66                	lw	s10,120(sp)
    75bc:	0000                	unimp
    75be:	6821                	lui	a6,0x8
    75c0:	0069                	c.nop	26
    75c2:	0f01                	addi	t5,t5,0
    75c4:	640e                	flw	fs0,192(sp)
    75c6:	0000                	unimp
    75c8:	7900                	flw	fs0,48(a0)
    75ca:	005d                	c.nop	23
    75cc:	0000                	unimp
    75ce:	5d22                	lw	s10,40(sp)
    75d0:	000c                	0xc
    75d2:	0100                	addi	s0,sp,128
    75d4:	0609                	addi	a2,a2,2
	...
    75de:	9c01                	0x9c01
    75e0:	4a00                	lw	s0,16(a2)
    75e2:	0002                	c.slli64	zero
    75e4:	0400                	addi	s0,sp,512
    75e6:	0e00                	addi	s0,sp,784
    75e8:	0016                	c.slli	zero,0x5
    75ea:	0400                	addi	s0,sp,512
    75ec:	0e01                	addi	t3,t3,0
    75ee:	0004                	0x4
    75f0:	0c00                	addi	s0,sp,528
    75f2:	0c72                	slli	s8,s8,0x1c
    75f4:	0000                	unimp
    75f6:	00000713          	li	a4,0
    75fa:	0948                	addi	a0,sp,148
    75fc:	0000                	unimp
    75fe:	0000                	unimp
    7600:	0000                	unimp
    7602:	00007e8b          	0x7e8b
    7606:	0c02                	c.slli64	s8
    7608:	0302                	c.slli64	t1
    760a:	5609                	li	a2,-30
    760c:	0000                	unimp
    760e:	0300                	addi	s0,sp,384
    7610:	0c58                	addi	a4,sp,532
    7612:	0000                	unimp
    7614:	0502                	c.slli64	a0
    7616:	5609                	li	a2,-30
    7618:	0000                	unimp
    761a:	0000                	unimp
    761c:	0004a503          	lw	a0,0(s1) # bac0 <_data_lma+0x948>
    7620:	0200                	addi	s0,sp,256
    7622:	0906                	slli	s2,s2,0x1
    7624:	0056                	c.slli	zero,0x15
    7626:	0000                	unimp
    7628:	0304                	addi	s1,sp,384
    762a:	00c1                	addi	ra,ra,16
    762c:	0000                	unimp
    762e:	0702                	c.slli64	a4
    7630:	5609                	li	a2,-30
    7632:	0000                	unimp
    7634:	0800                	addi	s0,sp,16
    7636:	0400                	addi	s0,sp,512
    7638:	0504                	addi	s1,sp,640
    763a:	6e69                	lui	t3,0x1a
    763c:	0074                	addi	a3,sp,12
    763e:	9c05                	0x9c05
    7640:	000c                	0xc
    7642:	0200                	addi	s0,sp,256
    7644:	0208                	addi	a0,sp,256
    7646:	0025                	c.nop	9
    7648:	0000                	unimp
    764a:	a605                	j	796a <__sflush_r+0x1e>
    764c:	000c                	0xc
    764e:	0200                	addi	s0,sp,256
    7650:	0075170b          	0x75170b
    7654:	0000                	unimp
    7656:	0106                	slli	sp,sp,0x1
    7658:	1008                	addi	a0,sp,32
    765a:	0006                	c.slli	zero,0x1
    765c:	0700                	addi	s0,sp,896
    765e:	04a4                	addi	s1,sp,584
    7660:	0000                	unimp
    7662:	2301                	jal	7b62 <_fflush_r+0x36>
    7664:	5605                	li	a2,-31
    7666:	0000                	unimp
    7668:	0c00                	addi	s0,sp,528
    766a:	0032                	c.slli	zero,0xc
    766c:	2400                	fld	fs0,8(s0)
    766e:	0000                	unimp
    7670:	0100                	addi	s0,sp,128
    7672:	f69c                	fsw	fa5,40(a3)
    7674:	0000                	unimp
    7676:	0800                	addi	s0,sp,16
    7678:	6466                	flw	fs0,88(sp)
    767a:	0100                	addi	s0,sp,128
    767c:	00561023          	sh	t0,0(a2) # fffe1000 <__freertos_irq_stack_top+0xfefd1000>
    7680:	0000                	unimp
    7682:	5d8c                	lw	a1,56(a1)
    7684:	0000                	unimp
    7686:	b209                	j	6f88 <_dtoa_r+0x99c>
    7688:	000c                	0xc
    768a:	0100                	addi	s0,sp,128
    768c:	00f61a23          	sh	a5,20(a2)
    7690:	0000                	unimp
    7692:	5dad                	li	s11,-21
    7694:	0000                	unimp
    7696:	0e0a                	slli	t3,t3,0x2
    7698:	01000007          	0x1000007
    769c:	00562723          	sw	t0,14(a2)
    76a0:	0000                	unimp
    76a2:	5c01                	li	s8,-32
    76a4:	00320c0b          	0x320c0b
    76a8:	1c00                	addi	s0,sp,560
    76aa:	0000                	unimp
    76ac:	0c00                	addi	s0,sp,528
    76ae:	0069                	c.nop	26
    76b0:	2401                	jal	78b0 <_dtoa_r+0x12c4>
    76b2:	560e                	lw	a2,224(sp)
    76b4:	0000                	unimp
    76b6:	ce00                	sw	s0,24(a2)
    76b8:	005d                	c.nop	23
    76ba:	0d00                	addi	s0,sp,656
    76bc:	01f2                	slli	gp,gp,0x1c
    76be:	0000                	unimp
    76c0:	3214                	fld	fa3,32(a2)
    76c2:	0000                	unimp
    76c4:	0930                	addi	a2,sp,152
    76c6:	0000                	unimp
    76c8:	2501                	jal	7cc8 <__sfmoreglue+0x58>
    76ca:	0e09                	addi	t3,t3,2
    76cc:	01ff                	0x1ff
    76ce:	0000                	unimp
    76d0:	5e05                	li	t3,-31
    76d2:	0000                	unimp
    76d4:	0000                	unimp
    76d6:	0f00                	addi	s0,sp,912
    76d8:	fc04                	fsw	fs1,56(s0)
    76da:	0000                	unimp
    76dc:	0600                	addi	s0,sp,768
    76de:	0801                	addi	a6,a6,0
    76e0:	0619                	addi	a2,a2,6
    76e2:	0000                	unimp
    76e4:	000c6907          	0xc6907
    76e8:	0100                	addi	s0,sp,128
    76ea:	0515                	addi	a0,a0,5
    76ec:	0056                	c.slli	zero,0x15
	...
    76f6:	0000                	unimp
    76f8:	9c01                	0x9c01
    76fa:	0000016f          	jal	sp,76fa <_dtoa_r+0x110e>
    76fe:	c609                	beqz	a2,7708 <_dtoa_r+0x111c>
    7700:	000c                	0xc
    7702:	0100                	addi	s0,sp,128
    7704:	1415                	addi	s0,s0,-27
    7706:	00f6                	slli	ra,ra,0x1d
    7708:	0000                	unimp
    770a:	5e25                	li	t3,-23
    770c:	0000                	unimp
    770e:	f810                	fsw	fa2,48(s0)
    7710:	0008                	0x8
    7712:	0c00                	addi	s0,sp,528
    7714:	0069                	c.nop	26
    7716:	1601                	addi	a2,a2,-32
    7718:	560e                	lw	a2,224(sp)
    771a:	0000                	unimp
    771c:	4600                	lw	s0,8(a2)
    771e:	005e                	c.slli	zero,0x17
    7720:	0d00                	addi	s0,sp,656
    7722:	0000016f          	jal	sp,7722 <_dtoa_r+0x1136>
    7726:	0000                	unimp
    7728:	0000                	unimp
    772a:	0910                	addi	a2,sp,144
    772c:	0000                	unimp
    772e:	1701                	addi	a4,a4,-32
    7730:	02341113          	slli	sp,s0,0x23
    7734:	0000                	unimp
    7736:	0910                	addi	a2,sp,144
    7738:	0000                	unimp
    773a:	8112                	mv	sp,tp
    773c:	0001                	nop
    773e:	7000                	flw	fs0,32(s0)
    7740:	005e                	c.slli	zero,0x17
    7742:	1200                	addi	s0,sp,288
    7744:	018d                	addi	gp,gp,3
    7746:	0000                	unimp
    7748:	5e92                	lw	t4,36(sp)
    774a:	0000                	unimp
    774c:	0000                	unimp
    774e:	0000                	unimp
    7750:	000c9313          	slli	t1,s9,0x0
    7754:	0100                	addi	s0,sp,128
    7756:	0069060b          	0x69060b
    775a:	0000                	unimp
    775c:	9b01                	andi	a4,a4,-32
    775e:	0001                	nop
    7760:	1400                	addi	s0,sp,544
    7762:	cb15                	beqz	a4,7796 <_dtoa_r+0x11aa>
    7764:	000c                	0xc
    7766:	0100                	addi	s0,sp,128
    7768:	0d0d                	addi	s10,s10,3
    776a:	0056                	c.slli	zero,0x15
    776c:	0000                	unimp
    776e:	ab15                	j	7ca2 <__sfmoreglue+0x32>
    7770:	000c                	0xc
    7772:	0100                	addi	s0,sp,128
    7774:	0d0e                	slli	s10,s10,0x3
    7776:	0056                	c.slli	zero,0x15
    7778:	0000                	unimp
    777a:	0000                	unimp
    777c:	ba16                	fsd	ft5,304(sp)
    777e:	000c                	0xc
    7780:	0100                	addi	s0,sp,128
    7782:	0606                	slli	a2,a2,0x1
	...
    778c:	9c01                	0x9c01
    778e:	01f2                	slli	gp,gp,0x1c
    7790:	0000                	unimp
    7792:	7308                	flw	fa0,32(a4)
    7794:	0100                	addi	s0,sp,128
    7796:	1806                	slli	a6,a6,0x21
    7798:	00f6                	slli	ra,ra,0x1d
    779a:	0000                	unimp
    779c:	5eb4                	lw	a3,120(a3)
    779e:	0000                	unimp
    77a0:	0000000b          	0xb
    77a4:	0000                	unimp
    77a6:	0000                	unimp
    77a8:	0c00                	addi	s0,sp,528
    77aa:	0069                	c.nop	26
    77ac:	0701                	addi	a4,a4,0
    77ae:	560e                	lw	a2,224(sp)
    77b0:	0000                	unimp
    77b2:	e200                	fsw	fs0,0(a2)
    77b4:	005e                	c.slli	zero,0x17
    77b6:	0d00                	addi	s0,sp,656
    77b8:	01f2                	slli	gp,gp,0x1c
    77ba:	0000                	unimp
    77bc:	0000                	unimp
    77be:	0000                	unimp
    77c0:	08c8                	addi	a0,sp,84
    77c2:	0000                	unimp
    77c4:	0801                	addi	a6,a6,0
    77c6:	0e09                	addi	t3,t3,2
    77c8:	01ff                	0x1ff
    77ca:	0000                	unimp
    77cc:	00005f2b          	0x5f2b
    77d0:	0000                	unimp
    77d2:	1700                	addi	s0,sp,928
    77d4:	0c89                	addi	s9,s9,2
    77d6:	0000                	unimp
    77d8:	0301                	addi	t1,t1,0
    77da:	0106                	slli	sp,sp,0x1
    77dc:	020a                	slli	tp,tp,0x2
    77de:	0000                	unimp
    77e0:	6318                	flw	fa4,0(a4)
    77e2:	0100                	addi	s0,sp,128
    77e4:	00fc1503          	lh	a0,15(s8) # fffe100f <__freertos_irq_stack_top+0xfefd100f>
    77e8:	0000                	unimp
    77ea:	1900                	addi	s0,sp,176
    77ec:	01f2                	slli	gp,gp,0x1c
	...
    77f6:	0000                	unimp
    77f8:	9c01                	0x9c01
    77fa:	0225                	addi	tp,tp,9
    77fc:	0000                	unimp
    77fe:	ff1a                	fsw	ft6,188(sp)
    7800:	0001                	nop
    7802:	0100                	addi	s0,sp,128
    7804:	005a                	c.slli	zero,0x16
    7806:	00016f1b          	0x16f1b
	...
    7812:	0100                	addi	s0,sp,128
    7814:	109c                	addi	a5,sp,96
    7816:	08e0                	addi	s0,sp,92
    7818:	0000                	unimp
    781a:	8112                	mv	sp,tp
    781c:	0001                	nop
    781e:	3e00                	fld	fs0,56(a2)
    7820:	005f 1200 018d      	0x18d1200005f
    7826:	0000                	unimp
    7828:	5f60                	lw	s0,124(a4)
    782a:	0000                	unimp
    782c:	0000                	unimp
    782e:	2200                	fld	fs0,0(a2)
    7830:	0000                	unimp
    7832:	0200                	addi	s0,sp,256
    7834:	a200                	fsd	fs0,0(a2)
    7836:	04000017          	auipc	zero,0x4000
    783a:	8b01                	andi	a4,a4,0
    783c:	0081                	addi	ra,ra,0
    783e:	0000                	unimp
    7840:	0000                	unimp
    7842:	7c00                	flw	fs0,56(s0)
    7844:	0000                	unimp
    7846:	d500                	sw	s0,40(a0)
    7848:	000c                	0xc
    784a:	1300                	addi	s0,sp,416
    784c:	e8000007          	0xe8000007
    7850:	000c                	0xc
    7852:	0100                	addi	s0,sp,128
    7854:	80              	Address 0x0000000000007854 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
	la gp, __global_pointer$
       0:	1101                	addi	sp,sp,-32
       2:	2501                	jal	602 <main+0x586>
       4:	130e                	slli	t1,t1,0x23
       6:	1b0e030b          	0x1b0e030b
	la sp, _sp
       a:	550e                	lw	a0,224(sp)
       c:	10011117          	auipc	sp,0x10011
	la a0, _data_lma 
      10:	02000017          	auipc	zero,0x2000
      14:	0024                	addi	s1,sp,8
      16:	0b3e0b0b          	0xb3e0b0b
	la a1, _data
      1a:	00000e03          	lb	t3,0(zero) # 0 <_start>
      1e:	0b002403          	lw	s0,176(zero) # b0 <main+0x34>
	la a2, _edata
      22:	030b3e0b          	0x30b3e0b
      26:	0008                	0x8
	bgeu a1, a2, 2f
      28:	0400                	addi	s0,sp,512
      2a:	0016                	c.slli	zero,0x5
	lw t0, (a0)
      2c:	0b3a0e03          	lb	t3,179(s4) # 30b3 <crc16+0x167>
	sw t0, (a1)
      30:	0b390b3b          	0xb390b3b
	lw t1, (a1)
      34:	1349                	addi	t1,t1,-14
      36:	0000                	unimp
	addi a0, a0, 4
      38:	0f05                	addi	t5,t5,1
      3a:	0b00                	addi	s0,sp,400
	addi a1, a1, 4
      3c:	0013490b          	0x13490b
	bltu a1, a2, 1b
      40:	0600                	addi	s0,sp,768
      42:	0e030013          	addi	zero,t1,224
	la a0, __bss_start
      46:	193c                	addi	a5,sp,184
      48:	0000                	unimp
      4a:	03001607          	0x3001607
	la a1, _end
      4e:	3a0e                	fld	fs4,224(sp)
      50:	39053b0b          	0x39053b0b
	bgeu a0, a1, 2f
      54:	0013490b          	0x13490b
	sw zero, (a0)
      58:	0800                	addi	s0,sp,16
      5a:	0b0b0117          	auipc	sp,0xb0b0
	addi a0, a0, 4
      5e:	0b3a                	slli	s6,s6,0xe
	bltu a0, a1, 1b
      60:	0b390b3b          	0xb390b3b
    li x31,0xa0
      64:	1301                	addi	t1,t1,-32
      66:	0000                	unimp
    call main
      68:	0d09                	addi	s10,s10,2
      6a:	0300                	addi	s0,sp,384
      6c:	3a0e                	fld	fs4,224(sp)
      6e:	390b3b0b          	0x390b3b0b
    li x31,0xaa
      72:	0013490b          	0x13490b
	li tp,0xee
      76:	0a00                	addi	s0,sp,272
    j loop
      78:	0101                	addi	sp,sp,0
      7a:	1349                	addi	t1,t1,-14
{
      7c:	1301                	addi	t1,t1,-32
      7e:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
      80:	4900210b          	0x4900210b
{
      84:	000b2f13          	slti	t5,s6,0
      88:	0c00                	addi	s0,sp,528
      8a:	0b0b0113          	addi	sp,s6,176 # 10b0 <__stack_size+0xb0>
      8e:	0b3a                	slli	s6,s6,0xe
      90:	0b390b3b          	0xb390b3b
      94:	1301                	addi	t1,t1,-32
      96:	0000                	unimp
      98:	0d0d                	addi	s10,s10,3
      9a:	0300                	addi	s0,sp,384
      9c:	3a0e                	fld	fs4,224(sp)
      9e:	390b3b0b          	0x390b3b0b
      a2:	3813490b          	0x3813490b
      a6:	0e00000b          	0xe00000b
      aa:	0b0b000f          	0xb0b000f
      ae:	0000                	unimp
      b0:	0301130f          	0x301130f
      b4:	0b0e                	slli	s6,s6,0x3
      b6:	3b0b3a0b          	0x3b0b3a0b
      ba:	010b390b          	0x10b390b
      be:	10000013          	li	zero,256
    portable_init(&(results[0].port), &argc, argv);
      c2:	000d                	c.nop	3
      c4:	0b3a0803          	lb	a6,179(s4)
      c8:	0b390b3b          	0xb390b3b
      cc:	1349                	addi	t1,t1,-14
      ce:	0b38                	addi	a4,sp,408
{
      d0:	0000                	unimp
      d2:	1311                	addi	t1,t1,-28
    portable_init(&(results[0].port), &argc, argv);
      d4:	0301                	addi	t1,t1,0
      d6:	0b0e                	slli	s6,s6,0x3
      d8:	3a05                	jal	fffffa08 <__freertos_irq_stack_top+0xfefefa08>
      da:	390b3b0b          	0x390b3b0b
      de:	0013010b          	0x13010b
      e2:	1200                	addi	s0,sp,288
    printf("start test1\n");
      e4:	000d                	c.nop	3
      e6:	0b3a0e03          	lb	t3,179(s4)
      ea:	0b390b3b          	0xb390b3b
      ee:	1349                	addi	t1,t1,-14
      f0:	0538                	addi	a4,sp,648
      f2:	0000                	unimp
    results[0].seed1      = get_seed(1);
      f4:	27001513          	0x27001513
      f8:	0019                	c.nop	6
      fa:	1400                	addi	s0,sp,544
      fc:	0115                	addi	sp,sp,5
      fe:	13491927          	0x13491927
     102:	1301                	addi	t1,t1,-32
    results[0].seed2      = get_seed(2);
     104:	0000                	unimp
     106:	0515                	addi	a0,a0,5
     108:	4900                	lw	s0,16(a0)
     10a:	16000013          	li	zero,352
     10e:	0026                	c.slli	zero,0x9
     110:	1349                	addi	t1,t1,-14
     112:	0000                	unimp
    results[0].seed3      = get_seed(3);
     114:	03011317          	auipc	t1,0x3011
     118:	0b0e                	slli	s6,s6,0x3
     11a:	3a05                	jal	fffffa4a <__freertos_irq_stack_top+0xfefefa4a>
     11c:	39053b0b          	0x39053b0b
     120:	0013010b          	0x13010b
    results[0].iterations = get_seed_32(4);
     124:	1800                	addi	s0,sp,48
     126:	000d                	c.nop	3
     128:	0b3a0e03          	lb	t3,179(s4)
     12c:	0b39053b          	0xb39053b
     130:	1349                	addi	t1,t1,-14
     132:	0b38                	addi	a4,sp,408
    printf("start test2\n");
     134:	0000                	unimp
     136:	0d19                	addi	s10,s10,6
     138:	0300                	addi	s0,sp,384
     13a:	3a0e                	fld	fs4,224(sp)
     13c:	39053b0b          	0x39053b0b
     140:	3813490b          	0x3813490b
    results[0].execs = get_seed_32(5);
     144:	0005                	c.nop	1
     146:	1a00                	addi	s0,sp,304
     148:	0e030113          	addi	sp,t1,224 # 30111f4 <__freertos_irq_stack_top+0x20011f4>
     14c:	0b3a0b0b          	0xb3a0b0b
     150:	0b39053b          	0xb39053b
    printf("start test21\n");
     154:	1301                	addi	t1,t1,-32
     156:	0000                	unimp
     158:	0b01131b          	0xb01131b
     15c:	3b0b3a0b          	0x3b0b3a0b
     160:	3905                	jal	fffffd90 <__freertos_irq_stack_top+0xfefefd90>
     162:	0013010b          	0x13010b
    if (results[0].execs == 0)
     166:	1c00                	addi	s0,sp,560
     168:	0b0b0117          	auipc	sp,0xb0b0
    printf("start test3\n");
     16c:	0b3a                	slli	s6,s6,0xe
     16e:	0b39053b          	0xb39053b
     172:	1301                	addi	t1,t1,-32
     174:	0000                	unimp
     176:	0d1d                	addi	s10,s10,7
     178:	0300                	addi	s0,sp,384
     17a:	3a0e                	fld	fs4,224(sp)
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	39053b0b          	0x39053b0b
     180:	0013490b          	0x13490b
     184:	1e00                	addi	s0,sp,816
     186:	0115                	addi	sp,sp,5
     188:	13011927          	0x13011927
     18c:	0000                	unimp
     18e:	341f 0300 3a0e      	0x3a0e0300341f
     194:	39053b0b          	0x39053b0b
     198:	3f13490b          	0x3f13490b
    printf("start test4\n");
     19c:	3c19                	jal	fffffbb2 <__freertos_irq_stack_top+0xfefefbb2>
     19e:	0019                	c.nop	6
     1a0:	2000                	fld	fs0,0(s0)
     1a2:	0034                	addi	a3,sp,8
     1a4:	0b3a0e03          	lb	t3,179(s4)
     1a8:	0b390b3b          	0xb390b3b
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	1349                	addi	t1,t1,-14
     1ae:	193c193f 2e210000 	0x2e210000193c193f
     1b6:	3f01                	jal	c6 <main+0x4a>
     1b8:	0319                	addi	t1,t1,6
     1ba:	3a0e                	fld	fs4,224(sp)
     1bc:	39053b0b          	0x39053b0b
     1c0:	4919270b          	0x4919270b
     1c4:	010b2013          	slti	zero,s6,16
     1c8:	22000013          	li	zero,544
     1cc:	0005                	c.nop	1
     1ce:	0b3a0e03          	lb	t3,179(s4)
        if ((1 << (ee_u32)i) & results[0].execs)
     1d2:	0b39053b          	0xb39053b
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d6:	1349                	addi	t1,t1,-14
     1d8:	0000                	unimp
     1da:	03000523          	sb	a6,42(zero) # 2a <_start+0x2a>
     1de:	3a08                	fld	fa0,48(a2)
     1e0:	39053b0b          	0x39053b0b
     1e4:	0013490b          	0x13490b
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	2400                	fld	fs0,8(s0)
     1ea:	0034                	addi	a3,sp,8
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	0b3a0803          	lb	a6,179(s4)
        if ((1 << (ee_u32)i) & results[0].execs)
     1f0:	0b39053b          	0xb39053b
            num_algorithms++;
     1f4:	1349                	addi	t1,t1,-14
     1f6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1f8:	3425                	jal	fffffc20 <__freertos_irq_stack_top+0xfefefc20>
     1fa:	0300                	addi	s0,sp,384
     1fc:	3a0e                	fld	fs4,224(sp)
     1fe:	39053b0b          	0x39053b0b
    results[i].err         = 0;
     202:	0013490b          	0x13490b
        if ((1 << (ee_u32)i) & results[0].execs)
     206:	2600                	fld	fs0,8(a2)
            num_algorithms++;
     208:	012e                	slli	sp,sp,0xb
     20a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     212:	0b39                	addi	s6,s6,14
     214:	13491927          	0x13491927
     218:	0111                	addi	sp,sp,4
     21a:	0612                	slli	a2,a2,0x4
        results[i].size = results[i].size / num_algorithms;
     21c:	1840                	addi	s0,sp,52
     21e:	4296                	lw	t0,68(sp)
     220:	0119                	addi	sp,sp,6
     222:	27000013          	li	zero,624
     226:	0005                	c.nop	1
     228:	0b3a0e03          	lb	t3,179(s4)
     22c:	0b390b3b          	0xb390b3b
     230:	1349                	addi	t1,t1,-14
     232:	1702                	slli	a4,a4,0x20
        if ((1 << (ee_u32)i) & results[0].execs)
     234:	0000                	unimp
     236:	3428                	fld	fa0,104(s0)
     238:	0300                	addi	s0,sp,384
     23a:	3a0e                	fld	fs4,224(sp)
     23c:	390b3b0b          	0x390b3b0b
     240:	1c13490b          	0x1c13490b
        if (results[i].execs & ID_LIST)
     244:	2900000b          	0x2900000b
        if (results[i].execs & ID_MATRIX)
     248:	0034                	addi	a3,sp,8
     24a:	0b3a0e03          	lb	t3,179(s4)
        if (results[i].execs & ID_STATE)
     24e:	0b39053b          	0xb39053b
     252:	1349                	addi	t1,t1,-14
            core_init_state(
     254:	1702                	slli	a4,a4,0x20
     256:	0000                	unimp
     258:	342a                	fld	fs0,168(sp)
     25a:	0300                	addi	s0,sp,384
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	3a08                	fld	fa0,48(a2)
     25e:	39053b0b          	0x39053b0b
            core_init_state(
     262:	0213490b          	0x213490b
     266:	2b000017          	auipc	zero,0x2b000
     26a:	1755010b          	0x1755010b
     26e:	1301                	addi	t1,t1,-32
     270:	0000                	unimp
     272:	1d2c                	addi	a1,sp,696
     274:	3101                	jal	fffffe74 <__freertos_irq_stack_top+0xfefefe74>
     276:	55015213          	0x55015213
     27a:	590b5817          	auipc	a6,0x590b5
     27e:	5705                	li	a4,-31
    if (results[0].iterations == 0)
     280:	2d00000b          	0x2d00000b
     284:	0005                	c.nop	1
     286:	1331                	addi	t1,t1,-20
        while (secs_passed < (secs_ret)1)
     288:	1702                	slli	a4,a4,0x20
     28a:	0000                	unimp
     28c:	0b2e                	slli	s6,s6,0xb
     28e:	5501                	li	a0,-32
     290:	2f000017          	auipc	zero,0x2f000
        results[0].iterations = 1;
     294:	0034                	addi	a3,sp,8
     296:	1331                	addi	t1,t1,-20
     298:	1702                	slli	a4,a4,0x20
     29a:	0000                	unimp
        crc      = core_bench_list(res, 1);
     29c:	1d30                	addi	a2,sp,696
     29e:	3101                	jal	fffffe9e <__freertos_irq_stack_top+0xfefefe9e>
     2a0:	55015213          	0x55015213
     2a4:	590b5817          	auipc	a6,0x590b5
     2a8:	5705                	li	a4,-31
     2aa:	0013010b          	0x13010b
     2ae:	3100                	fld	fs0,32(a0)
     2b0:	0005                	c.nop	1
     2b2:	1331                	addi	t1,t1,-20
     2b4:	1802                	slli	a6,a6,0x20
     2b6:	0000                	unimp
            printf("start test44\n");
     2b8:	1d32                	slli	s10,s10,0x2c
     2ba:	3101                	jal	fffffeba <__freertos_irq_stack_top+0xfefefeba>
     2bc:	12011113          	0x12011113
     2c0:	5806                	lw	a6,96(sp)
     2c2:	5705590b          	0x5705590b
            results[0].iterations *= 10;
     2c6:	3300000b          	0x3300000b
    for (i = 0; i < iterations; i++)
     2ca:	011d                	addi	sp,sp,7
            results[0].iterations *= 10;
     2cc:	1331                	addi	t1,t1,-20
     2ce:	0111                	addi	sp,sp,4
     2d0:	0612                	slli	a2,a2,0x4
     2d2:	0b58                	addi	a4,sp,404
     2d4:	0559                	addi	a0,a0,22
     2d6:	13010b57          	0x13010b57
     2da:	0000                	unimp
            start_time();
     2dc:	0534                	addi	a3,sp,648
     2de:	3100                	fld	fs0,32(a0)
     2e0:	35000013          	li	zero,848
    ee_u32        iterations = res->iterations;
     2e4:	0111010b          	0x111010b
    res->crc                 = 0;
     2e8:	0612                	slli	a2,a2,0x4
     2ea:	0000                	unimp
     2ec:	8936                	mv	s2,a3
     2ee:	0182                	c.slli64	gp
    for (i = 0; i < iterations; i++)
     2f0:	1101                	addi	sp,sp,-32
     2f2:	3101                	jal	fffffef2 <__freertos_irq_stack_top+0xfefefef2>
        crc      = core_bench_list(res, 1);
     2f4:	37000013          	li	zero,880
     2f8:	828a                	mv	t0,sp
     2fa:	0001                	nop
     2fc:	1802                	slli	a6,a6,0x20
     2fe:	4291                	li	t0,4
     300:	0018                	0x18
     302:	3800                	fld	fs0,48(s0)
        res->crc = crcu16(crc, res->crc);
     304:	012e                	slli	sp,sp,0xb
     306:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     30e:	0b39                	addi	s6,s6,14
     310:	13491927          	0x13491927
        crc      = core_bench_list(res, -1);
     314:	0111                	addi	sp,sp,4
     316:	0612                	slli	a2,a2,0x4
     318:	1840                	addi	s0,sp,52
     31a:	01194297          	auipc	t0,0x1194
     31e:	39000013          	li	zero,912
     322:	0005                	c.nop	1
        res->crc = crcu16(crc, res->crc);
     324:	0b3a0803          	lb	a6,179(s4)
     328:	0b390b3b          	0xb390b3b
     32c:	1349                	addi	t1,t1,-14
     32e:	1702                	slli	a4,a4,0x20
     330:	0000                	unimp
     332:	343a                	fld	fs0,424(sp)
        if (i == 0)
     334:	0300                	addi	s0,sp,384
     336:	3a0e                	fld	fs4,224(sp)
    for (i = 0; i < iterations; i++)
     338:	390b3b0b          	0x390b3b0b
     33c:	0213490b          	0x213490b
            stop_time();
     340:	3b000017          	auipc	zero,0x3b000
     344:	0034                	addi	a3,sp,8
     346:	0b3a0803          	lb	a6,179(s4)
            secs_passed = time_in_secs(get_time());
     34a:	0b390b3b          	0xb390b3b
     34e:	1349                	addi	t1,t1,-14
     350:	1702                	slli	a4,a4,0x20
     352:	0000                	unimp
     354:	1d3c                	addi	a5,sp,696
     356:	3101                	jal	ffffff56 <__freertos_irq_stack_top+0xfefeff56>
        while (secs_passed < (secs_ret)1)
     358:	55015213          	0x55015213
     35c:	590b5817          	auipc	a6,0x590b5
            secs_passed = time_in_secs(get_time());
     360:	010b570b          	0x10b570b
     364:	3d000013          	li	zero,976
        while (secs_passed < (secs_ret)1)
     368:	1331010b          	0x1331010b
     36c:	0111                	addi	sp,sp,4
     36e:	0612                	slli	a2,a2,0x4
     370:	0000                	unimp
     372:	343e                	fld	fs0,488(sp)
        divisor = (ee_u32)secs_passed;
     374:	3100                	fld	fs0,32(a0)
     376:	3f000013          	li	zero,1008
     37a:	1331010b          	0x1331010b
     37e:	1755                	addi	a4,a4,-11
     380:	0000                	unimp
     382:	8940                	0x8940
     384:	0182                	c.slli64	gp
     386:	1100                	addi	s0,sp,160
        if (divisor == 0) /* some machines cast float to int as 0 since this
     388:	3101                	jal	ffffff88 <__freertos_irq_stack_top+0xfefeff88>
     38a:	41000013          	li	zero,1040
            divisor = 1;
     38e:	8289                	srli	a3,a3,0x2
        results[0].iterations *= 1 + 10 / divisor;
     390:	0101                	addi	sp,sp,0
     392:	0111                	addi	sp,sp,4
     394:	1331                	addi	t1,t1,-20
     396:	1301                	addi	t1,t1,-32
     398:	0000                	unimp
     39a:	1d42                	slli	s10,s10,0x30
     39c:	3101                	jal	ffffff9c <__freertos_irq_stack_top+0xfefeff9c>
     39e:	55015213          	0x55015213
     3a2:	590b5817          	auipc	a6,0x590b5
     3a6:	000b570b          	0xb570b
     3aa:	4300                	lw	s0,0(a4)
     3ac:	012e                	slli	sp,sp,0xb
     3ae:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    start_time();
     3b6:	0b39                	addi	s6,s6,14
    iterate(&results[0]);
     3b8:	0b201927          	0xb201927
     3bc:	1301                	addi	t1,t1,-32
     3be:	0000                	unimp
     3c0:	0544                	addi	s1,sp,644
     3c2:	0300                	addi	s0,sp,384
     3c4:	3a08                	fld	fa0,48(a2)
     3c6:	390b3b0b          	0x390b3b0b
     3ca:	0013490b          	0x13490b
     3ce:	4500                	lw	s0,8(a0)
     3d0:	0005                	c.nop	1
     3d2:	0b3a0e03          	lb	t3,179(s4)
     3d6:	0b390b3b          	0xb390b3b
    stop_time();
     3da:	1349                	addi	t1,t1,-14
     3dc:	0000                	unimp
     3de:	2e46                	fld	ft8,80(sp)
    total_time = get_time();
     3e0:	3f01                	jal	2f0 <main+0x274>
     3e2:	0319                	addi	t1,t1,6
     3e4:	3a0e                	fld	fs4,224(sp)
     3e6:	390b3b0b          	0x390b3b0b
    seedcrc = crc16(results[0].seed1, seedcrc);
     3ea:	4919270b          	0x4919270b
     3ee:	010b2013          	slti	zero,s6,16
     3f2:	47000013          	li	zero,1136
    total_time = get_time();
     3f6:	0034                	addi	a3,sp,8
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	0b3a0e03          	lb	t3,179(s4)
     3fc:	0b390b3b          	0xb390b3b
     400:	1349                	addi	t1,t1,-14
     402:	0000                	unimp
     404:	0b48                	addi	a0,sp,404
     406:	0001                	nop
     408:	4900                	lw	s0,16(a0)
     40a:	012e                	slli	sp,sp,0xb
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	1331                	addi	t1,t1,-20
     40e:	0111                	addi	sp,sp,4
     410:	0612                	slli	a2,a2,0x4
     412:	1840                	addi	s0,sp,52
     414:	01194297          	auipc	t0,0x1194
     418:	4a000013          	li	zero,1184
     41c:	0034                	addi	a3,sp,8
     41e:	1331                	addi	t1,t1,-20
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	1802                	slli	a6,a6,0x20
     422:	0000                	unimp
     424:	0182894b          	fnmsub.s	fs2,ft5,fs8,ft0,rne
     428:	1101                	addi	sp,sp,-32
     42a:	0001                	nop
     42c:	4c00                	lw	s0,24(s0)
     42e:	002e                	c.slli	zero,0xb
     430:	193c193f 0e030e6e 	0xe030e6e193c193f
    seedcrc = crc16(results[0].size, seedcrc);
     438:	0b3a                	slli	s6,s6,0xe
     43a:	00000b3b          	0xb3b
     43e:	2e4d                	jal	7f0 <main+0x774>
     440:	3f00                	fld	fs0,56(a4)
     442:	3c19                	jal	fffffe58 <__freertos_irq_stack_top+0xfefefe58>
     444:	6e19                	lui	t3,0x6
     446:	030e                	slli	t1,t1,0x3
     448:	3a0e                	fld	fs4,224(sp)
     44a:	390b3b0b          	0x390b3b0b
     44e:	0000000b          	0xb
    switch (seedcrc)
     452:	1101                	addi	sp,sp,-32
     454:	2501                	jal	a54 <main+0x9d8>
     456:	130e                	slli	t1,t1,0x23
     458:	1b0e030b          	0x1b0e030b
     45c:	550e                	lw	a0,224(sp)
     45e:	10011117          	auipc	sp,0x10011
     462:	02000017          	auipc	zero,0x2000
     466:	0024                	addi	s1,sp,8
     468:	0b3e0b0b          	0xb3e0b0b
     46c:	00000e03          	lb	t3,0(zero) # 0 <_start>
            ee_printf("2K performance run parameters for coremark.\n");
     470:	0b002403          	lw	s0,176(zero) # b0 <main+0x34>
     474:	030b3e0b          	0x30b3e0b
     478:	0008                	0x8
     47a:	0400                	addi	s0,sp,512
     47c:	0016                	c.slli	zero,0x5
     47e:	0b3a0e03          	lb	t3,179(s4)
     482:	0b390b3b          	0xb390b3b
     486:	1349                	addi	t1,t1,-14
     488:	0000                	unimp
     48a:	0f05                	addi	t5,t5,1
            known_id = 3;
     48c:	0b00                	addi	s0,sp,400
     48e:	0013490b          	0x13490b
            ee_printf("2K performance run parameters for coremark.\n");
     492:	0600                	addi	s0,sp,768
     494:	0e030013          	addi	zero,t1,224
     498:	193c                	addi	a5,sp,184
     49a:	0000                	unimp
            known_id = 3;
     49c:	03001607          	0x3001607
        for (i = 0; i < default_num_contexts; i++)
     4a0:	3a0e                	fld	fs4,224(sp)
     4a2:	39053b0b          	0x39053b0b
     4a6:	0013490b          	0x13490b
     4aa:	0800                	addi	s0,sp,16
     4ac:	0b0b0117          	auipc	sp,0xb0b0
     4b0:	0b3a                	slli	s6,s6,0xe
     4b2:	0b390b3b          	0xb390b3b
            results[i].err = 0;
     4b6:	1301                	addi	t1,t1,-32
     4b8:	0000                	unimp
     4ba:	0d09                	addi	s10,s10,2
     4bc:	0300                	addi	s0,sp,384
     4be:	3a0e                	fld	fs4,224(sp)
     4c0:	390b3b0b          	0x390b3b0b
     4c4:	0013490b          	0x13490b
     4c8:	0a00                	addi	s0,sp,272
     4ca:	0101                	addi	sp,sp,0
     4cc:	1349                	addi	t1,t1,-14
     4ce:	1301                	addi	t1,t1,-32
     4d0:	0000                	unimp
     4d2:	4900210b          	0x4900210b
     4d6:	000b2f13          	slti	t5,s6,0
     4da:	0c00                	addi	s0,sp,528
     4dc:	0b0b0113          	addi	sp,s6,176
     4e0:	0b3a                	slli	s6,s6,0xe
     4e2:	0b390b3b          	0xb390b3b
     4e6:	1301                	addi	t1,t1,-32
     4e8:	0000                	unimp
     4ea:	0d0d                	addi	s10,s10,3
            total_errors += results[i].err;
     4ec:	0300                	addi	s0,sp,384
     4ee:	3a0e                	fld	fs4,224(sp)
        for (i = 0; i < default_num_contexts; i++)
     4f0:	390b3b0b          	0x390b3b0b
            total_errors += results[i].err;
     4f4:	3813490b          	0x3813490b
        for (i = 0; i < default_num_contexts; i++)
     4f8:	0e00000b          	0xe00000b
            total_errors += results[i].err;
     4fc:	0b0b000f          	0xb0b000f
        for (i = 0; i < default_num_contexts; i++)
     500:	0000                	unimp
     502:	0301130f          	0x301130f
            total_errors += results[i].err;
     506:	0b0e                	slli	s6,s6,0x3
        for (i = 0; i < default_num_contexts; i++)
     508:	3b0b3a0b          	0x3b0b3a0b
            total_errors += results[i].err;
     50c:	010b390b          	0x10b390b
        for (i = 0; i < default_num_contexts; i++)
     510:	10000013          	li	zero,256
            results[i].err = 0;
     514:	000d                	c.nop	3
     516:	0b3a0803          	lb	a6,179(s4)
     51a:	0b390b3b          	0xb390b3b
     51e:	1349                	addi	t1,t1,-14
     520:	0b38                	addi	a4,sp,408
     522:	0000                	unimp
     524:	1311                	addi	t1,t1,-28
     526:	0301                	addi	t1,t1,0
     528:	0b0e                	slli	s6,s6,0x3
     52a:	3a05                	jal	fffffe5a <__freertos_irq_stack_top+0xfefefe5a>
            if ((results[i].execs & ID_LIST)
     52c:	390b3b0b          	0x390b3b0b
            results[i].err = 0;
     530:	0013010b          	0x13010b
            if ((results[i].execs & ID_LIST)
     534:	1200                	addi	s0,sp,288
     536:	000d                	c.nop	3
     538:	0b3a0e03          	lb	t3,179(s4)
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	0b390b3b          	0xb390b3b
     540:	1349                	addi	t1,t1,-14
     542:	0538                	addi	a4,sp,648
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	0000                	unimp
     546:	27001513          	0x27001513
     54a:	0019                	c.nop	6
     54c:	1400                	addi	s0,sp,544
     54e:	0115                	addi	sp,sp,5
     550:	13491927          	0x13491927
     554:	1301                	addi	t1,t1,-32
     556:	0000                	unimp
     558:	0515                	addi	a0,a0,5
     55a:	4900                	lw	s0,16(a0)
                results[i].err++;
     55c:	16000013          	li	zero,352
     560:	0026                	c.slli	zero,0x9
     562:	1349                	addi	t1,t1,-14
     564:	0000                	unimp
     566:	03011317          	auipc	t1,0x3011
            if ((results[i].execs & ID_MATRIX)
     56a:	0b0e                	slli	s6,s6,0x3
     56c:	3a05                	jal	fffffe9c <__freertos_irq_stack_top+0xfefefe9c>
     56e:	39053b0b          	0x39053b0b
     572:	0013010b          	0x13010b
     576:	1800                	addi	s0,sp,48
     578:	000d                	c.nop	3
     57a:	0b3a0e03          	lb	t3,179(s4)
     57e:	0b39053b          	0xb39053b
     582:	1349                	addi	t1,t1,-14
     584:	0b38                	addi	a4,sp,408
     586:	0000                	unimp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	0d19                	addi	s10,s10,6
     58a:	0300                	addi	s0,sp,384
     58c:	3a0e                	fld	fs4,224(sp)
     58e:	39053b0b          	0x39053b0b
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     592:	3813490b          	0x3813490b
     596:	0005                	c.nop	1
     598:	1a00                	addi	s0,sp,304
     59a:	0e030113          	addi	sp,t1,224 # 3011646 <__freertos_irq_stack_top+0x2001646>
     59e:	0b3a0b0b          	0xb3a0b0b
     5a2:	0b39053b          	0xb39053b
     5a6:	1301                	addi	t1,t1,-32
                results[i].err++;
     5a8:	0000                	unimp
     5aa:	0b01131b          	0xb01131b
     5ae:	3b0b3a0b          	0x3b0b3a0b
     5b2:	3905                	jal	1e2 <main+0x166>
     5b4:	0013010b          	0x13010b
            if ((results[i].execs & ID_STATE)
     5b8:	1c00                	addi	s0,sp,560
     5ba:	0b0b0117          	auipc	sp,0xb0b0
     5be:	0b3a                	slli	s6,s6,0xe
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	0b39053b          	0xb39053b
     5c4:	1301                	addi	t1,t1,-32
     5c6:	0000                	unimp
     5c8:	0d1d                	addi	s10,s10,7
     5ca:	0300                	addi	s0,sp,384
     5cc:	3a0e                	fld	fs4,224(sp)
     5ce:	39053b0b          	0x39053b0b
     5d2:	0013490b          	0x13490b
     5d6:	1e00                	addi	s0,sp,816
     5d8:	0115                	addi	sp,sp,5
     5da:	13011927          	0x13011927
     5de:	0000                	unimp
     5e0:	341f 0300 3a0e      	0x3a0e0300341f
            results[i].list = core_list_init(
     5e6:	39053b0b          	0x39053b0b
     5ea:	3f13490b          	0x3f13490b
     5ee:	3c19                	jal	4 <_start+0x4>
     5f0:	0019                	c.nop	6
     5f2:	2000                	fld	fs0,0(s0)
     5f4:	0034                	addi	a3,sp,8
     5f6:	0b3a0e03          	lb	t3,179(s4)
     5fa:	0b390b3b          	0xb390b3b
     5fe:	1349                	addi	t1,t1,-14
     600:	193c193f 34210000 	0x34210000193c193f
     608:	0300                	addi	s0,sp,384
     60a:	3a0e                	fld	fs4,224(sp)
     60c:	390b3b0b          	0x390b3b0b
     610:	0013490b          	0x13490b
     614:	2200                	fld	fs0,0(a2)
     616:	0034                	addi	a3,sp,8
     618:	0b3a0e03          	lb	t3,179(s4)
        if (results[i].execs & ID_MATRIX)
     61c:	0b390b3b          	0xb390b3b
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	1349                	addi	t1,t1,-14
     622:	1802193f 2e230000 	0x2e2300001802193f
     62a:	3f01                	jal	53a <main+0x4be>
            core_init_matrix(results[0].size,
     62c:	0319                	addi	t1,t1,6
     62e:	3a0e                	fld	fs4,224(sp)
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	390b3b0b          	0x390b3b0b
     634:	4919270b          	0x4919270b
                             (ee_s32)results[i].seed1
     638:	12011113          	0x12011113
                                 | (((ee_s32)results[i].seed2) << 16),
     63c:	4006                	0x4006
     63e:	9618                	0x9618
            core_init_matrix(results[0].size,
     640:	1942                	slli	s2,s2,0x30
     642:	1301                	addi	t1,t1,-32
                             (ee_s32)results[i].seed1
     644:	0000                	unimp
     646:	0524                	addi	s1,sp,648
            core_init_matrix(results[0].size,
     648:	0300                	addi	s0,sp,384
     64a:	3a0e                	fld	fs4,224(sp)
                                 | (((ee_s32)results[i].seed2) << 16),
     64c:	390b3b0b          	0x390b3b0b
            core_init_matrix(results[0].size,
     650:	0213490b          	0x213490b
     654:	25000017          	auipc	zero,0x25000
     658:	0034                	addi	a3,sp,8
     65a:	0b3a0803          	lb	a6,179(s4)
     65e:	0b390b3b          	0xb390b3b
     662:	1349                	addi	t1,t1,-14
     664:	1702                	slli	a4,a4,0x20
     666:	0000                	unimp
     668:	3426                	fld	fs0,104(sp)
     66a:	0300                	addi	s0,sp,384
     66c:	3a0e                	fld	fs4,224(sp)
     66e:	390b3b0b          	0x390b3b0b
     672:	0213490b          	0x213490b
     676:	27000017          	auipc	zero,0x27000
     67a:	0034                	addi	a3,sp,8
     67c:	0b3a0e03          	lb	t3,179(s4)
            ee_printf("Profile generation run parameters for coremark.\n");
     680:	0b390b3b          	0xb390b3b
     684:	1349                	addi	t1,t1,-14
     686:	1802                	slli	a6,a6,0x20
     688:	0000                	unimp
     68a:	0b28                	addi	a0,sp,408
     68c:	5501                	li	a0,-32
     68e:	00130117          	auipc	sp,0x130
     692:	2900                	fld	fs0,16(a0)
     694:	011d                	addi	sp,sp,7
     696:	1331                	addi	t1,t1,-20
     698:	0152                	slli	sp,sp,0x14
     69a:	1755                	addi	a4,a4,-11
            known_id = 2;
     69c:	0b58                	addi	a4,sp,404
     69e:	0b59                	addi	s6,s6,22
            ee_printf("Profile generation run parameters for coremark.\n");
     6a0:	13010b57          	0x13010b57
     6a4:	0000                	unimp
     6a6:	052a                	slli	a0,a0,0xa
     6a8:	3100                	fld	fs0,32(a0)
     6aa:	00170213          	addi	tp,a4,1 # fffe1001 <__freertos_irq_stack_top+0xfefd1001>
            known_id = 2;
     6ae:	2b00                	fld	fs0,16(a4)
     6b0:	1755010b          	0x1755010b
        && (results[0].seed3 == 0))
     6b4:	0000                	unimp
     6b6:	342c                	fld	fa1,104(s0)
     6b8:	3100                	fld	fs0,32(a0)
     6ba:	00170213          	addi	tp,a4,1
     6be:	2d00                	fld	fs0,24(a0)
        results[0].seed3 = 0x66;
     6c0:	8289                	srli	a3,a3,0x2
     6c2:	0101                	addi	sp,sp,0
     6c4:	0111                	addi	sp,sp,4
     6c6:	1331                	addi	t1,t1,-20
     6c8:	1301                	addi	t1,t1,-32
     6ca:	0000                	unimp
     6cc:	8a2e                	mv	s4,a1
     6ce:	0182                	c.slli64	gp
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	0200                	addi	s0,sp,256
     6d2:	9118                	0x9118
     6d4:	1842                	slli	a6,a6,0x30
     6d6:	0000                	unimp
     6d8:	0182892f          	0x182892f
     6dc:	1100                	addi	s0,sp,160
     6de:	3101                	jal	2de <main+0x262>
     6e0:	30000013          	li	zero,768
     6e4:	8289                	srli	a3,a3,0x2
     6e6:	0101                	addi	sp,sp,0
                results[i].err++;
     6e8:	0111                	addi	sp,sp,4
     6ea:	1331                	addi	t1,t1,-20
     6ec:	0000                	unimp
     6ee:	2131                	jal	afa <main+0xa7e>
     6f0:	4900                	lw	s0,16(a0)
     6f2:	00052f13          	slti	t5,a0,0
     6f6:	3200                	fld	fs0,32(a2)
     6f8:	012e                	slli	sp,sp,0xb
     6fa:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    switch (seedcrc)
     702:	0b39                	addi	s6,s6,14
    ee_s16       known_id = -1, total_errors = 0;
     704:	13491927          	0x13491927
    switch (seedcrc)
     708:	0b20                	addi	s0,sp,408
     70a:	1301                	addi	t1,t1,-32
    ee_s16       known_id = -1, total_errors = 0;
     70c:	0000                	unimp
     70e:	03000533          	mul	a0,zero,a6
     712:	3a0e                	fld	fs4,224(sp)
    total_errors += check_data_types();
     714:	390b3b0b          	0x390b3b0b
     718:	0013490b          	0x13490b
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	3400                	fld	fs0,40(s0)
     71e:	0034                	addi	a3,sp,8
    total_errors += check_data_types();
     720:	0b3a0803          	lb	a6,179(s4)
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	0b390b3b          	0xb390b3b
     728:	1349                	addi	t1,t1,-14
     72a:	0000                	unimp
     72c:	2e35                	jal	a68 <main+0x9ec>
     72e:	3101                	jal	32e <main+0x2b2>
     730:	12011113          	0x12011113
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	4006                	0x4006
     736:	9718                	0x9718
     738:	1942                	slli	s2,s2,0x30
     73a:	1301                	addi	t1,t1,-32
     73c:	0000                	unimp
     73e:	2e36                	fld	ft8,328(sp)
     740:	3f00                	fld	fs0,56(a4)
     742:	3c19                	jal	158 <main+0xdc>
     744:	6e19                	lui	t3,0x6
     746:	030e                	slli	t1,t1,0x3
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     748:	3a0e                	fld	fs4,224(sp)
     74a:	390b3b0b          	0x390b3b0b
     74e:	3700000b          	0x3700000b
     752:	002e                	c.slli	zero,0xb
     754:	193c193f 0e030e6e 	0xe030e6e193c193f
     75c:	0b3a                	slli	s6,s6,0xe
     75e:	00000b3b          	0xb3b
     762:	0100                	addi	s0,sp,128
     764:	0111                	addi	sp,sp,4
     766:	0e25                	addi	t3,t3,9
     768:	0e030b13          	addi	s6,t1,224
    if (time_in_secs(total_time) > 0)
     76c:	17550e1b          	0x17550e1b
     770:	0111                	addi	sp,sp,4
     772:	1710                	addi	a2,sp,928
     774:	0000                	unimp
     776:	2402                	fld	fs0,0(sp)
    total_errors += check_data_types();
     778:	0b00                	addi	s0,sp,400
     77a:	030b3e0b          	0x30b3e0b
    if (time_in_secs(total_time) > 0)
     77e:	000e                	c.slli	zero,0x3
     780:	0300                	addi	s0,sp,384
     782:	0024                	addi	s1,sp,8
    total_errors += check_data_types();
     784:	0b3e0b0b          	0xb3e0b0b
    if (time_in_secs(total_time) > 0)
     788:	00000803          	lb	a6,0(zero) # 0 <_start>
     78c:	1604                	addi	s1,sp,800
     78e:	0300                	addi	s0,sp,384
     790:	3a0e                	fld	fs4,224(sp)
     792:	390b3b0b          	0x390b3b0b
                  default_num_contexts * results[0].iterations
     796:	0013490b          	0x13490b
     79a:	0500                	addi	s0,sp,640
     79c:	0b0b000f          	0xb0b000f
     7a0:	1349                	addi	t1,t1,-14
     7a2:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     7a4:	1306                	slli	t1,t1,0x21
     7a6:	0300                	addi	s0,sp,384
     7a8:	3c0e                	fld	fs8,224(sp)
     7aa:	0019                	c.nop	6
     7ac:	0700                	addi	s0,sp,896
     7ae:	0016                	c.slli	zero,0x5
                      / time_in_secs(total_time));
     7b0:	0b3a0e03          	lb	t3,179(s4)
        ee_printf("Iterations/Sec   : %lf\n",
     7b4:	0b39053b          	0xb39053b
                      / time_in_secs(total_time));
     7b8:	1349                	addi	t1,t1,-14
     7ba:	0000                	unimp
     7bc:	1708                	addi	a0,sp,928
     7be:	0b01                	addi	s6,s6,0
        ee_printf("Iterations/Sec   : %lf\n",
     7c0:	3b0b3a0b          	0x3b0b3a0b
     7c4:	010b390b          	0x10b390b
     7c8:	09000013          	li	zero,144
     7cc:	000d                	c.nop	3
     7ce:	0b3a0e03          	lb	t3,179(s4)
     7d2:	0b390b3b          	0xb390b3b
     7d6:	1349                	addi	t1,t1,-14
     7d8:	0000                	unimp
     7da:	010a                	slli	sp,sp,0x2
     7dc:	4901                	li	s2,0
     7de:	00130113          	addi	sp,t1,1
     7e2:	0b00                	addi	s0,sp,400
     7e4:	0021                	c.nop	8
     7e6:	1349                	addi	t1,t1,-14
     7e8:	00000b2f          	0xb2f
     7ec:	130c                	addi	a1,sp,416
     7ee:	0b01                	addi	s6,s6,0
    if (time_in_secs(total_time) < 10)
     7f0:	3b0b3a0b          	0x3b0b3a0b
     7f4:	010b390b          	0x10b390b
     7f8:	0d000013          	li	zero,208
     7fc:	000d                	c.nop	3
     7fe:	0b3a0e03          	lb	t3,179(s4)
     802:	0b390b3b          	0xb390b3b
     806:	1349                	addi	t1,t1,-14
     808:	0b38                	addi	a4,sp,408
     80a:	0000                	unimp
     80c:	0f0e                	slli	t5,t5,0x3
     80e:	0b00                	addi	s0,sp,400
     810:	0f00000b          	0xf00000b
    ee_printf("Iterations       : %lu\n",
     814:	0e030113          	addi	sp,t1,224
     818:	0b3a0b0b          	0xb3a0b0b
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     81c:	0b390b3b          	0xb390b3b
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     820:	1301                	addi	t1,t1,-32
     822:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     824:	0d10                	addi	a2,sp,656
     826:	0300                	addi	s0,sp,384
     828:	3a08                	fld	fa0,48(a2)
     82a:	390b3b0b          	0x390b3b0b
     82e:	3813490b          	0x3813490b
     832:	1100000b          	0x1100000b
     836:	0e030113          	addi	sp,t1,224
     83a:	0b3a050b          	0xb3a050b
     83e:	0b390b3b          	0xb390b3b
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     842:	1301                	addi	t1,t1,-32
     844:	0000                	unimp
     846:	0d12                	slli	s10,s10,0x4
     848:	0300                	addi	s0,sp,384
     84a:	3a0e                	fld	fs4,224(sp)
     84c:	390b3b0b          	0x390b3b0b
     850:	3813490b          	0x3813490b
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	0005                	c.nop	1
     856:	1300                	addi	s0,sp,416
     858:	0015                	c.nop	5
     85a:	00001927          	0x1927
     85e:	1514                	addi	a3,sp,672
     860:	2701                	jal	f60 <core_bench_list+0x220>
     862:	4919                	li	s2,6
     864:	00130113          	addi	sp,t1,1
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     868:	1500                	addi	s0,sp,672
     86a:	0005                	c.nop	1
     86c:	1349                	addi	t1,t1,-14
     86e:	0000                	unimp
     870:	2616                	fld	fa2,320(sp)
     872:	4900                	lw	s0,16(a0)
     874:	17000013          	li	zero,368
     878:	0e030113          	addi	sp,t1,224
     87c:	0b3a050b          	0xb3a050b
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     880:	0b39053b          	0xb39053b
     884:	1301                	addi	t1,t1,-32
     886:	0000                	unimp
     888:	0d18                	addi	a4,sp,656
     88a:	0300                	addi	s0,sp,384
     88c:	3a0e                	fld	fs4,224(sp)
     88e:	39053b0b          	0x39053b0b
     892:	3813490b          	0x3813490b
    if (results[0].execs & ID_LIST)
     896:	1900000b          	0x1900000b
        total_errors++;
     89a:	000d                	c.nop	3
     89c:	0b3a0e03          	lb	t3,179(s4)
    if (results[0].execs & ID_LIST)
     8a0:	0b39053b          	0xb39053b
     8a4:	1349                	addi	t1,t1,-14
     8a6:	0538                	addi	a4,sp,648
        for (i = 0; i < default_num_contexts; i++)
     8a8:	0000                	unimp
     8aa:	131a                	slli	t1,t1,0x26
     8ac:	0301                	addi	t1,t1,0
     8ae:	0b0e                	slli	s6,s6,0x3
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b0:	3b0b3a0b          	0x3b0b3a0b
     8b4:	3905                	jal	4e4 <main+0x468>
     8b6:	0013010b          	0x13010b
     8ba:	1b00                	addi	s0,sp,432
     8bc:	0b0b0113          	addi	sp,s6,176
     8c0:	0b3a                	slli	s6,s6,0xe
     8c2:	0b39053b          	0xb39053b
        for (i = 0; i < default_num_contexts; i++)
     8c6:	1301                	addi	t1,t1,-32
     8c8:	0000                	unimp
     8ca:	171c                	addi	a5,sp,928
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8cc:	0b01                	addi	s6,s6,0
     8ce:	3b0b3a0b          	0x3b0b3a0b
     8d2:	3905                	jal	502 <main+0x486>
     8d4:	0013010b          	0x13010b
     8d8:	1d00                	addi	s0,sp,688
     8da:	000d                	c.nop	3
     8dc:	0b3a0e03          	lb	t3,179(s4)
     8e0:	0b39053b          	0xb39053b
     8e4:	1349                	addi	t1,t1,-14
     8e6:	0000                	unimp
     8e8:	151e                	slli	a0,a0,0x27
     8ea:	2701                	jal	fea <core_bench_list+0x2aa>
     8ec:	0119                	addi	sp,sp,6
     8ee:	1f000013          	li	zero,496
     8f2:	0034                	addi	a3,sp,8
     8f4:	0b3a0e03          	lb	t3,179(s4)
     8f8:	0b39053b          	0xb39053b
     8fc:	1349                	addi	t1,t1,-14
     8fe:	193c193f 34200000 	0x34200000193c193f
        for (i = 0; i < default_num_contexts; i++)
     906:	0300                	addi	s0,sp,384
     908:	3a0e                	fld	fs4,224(sp)
     90a:	390b3b0b          	0x390b3b0b
     90e:	3f13490b          	0x3f13490b
     912:	3c19                	jal	328 <main+0x2ac>
     914:	0019                	c.nop	6
     916:	2100                	fld	fs0,0(a0)
    if (results[0].execs & ID_MATRIX)
     918:	012e                	slli	sp,sp,0xb
     91a:	0e03193f 053b0b3a 	0x53b0b3a0e03193f
        for (i = 0; i < default_num_contexts; i++)
     922:	0b39                	addi	s6,s6,14
     924:	0b201927          	0xb201927
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	1301                	addi	t1,t1,-32
     92a:	0000                	unimp
     92c:	0522                	slli	a0,a0,0x8
     92e:	0300                	addi	s0,sp,384
     930:	3a08                	fld	fa0,48(a2)
     932:	39053b0b          	0x39053b0b
     936:	0013490b          	0x13490b
     93a:	2300                	fld	fs0,0(a4)
        for (i = 0; i < default_num_contexts; i++)
     93c:	0034                	addi	a3,sp,8
     93e:	0b3a0803          	lb	a6,179(s4)
     942:	0b39053b          	0xb39053b
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     946:	1349                	addi	t1,t1,-14
     948:	0000                	unimp
     94a:	0b24                	addi	s1,sp,408
     94c:	0001                	nop
     94e:	2500                	fld	fs0,8(a0)
     950:	012e                	slli	sp,sp,0xb
     952:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     95a:	0b39                	addi	s6,s6,14
     95c:	13491927          	0x13491927
     960:	0b20                	addi	s0,sp,408
     962:	1301                	addi	t1,t1,-32
     964:	0000                	unimp
     966:	0526                	slli	a0,a0,0x9
     968:	0300                	addi	s0,sp,384
     96a:	3a08                	fld	fa0,48(a2)
     96c:	390b3b0b          	0x390b3b0b
     970:	0013490b          	0x13490b
     974:	2700                	fld	fs0,8(a4)
     976:	0005                	c.nop	1
        for (i = 0; i < default_num_contexts; i++)
     978:	0b3a0e03          	lb	t3,179(s4)
     97c:	0b390b3b          	0xb390b3b
     980:	1349                	addi	t1,t1,-14
     982:	0000                	unimp
     984:	3428                	fld	fa0,104(s0)
     986:	0300                	addi	s0,sp,384
     988:	3a08                	fld	fa0,48(a2)
     98a:	390b3b0b          	0x390b3b0b
     98e:	0013490b          	0x13490b
    if (results[0].execs & ID_STATE)
     992:	2900                	fld	fs0,16(a0)
     994:	0034                	addi	a3,sp,8
     996:	0b3a0e03          	lb	t3,179(s4)
        for (i = 0; i < default_num_contexts; i++)
     99a:	0b390b3b          	0xb390b3b
     99e:	1349                	addi	t1,t1,-14
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	0000                	unimp
     9a2:	2e2a                	fld	ft8,136(sp)
     9a4:	3f01                	jal	8b4 <main+0x838>
     9a6:	0319                	addi	t1,t1,6
     9a8:	3a0e                	fld	fs4,224(sp)
     9aa:	390b3b0b          	0x390b3b0b
     9ae:	4919270b          	0x4919270b
     9b2:	12011113          	0x12011113
        for (i = 0; i < default_num_contexts; i++)
     9b6:	4006                	0x4006
     9b8:	9618                	0x9618
     9ba:	1942                	slli	s2,s2,0x30
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9bc:	1301                	addi	t1,t1,-32
     9be:	0000                	unimp
     9c0:	0300052b          	0x300052b
     9c4:	3a0e                	fld	fs4,224(sp)
     9c6:	390b3b0b          	0x390b3b0b
     9ca:	0213490b          	0x213490b
     9ce:	2c000017          	auipc	zero,0x2c000
     9d2:	0005                	c.nop	1
     9d4:	0b3a0803          	lb	a6,179(s4)
     9d8:	0b390b3b          	0xb390b3b
     9dc:	1349                	addi	t1,t1,-14
     9de:	1702                	slli	a4,a4,0x20
     9e0:	0000                	unimp
     9e2:	342d                	jal	40c <main+0x390>
     9e4:	0300                	addi	s0,sp,384
     9e6:	3a08                	fld	fa0,48(a2)
     9e8:	390b3b0b          	0x390b3b0b
     9ec:	0213490b          	0x213490b
        for (i = 0; i < default_num_contexts; i++)
     9f0:	2e000017          	auipc	zero,0x2e000
     9f4:	0034                	addi	a3,sp,8
     9f6:	0b3a0e03          	lb	t3,179(s4)
     9fa:	0b390b3b          	0xb390b3b
     9fe:	1349                	addi	t1,t1,-14
     a00:	1702                	slli	a4,a4,0x20
     a02:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	0182892f          	0x182892f
    for (i = 0; i < default_num_contexts; i++)
     a08:	1101                	addi	sp,sp,-32
     a0a:	3101                	jal	60a <main+0x58e>
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a0c:	30000013          	li	zero,768
     a10:	828a                	mv	t0,sp
     a12:	0001                	nop
     a14:	1802                	slli	a6,a6,0x20
     a16:	4291                	li	t0,4
    for (i = 0; i < default_num_contexts; i++)
     a18:	0018                	0x18
     a1a:	3100                	fld	fs0,32(a0)
     a1c:	011d                	addi	sp,sp,7
     a1e:	1331                	addi	t1,t1,-20
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	0152                	slli	sp,sp,0x14
     a22:	1755                	addi	a4,a4,-11
     a24:	0b58                	addi	a4,sp,404
     a26:	0b59                	addi	s6,s6,22
    for (i = 0; i < default_num_contexts; i++)
     a28:	13010b57          	0x13010b57
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	0000                	unimp
     a2e:	0532                	slli	a0,a0,0xc
     a30:	3100                	fld	fs0,32(a0)
     a32:	00170213          	addi	tp,a4,1
     a36:	3300                	fld	fs0,32(a4)
     a38:	1755010b          	0x1755010b
     a3c:	0000                	unimp
     a3e:	3434                	fld	fa3,104(s0)
     a40:	3100                	fld	fs0,32(a0)
     a42:	00170213          	addi	tp,a4,1
     a46:	3500                	fld	fs0,40(a0)
     a48:	0005                	c.nop	1
     a4a:	1331                	addi	t1,t1,-20
     a4c:	0000                	unimp
     a4e:	0b36                	slli	s6,s6,0xd
     a50:	3101                	jal	650 <main+0x5d4>
     a52:	00175513          	srli	a0,a4,0x1
    for (i = 0; i < default_num_contexts; i++)
     a56:	3700                	fld	fs0,40(a4)
     a58:	8289                	srli	a3,a3,0x2
     a5a:	0101                	addi	sp,sp,0
     a5c:	0111                	addi	sp,sp,4
     a5e:	1331                	addi	t1,t1,-20
     a60:	1301                	addi	t1,t1,-32
     a62:	0000                	unimp
     a64:	2e38                	fld	fa4,88(a2)
     a66:	3f01                	jal	976 <main+0x8fa>
    if (total_errors == 0)
     a68:	0319                	addi	t1,t1,6
     a6a:	3a0e                	fld	fs4,224(sp)
    if (total_errors > 0)
     a6c:	390b3b0b          	0x390b3b0b
        ee_printf("Errors detected\n");
     a70:	4919270b          	0x4919270b
     a74:	12011113          	0x12011113
     a78:	4006                	0x4006
     a7a:	9718                	0x9718
     a7c:	1942                	slli	s2,s2,0x30
     a7e:	1301                	addi	t1,t1,-32
    portable_fini(&(results[0].port));
     a80:	0000                	unimp
     a82:	8939                	andi	a0,a0,14
     a84:	0182                	c.slli64	gp
     a86:	1100                	addi	s0,sp,160
     a88:	3101                	jal	688 <main+0x60c>
     a8a:	3a000013          	li	zero,928
}
     a8e:	8289                	srli	a3,a3,0x2
     a90:	0001                	nop
     a92:	0111                	addi	sp,sp,4
     a94:	4295                	li	t0,5
     a96:	3119                	jal	69c <main+0x620>
     a98:	3b000013          	li	zero,944
     a9c:	012e                	slli	sp,sp,0xb
     a9e:	1331                	addi	t1,t1,-20
     aa0:	0111                	addi	sp,sp,4
     aa2:	0612                	slli	a2,a2,0x4
     aa4:	1840                	addi	s0,sp,52
     aa6:	01194297          	auipc	t0,0x1194
     aaa:	3c000013          	li	zero,960
     aae:	0005                	c.nop	1
     ab0:	1331                	addi	t1,t1,-20
     ab2:	1802                	slli	a6,a6,0x20
     ab4:	0000                	unimp
     ab6:	2e3d                	jal	df4 <core_bench_list+0xb4>
     ab8:	3101                	jal	6b8 <main+0x63c>
     aba:	12011113          	0x12011113
     abe:	4006                	0x4006
     ac0:	9618                	0x9618
     ac2:	1942                	slli	s2,s2,0x30
     ac4:	1301                	addi	t1,t1,-32
     ac6:	0000                	unimp
     ac8:	0b3e                	slli	s6,s6,0xf
     aca:	1101                	addi	sp,sp,-32
     acc:	1201                	addi	tp,tp,-32
     ace:	0106                	slli	sp,sp,0x1
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	3f000013          	li	zero,1008
     ad4:	002e                	c.slli	zero,0xb
     ad6:	193c193f 0e030e6e 	0xe030e6e193c193f
     ade:	0b3a                	slli	s6,s6,0xe
     ae0:	00000b3b          	0xb3b
     ae4:	2e40                	fld	fs0,152(a2)
     ae6:	3f00                	fld	fs0,56(a4)
     ae8:	3c19                	jal	4fe <main+0x482>
     aea:	6e19                	lui	t3,0x6
            j++;
     aec:	030e                	slli	t1,t1,0x3
     aee:	3a0e                	fld	fs4,224(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     af0:	390b3b0b          	0x390b3b0b
     af4:	0000000b          	0xb
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	1101                	addi	sp,sp,-32
     afa:	2501                	jal	10fa <__stack_size+0xfa>
     afc:	130e                	slli	t1,t1,0x23
     afe:	1b0e030b          	0x1b0e030b
     b02:	550e                	lw	a0,224(sp)
     b04:	10011117          	auipc	sp,0x10011
     b08:	02000017          	auipc	zero,0x2000
     b0c:	0024                	addi	s1,sp,8
     b0e:	0b3e0b0b          	0xb3e0b0b
     b12:	00000e03          	lb	t3,0(zero) # 0 <_start>
        if (results[i].execs & ID_LIST)
     b16:	0b002403          	lw	s0,176(zero) # b0 <main+0x34>
     b1a:	030b3e0b          	0x30b3e0b
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1e:	0008                	0x8
     b20:	0400                	addi	s0,sp,512
     b22:	0016                	c.slli	zero,0x5
     b24:	0b3a0e03          	lb	t3,179(s4)
     b28:	0b390b3b          	0xb390b3b
     b2c:	1349                	addi	t1,t1,-14
     b2e:	0000                	unimp
     b30:	0f05                	addi	t5,t5,1
     b32:	0b00                	addi	s0,sp,400
     b34:	0013490b          	0x13490b
     b38:	0600                	addi	s0,sp,768
     b3a:	0e030013          	addi	zero,t1,224
     b3e:	193c                	addi	a5,sp,184
     b40:	0000                	unimp
     b42:	03001607          	0x3001607
     b46:	3a0e                	fld	fs4,224(sp)
            j++;
     b48:	39053b0b          	0x39053b0b
     b4c:	0013490b          	0x13490b
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	0800                	addi	s0,sp,16
     b52:	0b0b0117          	auipc	sp,0xb0b0
     b56:	0b3a                	slli	s6,s6,0xe
            j++;
     b58:	0b390b3b          	0xb390b3b
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	1301                	addi	t1,t1,-32
     b5e:	0000                	unimp
     b60:	0d09                	addi	s10,s10,2
     b62:	0300                	addi	s0,sp,384
        ee_printf(
     b64:	3a0e                	fld	fs4,224(sp)
     b66:	390b3b0b          	0x390b3b0b
     b6a:	0013490b          	0x13490b
     b6e:	0a00                	addi	s0,sp,272
     b70:	0101                	addi	sp,sp,0
     b72:	1349                	addi	t1,t1,-14
     b74:	1301                	addi	t1,t1,-32
     b76:	0000                	unimp
            res->crclist = res->crc;
     b78:	4900210b          	0x4900210b
    for (i = 0; i < iterations; i++)
     b7c:	000b2f13          	slti	t5,s6,0
     b80:	0c00                	addi	s0,sp,528
     b82:	0b0b0113          	addi	sp,s6,176
     b86:	0b3a                	slli	s6,s6,0xe
     b88:	0b390b3b          	0xb390b3b
        && (results[0].seed3 == 0))
     b8c:	1301                	addi	t1,t1,-32
     b8e:	0000                	unimp
     b90:	0d0d                	addi	s10,s10,3
     b92:	0300                	addi	s0,sp,384
     b94:	3a0e                	fld	fs4,224(sp)
     b96:	390b3b0b          	0x390b3b0b
        results[0].seed1 = 0x3415;
     b9a:	3813490b          	0x3813490b
     b9e:	0e00000b          	0xe00000b
     ba2:	0b0b000f          	0xb0b000f
     ba6:	0000                	unimp
        results[0].seed3 = 0x66;
     ba8:	0301130f          	0x301130f
     bac:	0b0e                	slli	s6,s6,0x3
     bae:	3b0b3a0b          	0x3b0b3a0b
     bb2:	010b390b          	0x10b390b
        printf("start test22\n");
     bb6:	10000013          	li	zero,256
        results[0].execs = ALL_ALGORITHMS_MASK;
     bba:	000d                	c.nop	3
        printf("start test22\n");
     bbc:	0b3a0803          	lb	a6,179(s4)
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	0b390b3b          	0xb390b3b
        printf("start test22\n");
     bc4:	1349                	addi	t1,t1,-14
     bc6:	0b38                	addi	a4,sp,408
     bc8:	0000                	unimp
     bca:	1311                	addi	t1,t1,-28
     bcc:	0301                	addi	t1,t1,0
     bce:	0b0e                	slli	s6,s6,0x3
        ee_printf(
     bd0:	3a05                	jal	500 <main+0x484>
     bd2:	390b3b0b          	0x390b3b0b
     bd6:	0013010b          	0x13010b
     bda:	1200                	addi	s0,sp,288
     bdc:	000d                	c.nop	3
     bde:	0b3a0e03          	lb	t3,179(s4)
        if (known_id == 3)
     be2:	0b390b3b          	0xb390b3b
     be6:	1349                	addi	t1,t1,-14
     be8:	0538                	addi	a4,sp,648
     bea:	0000                	unimp
                      default_num_contexts * results[0].iterations
     bec:	27001513          	0x27001513
     bf0:	0019                	c.nop	6
     bf2:	1400                	addi	s0,sp,544
     bf4:	0115                	addi	sp,sp,5
     bf6:	13491927          	0x13491927
     bfa:	1301                	addi	t1,t1,-32
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	0000                	unimp
     bfe:	0515                	addi	a0,a0,5
     c00:	4900                	lw	s0,16(a0)
     c02:	16000013          	li	zero,352
     c06:	0026                	c.slli	zero,0x9
                          / time_in_secs(total_time),
     c08:	1349                	addi	t1,t1,-14
     c0a:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	03011317          	auipc	t1,0x3011
                          / time_in_secs(total_time),
     c10:	0b0e                	slli	s6,s6,0x3
     c12:	3a05                	jal	542 <main+0x4c6>
     c14:	39053b0b          	0x39053b0b
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	0013010b          	0x13010b
     c1c:	1800                	addi	s0,sp,48
     c1e:	000d                	c.nop	3
     c20:	0b3a0e03          	lb	t3,179(s4)
     c24:	0b39053b          	0xb39053b
     c28:	1349                	addi	t1,t1,-14
     c2a:	0b38                	addi	a4,sp,408
     c2c:	0000                	unimp
     c2e:	0d19                	addi	s10,s10,6
     c30:	0300                	addi	s0,sp,384
     c32:	3a0e                	fld	fs4,224(sp)
     c34:	39053b0b          	0x39053b0b
     c38:	3813490b          	0x3813490b
     c3c:	0005                	c.nop	1
     c3e:	1a00                	addi	s0,sp,304
     c40:	0e030113          	addi	sp,t1,224 # 3011cec <__freertos_irq_stack_top+0x2001cec>
     c44:	0b3a0b0b          	0xb3a0b0b
     c48:	0b39053b          	0xb39053b
     c4c:	1301                	addi	t1,t1,-32
     c4e:	0000                	unimp
            ee_printf(" / %s", MEM_LOCATION);
     c50:	0b01131b          	0xb01131b
     c54:	3b0b3a0b          	0x3b0b3a0b
     c58:	3905                	jal	888 <main+0x80c>
     c5a:	0013010b          	0x13010b
     c5e:	1c00                	addi	s0,sp,560
     c60:	0b0b0117          	auipc	sp,0xb0b0
            ee_printf("\n");
     c64:	0b3a                	slli	s6,s6,0xe
     c66:	0b39053b          	0xb39053b
     c6a:	1301                	addi	t1,t1,-32
     c6c:	0000                	unimp
     c6e:	0d1d                	addi	s10,s10,7
     c70:	0300                	addi	s0,sp,384
     c72:	3a0e                	fld	fs4,224(sp)
        ee_printf(
     c74:	39053b0b          	0x39053b0b
     c78:	0013490b          	0x13490b
     c7c:	1e00                	addi	s0,sp,816
     c7e:	0115                	addi	sp,sp,5
     c80:	13011927          	0x13011927
        total_errors++;
     c84:	0000                	unimp
     c86:	341f 0300 3a0e      	0x3a0e0300341f
    if (results[0].execs & ID_STATE)
     c8c:	39053b0b          	0x39053b0b
     c90:	3f13490b          	0x3f13490b
     c94:	3c19                	jal	6aa <main+0x62e>
     c96:	0019                	c.nop	6
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	2000                	fld	fs0,0(s0)
     c9a:	0034                	addi	a3,sp,8
     c9c:	0b3a0e03          	lb	t3,179(s4)
     ca0:	0b390b3b          	0xb390b3b
     ca4:	1349                	addi	t1,t1,-14
     ca6:	193c193f 35210000 	0x35210000193c193f
     cae:	4900                	lw	s0,16(a0)
            known_id = 4;
     cb0:	22000013          	li	zero,544
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	0034                	addi	a3,sp,8
     cb6:	0b3a0e03          	lb	t3,179(s4)
     cba:	0b390b3b          	0xb390b3b
     cbe:	1349                	addi	t1,t1,-14
     cc0:	1802193f 34230000 	0x342300001802193f
            known_id = 4;
     cc8:	0300                	addi	s0,sp,384
     cca:	3a0e                	fld	fs4,224(sp)
            ee_printf("6k validation run parameters for coremark.\n");
     ccc:	390b3b0b          	0x390b3b0b
     cd0:	0013490b          	0x13490b
     cd4:	2400                	fld	fs0,8(s0)
     cd6:	0034                	addi	a3,sp,8
     cd8:	0b3a1347          	fmsub.d	ft6,fs4,fs3,ft1,rtz
     cdc:	0b390b3b          	0xb390b3b
     ce0:	1802                	slli	a6,a6,0x20
     ce2:	0000                	unimp
     ce4:	2e25                	jal	101c <__stack_size+0x1c>
     ce6:	3f01                	jal	bf6 <main+0xb7a>
     ce8:	0319                	addi	t1,t1,6
     cea:	3a0e                	fld	fs4,224(sp)
            known_id = 1;
     cec:	390b3b0b          	0x390b3b0b
            ee_printf("6k validation run parameters for coremark.\n");
     cf0:	1119270b          	0x1119270b
     cf4:	1201                	addi	tp,tp,-32
     cf6:	4006                	0x4006
     cf8:	9718                	0x9718
     cfa:	1942                	slli	s2,s2,0x30
            known_id = 1;
     cfc:	1301                	addi	t1,t1,-32
     cfe:	0000                	unimp
     d00:	0526                	slli	a0,a0,0x9
     d02:	0300                	addi	s0,sp,384
            ee_printf("6k performance run parameters for coremark.\n");
     d04:	3a08                	fld	fa0,48(a2)
     d06:	390b3b0b          	0x390b3b0b
     d0a:	0213490b          	0x213490b
     d0e:	0018                	0x18
     d10:	2700                	fld	fs0,8(a4)
     d12:	0005                	c.nop	1
     d14:	0b3a0803          	lb	a6,179(s4)
     d18:	0b390b3b          	0xb390b3b
     d1c:	1349                	addi	t1,t1,-14
     d1e:	1702                	slli	a4,a4,0x20
     d20:	0000                	unimp
     d22:	0528                	addi	a0,sp,648
     d24:	0300                	addi	s0,sp,384
     d26:	3a0e                	fld	fs4,224(sp)
     d28:	390b3b0b          	0x390b3b0b
     d2c:	0213490b          	0x213490b
            known_id = 0;
     d30:	29000017          	auipc	zero,0x29000
     d34:	8289                	srli	a3,a3,0x2
     d36:	0101                	addi	sp,sp,0
        for (i = 0; i < default_num_contexts; i++)
     d38:	0111                	addi	sp,sp,4
     d3a:	1331                	addi	t1,t1,-20
     d3c:	0000                	unimp
     d3e:	8a2a                	mv	s4,a0
    ee_s16     find_num = res->seed3;
     d40:	0182                	c.slli64	gp
     d42:	0200                	addi	s0,sp,256
{
     d44:	9118                	0x9118
     d46:	1842                	slli	a6,a6,0x30
     d48:	0000                	unimp
     d4a:	3f012e2b          	0x3f012e2b
     d4e:	0319                	addi	t1,t1,6
     d50:	3a0e                	fld	fs4,224(sp)
     d52:	390b3b0b          	0x390b3b0b
     d56:	4919270b          	0x4919270b
     d5a:	12011113          	0x12011113
     d5e:	4006                	0x4006
     d60:	9618                	0x9618
     d62:	1942                	slli	s2,s2,0x30
     d64:	1301                	addi	t1,t1,-32
     d66:	0000                	unimp
     d68:	2e2c                	fld	fa1,88(a2)
     d6a:	3f00                	fld	fs0,56(a4)
     d6c:	0319                	addi	t1,t1,6
     d6e:	3a0e                	fld	fs4,224(sp)
     d70:	390b3b0b          	0x390b3b0b
     d74:	4919270b          	0x4919270b
     d78:	12011113          	0x12011113
     d7c:	4006                	0x4006
     d7e:	9718                	0x9718
     d80:	1942                	slli	s2,s2,0x30
     d82:	0000                	unimp
    list_head *list     = res->list;
     d84:	892d                	andi	a0,a0,11
     d86:	0182                	c.slli64	gp
    for (i = 0; i < find_num; i++)
     d88:	1100                	addi	s0,sp,160
     d8a:	3101                	jal	98a <main+0x90e>
    info.idx = finder_idx;
     d8c:	2e000013          	li	zero,736
    for (i = 0; i < find_num; i++)
     d90:	002e                	c.slli	zero,0xb
     d92:	193c193f 0e030e6e 	0xe030e6e193c193f
    ee_u16     found = 0, missed = 0;
     d9a:	0b3a                	slli	s6,s6,0xe
    ee_u16     retval = 0;
     d9c:	00000b3b          	0xb3b
    if (info->idx >= 0)
     da0:	3f002e2f          	0x3f002e2f
        info.data16 = (i & 0xff);
     da4:	3c19                	jal	7ba <main+0x73e>
     da6:	6e19                	lui	t3,0x6
     da8:	030e                	slli	t1,t1,0x3
     daa:	3a0e                	fld	fs4,224(sp)
    if (info->idx >= 0)
     dac:	390b3b0b          	0x390b3b0b
        while (list && (list->info->idx != info->idx))
     db0:	0000000b          	0xb
     db4:	1101                	addi	sp,sp,-32
     db6:	2501                	jal	13b6 <__stack_size+0x3b6>
     db8:	130e                	slli	t1,t1,0x23
     dba:	1b0e030b          	0x1b0e030b
     dbe:	550e                	lw	a0,224(sp)
     dc0:	10011117          	auipc	sp,0x10011
     dc4:	02000017          	auipc	zero,0x2000
     dc8:	0024                	addi	s1,sp,8
     dca:	0b3e0b0b          	0xb3e0b0b
     dce:	00000e03          	lb	t3,0(zero) # 0 <_start>
     dd2:	0b002403          	lw	s0,176(zero) # b0 <main+0x34>
     dd6:	030b3e0b          	0x30b3e0b
     dda:	0008                	0x8
            list = list->next;
     ddc:	0400                	addi	s0,sp,512
     dde:	0016                	c.slli	zero,0x5
        while (list && (list->info->idx != info->idx))
     de0:	0b3a0e03          	lb	t3,179(s4)
     de4:	0b390b3b          	0xb390b3b
     de8:	1349                	addi	t1,t1,-14
     dea:	0000                	unimp
    while (list)
     dec:	0f05                	addi	t5,t5,1
     dee:	0b00                	addi	s0,sp,400
     df0:	0013490b          	0x13490b
        tmp        = list->next;
     df4:	0600                	addi	s0,sp,768
     df6:	0e030013          	addi	zero,t1,224
        list->next = next;
     dfa:	193c                	addi	a5,sp,184
    while (list)
     dfc:	0000                	unimp
     dfe:	03001607          	0x3001607
        if (this_find == NULL)
     e02:	3a0e                	fld	fs4,224(sp)
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	39053b0b          	0x39053b0b
            found++;
     e08:	0013490b          	0x13490b
     e0c:	0800                	addi	s0,sp,16
     e0e:	0b0b0117          	auipc	sp,0xb0b0
            if (this_find->info->data16 & 0x1) /* use found value */
     e12:	0b3a                	slli	s6,s6,0xe
            found++;
     e14:	0b390b3b          	0xb390b3b
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	1301                	addi	t1,t1,-32
     e1a:	0000                	unimp
     e1c:	0d09                	addi	s10,s10,2
     e1e:	0300                	addi	s0,sp,384
                retval += (this_find->info->data16 >> 9) & 1;
     e20:	3a0e                	fld	fs4,224(sp)
     e22:	390b3b0b          	0x390b3b0b
     e26:	0013490b          	0x13490b
     e2a:	0a00                	addi	s0,sp,272
     e2c:	0101                	addi	sp,sp,0
     e2e:	1349                	addi	t1,t1,-14
     e30:	1301                	addi	t1,t1,-32
     e32:	0000                	unimp
            if (this_find->next != NULL)
     e34:	4900210b          	0x4900210b
     e38:	000b2f13          	slti	t5,s6,0
                this_find->next = finder->next;
     e3c:	0c00                	addi	s0,sp,528
     e3e:	0b0b0113          	addi	sp,s6,176
     e42:	0b3a                	slli	s6,s6,0xe
                finder->next    = list->next;
     e44:	0b390b3b          	0xb390b3b
     e48:	1301                	addi	t1,t1,-32
     e4a:	0000                	unimp
                list->next      = finder;
     e4c:	0d0d                	addi	s10,s10,3
     e4e:	0300                	addi	s0,sp,384
        if (info.idx >= 0)
     e50:	3a0e                	fld	fs4,224(sp)
     e52:	390b3b0b          	0x390b3b0b
     e56:	3813490b          	0x3813490b
            info.idx++;
     e5a:	0e00000b          	0xe00000b
     e5e:	0b0b000f          	0xb0b000f
     e62:	0000                	unimp
     e64:	0301130f          	0x301130f
     e68:	0b0e                	slli	s6,s6,0x3
     e6a:	3b0b3a0b          	0x3b0b3a0b
     e6e:	010b390b          	0x10b390b
     e72:	10000013          	li	zero,256
    for (i = 0; i < find_num; i++)
     e76:	000d                	c.nop	3
     e78:	0b3a0803          	lb	a6,179(s4)
     e7c:	0b390b3b          	0xb390b3b
     e80:	1349                	addi	t1,t1,-14
     e82:	0b38                	addi	a4,sp,408
     e84:	0000                	unimp
     e86:	1311                	addi	t1,t1,-28
     e88:	0301                	addi	t1,t1,0
     e8a:	0b0e                	slli	s6,s6,0x3
     e8c:	3a05                	jal	7bc <main+0x740>
     e8e:	390b3b0b          	0x390b3b0b
    if (finder_idx > 0)
     e92:	0013010b          	0x13010b
    remover = core_list_remove(list->next);
     e96:	1200                	addi	s0,sp,288
    if (info->idx >= 0)
     e98:	000d                	c.nop	3
     e9a:	0b3a0e03          	lb	t3,179(s4)
    list_head *ret = item->next;
     e9e:	0b390b3b          	0xb390b3b
    tmp        = item->info;
     ea2:	1349                	addi	t1,t1,-14
    item->info = ret->info;
     ea4:	0538                	addi	a4,sp,648
     ea6:	0000                	unimp
    item->next = item->next->next;
     ea8:	27001513          	0x27001513
    item->info = ret->info;
     eac:	0019                	c.nop	6
     eae:	1400                	addi	s0,sp,544
    ret->info  = tmp;
     eb0:	0115                	addi	sp,sp,5
     eb2:	13491927          	0x13491927
    item->next = item->next->next;
     eb6:	1301                	addi	t1,t1,-32
    if (info->idx >= 0)
     eb8:	0000                	unimp
     eba:	0515                	addi	a0,a0,5
    ret->next  = NULL;
     ebc:	4900                	lw	s0,16(a0)
     ebe:	16000013          	li	zero,352
    if (info->idx >= 0)
     ec2:	0026                	c.slli	zero,0x9
        while (list && (list->info->idx != info->idx))
     ec4:	1349                	addi	t1,t1,-14
     ec6:	0000                	unimp
     ec8:	03011317          	auipc	t1,0x3011
     ecc:	0b0e                	slli	s6,s6,0x3
     ece:	3a05                	jal	7fe <main+0x782>
     ed0:	39053b0b          	0x39053b0b
            list = list->next;
     ed4:	0013010b          	0x13010b
        while (list && (list->info->idx != info->idx))
     ed8:	1800                	addi	s0,sp,48
     eda:	000d                	c.nop	3
        finder = list->next;
     edc:	0b3a0e03          	lb	t3,179(s4)
    while (finder)
     ee0:	0b39053b          	0xb39053b
        retval = crc16(list->info->data16, retval);
     ee4:	1349                	addi	t1,t1,-14
     ee6:	0b38                	addi	a4,sp,408
     ee8:	0000                	unimp
     eea:	0d19                	addi	s10,s10,6
     eec:	0300                	addi	s0,sp,384
     eee:	3a0e                	fld	fs4,224(sp)
     ef0:	39053b0b          	0x39053b0b
     ef4:	3813490b          	0x3813490b
        finder = finder->next;
     ef8:	0005                	c.nop	1
     efa:	1a00                	addi	s0,sp,304
        retval = crc16(list->info->data16, retval);
     efc:	0e030113          	addi	sp,t1,224 # 3011fa8 <__freertos_irq_stack_top+0x2001fa8>
    while (finder)
     f00:	0b3a0b0b          	0xb3a0b0b
     f04:	0b39053b          	0xb39053b
     f08:	1301                	addi	t1,t1,-32
     f0a:	0000                	unimp
    item_removed->info  = item_modified->info;
     f0c:	0b01131b          	0xb01131b
    item_removed->next  = item_modified->next;
     f10:	3b0b3a0b          	0x3b0b3a0b
    insize = 1;
     f14:	3905                	jal	b44 <main+0xac8>
     f16:	0013010b          	0x13010b
    item_removed->info  = item_modified->info;
     f1a:	1c00                	addi	s0,sp,560
    item_modified->info = tmp;
     f1c:	0b0b0117          	auipc	sp,0xb0b0
    item_removed->next  = item_modified->next;
     f20:	0b3a                	slli	s6,s6,0xe
     f22:	0b39053b          	0xb39053b
    item_modified->next = item_removed;
     f26:	1301                	addi	t1,t1,-32
        tail = NULL;
     f28:	0000                	unimp
     f2a:	0d1d                	addi	s10,s10,7
        list = NULL;
     f2c:	0300                	addi	s0,sp,384
     f2e:	3a0e                	fld	fs4,224(sp)
        nmerges = 0; /* count number of merges we do in this pass */
     f30:	39053b0b          	0x39053b0b
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	0013490b          	0x13490b
            nmerges++; /* there exists a merge to be done */
     f38:	1e00                	addi	s0,sp,816
     f3a:	0115                	addi	sp,sp,5
     f3c:	13011927          	0x13011927
            psize = 0;
     f40:	0000                	unimp
     f42:	341f 0300 3a0e      	0x3a0e0300341f
                psize++;
     f48:	39053b0b          	0x39053b0b
                if (!q)
     f4c:	3f13490b          	0x3f13490b
            for (i = 0; i < insize; i++)
     f50:	3c19                	jal	966 <main+0x8ea>
     f52:	0019                	c.nop	6
     f54:	2000                	fld	fs0,0(s0)
     f56:	0034                	addi	a3,sp,8
                    list = e;
     f58:	0b3a0e03          	lb	t3,179(s4)
     f5c:	0b390b3b          	0xb390b3b
     f60:	1349                	addi	t1,t1,-14
     f62:	193c193f 04210000 	0x4210000193c193f
                else if (qsize == 0 || !q)
     f6a:	0301                	addi	t1,t1,0
     f6c:	3e0e                	fld	ft8,224(sp)
     f6e:	490b0b0b          	0x490b0b0b
                else if (cmp(p->info, q->info, res) <= 0)
     f72:	3b0b3a13          	sltiu	s4,s6,944
     f76:	010b390b          	0x10b390b
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f7a:	22000013          	li	zero,544
    return a->idx - b->idx;
     f7e:	0028                	addi	a0,sp,8
     f80:	0b1c0e03          	lb	t3,177(s8)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	0000                	unimp
     f86:	03003423          	0x3003423
     f8a:	3a0e                	fld	fs4,224(sp)
     f8c:	390b3b0b          	0x390b3b0b
     f90:	0213490b          	0x213490b
     f94:	0018                	0x18
     f96:	2400                	fld	fs0,8(s0)
     f98:	012e                	slli	sp,sp,0xb
     f9a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    return a->idx - b->idx;
     fa2:	0b39                	addi	s6,s6,14
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	13491927          	0x13491927
     fa8:	0111                	addi	sp,sp,4
     faa:	0612                	slli	a2,a2,0x4
     fac:	1840                	addi	s0,sp,52
     fae:	01194297          	auipc	t0,0x1194
     fb2:	25000013          	li	zero,592
     fb6:	0005                	c.nop	1
     fb8:	0b3a0e03          	lb	t3,179(s4)
                else if (cmp(p->info, q->info, res) <= 0)
     fbc:	0b390b3b          	0xb390b3b
                    qsize--;
     fc0:	1349                	addi	t1,t1,-14
     fc2:	1702                	slli	a4,a4,0x20
                    q = q->next;
     fc4:	0000                	unimp
     fc6:	0526                	slli	a0,a0,0x9
                    qsize--;
     fc8:	0300                	addi	s0,sp,384
     fca:	3a0e                	fld	fs4,224(sp)
                if (tail)
     fcc:	390b3b0b          	0x390b3b0b
                    tail->next = e;
     fd0:	0213490b          	0x213490b
                    list = e;
     fd4:	0018                	0x18
     fd6:	2700                	fld	fs0,8(a4)
            while (psize > 0 || (qsize > 0 && q))
     fd8:	0034                	addi	a3,sp,8
     fda:	0b3a0803          	lb	a6,179(s4)
     fde:	0b390b3b          	0xb390b3b
     fe2:	1349                	addi	t1,t1,-14
                    qsize--;
     fe4:	1702                	slli	a4,a4,0x20
     fe6:	0000                	unimp
     fe8:	3428                	fld	fa0,104(s0)
     fea:	0300                	addi	s0,sp,384
                    q = q->next;
     fec:	3a0e                	fld	fs4,224(sp)
     fee:	390b3b0b          	0x390b3b0b
                if (tail)
     ff2:	0213490b          	0x213490b
                    list = e;
     ff6:	29000017          	auipc	zero,0x29000
     ffa:	011d                	addi	sp,sp,7
     ffc:	1331                	addi	t1,t1,-20
     ffe:	0152                	slli	sp,sp,0x14
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1000:	1755                	addi	a4,a4,-11
    1002:	0b58                	addi	a4,sp,404
    1004:	0b59                	addi	s6,s6,22
    1006:	13010b57          	0x13010b57
    100a:	0000                	unimp
    100c:	052a                	slli	a0,a0,0xa
    100e:	3100                	fld	fs0,32(a0)
            list = list->next;
    1010:	00170213          	addi	tp,a4,1
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1014:	2b00                	fld	fs0,16(a4)
    1016:	1755010b          	0x1755010b
        finder = list->next;
    101a:	0000                	unimp
    while (finder)
    101c:	342c                	fld	fa1,104(s0)
    101e:	3100                	fld	fs0,32(a0)
    1020:	00170213          	addi	tp,a4,1
                    psize--;
    1024:	2d00                	fld	fs0,24(a0)
    1026:	011d                	addi	sp,sp,7
    1028:	1331                	addi	t1,t1,-20
    102a:	0152                	slli	sp,sp,0x14
                    p = p->next;
    102c:	1755                	addi	a4,a4,-11
    102e:	0b58                	addi	a4,sp,404
    1030:	0559                	addi	a0,a0,22
    1032:	13010b57          	0x13010b57
        while (p)
    1036:	0000                	unimp
        tail->next = NULL;
    1038:	1d2e                	slli	s10,s10,0x2b
    103a:	3101                	jal	c3a <main+0xbbe>
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	55015213          	0x55015213
        insize *= 2;
    1040:	590b5817          	auipc	a6,0x590b5
        while (p)
    1044:	5705                	li	a4,-31
    1046:	2f00000b          	0x2f00000b
    104a:	012e                	slli	sp,sp,0xb
        nmerges = 0; /* count number of merges we do in this pass */
    104c:	0b3a0e03          	lb	t3,179(s4)
        tail = NULL;
    1050:	0b390b3b          	0xb390b3b
        list = NULL;
    1054:	13491927          	0x13491927
    1058:	0b20                	addi	s0,sp,408
    105a:	1301                	addi	t1,t1,-32
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	0000                	unimp
    105e:	0530                	addi	a2,sp,648
    1060:	0300                	addi	s0,sp,384
    1062:	3a08                	fld	fa0,48(a2)
    1064:	390b3b0b          	0x390b3b0b
    1068:	0013490b          	0x13490b
    106c:	3100                	fld	fs0,32(a0)
    106e:	0034                	addi	a3,sp,8
    1070:	0b3a0e03          	lb	t3,179(s4)
    1074:	0b390b3b          	0xb390b3b
    1078:	1349                	addi	t1,t1,-14
    107a:	0000                	unimp
    107c:	2e32                	fld	ft8,264(sp)
    107e:	3f01                	jal	f8e <core_bench_list+0x24e>
    1080:	0319                	addi	t1,t1,6
    1082:	3a0e                	fld	fs4,224(sp)
            list = list->next;
    1084:	390b3b0b          	0x390b3b0b
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1088:	1119270b          	0x1119270b
    108c:	1201                	addi	tp,tp,-32
    108e:	4006                	0x4006
            retval += (list->next->info->data16 >> 8) & 1;
    1090:	9718                	0x9718
    1092:	1942                	slli	s2,s2,0x30
            missed++;
    1094:	1301                	addi	t1,t1,-32
    1096:	0000                	unimp
    1098:	03000533          	mul	a0,zero,a6
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	3a08                	fld	fa0,48(a2)
    109e:	390b3b0b          	0x390b3b0b
            missed++;
    10a2:	0213490b          	0x213490b
            retval += (list->next->info->data16 >> 8) & 1;
    10a6:	34000017          	auipc	zero,0x34000
    10aa:	8289                	srli	a3,a3,0x2
    10ac:	0101                	addi	sp,sp,0
    10ae:	0111                	addi	sp,sp,4
    10b0:	1331                	addi	t1,t1,-20
    10b2:	1301                	addi	t1,t1,-32
    10b4:	0000                	unimp
    10b6:	8a35                	andi	a2,a2,13
    finder = list->next;
    10b8:	0182                	c.slli64	gp
    10ba:	0200                	addi	s0,sp,256
    while (finder)
    10bc:	9118                	0x9118
    10be:	1842                	slli	a6,a6,0x30
        retval = crc16(list->info->data16, retval);
    10c0:	0000                	unimp
    10c2:	8936                	mv	s2,a3
    10c4:	0182                	c.slli64	gp
    10c6:	1101                	addi	sp,sp,-32
    10c8:	9501                	srai	a0,a0,0x20
    10ca:	1942                	slli	s2,s2,0x30
    10cc:	1331                	addi	t1,t1,-20
    10ce:	0000                	unimp
    10d0:	03003437          	lui	s0,0x3003
        finder = finder->next;
    10d4:	3a08                	fld	fa0,48(a2)
    10d6:	390b3b0b          	0x390b3b0b
        retval = crc16(list->info->data16, retval);
    10da:	0213490b          	0x213490b
    while (finder)
    10de:	0018                	0x18
}
    10e0:	3800                	fld	fs0,48(s0)
    10e2:	1755010b          	0x1755010b
    10e6:	1301                	addi	t1,t1,-32
    10e8:	0000                	unimp
    10ea:	8939                	andi	a0,a0,14
    10ec:	0182                	c.slli64	gp
    10ee:	1101                	addi	sp,sp,-32
    10f0:	3101                	jal	cf0 <main+0xc74>
    10f2:	3a000013          	li	zero,928
    10f6:	8289                	srli	a3,a3,0x2
    10f8:	0001                	nop
    10fa:	0111                	addi	sp,sp,4
    10fc:	1331                	addi	t1,t1,-20
    10fe:	0000                	unimp
    1100:	3f002e3b          	0x3f002e3b
    1104:	3c19                	jal	b1a <main+0xa9e>
    1106:	6e19                	lui	t3,0x6
    1108:	030e                	slli	t1,t1,0x3
    110a:	3a0e                	fld	fs4,224(sp)
    110c:	000b3b0b          	0xb3b0b
    1110:	3c00                	fld	fs0,56(s0)
    1112:	002e                	c.slli	zero,0xb
    1114:	193c193f 0e030e6e 	0xe030e6e193c193f
    info.idx = finder_idx;
    111c:	0b3a                	slli	s6,s6,0xe
    111e:	0b390b3b          	0xb390b3b
    1122:	0000                	unimp
    if (finder_idx > 0)
    1124:	0100                	addi	s0,sp,128
    1126:	0111                	addi	sp,sp,4
        while (p)
    1128:	0e25                	addi	t3,t3,9
    112a:	0e030b13          	addi	s6,t1,224
    112e:	17550e1b          	0x17550e1b
    1132:	0111                	addi	sp,sp,4
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	1710                	addi	a2,sp,928
    1136:	0000                	unimp
    1138:	2402                	fld	fs0,0(sp)
    113a:	0b00                	addi	s0,sp,400
        while (p)
    113c:	030b3e0b          	0x30b3e0b
        tail = NULL;
    1140:	000e                	c.slli	zero,0x3
    1142:	0300                	addi	s0,sp,384
        list = NULL;
    1144:	0024                	addi	s1,sp,8
    1146:	0b3e0b0b          	0xb3e0b0b
        nmerges = 0; /* count number of merges we do in this pass */
    114a:	00000803          	lb	a6,0(zero) # 0 <_start>
    114e:	1604                	addi	s1,sp,800
            nmerges++; /* there exists a merge to be done */
    1150:	0300                	addi	s0,sp,384
    1152:	3a0e                	fld	fs4,224(sp)
    1154:	390b3b0b          	0x390b3b0b
            psize = 0;
    1158:	0013490b          	0x13490b
            nmerges++; /* there exists a merge to be done */
    115c:	0500                	addi	s0,sp,640
    115e:	0b0b000f          	0xb0b000f
    1162:	1349                	addi	t1,t1,-14
                q = q->next;
    1164:	0000                	unimp
    1166:	1306                	slli	t1,t1,0x21
                psize++;
    1168:	0300                	addi	s0,sp,384
    116a:	3c0e                	fld	fs8,224(sp)
                if (!q)
    116c:	0019                	c.nop	6
    116e:	0700                	addi	s0,sp,896
            for (i = 0; i < insize; i++)
    1170:	0016                	c.slli	zero,0x5
    1172:	0b3a0e03          	lb	t3,179(s4)
    1176:	0b39053b          	0xb39053b
                    list = e;
    117a:	1349                	addi	t1,t1,-14
            while (psize > 0 || (qsize > 0 && q))
    117c:	0000                	unimp
    117e:	1708                	addi	a0,sp,928
                else if (qsize == 0 || !q)
    1180:	0b01                	addi	s6,s6,0
    1182:	3b0b3a0b          	0x3b0b3a0b
    1186:	010b390b          	0x10b390b
                else if (cmp(p->info, q->info, res) <= 0)
    118a:	09000013          	li	zero,144
    118e:	000d                	c.nop	3
    ee_s16 data = *pdata;
    1190:	0b3a0e03          	lb	t3,179(s4)
    if (optype) /* if cached, use cache */
    1194:	0b390b3b          	0xb390b3b
        return (data & 0x007f);
    1198:	1349                	addi	t1,t1,-14
    119a:	0000                	unimp
    if (optype) /* if cached, use cache */
    119c:	010a                	slli	sp,sp,0x2
    119e:	4901                	li	s2,0
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	00130113          	addi	sp,t1,1
        ee_s16 dtype
    11a4:	0b00                	addi	s0,sp,400
    11a6:	0021                	c.nop	8
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	1349                	addi	t1,t1,-14
    11aa:	00000b2f          	0xb2f
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ae:	130c                	addi	a1,sp,416
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	0b01                	addi	s6,s6,0
    11b2:	3b0b3a0b          	0x3b0b3a0b
        switch (flag)
    11b6:	010b390b          	0x10b390b
    11ba:	0d000013          	li	zero,208
    11be:	000d                	c.nop	3
    11c0:	0b3a0e03          	lb	t3,179(s4)
    11c4:	0b390b3b          	0xb390b3b
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	1349                	addi	t1,t1,-14
    11ca:	0b38                	addi	a4,sp,408
        res->crc = crcu16(retval, res->crc);
    11cc:	0000                	unimp
    11ce:	0f0e                	slli	t5,t5,0x3
    11d0:	0b00                	addi	s0,sp,400
    11d2:	0f00000b          	0xf00000b
    11d6:	0e030113          	addi	sp,t1,224
        retval &= 0x007f;
    11da:	0b3a0b0b          	0xb3a0b0b
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11de:	0b390b3b          	0xb390b3b
    11e2:	1301                	addi	t1,t1,-32
        res->crc = crcu16(retval, res->crc);
    11e4:	0000                	unimp
    11e6:	0d10                	addi	a2,sp,656
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	0300                	addi	s0,sp,384
    11ea:	3a08                	fld	fa0,48(a2)
    11ec:	390b3b0b          	0x390b3b0b
    ee_s16 data = *pdata;
    11f0:	3813490b          	0x3813490b
    if (optype) /* if cached, use cache */
    11f4:	1100000b          	0x1100000b
        return (data & 0x007f);
    11f8:	0e030113          	addi	sp,t1,224
    if (optype) /* if cached, use cache */
    11fc:	0b3a050b          	0xb3a050b
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	0b390b3b          	0xb390b3b
        ee_s16 dtype
    1204:	1301                	addi	t1,t1,-32
    1206:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	0d12                	slli	s10,s10,0x4
    120a:	0300                	addi	s0,sp,384
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120c:	3a0e                	fld	fs4,224(sp)
    120e:	390b3b0b          	0x390b3b0b
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1212:	3813490b          	0x3813490b
        switch (flag)
    1216:	0005                	c.nop	1
    1218:	1300                	addi	s0,sp,416
    121a:	0015                	c.nop	5
    121c:	00001927          	0x1927
    1220:	1514                	addi	a3,sp,672
    1222:	2701                	jal	1922 <matrix_test+0x1ee>
    1224:	4919                	li	s2,6
    1226:	00130113          	addi	sp,t1,1
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    122a:	1500                	addi	s0,sp,672
        res->crc = crcu16(retval, res->crc);
    122c:	0005                	c.nop	1
    122e:	1349                	addi	t1,t1,-14
    1230:	0000                	unimp
    1232:	2616                	fld	fa2,320(sp)
    1234:	4900                	lw	s0,16(a0)
    1236:	17000013          	li	zero,368
        retval &= 0x007f;
    123a:	0e030113          	addi	sp,t1,224
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123e:	0b3a050b          	0xb3a050b
    1242:	0b39053b          	0xb39053b
        res->crc = crcu16(retval, res->crc);
    1246:	1301                	addi	t1,t1,-32
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	0000                	unimp
    124a:	0d18                	addi	a4,sp,656
    124c:	0300                	addi	s0,sp,384
    124e:	3a0e                	fld	fs4,224(sp)
    return val1 - val2;
    1250:	39053b0b          	0x39053b0b
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	3813490b          	0x3813490b
                    qsize--;
    1258:	1900000b          	0x1900000b
                    q = q->next;
    125c:	000d                	c.nop	3
    125e:	0b3a0e03          	lb	t3,179(s4)
                    qsize--;
    1262:	0b39053b          	0xb39053b
                if (tail)
    1266:	1349                	addi	t1,t1,-14
                    tail->next = e;
    1268:	0538                	addi	a4,sp,648
    126a:	0000                	unimp
                    list = e;
    126c:	131a                	slli	t1,t1,0x26
    126e:	0301                	addi	t1,t1,0
            while (psize > 0 || (qsize > 0 && q))
    1270:	0b0e                	slli	s6,s6,0x3
    1272:	3b0b3a0b          	0x3b0b3a0b
    1276:	3905                	jal	ea6 <core_bench_list+0x166>
    1278:	0013010b          	0x13010b
                    qsize--;
    127c:	1b00                	addi	s0,sp,432
    127e:	0b0b0113          	addi	sp,s6,176
    1282:	0b3a                	slli	s6,s6,0xe
                    q = q->next;
    1284:	0b39053b          	0xb39053b
                if (tail)
    1288:	1301                	addi	t1,t1,-32
    128a:	0000                	unimp
                    list = e;
    128c:	171c                	addi	a5,sp,928
    128e:	0b01                	addi	s6,s6,0
    1290:	3b0b3a0b          	0x3b0b3a0b
    1294:	3905                	jal	ec4 <core_bench_list+0x184>
    1296:	0013010b          	0x13010b
                    psize--;
    129a:	1d00                	addi	s0,sp,688
    129c:	000d                	c.nop	3
    129e:	0b3a0e03          	lb	t3,179(s4)
                    p = p->next;
    12a2:	0b39053b          	0xb39053b
    12a6:	1349                	addi	t1,t1,-14
    12a8:	0000                	unimp
    12aa:	151e                	slli	a0,a0,0x27
        while (p)
    12ac:	2701                	jal	19ac <matrix_test+0x278>
    12ae:	0119                	addi	sp,sp,6
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b0:	1f000013          	li	zero,496
        tail->next = NULL;
    12b4:	0034                	addi	a3,sp,8
    12b6:	0b3a0e03          	lb	t3,179(s4)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12ba:	0b39053b          	0xb39053b
    12be:	1349                	addi	t1,t1,-14
        insize *= 2;
    12c0:	193c193f 34200000 	0x34200000193c193f
    12c8:	0300                	addi	s0,sp,384
    12ca:	3a0e                	fld	fs4,224(sp)
        while (p)
    12cc:	390b3b0b          	0x390b3b0b
        tail->next = NULL;
    12d0:	3f13490b          	0x3f13490b
    12d4:	3c19                	jal	cea <main+0xc6e>
    12d6:	0019                	c.nop	6
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	2100                	fld	fs0,0(a0)
    12da:	0035                	c.nop	13
    12dc:	1349                	addi	t1,t1,-14
    12de:	0000                	unimp
    12e0:	2e22                	fld	ft8,8(sp)
    12e2:	3f01                	jal	11f2 <__stack_size+0x1f2>
    12e4:	0319                	addi	t1,t1,6
    12e6:	3a0e                	fld	fs4,224(sp)
                if (res->crcmatrix == 0)
    12e8:	390b3b0b          	0x390b3b0b
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	4919270b          	0x4919270b
    12f0:	12011113          	0x12011113
                if (res->crcmatrix == 0)
    12f4:	4006                	0x4006
    12f6:	9718                	0x9718
                    res->crcmatrix = retval;
    12f8:	1942                	slli	s2,s2,0x30
    12fa:	1301                	addi	t1,t1,-32
    12fc:	0000                	unimp
    12fe:	03003423          	0x3003423
    1302:	3a0e                	fld	fs4,224(sp)
                retval = core_bench_state(res->size,
    1304:	390b3b0b          	0x390b3b0b
    1308:	1c13490b          	0x1c13490b
    130c:	2400000b          	0x2400000b
    1310:	012e                	slli	sp,sp,0xb
    1312:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    131a:	0b39                	addi	s6,s6,14
    131c:	13491927          	0x13491927
    1320:	0b20                	addi	s0,sp,408
    1322:	1301                	addi	t1,t1,-32
    1324:	0000                	unimp
    1326:	0525                	addi	a0,a0,9
    1328:	0300                	addi	s0,sp,384
    132a:	3a0e                	fld	fs4,224(sp)
    132c:	390b3b0b          	0x390b3b0b
                if (res->crcstate == 0)
    1330:	0013490b          	0x13490b
                retval = core_bench_state(res->size,
    1334:	2600                	fld	fs0,8(a2)
    1336:	0005                	c.nop	1
    1338:	0b3a0803          	lb	a6,179(s4)
                if (res->crcstate == 0)
    133c:	0b390b3b          	0xb390b3b
                    res->crcstate = retval;
    1340:	1349                	addi	t1,t1,-14
    1342:	0000                	unimp
    1344:	03000527          	0x3000527
    1348:	3a0e                	fld	fs4,224(sp)
    134a:	390b3b0b          	0x390b3b0b
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134e:	0213490b          	0x213490b
    1352:	28000017          	auipc	zero,0x28000
    1356:	0005                	c.nop	1
    1358:	0b3a0803          	lb	a6,179(s4)
                if (res->crcmatrix == 0)
    135c:	0b390b3b          	0xb390b3b
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	1349                	addi	t1,t1,-14
    1362:	1702                	slli	a4,a4,0x20
    1364:	0000                	unimp
    1366:	1d29                	addi	s10,s10,-22
                if (res->crcmatrix == 0)
    1368:	3101                	jal	f68 <core_bench_list+0x228>
    136a:	12011113          	0x12011113
                    res->crcmatrix = retval;
    136e:	5806                	lw	a6,96(sp)
    1370:	570b590b          	0x570b590b
    1374:	0013010b          	0x13010b
                retval = core_bench_state(res->size,
    1378:	2a00                	fld	fs0,16(a2)
    137a:	0005                	c.nop	1
    137c:	1331                	addi	t1,t1,-20
    137e:	1702                	slli	a4,a4,0x20
    1380:	0000                	unimp
    1382:	31011d2b          	0x31011d2b
    1386:	55015213          	0x55015213
    138a:	590b5817          	auipc	a6,0x590b5
    138e:	000b570b          	0xb570b
    1392:	2c00                	fld	fs0,24(s0)
    1394:	011d                	addi	sp,sp,7
    1396:	1331                	addi	t1,t1,-20
    1398:	0152                	slli	sp,sp,0x14
    139a:	1755                	addi	a4,a4,-11
    139c:	0b58                	addi	a4,sp,404
    139e:	0b59                	addi	s6,s6,22
    13a0:	13010b57          	0x13010b57
                if (res->crcstate == 0)
    13a4:	0000                	unimp
    13a6:	0b2d                	addi	s6,s6,11
                retval = core_bench_state(res->size,
    13a8:	5501                	li	a0,-32
    13aa:	2e000017          	auipc	zero,0x2e000
    13ae:	0034                	addi	a3,sp,8
                if (res->crcstate == 0)
    13b0:	1331                	addi	t1,t1,-20
    13b2:	0000                	unimp
                    res->crcstate = retval;
    13b4:	3100342f          	0x3100342f
    13b8:	00170213          	addi	tp,a4,1
    13bc:	3000                	fld	fs0,32(s0)
    13be:	011d                	addi	sp,sp,7
    13c0:	1331                	addi	t1,t1,-20
    13c2:	0111                	addi	sp,sp,4
    13c4:	0612                	slli	a2,a2,0x4
    13c6:	0b58                	addi	a4,sp,404
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	0b59                	addi	s6,s6,22
    13ca:	00000b57          	0xb57
    13ce:	0531                	addi	a0,a0,12
{
    13d0:	3100                	fld	fs0,32(a0)
    13d2:	32000013          	li	zero,800
    13d6:	0034                	addi	a3,sp,8
    13d8:	0b3a0803          	lb	a6,179(s4)
    printf("start test41\n");
    13dc:	0b390b3b          	0xb390b3b
    13e0:	1349                	addi	t1,t1,-14
    13e2:	0000                	unimp
{
    13e4:	03003433          	mulhu	s0,zero,a6
    13e8:	3a0e                	fld	fs4,224(sp)
    13ea:	390b3b0b          	0x390b3b0b
    13ee:	0013490b          	0x13490b
    13f2:	3400                	fld	fs0,40(s0)
    13f4:	0034                	addi	a3,sp,8
    13f6:	0b3a0e03          	lb	t3,179(s4)
    printf("start test41\n");
    13fa:	0b390b3b          	0xb390b3b
    13fe:	1349                	addi	t1,t1,-14
    ee_u32 size     = (blksize / per_item)
    1400:	1702                	slli	a4,a4,0x20
    1402:	0000                	unimp
    1404:	2e35                	jal	1740 <matrix_test+0xc>
    1406:	3101                	jal	1006 <__stack_size+0x6>
    1408:	12011113          	0x12011113
    140c:	4006                	0x4006
    140e:	9718                	0x9718
    1410:	1942                	slli	s2,s2,0x30
    1412:	1301                	addi	t1,t1,-32
    list_head *memblock_end  = memblock + size;
    1414:	0000                	unimp
    1416:	2e36                	fld	ft8,328(sp)
    1418:	3101                	jal	1018 <__stack_size+0x18>
    141a:	12011113          	0x12011113
    list->info->data16 = (ee_s16)0x8080;
    141e:	4006                	0x4006
    list->next         = NULL;
    1420:	9718                	0x9718
    1422:	1942                	slli	s2,s2,0x30
    list->info         = datablock;
    1424:	0000                	unimp
    1426:	0100                	addi	s0,sp,128
    list->info->data16 = (ee_s16)0x8080;
    1428:	0111                	addi	sp,sp,4
    142a:	0e25                	addi	t3,t3,9
    list_data *datablock_end = datablock + size;
    142c:	0e030b13          	addi	s6,t1,224
    list->info->data16 = (ee_s16)0x8080;
    1430:	17550e1b          	0x17550e1b
    list->info->idx    = 0x0000;
    1434:	0111                	addi	sp,sp,4
    1436:	1710                	addi	a2,sp,928
    if ((*memblock + 1) >= memblock_end)
    1438:	0000                	unimp
    143a:	2402                	fld	fs0,0(sp)
    list_data *datablock_end = datablock + size;
    143c:	0b00                	addi	s0,sp,400
    143e:	030b3e0b          	0x30b3e0b
    memblock++;
    1442:	000e                	c.slli	zero,0x3
    datablock++;
    1444:	0300                	addi	s0,sp,384
    1446:	0024                	addi	s1,sp,8
    if ((*memblock + 1) >= memblock_end)
    1448:	0b3e0b0b          	0xb3e0b0b
    if ((*datablock + 1) >= datablock_end)
    144c:	00000803          	lb	a6,0(zero) # 0 <_start>
    1450:	1604                	addi	s1,sp,800
    1452:	0300                	addi	s0,sp,384
    newitem->info = *datablock;
    1454:	3a0e                	fld	fs4,224(sp)
    1456:	390b3b0b          	0x390b3b0b
    newitem->next      = insert_point->next;
    145a:	0013490b          	0x13490b
    insert_point->next = newitem;
    145e:	0500                	addi	s0,sp,640
    to->idx    = from->idx;
    1460:	0b0b000f          	0xb0b000f
    to->data16 = from->data16;
    1464:	1349                	addi	t1,t1,-14
    1466:	0000                	unimp
    1468:	1306                	slli	t1,t1,0x21
    146a:	0300                	addi	s0,sp,384
    to->idx    = from->idx;
    146c:	3c0e                	fld	fs8,224(sp)
    146e:	0019                	c.nop	6
    for (i = 0; i < size; i++)
    1470:	0700                	addi	s0,sp,896
    1472:	0016                	c.slli	zero,0x5
    1474:	0b3a0e03          	lb	t3,179(s4)
    to->idx    = from->idx;
    1478:	0b39053b          	0xb39053b
    147c:	1349                	addi	t1,t1,-14
    147e:	0000                	unimp
    for (i = 0; i < size; i++)
    1480:	1708                	addi	a0,sp,928
    1482:	0b01                	addi	s6,s6,0
    to->idx    = from->idx;
    1484:	3b0b3a0b          	0x3b0b3a0b
    if ((*memblock + 1) >= memblock_end)
    1488:	010b390b          	0x10b390b
    148c:	09000013          	li	zero,144
    if ((*datablock + 1) >= datablock_end)
    1490:	000d                	c.nop	3
    1492:	0b3a0e03          	lb	t3,179(s4)
    1496:	0b390b3b          	0xb390b3b
    149a:	1349                	addi	t1,t1,-14
    149c:	0000                	unimp
    149e:	010a                	slli	sp,sp,0x2
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a0:	4901                	li	s2,0
    14a2:	00130113          	addi	sp,t1,1
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a6:	0b00                	addi	s0,sp,400
    14a8:	0021                	c.nop	8
    14aa:	1349                	addi	t1,t1,-14
    14ac:	00000b2f          	0xb2f
    newitem->next      = insert_point->next;
    14b0:	130c                	addi	a1,sp,416
    14b2:	0b01                	addi	s6,s6,0
        ee_u16 dat
    14b4:	3b0b3a0b          	0x3b0b3a0b
    insert_point->next = newitem;
    14b8:	010b390b          	0x10b390b
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14bc:	0d000013          	li	zero,208
    newitem->info = *datablock;
    14c0:	000d                	c.nop	3
    14c2:	0b3a0e03          	lb	t3,179(s4)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c6:	0b390b3b          	0xb390b3b
    to->data16 = from->data16;
    14ca:	1349                	addi	t1,t1,-14
    to->idx    = from->idx;
    14cc:	0b38                	addi	a4,sp,408
    14ce:	0000                	unimp
    14d0:	0f0e                	slli	t5,t5,0x3
    14d2:	0b00                	addi	s0,sp,400
    14d4:	0f00000b          	0xf00000b
    14d8:	0e030113          	addi	sp,t1,224
    for (i = 0; i < size; i++)
    14dc:	0b3a0b0b          	0xb3a0b0b
    14e0:	0b390b3b          	0xb390b3b
    while (finder->next != NULL)
    14e4:	1301                	addi	t1,t1,-32
    14e6:	0000                	unimp
    14e8:	0d10                	addi	a2,sp,656
    14ea:	0300                	addi	s0,sp,384
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	3a08                	fld	fa0,48(a2)
    14ee:	390b3b0b          	0x390b3b0b
    14f2:	3813490b          	0x3813490b
    14f6:	1100000b          	0x1100000b
                                & (((i & 0x07) << 8)
    14fa:	0e030113          	addi	sp,t1,224
        if (i < size / 5) /* first 20% of the list in order */
    14fe:	0b3a050b          	0xb3a050b
                                & (((i & 0x07) << 8)
    1502:	0b390b3b          	0xb390b3b
        if (i < size / 5) /* first 20% of the list in order */
    1506:	1301                	addi	t1,t1,-32
    1508:	0000                	unimp
    150a:	0d12                	slli	s10,s10,0x4
        finder = finder->next;
    150c:	0300                	addi	s0,sp,384
    150e:	3a0e                	fld	fs4,224(sp)
            finder->info->idx = i++;
    1510:	390b3b0b          	0x390b3b0b
        finder = finder->next;
    1514:	3813490b          	0x3813490b
    while (finder->next != NULL)
    1518:	0005                	c.nop	1
    151a:	1300                	addi	s0,sp,416
    151c:	0015                	c.nop	5
    151e:	00001927          	0x1927
    insize = 1;
    1522:	1514                	addi	a3,sp,672
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	2701                	jal	1c24 <matrix_test+0x4f0>
    1526:	4919                	li	s2,6
    insize = 1;
    1528:	00130113          	addi	sp,t1,1
        tail = NULL;
    152c:	1500                	addi	s0,sp,672
    152e:	0005                	c.nop	1
        list = NULL;
    1530:	1349                	addi	t1,t1,-14
    1532:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1534:	2616                	fld	fa2,320(sp)
    1536:	4900                	lw	s0,16(a0)
            nmerges++; /* there exists a merge to be done */
    1538:	17000013          	li	zero,368
    153c:	0e030113          	addi	sp,t1,224
            psize = 0;
    1540:	0b3a050b          	0xb3a050b
                q = q->next;
    1544:	0b39053b          	0xb39053b
                psize++;
    1548:	1301                	addi	t1,t1,-32
    154a:	0000                	unimp
                if (!q)
    154c:	0d18                	addi	a4,sp,656
    154e:	0300                	addi	s0,sp,384
            for (i = 0; i < insize; i++)
    1550:	3a0e                	fld	fs4,224(sp)
    1552:	39053b0b          	0x39053b0b
                    list = e;
    1556:	3813490b          	0x3813490b
    155a:	1900000b          	0x1900000b
    155e:	000d                	c.nop	3
            while (psize > 0 || (qsize > 0 && q))
    1560:	0b3a0e03          	lb	t3,179(s4)
                else if (qsize == 0 || !q)
    1564:	0b39053b          	0xb39053b
    1568:	1349                	addi	t1,t1,-14
    156a:	0538                	addi	a4,sp,648
                else if (cmp(p->info, q->info, res) <= 0)
    156c:	0000                	unimp
    156e:	131a                	slli	t1,t1,0x26
    1570:	0301                	addi	t1,t1,0
    1572:	0b0e                	slli	s6,s6,0x3
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	3b0b3a0b          	0x3b0b3a0b
    return a->idx - b->idx;
    1578:	3905                	jal	11a8 <__stack_size+0x1a8>
    157a:	0013010b          	0x13010b
    157e:	1b00                	addi	s0,sp,432
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1580:	0b0b0113          	addi	sp,s6,176
    1584:	0b3a                	slli	s6,s6,0xe
    1586:	0b39053b          	0xb39053b
    158a:	1301                	addi	t1,t1,-32
    158c:	0000                	unimp
    158e:	171c                	addi	a5,sp,928
    1590:	0b01                	addi	s6,s6,0
    1592:	3b0b3a0b          	0x3b0b3a0b
    1596:	3905                	jal	11c6 <__stack_size+0x1c6>
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1598:	0013010b          	0x13010b
    return a->idx - b->idx;
    159c:	1d00                	addi	s0,sp,688
    159e:	000d                	c.nop	3
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	0b3a0e03          	lb	t3,179(s4)
    15a4:	0b39053b          	0xb39053b
    15a8:	1349                	addi	t1,t1,-14
    15aa:	0000                	unimp
    15ac:	151e                	slli	a0,a0,0x27
    15ae:	2701                	jal	1cae <matrix_test+0x57a>
    15b0:	0119                	addi	sp,sp,6
    15b2:	1f000013          	li	zero,496
    15b6:	0034                	addi	a3,sp,8
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	0b3a0e03          	lb	t3,179(s4)
                    qsize--;
    15bc:	0b39053b          	0xb39053b
                    q = q->next;
    15c0:	1349                	addi	t1,t1,-14
    15c2:	193c193f 2e200000 	0x2e200000193c193f
                if (tail)
    15ca:	3f01                	jal	14da <core_list_init+0x10a>
                    tail->next = e;
    15cc:	0319                	addi	t1,t1,6
    15ce:	3a0e                	fld	fs4,224(sp)
                    list = e;
    15d0:	390b3b0b          	0x390b3b0b
            while (psize > 0 || (qsize > 0 && q))
    15d4:	1113490b          	0x1113490b
    15d8:	1201                	addi	tp,tp,-32
    15da:	4006                	0x4006
    15dc:	9618                	0x9618
    15de:	1942                	slli	s2,s2,0x30
                    qsize--;
    15e0:	1301                	addi	t1,t1,-32
    15e2:	0000                	unimp
    15e4:	3421                	jal	fec <core_bench_list+0x2ac>
    15e6:	0300                	addi	s0,sp,384
                    q = q->next;
    15e8:	3a08                	fld	fa0,48(a2)
    15ea:	390b3b0b          	0x390b3b0b
                if (tail)
    15ee:	0213490b          	0x213490b
                    list = e;
    15f2:	22000017          	auipc	zero,0x22000
    15f6:	002e                	c.slli	zero,0xb
    15f8:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
                    psize--;
    1600:	0b39                	addi	s6,s6,14
    1602:	0111                	addi	sp,sp,4
                    p = p->next;
    1604:	0612                	slli	a2,a2,0x4
    1606:	1840                	addi	s0,sp,52
    1608:	00194297          	auipc	t0,0x194
        while (p)
    160c:	0000                	unimp
    160e:	1101                	addi	sp,sp,-32
        tail->next = NULL;
    1610:	2501                	jal	1c10 <matrix_test+0x4dc>
    1612:	130e                	slli	t1,t1,0x23
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1614:	1b0e030b          	0x1b0e030b
        insize *= 2;
    1618:	550e                	lw	a0,224(sp)
    161a:	10011117          	auipc	sp,0x10011
        while (p)
    161e:	02000017          	auipc	zero,0x2000
        tail->next = NULL;
    1622:	0b0b0113          	addi	sp,s6,176
    1626:	0b3a                	slli	s6,s6,0xe
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1628:	0b390b3b          	0xb390b3b
    162c:	1301                	addi	t1,t1,-32
    162e:	0000                	unimp
                                & (((i & 0x07) << 8)
    1630:	03000d03          	lb	s10,48(zero) # 30 <_start+0x30>
        finder = finder->next;
    1634:	3a0e                	fld	fs4,224(sp)
    1636:	390b3b0b          	0x390b3b0b
                                & (((i & 0x07) << 8)
    163a:	3813490b          	0x3813490b
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163e:	0400000b          	0x400000b
                                & (((i & 0x07) << 8)
    1642:	0024                	addi	s1,sp,8
                                   | pat); /* make sure the mixed items end up
    1644:	0b3e0b0b          	0xb3e0b0b
    while (finder->next != NULL)
    1648:	00000803          	lb	a6,0(zero) # 0 <_start>
                                & (((i & 0x07) << 8)
    164c:	1605                	addi	a2,a2,-31
    164e:	0300                	addi	s0,sp,384
            finder->info->idx = 0x3fff
    1650:	3a0e                	fld	fs4,224(sp)
    1652:	390b3b0b          	0x390b3b0b
        finder = finder->next;
    1656:	0013490b          	0x13490b
    while (finder->next != NULL)
    165a:	0600                	addi	s0,sp,768
    165c:	0024                	addi	s1,sp,8
    165e:	0b3e0b0b          	0xb3e0b0b
}
    1662:	00000e03          	lb	t3,0(zero) # 0 <_start>
    1666:	3f012e07          	flw	ft8,1008(sp) # 10012a0a <__freertos_irq_stack_top+0xf002a0a>
    166a:	0319                	addi	t1,t1,6
    166c:	3a0e                	fld	fs4,224(sp)
    166e:	390b3b0b          	0x390b3b0b
    1672:	4919270b          	0x4919270b
    1676:	12011113          	0x12011113
    167a:	4006                	0x4006
    memblock++;
    167c:	9718                	0x9718
    167e:	1942                	slli	s2,s2,0x30
    datablock++;
    1680:	1301                	addi	t1,t1,-32
    1682:	0000                	unimp
    if ((*datablock + 1) >= datablock_end)
    1684:	0508                	addi	a0,sp,640
    1686:	0300                	addi	s0,sp,384
    1688:	3a08                	fld	fa0,48(a2)
    168a:	390b3b0b          	0x390b3b0b
{
    168e:	0213490b          	0x213490b
    1692:	09000017          	auipc	zero,0x9000
    ee_u32        iterations = res->iterations;
    1696:	0005                	c.nop	1
{
    1698:	0b3a0e03          	lb	t3,179(s4)
    169c:	0b390b3b          	0xb390b3b
    16a0:	1349                	addi	t1,t1,-14
    16a2:	1702                	slli	a4,a4,0x20
    res->crc                 = 0;
    16a4:	0000                	unimp
    16a6:	050a                	slli	a0,a0,0x2
    16a8:	0300                	addi	s0,sp,384
    16aa:	3a0e                	fld	fs4,224(sp)
{
    16ac:	390b3b0b          	0x390b3b0b
    for (i = 0; i < iterations; i++)
    16b0:	0213490b          	0x213490b
    16b4:	0018                	0x18
    16b6:	0b00                	addi	s0,sp,400
        crc      = core_bench_list(res, 1);
    16b8:	0111010b          	0x111010b
    16bc:	0612                	slli	a2,a2,0x4
    16be:	0000                	unimp
    16c0:	340c                	fld	fa1,40(s0)
    16c2:	0300                	addi	s0,sp,384
    16c4:	3a08                	fld	fa0,48(a2)
    16c6:	390b3b0b          	0x390b3b0b
        res->crc = crcu16(crc, res->crc);
    16ca:	0213490b          	0x213490b
    16ce:	0d000017          	auipc	zero,0xd000
    16d2:	011d                	addi	sp,sp,7
    16d4:	1331                	addi	t1,t1,-20
    16d6:	0152                	slli	sp,sp,0x14
        crc      = core_bench_list(res, -1);
    16d8:	1755                	addi	a4,a4,-11
    16da:	0b58                	addi	a4,sp,404
    16dc:	0b59                	addi	s6,s6,22
    16de:	00000b57          	0xb57
    16e2:	050e                	slli	a0,a0,0x3
    16e4:	3100                	fld	fs0,32(a0)
    16e6:	00170213          	addi	tp,a4,1
        res->crc = crcu16(crc, res->crc);
    16ea:	0f00                	addi	s0,sp,912
    16ec:	0b0b000f          	0xb0b000f
    16f0:	1349                	addi	t1,t1,-14
    16f2:	0000                	unimp
    16f4:	0b10                	addi	a2,sp,400
    16f6:	5501                	li	a0,-32
        if (i == 0)
    16f8:	11000017          	auipc	zero,0x11000
    for (i = 0; i < iterations; i++)
    16fc:	1331010b          	0x1331010b
    1700:	1755                	addi	a4,a4,-11
    1702:	0000                	unimp
}
    1704:	3412                	fld	fs0,288(sp)
    1706:	3100                	fld	fs0,32(a0)
    1708:	00170213          	addi	tp,a4,1
    170c:	1300                	addi	s0,sp,416
    170e:	012e                	slli	sp,sp,0xb
    1710:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    1718:	0b39                	addi	s6,s6,14
    171a:	1349                	addi	t1,t1,-14
    171c:	0b20                	addi	s0,sp,408
    171e:	1301                	addi	t1,t1,-32
            res->crclist = res->crc;
    1720:	0000                	unimp
    1722:	0b14                	addi	a3,sp,400
    for (i = 0; i < iterations; i++)
    1724:	0001                	nop
    1726:	1500                	addi	s0,sp,672
    1728:	0034                	addi	a3,sp,8
    172a:	0b3a0e03          	lb	t3,179(s4)
    172e:	0b390b3b          	0xb390b3b
    1732:	1349                	addi	t1,t1,-14
{
    1734:	0000                	unimp
    1736:	2e16                	fld	ft8,320(sp)
    1738:	3f01                	jal	1648 <core_list_init+0x278>
    173a:	0319                	addi	t1,t1,6
    173c:	3a0e                	fld	fs4,224(sp)
    173e:	390b3b0b          	0x390b3b0b
    MATDAT clipval = matrix_big(val);
    1742:	1119270b          	0x1119270b
{
    1746:	1201                	addi	tp,tp,-32
    1748:	4006                	0x4006
    174a:	9718                	0x9718
    174c:	1942                	slli	s2,s2,0x30
    174e:	1301                	addi	t1,t1,-32
    1750:	0000                	unimp
    1752:	3f012e17          	auipc	t3,0x3f012
    1756:	0319                	addi	t1,t1,6
    1758:	3a0e                	fld	fs4,224(sp)
    175a:	390b3b0b          	0x390b3b0b
    175e:	2019270b          	0x2019270b
    1762:	0013010b          	0x13010b
    1766:	1800                	addi	s0,sp,48
    1768:	0005                	c.nop	1
    176a:	0b3a0803          	lb	a6,179(s4)
    176e:	0b390b3b          	0xb390b3b
    1772:	1349                	addi	t1,t1,-14
    1774:	0000                	unimp
    1776:	2e19                	jal	1a8c <matrix_test+0x358>
    1778:	3101                	jal	1378 <__stack_size+0x378>
    177a:	12011113          	0x12011113
    MATDAT clipval = matrix_big(val);
    177e:	4006                	0x4006
    for (i = 0; i < N; i++)
    1780:	9718                	0x9718
    1782:	1942                	slli	s2,s2,0x30
    1784:	1301                	addi	t1,t1,-32
    1786:	0000                	unimp
    1788:	051a                	slli	a0,a0,0x6
    178a:	3100                	fld	fs0,32(a0)
    178c:	00180213          	addi	tp,a6,1 # 590b638b <__freertos_irq_stack_top+0x580a638b>
    1790:	1b00                	addi	s0,sp,432
    1792:	012e                	slli	sp,sp,0xb
    1794:	1331                	addi	t1,t1,-20
    1796:	0111                	addi	sp,sp,4
    1798:	0612                	slli	a2,a2,0x4
    179a:	1840                	addi	s0,sp,52
    179c:	00194297          	auipc	t0,0x194
    17a0:	0000                	unimp
    17a2:	1101                	addi	sp,sp,-32
    17a4:	1000                	addi	s0,sp,32
    17a6:	1106                	slli	sp,sp,0x21
    17a8:	1201                	addi	tp,tp,-32
    17aa:	0301                	addi	t1,t1,0
    17ac:	1b0e                	slli	s6,s6,0x23
    17ae:	250e                	fld	fa0,192(sp)
    17b0:	130e                	slli	t1,t1,0x23
    17b2:	0005                	c.nop	1
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	la gp, __global_pointer$
       0:	13d0                	addi	a2,sp,484
       2:	0000                	unimp
       4:	13e0                	addi	s0,sp,492
       6:	0000                	unimp
	la sp, _sp
       8:	0001                	nop
       a:	e05a                	fsw	fs6,0(sp)
       c:	44000013          	li	zero,1088
	la a0, _data_lma 
      10:	0014                	0x14
      12:	0100                	addi	s0,sp,128
      14:	5900                	lw	s0,48(a0)
      16:	1444                	addi	s1,sp,548
	la a1, _data
      18:	0000                	unimp
      1a:	168c                	addi	a1,sp,864
      1c:	0000                	unimp
      1e:	0004                	0x4
	la a2, _edata
      20:	9f5a01f3          	0x9f5a01f3
	...
	lw t0, (a0)
      2c:	13d0                	addi	a2,sp,484
      2e:	0000                	unimp
	sw t0, (a1)
      30:	13ff                	0x13ff
      32:	0000                	unimp
	lw t1, (a1)
      34:	0001                	nop
      36:	0013ff5b          	0x13ff5b
	addi a0, a0, 4
      3a:	4400                	lw	s0,8(s0)
	addi a1, a1, 4
      3c:	0014                	0x14
      3e:	0100                	addi	s0,sp,128
	bltu a1, a2, 1b
      40:	5800                	lw	s0,48(s0)
      42:	1444                	addi	s1,sp,548
	la a0, __bss_start
      44:	0000                	unimp
      46:	1454                	addi	a3,sp,548
      48:	0000                	unimp
      4a:	0001                	nop
	la a1, _end
      4c:	5459                	li	s0,-10
      4e:	0014                	0x14
      50:	b800                	fsd	fs0,48(s0)
      52:	0014                	0x14
	bgeu a0, a1, 2f
      54:	0100                	addi	s0,sp,128
      56:	5e00                	lw	s0,56(a2)
	sw zero, (a0)
      58:	14b8                	addi	a4,sp,616
      5a:	0000                	unimp
	addi a0, a0, 4
      5c:	14dc                	addi	a5,sp,612
      5e:	0000                	unimp
	bltu a0, a1, 1b
      60:	0001                	nop
      62:	dc61                	beqz	s0,3a <_start+0x3a>
    li x31,0xa0
      64:	0014                	0x14
      66:	f700                	fsw	fs0,40(a4)
    call main
      68:	0014                	0x14
      6a:	0100                	addi	s0,sp,128
      6c:	5e00                	lw	s0,56(a2)
      6e:	167c                	addi	a5,sp,812
    li x31,0xaa
      70:	0000                	unimp
      72:	1688                	addi	a0,sp,864
	li tp,0xee
      74:	0000                	unimp
      76:	0001                	nop
    j loop
      78:	8859                	andi	s0,s0,22
      7a:	0016                	c.slli	zero,0x5
{
      7c:	8c00                	0x8c00
      7e:	0016                	c.slli	zero,0x5
    portable_init(&(results[0].port), &argc, argv);
      80:	0100                	addi	s0,sp,128
      82:	5e00                	lw	s0,56(a2)
	...
{
      8c:	13d0                	addi	a2,sp,484
      8e:	0000                	unimp
      90:	13ff                	0x13ff
      92:	0000                	unimp
      94:	0001                	nop
      96:	ff5c                	fsw	fa5,60(a4)
      98:	8c000013          	li	zero,-1856
      9c:	0016                	c.slli	zero,0x5
      9e:	0400                	addi	s0,sp,512
      a0:	f300                	fsw	fs0,32(a4)
      a2:	5c01                	li	s8,-32
      a4:	009f 0000 0000      	0x9f
      aa:	0000                	unimp
      ac:	1400                	addi	s0,sp,544
      ae:	0014                	0x14
      b0:	f700                	fsw	fs0,40(a4)
      b2:	0014                	0x14
      b4:	0100                	addi	s0,sp,128
      b6:	5a00                	lw	s0,48(a2)
      b8:	167c                	addi	a5,sp,812
      ba:	0000                	unimp
      bc:	168c                	addi	a1,sp,864
      be:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
      c0:	0001                	nop
      c2:	005a                	c.slli	zero,0x16
      c4:	0000                	unimp
      c6:	0000                	unimp
      c8:	0000                	unimp
      ca:	1c00                	addi	s0,sp,560
      cc:	0014                	0x14
      ce:	f700                	fsw	fs0,40(a4)
{
      d0:	0014                	0x14
      d2:	0100                	addi	s0,sp,128
    portable_init(&(results[0].port), &argc, argv);
      d4:	5600                	lw	s0,40(a2)
      d6:	167c                	addi	a5,sp,812
      d8:	0000                	unimp
      da:	168c                	addi	a1,sp,864
      dc:	0000                	unimp
      de:	0001                	nop
      e0:	0056                	c.slli	zero,0x15
      e2:	0000                	unimp
    printf("start test1\n");
      e4:	0000                	unimp
      e6:	0000                	unimp
      e8:	1c00                	addi	s0,sp,560
      ea:	0014                	0x14
      ec:	4800                	lw	s0,16(s0)
      ee:	0014                	0x14
      f0:	0100                	addi	s0,sp,128
      f2:	5600                	lw	s0,40(a2)
    results[0].seed1      = get_seed(1);
      f4:	1448                	addi	a0,sp,548
      f6:	0000                	unimp
      f8:	1460                	addi	s0,sp,556
      fa:	0000                	unimp
      fc:	0001                	nop
      fe:	0014605b          	0x14605b
     102:	c400                	sw	s0,8(s0)
    results[0].seed2      = get_seed(2);
     104:	0014                	0x14
     106:	0100                	addi	s0,sp,128
     108:	5d00                	lw	s0,56(a0)
     10a:	14c4                	addi	s1,sp,612
     10c:	0000                	unimp
     10e:	14dc                	addi	a5,sp,612
     110:	0000                	unimp
     112:	0001                	nop
    results[0].seed3      = get_seed(3);
     114:	dc6c                	sw	a1,124(s0)
     116:	0014                	0x14
     118:	f700                	fsw	fs0,40(a4)
     11a:	0014                	0x14
     11c:	0100                	addi	s0,sp,128
     11e:	5d00                	lw	s0,56(a0)
     120:	167c                	addi	a5,sp,812
     122:	0000                	unimp
    results[0].iterations = get_seed_32(4);
     124:	168c                	addi	a1,sp,864
     126:	0000                	unimp
     128:	0001                	nop
     12a:	0000005b          	0x5b
     12e:	0000                	unimp
     130:	0000                	unimp
     132:	4000                	lw	s0,0(s0)
    printf("start test2\n");
     134:	0014                	0x14
     136:	f700                	fsw	fs0,40(a4)
     138:	0014                	0x14
     13a:	0100                	addi	s0,sp,128
     13c:	5c00                	lw	s0,56(s0)
     13e:	167c                	addi	a5,sp,812
     140:	0000                	unimp
     142:	168c                	addi	a1,sp,864
    results[0].execs = get_seed_32(5);
     144:	0000                	unimp
     146:	0001                	nop
     148:	005c                	addi	a5,sp,4
     14a:	0000                	unimp
     14c:	0000                	unimp
     14e:	0000                	unimp
     150:	7000                	flw	fs0,32(s0)
     152:	0014                	0x14
    printf("start test21\n");
     154:	8800                	0x8800
     156:	0014                	0x14
     158:	0200                	addi	s0,sp,256
     15a:	3000                	fld	fs0,32(s0)
     15c:	889f 0014 e400      	0xe4000014889f
     162:	0014                	0x14
    if (results[0].execs == 0)
     164:	0100                	addi	s0,sp,128
     166:	5b00                	lw	s0,48(a4)
     168:	14e4                	addi	s1,sp,620
     16a:	0000                	unimp
    printf("start test3\n");
     16c:	1504                	addi	s1,sp,672
     16e:	0000                	unimp
     170:	0002                	c.slli64	zero
     172:	9f31                	0x9f31
     174:	1504                	addi	s1,sp,672
     176:	0000                	unimp
     178:	150c                	addi	a1,sp,672
     17a:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	0001                	nop
     17e:	0c5e                	slli	s8,s8,0x17
     180:	0015                	c.nop	5
     182:	1800                	addi	s0,sp,48
     184:	0015                	c.nop	5
     186:	0300                	addi	s0,sp,384
     188:	7e00                	flw	fs0,56(a2)
     18a:	9f01                	0x9f01
     18c:	1518                	addi	a4,sp,672
     18e:	0000                	unimp
     190:	1520                	addi	s0,sp,680
     192:	0000                	unimp
     194:	0001                	nop
     196:	285e                	fld	fa6,464(sp)
     198:	0016                	c.slli	zero,0x5
     19a:	5800                	lw	s0,48(s0)
    printf("start test4\n");
     19c:	0016                	c.slli	zero,0x5
     19e:	0300                	addi	s0,sp,384
     1a0:	7e00                	flw	fs0,56(a2)
     1a2:	9f01                	0x9f01
     1a4:	1658                	addi	a4,sp,804
     1a6:	0000                	unimp
     1a8:	1660                	addi	s0,sp,812
     1aa:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	0001                	nop
     1ae:	005e                	c.slli	zero,0x17
     1b0:	0000                	unimp
     1b2:	0000                	unimp
     1b4:	0000                	unimp
     1b6:	e400                	fsw	fs0,8(s0)
     1b8:	0014                	0x14
     1ba:	f700                	fsw	fs0,40(a4)
     1bc:	0014                	0x14
     1be:	0200                	addi	s0,sp,256
     1c0:	7800                	flw	fs0,48(s0)
     1c2:	0400                	addi	s0,sp,512
     1c4:	0015                	c.nop	5
     1c6:	1000                	addi	s0,sp,32
     1c8:	0015                	c.nop	5
     1ca:	0100                	addi	s0,sp,128
     1cc:	5900                	lw	s0,48(a0)
     1ce:	1514                	addi	a3,sp,672
        if ((1 << (ee_u32)i) & results[0].execs)
     1d0:	0000                	unimp
     1d2:	1520                	addi	s0,sp,680
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d4:	0000                	unimp
     1d6:	0001                	nop
     1d8:	2859                	jal	26e <main+0x1f2>
     1da:	0016                	c.slli	zero,0x5
     1dc:	3800                	fld	fs0,48(s0)
     1de:	0016                	c.slli	zero,0x5
     1e0:	0100                	addi	s0,sp,128
     1e2:	5900                	lw	s0,48(a0)
     1e4:	1654                	addi	a3,sp,804
     1e6:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	1660                	addi	s0,sp,812
     1ea:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	0001                	nop
     1ee:	0059                	c.nop	22
        if ((1 << (ee_u32)i) & results[0].execs)
     1f0:	0000                	unimp
     1f2:	0000                	unimp
            num_algorithms++;
     1f4:	0000                	unimp
     1f6:	4000                	lw	s0,0(s0)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1f8:	0014                	0x14
     1fa:	2800                	fld	fs0,16(s0)
     1fc:	0015                	c.nop	5
     1fe:	0100                	addi	s0,sp,128
    results[i].err         = 0;
     200:	5800                	lw	s0,48(s0)
     202:	1528                	addi	a0,sp,680
        if ((1 << (ee_u32)i) & results[0].execs)
     204:	0000                	unimp
     206:	1628                	addi	a0,sp,808
            num_algorithms++;
     208:	0000                	unimp
     20a:	0004                	0x4
        if ((1 << (ee_u32)i) & results[0].execs)
     20c:	9f5b01f3          	0x9f5b01f3
            num_algorithms++;
     210:	1628                	addi	a0,sp,808
     212:	0000                	unimp
     214:	1660                	addi	s0,sp,812
     216:	0000                	unimp
     218:	0001                	nop
     21a:	6058                	flw	fa4,4(s0)
        results[i].size = results[i].size / num_algorithms;
     21c:	0016                	c.slli	zero,0x5
     21e:	7c00                	flw	fs0,56(s0)
     220:	0016                	c.slli	zero,0x5
     222:	0400                	addi	s0,sp,512
     224:	f300                	fsw	fs0,32(a4)
     226:	5b01                	li	s6,-32
     228:	7c9f 0016 8c00      	0x8c0000167c9f
     22e:	0016                	c.slli	zero,0x5
     230:	0100                	addi	s0,sp,128
     232:	5800                	lw	s0,48(s0)
	...
        if ((1 << (ee_u32)i) & results[0].execs)
     23c:	1448                	addi	a0,sp,548
     23e:	0000                	unimp
     240:	1488                	addi	a0,sp,608
     242:	0000                	unimp
        if (results[i].execs & ID_LIST)
     244:	ff09000b          	0xff09000b
        if (results[i].execs & ID_MATRIX)
     248:	939f 0a02 7fff      	0x7fff0a02939f
        if (results[i].execs & ID_STATE)
     24e:	939f 8802 0014      	0x148802939f
            core_init_state(
     254:	e000                	fsw	fs0,0(s0)
     256:	0014                	0x14
     258:	2a00                	fld	fs0,16(a2)
     25a:	7b00                	flw	fs0,48(a4)
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	8e00                	0x8e00
     25e:	2700                	fld	fs0,8(a4)
            core_init_state(
     260:	78082433          	0x78082433
     264:	7b1a                	flw	fs6,164(sp)
     266:	3700                	fld	fs0,40(a4)
     268:	211a                	fld	ft2,384(sp)
     26a:	008e007b          	0x8e007b
     26e:	08243327          	fsd	ft2,134(s0) # 3003086 <__freertos_irq_stack_top+0x1ff3086>
     272:	1a78                	addi	a4,sp,316
     274:	1a37007b          	0x1a37007b
     278:	3821                	jal	fffffa90 <__freertos_irq_stack_top+0xfefefa90>
     27a:	2124                	fld	fs1,64(a0)
     27c:	939f 0a02 7fff      	0x7fff0a02939f
    if (results[0].iterations == 0)
     282:	939f e002 0014      	0x14e002939f
        while (secs_passed < (secs_ret)1)
     288:	7c00                	flw	fs0,56(s0)
     28a:	0016                	c.slli	zero,0x5
     28c:	0800                	addi	s0,sp,16
     28e:	9300                	0x9300
     290:	0a02                	c.slli64	s4
     292:	7fff                	0x7fff
        results[0].iterations = 1;
     294:	939f 7c02 0016      	0x167c02939f
     29a:	8c00                	0x8c00
        crc      = core_bench_list(res, 1);
     29c:	0016                	c.slli	zero,0x5
     29e:	0b00                	addi	s0,sp,400
     2a0:	0900                	addi	s0,sp,144
     2a2:	9fff                	0x9fff
     2a4:	ff0a0293          	addi	t0,s4,-16
     2a8:	9f7f                	0x9f7f
     2aa:	00000293          	li	t0,0
     2ae:	0000                	unimp
     2b0:	0000                	unimp
     2b2:	0000                	unimp
     2b4:	1488                	addi	a0,sp,608
     2b6:	0000                	unimp
            printf("start test44\n");
     2b8:	14e0                	addi	s0,sp,620
     2ba:	0000                	unimp
     2bc:	0008                	0x8
     2be:	008e007b          	0x8e007b
     2c2:	9f1a3f27          	fsd	fa7,-1538(s4)
	...
            results[0].iterations *= 10;
     2ce:	1488                	addi	a0,sp,608
     2d0:	0000                	unimp
     2d2:	14e0                	addi	s0,sp,620
     2d4:	0000                	unimp
     2d6:	0010                	0x10
     2d8:	008e007b          	0x8e007b
            start_time();
     2dc:	08243327          	fsd	ft2,134(s0)
     2e0:	1a78                	addi	a4,sp,316
     2e2:	1a37007b          	0x1a37007b
    ee_u32        iterations = res->iterations;
     2e6:	9f21                	0x9f21
	...
    for (i = 0; i < iterations; i++)
     2f0:	1488                	addi	a0,sp,608
     2f2:	0000                	unimp
        crc      = core_bench_list(res, 1);
     2f4:	14dc                	addi	a5,sp,612
     2f6:	0000                	unimp
     2f8:	0001                	nop
     2fa:	005c                	addi	a5,sp,4
     2fc:	0000                	unimp
     2fe:	0000                	unimp
     300:	0000                	unimp
     302:	8800                	0x8800
        res->crc = crcu16(crc, res->crc);
     304:	0014                	0x14
     306:	dc00                	sw	s0,56(s0)
     308:	0014                	0x14
     30a:	0100                	addi	s0,sp,128
     30c:	5600                	lw	s0,40(a2)
	...
        crc      = core_bench_list(res, -1);
     316:	1488                	addi	a0,sp,608
     318:	0000                	unimp
     31a:	14dc                	addi	a5,sp,612
     31c:	0000                	unimp
     31e:	0006                	c.slli	zero,0x1
     320:	47f2                	lw	a5,28(sp)
     322:	000e                	c.slli	zero,0x3
	...
        res->crc = crcu16(crc, res->crc);
     32c:	0000                	unimp
     32e:	1488                	addi	a0,sp,608
     330:	0000                	unimp
     332:	14dc                	addi	a5,sp,612
        if (i == 0)
     334:	0000                	unimp
     336:	0006                	c.slli	zero,0x1
    for (i = 0; i < iterations; i++)
     338:	f8f2                	fsw	ft8,112(sp)
     33a:	000d                	c.nop	3
	...
            stop_time();
     344:	0000                	unimp
     346:	1488                	addi	a0,sp,608
            secs_passed = time_in_secs(get_time());
     348:	0000                	unimp
     34a:	14dc                	addi	a5,sp,612
     34c:	0000                	unimp
     34e:	0006                	c.slli	zero,0x1
     350:	9af2                	add	s5,s5,t3
     352:	000e                	c.slli	zero,0x3
	...
        while (secs_passed < (secs_ret)1)
     35c:	0000                	unimp
     35e:	1488                	addi	a0,sp,608
            secs_passed = time_in_secs(get_time());
     360:	0000                	unimp
     362:	14dc                	addi	a5,sp,612
     364:	0000                	unimp
     366:	0001                	nop
        while (secs_passed < (secs_ret)1)
     368:	0058                	addi	a4,sp,4
     36a:	0000                	unimp
     36c:	0000                	unimp
     36e:	0000                	unimp
     370:	b800                	fsd	fs0,48(s0)
     372:	0014                	0x14
        divisor = (ee_u32)secs_passed;
     374:	dc00                	sw	s0,56(s0)
     376:	0014                	0x14
     378:	0100                	addi	s0,sp,128
     37a:	5e00                	lw	s0,56(a2)
	...
     384:	14c4                	addi	s1,sp,612
     386:	0000                	unimp
        if (divisor == 0) /* some machines cast float to int as 0 since this
     388:	14d0                	addi	a2,sp,612
     38a:	0000                	unimp
            divisor = 1;
     38c:	0006                	c.slli	zero,0x1
     38e:	9af2                	add	s5,s5,t3
        results[0].iterations *= 1 + 10 / divisor;
     390:	000e                	c.slli	zero,0x3
	...
     39a:	0000                	unimp
     39c:	14c4                	addi	s1,sp,612
     39e:	0000                	unimp
     3a0:	14d0                	addi	a2,sp,612
     3a2:	0000                	unimp
     3a4:	0001                	nop
     3a6:	005d                	c.nop	23
     3a8:	0000                	unimp
     3aa:	0000                	unimp
     3ac:	0000                	unimp
     3ae:	3000                	fld	fs0,32(s0)
    start_time();
     3b0:	0016                	c.slli	zero,0x5
     3b2:	4000                	lw	s0,0(s0)
     3b4:	0016                	c.slli	zero,0x5
     3b6:	0600                	addi	s0,sp,768
    iterate(&results[0]);
     3b8:	8200                	0x8200
     3ba:	7d00                	flw	fs0,56(a0)
     3bc:	2700                	fld	fs0,8(a4)
     3be:	409f 0016 5800      	0x58000016409f
     3c4:	0016                	c.slli	zero,0x5
     3c6:	0a00                	addi	s0,sp,272
     3c8:	7e00                	flw	fs0,56(a2)
     3ca:	4000                	lw	s0,0(s0)
     3cc:	4024                	lw	s1,64(s0)
     3ce:	8225                	srli	a2,a2,0x9
     3d0:	2700                	fld	fs0,8(a4)
     3d2:	589f 0016 6000      	0x60000016589f
    stop_time();
     3d8:	0016                	c.slli	zero,0x5
     3da:	0a00                	addi	s0,sp,272
     3dc:	7e00                	flw	fs0,56(a2)
     3de:	407f                	0x407f
    total_time = get_time();
     3e0:	4024                	lw	s1,64(s0)
     3e2:	8225                	srli	a2,a2,0x9
     3e4:	2700                	fld	fs0,8(a4)
     3e6:	009f 0000 0000      	0x9f
    seedcrc = crc16(results[0].seed1, seedcrc);
     3ec:	0000                	unimp
     3ee:	4800                	lw	s0,16(s0)
     3f0:	0014                	0x14
     3f2:	f700                	fsw	fs0,40(a4)
    total_time = get_time();
     3f4:	0014                	0x14
     3f6:	0100                	addi	s0,sp,128
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	5c00                	lw	s0,56(s0)
     3fa:	167c                	addi	a5,sp,812
     3fc:	0000                	unimp
     3fe:	168c                	addi	a1,sp,864
     400:	0000                	unimp
     402:	0001                	nop
     404:	005c                	addi	a5,sp,4
     406:	0000                	unimp
     408:	0000                	unimp
     40a:	0000                	unimp
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	4800                	lw	s0,16(s0)
     40e:	0014                	0x14
     410:	f700                	fsw	fs0,40(a4)
     412:	0014                	0x14
     414:	0100                	addi	s0,sp,128
     416:	5600                	lw	s0,40(a2)
     418:	167c                	addi	a5,sp,812
     41a:	0000                	unimp
     41c:	168c                	addi	a1,sp,864
     41e:	0000                	unimp
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	0001                	nop
     422:	0056                	c.slli	zero,0x15
     424:	0000                	unimp
     426:	0000                	unimp
     428:	0000                	unimp
     42a:	4800                	lw	s0,16(s0)
     42c:	0014                	0x14
     42e:	2800                	fld	fs0,16(s0)
     430:	0015                	c.nop	5
     432:	0100                	addi	s0,sp,128
    seedcrc = crc16(results[0].size, seedcrc);
     434:	5800                	lw	s0,48(s0)
     436:	1528                	addi	a0,sp,680
     438:	0000                	unimp
     43a:	1628                	addi	a0,sp,808
     43c:	0000                	unimp
     43e:	0004                	0x4
     440:	9f5b01f3          	0x9f5b01f3
     444:	1628                	addi	a0,sp,808
     446:	0000                	unimp
     448:	1660                	addi	s0,sp,812
     44a:	0000                	unimp
     44c:	0001                	nop
     44e:	6058                	flw	fa4,4(s0)
    switch (seedcrc)
     450:	0016                	c.slli	zero,0x5
     452:	7c00                	flw	fs0,56(s0)
     454:	0016                	c.slli	zero,0x5
     456:	0400                	addi	s0,sp,512
     458:	f300                	fsw	fs0,32(a4)
     45a:	5b01                	li	s6,-32
     45c:	7c9f 0016 8c00      	0x8c0000167c9f
     462:	0016                	c.slli	zero,0x5
     464:	0100                	addi	s0,sp,128
     466:	5800                	lw	s0,48(s0)
	...
            ee_printf("2K performance run parameters for coremark.\n");
     470:	1454                	addi	a3,sp,548
     472:	0000                	unimp
     474:	1470                	addi	a2,sp,556
     476:	0000                	unimp
     478:	0001                	nop
     47a:	0059                	c.nop	22
     47c:	0000                	unimp
     47e:	0000                	unimp
     480:	0000                	unimp
     482:	6000                	flw	fs0,0(s0)
     484:	0014                	0x14
     486:	7000                	flw	fs0,32(s0)
     488:	0014                	0x14
     48a:	0600                	addi	s0,sp,768
            known_id = 3;
     48c:	f200                	fsw	fs0,32(a2)
     48e:	0e9a                	slli	t4,t4,0x6
	...
            ee_printf("2K performance run parameters for coremark.\n");
     498:	0000                	unimp
     49a:	6000                	flw	fs0,0(s0)
            known_id = 3;
     49c:	0014                	0x14
     49e:	6800                	flw	fs0,16(s0)
        for (i = 0; i < default_num_contexts; i++)
     4a0:	0014                	0x14
     4a2:	0100                	addi	s0,sp,128
     4a4:	5b00                	lw	s0,48(a4)
     4a6:	1468                	addi	a0,sp,556
     4a8:	0000                	unimp
     4aa:	1470                	addi	a2,sp,556
     4ac:	0000                	unimp
     4ae:	0002                	c.slli64	zero
     4b0:	0c78                	addi	a4,sp,540
	...
            results[i].err = 0;
     4ba:	1520                	addi	s0,sp,680
     4bc:	0000                	unimp
     4be:	1538                	addi	a4,sp,680
     4c0:	0000                	unimp
     4c2:	0002                	c.slli64	zero
     4c4:	9f30                	0x9f30
     4c6:	1538                	addi	a4,sp,680
     4c8:	0000                	unimp
     4ca:	15f4                	addi	a3,sp,748
     4cc:	0000                	unimp
     4ce:	0001                	nop
     4d0:	fc58                	fsw	fa4,60(s0)
     4d2:	0015                	c.nop	5
     4d4:	1c00                	addi	s0,sp,560
     4d6:	0016                	c.slli	zero,0x5
     4d8:	0100                	addi	s0,sp,128
     4da:	5800                	lw	s0,48(s0)
     4dc:	161c                	addi	a5,sp,800
     4de:	0000                	unimp
     4e0:	1628                	addi	a0,sp,808
     4e2:	0000                	unimp
     4e4:	0002                	c.slli64	zero
     4e6:	9f30                	0x9f30
     4e8:	1660                	addi	s0,sp,812
     4ea:	0000                	unimp
            total_errors += results[i].err;
     4ec:	166c                	addi	a1,sp,812
     4ee:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     4f0:	0001                	nop
     4f2:	6c58                	flw	fa4,28(s0)
            total_errors += results[i].err;
     4f4:	0016                	c.slli	zero,0x5
     4f6:	7c00                	flw	fs0,56(s0)
        for (i = 0; i < default_num_contexts; i++)
     4f8:	0016                	c.slli	zero,0x5
     4fa:	0100                	addi	s0,sp,128
            total_errors += results[i].err;
     4fc:	5a00                	lw	s0,48(a2)
	...
     506:	1520                	addi	s0,sp,680
        for (i = 0; i < default_num_contexts; i++)
     508:	0000                	unimp
     50a:	1534                	addi	a3,sp,680
            total_errors += results[i].err;
     50c:	0000                	unimp
     50e:	0001                	nop
        for (i = 0; i < default_num_contexts; i++)
     510:	3458                	fld	fa4,168(s0)
     512:	0015                	c.nop	5
            results[i].err = 0;
     514:	6000                	flw	fs0,0(s0)
     516:	0015                	c.nop	5
     518:	0100                	addi	s0,sp,128
     51a:	5f00                	lw	s0,56(a4)
     51c:	1560                	addi	s0,sp,684
     51e:	0000                	unimp
     520:	15fc                	addi	a5,sp,748
     522:	0000                	unimp
     524:	0001                	nop
     526:	fc5d                	bnez	s0,4e4 <main+0x468>
     528:	0015                	c.nop	5
     52a:	0800                	addi	s0,sp,16
            if ((results[i].execs & ID_LIST)
     52c:	0016                	c.slli	zero,0x5
     52e:	0200                	addi	s0,sp,256
            results[i].err = 0;
     530:	7d00                	flw	fs0,56(a0)
     532:	0800                	addi	s0,sp,16
            if ((results[i].execs & ID_LIST)
     534:	0016                	c.slli	zero,0x5
     536:	0c00                	addi	s0,sp,528
     538:	0016                	c.slli	zero,0x5
     53a:	0100                	addi	s0,sp,128
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	5d00                	lw	s0,56(a0)
     53e:	160c                	addi	a1,sp,800
     540:	0000                	unimp
     542:	1610                	addi	a2,sp,800
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	0000                	unimp
     546:	0001                	nop
     548:	1c5f 0016 2800      	0x280000161c5f
     54e:	0016                	c.slli	zero,0x5
     550:	0100                	addi	s0,sp,128
     552:	5800                	lw	s0,48(s0)
	...
                results[i].err++;
     55c:	153c                	addi	a5,sp,680
     55e:	0000                	unimp
     560:	1544                	addi	s1,sp,676
     562:	0000                	unimp
     564:	0001                	nop
     566:	445f 0015 4800      	0x48000015445f
            if ((results[i].execs & ID_MATRIX)
     56c:	0015                	c.nop	5
     56e:	0100                	addi	s0,sp,128
     570:	5b00                	lw	s0,48(a4)
     572:	154c                	addi	a1,sp,676
     574:	0000                	unimp
     576:	1560                	addi	s0,sp,684
     578:	0000                	unimp
     57a:	0001                	nop
     57c:	0015605b          	0x15605b
     580:	bc00                	fsd	fs0,56(s0)
     582:	0015                	c.nop	5
     584:	0100                	addi	s0,sp,128
     586:	5f00                	lw	s0,56(a4)
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	15bc                	addi	a5,sp,744
     58a:	0000                	unimp
     58c:	15c4                	addi	s1,sp,740
     58e:	0000                	unimp
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     590:	0002                	c.slli64	zero
     592:	007f                	0x7f
     594:	15c4                	addi	s1,sp,740
     596:	0000                	unimp
     598:	15e0                	addi	s0,sp,748
     59a:	0000                	unimp
     59c:	0001                	nop
     59e:	e05f 0015 ec00      	0xec000015e05f
     5a4:	0015                	c.nop	5
     5a6:	0200                	addi	s0,sp,256
                results[i].err++;
     5a8:	7f00                	flw	fs0,56(a4)
     5aa:	ec00                	fsw	fs0,24(s0)
     5ac:	0015                	c.nop	5
     5ae:	2800                	fld	fs0,16(s0)
     5b0:	0016                	c.slli	zero,0x5
     5b2:	0100                	addi	s0,sp,128
     5b4:	5f00                	lw	s0,56(a4)
     5b6:	1660                	addi	s0,sp,812
            if ((results[i].execs & ID_STATE)
     5b8:	0000                	unimp
     5ba:	167c                	addi	a5,sp,812
     5bc:	0000                	unimp
     5be:	0001                	nop
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	005f 0000 0000      	0x5f
     5c6:	0000                	unimp
     5c8:	bc00                	fsd	fs0,56(s0)
     5ca:	0015                	c.nop	5
     5cc:	c400                	sw	s0,8(s0)
     5ce:	0015                	c.nop	5
     5d0:	0100                	addi	s0,sp,128
     5d2:	5f00                	lw	s0,56(a4)
     5d4:	15c4                	addi	s1,sp,740
     5d6:	0000                	unimp
     5d8:	15d4                	addi	a3,sp,740
     5da:	0000                	unimp
     5dc:	0001                	nop
     5de:	0015d45b          	0x15d45b
     5e2:	d800                	sw	s0,48(s0)
            results[i].list = core_list_init(
     5e4:	0015                	c.nop	5
     5e6:	0100                	addi	s0,sp,128
     5e8:	5a00                	lw	s0,48(a2)
     5ea:	15e0                	addi	s0,sp,748
     5ec:	0000                	unimp
     5ee:	15ec                	addi	a1,sp,748
     5f0:	0000                	unimp
     5f2:	0001                	nop
     5f4:	ec5f 0015 fc00      	0xfc000015ec5f
     5fa:	0015                	c.nop	5
     5fc:	0100                	addi	s0,sp,128
     5fe:	5b00                	lw	s0,48(a4)
     600:	15fc                	addi	a5,sp,748
     602:	0000                	unimp
     604:	1608                	addi	a0,sp,800
     606:	0000                	unimp
     608:	0001                	nop
     60a:	085d                	addi	a6,a6,23
     60c:	0016                	c.slli	zero,0x5
     60e:	0c00                	addi	s0,sp,528
     610:	0016                	c.slli	zero,0x5
     612:	0100                	addi	s0,sp,128
     614:	5b00                	lw	s0,48(a4)
	...
        if (results[i].execs & ID_MATRIX)
     61e:	1520                	addi	s0,sp,680
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	0000                	unimp
     622:	1538                	addi	a4,sp,680
     624:	0000                	unimp
     626:	0002                	c.slli64	zero
     628:	9f30                	0x9f30
     62a:	1538                	addi	a4,sp,680
            core_init_matrix(results[0].size,
     62c:	0000                	unimp
     62e:	15f8                	addi	a4,sp,748
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	0000                	unimp
     632:	0001                	nop
     634:	fc5a                	fsw	fs6,56(sp)
     636:	0015                	c.nop	5
                             (ee_s32)results[i].seed1
     638:	1c00                	addi	s0,sp,560
     63a:	0016                	c.slli	zero,0x5
                                 | (((ee_s32)results[i].seed2) << 16),
     63c:	0100                	addi	s0,sp,128
     63e:	5a00                	lw	s0,48(a2)
            core_init_matrix(results[0].size,
     640:	161c                	addi	a5,sp,800
     642:	0000                	unimp
                             (ee_s32)results[i].seed1
     644:	1628                	addi	a0,sp,808
     646:	0000                	unimp
            core_init_matrix(results[0].size,
     648:	0002                	c.slli64	zero
     64a:	9f30                	0x9f30
                                 | (((ee_s32)results[i].seed2) << 16),
     64c:	1660                	addi	s0,sp,812
     64e:	0000                	unimp
            core_init_matrix(results[0].size,
     650:	1664                	addi	s1,sp,812
     652:	0000                	unimp
     654:	0001                	nop
     656:	005a                	c.slli	zero,0x16
     658:	0000                	unimp
     65a:	0000                	unimp
     65c:	0000                	unimp
     65e:	2000                	fld	fs0,0(s0)
     660:	0015                	c.nop	5
     662:	2800                	fld	fs0,16(s0)
     664:	0015                	c.nop	5
     666:	0200                	addi	s0,sp,256
     668:	3100                	fld	fs0,32(a0)
     66a:	289f 0015 2800      	0x28000015289f
     670:	0016                	c.slli	zero,0x5
     672:	0100                	addi	s0,sp,128
     674:	6e00                	flw	fs0,24(a2)
     676:	1660                	addi	s0,sp,812
     678:	0000                	unimp
     67a:	167c                	addi	a5,sp,812
     67c:	0000                	unimp
     67e:	0001                	nop
            ee_printf("Profile generation run parameters for coremark.\n");
     680:	006e                	c.slli	zero,0x1b
     682:	0000                	unimp
     684:	0000                	unimp
     686:	0000                	unimp
     688:	2000                	fld	fs0,0(s0)
     68a:	0015                	c.nop	5
     68c:	3800                	fld	fs0,48(s0)
     68e:	0015                	c.nop	5
     690:	0200                	addi	s0,sp,256
     692:	3000                	fld	fs0,32(s0)
     694:	389f 0015 1c00      	0x1c000015389f
     69a:	0016                	c.slli	zero,0x5
            known_id = 2;
     69c:	0100                	addi	s0,sp,128
     69e:	6d00                	flw	fs0,24(a0)
            ee_printf("Profile generation run parameters for coremark.\n");
     6a0:	161c                	addi	a5,sp,800
     6a2:	0000                	unimp
     6a4:	1628                	addi	a0,sp,808
     6a6:	0000                	unimp
     6a8:	0002                	c.slli64	zero
     6aa:	9f30                	0x9f30
            known_id = 2;
     6ac:	1660                	addi	s0,sp,812
     6ae:	0000                	unimp
     6b0:	167c                	addi	a5,sp,812
     6b2:	0000                	unimp
        && (results[0].seed3 == 0))
     6b4:	0001                	nop
     6b6:	006d                	c.nop	27
     6b8:	0000                	unimp
     6ba:	0000                	unimp
     6bc:	0000                	unimp
     6be:	3c00                	fld	fs0,56(s0)
        results[0].seed3 = 0x66;
     6c0:	0015                	c.nop	5
     6c2:	4400                	lw	s0,8(s0)
     6c4:	0015                	c.nop	5
     6c6:	0200                	addi	s0,sp,256
     6c8:	3000                	fld	fs0,32(s0)
     6ca:	449f 0015 2800      	0x28000015449f
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	0016                	c.slli	zero,0x5
     6d2:	0100                	addi	s0,sp,128
     6d4:	5e00                	lw	s0,56(a2)
     6d6:	1660                	addi	s0,sp,812
     6d8:	0000                	unimp
     6da:	167c                	addi	a5,sp,812
     6dc:	0000                	unimp
     6de:	0001                	nop
     6e0:	005e                	c.slli	zero,0x17
     6e2:	0000                	unimp
     6e4:	0000                	unimp
     6e6:	0000                	unimp
                results[i].err++;
     6e8:	6000                	flw	fs0,0(s0)
     6ea:	0015                	c.nop	5
     6ec:	2800                	fld	fs0,16(s0)
     6ee:	0016                	c.slli	zero,0x5
     6f0:	0100                	addi	s0,sp,128
     6f2:	5c00                	lw	s0,56(s0)
     6f4:	1660                	addi	s0,sp,812
     6f6:	0000                	unimp
     6f8:	167c                	addi	a5,sp,812
     6fa:	0000                	unimp
     6fc:	0001                	nop
     6fe:	005c                	addi	a5,sp,4
    switch (seedcrc)
     700:	0000                	unimp
     702:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
     704:	0000                	unimp
     706:	3c00                	fld	fs0,56(s0)
    switch (seedcrc)
     708:	0015                	c.nop	5
     70a:	4400                	lw	s0,8(s0)
    ee_s16       known_id = -1, total_errors = 0;
     70c:	0015                	c.nop	5
     70e:	0200                	addi	s0,sp,256
     710:	3000                	fld	fs0,32(s0)
     712:	449f 0015 4c00      	0x4c000015449f
    total_errors += check_data_types();
     718:	0015                	c.nop	5
     71a:	0100                	addi	s0,sp,128
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	5e00                	lw	s0,56(a2)
     71e:	154c                	addi	a1,sp,676
    total_errors += check_data_types();
     720:	0000                	unimp
     722:	1550                	addi	a2,sp,676
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	0000                	unimp
     726:	7f7e0003          	lb	zero,2039(t3) # 3f013f49 <__freertos_irq_stack_top+0x3e003f49>
     72a:	509f 0015 5400      	0x54000015509f
     730:	0015                	c.nop	5
     732:	0100                	addi	s0,sp,128
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	5e00                	lw	s0,56(a2)
	...
     73e:	1574                	addi	a3,sp,684
     740:	0000                	unimp
     742:	15b8                	addi	a4,sp,744
     744:	0000                	unimp
     746:	0002                	c.slli64	zero
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     748:	9f30                	0x9f30
	...
     752:	1574                	addi	a3,sp,684
     754:	0000                	unimp
     756:	15b8                	addi	a4,sp,744
     758:	0000                	unimp
     75a:	0001                	nop
     75c:	0061                	c.nop	24
     75e:	0000                	unimp
     760:	0000                	unimp
     762:	0000                	unimp
     764:	7400                	flw	fs0,40(s0)
     766:	0015                	c.nop	5
     768:	a400                	fsd	fs0,8(s0)
     76a:	0015                	c.nop	5
    if (time_in_secs(total_time) > 0)
     76c:	0100                	addi	s0,sp,128
     76e:	5600                	lw	s0,40(a2)
     770:	15a4                	addi	s1,sp,744
     772:	0000                	unimp
     774:	15b8                	addi	a4,sp,744
     776:	0000                	unimp
    total_errors += check_data_types();
     778:	0002                	c.slli64	zero
     77a:	047d                	addi	s0,s0,31
	...
     784:	0d40                	addi	s0,sp,660
     786:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     788:	0d9c                	addi	a5,sp,720
     78a:	0000                	unimp
     78c:	0001                	nop
     78e:	9c5a                	add	s8,s8,s6
     790:	000d                	c.nop	3
     792:	0800                	addi	s0,sp,16
                  default_num_contexts * results[0].iterations
     794:	0011                	c.nop	4
     796:	0100                	addi	s0,sp,128
     798:	6800                	flw	fs0,16(s0)
     79a:	1108                	addi	a0,sp,160
     79c:	0000                	unimp
     79e:	111c                	addi	a5,sp,160
     7a0:	0000                	unimp
     7a2:	0004                	0x4
        ee_printf("Iterations/Sec   : %lf\n",
     7a4:	9f5a01f3          	0x9f5a01f3
     7a8:	111c                	addi	a5,sp,160
     7aa:	0000                	unimp
     7ac:	112c                	addi	a1,sp,168
     7ae:	0000                	unimp
                      / time_in_secs(total_time));
     7b0:	0001                	nop
     7b2:	2c5a                	fld	fs8,400(sp)
        ee_printf("Iterations/Sec   : %lf\n",
     7b4:	0011                	c.nop	4
     7b6:	d000                	sw	s0,32(s0)
                      / time_in_secs(total_time));
     7b8:	01000013          	li	zero,16
     7bc:	6800                	flw	fs0,16(s0)
	...
        ee_printf("Iterations/Sec   : %lf\n",
     7c6:	0d40                	addi	s0,sp,660
     7c8:	0000                	unimp
     7ca:	0e94                	addi	a3,sp,848
     7cc:	0000                	unimp
     7ce:	0001                	nop
     7d0:	000e945b          	0xe945b
     7d4:	5c00                	lw	s0,56(s0)
     7d6:	0010                	0x10
     7d8:	0400                	addi	s0,sp,512
     7da:	f300                	fsw	fs0,32(a4)
     7dc:	5b01                	li	s6,-32
     7de:	5c9f 0010 b800      	0xb80000105c9f
     7e4:	0010                	0x10
     7e6:	0100                	addi	s0,sp,128
     7e8:	5b00                	lw	s0,48(a4)
     7ea:	10b8                	addi	a4,sp,104
     7ec:	0000                	unimp
     7ee:	111c                	addi	a5,sp,160
    if (time_in_secs(total_time) < 10)
     7f0:	0000                	unimp
     7f2:	0004                	0x4
     7f4:	9f5b01f3          	0x9f5b01f3
     7f8:	111c                	addi	a5,sp,160
     7fa:	0000                	unimp
     7fc:	113c                	addi	a5,sp,168
     7fe:	0000                	unimp
     800:	0001                	nop
     802:	00113c5b          	0x113c5b
     806:	c800                	sw	s0,16(s0)
     808:	04000013          	li	zero,64
     80c:	f300                	fsw	fs0,32(a4)
     80e:	5b01                	li	s6,-32
     810:	c89f 0013 d000      	0xd0000013c89f
    ee_printf("Iterations       : %lu\n",
     816:	01000013          	li	zero,16
     81a:	5b00                	lw	s0,48(a4)
	...
     824:	0d40                	addi	s0,sp,660
     826:	0000                	unimp
     828:	0da0                	addi	s0,sp,728
     82a:	0000                	unimp
     82c:	0002                	c.slli64	zero
     82e:	9f30                	0x9f30
     830:	0da0                	addi	s0,sp,728
     832:	0000                	unimp
     834:	0e30                	addi	a2,sp,792
     836:	0000                	unimp
     838:	0001                	nop
     83a:	3460                	fld	fs0,232(s0)
     83c:	000e                	c.slli	zero,0x3
     83e:	9000                	0x9000
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     840:	000e                	c.slli	zero,0x3
     842:	0100                	addi	s0,sp,128
     844:	6000                	flw	fs0,0(s0)
     846:	0ee4                	addi	s1,sp,860
     848:	0000                	unimp
     84a:	0f0c                	addi	a1,sp,912
     84c:	0000                	unimp
     84e:	bc910003          	lb	zero,-1079(sp)
     852:	5c7f                	0x5c7f
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	0010                	0x10
     856:	b000                	fsd	fs0,32(s0)
     858:	0010                	0x10
     85a:	0100                	addi	s0,sp,128
     85c:	6000                	flw	fs0,0(s0)
     85e:	10b4                	addi	a3,sp,104
     860:	0000                	unimp
     862:	10b8                	addi	a4,sp,104
     864:	0000                	unimp
     866:	0001                	nop
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     868:	bc60                	fsd	fs0,248(s0)
     86a:	0010                	0x10
     86c:	1800                	addi	s0,sp,48
     86e:	0011                	c.nop	4
     870:	0300                	addi	s0,sp,384
     872:	9100                	0x9100
     874:	7fbc                	flw	fa5,120(a5)
     876:	1118                	addi	a4,sp,160
     878:	0000                	unimp
     87a:	111c                	addi	a5,sp,160
     87c:	0000                	unimp
     87e:	bc720003          	lb	zero,-1081(tp) # ffffcbc7 <__freertos_irq_stack_top+0xfefecbc7>
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     882:	c07f                	0xc07f
     884:	c8000013          	li	zero,-896
     888:	03000013          	li	zero,48
     88c:	9100                	0x9100
     88e:	7fbc                	flw	fa5,120(a5)
     890:	13c8                	addi	a0,sp,484
     892:	0000                	unimp
    if (results[0].execs & ID_LIST)
     894:	13d0                	addi	a2,sp,484
     896:	0000                	unimp
        total_errors++;
     898:	0001                	nop
     89a:	0060                	addi	s0,sp,12
     89c:	0000                	unimp
     89e:	0000                	unimp
    if (results[0].execs & ID_LIST)
     8a0:	0000                	unimp
     8a2:	4000                	lw	s0,0(s0)
     8a4:	000d                	c.nop	3
     8a6:	a000                	fsd	fs0,0(s0)
        for (i = 0; i < default_num_contexts; i++)
     8a8:	000d                	c.nop	3
     8aa:	0200                	addi	s0,sp,256
     8ac:	3000                	fld	fs0,32(s0)
     8ae:	a09f 000d 0c00      	0xc00000da09f
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b4:	000e                	c.slli	zero,0x3
     8b6:	0100                	addi	s0,sp,128
     8b8:	5a00                	lw	s0,48(a2)
     8ba:	0e18                	addi	a4,sp,784
     8bc:	0000                	unimp
     8be:	0e94                	addi	a3,sp,848
     8c0:	0000                	unimp
     8c2:	0001                	nop
        for (i = 0; i < default_num_contexts; i++)
     8c4:	5c5a                	lw	s8,180(sp)
     8c6:	0010                	0x10
     8c8:	b800                	fsd	fs0,48(s0)
     8ca:	0010                	0x10
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8cc:	0100                	addi	s0,sp,128
     8ce:	5a00                	lw	s0,48(a2)
     8d0:	111c                	addi	a5,sp,160
     8d2:	0000                	unimp
     8d4:	112c                	addi	a1,sp,168
     8d6:	0000                	unimp
     8d8:	0002                	c.slli64	zero
     8da:	9f30                	0x9f30
     8dc:	13c8                	addi	a0,sp,484
     8de:	0000                	unimp
     8e0:	13d0                	addi	a2,sp,484
     8e2:	0000                	unimp
     8e4:	0001                	nop
     8e6:	005a                	c.slli	zero,0x16
     8e8:	0000                	unimp
     8ea:	0000                	unimp
     8ec:	0000                	unimp
     8ee:	4000                	lw	s0,0(s0)
     8f0:	000d                	c.nop	3
     8f2:	a000                	fsd	fs0,0(s0)
     8f4:	000d                	c.nop	3
     8f6:	0200                	addi	s0,sp,256
     8f8:	3000                	fld	fs0,32(s0)
     8fa:	989f 0010 b800      	0xb8000010989f
        for (i = 0; i < default_num_contexts; i++)
     900:	0010                	0x10
     902:	0100                	addi	s0,sp,128
     904:	5f00                	lw	s0,56(a4)
     906:	111c                	addi	a5,sp,160
     908:	0000                	unimp
     90a:	112c                	addi	a1,sp,168
     90c:	0000                	unimp
     90e:	0002                	c.slli64	zero
     910:	9f30                	0x9f30
	...
    if (results[0].execs & ID_MATRIX)
     91a:	0d88                	addi	a0,sp,720
     91c:	0000                	unimp
     91e:	0dec                	addi	a1,sp,732
        for (i = 0; i < default_num_contexts; i++)
     920:	0000                	unimp
     922:	0001                	nop
     924:	0058                	addi	a4,sp,4
     926:	000e                	c.slli	zero,0x3
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	3800                	fld	fs0,48(s0)
     92a:	0100000f          	fence	w,unknown
     92e:	5800                	lw	s0,48(s0)
     930:	1000                	addi	s0,sp,32
     932:	0000                	unimp
     934:	1024                	addi	s1,sp,40
     936:	0000                	unimp
     938:	0001                	nop
     93a:	5c58                	lw	a4,60(s0)
        for (i = 0; i < default_num_contexts; i++)
     93c:	0010                	0x10
     93e:	b800                	fsd	fs0,48(s0)
     940:	0010                	0x10
     942:	0100                	addi	s0,sp,128
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     944:	5800                	lw	s0,48(s0)
     946:	10b8                	addi	a4,sp,104
     948:	0000                	unimp
     94a:	10ec                	addi	a1,sp,108
     94c:	0000                	unimp
     94e:	0001                	nop
     950:	1c59                	addi	s8,s8,-10
     952:	0011                	c.nop	4
     954:	3c00                	fld	fs0,56(s0)
     956:	0011                	c.nop	4
     958:	0100                	addi	s0,sp,128
     95a:	5800                	lw	s0,48(s0)
     95c:	13c0                	addi	s0,sp,484
     95e:	0000                	unimp
     960:	13c8                	addi	a0,sp,484
     962:	0000                	unimp
     964:	0001                	nop
     966:	c859                	beqz	s0,9fc <main+0x980>
     968:	d0000013          	li	zero,-768
     96c:	01000013          	li	zero,16
     970:	5800                	lw	s0,48(s0)
	...
        for (i = 0; i < default_num_contexts; i++)
     97a:	0d88                	addi	a0,sp,720
     97c:	0000                	unimp
     97e:	0e94                	addi	a3,sp,848
     980:	0000                	unimp
     982:	0001                	nop
     984:	5c61                	li	s8,-8
     986:	0010                	0x10
     988:	b800                	fsd	fs0,48(s0)
     98a:	0010                	0x10
     98c:	0100                	addi	s0,sp,128
     98e:	6100                	flw	fs0,0(a0)
    if (results[0].execs & ID_STATE)
     990:	111c                	addi	a5,sp,160
     992:	0000                	unimp
     994:	113c                	addi	a5,sp,168
     996:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     998:	0001                	nop
     99a:	c861                	beqz	s0,a6a <main+0x9ee>
     99c:	d0000013          	li	zero,-768
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	01000013          	li	zero,16
     9a4:	6100                	flw	fs0,0(a0)
	...
     9ae:	0de4                	addi	s1,sp,732
     9b0:	0000                	unimp
     9b2:	0e48                	addi	a0,sp,788
        for (i = 0; i < default_num_contexts; i++)
     9b4:	0000                	unimp
     9b6:	0001                	nop
     9b8:	905f 0010 9800      	0x98000010905f
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9be:	0010                	0x10
     9c0:	0100                	addi	s0,sp,128
     9c2:	5f00                	lw	s0,56(a4)
	...
     9cc:	0e3c                	addi	a5,sp,792
     9ce:	0000                	unimp
     9d0:	0e50                	addi	a2,sp,788
     9d2:	0000                	unimp
     9d4:	0001                	nop
     9d6:	dc5d                	beqz	s0,994 <main+0x918>
     9d8:	000e                	c.slli	zero,0x3
     9da:	e000                	fsw	fs0,0(s0)
     9dc:	000e                	c.slli	zero,0x3
     9de:	0200                	addi	s0,sp,256
     9e0:	3000                	fld	fs0,32(s0)
     9e2:	e09f 000e fc00      	0xfc00000ee09f
     9e8:	000e                	c.slli	zero,0x3
     9ea:	0100                	addi	s0,sp,128
     9ec:	5900                	lw	s0,48(a0)
     9ee:	0f00                	addi	s0,sp,912
        for (i = 0; i < default_num_contexts; i++)
     9f0:	0000                	unimp
     9f2:	0f08                	addi	a0,sp,912
     9f4:	0000                	unimp
     9f6:	0001                	nop
     9f8:	1859                	addi	a6,a6,-10
     9fa:	0010                	0x10
     9fc:	1c00                	addi	s0,sp,560
     9fe:	0010                	0x10
     a00:	0200                	addi	s0,sp,256
     a02:	3000                	fld	fs0,32(s0)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	1c9f 0010 2400      	0x240000101c9f
    for (i = 0; i < default_num_contexts; i++)
     a0a:	0010                	0x10
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a0c:	0100                	addi	s0,sp,128
     a0e:	5900                	lw	s0,48(a0)
     a10:	10bc                	addi	a5,sp,104
     a12:	0000                	unimp
     a14:	10d8                	addi	a4,sp,100
     a16:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     a18:	0001                	nop
     a1a:	dc58                	sw	a4,60(s0)
     a1c:	0010                	0x10
     a1e:	e800                	fsw	fs0,16(s0)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	0010                	0x10
     a22:	0100                	addi	s0,sp,128
     a24:	5800                	lw	s0,48(s0)
     a26:	13c0                	addi	s0,sp,484
    for (i = 0; i < default_num_contexts; i++)
     a28:	0000                	unimp
     a2a:	13c8                	addi	a0,sp,484
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	0000                	unimp
     a2e:	0001                	nop
     a30:	0058                	addi	a4,sp,4
     a32:	0000                	unimp
     a34:	0000                	unimp
     a36:	0000                	unimp
     a38:	c000                	sw	s0,0(s0)
     a3a:	000e                	c.slli	zero,0x3
     a3c:	5c00                	lw	s0,56(s0)
     a3e:	0010                	0x10
     a40:	0100                	addi	s0,sp,128
     a42:	6200                	flw	fs0,0(a2)
     a44:	10b8                	addi	a4,sp,104
     a46:	0000                	unimp
     a48:	10f0                	addi	a2,sp,108
     a4a:	0000                	unimp
     a4c:	0001                	nop
     a4e:	c062                	sw	s8,0(sp)
     a50:	c8000013          	li	zero,-896
    for (i = 0; i < default_num_contexts; i++)
     a54:	01000013          	li	zero,16
     a58:	6200                	flw	fs0,0(a2)
	...
     a62:	0d88                	addi	a0,sp,720
     a64:	0000                	unimp
     a66:	0da0                	addi	s0,sp,728
    if (total_errors == 0)
     a68:	0000                	unimp
     a6a:	0005                	c.nop	1
    if (total_errors > 0)
     a6c:	935b0293          	addi	t0,s6,-1739
        ee_printf("Errors detected\n");
     a70:	a002                	fsd	ft0,0(sp)
     a72:	000d                	c.nop	3
     a74:	ac00                	fsd	fs0,24(s0)
     a76:	000d                	c.nop	3
     a78:	0700                	addi	s0,sp,896
     a7a:	9300                	0x9300
     a7c:	9102                	jalr	sp
     a7e:	7fac                	flw	fa1,120(a5)
    portable_fini(&(results[0].port));
     a80:	0dac0293          	addi	t0,s8,218
     a84:	0000                	unimp
     a86:	0dbc                	addi	a5,sp,728
     a88:	0000                	unimp
     a8a:	0008                	0x8
}
     a8c:	935d                	srli	a4,a4,0x37
     a8e:	9102                	jalr	sp
     a90:	7fac                	flw	fa1,120(a5)
     a92:	0dbc0293          	addi	t0,s8,219
     a96:	0000                	unimp
     a98:	0e68                	addi	a0,sp,796
     a9a:	0000                	unimp
     a9c:	000a                	c.slli	zero,0x2
     a9e:	b491                	j	4e2 <main+0x466>
     aa0:	937f                	0x937f
     aa2:	9102                	jalr	sp
     aa4:	7fac                	flw	fa1,120(a5)
     aa6:	0e680293          	addi	t0,a6,230
     aaa:	0000                	unimp
     aac:	0e94                	addi	a3,sp,848
     aae:	0000                	unimp
     ab0:	000a                	c.slli	zero,0x2
     ab2:	b491                	j	4f6 <main+0x47a>
     ab4:	937f                	0x937f
     ab6:	9102                	jalr	sp
     ab8:	7fac                	flw	fa1,120(a5)
     aba:	105c0293          	addi	t0,s8,261
     abe:	0000                	unimp
     ac0:	1074                	addi	a3,sp,44
     ac2:	0000                	unimp
     ac4:	0008                	0x8
     ac6:	935d                	srli	a4,a4,0x37
     ac8:	9102                	jalr	sp
     aca:	7fac                	flw	fa1,120(a5)
     acc:	10740293          	addi	t0,s0,263
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	0000                	unimp
     ad2:	10b8                	addi	a4,sp,104
     ad4:	0000                	unimp
     ad6:	000a                	c.slli	zero,0x2
     ad8:	b491                	j	51c <main+0x4a0>
     ada:	937f                	0x937f
     adc:	9102                	jalr	sp
     ade:	7fac                	flw	fa1,120(a5)
     ae0:	111c0293          	addi	t0,s8,273
     ae4:	0000                	unimp
     ae6:	112c                	addi	a1,sp,168
     ae8:	0000                	unimp
     aea:	9f300007          	0x9f300007
            j++;
     aee:	935b0293          	addi	t0,s6,-1739
        if ((1 << (ee_u32)i) & results[0].execs)
     af2:	c802                	sw	zero,16(sp)
     af4:	d0000013          	li	zero,-768
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	08000013          	li	zero,128
     afc:	5d00                	lw	s0,56(a0)
     afe:	ac910293          	addi	t0,sp,-1335
     b02:	937f                	0x937f
     b04:	0002                	c.slli64	zero
     b06:	0000                	unimp
     b08:	0000                	unimp
     b0a:	0000                	unimp
     b0c:	8800                	0x8800
     b0e:	000d                	c.nop	3
     b10:	a000                	fsd	fs0,0(s0)
     b12:	000d                	c.nop	3
        if (results[i].execs & ID_LIST)
     b14:	0200                	addi	s0,sp,256
     b16:	3000                	fld	fs0,32(s0)
     b18:	a09f 000d 6c00      	0x6c00000da09f
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1e:	000e                	c.slli	zero,0x3
     b20:	0100                	addi	s0,sp,128
     b22:	5c00                	lw	s0,56(s0)
     b24:	0e74                	addi	a3,sp,796
     b26:	0000                	unimp
     b28:	0e94                	addi	a3,sp,848
     b2a:	0000                	unimp
     b2c:	0001                	nop
     b2e:	5c5c                	lw	a5,60(s0)
     b30:	0010                	0x10
     b32:	b800                	fsd	fs0,48(s0)
     b34:	0010                	0x10
     b36:	0100                	addi	s0,sp,128
     b38:	5c00                	lw	s0,56(s0)
     b3a:	111c                	addi	a5,sp,160
     b3c:	0000                	unimp
     b3e:	112c                	addi	a1,sp,168
     b40:	0000                	unimp
     b42:	0002                	c.slli64	zero
     b44:	9f30                	0x9f30
     b46:	13c8                	addi	a0,sp,484
            j++;
     b48:	0000                	unimp
     b4a:	13d0                	addi	a2,sp,484
     b4c:	0000                	unimp
     b4e:	0001                	nop
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	005c                	addi	a5,sp,4
     b52:	0000                	unimp
     b54:	0000                	unimp
     b56:	0000                	unimp
            j++;
     b58:	ac00                	fsd	fs0,24(s0)
     b5a:	000d                	c.nop	3
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	e400                	fsw	fs0,8(s0)
     b5e:	000d                	c.nop	3
     b60:	0600                	addi	s0,sp,768
     b62:	f200                	fsw	fs0,32(a2)
        ee_printf(
     b64:	1174                	addi	a3,sp,172
     b66:	0000                	unimp
     b68:	5c00                	lw	s0,56(s0)
     b6a:	0010                	0x10
     b6c:	9000                	0x9000
     b6e:	0010                	0x10
     b70:	0600                	addi	s0,sp,768
     b72:	f200                	fsw	fs0,32(a2)
     b74:	1174                	addi	a3,sp,172
     b76:	0000                	unimp
            res->crclist = res->crc;
     b78:	c800                	sw	s0,16(s0)
     b7a:	d0000013          	li	zero,-768
    for (i = 0; i < iterations; i++)
     b7e:	06000013          	li	zero,96
     b82:	f200                	fsw	fs0,32(a2)
     b84:	1174                	addi	a3,sp,172
	...
        && (results[0].seed3 == 0))
     b8e:	0000                	unimp
     b90:	ac00                	fsd	fs0,24(s0)
     b92:	000d                	c.nop	3
     b94:	cc00                	sw	s0,24(s0)
     b96:	000d                	c.nop	3
        results[0].seed1 = 0x3415;
     b98:	0100                	addi	s0,sp,128
     b9a:	5800                	lw	s0,48(s0)
     b9c:	0dcc                	addi	a1,sp,724
     b9e:	0000                	unimp
     ba0:	0de4                	addi	s1,sp,732
     ba2:	0000                	unimp
     ba4:	0001                	nop
     ba6:	5c5f 0010 9000      	0x900000105c5f
        results[0].seed3 = 0x66;
     bac:	0010                	0x10
     bae:	0100                	addi	s0,sp,128
     bb0:	5800                	lw	s0,48(s0)
     bb2:	13c8                	addi	a0,sp,484
        printf("start test22\n");
     bb4:	0000                	unimp
     bb6:	13d0                	addi	a2,sp,484
        results[0].execs = ALL_ALGORITHMS_MASK;
     bb8:	0000                	unimp
     bba:	0001                	nop
        printf("start test22\n");
     bbc:	0058                	addi	a4,sp,4
     bbe:	0000                	unimp
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	0000                	unimp
     bc2:	0000                	unimp
        printf("start test22\n");
     bc4:	5c00                	lw	s0,56(s0)
     bc6:	0010                	0x10
     bc8:	7400                	flw	fs0,40(s0)
     bca:	0010                	0x10
     bcc:	0100                	addi	s0,sp,128
     bce:	5800                	lw	s0,48(s0)
        ee_printf(
     bd0:	1074                	addi	a3,sp,44
     bd2:	0000                	unimp
     bd4:	1090                	addi	a2,sp,96
     bd6:	0000                	unimp
     bd8:	0001                	nop
     bda:	005f 0000 0000      	0x5f
        if (known_id == 3)
     be0:	0000                	unimp
     be2:	e400                	fsw	fs0,8(s0)
     be4:	000d                	c.nop	3
     be6:	ec00                	fsw	fs0,24(s0)
     be8:	000d                	c.nop	3
     bea:	0100                	addi	s0,sp,128
                      default_num_contexts * results[0].iterations
     bec:	5800                	lw	s0,48(s0)
     bee:	0dec                	addi	a1,sp,732
     bf0:	0000                	unimp
     bf2:	0df4                	addi	a3,sp,732
     bf4:	0000                	unimp
     bf6:	0001                	nop
     bf8:	f45e                	fsw	fs7,40(sp)
     bfa:	000d                	c.nop	3
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	fc00                	fsw	fs0,56(s0)
     bfe:	000d                	c.nop	3
     c00:	0100                	addi	s0,sp,128
     c02:	5800                	lw	s0,48(s0)
     c04:	0dfc                	addi	a5,sp,732
     c06:	0000                	unimp
                          / time_in_secs(total_time),
     c08:	0e00                	addi	s0,sp,784
     c0a:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	0001                	nop
     c0e:	005e                	c.slli	zero,0x17
                          / time_in_secs(total_time),
     c10:	0000                	unimp
     c12:	0000                	unimp
     c14:	0000                	unimp
     c16:	e400                	fsw	fs0,8(s0)
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	000d                	c.nop	3
     c1a:	ec00                	fsw	fs0,24(s0)
     c1c:	000d                	c.nop	3
     c1e:	0200                	addi	s0,sp,256
     c20:	3000                	fld	fs0,32(s0)
     c22:	ec9f 000d f400      	0xf400000dec9f
     c28:	000d                	c.nop	3
     c2a:	0100                	addi	s0,sp,128
     c2c:	5800                	lw	s0,48(s0)
     c2e:	0df4                	addi	a3,sp,732
     c30:	0000                	unimp
     c32:	0dfc                	addi	a5,sp,732
     c34:	0000                	unimp
     c36:	0001                	nop
     c38:	fc5d                	bnez	s0,bf6 <main+0xb7a>
     c3a:	000d                	c.nop	3
     c3c:	0000                	unimp
     c3e:	000e                	c.slli	zero,0x3
     c40:	0100                	addi	s0,sp,128
     c42:	5800                	lw	s0,48(s0)
	...
     c4c:	0dec                	addi	a1,sp,732
     c4e:	0000                	unimp
            ee_printf(" / %s", MEM_LOCATION);
     c50:	0df4                	addi	a3,sp,732
     c52:	0000                	unimp
     c54:	0001                	nop
     c56:	f85e                	fsw	fs7,48(sp)
     c58:	000d                	c.nop	3
     c5a:	0000                	unimp
     c5c:	000e                	c.slli	zero,0x3
     c5e:	0100                	addi	s0,sp,128
     c60:	5e00                	lw	s0,56(a2)
	...
            ee_printf("\n");
     c6a:	0e98                	addi	a4,sp,848
     c6c:	0000                	unimp
     c6e:	0ebc                	addi	a5,sp,856
     c70:	0000                	unimp
     c72:	0001                	nop
        ee_printf(
     c74:	005f 0000 0000      	0x5f
     c7a:	0000                	unimp
     c7c:	a400                	fsd	fs0,8(s0)
     c7e:	000e                	c.slli	zero,0x3
     c80:	c000                	sw	s0,0(s0)
     c82:	000e                	c.slli	zero,0x3
        total_errors++;
     c84:	0100                	addi	s0,sp,128
     c86:	5e00                	lw	s0,56(a2)
	...
    if (results[0].execs & ID_STATE)
     c90:	0ea0                	addi	s0,sp,856
     c92:	0000                	unimp
     c94:	0ec0                	addi	s0,sp,852
     c96:	0000                	unimp
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	0001                	nop
     c9a:	0062                	c.slli	zero,0x18
     c9c:	0000                	unimp
     c9e:	0000                	unimp
     ca0:	0000                	unimp
     ca2:	c000                	sw	s0,0(s0)
     ca4:	000e                	c.slli	zero,0x3
     ca6:	dc00                	sw	s0,56(s0)
     ca8:	000e                	c.slli	zero,0x3
     caa:	0600                	addi	s0,sp,768
     cac:	f200                	fsw	fs0,32(a2)
     cae:	1174                	addi	a3,sp,172
            known_id = 4;
     cb0:	0000                	unimp
     cb2:	0000                	unimp
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	0010                	0x10
     cb6:	1800                	addi	s0,sp,48
     cb8:	0010                	0x10
     cba:	0600                	addi	s0,sp,768
     cbc:	f200                	fsw	fs0,32(a2)
     cbe:	1174                	addi	a3,sp,172
	...
            known_id = 4;
     cc8:	0000                	unimp
     cca:	c000                	sw	s0,0(s0)
            ee_printf("6k validation run parameters for coremark.\n");
     ccc:	000e                	c.slli	zero,0x3
     cce:	c400                	sw	s0,8(s0)
     cd0:	000e                	c.slli	zero,0x3
     cd2:	0100                	addi	s0,sp,128
     cd4:	5800                	lw	s0,48(s0)
     cd6:	0ec4                	addi	s1,sp,852
     cd8:	0000                	unimp
     cda:	0edc                	addi	a5,sp,852
     cdc:	0000                	unimp
     cde:	0001                	nop
     ce0:	0059                	c.nop	22
     ce2:	0010                	0x10
     ce4:	1800                	addi	s0,sp,48
     ce6:	0010                	0x10
     ce8:	0100                	addi	s0,sp,128
     cea:	5800                	lw	s0,48(s0)
	...
     cf4:	1000                	addi	s0,sp,32
     cf6:	0000                	unimp
     cf8:	101c                	addi	a5,sp,32
     cfa:	0000                	unimp
            known_id = 1;
     cfc:	0001                	nop
     cfe:	0059                	c.nop	22
     d00:	0000                	unimp
     d02:	0000                	unimp
            ee_printf("6k performance run parameters for coremark.\n");
     d04:	0000                	unimp
     d06:	0c00                	addi	s0,sp,528
     d08:	2400000f          	0x2400000f
     d0c:	0200000f          	fence	r,unknown
     d10:	7800                	flw	fs0,48(s0)
	...
     d1a:	0c00                	addi	s0,sp,528
     d1c:	2800000f          	0x2800000f
     d20:	0100000f          	fence	w,unknown
     d24:	6200                	flw	fs0,0(a2)
	...
     d2e:	0f0c                	addi	a1,sp,912
            known_id = 0;
     d30:	0000                	unimp
     d32:	0f1c                	addi	a5,sp,912
     d34:	0000                	unimp
     d36:	0002                	c.slli64	zero
        for (i = 0; i < default_num_contexts; i++)
     d38:	0482                	c.slli64	s1
	...
    ee_s16     find_num = res->seed3;
     d42:	0f28                	addi	a0,sp,920
{
     d44:	0000                	unimp
     d46:	1000                	addi	s0,sp,32
     d48:	0000                	unimp
     d4a:	0002                	c.slli64	zero
     d4c:	9f30                	0x9f30
     d4e:	1024                	addi	s1,sp,40
     d50:	0000                	unimp
     d52:	105c                	addi	a5,sp,36
     d54:	0000                	unimp
     d56:	0002                	c.slli64	zero
     d58:	9f30                	0x9f30
	...
     d62:	0f28                	addi	a0,sp,920
     d64:	0000                	unimp
     d66:	1000                	addi	s0,sp,32
     d68:	0000                	unimp
     d6a:	0006                	c.slli	zero,0x1
     d6c:	00000003          	lb	zero,0(zero) # 0 <_start>
     d70:	9f00                	0x9f00
     d72:	1024                	addi	s1,sp,40
     d74:	0000                	unimp
     d76:	105c                	addi	a5,sp,36
     d78:	0000                	unimp
     d7a:	0006                	c.slli	zero,0x1
     d7c:	00000003          	lb	zero,0(zero) # 0 <_start>
     d80:	9f00                	0x9f00
	...
    for (i = 0; i < find_num; i++)
     d8a:	0f28                	addi	a0,sp,920
    info.idx = finder_idx;
     d8c:	0000                	unimp
     d8e:	0f38                	addi	a4,sp,920
    for (i = 0; i < find_num; i++)
     d90:	0000                	unimp
     d92:	0002                	c.slli64	zero
    ee_u16     found = 0, missed = 0;
     d94:	9f30                	0x9f30
     d96:	0f38                	addi	a4,sp,920
     d98:	0000                	unimp
     d9a:	0ff8                	addi	a4,sp,988
    ee_u16     retval = 0;
     d9c:	0000                	unimp
     d9e:	0001                	nop
    if (info->idx >= 0)
     da0:	2459                	jal	1026 <__stack_size+0x26>
     da2:	0010                	0x10
        info.data16 = (i & 0xff);
     da4:	4400                	lw	s0,8(s0)
     da6:	0010                	0x10
     da8:	0100                	addi	s0,sp,128
     daa:	5900                	lw	s0,48(a0)
    if (info->idx >= 0)
     dac:	1044                	addi	s1,sp,36
     dae:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     db0:	105c                	addi	a5,sp,36
     db2:	0000                	unimp
     db4:	0002                	c.slli64	zero
     db6:	9f30                	0x9f30
	...
     dc0:	0f28                	addi	a0,sp,920
     dc2:	0000                	unimp
     dc4:	0f64                	addi	s1,sp,924
     dc6:	0000                	unimp
     dc8:	0001                	nop
     dca:	6458                	flw	fa4,12(s0)
     dcc:	0000000f          	fence	unknown,unknown
     dd0:	0010                	0x10
     dd2:	0100                	addi	s0,sp,128
     dd4:	5e00                	lw	s0,56(a2)
     dd6:	1024                	addi	s1,sp,40
     dd8:	0000                	unimp
     dda:	1030                	addi	a2,sp,40
            list = list->next;
     ddc:	0000                	unimp
     dde:	0002                	c.slli64	zero
        while (list && (list->info->idx != info->idx))
     de0:	007e                	c.slli	zero,0x1f
     de2:	1030                	addi	a2,sp,40
     de4:	0000                	unimp
     de6:	1034                	addi	a3,sp,40
     de8:	0000                	unimp
     dea:	0001                	nop
    while (list)
     dec:	345e                	fld	fs0,496(sp)
     dee:	0010                	0x10
     df0:	3800                	fld	fs0,48(s0)
     df2:	0010                	0x10
        tmp        = list->next;
     df4:	0100                	addi	s0,sp,128
     df6:	5800                	lw	s0,48(s0)
        list->next = next;
     df8:	1038                	addi	a4,sp,40
     dfa:	0000                	unimp
    while (list)
     dfc:	1044                	addi	s1,sp,36
     dfe:	0000                	unimp
        if (this_find == NULL)
     e00:	0002                	c.slli64	zero
     e02:	9f30                	0x9f30
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	1044                	addi	s1,sp,36
     e06:	0000                	unimp
            found++;
     e08:	1058                	addi	a4,sp,36
     e0a:	0000                	unimp
     e0c:	0001                	nop
     e0e:	5859                	li	a6,-10
            if (this_find->info->data16 & 0x1) /* use found value */
     e10:	0010                	0x10
     e12:	5c00                	lw	s0,56(s0)
            found++;
     e14:	0010                	0x10
     e16:	0100                	addi	s0,sp,128
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	5800                	lw	s0,48(s0)
	...
                retval += (this_find->info->data16 >> 9) & 1;
     e22:	0f3c                	addi	a5,sp,920
     e24:	0000                	unimp
     e26:	0f44                	addi	s1,sp,916
     e28:	0000                	unimp
     e2a:	0001                	nop
     e2c:	4458                	lw	a4,12(s0)
     e2e:	4800000f          	0x4800000f
     e32:	0100000f          	fence	w,unknown
            if (this_find->next != NULL)
     e36:	5d00                	lw	s0,56(a0)
     e38:	0f4c                	addi	a1,sp,916
     e3a:	0000                	unimp
                this_find->next = finder->next;
     e3c:	0f64                	addi	s1,sp,924
     e3e:	0000                	unimp
     e40:	0001                	nop
     e42:	645d                	lui	s0,0x17
                finder->next    = list->next;
     e44:	c000000f          	0xc000000f
     e48:	0100000f          	fence	w,unknown
                list->next      = finder;
     e4c:	5800                	lw	s0,48(s0)
     e4e:	0fc0                	addi	s0,sp,980
        if (info.idx >= 0)
     e50:	0000                	unimp
     e52:	0fc8                	addi	a0,sp,980
     e54:	0000                	unimp
     e56:	0002                	c.slli64	zero
            info.idx++;
     e58:	0078                	addi	a4,sp,12
     e5a:	0fc8                	addi	a0,sp,980
     e5c:	0000                	unimp
     e5e:	0fe4                	addi	s1,sp,988
     e60:	0000                	unimp
     e62:	0001                	nop
     e64:	e458                	fsw	fa4,12(s0)
     e66:	f000000f          	0xf000000f
     e6a:	0200000f          	fence	r,unknown
     e6e:	7800                	flw	fs0,48(s0)
     e70:	f000                	fsw	fs0,32(s0)
     e72:	0000000f          	fence	unknown,unknown
    for (i = 0; i < find_num; i++)
     e76:	0010                	0x10
     e78:	0100                	addi	s0,sp,128
     e7a:	5800                	lw	s0,48(s0)
     e7c:	1024                	addi	s1,sp,40
     e7e:	0000                	unimp
     e80:	104c                	addi	a1,sp,36
     e82:	0000                	unimp
     e84:	0001                	nop
     e86:	0058                	addi	a4,sp,4
     e88:	0000                	unimp
     e8a:	0000                	unimp
     e8c:	0000                	unimp
     e8e:	c000                	sw	s0,0(s0)
    if (finder_idx > 0)
     e90:	c800000f          	0xc800000f
    remover = core_list_remove(list->next);
     e94:	0100000f          	fence	w,unknown
    if (info->idx >= 0)
     e98:	5800                	lw	s0,48(s0)
     e9a:	0fc8                	addi	a0,sp,980
    list_head *ret = item->next;
     e9c:	0000                	unimp
     e9e:	0fd8                	addi	a4,sp,980
    tmp        = item->info;
     ea0:	0000                	unimp
     ea2:	0001                	nop
    item->info = ret->info;
     ea4:	d85d                	beqz	s0,e5a <core_bench_list+0x11a>
     ea6:	dc00000f          	0xdc00000f
    item->next = item->next->next;
     eaa:	0100000f          	fence	w,unknown
    item->info = ret->info;
     eae:	5600                	lw	s0,40(a2)
    ret->info  = tmp;
     eb0:	0fe4                	addi	s1,sp,988
     eb2:	0000                	unimp
    item->next = item->next->next;
     eb4:	0ff0                	addi	a2,sp,988
     eb6:	0000                	unimp
    if (info->idx >= 0)
     eb8:	0001                	nop
     eba:	f058                	fsw	fa4,36(s0)
    ret->next  = NULL;
     ebc:	0000000f          	fence	unknown,unknown
    if (info->idx >= 0)
     ec0:	0010                	0x10
     ec2:	0100                	addi	s0,sp,128
        while (list && (list->info->idx != info->idx))
     ec4:	5d00                	lw	s0,56(a0)
     ec6:	1024                	addi	s1,sp,40
     ec8:	0000                	unimp
     eca:	1030                	addi	a2,sp,40
     ecc:	0000                	unimp
     ece:	0001                	nop
     ed0:	305e                	fld	ft0,496(sp)
     ed2:	0010                	0x10
            list = list->next;
     ed4:	3400                	fld	fs0,40(s0)
     ed6:	0010                	0x10
        while (list && (list->info->idx != info->idx))
     ed8:	0100                	addi	s0,sp,128
     eda:	5d00                	lw	s0,56(a0)
	...
        retval = crc16(list->info->data16, retval);
     ee4:	0f28                	addi	a0,sp,920
     ee6:	0000                	unimp
     ee8:	0f38                	addi	a4,sp,920
     eea:	0000                	unimp
     eec:	0002                	c.slli64	zero
     eee:	9f30                	0x9f30
     ef0:	0f38                	addi	a4,sp,920
     ef2:	0000                	unimp
     ef4:	0ffc                	addi	a5,sp,988
     ef6:	0000                	unimp
        finder = finder->next;
     ef8:	0001                	nop
     efa:	2456                	fld	fs0,336(sp)
        retval = crc16(list->info->data16, retval);
     efc:	0010                	0x10
     efe:	4400                	lw	s0,8(s0)
    while (finder)
     f00:	0010                	0x10
     f02:	0100                	addi	s0,sp,128
     f04:	5600                	lw	s0,40(a2)
     f06:	1044                	addi	s1,sp,36
     f08:	0000                	unimp
     f0a:	105c                	addi	a5,sp,36
    item_removed->info  = item_modified->info;
     f0c:	0000                	unimp
     f0e:	0002                	c.slli64	zero
    item_removed->next  = item_modified->next;
     f10:	9f30                	0x9f30
	...
    item_removed->info  = item_modified->info;
     f1a:	0f28                	addi	a0,sp,920
    item_modified->info = tmp;
     f1c:	0000                	unimp
     f1e:	0f38                	addi	a4,sp,920
    item_removed->next  = item_modified->next;
     f20:	0000                	unimp
     f22:	0002                	c.slli64	zero
    item_modified->next = item_removed;
     f24:	9f31                	0x9f31
     f26:	1044                	addi	s1,sp,36
        tail = NULL;
     f28:	0000                	unimp
     f2a:	105c                	addi	a5,sp,36
        list = NULL;
     f2c:	0000                	unimp
     f2e:	0001                	nop
        nmerges = 0; /* count number of merges we do in this pass */
     f30:	006c                	addi	a1,sp,12
     f32:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	0000                	unimp
     f36:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
     f38:	2800                	fld	fs0,16(s0)
     f3a:	3800000f          	0x3800000f
     f3e:	0200000f          	fence	r,unknown
            psize = 0;
     f42:	3000                	fld	fs0,32(s0)
                q = q->next;
     f44:	389f 000f 0000      	0xf389f
                psize++;
     f4a:	0010                	0x10
                if (!q)
     f4c:	0100                	addi	s0,sp,128
     f4e:	6d00                	flw	fs0,24(a0)
            for (i = 0; i < insize; i++)
     f50:	1024                	addi	s1,sp,40
     f52:	0000                	unimp
     f54:	1044                	addi	s1,sp,36
     f56:	0000                	unimp
                    list = e;
     f58:	0001                	nop
     f5a:	446d                	li	s0,27
     f5c:	0010                	0x10
     f5e:	5c00                	lw	s0,56(s0)
     f60:	0010                	0x10
     f62:	0200                	addi	s0,sp,256
            while (psize > 0 || (qsize > 0 && q))
     f64:	3000                	fld	fs0,32(s0)
     f66:	009f 0000 0000      	0x9f
                else if (qsize == 0 || !q)
     f6c:	0000                	unimp
     f6e:	3c00                	fld	fs0,56(s0)
                else if (cmp(p->info, q->info, res) <= 0)
     f70:	4400000f          	0x4400000f
     f74:	0200000f          	fence	r,unknown
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f78:	3000                	fld	fs0,32(s0)
     f7a:	449f 000f 5800      	0x5800000f449f
    return a->idx - b->idx;
     f80:	0100000f          	fence	w,unknown
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	5f00                	lw	s0,56(a4)
     f86:	0f64                	addi	s1,sp,924
     f88:	0000                	unimp
     f8a:	1000                	addi	s0,sp,32
     f8c:	0000                	unimp
     f8e:	0001                	nop
     f90:	245f 0010 5c00      	0x5c000010245f
     f96:	0010                	0x10
     f98:	0100                	addi	s0,sp,128
     f9a:	5f00                	lw	s0,56(a4)
	...
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	0f64                	addi	s1,sp,924
     fa6:	0000                	unimp
     fa8:	1000                	addi	s0,sp,32
     faa:	0000                	unimp
     fac:	0001                	nop
     fae:	245c                	fld	fa5,136(s0)
     fb0:	0010                	0x10
     fb2:	5c00                	lw	s0,56(s0)
     fb4:	0010                	0x10
     fb6:	0100                	addi	s0,sp,128
     fb8:	5c00                	lw	s0,56(s0)
	...
                    qsize--;
     fc2:	0f3c                	addi	a5,sp,920
                    q = q->next;
     fc4:	0000                	unimp
     fc6:	0f44                	addi	s1,sp,916
                    qsize--;
     fc8:	0000                	unimp
     fca:	0002                	c.slli64	zero
                if (tail)
     fcc:	9f30                	0x9f30
     fce:	0f44                	addi	s1,sp,916
                    tail->next = e;
     fd0:	0000                	unimp
     fd2:	0f4c                	addi	a1,sp,916
                    list = e;
     fd4:	0000                	unimp
     fd6:	0001                	nop
            while (psize > 0 || (qsize > 0 && q))
     fd8:	4c5f 000f 5000      	0x5000000f4c5f
     fde:	0300000f          	fence	rw,unknown
     fe2:	7f00                	flw	fs0,56(a4)
                    qsize--;
     fe4:	9f7f                	0x9f7f
     fe6:	0f50                	addi	a2,sp,916
     fe8:	0000                	unimp
     fea:	0f58                	addi	a4,sp,916
                    q = q->next;
     fec:	0000                	unimp
     fee:	0001                	nop
                if (tail)
     ff0:	005f 0000 0000      	0x5f
                    list = e;
     ff6:	0000                	unimp
     ff8:	7800                	flw	fs0,48(s0)
     ffa:	bc00000f          	0xbc00000f
     ffe:	0200000f          	fence	r,unknown
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1002:	3000                	fld	fs0,32(s0)
    1004:	009f 0000 0000      	0x9f
    100a:	0000                	unimp
    100c:	7800                	flw	fs0,48(s0)
    100e:	bc00000f          	0xbc00000f
            list = list->next;
    1012:	0100000f          	fence	w,unknown
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1016:	5a00                	lw	s0,48(a2)
	...
    while (finder)
    1020:	0f78                	addi	a4,sp,924
    1022:	0000                	unimp
                    psize--;
    1024:	0fa8                	addi	a0,sp,984
    1026:	0000                	unimp
    1028:	0001                	nop
    102a:	a860                	fsd	fs0,208(s0)
                    p = p->next;
    102c:	bc00000f          	0xbc00000f
    1030:	0200000f          	fence	r,unknown
        while (p)
    1034:	7e00                	flw	fs0,56(a2)
    1036:	0004                	0x4
        tail->next = NULL;
    1038:	0000                	unimp
    103a:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	0000                	unimp
    103e:	2800                	fld	fs0,16(s0)
        insize *= 2;
    1040:	0011                	c.nop	4
    1042:	2c00                	fld	fs0,24(s0)
        while (p)
    1044:	0011                	c.nop	4
    1046:	0200                	addi	s0,sp,256
    1048:	3000                	fld	fs0,32(s0)
    104a:	3c9f 0011 5000      	0x500000113c9f
        tail = NULL;
    1050:	0011                	c.nop	4
    1052:	0200                	addi	s0,sp,256
        list = NULL;
    1054:	3000                	fld	fs0,32(s0)
    1056:	509f 0011 9000      	0x90000011509f
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	0012                	c.slli	zero,0x4
    105e:	0100                	addi	s0,sp,128
    1060:	5800                	lw	s0,48(s0)
    1062:	1298                	addi	a4,sp,352
    1064:	0000                	unimp
    1066:	12cc                	addi	a1,sp,356
    1068:	0000                	unimp
    106a:	0001                	nop
    106c:	cc58                	sw	a4,28(s0)
    106e:	0012                	c.slli	zero,0x4
    1070:	d000                	sw	s0,32(s0)
    1072:	0012                	c.slli	zero,0x4
    1074:	0200                	addi	s0,sp,256
    1076:	3000                	fld	fs0,32(s0)
    1078:	d89f 0012 c000      	0xc0000012d89f
    107e:	01000013          	li	zero,16
    1082:	5800                	lw	s0,48(s0)
	...
    108c:	1128                	addi	a0,sp,168
    108e:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
    1090:	112c                	addi	a1,sp,168
    1092:	0000                	unimp
            missed++;
    1094:	0001                	nop
    1096:	3c58                	fld	fa4,184(s0)
    1098:	0011                	c.nop	4
    109a:	4800                	lw	s0,16(s0)
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	0011                	c.nop	4
    109e:	0100                	addi	s0,sp,128
            missed++;
    10a0:	5800                	lw	s0,48(s0)
    10a2:	1148                	addi	a0,sp,164
            retval += (list->next->info->data16 >> 8) & 1;
    10a4:	0000                	unimp
    10a6:	1298                	addi	a4,sp,352
    10a8:	0000                	unimp
    10aa:	0001                	nop
    10ac:	986a                	add	a6,a6,s10
    10ae:	0012                	c.slli	zero,0x4
    10b0:	a400                	fsd	fs0,8(s0)
    10b2:	0012                	c.slli	zero,0x4
    10b4:	0200                	addi	s0,sp,256
    10b6:	8a00                	0x8a00
    finder = list->next;
    10b8:	a400                	fsd	fs0,8(s0)
    10ba:	0012                	c.slli	zero,0x4
    while (finder)
    10bc:	a800                	fsd	fs0,16(s0)
    10be:	0012                	c.slli	zero,0x4
        retval = crc16(list->info->data16, retval);
    10c0:	0100                	addi	s0,sp,128
    10c2:	6a00                	flw	fs0,16(a2)
    10c4:	12a8                	addi	a0,sp,360
    10c6:	0000                	unimp
    10c8:	12b0                	addi	a2,sp,360
    10ca:	0000                	unimp
    10cc:	0001                	nop
    10ce:	0012b06b          	0x12b06b
    10d2:	cc00                	sw	s0,24(s0)
        finder = finder->next;
    10d4:	0012                	c.slli	zero,0x4
    10d6:	0200                	addi	s0,sp,256
        retval = crc16(list->info->data16, retval);
    10d8:	3000                	fld	fs0,32(s0)
    10da:	cc9f 0012 d000      	0xd0000012cc9f
}
    10e0:	0012                	c.slli	zero,0x4
    10e2:	0100                	addi	s0,sp,128
    10e4:	5800                	lw	s0,48(s0)
    10e6:	12d8                	addi	a4,sp,356
    10e8:	0000                	unimp
    10ea:	13c0                	addi	s0,sp,484
    10ec:	0000                	unimp
    10ee:	0001                	nop
    10f0:	006a                	c.slli	zero,0x1a
    10f2:	0000                	unimp
    10f4:	0000                	unimp
    10f6:	0000                	unimp
    10f8:	6400                	flw	fs0,8(s0)
    10fa:	0011                	c.nop	4
    10fc:	6800                	flw	fs0,16(s0)
    10fe:	0011                	c.nop	4
    1100:	0100                	addi	s0,sp,128
    1102:	6b00                	flw	fs0,16(a4)
    1104:	116c                	addi	a1,sp,172
    1106:	0000                	unimp
    1108:	1258                	addi	a4,sp,292
    110a:	0000                	unimp
    110c:	0001                	nop
    110e:	0012586b          	0x12586b
    1112:	6000                	flw	fs0,0(s0)
    1114:	0012                	c.slli	zero,0x4
    1116:	0200                	addi	s0,sp,256
    1118:	8b00                	0x8b00
    111a:	6000                	flw	fs0,0(s0)
    info.idx = finder_idx;
    111c:	0012                	c.slli	zero,0x4
    111e:	7c00                	flw	fs0,56(s0)
    1120:	0012                	c.slli	zero,0x4
    1122:	0100                	addi	s0,sp,128
    if (finder_idx > 0)
    1124:	6b00                	flw	fs0,16(a4)
    1126:	127c                	addi	a5,sp,300
        while (p)
    1128:	0000                	unimp
    112a:	1288                	addi	a0,sp,352
    112c:	0000                	unimp
    112e:	0002                	c.slli64	zero
    1130:	1288008b          	0x1288008b
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	0000                	unimp
    1136:	12d0                	addi	a2,sp,356
    1138:	0000                	unimp
    113a:	0001                	nop
        while (p)
    113c:	0012d86b          	0x12d86b
        tail = NULL;
    1140:	c000                	sw	s0,0(s0)
    1142:	01000013          	li	zero,16
        list = NULL;
    1146:	6b00                	flw	fs0,16(a4)
	...
            nmerges++; /* there exists a merge to be done */
    1150:	1258                	addi	a4,sp,292
    1152:	0000                	unimp
    1154:	1260                	addi	s0,sp,300
    1156:	0000                	unimp
            psize = 0;
    1158:	0001                	nop
    115a:	0012606b          	0x12606b
            nmerges++; /* there exists a merge to be done */
    115e:	7400                	flw	fs0,40(s0)
    1160:	0012                	c.slli	zero,0x4
    1162:	0100                	addi	s0,sp,128
                q = q->next;
    1164:	5f00                	lw	s0,56(a4)
    1166:	127c                	addi	a5,sp,300
                psize++;
    1168:	0000                	unimp
    116a:	1288                	addi	a0,sp,352
                if (!q)
    116c:	0000                	unimp
    116e:	0001                	nop
            for (i = 0; i < insize; i++)
    1170:	0012886b          	0x12886b
    1174:	9800                	0x9800
    1176:	0012                	c.slli	zero,0x4
                    list = e;
    1178:	0100                	addi	s0,sp,128
    117a:	5f00                	lw	s0,56(a4)
            while (psize > 0 || (qsize > 0 && q))
    117c:	1298                	addi	a4,sp,352
    117e:	0000                	unimp
                else if (qsize == 0 || !q)
    1180:	12a4                	addi	s1,sp,360
    1182:	0000                	unimp
    1184:	0001                	nop
    1186:	a46a                	fsd	fs10,8(sp)
                else if (cmp(p->info, q->info, res) <= 0)
    1188:	0012                	c.slli	zero,0x4
    118a:	a800                	fsd	fs0,16(s0)
    118c:	0012                	c.slli	zero,0x4
    118e:	0100                	addi	s0,sp,128
    ee_s16 data = *pdata;
    1190:	5f00                	lw	s0,56(a4)
	...
        return (data & 0x007f);
    119a:	1128                	addi	a0,sp,168
    if (optype) /* if cached, use cache */
    119c:	0000                	unimp
    119e:	112c                	addi	a1,sp,168
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	0000                	unimp
    11a2:	0002                	c.slli64	zero
        ee_s16 dtype
    11a4:	9f30                	0x9f30
    11a6:	113c                	addi	a5,sp,168
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	0000                	unimp
    11aa:	1150                	addi	a2,sp,164
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ac:	0000                	unimp
    11ae:	0002                	c.slli64	zero
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	9f30                	0x9f30
    11b2:	1150                	addi	a2,sp,164
        switch (flag)
    11b4:	0000                	unimp
    11b6:	1270                	addi	a2,sp,300
    11b8:	0000                	unimp
    11ba:	0001                	nop
    11bc:	7062                	flw	ft0,56(sp)
    11be:	0012                	c.slli	zero,0x4
    11c0:	7400                	flw	fs0,40(s0)
    11c2:	0012                	c.slli	zero,0x4
    11c4:	0100                	addi	s0,sp,128
    11c6:	5f00                	lw	s0,56(a4)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	1274                	addi	a3,sp,300
    11ca:	0000                	unimp
        res->crc = crcu16(retval, res->crc);
    11cc:	1294                	addi	a3,sp,352
    11ce:	0000                	unimp
    11d0:	0001                	nop
    11d2:	9862                	add	a6,a6,s8
    11d4:	0012                	c.slli	zero,0x4
    11d6:	cc00                	sw	s0,24(s0)
        retval &= 0x007f;
    11d8:	0012                	c.slli	zero,0x4
    11da:	0100                	addi	s0,sp,128
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11dc:	6200                	flw	fs0,0(a2)
    11de:	12cc                	addi	a1,sp,356
    11e0:	0000                	unimp
    11e2:	12d0                	addi	a2,sp,356
        res->crc = crcu16(retval, res->crc);
    11e4:	0000                	unimp
    11e6:	0002                	c.slli64	zero
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	9f30                	0x9f30
    11ea:	12d8                	addi	a4,sp,356
    11ec:	0000                	unimp
    11ee:	13c0                	addi	s0,sp,484
    ee_s16 data = *pdata;
    11f0:	0000                	unimp
    11f2:	0001                	nop
    if (optype) /* if cached, use cache */
    11f4:	0062                	c.slli	zero,0x18
    11f6:	0000                	unimp
        return (data & 0x007f);
    11f8:	0000                	unimp
    11fa:	0000                	unimp
    if (optype) /* if cached, use cache */
    11fc:	2800                	fld	fs0,16(s0)
    11fe:	0011                	c.nop	4
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	2c00                	fld	fs0,24(s0)
    1202:	0011                	c.nop	4
        ee_s16 dtype
    1204:	0200                	addi	s0,sp,256
    1206:	3100                	fld	fs0,32(a0)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	3c9f 0011 cc00      	0xcc0000113c9f
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120e:	0012                	c.slli	zero,0x4
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1210:	0300                	addi	s0,sp,384
    1212:	9100                	0x9100
        switch (flag)
    1214:	7fa8                	flw	fa0,120(a5)
    1216:	12cc                	addi	a1,sp,356
    1218:	0000                	unimp
    121a:	12d0                	addi	a2,sp,356
    121c:	0000                	unimp
    121e:	0001                	nop
    1220:	d85f 0012 c000      	0xc0000012d85f
    1226:	03000013          	li	zero,48
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    122a:	9100                	0x9100
        res->crc = crcu16(retval, res->crc);
    122c:	7fa8                	flw	fa0,120(a5)
	...
    1236:	1128                	addi	a0,sp,168
        retval &= 0x007f;
    1238:	0000                	unimp
    123a:	112c                	addi	a1,sp,168
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123c:	0000                	unimp
    123e:	0002                	c.slli64	zero
    1240:	9f30                	0x9f30
    1242:	113c                	addi	a5,sp,168
        res->crc = crcu16(retval, res->crc);
    1244:	0000                	unimp
    1246:	1150                	addi	a2,sp,164
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	0000                	unimp
    124a:	0002                	c.slli64	zero
    124c:	9f30                	0x9f30
    124e:	1150                	addi	a2,sp,164
    return val1 - val2;
    1250:	0000                	unimp
    1252:	12cc                	addi	a1,sp,356
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	0000                	unimp
    1256:	b0910003          	lb	zero,-1271(sp)
                    qsize--;
    125a:	cc7f                	0xcc7f
                    q = q->next;
    125c:	0012                	c.slli	zero,0x4
    125e:	d000                	sw	s0,32(s0)
                    qsize--;
    1260:	0012                	c.slli	zero,0x4
    1262:	0200                	addi	s0,sp,256
                if (tail)
    1264:	3000                	fld	fs0,32(s0)
    1266:	d89f 0012 c000      	0xc0000012d89f
                    list = e;
    126c:	03000013          	li	zero,48
            while (psize > 0 || (qsize > 0 && q))
    1270:	9100                	0x9100
    1272:	7fb0                	flw	fa2,120(a5)
	...
                    qsize--;
    127c:	1164                	addi	s1,sp,172
    127e:	0000                	unimp
    1280:	12d0                	addi	a2,sp,356
    1282:	0000                	unimp
                    q = q->next;
    1284:	0001                	nop
    1286:	0012d867          	0x12d867
                if (tail)
    128a:	c000                	sw	s0,0(s0)
                    list = e;
    128c:	01000013          	li	zero,16
    1290:	6700                	flw	fs0,8(a4)
	...
                    psize--;
    129a:	117c                	addi	a5,sp,172
    129c:	0000                	unimp
    129e:	12d0                	addi	a2,sp,356
                    p = p->next;
    12a0:	0000                	unimp
    12a2:	0001                	nop
    12a4:	d869                	beqz	s0,1276 <__stack_size+0x276>
    12a6:	0012                	c.slli	zero,0x4
    12a8:	c000                	sw	s0,0(s0)
    12aa:	01000013          	li	zero,16
        while (p)
    12ae:	6900                	flw	fs0,16(a0)
	...
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b8:	1164                	addi	s1,sp,172
    12ba:	0000                	unimp
    12bc:	116c                	addi	a1,sp,172
    12be:	0000                	unimp
        insize *= 2;
    12c0:	0001                	nop
    12c2:	00116c67          	0x116c67
    12c6:	7000                	flw	fs0,32(s0)
    12c8:	0011                	c.nop	4
    12ca:	0300                	addi	s0,sp,384
        while (p)
    12cc:	8700                	0x8700
    12ce:	9f7f                	0x9f7f
        tail->next = NULL;
    12d0:	1170                	addi	a2,sp,172
    12d2:	0000                	unimp
    12d4:	1178                	addi	a4,sp,172
    12d6:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	0001                	nop
    12da:	00000067          	jr	zero # 0 <_start>
    12de:	0000                	unimp
    12e0:	0000                	unimp
    12e2:	9000                	0x9000
    12e4:	0011                	c.nop	4
    12e6:	5000                	lw	s0,32(s0)
                if (res->crcmatrix == 0)
    12e8:	0012                	c.slli	zero,0x4
    12ea:	0100                	addi	s0,sp,128
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	6800                	flw	fs0,16(s0)
    12ee:	12d8                	addi	a4,sp,356
    12f0:	0000                	unimp
    12f2:	13c0                	addi	s0,sp,484
                if (res->crcmatrix == 0)
    12f4:	0000                	unimp
    12f6:	0001                	nop
                    res->crcmatrix = retval;
    12f8:	0068                	addi	a0,sp,12
    12fa:	0000                	unimp
    12fc:	0000                	unimp
    12fe:	0000                	unimp
    1300:	9000                	0x9000
    1302:	0011                	c.nop	4
                retval = core_bench_state(res->size,
    1304:	5000                	lw	s0,32(s0)
    1306:	0012                	c.slli	zero,0x4
    1308:	0100                	addi	s0,sp,128
    130a:	6300                	flw	fs0,0(a4)
    130c:	12d8                	addi	a4,sp,356
    130e:	0000                	unimp
    1310:	13c0                	addi	s0,sp,484
    1312:	0000                	unimp
    1314:	0001                	nop
    1316:	00000063          	beqz	zero,1316 <__stack_size+0x316>
    131a:	0000                	unimp
    131c:	0000                	unimp
    131e:	9000                	0x9000
    1320:	0011                	c.nop	4
    1322:	f400                	fsw	fs0,40(s0)
    1324:	0011                	c.nop	4
    1326:	0100                	addi	s0,sp,128
    1328:	6500                	flw	fs0,8(a0)
    132a:	134c                	addi	a1,sp,420
    132c:	0000                	unimp
    132e:	13c0                	addi	s0,sp,484
                if (res->crcstate == 0)
    1330:	0000                	unimp
    1332:	0001                	nop
                retval = core_bench_state(res->size,
    1334:	0065                	c.nop	25
    1336:	0000                	unimp
    1338:	0000                	unimp
    133a:	0000                	unimp
                if (res->crcstate == 0)
    133c:	f000                	fsw	fs0,32(s0)
    133e:	0011                	c.nop	4
                    res->crcstate = retval;
    1340:	5000                	lw	s0,32(s0)
    1342:	0012                	c.slli	zero,0x4
    1344:	0100                	addi	s0,sp,128
    1346:	6600                	flw	fs0,8(a2)
    1348:	12d8                	addi	a4,sp,356
    134a:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134c:	134c                	addi	a1,sp,420
    134e:	0000                	unimp
    1350:	0001                	nop
    1352:	0066                	c.slli	zero,0x19
    1354:	0000                	unimp
    1356:	0000                	unimp
    1358:	0000                	unimp
    135a:	f000                	fsw	fs0,32(s0)
                if (res->crcmatrix == 0)
    135c:	0011                	c.nop	4
    135e:	5000                	lw	s0,32(s0)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	0012                	c.slli	zero,0x4
    1362:	0100                	addi	s0,sp,128
    1364:	6800                	flw	fs0,16(s0)
    1366:	12d8                	addi	a4,sp,356
                if (res->crcmatrix == 0)
    1368:	0000                	unimp
    136a:	134c                	addi	a1,sp,420
                    res->crcmatrix = retval;
    136c:	0000                	unimp
    136e:	0001                	nop
    1370:	0068                	addi	a0,sp,12
    1372:	0000                	unimp
    1374:	0000                	unimp
    1376:	0000                	unimp
                retval = core_bench_state(res->size,
    1378:	f000                	fsw	fs0,32(s0)
    137a:	0011                	c.nop	4
    137c:	5000                	lw	s0,32(s0)
    137e:	0012                	c.slli	zero,0x4
    1380:	0100                	addi	s0,sp,128
    1382:	6300                	flw	fs0,0(a4)
    1384:	12d8                	addi	a4,sp,356
    1386:	0000                	unimp
    1388:	134c                	addi	a1,sp,420
    138a:	0000                	unimp
    138c:	0001                	nop
    138e:	00000063          	beqz	zero,138e <__stack_size+0x38e>
    1392:	0000                	unimp
    1394:	0000                	unimp
    1396:	f400                	fsw	fs0,40(s0)
    1398:	0011                	c.nop	4
    139a:	5000                	lw	s0,32(s0)
    139c:	0012                	c.slli	zero,0x4
    139e:	0100                	addi	s0,sp,128
    13a0:	6500                	flw	fs0,8(a0)
    13a2:	12d8                	addi	a4,sp,356
                if (res->crcstate == 0)
    13a4:	0000                	unimp
    13a6:	134c                	addi	a1,sp,420
                retval = core_bench_state(res->size,
    13a8:	0000                	unimp
    13aa:	0001                	nop
    13ac:	0065                	c.nop	25
    13ae:	0000                	unimp
                if (res->crcstate == 0)
    13b0:	0000                	unimp
    13b2:	0000                	unimp
                    res->crcstate = retval;
    13b4:	2c00                	fld	fs0,24(s0)
    13b6:	0012                	c.slli	zero,0x4
    13b8:	3c00                	fld	fs0,56(s0)
    13ba:	0012                	c.slli	zero,0x4
    13bc:	0100                	addi	s0,sp,128
    13be:	5900                	lw	s0,48(a0)
    13c0:	1248                	addi	a0,sp,292
    13c2:	0000                	unimp
    13c4:	1250                	addi	a2,sp,292
    13c6:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	0001                	nop
    13ca:	f459                	bnez	s0,1358 <__stack_size+0x358>
    13cc:	0012                	c.slli	zero,0x4
    13ce:	0400                	addi	s0,sp,512
{
    13d0:	01000013          	li	zero,16
    13d4:	5900                	lw	s0,48(a0)
    13d6:	133c                	addi	a5,sp,424
    13d8:	0000                	unimp
    13da:	134c                	addi	a1,sp,420
    printf("start test41\n");
    13dc:	0000                	unimp
    13de:	0001                	nop
    13e0:	0059                	c.nop	22
    13e2:	0000                	unimp
{
    13e4:	0000                	unimp
    13e6:	0000                	unimp
    13e8:	f400                	fsw	fs0,40(s0)
    13ea:	0011                	c.nop	4
    13ec:	5000                	lw	s0,32(s0)
    13ee:	0012                	c.slli	zero,0x4
    13f0:	0700                	addi	s0,sp,896
    13f2:	8500                	0x8500
    13f4:	3700                	fld	fs0,40(a4)
    13f6:	3126                	fld	ft2,104(sp)
    printf("start test41\n");
    13f8:	9f1a                	add	t5,t5,t1
    13fa:	12d8                	addi	a4,sp,356
    13fc:	0000                	unimp
    13fe:	134c                	addi	a1,sp,420
    ee_u32 size     = (blksize / per_item)
    1400:	0000                	unimp
    1402:	00850007          	0x850007
    1406:	1a312637          	lui	a2,0x1a312
    140a:	009f 0000 0000      	0x9f
    1410:	0000                	unimp
    1412:	1000                	addi	s0,sp,32
    list_head *memblock_end  = memblock + size;
    1414:	0012                	c.slli	zero,0x4
    1416:	2c00                	fld	fs0,24(s0)
    1418:	0012                	c.slli	zero,0x4
    141a:	0100                	addi	s0,sp,128
    list->info->data16 = (ee_s16)0x8080;
    141c:	5e00                	lw	s0,56(a2)
    141e:	122c                	addi	a1,sp,296
    list->next         = NULL;
    1420:	0000                	unimp
    1422:	1250                	addi	a2,sp,292
    list->info         = datablock;
    1424:	0000                	unimp
    1426:	0005                	c.nop	1
    list->info->data16 = (ee_s16)0x8080;
    1428:	0085                	addi	ra,ra,1
    142a:	d89f1a37          	lui	s4,0xd89f1
    list_data *datablock_end = datablock + size;
    142e:	0012                	c.slli	zero,0x4
    list->info->data16 = (ee_s16)0x8080;
    1430:	e700                	fsw	fs0,8(a4)
    1432:	0012                	c.slli	zero,0x4
    list->info->idx    = 0x0000;
    1434:	0100                	addi	s0,sp,128
    1436:	5e00                	lw	s0,56(a2)
    if ((*memblock + 1) >= memblock_end)
    1438:	000012e7          	0x12e7
    list_data *datablock_end = datablock + size;
    143c:	1304                	addi	s1,sp,416
    143e:	0000                	unimp
    memblock++;
    1440:	0005                	c.nop	1
    1442:	0085                	addi	ra,ra,1
    datablock++;
    1444:	049f1a37          	lui	s4,0x49f1
    if ((*memblock + 1) >= memblock_end)
    1448:	0c000013          	li	zero,192
    if ((*datablock + 1) >= datablock_end)
    144c:	01000013          	li	zero,16
    1450:	5e00                	lw	s0,56(a2)
    1452:	130c                	addi	a1,sp,416
    newitem->info = *datablock;
    1454:	0000                	unimp
    1456:	134c                	addi	a1,sp,420
    newitem->next      = insert_point->next;
    1458:	0000                	unimp
    145a:	0005                	c.nop	1
    insert_point->next = newitem;
    145c:	0085                	addi	ra,ra,1
    145e:	009f1a37          	lui	s4,0x9f1
    to->idx    = from->idx;
    1462:	0000                	unimp
    to->data16 = from->data16;
    1464:	0000                	unimp
    1466:	0000                	unimp
    1468:	1000                	addi	s0,sp,32
    146a:	0012                	c.slli	zero,0x4
    to->idx    = from->idx;
    146c:	2c00                	fld	fs0,24(s0)
    146e:	0012                	c.slli	zero,0x4
    for (i = 0; i < size; i++)
    1470:	0100                	addi	s0,sp,128
    1472:	5b00                	lw	s0,48(a4)
    1474:	12d8                	addi	a4,sp,356
    1476:	0000                	unimp
    to->idx    = from->idx;
    1478:	000012e7          	0x12e7
    147c:	0001                	nop
    147e:	0012e75b          	0x12e75b
    for (i = 0; i < size; i++)
    1482:	0400                	addi	s0,sp,512
    to->idx    = from->idx;
    1484:	10000013          	li	zero,256
    if ((*memblock + 1) >= memblock_end)
    1488:	8500                	0x8500
    148a:	3300                	fld	fs0,32(a4)
    148c:	3f26                	fld	ft10,104(sp)
    148e:	851a                	mv	a0,t1
    if ((*datablock + 1) >= datablock_end)
    1490:	3300                	fld	fs0,32(a4)
    1492:	3f26                	fld	ft10,104(sp)
    1494:	341a                	fld	fs0,416(sp)
    1496:	2124                	fld	fs1,64(a0)
    1498:	049f 0013 2000      	0x20000013049f
    149e:	12000013          	li	zero,288
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a2:	7b00                	flw	fs0,48(a4)
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a4:	1200                	addi	s0,sp,288
    14a6:	2440                	fld	fs0,136(s0)
    14a8:	2208                	fld	fa0,0(a2)
    14aa:	1416                	slli	s0,s0,0x25
    14ac:	2440                	fld	fs0,136(s0)
    14ae:	0001282b          	0x1282b
    newitem->next      = insert_point->next;
    14b2:	1316                	slli	t1,t1,0x25
        ee_u16 dat
    14b4:	209f 0013 4400      	0x44000013209f
    insert_point->next = newitem;
    14ba:	1f000013          	li	zero,496
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14be:	8500                	0x8500
    newitem->info = *datablock;
    14c0:	3300                	fld	fs0,32(a4)
    14c2:	3f26                	fld	ft10,104(sp)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c4:	851a                	mv	a0,t1
    14c6:	3300                	fld	fs0,32(a4)
    to->data16 = from->data16;
    14c8:	3f26                	fld	ft10,104(sp)
    14ca:	341a                	fld	fs0,416(sp)
    to->idx    = from->idx;
    14cc:	2124                	fld	fs1,64(a0)
    14ce:	4012                	0x4012
    14d0:	0824                	addi	s1,sp,24
    14d2:	1622                	slli	a2,a2,0x28
    14d4:	4014                	lw	a3,0(s0)
    14d6:	2b24                	fld	fs1,80(a4)
    14d8:	0128                	addi	a0,sp,136
    14da:	1600                	addi	s0,sp,800
    for (i = 0; i < size; i++)
    14dc:	00009f13          	slli	t5,ra,0x0
    14e0:	0000                	unimp
    14e2:	0000                	unimp
    while (finder->next != NULL)
    14e4:	0000                	unimp
    14e6:	1190                	addi	a2,sp,224
    14e8:	0000                	unimp
    14ea:	11f0                	addi	a2,sp,236
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	0000                	unimp
    14ee:	0001                	nop
    14f0:	4c68                	lw	a0,92(s0)
    14f2:	c0000013          	li	zero,-1024
    14f6:	01000013          	li	zero,16
                                & (((i & 0x07) << 8)
    14fa:	6800                	flw	fs0,16(s0)
	...
        if (i < size / 5) /* first 20% of the list in order */
    1504:	1190                	addi	a2,sp,224
    1506:	0000                	unimp
    1508:	11f0                	addi	a2,sp,236
    150a:	0000                	unimp
        finder = finder->next;
    150c:	0001                	nop
    150e:	4c65                	li	s8,25
            finder->info->idx = i++;
    1510:	c0000013          	li	zero,-1024
        finder = finder->next;
    1514:	01000013          	li	zero,16
    while (finder->next != NULL)
    1518:	6500                	flw	fs0,8(a0)
	...
    insize = 1;
    1522:	1194                	addi	a3,sp,224
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	0000                	unimp
    1526:	11f0                	addi	a2,sp,236
    insize = 1;
    1528:	0000                	unimp
    152a:	0001                	nop
        tail = NULL;
    152c:	4c59                	li	s8,22
    152e:	c0000013          	li	zero,-1024
        list = NULL;
    1532:	01000013          	li	zero,16
        nmerges = 0; /* count number of merges we do in this pass */
    1536:	5900                	lw	s0,48(a0)
	...
            psize = 0;
    1540:	11cc                	addi	a1,sp,228
    1542:	0000                	unimp
                q = q->next;
    1544:	11dc                	addi	a5,sp,228
    1546:	0000                	unimp
                psize++;
    1548:	0001                	nop
    154a:	e866                	fsw	fs9,16(sp)
                if (!q)
    154c:	0011                	c.nop	4
    154e:	f000                	fsw	fs0,32(s0)
            for (i = 0; i < insize; i++)
    1550:	0011                	c.nop	4
    1552:	0100                	addi	s0,sp,128
                    list = e;
    1554:	6600                	flw	fs0,8(a2)
    1556:	1368                	addi	a0,sp,428
    1558:	0000                	unimp
    155a:	1378                	addi	a4,sp,428
    155c:	0000                	unimp
    155e:	0001                	nop
            while (psize > 0 || (qsize > 0 && q))
    1560:	b066                	fsd	fs9,32(sp)
    1562:	c0000013          	li	zero,-1024
                else if (qsize == 0 || !q)
    1566:	01000013          	li	zero,16
    156a:	6600                	flw	fs0,8(a2)
	...
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	1194                	addi	a3,sp,224
    1576:	0000                	unimp
    return a->idx - b->idx;
    1578:	11f0                	addi	a2,sp,236
    157a:	0000                	unimp
    157c:	00790007          	0x790007
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1580:	1a312637          	lui	a2,0x1a312
    1584:	4c9f 0013 c000      	0xc00000134c9f
    158a:	07000013          	li	zero,112
    158e:	7900                	flw	fs0,48(a0)
    1590:	3700                	fld	fs0,40(a4)
    1592:	3126                	fld	ft2,104(sp)
    1594:	9f1a                	add	t5,t5,t1
	...
    return a->idx - b->idx;
    159e:	11b0                	addi	a2,sp,232
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	0000                	unimp
    15a2:	11cc                	addi	a1,sp,228
    15a4:	0000                	unimp
    15a6:	0001                	nop
    15a8:	cc5e                	sw	s7,24(sp)
    15aa:	0011                	c.nop	4
    15ac:	f000                	fsw	fs0,32(s0)
    15ae:	0011                	c.nop	4
    15b0:	0500                	addi	s0,sp,640
    15b2:	7900                	flw	fs0,48(a0)
    15b4:	3700                	fld	fs0,40(a4)
    15b6:	9f1a                	add	t5,t5,t1
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	134c                	addi	a1,sp,420
    15ba:	0000                	unimp
                    qsize--;
    15bc:	0000135b          	0x135b
                    q = q->next;
    15c0:	0001                	nop
    15c2:	5b5e                	lw	s6,244(sp)
                    qsize--;
    15c4:	78000013          	li	zero,1920
                if (tail)
    15c8:	05000013          	li	zero,80
                    tail->next = e;
    15cc:	7900                	flw	fs0,48(a0)
    15ce:	3700                	fld	fs0,40(a4)
                    list = e;
    15d0:	9f1a                	add	t5,t5,t1
    15d2:	1378                	addi	a4,sp,428
            while (psize > 0 || (qsize > 0 && q))
    15d4:	0000                	unimp
    15d6:	1380                	addi	s0,sp,480
    15d8:	0000                	unimp
    15da:	0001                	nop
    15dc:	805e                	c.mv	zero,s7
    15de:	c0000013          	li	zero,-1024
                    qsize--;
    15e2:	05000013          	li	zero,80
    15e6:	7900                	flw	fs0,48(a0)
                    q = q->next;
    15e8:	3700                	fld	fs0,40(a4)
    15ea:	9f1a                	add	t5,t5,t1
	...
                    list = e;
    15f4:	11b0                	addi	a2,sp,232
    15f6:	0000                	unimp
    15f8:	11cc                	addi	a1,sp,228
    15fa:	0000                	unimp
                    psize--;
    15fc:	0001                	nop
    15fe:	00134c5b          	0x134c5b
    1602:	5b00                	lw	s0,48(a4)
                    p = p->next;
    1604:	01000013          	li	zero,16
    1608:	5b00                	lw	s0,48(a4)
    160a:	0000135b          	0x135b
        while (p)
    160e:	1378                	addi	a4,sp,428
        tail->next = NULL;
    1610:	0000                	unimp
    1612:	0010                	0x10
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1614:	0079                	c.nop	30
    1616:	1a3f2633          	0x1a3f2633
        insize *= 2;
    161a:	0079                	c.nop	30
        while (p)
    161c:	1a3f2633          	0x1a3f2633
        tail->next = NULL;
    1620:	2434                	fld	fa3,72(s0)
    1622:	9f21                	0x9f21
    1624:	1378                	addi	a4,sp,428
    1626:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1628:	1394                	addi	a3,sp,480
    162a:	0000                	unimp
    162c:	0012                	c.slli	zero,0x4
    162e:	4012007b          	0x4012007b
                                & (((i & 0x07) << 8)
    1632:	0824                	addi	s1,sp,24
        finder = finder->next;
    1634:	1622                	slli	a2,a2,0x28
    1636:	4014                	lw	a3,0(s0)
                                & (((i & 0x07) << 8)
    1638:	2b24                	fld	fs1,80(a4)
    163a:	0128                	addi	a0,sp,136
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163c:	1600                	addi	s0,sp,800
    163e:	13949f13          	0x13949f13
                                & (((i & 0x07) << 8)
    1642:	0000                	unimp
                                   | pat); /* make sure the mixed items end up
    1644:	13b8                	addi	a4,sp,488
    1646:	0000                	unimp
    while (finder->next != NULL)
    1648:	001f 0079 2633      	0x26330079001f
                                & (((i & 0x07) << 8)
    164e:	00791a3f 1a3f2633 	0x1a3f263300791a3f
        finder = finder->next;
    1656:	2434                	fld	fa3,72(s0)
    while (finder->next != NULL)
    1658:	1221                	addi	tp,tp,-24
    165a:	2440                	fld	fs0,136(s0)
    165c:	2208                	fld	fa0,0(a2)
    165e:	1416                	slli	s0,s0,0x25
}
    1660:	2440                	fld	fs0,136(s0)
    1662:	0001282b          	0x1282b
    1666:	1316                	slli	t1,t1,0x25
    1668:	009f 0000 0000      	0x9f
	...
    1676:	0000                	unimp
    1678:	0100                	addi	s0,sp,128
    167a:	5a00                	lw	s0,48(a2)
	...
    if ((*datablock + 1) >= datablock_end)
    1684:	0001                	nop
    1686:	00000063          	beqz	zero,1686 <core_list_init+0x2b6>
    168a:	0000                	unimp
{
    168c:	0000                	unimp
    168e:	0400                	addi	s0,sp,512
    1690:	f300                	fsw	fs0,32(a4)
    1692:	5a01                	li	s4,-32
    ee_u32        iterations = res->iterations;
    1694:	009f 0000 0000      	0x9f
{
    169a:	0000                	unimp
    169c:	0100                	addi	s0,sp,128
    169e:	5a00                	lw	s0,48(a2)
	...
    res->crc                 = 0;
    16a8:	0001                	nop
    16aa:	00000063          	beqz	zero,16aa <iterate+0x1e>
{
    16ae:	0000                	unimp
    for (i = 0; i < iterations; i++)
    16b0:	0000                	unimp
    16b2:	0100                	addi	s0,sp,128
    16b4:	5a00                	lw	s0,48(a2)
	...
        crc      = core_bench_list(res, 1);
    16be:	0001                	nop
    16c0:	00000063          	beqz	zero,16c0 <iterate+0x34>
	...
        res->crc = crcu16(crc, res->crc);
    16d0:	0100                	addi	s0,sp,128
    16d2:	5b00                	lw	s0,48(a4)
	...
        crc      = core_bench_list(res, -1);
    16dc:	0001                	nop
    16de:	0059                	c.nop	22
    16e0:	0000                	unimp
    16e2:	0000                	unimp
    16e4:	0000                	unimp
    16e6:	0400                	addi	s0,sp,512
        res->crc = crcu16(crc, res->crc);
    16e8:	f300                	fsw	fs0,32(a4)
    16ea:	5b01                	li	s6,-32
    16ec:	009f 0000 0000      	0x9f
    16f2:	0000                	unimp
    16f4:	0100                	addi	s0,sp,128
    16f6:	5900                	lw	s0,48(a0)
	...
}
    1708:	0001                	nop
    170a:	0058                	addi	a4,sp,4
    170c:	0000                	unimp
    170e:	0000                	unimp
    1710:	0000                	unimp
    1712:	0100                	addi	s0,sp,128
    1714:	5800                	lw	s0,48(s0)
	...
    for (i = 0; i < iterations; i++)
    1726:	0001                	nop
    1728:	0062                	c.slli	zero,0x18
    172a:	0000                	unimp
    172c:	0000                	unimp
    172e:	0000                	unimp
    1730:	0100                	addi	s0,sp,128
    1732:	6200                	flw	fs0,0(a2)
	...
{
    173c:	0001                	nop
    173e:	0062                	c.slli	zero,0x18
    MATDAT clipval = matrix_big(val);
    1740:	0000                	unimp
    1742:	0000                	unimp
{
    1744:	0000                	unimp
    1746:	0100                	addi	s0,sp,128
    1748:	6200                	flw	fs0,0(a2)
	...
    175a:	00780007          	0x780007
    175e:	1a312637          	lui	a2,0x1a312
    1762:	009f 0000 0000      	0x9f
    1768:	0000                	unimp
    176a:	0700                	addi	s0,sp,896
    176c:	7800                	flw	fs0,48(s0)
    176e:	3700                	fld	fs0,40(a4)
    1770:	3126                	fld	ft2,104(sp)
    1772:	9f1a                	add	t5,t5,t1
	...
    for (i = 0; i < N; i++)
    1784:	0001                	nop
    1786:	005e                	c.slli	zero,0x17
    1788:	0000                	unimp
    178a:	0000                	unimp
    178c:	0000                	unimp
    178e:	0500                	addi	s0,sp,640
    1790:	7800                	flw	fs0,48(s0)
    1792:	3700                	fld	fs0,40(a4)
    1794:	9f1a                	add	t5,t5,t1
	...
    179e:	0001                	nop
    17a0:	005e                	c.slli	zero,0x17
    17a2:	0000                	unimp
    17a4:	0000                	unimp
    17a6:	0000                	unimp
    17a8:	0500                	addi	s0,sp,640
    17aa:	7800                	flw	fs0,48(s0)
    17ac:	3700                	fld	fs0,40(a4)
    17ae:	9f1a                	add	t5,t5,t1
	...
    17b8:	0001                	nop
    17ba:	005e                	c.slli	zero,0x17
{
    17bc:	0000                	unimp
    17be:	0000                	unimp
            A[i * N + j] += val;
    17c0:	0000                	unimp
    17c2:	0500                	addi	s0,sp,640
    17c4:	7800                	flw	fs0,48(s0)
    17c6:	3700                	fld	fs0,40(a4)
    17c8:	9f1a                	add	t5,t5,t1
	...
    for (i = 0; i < N; i++)
    17da:	0001                	nop
    17dc:	0000005b          	0x5b
    17e0:	0000                	unimp
    17e2:	0000                	unimp
    17e4:	1200                	addi	s0,sp,288
    17e6:	7b00                	flw	fs0,48(a4)
    17e8:	1200                	addi	s0,sp,288
    17ea:	2440                	fld	fs0,136(s0)
    17ec:	2208                	fld	fa0,0(a2)
    17ee:	1416                	slli	s0,s0,0x25
    17f0:	2440                	fld	fs0,136(s0)
    17f2:	0001282b          	0x1282b
    17f6:	1316                	slli	t1,t1,0x25
    17f8:	009f 0000 0000      	0x9f
    17fe:	0000                	unimp
    1800:	1f00                	addi	s0,sp,944
    1802:	7800                	flw	fs0,48(s0)
    for (i = 0; i < N; i++)
    1804:	3300                	fld	fs0,32(a4)
    1806:	3f26                	fld	ft10,104(sp)
    1808:	781a                	flw	fa6,164(sp)
    180a:	3300                	fld	fs0,32(a4)
    180c:	3f26                	fld	ft10,104(sp)
    180e:	341a                	fld	fs0,416(sp)
    for (i = 0; i < N; i++)
    1810:	2124                	fld	fs1,64(a0)
    1812:	4012                	0x4012
    1814:	0824                	addi	s1,sp,24
    1816:	1622                	slli	a2,a2,0x28
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    1818:	4014                	lw	a3,0(s0)
    181a:	2b24                	fld	fs1,80(a4)
    181c:	0128                	addi	a0,sp,136
    181e:	1600                	addi	s0,sp,800
    1820:	00009f13          	slli	t5,ra,0x0
    1824:	0000                	unimp
    1826:	0000                	unimp
    1828:	0000                	unimp
    182a:	0001                	nop
    182c:	0000005b          	0x5b
    1830:	0000                	unimp
    1832:	0000                	unimp
        for (j = 0; j < N; j++)
    1834:	1000                	addi	s0,sp,32
    1836:	7800                	flw	fs0,48(s0)
    1838:	3300                	fld	fs0,32(a4)
    183a:	3f26                	fld	ft10,104(sp)
    for (i = 0; i < N; i++)
    183c:	781a                	flw	fa6,164(sp)
    183e:	3300                	fld	fs0,32(a4)
    1840:	3f26                	fld	ft10,104(sp)
    1842:	341a                	fld	fs0,416(sp)
    1844:	2124                	fld	fs1,64(a0)
    1846:	009f 0000 0000      	0x9f
	...
    1854:	0000                	unimp
    1856:	0100                	addi	s0,sp,128
    1858:	5a00                	lw	s0,48(a2)
	...
    1862:	0001                	nop
    ee_s16 ret = 0;
    1864:	00000063          	beqz	zero,1864 <matrix_test+0x130>
    MATRES tmp = 0, prev = 0, cur = 0;
    1868:	0000                	unimp
    186a:	0000                	unimp
    186c:	0400                	addi	s0,sp,512
    186e:	f300                	fsw	fs0,32(a4)
    1870:	5a01                	li	s4,-32
    1872:	009f 0000 0000      	0x9f
    1878:	0000                	unimp
    187a:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    187c:	5a00                	lw	s0,48(a2)
	...
    1886:	0001                	nop
    1888:	00000063          	beqz	zero,1888 <matrix_test+0x154>
    188c:	0000                	unimp
    188e:	0000                	unimp
    1890:	0400                	addi	s0,sp,512
    1892:	f300                	fsw	fs0,32(a4)
                ret += (cur > prev) ? 1 : 0;
    1894:	5a01                	li	s4,-32
    1896:	009f 0000 0000      	0x9f
    189c:	0000                	unimp
    189e:	0100                	addi	s0,sp,128
            cur = C[i * N + j];
    18a0:	5a00                	lw	s0,48(a2)
	...
    18aa:	0001                	nop
            tmp += cur;
    18ac:	00000063          	beqz	zero,18ac <matrix_test+0x178>
    18b0:	0000                	unimp
    18b2:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    18b4:	0400                	addi	s0,sp,512
    18b6:	f300                	fsw	fs0,32(a4)
            tmp += cur;
    18b8:	5a01                	li	s4,-32
    18ba:	009f 0000 0000      	0x9f
	...
                ret += 10;
    18c8:	0000                	unimp
    18ca:	0100                	addi	s0,sp,128
    18cc:	5b00                	lw	s0,48(a4)
	...
                tmp = 0;
    18d6:	0001                	nop
            cur = C[i * N + j];
    18d8:	0062                	c.slli	zero,0x18
    18da:	0000                	unimp
        for (j = 0; j < N; j++)
    18dc:	0000                	unimp
    18de:	0000                	unimp
    for (i = 0; i < N; i++)
    18e0:	0400                	addi	s0,sp,512
    18e2:	f300                	fsw	fs0,32(a4)
    18e4:	5b01                	li	s6,-32
    18e6:	009f 0000 0000      	0x9f
    18ec:	0000                	unimp
    18ee:	0100                	addi	s0,sp,128
    18f0:	6200                	flw	fs0,0(a2)
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1902:	0001                	nop
    1904:	005c                	addi	a5,sp,4
    1906:	0000                	unimp
    1908:	0000                	unimp
    190a:	0000                	unimp
    for (i = 0; i < N; i++)
    190c:	0100                	addi	s0,sp,128
    190e:	5900                	lw	s0,48(a0)
	...
    1918:	0004                	0x4
    191a:	9f5c01f3          	0x9f5c01f3
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1926:	0001                	nop
    1928:	0059                	c.nop	22
	...
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    1936:	0000                	unimp
    1938:	0100                	addi	s0,sp,128
    193a:	6400                	flw	fs0,8(s0)
	...
    1944:	0001                	nop
    1946:	0064                	addi	s1,sp,12
    1948:	0000                	unimp
    194a:	0000                	unimp
    194c:	0000                	unimp
    194e:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1950:	6400                	flw	fs0,8(s0)
	...
    for (i = 0; i < N; i++)
    1962:	0001                	nop
    1964:	00000063          	beqz	zero,1964 <matrix_test+0x230>
	...
    for (i = 0; i < N; i++)
    1974:	0100                	addi	s0,sp,128
    1976:	5c00                	lw	s0,56(s0)
	...
        for (j = 0; j < N; j++)
    1980:	0001                	nop
    1982:	0059                	c.nop	22
                ret += (cur > prev) ? 1 : 0;
    1984:	0000                	unimp
    1986:	0000                	unimp
        for (j = 0; j < N; j++)
    1988:	0000                	unimp
    198a:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    198c:	5900                	lw	s0,48(a0)
	...
            cur = C[i * N + j];
    1996:	0001                	nop
        for (j = 0; j < N; j++)
    1998:	0059                	c.nop	22
	...
            tmp += cur;
    19a6:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    19a8:	0100                	addi	s0,sp,128
    19aa:	5a00                	lw	s0,48(a2)
	...
    19b4:	0001                	nop
    19b6:	00000063          	beqz	zero,19b6 <matrix_test+0x282>
            if (tmp > clipval)
    19ba:	0000                	unimp
                ret += 10;
    19bc:	0000                	unimp
    19be:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    19c0:	5a00                	lw	s0,48(a2)
	...
                tmp = 0;
    19ca:	0001                	nop
            prev = cur;
    19cc:	00000063          	beqz	zero,19cc <matrix_test+0x298>
            cur = C[i * N + j];
    19d0:	0000                	unimp
    19d2:	0000                	unimp
        for (j = 0; j < N; j++)
    19d4:	0100                	addi	s0,sp,128
    19d6:	5a00                	lw	s0,48(a2)
	...
    for (i = 0; i < N; i++)
    19e0:	0001                	nop
    19e2:	00000063          	beqz	zero,19e2 <matrix_test+0x2ae>
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19f2:	0100                	addi	s0,sp,128
            C[i * N + j] = 0;
    19f4:	5800                	lw	s0,48(s0)
	...
    19fe:	0001                	nop
    1a00:	0058                	addi	a4,sp,4
    1a02:	0000                	unimp
    1a04:	0000                	unimp
    1a06:	0000                	unimp
    1a08:	0100                	addi	s0,sp,128
    1a0a:	5800                	lw	s0,48(s0)
	...
    1a1c:	0001                	nop
    1a1e:	0064                	addi	s1,sp,12
    1a20:	0000                	unimp
    1a22:	0000                	unimp
    1a24:	0000                	unimp
    1a26:	0100                	addi	s0,sp,128
    1a28:	6400                	flw	fs0,8(s0)
	...
        for (j = 0; j < N; j++)
    1a32:	0001                	nop
    1a34:	0064                	addi	s1,sp,12
    1a36:	0000                	unimp
    1a38:	0000                	unimp
    1a3a:	0000                	unimp
    1a3c:	0100                	addi	s0,sp,128
    1a3e:	6400                	flw	fs0,8(s0)
	...
            for (k = 0; k < N; k++)
    1a50:	00780007          	0x780007
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a54:	1a312637          	lui	a2,0x1a312
    1a58:	009f 0000 0000      	0x9f
    1a5e:	0000                	unimp
    1a60:	0700                	addi	s0,sp,896
    1a62:	7800                	flw	fs0,48(s0)
            for (k = 0; k < N; k++)
    1a64:	3700                	fld	fs0,40(a4)
    1a66:	3126                	fld	ft2,104(sp)
    1a68:	9f1a                	add	t5,t5,t1
	...
        for (j = 0; j < N; j++)
    1a72:	00780007          	0x780007
    1a76:	1a312637          	lui	a2,0x1a312
    1a7a:	009f 0000 0000      	0x9f
	...
    for (i = 0; i < N; i++)
    1a88:	0000                	unimp
    1a8a:	0100                	addi	s0,sp,128
    1a8c:	5e00                	lw	s0,56(a2)
	...
    1a96:	0005                	c.nop	1
    1a98:	0078                	addi	a4,sp,12
    1a9a:	009f1a37          	lui	s4,0x9f1
    1a9e:	0000                	unimp
    1aa0:	0000                	unimp
    1aa2:	0000                	unimp
    ee_s16 ret = 0;
    1aa4:	0100                	addi	s0,sp,128
    1aa6:	5e00                	lw	s0,56(a2)
	...
    for (i = 0; i < N; i++)
    1ab0:	0005                	c.nop	1
    1ab2:	0078                	addi	a4,sp,12
    1ab4:	009f1a37          	lui	s4,0x9f1
        for (j = 0; j < N; j++)
    1ab8:	0000                	unimp
    1aba:	0000                	unimp
    1abc:	0000                	unimp
    1abe:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    1ac0:	5e00                	lw	s0,56(a2)
	...
    1aca:	0005                	c.nop	1
            prev = cur;
    1acc:	0078                	addi	a4,sp,12
    1ace:	009f1a37          	lui	s4,0x9f1
	...
            tmp += cur;
    1ade:	0000                	unimp
    1ae0:	0100                	addi	s0,sp,128
    1ae2:	5b00                	lw	s0,48(a4)
	...
                ret += 10;
    1aec:	0012                	c.slli	zero,0x4
    1aee:	4012007b          	0x4012007b
                ret += (cur > prev) ? 1 : 0;
    1af2:	0824                	addi	s1,sp,24
            if (tmp > clipval)
    1af4:	1622                	slli	a2,a2,0x28
    1af6:	4014                	lw	a3,0(s0)
                ret += 10;
    1af8:	2b24                	fld	fs1,80(a4)
    1afa:	0128                	addi	a0,sp,136
        for (j = 0; j < N; j++)
    1afc:	1600                	addi	s0,sp,800
    1afe:	00009f13          	slli	t5,ra,0x0
                ret += 10;
    1b02:	0000                	unimp
                tmp = 0;
    1b04:	0000                	unimp
    1b06:	0000                	unimp
            prev = cur;
    1b08:	001f 0078 2633      	0x26330078001f
            cur = C[i * N + j];
    1b0e:	00781a3f 1a3f2633 	0x1a3f263300781a3f
        for (j = 0; j < N; j++)
    1b16:	2434                	fld	fa3,72(s0)
    for (i = 0; i < N; i++)
    1b18:	1221                	addi	tp,tp,-24
    1b1a:	2440                	fld	fs0,136(s0)
    1b1c:	2208                	fld	fa0,0(a2)
    1b1e:	1416                	slli	s0,s0,0x25
    1b20:	2440                	fld	fs0,136(s0)
    1b22:	0001282b          	0x1282b
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b26:	1316                	slli	t1,t1,0x25
    1b28:	009f 0000 0000      	0x9f
    1b2e:	0000                	unimp
    1b30:	0100                	addi	s0,sp,128
    1b32:	5b00                	lw	s0,48(a4)
	...
    1b3c:	0010                	0x10
    1b3e:	0078                	addi	a4,sp,12
    for (i = 0; i < N; i++)
    1b40:	1a3f2633          	0x1a3f2633
    1b44:	0078                	addi	a4,sp,12
    1b46:	1a3f2633          	0x1a3f2633
    1b4a:	2434                	fld	fa3,72(s0)
    1b4c:	9f21                	0x9f21
	...
                tmp = 0;
    1b5e:	0001                	nop
        for (j = 0; j < N; j++)
    1b60:	0059                	c.nop	22
    1b62:	0000                	unimp
    1b64:	0000                	unimp
    1b66:	0000                	unimp
    1b68:	0100                	addi	s0,sp,128
    1b6a:	5900                	lw	s0,48(a0)
	...
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b74:	0001                	nop
    1b76:	0059                	c.nop	22
	...
    1b84:	0000                	unimp
    1b86:	0100                	addi	s0,sp,128
    1b88:	6200                	flw	fs0,0(a2)
	...
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    1b92:	0001                	nop
    1b94:	0062                	c.slli	zero,0x18
    1b96:	0000                	unimp
    1b98:	0000                	unimp
    1b9a:	0000                	unimp
    1b9c:	0100                	addi	s0,sp,128
    1b9e:	6200                	flw	fs0,0(a2)
	...
            for (k = 0; k < N; k++)
    1bb0:	0001                	nop
    1bb2:	0058                	addi	a4,sp,4
        for (j = 0; j < N; j++)
    1bb4:	0000                	unimp
    1bb6:	0000                	unimp
    1bb8:	0000                	unimp
    1bba:	0100                	addi	s0,sp,128
    1bbc:	5800                	lw	s0,48(s0)
	...
    for (i = 0; i < N; i++)
    1bc6:	0001                	nop
    1bc8:	0058                	addi	a4,sp,4
	...
    1bd6:	0000                	unimp
    1bd8:	0100                	addi	s0,sp,128
    1bda:	6300                	flw	fs0,0(a4)
	...
    1be4:	0001                	nop
    1be6:	00000063          	beqz	zero,1be6 <matrix_test+0x4b2>
    ee_s16 ret = 0;
    1bea:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1bec:	0000                	unimp
    1bee:	0100                	addi	s0,sp,128
    1bf0:	6300                	flw	fs0,0(a4)
	...
    for (i = 0; i < N; i++)
    1bfa:	0001                	nop
        for (j = 0; j < N; j++)
    1bfc:	00000063          	beqz	zero,1bfc <matrix_test+0x4c8>
	...
                ret += (cur > prev) ? 1 : 0;
    1c0c:	0700                	addi	s0,sp,896
    1c0e:	7800                	flw	fs0,48(s0)
            prev = cur;
    1c10:	3700                	fld	fs0,40(a4)
    1c12:	3126                	fld	ft2,104(sp)
            cur = C[i * N + j];
    1c14:	9f1a                	add	t5,t5,t1
	...
    1c1e:	00780007          	0x780007
            tmp += cur;
    1c22:	1a312637          	lui	a2,0x1a312
    1c26:	009f 0000 0000      	0x9f
    1c2c:	0000                	unimp
    1c2e:	0700                	addi	s0,sp,896
                ret += 10;
    1c30:	7800                	flw	fs0,48(s0)
    1c32:	3700                	fld	fs0,40(a4)
                ret += (cur > prev) ? 1 : 0;
    1c34:	3126                	fld	ft2,104(sp)
    1c36:	9f1a                	add	t5,t5,t1
	...
                tmp = 0;
    1c48:	0001                	nop
    1c4a:	005e                	c.slli	zero,0x17
            prev = cur;
    1c4c:	0000                	unimp
    1c4e:	0000                	unimp
            cur = C[i * N + j];
    1c50:	0000                	unimp
    1c52:	0500                	addi	s0,sp,640
        for (j = 0; j < N; j++)
    1c54:	7800                	flw	fs0,48(s0)
    1c56:	3700                	fld	fs0,40(a4)
    1c58:	9f1a                	add	t5,t5,t1
	...
    for (i = 0; i < N; i++)
    1c62:	0001                	nop
    1c64:	005e                	c.slli	zero,0x17
    1c66:	0000                	unimp
    1c68:	0000                	unimp
    1c6a:	0000                	unimp
            cur = C[i * N + j];
    1c6c:	0500                	addi	s0,sp,640
    1c6e:	7800                	flw	fs0,48(s0)
    for (i = 0; i < N; i++)
    1c70:	3700                	fld	fs0,40(a4)
    1c72:	9f1a                	add	t5,t5,t1
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1c7c:	0001                	nop
    1c7e:	005e                	c.slli	zero,0x17
    for (i = 0; i < N; i++)
    1c80:	0000                	unimp
    1c82:	0000                	unimp
                tmp = 0;
    1c84:	0000                	unimp
    1c86:	0500                	addi	s0,sp,640
        for (j = 0; j < N; j++)
    1c88:	7800                	flw	fs0,48(s0)
    1c8a:	3700                	fld	fs0,40(a4)
            A[i * N + j] += val;
    1c8c:	9f1a                	add	t5,t5,t1
	...
    1c9e:	0001                	nop
        for (j = 0; j < N; j++)
    1ca0:	0000005b          	0x5b
    1ca4:	0000                	unimp
    1ca6:	0000                	unimp
    for (i = 0; i < N; i++)
    1ca8:	1200                	addi	s0,sp,288
    1caa:	7b00                	flw	fs0,48(a4)
    1cac:	1200                	addi	s0,sp,288
    1cae:	2440                	fld	fs0,136(s0)
    1cb0:	2208                	fld	fa0,0(a2)
    1cb2:	1416                	slli	s0,s0,0x25
    1cb4:	2440                	fld	fs0,136(s0)
    1cb6:	0001282b          	0x1282b
}
    1cba:	1316                	slli	t1,t1,0x25
    1cbc:	009f 0000 0000      	0x9f
    return crc;
    1cc2:	0000                	unimp
}
    1cc4:	1f00                	addi	s0,sp,944
    1cc6:	7800                	flw	fs0,48(s0)
    1cc8:	3300                	fld	fs0,32(a4)
    1cca:	3f26                	fld	ft10,104(sp)
    1ccc:	781a                	flw	fa6,164(sp)
    1cce:	3300                	fld	fs0,32(a4)
    1cd0:	3f26                	fld	ft10,104(sp)
    1cd2:	341a                	fld	fs0,416(sp)
    1cd4:	2124                	fld	fs1,64(a0)
    1cd6:	4012                	0x4012
    1cd8:	0824                	addi	s1,sp,24
    1cda:	1622                	slli	a2,a2,0x28
    1cdc:	4014                	lw	a3,0(s0)
    1cde:	2b24                	fld	fs1,80(a4)
    1ce0:	0128                	addi	a0,sp,136
    1ce2:	1600                	addi	s0,sp,800
    1ce4:	00009f13          	slli	t5,ra,0x0
    1ce8:	0000                	unimp
    1cea:	0000                	unimp
    1cec:	0000                	unimp
    1cee:	0001                	nop
    return crc;
    1cf0:	0000005b          	0x5b
}
    1cf4:	0000                	unimp
    1cf6:	0000                	unimp
    1cf8:	1000                	addi	s0,sp,32
    1cfa:	7800                	flw	fs0,48(s0)
            C[i * N + j] = 0;
    1cfc:	3300                	fld	fs0,32(a4)
    1cfe:	3f26                	fld	ft10,104(sp)
    1d00:	781a                	flw	fa6,164(sp)
    1d02:	3300                	fld	fs0,32(a4)
    1d04:	3f26                	fld	ft10,104(sp)
    1d06:	341a                	fld	fs0,416(sp)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d08:	2124                	fld	fs1,64(a0)
    1d0a:	009f 0000 0000      	0x9f
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d18:	0000                	unimp
    1d1a:	0100                	addi	s0,sp,128
    1d1c:	5a00                	lw	s0,48(a2)
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d26:	0004                	0x4
    1d28:	9f5a01f3          	0x9f5a01f3
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d34:	0001                	nop
    1d36:	005a                	c.slli	zero,0x16
    1d38:	0000                	unimp
    1d3a:	0000                	unimp
    1d3c:	0000                	unimp
    1d3e:	0400                	addi	s0,sp,512
    1d40:	f300                	fsw	fs0,32(a4)
    1d42:	5a01                	li	s4,-32
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1d44:	009f 0000 0000      	0x9f
	...
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d52:	0000                	unimp
{
    1d54:	0100                	addi	s0,sp,128
    1d56:	5a00                	lw	s0,48(a2)
	...
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d60:	0004                	0x4
    1d62:	9f5a01f3          	0x9f5a01f3
	...
    1d6e:	0001                	nop
    1d70:	005a                	c.slli	zero,0x16
    1d72:	0000                	unimp
    1d74:	0000                	unimp
    1d76:	0000                	unimp
}
    1d78:	0400                	addi	s0,sp,512
    1d7a:	f300                	fsw	fs0,32(a4)
    1d7c:	5a01                	li	s4,-32
    1d7e:	009f 0000 0000      	0x9f
	...
{
    1d8c:	0000                	unimp
    1d8e:	0100                	addi	s0,sp,128
    1d90:	5c00                	lw	s0,56(s0)
	...
    printf("start test42\n");
    1d9a:	0004                	0x4
{
    1d9c:	9f5c01f3          	0x9f5c01f3
	...
    1da8:	0001                	nop
    1daa:	005c                	addi	a5,sp,4
	...
    1db8:	0000                	unimp
    1dba:	0100                	addi	s0,sp,128
    1dbc:	5e00                	lw	s0,56(a2)
	...
    1dc6:	0004                	0x4
    1dc8:	9f5e01f3          	0x9f5e01f3
	...
    printf("start test42\n");
    1ddc:	0001                	nop
    1dde:	005f 0000 0000      	0x5f
    if (seed == 0)
    1de4:	0000                	unimp
    1de6:	0400                	addi	s0,sp,512
        seed = 1;
    1de8:	f300                	fsw	fs0,32(a4)
    1dea:	5f01                	li	t5,-32
    1dec:	009f 0000 0000      	0x9f
    1df2:	0000                	unimp
    1df4:	0100                	addi	s0,sp,128
    1df6:	5f00                	lw	s0,56(a4)
	...
        i++;
    1e08:	0001                	nop
    1e0a:	0060                	addi	s0,sp,12
	...
        j = i * i * 2 * 4;
    1e18:	0000                	unimp
    1e1a:	0100                	addi	s0,sp,128
    1e1c:	5b00                	lw	s0,48(a4)
	...
    B = A + N * N;
    1e2e:	0001                	nop
    1e30:	005f 0000 0000      	0x5f
	...
    1e3e:	0000                	unimp
    1e40:	0100                	addi	s0,sp,128
    1e42:	5a00                	lw	s0,48(a2)
	...
    for (i = 0; i < N; i++)
    1e4c:	0001                	nop
    1e4e:	005e                	c.slli	zero,0x17
	...
    B = A + N * N;
    1e5c:	0000                	unimp
    1e5e:	0100                	addi	s0,sp,128
    1e60:	5a00                	lw	s0,48(a2)
	...
    1e6a:	0001                	nop
            seed         = ((order * seed) % 65536);
    1e6c:	005a                	c.slli	zero,0x16
    1e6e:	0000                	unimp
        seed = 1;
    1e70:	0000                	unimp
    1e72:	0000                	unimp
        for (j = 0; j < N; j++)
    1e74:	0100                	addi	s0,sp,128
    1e76:	5a00                	lw	s0,48(a2)
	...
            seed         = ((order * seed) % 65536);
    1e80:	0004                	0x4
    1e82:	9f5a01f3          	0x9f5a01f3
	...
    1e8e:	0001                	nop
    1e90:	005a                	c.slli	zero,0x16
	...
    1e9e:	0000                	unimp
    1ea0:	0100                	addi	s0,sp,128
    1ea2:	5a00                	lw	s0,48(a2)
	...
            val          = (seed + order);
    1eac:	0001                	nop
    1eae:	005a                	c.slli	zero,0x16
	...
            A[i * N + j] = val;
    1ebc:	0000                	unimp
    1ebe:	0100                	addi	s0,sp,128
    1ec0:	5a00                	lw	s0,48(a2)
	...
            order++;
    1eca:	0001                	nop
    1ecc:	005f 0000 0000      	0x5f
        for (j = 0; j < N; j++)
    1ed2:	0000                	unimp
    for (i = 0; i < N; i++)
    1ed4:	0100                	addi	s0,sp,128
    1ed6:	5a00                	lw	s0,48(a2)
	...
    p->C = (MATRES *)align_mem(B + N * N);
    1ee0:	0001                	nop
    1ee2:	005f 0000 0000      	0x5f
	...
    1ef0:	0000                	unimp
    1ef2:	0200                	addi	s0,sp,256
    1ef4:	3000                	fld	fs0,32(s0)
    1ef6:	009f 0000 0000      	0x9f
    1efc:	0000                	unimp
    1efe:	0100                	addi	s0,sp,128
    p->N = N;
    1f00:	5a00                	lw	s0,48(a2)
	...
    p->B = B;
    1f0a:	0001                	nop
    p->A = A;
    1f0c:	005e                	c.slli	zero,0x17
    1f0e:	0000                	unimp
    p->N = N;
    1f10:	0000                	unimp
    1f12:	0000                	unimp
}
    1f14:	0100                	addi	s0,sp,128
    1f16:	5a00                	lw	s0,48(a2)
	...
    1f28:	0001                	nop
    1f2a:	005f 0000 0000      	0x5f
    1f30:	0000                	unimp
    1f32:	0100                	addi	s0,sp,128
    1f34:	5f00                	lw	s0,56(a4)
	...
    1f46:	0001                	nop
    1f48:	005a                	c.slli	zero,0x16
    1f4a:	0000                	unimp
    B = A + N * N;
    1f4c:	0000                	unimp
    1f4e:	0000                	unimp
    1f50:	0200                	addi	s0,sp,256
    1f52:	3000                	fld	fs0,32(s0)
    1f54:	009f 0000 0000      	0x9f
    1f5a:	0000                	unimp
    N = i - 1;
    1f5c:	0100                	addi	s0,sp,128
    1f5e:	6600                	flw	fs0,8(a2)
	...
start_time(void) {
    1f68:	0001                	nop
    1f6a:	0066                	c.slli	zero,0x19
    1f6c:	0000                	unimp
    1f6e:	0000                	unimp
    timer_0 = timer_getms();
    1f70:	0000                	unimp
    1f72:	0200                	addi	s0,sp,256
    1f74:	3000                	fld	fs0,32(s0)
    1f76:	009f 0000 0000      	0x9f
    1f7c:	0000                	unimp
    1f7e:	0100                	addi	s0,sp,128
    1f80:	6600                	flw	fs0,8(a2)
	...
}
    1f8a:	0001                	nop
    1f8c:	005a                	c.slli	zero,0x16
    1f8e:	0000                	unimp
stop_time(void) {
    1f90:	0000                	unimp
    1f92:	0000                	unimp
    1f94:	0200                	addi	s0,sp,256
    1f96:	3000                	fld	fs0,32(s0)
    timer_1 = timer_getms();
    1f98:	009f 0000 0000      	0x9f
	...
    1fa6:	0000                	unimp
    1fa8:	0100                	addi	s0,sp,128
    1faa:	5b00                	lw	s0,48(a4)
	...
}
    1fb4:	0001                	nop
    1fb6:	00000067          	jr	zero # 0 <_start>
    return timer_1 - timer_0;
    1fba:	0000                	unimp
    1fbc:	0000                	unimp
    1fbe:	0400                	addi	s0,sp,512
    1fc0:	f300                	fsw	fs0,32(a4)
    1fc2:	5b01                	li	s6,-32
    1fc4:	009f 0000 0000      	0x9f
}
    1fca:	0000                	unimp
    1fcc:	0100                	addi	s0,sp,128
    1fce:	5b00                	lw	s0,48(a4)
	...
    return ((double)ticks) / 1000.0;
    1fe0:	0001                	nop
    1fe2:	005c                	addi	a5,sp,4
    1fe4:	0000                	unimp
    1fe6:	0000                	unimp
    1fe8:	0000                	unimp
    1fea:	0100                	addi	s0,sp,128
    1fec:	6800                	flw	fs0,16(s0)
	...
}
    1ff6:	0004                	0x4
    1ff8:	9f5c01f3          	0x9f5c01f3
	...
portable_init(core_portable* p, int* argc, char* argv[]) {
    2004:	0001                	nop
    2006:	005c                	addi	a5,sp,4
	...
    2014:	0000                	unimp
    2016:	0100                	addi	s0,sp,128
    printf("start run!!\n");
    2018:	5a00                	lw	s0,48(a2)
	...
    p->portable_id = 1;
    2022:	0001                	nop
    2024:	0066                	c.slli	zero,0x19
    2026:	0000                	unimp
}
    2028:	0000                	unimp
    202a:	0000                	unimp
    202c:	0100                	addi	s0,sp,128
    202e:	6400                	flw	fs0,8(s0)
	...
    p->portable_id = 0;
    2038:	0002                	c.slli64	zero
    203a:	0084                	addi	s1,sp,64
	...
{
    2044:	0001                	nop
    2046:	0064                	addi	s1,sp,12
    2048:	0000                	unimp
    204a:	0000                	unimp
    printf("start test43\n");
    204c:	0000                	unimp
    204e:	0100                	addi	s0,sp,128
    2050:	5800                	lw	s0,48(s0)
	...
{
    205a:	0001                	nop
    205c:	0064                	addi	s1,sp,12
    205e:	0000                	unimp
    2060:	0000                	unimp
    2062:	0000                	unimp
    2064:	0100                	addi	s0,sp,128
    2066:	6600                	flw	fs0,8(a2)
	...
    size--;
    2070:	0001                	nop
    2072:	0064                	addi	s1,sp,12
    while ((total + next + 1) < size)
    2074:	0000                	unimp
    2076:	0000                	unimp
    2078:	0000                	unimp
    207a:	0100                	addi	s0,sp,128
    207c:	5a00                	lw	s0,48(a2)
	...
        switch (seed & 0x7)
    208e:	0001                	nop
    2090:	0064                	addi	s1,sp,12
    2092:	0000                	unimp
                buf  = intpat[(seed >> 3) & 0x3];
    2094:	0000                	unimp
    2096:	0000                	unimp
        switch (seed & 0x7)
    2098:	0100                	addi	s0,sp,128
    209a:	5800                	lw	s0,48(s0)
	...
                buf  = floatpat[(seed >> 3) & 0x3];
    20a4:	0001                	nop
    20a6:	0058                	addi	a4,sp,4
    20a8:	0000                	unimp
    20aa:	0000                	unimp
        switch (seed & 0x7)
    20ac:	0000                	unimp
    20ae:	0200                	addi	s0,sp,256
    20b0:	7800                	flw	fs0,48(s0)
	...
                buf  = intpat[(seed >> 3) & 0x3];
    20ba:	0100                	addi	s0,sp,128
        switch (seed & 0x7)
    20bc:	5800                	lw	s0,48(s0)
	...
                next = 8;
    20c6:	0002                	c.slli64	zero
                buf  = scipat[(seed >> 3) & 0x3];
    20c8:	0078                	addi	a4,sp,12
	...
            *(p + total + i) = ',';
    20d2:	0001                	nop
    20d4:	0058                	addi	a4,sp,4
	...
        switch (seed & 0x7)
    20e2:	0000                	unimp
    20e4:	0100                	addi	s0,sp,128
    20e6:	5800                	lw	s0,48(s0)
	...
                buf  = floatpat[(seed >> 3) & 0x3];
    20f0:	0001                	nop
    20f2:	005f 0000 0000      	0x5f
    20f8:	0000                	unimp
    20fa:	0100                	addi	s0,sp,128
    while ((total + next + 1) < size)
    20fc:	5800                	lw	s0,48(s0)
	...
                break;
    2106:	0001                	nop
    while ((total + next + 1) < size)
    2108:	005f 0000 0000      	0x5f
                next = 8;
    210e:	0000                	unimp
                *(p + total + i) = buf[i];
    2110:	0100                	addi	s0,sp,128
    2112:	6400                	flw	fs0,8(s0)
	...
    211c:	0001                	nop
    211e:	005f 0000 0000      	0x5f
	...
    212c:	0000                	unimp
    212e:	0200                	addi	s0,sp,256
    2130:	3000                	fld	fs0,32(s0)
    2132:	009f 0000 0000      	0x9f
    2138:	0000                	unimp
    213a:	0100                	addi	s0,sp,128
    213c:	6200                	flw	fs0,0(a2)
	...
    2146:	0001                	nop
    2148:	005f 0000 0000      	0x5f
    214e:	0000                	unimp
            for (i = 0; i < next; i++)
    2150:	0100                	addi	s0,sp,128
    2152:	6200                	flw	fs0,0(a2)
	...
            *(p + total + i) = ',';
    215c:	0001                	nop
    215e:	0062                	c.slli	zero,0x18
    2160:	0000                	unimp
    2162:	0000                	unimp
    2164:	0000                	unimp
    2166:	0200                	addi	s0,sp,256
        switch (seed & 0x7)
    2168:	3000                	fld	fs0,32(s0)
    216a:	009f 0000 0000      	0x9f
    2170:	0000                	unimp
    2172:	0100                	addi	s0,sp,128
    2174:	6200                	flw	fs0,0(a2)
	...
    217e:	0002                	c.slli64	zero
    2180:	9f30                	0x9f30
	...
                buf  = intpat[(seed >> 3) & 0x3];
    2192:	0002                	c.slli64	zero
    while ((total + next + 1) < size)
    2194:	9f31                	0x9f31
	...
                break;
    219e:	0001                	nop
    while ((total + next + 1) < size)
    21a0:	0065                	c.nop	25
    21a2:	0000                	unimp
                next = 4;
    21a4:	0000                	unimp
    21a6:	0000                	unimp
    21a8:	0200                	addi	s0,sp,256
    21aa:	3100                	fld	fs0,32(a0)
                buf  = scipat[(seed >> 3) & 0x3];
    21ac:	009f 0000 0000      	0x9f
	...
    while ((total + next + 1) < size)
    21ba:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    21bc:	0200                	addi	s0,sp,256
    21be:	3000                	fld	fs0,32(s0)
                break;
    21c0:	009f 0000 0000      	0x9f
    while ((total + next + 1) < size)
    21c6:	0000                	unimp
    while (total < size)
    21c8:	0100                	addi	s0,sp,128
    21ca:	6900                	flw	fs0,16(a0)
	...
}
    21d4:	0002                	c.slli64	zero
    21d6:	9f30                	0x9f30
	...
    21e0:	0001                	nop
    21e2:	0069                	c.nop	26
    21e4:	0000                	unimp
    21e6:	0000                	unimp
    21e8:	0000                	unimp
    21ea:	0200                	addi	s0,sp,256
    21ec:	3000                	fld	fs0,32(s0)
    21ee:	009f 0000 0000      	0x9f
	...
    21fc:	0000                	unimp
    21fe:	0200                	addi	s0,sp,256
    2200:	3000                	fld	fs0,32(s0)
    2202:	009f 0000 0000      	0x9f
    2208:	0000                	unimp
    220a:	0100                	addi	s0,sp,128
    220c:	5900                	lw	s0,48(a0)
	...
    ee_u8 *         str = *instr;
    221e:	0001                	nop
    for (; *str && state != CORE_INVALID; str++)
    2220:	00000063          	beqz	zero,2220 <core_state_transition+0x4>
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2230:	0200                	addi	s0,sp,256
    2232:	3000                	fld	fs0,32(s0)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2234:	009f 0000 0000      	0x9f
    223a:	0000                	unimp
    223c:	0100                	addi	s0,sp,128
    223e:	5900                	lw	s0,48(a0)
	...
    2248:	7f790003          	lb	zero,2039(s2) # 17f7 <matrix_test+0xc3>
                transition_count[CORE_START]++;
    224c:	009f 0000 0000      	0x9f
    for (; *str && state != CORE_INVALID; str++)
    2252:	0000                	unimp
    2254:	0100                	addi	s0,sp,128
    2256:	5900                	lw	s0,48(a0)
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2260:	007c                	addi	a5,sp,12
    2262:	0000                	unimp
                if (NEXT_SYMBOL == '.')
    2264:	00dc                	addi	a5,sp,68
    2266:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2268:	0001                	nop
    226a:	dc5a                	sw	s6,56(sp)
        if (NEXT_SYMBOL == ',') /* end of this input */
    226c:	0000                	unimp
    226e:	e300                	fsw	fs0,0(a4)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2270:	0000                	unimp
    2272:	0300                	addi	s0,sp,384
                if (NEXT_SYMBOL == '.')
    2274:	9100                	0x9100
    2276:	6f9c                	flw	fa5,24(a5)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2280:	007c                	addi	a5,sp,12
    2282:	0000                	unimp
    2284:	00d8                	addi	a4,sp,68
    2286:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2288:	0001                	nop
    228a:	0000d85b          	0xd85b
        if (NEXT_SYMBOL == ',') /* end of this input */
    228e:	e300                	fsw	fs0,0(a4)
    2290:	0000                	unimp
    2292:	0100                	addi	s0,sp,128
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2294:	5c00                	lw	s0,56(s0)
    2296:	000000e3          	beqz	zero,2a96 <crcu32+0x5a>
    229a:	0d40                	addi	s0,sp,660
                if (NEXT_SYMBOL == '.')
    229c:	0000                	unimp
    229e:	0004                	0x4
                    transition_count[CORE_INT]++;
    22a0:	9f5b01f3          	0x9f5b01f3
	...
    for (; *str && state != CORE_INVALID; str++)
    22ac:	01d0                	addi	a2,sp,196
    22ae:	0000                	unimp
    22b0:	0204                	addi	s1,sp,256
    22b2:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    22b4:	0002                	c.slli64	zero
    22b6:	9f30                	0x9f30
    22b8:	0204                	addi	s1,sp,256
    22ba:	0000                	unimp
    22bc:	020c                	addi	a1,sp,256
    22be:	0000                	unimp
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22c0:	0002                	c.slli64	zero
    22c2:	9f31                	0x9f31
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22c4:	020c                	addi	a1,sp,256
    22c6:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    22c8:	021c                	addi	a5,sp,256
    22ca:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22cc:	0002                	c.slli64	zero
    22ce:	9f32                	add	t5,t5,a2
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d0:	021c                	addi	a5,sp,256
    22d2:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22d4:	023c                	addi	a5,sp,264
    22d6:	0000                	unimp
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d8:	0002                	c.slli64	zero
    22da:	9f30                	0x9f30
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22dc:	023c                	addi	a5,sp,264
    22de:	0000                	unimp
                    transition_count[CORE_FLOAT]++;
    22e0:	0240                	addi	s0,sp,260
    22e2:	0000                	unimp
    22e4:	0002                	c.slli64	zero
    22e6:	9f31                	0x9f31
                    state = CORE_INVALID;
    22e8:	0240                	addi	s0,sp,260
    22ea:	0000                	unimp
                    transition_count[CORE_FLOAT]++;
    22ec:	0244                	addi	s1,sp,260
    22ee:	0000                	unimp
    22f0:	0002                	c.slli64	zero
    22f2:	9f32                	add	t5,t5,a2
    *instr = str;
    22f4:	0244                	addi	s1,sp,260
    22f6:	0000                	unimp
}
    22f8:	0280                	addi	s0,sp,320
    22fa:	0000                	unimp
    22fc:	0002                	c.slli64	zero
    22fe:	9f30                	0x9f30
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2300:	04a0                	addi	s0,sp,584
    2302:	0000                	unimp
    2304:	04d4                	addi	a3,sp,580
    2306:	0000                	unimp
    2308:	0002                	c.slli64	zero
    230a:	9f30                	0x9f30
    230c:	04d4                	addi	a3,sp,580
    230e:	0000                	unimp
                else if (NEXT_SYMBOL == '.')
    2310:	0504                	addi	s1,sp,640
    2312:	0000                	unimp
    2314:	0001                	nop
    2316:	106a                	c.slli	zero,0x3a
                    transition_count[CORE_INVALID]++;
    2318:	0005                	c.nop	1
    231a:	e400                	fsw	fs0,8(s0)
                transition_count[CORE_START]++;
    231c:	0005                	c.nop	1
    231e:	0100                	addi	s0,sp,128
                    state = CORE_INVALID;
    2320:	6a00                	flw	fs0,16(a2)
    2322:	05e4                	addi	s1,sp,716
                    transition_count[CORE_INVALID]++;
    2324:	0000                	unimp
    2326:	0668                	addi	a0,sp,780
    2328:	0000                	unimp
    232a:	0002                	c.slli64	zero
    *instr = str;
    232c:	9f30                	0x9f30
    232e:	06d0                	addi	a2,sp,836
}
    2330:	0000                	unimp
    2332:	0700                	addi	s0,sp,896
    2334:	0000                	unimp
    2336:	0001                	nop
                    transition_count[CORE_INT]++;
    2338:	a86a                	fsd	fs10,16(sp)
    233a:	0008                	0x8
    233c:	d400                	sw	s0,40(s0)
    233e:	0008                	0x8
                    state = CORE_INVALID;
    2340:	0200                	addi	s0,sp,256
    2342:	3000                	fld	fs0,32(s0)
                    transition_count[CORE_INT]++;
    2344:	d49f 0008 0400      	0x4000008d49f
    234a:	0009                	c.nop	2
    *instr = str;
    234c:	0100                	addi	s0,sp,128
    234e:	6300                	flw	fs0,0(a4)
}
    2350:	0910                	addi	a2,sp,144
    2352:	0000                	unimp
    2354:	0918                	addi	a4,sp,144
    2356:	0000                	unimp
                transition_count[CORE_START]++;
    2358:	0001                	nop
    235a:	00092063          	0x92063
    for (; *str && state != CORE_INVALID; str++)
    235e:	4c00                	lw	s0,24(s0)
    2360:	0009                	c.nop	2
    2362:	0200                	addi	s0,sp,256
        if (NEXT_SYMBOL == ',') /* end of this input */
    2364:	3000                	fld	fs0,32(s0)
    2366:	4c9f 0009 7c00      	0x7c0000094c9f
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    236c:	0009                	c.nop	2
    236e:	0100                	addi	s0,sp,128
    2370:	6300                	flw	fs0,0(a4)
    2372:	0988                	addi	a0,sp,208
    2374:	0000                	unimp
    2376:	0990                	addi	a2,sp,208
    2378:	0000                	unimp
    237a:	0001                	nop
    237c:	00099863          	bnez	s3,238c <core_state_transition+0x170>
    2380:	c400                	sw	s0,8(s0)
    2382:	0009                	c.nop	2
                else if (NEXT_SYMBOL == '.')
    2384:	0200                	addi	s0,sp,256
    2386:	3000                	fld	fs0,32(s0)
    2388:	c49f 0009 f400      	0xf4000009c49f
                    transition_count[CORE_S1]++;
    238e:	0009                	c.nop	2
                    state = CORE_INVALID;
    2390:	0100                	addi	s0,sp,128
    2392:	6300                	flw	fs0,0(a4)
    *instr = str;
    2394:	0a00                	addi	s0,sp,272
    2396:	0000                	unimp
}
    2398:	0a04                	addi	s1,sp,272
    239a:	0000                	unimp
    239c:	0001                	nop
    239e:	000a0463          	beqz	s4,23a6 <core_state_transition+0x18a>
                    transition_count[CORE_S1]++;
    23a2:	2c00                	fld	fs0,24(s0)
    for (; *str && state != CORE_INVALID; str++)
    23a4:	000a                	c.slli	zero,0x2
    23a6:	0200                	addi	s0,sp,256
    23a8:	3000                	fld	fs0,32(s0)
    23aa:	2c9f 000a 5800      	0x5800000a2c9f
        if (NEXT_SYMBOL == ',') /* end of this input */
    23b0:	000a                	c.slli	zero,0x2
    23b2:	0100                	addi	s0,sp,128
    23b4:	6900                	flw	fs0,16(a0)
    23b6:	0a64                	addi	s1,sp,284
    for (; *str && state != CORE_INVALID; str++)
    23b8:	0000                	unimp
    23ba:	0a68                	addi	a0,sp,284
    23bc:	0000                	unimp
    23be:	0001                	nop
    23c0:	d069                	beqz	s0,2382 <core_state_transition+0x166>
    23c2:	000a                	c.slli	zero,0x2
                    transition_count[CORE_FLOAT]++;
    23c4:	f000                	fsw	fs0,32(s0)
    23c6:	000a                	c.slli	zero,0x2
    23c8:	0200                	addi	s0,sp,256
    23ca:	3000                	fld	fs0,32(s0)
    23cc:	f09f 000a f800      	0xf800000af09f
    for (; *str && state != CORE_INVALID; str++)
    23d2:	000a                	c.slli	zero,0x2
    23d4:	0200                	addi	s0,sp,256
    23d6:	3100                	fld	fs0,32(a0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    23d8:	f89f 000a 1400      	0x1400000af89f
    23de:	0200000b          	0x200000b
    23e2:	3200                	fld	fs0,32(a2)
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23e4:	149f 000b 1c00      	0x1c00000b149f
    23ea:	0200000b          	0x200000b
    23ee:	3000                	fld	fs0,32(s0)
    23f0:	1c9f 000b 5c00      	0x5c00000b1c9f
                    transition_count[CORE_S2]++;
    23f6:	0200000b          	0x200000b
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23fa:	3100                	fld	fs0,32(a0)
                    state = CORE_INVALID;
    23fc:	5c9f 000b 6400      	0x6400000b5c9f
    *instr = str;
    2402:	0200000b          	0x200000b
}
    2406:	3200                	fld	fs0,32(a2)
    2408:	8c9f 000c 9800      	0x9800000c8c9f
    for (; *str && state != CORE_INVALID; str++)
    240e:	000c                	0xc
    2410:	0200                	addi	s0,sp,256
    2412:	3000                	fld	fs0,32(s0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2414:	389f 000d 4000      	0x4000000d389f
    241a:	000d                	c.nop	3
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    241c:	0200                	addi	s0,sp,256
    241e:	3000                	fld	fs0,32(s0)
    2420:	009f 0000 0000      	0x9f
    2426:	0000                	unimp
    2428:	7c00                	flw	fs0,56(s0)
    242a:	0000                	unimp
    242c:	3c00                	fld	fs0,56(s0)
    242e:	0002                	c.slli64	zero
                    transition_count[CORE_EXPONENT]++;
    2430:	0200                	addi	s0,sp,256
    2432:	3000                	fld	fs0,32(s0)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2434:	b49f 0006 d000      	0xd0000006b49f
    for (; *str && state != CORE_INVALID; str++)
    243a:	0006                	c.slli	zero,0x1
    243c:	0200                	addi	s0,sp,256
    243e:	3000                	fld	fs0,32(s0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2440:	d09f 000a ec00      	0xec00000ad09f
    2446:	000a                	c.slli	zero,0x2
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2448:	0200                	addi	s0,sp,256
    244a:	3000                	fld	fs0,32(s0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    244c:	ec9f 000a f800      	0xf800000aec9f
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2452:	000a                	c.slli	zero,0x2
    2454:	0200                	addi	s0,sp,256
    2456:	3100                	fld	fs0,32(a0)
    2458:	8c9f 000b d000      	0xd000000b8c9f
                    transition_count[CORE_INVALID]++;
    245e:	0200000b          	0x200000b
    2462:	3000                	fld	fs0,32(s0)
                    state = CORE_INVALID;
    2464:	009f 0000 0000      	0x9f
                    transition_count[CORE_INVALID]++;
    246a:	0000                	unimp
    246c:	7c00                	flw	fs0,56(s0)
    246e:	0000                	unimp
    2470:	0400                	addi	s0,sp,512
    2472:	0002                	c.slli64	zero
    for (; *str && state != CORE_INVALID; str++)
    2474:	0200                	addi	s0,sp,256
    2476:	3000                	fld	fs0,32(s0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2478:	049f 0002 0c00      	0xc000002049f
    247e:	0002                	c.slli64	zero
    for (; *str && state != CORE_INVALID; str++)
    2480:	0100                	addi	s0,sp,128
    2482:	6200                	flw	fs0,0(a2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2484:	020c                	addi	a1,sp,256
    2486:	0000                	unimp
    2488:	0214                	addi	a3,sp,256
    248a:	0000                	unimp
    248c:	0001                	nop
    248e:	0002145b          	0x2145b
    for (; *str && state != CORE_INVALID; str++)
    2492:	1800                	addi	s0,sp,48
        if (NEXT_SYMBOL == ',') /* end of this input */
    2494:	0002                	c.slli64	zero
    2496:	0300                	addi	s0,sp,384
    2498:	7b00                	flw	fs0,48(a4)
    249a:	9f7f                	0x9f7f
    for (; *str && state != CORE_INVALID; str++)
    249c:	0218                	addi	a4,sp,256
    249e:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    24a0:	021c                	addi	a5,sp,256
    24a2:	0000                	unimp
    24a4:	0006                	c.slli	zero,0x1
    24a6:	0082                	c.slli64	ra
    24a8:	007f                	0x7f
    24aa:	9f22                	add	t5,t5,s0
                transition_count[CORE_START]++;
    24ac:	021c                	addi	a5,sp,256
    24ae:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    24b0:	00000227          	0x227
    24b4:	0001                	nop
    24b6:	0006b45b          	0x6b45b
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ba:	d000                	sw	s0,32(s0)
    24bc:	0006                	c.slli	zero,0x1
    24be:	0200                	addi	s0,sp,256
    24c0:	3000                	fld	fs0,32(s0)
    24c2:	8c9f 000b d000      	0xd000000b8c9f
                    transition_count[CORE_S1]++;
    24c8:	0200000b          	0x200000b
    for (; *str && state != CORE_INVALID; str++)
    24cc:	3000                	fld	fs0,32(s0)
    24ce:	009f 0000 0000      	0x9f
        if (NEXT_SYMBOL == ',') /* end of this input */
    24d4:	0000                	unimp
    24d6:	7c00                	flw	fs0,56(s0)
    24d8:	0000                	unimp
    24da:	7000                	flw	fs0,32(s0)
    24dc:	0004                	0x4
    24de:	0300                	addi	s0,sp,384
    for (; *str && state != CORE_INVALID; str++)
    24e0:	0900                	addi	s0,sp,144
    24e2:	9fff                	0x9fff
                    state = CORE_FLOAT;
    24e4:	0470                	addi	a2,sp,524
    24e6:	0000                	unimp
    24e8:	04a0                	addi	s0,sp,584
    24ea:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ec:	0002                	c.slli64	zero
    24ee:	05e49f33          	0x5e49f33
            break;
    24f2:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    24f4:	0680                	addi	s0,sp,832
    24f6:	0000                	unimp
    24f8:	ff090003          	lb	zero,-16(s2)
    24fc:	809f 0006 b400      	0xb4000006809f
                    state = CORE_EXPONENT;
    2502:	0006                	c.slli	zero,0x1
    2504:	0200                	addi	s0,sp,256
    2506:	3200                	fld	fs0,32(a2)
    for (; *str && state != CORE_INVALID; str++)
    2508:	b49f 0006 d000      	0xd0000006b49f
                    state = CORE_S2;
    250e:	0006                	c.slli	zero,0x1
    2510:	0300                	addi	s0,sp,384
    2512:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    2514:	9fff                	0x9fff
    2516:	0700                	addi	s0,sp,896
    enum CORE_STATE state = CORE_START;
    2518:	0000                	unimp
    251a:	0714                	addi	a3,sp,896
    251c:	0000                	unimp
    251e:	ff090003          	lb	zero,-16(s2)
                    state = CORE_S1;
    2522:	d09f 000a 6400      	0x6400000ad09f
        if (NEXT_SYMBOL == ',') /* end of this input */
    2528:	0300000b          	0x300000b
    252c:	0900                	addi	s0,sp,144
    252e:	9fff                	0x9fff
    2530:	0b78                	addi	a4,sp,412
    2532:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2534:	0bd0                	addi	a2,sp,468
    2536:	0000                	unimp
                    state = CORE_FLOAT;
    2538:	ff090003          	lb	zero,-16(s2)
    253c:	989f 000c cc00      	0xcc00000c989f
        if (NEXT_SYMBOL == ',') /* end of this input */
    2542:	000c                	0xc
    2544:	0200                	addi	s0,sp,256
    2546:	3400                	fld	fs0,40(s0)
    2548:	cc9f 000c 0400      	0x400000ccc9f
{
    254e:	000d                	c.nop	3
    2550:	0200                	addi	s0,sp,256
    2552:	3100                	fld	fs0,32(a0)
    2554:	049f 000d 3800      	0x3800000d049f
    255a:	000d                	c.nop	3
    255c:	0200                	addi	s0,sp,256
    255e:	3000                	fld	fs0,32(s0)
    2560:	009f 0000 0000      	0x9f
    2566:	0000                	unimp
    2568:	7c00                	flw	fs0,56(s0)
    256a:	0000                	unimp
    256c:	d400                	sw	s0,40(s0)
    256e:	0004                	0x4
    2570:	0200                	addi	s0,sp,256
    2572:	3000                	fld	fs0,32(s0)
    2574:	d49f 0004 0800      	0x8000004d49f
    while (*p != 0)
    257a:	0005                	c.nop	1
    257c:	0100                	addi	s0,sp,128
    257e:	6b00                	flw	fs0,16(a4)
    2580:	0510                	addi	a2,sp,640
    2582:	0000                	unimp
    ee_u8 *p = memblock;
    2584:	05e4                	addi	s1,sp,716
    2586:	0000                	unimp
    for (i = 0; i < NUM_CORE_STATES; i++)
    2588:	0001                	nop
    258a:	0005e46b          	0x5e46b
    258e:	d000                	sw	s0,32(s0)
    2590:	0006                	c.slli	zero,0x1
    2592:	0200                	addi	s0,sp,256
    2594:	3000                	fld	fs0,32(s0)
    2596:	d09f 0006 0000      	0x6d09f
    259c:	01000007          	0x1000007
    25a0:	6b00                	flw	fs0,16(a4)
    25a2:	0700                	addi	s0,sp,896
    25a4:	0000                	unimp
    25a6:	0714                	addi	a3,sp,896
    25a8:	0000                	unimp
    25aa:	0002                	c.slli64	zero
    25ac:	9f30                	0x9f30
    25ae:	0788                	addi	a0,sp,960
    25b0:	0000                	unimp
    25b2:	0814                	addi	a3,sp,16
    25b4:	0000                	unimp
    25b6:	0001                	nop
    25b8:	a058                	fsd	fa4,128(s0)
    25ba:	0008                	0x8
    25bc:	8000                	0x8000
    25be:	000a                	c.slli	zero,0x2
    25c0:	0100                	addi	s0,sp,128
    25c2:	5800                	lw	s0,48(s0)
{
    25c4:	0ad0                	addi	a2,sp,340
    25c6:	0000                	unimp
    25c8:	0b64                	addi	s1,sp,412
    25ca:	0000                	unimp
    25cc:	0002                	c.slli64	zero
    25ce:	9f30                	0x9f30
    25d0:	0b64                	addi	s1,sp,412
    25d2:	0000                	unimp
    25d4:	0b78                	addi	a4,sp,412
    25d6:	0000                	unimp
    while (*p != 0)
    25d8:	0001                	nop
    25da:	7858                	flw	fa4,52(s0)
    25dc:	d000000b          	0xd000000b
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    25e0:	0200000b          	0x200000b
    25e4:	3000                	fld	fs0,32(s0)
    25e6:	d09f 000b 0800      	0x800000bd09f
    25ec:	000c                	0xc
    25ee:	0100                	addi	s0,sp,128
        final_counts[fstate]++;
    25f0:	5800                	lw	s0,48(s0)
    25f2:	0c74                	addi	a3,sp,540
    25f4:	0000                	unimp
    25f6:	0c88                	addi	a0,sp,592
    25f8:	0000                	unimp
    25fa:	0001                	nop
    while (*p != 0)
    25fc:	8858                	0x8858
    25fe:	000c                	0xc
        final_counts[fstate]++;
    2600:	8c00                	0x8c00
    2602:	000c                	0xc
    while (*p != 0)
    2604:	0300                	addi	s0,sp,384
    2606:	7800                	flw	fs0,48(s0)
        final_counts[fstate]++;
    2608:	9f7f                	0x9f7f
    260a:	0c8c                	addi	a1,sp,592
    260c:	0000                	unimp
    260e:	0c98                	addi	a4,sp,592
    while (*p != 0)
    2610:	0000                	unimp
    2612:	0001                	nop
    p = memblock;
    2614:	9858                	0x9858
    2616:	000c                	0xc
    while (p < (memblock + blksize))
    2618:	4000                	lw	s0,0(s0)
    261a:	000d                	c.nop	3
    261c:	0200                	addi	s0,sp,256
    261e:	3000                	fld	fs0,32(s0)
    2620:	009f 0000 0000      	0x9f
        if (*p != ',')
    2626:	0000                	unimp
{
    2628:	7c00                	flw	fs0,56(s0)
    262a:	0000                	unimp
            *p ^= (ee_u8)seed1;
    262c:	0c00                	addi	s0,sp,528
    262e:	0004                	0x4
        if (*p != ',')
    2630:	0200                	addi	s0,sp,256
    2632:	3000                	fld	fs0,32(s0)
            *p ^= (ee_u8)seed1;
    2634:	0c9f 0004 1800      	0x180000040c9f
        p += step;
    263a:	0004                	0x4
    263c:	0100                	addi	s0,sp,128
    263e:	5a00                	lw	s0,48(a2)
    2640:	0420                	addi	s0,sp,520
    2642:	0000                	unimp
    while (p < (memblock + blksize))
    2644:	042c                	addi	a1,sp,520
    2646:	0000                	unimp
    2648:	0001                	nop
    264a:	345a                	fld	fs0,432(sp)
            *p ^= (ee_u8)seed1;
    264c:	0004                	0x4
    264e:	3c00                	fld	fs0,56(s0)
        if (*p != ',')
    2650:	0004                	0x4
    2652:	0100                	addi	s0,sp,128
        p += step;
    2654:	5a00                	lw	s0,48(a2)
    2656:	0450                	addi	a2,sp,516
    2658:	0000                	unimp
    265a:	0474                	addi	a3,sp,524
    while (p < (memblock + blksize))
    265c:	0000                	unimp
    265e:	0001                	nop
    while (*p != 0)
    2660:	e45a                	fsw	fs6,8(sp)
    2662:	0005                	c.nop	1
    p = memblock;
    2664:	6800                	flw	fs0,16(s0)
    2666:	0006                	c.slli	zero,0x1
    while (*p != 0)
    2668:	0200                	addi	s0,sp,256
    266a:	3000                	fld	fs0,32(s0)
    266c:	689f 0006 8400      	0x84000006689f
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2672:	0006                	c.slli	zero,0x1
    2674:	0100                	addi	s0,sp,128
    2676:	5a00                	lw	s0,48(a2)
    2678:	06b4                	addi	a3,sp,840
    267a:	0000                	unimp
    267c:	06d0                	addi	a2,sp,836
    267e:	0000                	unimp
        final_counts[fstate]++;
    2680:	0002                	c.slli64	zero
    2682:	9f30                	0x9f30
    2684:	0700                	addi	s0,sp,896
    2686:	0000                	unimp
    2688:	0714                	addi	a3,sp,896
    268a:	0000                	unimp
    while (*p != 0)
    268c:	0001                	nop
    268e:	d05a                	sw	s6,32(sp)
        final_counts[fstate]++;
    2690:	000a                	c.slli	zero,0x2
    2692:	6400                	flw	fs0,8(s0)
    while (*p != 0)
    2694:	0200000b          	0x200000b
        final_counts[fstate]++;
    2698:	3000                	fld	fs0,32(s0)
    269a:	789f 000b d000      	0xd000000b789f
    while (*p != 0)
    26a0:	0200000b          	0x200000b
    p = memblock;
    26a4:	3000                	fld	fs0,32(s0)
    26a6:	989f 000c 9c00      	0x9c00000c989f
        if (*p != ',')
    26ac:	000c                	0xc
    26ae:	0100                	addi	s0,sp,128
    26b0:	5a00                	lw	s0,48(a2)
    26b2:	0ccc                	addi	a1,sp,596
            *p ^= (ee_u8)seed2;
    26b4:	0000                	unimp
    26b6:	0cd0                	addi	a2,sp,596
        if (*p != ',')
    26b8:	0000                	unimp
    26ba:	0001                	nop
            *p ^= (ee_u8)seed2;
    26bc:	045a                	slli	s0,s0,0x16
    26be:	000d                	c.nop	3
        p += step;
    26c0:	0800                	addi	s0,sp,16
    26c2:	000d                	c.nop	3
    26c4:	0100                	addi	s0,sp,128
    26c6:	5a00                	lw	s0,48(a2)
	...
    while (p < (memblock + blksize))
    26d0:	03f8                	addi	a4,sp,460
    26d2:	0000                	unimp
    26d4:	03fc                	addi	a5,sp,460
    26d6:	0000                	unimp
        crc = crcu32(final_counts[i], crc);
    26d8:	0001                	nop
    26da:	fc5a                	fsw	fs6,56(sp)
    26dc:	e4000003          	lb	zero,-448(zero) # fffffe40 <__freertos_irq_stack_top+0xfefefe40>
    26e0:	0005                	c.nop	1
    26e2:	0100                	addi	s0,sp,128
    26e4:	6400                	flw	fs0,8(s0)
    26e6:	0668                	addi	a0,sp,780
    26e8:	0000                	unimp
    26ea:	06b4                	addi	a3,sp,840
        crc = crcu32(track_counts[i], crc);
    26ec:	0000                	unimp
    26ee:	0001                	nop
    26f0:	d064                	sw	s1,100(s0)
    26f2:	0006                	c.slli	zero,0x1
    26f4:	ac00                	fsd	fs0,24(s0)
    26f6:	000a                	c.slli	zero,0x2
    26f8:	0100                	addi	s0,sp,128
    26fa:	6400                	flw	fs0,8(s0)
    26fc:	0b64                	addi	s1,sp,412
    26fe:	0000                	unimp
    2700:	0b78                	addi	a4,sp,412
    2702:	0000                	unimp
    for (i = 0; i < NUM_CORE_STATES; i++)
    2704:	0001                	nop
    2706:	d064                	sw	s1,100(s0)
}
    2708:	4000000b          	0x4000000b
    270c:	000d                	c.nop	3
    270e:	0100                	addi	s0,sp,128
    2710:	6400                	flw	fs0,8(s0)
	...
    271a:	0ad0                	addi	a2,sp,340
    271c:	0000                	unimp
    271e:	0aec                	addi	a1,sp,348
    2720:	0000                	unimp
    2722:	0002                	c.slli64	zero
    2724:	9f30                	0x9f30
    2726:	0aec                	addi	a1,sp,348
    2728:	0000                	unimp
    272a:	0af8                	addi	a4,sp,348
    272c:	0000                	unimp
    272e:	0002                	c.slli64	zero
    2730:	9f31                	0x9f31
    2732:	0af8                	addi	a4,sp,348
        p += step;
    2734:	0000                	unimp
    2736:	0b14                	addi	a3,sp,400
    2738:	0000                	unimp
    273a:	0002                	c.slli64	zero
    while (p < (memblock + blksize))
    273c:	9f30                	0x9f30
    273e:	0b14                	addi	a3,sp,400
    2740:	0000                	unimp
    2742:	0b1c                	addi	a5,sp,400
    while (p < (memblock + blksize))
    2744:	0000                	unimp
    2746:	0002                	c.slli64	zero
    2748:	9f31                	0x9f31
    274a:	0b1c                	addi	a5,sp,400
    274c:	0000                	unimp
    274e:	0b58                	addi	a4,sp,404
    while (*p != 0)
    2750:	0000                	unimp
    2752:	0002                	c.slli64	zero
    2754:	9f30                	0x9f30
    2756:	0b58                	addi	a4,sp,404
    switch (i)
    2758:	0000                	unimp
    275a:	0b64                	addi	s1,sp,412
    275c:	0000                	unimp
    275e:	0002                	c.slli64	zero
    2760:	9f31                	0x9f31
	...
    276a:	0288                	addi	a0,sp,320
    276c:	0000                	unimp
    276e:	0368                	addi	a0,sp,396
    2770:	0000                	unimp
    2772:	000a                	c.slli	zero,0x2
    2774:	089e                	slli	a7,a7,0x7
	...
            retval = seed5_volatile;
    277e:	0368                	addi	a0,sp,396
            break;
    2780:	0000                	unimp
    2782:	03b0                	addi	a2,sp,456
            retval = seed1_volatile;
    2784:	0000                	unimp
    2786:	0006                	c.slli	zero,0x1
    2788:	9366                	add	t1,t1,s9
    278a:	6704                	flw	fs1,8(a4)
            break;
    278c:	0b780493          	addi	s1,a6,183
            retval = seed2_volatile;
    2790:	0000                	unimp
    2792:	0b8c                	addi	a1,sp,464
    2794:	0000                	unimp
    2796:	000a                	c.slli	zero,0x2
            break;
    2798:	089e                	slli	a7,a7,0x7
	...
            retval = seed4_volatile;
    27aa:	0388                	addi	a0,sp,448
    27ac:	0000                	unimp
    27ae:	0390                	addi	a2,sp,448
            break;
    27b0:	0000                	unimp
    27b2:	0001                	nop
            retval = 0;
    27b4:	905a                	c.add	zero,s6
    27b6:	9b000003          	lb	zero,-1616(zero) # fffff9b0 <__freertos_irq_stack_top+0xfefef9b0>
}
    27ba:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27be:	5b00                	lw	s0,48(a4)
	...
        data >>= 1;
    27c8:	02e4                	addi	s1,sp,332
    27ca:	0000                	unimp
        if (x16 == 1)
    27cc:	0340                	addi	s0,sp,388
    27ce:	0000                	unimp
    27d0:	0004                	0x4
    27d2:	ac91                	j	2a26 <crcu16+0x26a>
            crc |= 0x8000;
    27d4:	0b789f6f          	jal	t5,8c08a <_data_lma+0x80f12>
    27d8:	0000                	unimp
    27da:	0b8c                	addi	a1,sp,464
    27dc:	0000                	unimp
    27de:	0004                	0x4
    27e0:	ac91                	j	2a34 <crcu16+0x278>
    27e2:	00009f6f          	jal	t5,b7e2 <_data_lma+0x66a>
    27e6:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27e8:	0000                	unimp
    27ea:	0000                	unimp
        if (x16 == 1)
    27ec:	02f0                	addi	a2,sp,332
    27ee:	0000                	unimp
    27f0:	02f4                	addi	a3,sp,332
    27f2:	0000                	unimp
        data >>= 1;
    27f4:	0002                	c.slli64	zero
    27f6:	9f30                	0x9f30
        if (x16 == 1)
    27f8:	02f4                	addi	a3,sp,332
    27fa:	0000                	unimp
            crc |= 0x8000;
    27fc:	0340                	addi	s0,sp,388
    27fe:	0000                	unimp
    2800:	0001                	nop
    2802:	7858                	flw	fa4,52(s0)
    2804:	7c00000b          	0x7c00000b
    2808:	0200000b          	0x200000b
    280c:	3000                	fld	fs0,32(s0)
    280e:	7c9f 000b 8c00      	0x8c00000b7c9f
        if (x16 == 1)
    2814:	0200000b          	0x200000b
        data >>= 1;
    2818:	3100                	fld	fs0,32(a0)
    281a:	009f 0000 0000      	0x9f
        if (x16 == 1)
    2820:	0000                	unimp
    2822:	0400                	addi	s0,sp,512
            crc |= 0x8000;
    2824:	0f000003          	lb	zero,240(zero) # f0 <main+0x74>
    2828:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    282c:	5a00                	lw	s0,48(a2)
    282e:	0324                	addi	s1,sp,392
    2830:	0000                	unimp
    2832:	0000032f          	0x32f
    2836:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2838:	005a                	c.slli	zero,0x16
    283a:	0000                	unimp
        if (x16 == 1)
    283c:	0000                	unimp
    283e:	0000                	unimp
        data >>= 1;
    2840:	e400                	fsw	fs0,8(s0)
    2842:	0002                	c.slli64	zero
        if (x16 == 1)
    2844:	b000                	fsd	fs0,32(s0)
    2846:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    284a:	9100                	0x9100
            crc |= 0x8000;
    284c:	6fac                	flw	fa1,88(a5)
    284e:	789f 000b 8c00      	0x8c00000b789f
    2854:	0400000b          	0x400000b
    2858:	9100                	0x9100
    285a:	6fac                	flw	fa1,88(a5)
    285c:	009f 0000 0000      	0x9f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2862:	0000                	unimp
        if (x16 == 1)
    2864:	e800                	fsw	fs0,16(s0)
    2866:	0002                	c.slli64	zero
        data >>= 1;
    2868:	4000                	lw	s0,0(s0)
    286a:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
        if (x16 == 1)
    286e:	6200                	flw	fs0,0(a2)
    2870:	0b78                	addi	a4,sp,412
    2872:	0000                	unimp
            crc |= 0x8000;
    2874:	0b8c                	addi	a1,sp,464
    2876:	0000                	unimp
    2878:	0001                	nop
    287a:	0062                	c.slli	zero,0x18
    287c:	0000                	unimp
    287e:	0000                	unimp
    2880:	0000                	unimp
    2882:	8c00                	0x8c00
    2884:	0016                	c.slli	zero,0x5
    2886:	b800                	fsd	fs0,48(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2888:	0016                	c.slli	zero,0x5
    288a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    288c:	5a00                	lw	s0,48(a2)
    288e:	16b8                	addi	a4,sp,872
        data >>= 1;
    2890:	0000                	unimp
    2892:	170c                	addi	a1,sp,928
        if (x16 == 1)
    2894:	0000                	unimp
    2896:	0001                	nop
    2898:	0c58                	addi	a4,sp,532
    289a:	20000017          	auipc	zero,0x20000
            crc |= 0x8000;
    289e:	04000017          	auipc	zero,0x4000
    28a2:	f300                	fsw	fs0,32(a4)
    28a4:	5a01                	li	s4,-32
    28a6:	209f 0017 3400      	0x34000017209f
    28ac:	01000017          	auipc	zero,0x1000
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28b0:	5800                	lw	s0,48(s0)
	...
        data >>= 1;
    28ba:	16b0                	addi	a2,sp,872
        if (x16 == 1)
    28bc:	0000                	unimp
    28be:	16b8                	addi	a4,sp,872
    28c0:	0000                	unimp
    28c2:	0002                	c.slli64	zero
            crc |= 0x8000;
    28c4:	9f30                	0x9f30
    28c6:	16b8                	addi	a4,sp,872
    28c8:	0000                	unimp
    28ca:	1704                	addi	s1,sp,928
    28cc:	0000                	unimp
    28ce:	0001                	nop
    28d0:	2059                	jal	2956 <crcu16+0x19a>
    28d2:	24000017          	auipc	zero,0x24000
    28d6:	02000017          	auipc	zero,0x2000
        if (x16 == 1)
    28da:	3000                	fld	fs0,32(s0)
    28dc:	249f 0017 3400      	0x34000017249f
    28e2:	02000017          	auipc	zero,0x2000
            crc |= 0x8000;
    28e6:	3100                	fld	fs0,32(a0)
    28e8:	009f 0000 0000      	0x9f
    28ee:	0000                	unimp
    28f0:	c800                	sw	s0,16(s0)
    28f2:	0016                	c.slli	zero,0x5
    28f4:	d300                	sw	s0,32(a4)
    28f6:	0016                	c.slli	zero,0x5
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28f8:	0100                	addi	s0,sp,128
    28fa:	5a00                	lw	s0,48(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28fc:	16e8                	addi	a0,sp,876
    28fe:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2900:	000016f3          	csrrw	a3,ustatus,zero
        if (x16 == 1)
    2904:	0001                	nop
    2906:	005a                	c.slli	zero,0x16
        data >>= 1;
    2908:	0000                	unimp
    290a:	0000                	unimp
        if (x16 == 1)
    290c:	0000                	unimp
    290e:	b000                	fsd	fs0,32(s0)
    2910:	0016                	c.slli	zero,0x5
    2912:	b800                	fsd	fs0,48(s0)
            crc |= 0x8000;
    2914:	0016                	c.slli	zero,0x5
    2916:	0100                	addi	s0,sp,128
    2918:	5a00                	lw	s0,48(a2)
    291a:	16b8                	addi	a4,sp,872
    291c:	0000                	unimp
    291e:	170c                	addi	a1,sp,928
    2920:	0000                	unimp
    2922:	0001                	nop
    2924:	0c58                	addi	a4,sp,532
    2926:	20000017          	auipc	zero,0x20000
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    292a:	04000017          	auipc	zero,0x4000
        if (x16 == 1)
    292e:	f300                	fsw	fs0,32(a4)
        data >>= 1;
    2930:	5a01                	li	s4,-32
    2932:	209f 0017 3400      	0x34000017209f
        if (x16 == 1)
    2938:	01000017          	auipc	zero,0x1000
            crc |= 0x8000;
    293c:	5800                	lw	s0,48(s0)
	...
    2946:	16b0                	addi	a2,sp,872
    2948:	0000                	unimp
    294a:	1714                	addi	a3,sp,928
    294c:	0000                	unimp
    294e:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2950:	2062                	fld	ft0,24(sp)
    2952:	34000017          	auipc	zero,0x34000
        if (x16 == 1)
    2956:	01000017          	auipc	zero,0x1000
        data >>= 1;
    295a:	6200                	flw	fs0,0(a2)
	...
            crc |= 0x8000;
    2964:	1d8c                	addi	a1,sp,752
    2966:	0000                	unimp
    2968:	1d9c                	addi	a5,sp,752
    296a:	0000                	unimp
    296c:	0001                	nop
    296e:	9c5a                	add	s8,s8,s6
    2970:	001d                	c.nop	7
    2972:	6c00                	flw	fs0,24(s0)
    2974:	001e                	c.slli	zero,0x7
    2976:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2978:	6300                	flw	fs0,0(a4)
    297a:	1e6c                	addi	a1,sp,828
        if (x16 == 1)
    297c:	0000                	unimp
    297e:	1f4c                	addi	a1,sp,948
        data >>= 1;
    2980:	0000                	unimp
    2982:	0004                	0x4
        if (x16 == 1)
    2984:	9f5a01f3          	0x9f5a01f3
    2988:	1f4c                	addi	a1,sp,948
    298a:	0000                	unimp
            crc |= 0x8000;
    298c:	1f68                	addi	a0,sp,956
    298e:	0000                	unimp
    2990:	0001                	nop
    2992:	00000063          	beqz	zero,2992 <crcu16+0x1d6>
    2996:	0000                	unimp
    2998:	0000                	unimp
    299a:	8c00                	0x8c00
    299c:	001d                	c.nop	7
    299e:	e300                	fsw	fs0,0(a4)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a0:	001d                	c.nop	7
    29a2:	0100                	addi	s0,sp,128
        if (x16 == 1)
    29a4:	5b00                	lw	s0,48(a4)
    29a6:	00001de3          	bnez	zero,31c0 <crc16+0x274>
        data >>= 1;
    29aa:	1df0                	addi	a2,sp,764
        if (x16 == 1)
    29ac:	0000                	unimp
    29ae:	0001                	nop
    29b0:	001df067          	0x1df067
            crc |= 0x8000;
    29b4:	f400                	fsw	fs0,40(s0)
    29b6:	001d                	c.nop	7
    29b8:	0300                	addi	s0,sp,384
    29ba:	8700                	0x8700
    29bc:	9f01                	0x9f01
    29be:	1df4                	addi	a3,sp,764
    29c0:	0000                	unimp
    29c2:	1f68                	addi	a0,sp,956
    29c4:	0000                	unimp
    29c6:	0004                	0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29c8:	9f5b01f3          	0x9f5b01f3
	...
        if (x16 == 1)
    29d4:	1d8c                	addi	a1,sp,752
    29d6:	0000                	unimp
    29d8:	00001de3          	bnez	zero,31f2 <timer_getms+0x16>
            crc |= 0x8000;
    29dc:	0001                	nop
    29de:	e35c                	fsw	fa5,4(a4)
    29e0:	001d                	c.nop	7
    29e2:	9400                	0x9400
    29e4:	001e                	c.slli	zero,0x7
    29e6:	0100                	addi	s0,sp,128
    29e8:	5800                	lw	s0,48(s0)
    29ea:	1ea4                	addi	s1,sp,888
    29ec:	0000                	unimp
    29ee:	1f08                	addi	a0,sp,944
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29f0:	0000                	unimp
    29f2:	0001                	nop
        if (x16 == 1)
    29f4:	4c58                	lw	a4,28(s0)
    29f6:	001f 6800 001f      	0x1f6800001f
    29fc:	0100                	addi	s0,sp,128
    29fe:	5800                	lw	s0,48(s0)
	...
            crc |= 0x8000;
    2a08:	1d8c                	addi	a1,sp,752
    2a0a:	0000                	unimp
    2a0c:	00001de3          	bnez	zero,3226 <_write+0x1a>
    2a10:	0001                	nop
    2a12:	e35d                	bnez	a4,2ab8 <crcu32+0x7c>
    2a14:	001d                	c.nop	7
    2a16:	3c00                	fld	fs0,56(s0)
        if (x16 == 1)
    2a18:	001f 0100 6900      	0x69000100001f
    2a1e:	1f3c                	addi	a5,sp,952
    2a20:	0000                	unimp
    2a22:	1f4c                	addi	a1,sp,948
            crc |= 0x8000;
    2a24:	0000                	unimp
    2a26:	0004                	0x4
    2a28:	9f5d01f3          	0x9f5d01f3
    2a2c:	1f4c                	addi	a1,sp,948
    2a2e:	0000                	unimp
    2a30:	1f68                	addi	a0,sp,956
    2a32:	0000                	unimp
    2a34:	0001                	nop
    2a36:	0069                	c.nop	26
}
    2a38:	0000                	unimp
    2a3a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a3c:	0000                	unimp
    2a3e:	e400                	fsw	fs0,8(s0)
    crc = crcu8((ee_u8)(newval), crc);
    2a40:	001d                	c.nop	7
    2a42:	2800                	fld	fs0,16(s0)
    return crcu16((ee_u16)newval, crc);
    2a44:	001e                	c.slli	zero,0x7
    2a46:	0200                	addi	s0,sp,256
        if (x16 == 1)
    2a48:	3000                	fld	fs0,32(s0)
    2a4a:	289f 001e 5000      	0x5000001e289f
        data >>= 1;
    2a50:	001e                	c.slli	zero,0x7
    2a52:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2a54:	5900                	lw	s0,48(a0)
    2a56:	1f4c                	addi	a1,sp,948
    2a58:	0000                	unimp
    2a5a:	1f68                	addi	a0,sp,956
            crc |= 0x8000;
    2a5c:	0000                	unimp
    2a5e:	ff090003          	lb	zero,-16(s2)
    2a62:	009f 0000 0000      	0x9f
    2a68:	0000                	unimp
    2a6a:	2800                	fld	fs0,16(s0)
    2a6c:	001e                	c.slli	zero,0x7
    2a6e:	5000                	lw	s0,32(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a70:	001e                	c.slli	zero,0x7
    2a72:	0b00                	addi	s0,sp,400
        if (x16 == 1)
    2a74:	f300                	fsw	fs0,32(a4)
    2a76:	5b01                	li	s6,-32
    2a78:	1c31                	addi	s8,s8,-20
    2a7a:	fc09                	bnez	s0,2994 <crcu16+0x1d8>
        data >>= 1;
    2a7c:	231a                	fld	ft6,384(sp)
    2a7e:	9f04                	0x9f04
        if (x16 == 1)
    2a80:	1f4c                	addi	a1,sp,948
    2a82:	0000                	unimp
            crc |= 0x8000;
    2a84:	1f68                	addi	a0,sp,956
    2a86:	0000                	unimp
    2a88:	01f3000b          	0x1f3000b
    2a8c:	091c315b          	0x91c315b
    2a90:	1afc                	addi	a5,sp,380
    2a92:	009f0423          	sb	s1,8(t5)
    2a96:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a98:	0000                	unimp
    2a9a:	0000                	unimp
        if (x16 == 1)
    2a9c:	4c00                	lw	s0,24(s0)
    2a9e:	001e                	c.slli	zero,0x7
        data >>= 1;
    2aa0:	3400                	fld	fs0,40(s0)
    2aa2:	001f 0100 6700      	0x67000100001f
        if (x16 == 1)
    2aa8:	1f34                	addi	a3,sp,952
    2aaa:	0000                	unimp
            crc |= 0x8000;
    2aac:	1f3c                	addi	a5,sp,952
    2aae:	0000                	unimp
    2ab0:	0002                	c.slli64	zero
    2ab2:	0889                	addi	a7,a7,2
    2ab4:	1f3c                	addi	a5,sp,952
    2ab6:	0000                	unimp
    2ab8:	1f4c                	addi	a1,sp,948
    2aba:	0000                	unimp
    2abc:	0005                	c.nop	1
    2abe:	235d01f3          	0x235d01f3
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac2:	5c08                	lw	a0,56(s0)
        if (x16 == 1)
    2ac4:	001f 6800 001f      	0x1f6800001f
        data >>= 1;
    2aca:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2acc:	6700                	flw	fs0,8(a4)
	...
            crc |= 0x8000;
    2ad6:	1de4                	addi	s1,sp,764
    2ad8:	0000                	unimp
    2ada:	1e70                	addi	a2,sp,828
    2adc:	0000                	unimp
    2ade:	0002                	c.slli64	zero
    2ae0:	9f31                	0x9f31
    2ae2:	1e70                	addi	a2,sp,828
    2ae4:	0000                	unimp
    2ae6:	1ee0                	addi	s0,sp,892
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ae8:	0000                	unimp
    2aea:	0001                	nop
        if (x16 == 1)
    2aec:	001f4c6b          	0x1f4c6b
        data >>= 1;
    2af0:	6800                	flw	fs0,16(s0)
    2af2:	001f 0200 3100      	0x31000200001f
        if (x16 == 1)
    2af8:	009f 0000 0000      	0x9f
            crc |= 0x8000;
    2afe:	0000                	unimp
    2b00:	b000                	fsd	fs0,32(s0)
    2b02:	001e                	c.slli	zero,0x7
    2b04:	b800                	fsd	fs0,48(s0)
    2b06:	001e                	c.slli	zero,0x7
    2b08:	0100                	addi	s0,sp,128
    2b0a:	5e00                	lw	s0,56(a2)
    2b0c:	1eb8                	addi	a4,sp,888
    2b0e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b10:	1ebc                	addi	a5,sp,888
    2b12:	0000                	unimp
        if (x16 == 1)
    2b14:	0006                	c.slli	zero,0x1
    2b16:	007f                	0x7f
        data >>= 1;
    2b18:	ff08                	fsw	fa0,56(a4)
    2b1a:	9f1a                	add	t5,t5,t1
        if (x16 == 1)
    2b1c:	1ebc                	addi	a5,sp,888
    2b1e:	0000                	unimp
    2b20:	1ec0                	addi	s0,sp,884
    2b22:	0000                	unimp
            crc |= 0x8000;
    2b24:	000d                	c.nop	3
    2b26:	2440008b          	0x2440008b
    2b2a:	2540                	fld	fs0,136(a0)
    2b2c:	007e                	c.slli	zero,0x1f
    2b2e:	0822                	slli	a6,a6,0x8
    2b30:	1aff                	0x1aff
    2b32:	c09f 001e cc00      	0xcc00001ec09f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b38:	001e                	c.slli	zero,0x7
    2b3a:	1800                	addi	s0,sp,48
        if (x16 == 1)
    2b3c:	8b00                	0x8b00
    2b3e:	4000                	lw	s0,0(s0)
        data >>= 1;
    2b40:	4024                	lw	s1,64(s0)
    2b42:	7825                	lui	a6,0xfffe9
        if (x16 == 1)
    2b44:	2200                	fld	fs0,0(a2)
    2b46:	2440                	fld	fs0,136(s0)
    2b48:	2540                	fld	fs0,136(a0)
    2b4a:	2440008b          	0x2440008b
            crc |= 0x8000;
    2b4e:	2540                	fld	fs0,136(a0)
    2b50:	0822                	slli	a6,a6,0x8
    2b52:	1aff                	0x1aff
    2b54:	cc9f 001e e000      	0xe000001ecc9f
    2b5a:	001e                	c.slli	zero,0x7
    2b5c:	1800                	addi	s0,sp,48
    2b5e:	8b00                	0x8b00
        if (x16 == 1)
    2b60:	407f                	0x407f
    2b62:	4024                	lw	s1,64(s0)
    2b64:	7825                	lui	a6,0xfffe9
    2b66:	2200                	fld	fs0,0(a2)
    2b68:	2440                	fld	fs0,136(s0)
    2b6a:	2540                	fld	fs0,136(a0)
            crc |= 0x8000;
    2b6c:	24407f8b          	0x24407f8b
    2b70:	2540                	fld	fs0,136(a0)
    2b72:	0822                	slli	a6,a6,0x8
    2b74:	1aff                	0x1aff
    2b76:	009f 0000 0000      	0x9f
    2b7c:	0000                	unimp
    2b7e:	e400                	fsw	fs0,8(s0)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b80:	001d                	c.nop	7
    2b82:	0800                	addi	s0,sp,16
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b84:	001e                	c.slli	zero,0x7
    2b86:	0200                	addi	s0,sp,256
        if (x16 == 1)
    2b88:	3000                	fld	fs0,32(s0)
    2b8a:	089f 001e 0c00      	0xc00001e089f
        data >>= 1;
    2b90:	001e                	c.slli	zero,0x7
    2b92:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2b94:	6200                	flw	fs0,0(a2)
    2b96:	1e0c                	addi	a1,sp,816
    2b98:	0000                	unimp
    2b9a:	1e10                	addi	a2,sp,816
            crc |= 0x8000;
    2b9c:	0000                	unimp
    2b9e:	0001                	nop
    2ba0:	1059                	c.nop	-10
    2ba2:	001e                	c.slli	zero,0x7
    2ba4:	4c00                	lw	s0,24(s0)
    2ba6:	001e                	c.slli	zero,0x7
    2ba8:	0100                	addi	s0,sp,128
    2baa:	6200                	flw	fs0,0(a2)
    2bac:	1e4c                	addi	a1,sp,820
    2bae:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb0:	1e70                	addi	a2,sp,828
    2bb2:	0000                	unimp
        if (x16 == 1)
    2bb4:	0002                	c.slli64	zero
    2bb6:	9f30                	0x9f30
        data >>= 1;
    2bb8:	1e70                	addi	a2,sp,828
    2bba:	0000                	unimp
        if (x16 == 1)
    2bbc:	1ee0                	addi	s0,sp,892
    2bbe:	0000                	unimp
    2bc0:	0001                	nop
    2bc2:	4c64                	lw	s1,92(s0)
            crc |= 0x8000;
    2bc4:	001f 6800 001f      	0x1f6800001f
    2bca:	0200                	addi	s0,sp,256
    2bcc:	3000                	fld	fs0,32(s0)
    2bce:	009f 0000 0000      	0x9f
    2bd4:	0000                	unimp
    2bd6:	e400                	fsw	fs0,8(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bd8:	001d                	c.nop	7
    2bda:	0800                	addi	s0,sp,16
        if (x16 == 1)
    2bdc:	001e                	c.slli	zero,0x7
    2bde:	0200                	addi	s0,sp,256
        data >>= 1;
    2be0:	3000                	fld	fs0,32(s0)
    2be2:	089f 001e 0c00      	0xc00001e089f
        if (x16 == 1)
    2be8:	001e                	c.slli	zero,0x7
    2bea:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2bec:	5a00                	lw	s0,48(a2)
    2bee:	1e0c                	addi	a1,sp,816
    2bf0:	0000                	unimp
    2bf2:	1e24                	addi	s1,sp,824
    2bf4:	0000                	unimp
    2bf6:	0002                	c.slli64	zero
    2bf8:	9f30                	0x9f30
    2bfa:	1e24                	addi	s1,sp,824
    2bfc:	0000                	unimp
    2bfe:	1e30                	addi	a2,sp,824
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c00:	0000                	unimp
    2c02:	0001                	nop
        if (x16 == 1)
    2c04:	705a                	flw	ft0,180(sp)
    2c06:	001e                	c.slli	zero,0x7
        data >>= 1;
    2c08:	7800                	flw	fs0,48(s0)
    2c0a:	001e                	c.slli	zero,0x7
        if (x16 == 1)
    2c0c:	0200                	addi	s0,sp,256
    2c0e:	3000                	fld	fs0,32(s0)
    2c10:	789f 001e c800      	0xc800001e789f
            crc |= 0x8000;
    2c16:	001e                	c.slli	zero,0x7
    2c18:	0100                	addi	s0,sp,128
    2c1a:	6600                	flw	fs0,8(a2)
    2c1c:	1ec8                	addi	a0,sp,884
    2c1e:	0000                	unimp
    2c20:	1ecc                	addi	a1,sp,884
    2c22:	0000                	unimp
    2c24:	7f860003          	lb	zero,2040(a2) # 1a3127f8 <__freertos_irq_stack_top+0x193027f8>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c28:	cc9f 001e e000      	0xe000001ecc9f
        if (x16 == 1)
    2c2e:	001e                	c.slli	zero,0x7
        data >>= 1;
    2c30:	0100                	addi	s0,sp,128
    2c32:	6600                	flw	fs0,8(a2)
        if (x16 == 1)
    2c34:	1f4c                	addi	a1,sp,948
    2c36:	0000                	unimp
    2c38:	1f68                	addi	a0,sp,956
    2c3a:	0000                	unimp
            crc |= 0x8000;
    2c3c:	0002                	c.slli64	zero
    2c3e:	9f30                	0x9f30
	...
    2c48:	1734                	addi	a3,sp,936
    2c4a:	0000                	unimp
    2c4c:	180c                	addi	a1,sp,48
    2c4e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c50:	0001                	nop
    2c52:	0c5a                	slli	s8,s8,0x16
        if (x16 == 1)
    2c54:	0018                	0x18
    2c56:	0800                	addi	s0,sp,16
        data >>= 1;
    2c58:	001d                	c.nop	7
    2c5a:	0400                	addi	s0,sp,512
        if (x16 == 1)
    2c5c:	f300                	fsw	fs0,32(a4)
    2c5e:	5a01                	li	s4,-32
    2c60:	089f 001d 1300      	0x1300001d089f
            crc |= 0x8000;
    2c66:	001d                	c.nop	7
    2c68:	0100                	addi	s0,sp,128
    2c6a:	5a00                	lw	s0,48(a2)
    2c6c:	00001d13          	slli	s10,zero,0x0
    2c70:	1d48                	addi	a0,sp,692
    2c72:	0000                	unimp
    2c74:	0004                	0x4
    2c76:	9f5a01f3          	0x9f5a01f3
	...
        data >>= 1;
    2c82:	1734                	addi	a3,sp,936
        if (x16 == 1)
    2c84:	0000                	unimp
    2c86:	1788                	addi	a0,sp,992
    2c88:	0000                	unimp
    2c8a:	0001                	nop
            crc |= 0x8000;
    2c8c:	0017885b          	0x17885b
    2c90:	f800                	fsw	fs0,48(s0)
    2c92:	001c                	0x1c
    2c94:	0300                	addi	s0,sp,384
    2c96:	9100                	0x9100
    2c98:	7fb4                	flw	fa3,120(a5)
    2c9a:	1cf8                	addi	a4,sp,636
    2c9c:	0000                	unimp
    2c9e:	1cfc                	addi	a5,sp,636
        if (x16 == 1)
    2ca0:	0000                	unimp
    2ca2:	b4720003          	lb	zero,-1209(tp) # fffffb47 <__freertos_irq_stack_top+0xfefefb47>
    2ca6:	fc7f                	0xfc7f
    2ca8:	001c                	0x1c
    2caa:	0800                	addi	s0,sp,16
            crc |= 0x8000;
    2cac:	001d                	c.nop	7
    2cae:	0300                	addi	s0,sp,384
    2cb0:	9100                	0x9100
    2cb2:	7fb4                	flw	fa3,120(a5)
    2cb4:	1d08                	addi	a0,sp,688
    2cb6:	0000                	unimp
    2cb8:	1d0c                	addi	a1,sp,688
    2cba:	0000                	unimp
    2cbc:	0001                	nop
    2cbe:	001d0c5b          	0x1d0c5b
    crc = crc16((ee_s16)(newval >> 16), crc);
    2cc2:	4800                	lw	s0,16(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cc4:	001d                	c.nop	7
    2cc6:	0300                	addi	s0,sp,384
    crc = crcu8((ee_u8)(newval), crc);
    2cc8:	9100                	0x9100
    2cca:	7fb4                	flw	fa3,120(a5)
	...
    return crcu16((ee_u16)newval, crc);
    2cd4:	1734                	addi	a3,sp,936
    2cd6:	0000                	unimp
        data >>= 1;
    2cd8:	17b8                	addi	a4,sp,1000
    2cda:	0000                	unimp
        if (x16 == 1)
    2cdc:	0001                	nop
    2cde:	b85c                	fsd	fa5,176(s0)
    2ce0:	f8000017          	auipc	zero,0xf8000
            crc |= 0x8000;
    2ce4:	001c                	0x1c
    2ce6:	0300                	addi	s0,sp,384
    2ce8:	9100                	0x9100
    2cea:	7fb8                	flw	fa4,120(a5)
    2cec:	1cf8                	addi	a4,sp,636
    2cee:	0000                	unimp
    2cf0:	1cfc                	addi	a5,sp,636
    2cf2:	0000                	unimp
    2cf4:	b8720003          	lb	zero,-1145(tp) # fffffb87 <__freertos_irq_stack_top+0xfefefb87>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cf8:	fc7f                	0xfc7f
    2cfa:	001c                	0x1c
        if (x16 == 1)
    2cfc:	0800                	addi	s0,sp,16
    2cfe:	001d                	c.nop	7
        data >>= 1;
    2d00:	0300                	addi	s0,sp,384
    2d02:	9100                	0x9100
        if (x16 == 1)
    2d04:	7fb8                	flw	fa4,120(a5)
    2d06:	1d08                	addi	a0,sp,688
    2d08:	0000                	unimp
    2d0a:	00001d13          	slli	s10,zero,0x0
            crc |= 0x8000;
    2d0e:	0001                	nop
    2d10:	135c                	addi	a5,sp,420
    2d12:	001d                	c.nop	7
    2d14:	4800                	lw	s0,16(s0)
    2d16:	001d                	c.nop	7
    2d18:	0300                	addi	s0,sp,384
    2d1a:	9100                	0x9100
    2d1c:	7fb8                	flw	fa4,120(a5)
	...
        if (x16 == 1)
    2d26:	1734                	addi	a3,sp,936
        data >>= 1;
    2d28:	0000                	unimp
    2d2a:	17b0                	addi	a2,sp,1000
        if (x16 == 1)
    2d2c:	0000                	unimp
    2d2e:	0001                	nop
    2d30:	b05d                	j	25d6 <core_bench_state+0x8a>
    2d32:	f8000017          	auipc	zero,0xf8000
            crc |= 0x8000;
    2d36:	001c                	0x1c
    2d38:	0300                	addi	s0,sp,384
    2d3a:	9100                	0x9100
    2d3c:	7f9c                	flw	fa5,56(a5)
    2d3e:	1cf8                	addi	a4,sp,636
    2d40:	0000                	unimp
    2d42:	1cfc                	addi	a5,sp,636
    2d44:	0000                	unimp
    2d46:	9c720003          	lb	zero,-1593(tp) # fffff9c7 <__freertos_irq_stack_top+0xfefef9c7>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d4a:	fc7f                	0xfc7f
        if (x16 == 1)
    2d4c:	001c                	0x1c
    2d4e:	0800                	addi	s0,sp,16
        data >>= 1;
    2d50:	001d                	c.nop	7
    2d52:	0300                	addi	s0,sp,384
        if (x16 == 1)
    2d54:	9100                	0x9100
    2d56:	7f9c                	flw	fa5,56(a5)
    2d58:	1d08                	addi	a0,sp,688
    2d5a:	0000                	unimp
            crc |= 0x8000;
    2d5c:	00001d13          	slli	s10,zero,0x0
    2d60:	0001                	nop
    2d62:	135d                	addi	t1,t1,-9
    2d64:	001d                	c.nop	7
    2d66:	4800                	lw	s0,16(s0)
    2d68:	001d                	c.nop	7
    2d6a:	0300                	addi	s0,sp,384
    2d6c:	9100                	0x9100
    2d6e:	7f9c                	flw	fa5,56(a5)
	...
        data >>= 1;
    2d78:	1734                	addi	a3,sp,936
    2d7a:	0000                	unimp
        if (x16 == 1)
    2d7c:	17b8                	addi	a4,sp,1000
    2d7e:	0000                	unimp
    2d80:	0001                	nop
    2d82:	b85e                	fsd	fs7,48(sp)
            crc |= 0x8000;
    2d84:	08000017          	auipc	zero,0x8000
    2d88:	001d                	c.nop	7
    2d8a:	0400                	addi	s0,sp,512
    2d8c:	f300                	fsw	fs0,32(a4)
    2d8e:	5e01                	li	t3,-32
    2d90:	089f 001d 1300      	0x1300001d089f
    2d96:	001d                	c.nop	7
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d98:	0100                	addi	s0,sp,128
    2d9a:	5e00                	lw	s0,56(a2)
        if (x16 == 1)
    2d9c:	00001d13          	slli	s10,zero,0x0
        data >>= 1;
    2da0:	1d48                	addi	a0,sp,692
    2da2:	0000                	unimp
        if (x16 == 1)
    2da4:	0004                	0x4
    2da6:	9f5e01f3          	0x9f5e01f3
	...
            crc |= 0x8000;
    2db2:	177c                	addi	a5,sp,940
    2db4:	0000                	unimp
    2db6:	190c                	addi	a1,sp,176
    2db8:	0000                	unimp
    2dba:	0002                	c.slli64	zero
    2dbc:	9f30                	0x9f30
    2dbe:	190c                	addi	a1,sp,176
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2dc0:	0000                	unimp
    2dc2:	19fc                	addi	a5,sp,252
        if (x16 == 1)
    2dc4:	0000                	unimp
    2dc6:	0001                	nop
        data >>= 1;
    2dc8:	0019fc6b          	0x19fc6b
        if (x16 == 1)
    2dcc:	8000                	0x8000
    2dce:	001c                	0x1c
    2dd0:	0300                	addi	s0,sp,384
    2dd2:	9100                	0x9100
            crc |= 0x8000;
    2dd4:	7fbc                	flw	fa5,120(a5)
    2dd6:	1c80                	addi	s0,sp,624
    2dd8:	0000                	unimp
    2dda:	1cc4                	addi	s1,sp,628
    2ddc:	0000                	unimp
    2dde:	0001                	nop
    2de0:	fc5a                	fsw	fs6,56(sp)
    2de2:	001c                	0x1c
    2de4:	0800                	addi	s0,sp,16
    2de6:	001d                	c.nop	7
        if (x16 == 1)
    2de8:	0300                	addi	s0,sp,384
    2dea:	9100                	0x9100
    2dec:	7fbc                	flw	fa5,120(a5)
    2dee:	1d08                	addi	a0,sp,688
    2df0:	0000                	unimp
    2df2:	1d14                	addi	a3,sp,688
            crc |= 0x8000;
    2df4:	0000                	unimp
    2df6:	0002                	c.slli64	zero
    2df8:	9f30                	0x9f30
    2dfa:	1d14                	addi	a3,sp,688
    2dfc:	0000                	unimp
    2dfe:	1d1c                	addi	a5,sp,688
    2e00:	0000                	unimp
    2e02:	0001                	nop
    2e04:	245a                	fld	fs0,400(sp)
    2e06:	001d                	c.nop	7
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e08:	2c00                	fld	fs0,24(s0)
    2e0a:	001d                	c.nop	7
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e0c:	0100                	addi	s0,sp,128
    2e0e:	5a00                	lw	s0,48(a2)
        if (x16 == 1)
    2e10:	1d34                	addi	a3,sp,696
    2e12:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e14:	1d3c                	addi	a5,sp,696
    2e16:	0000                	unimp
        data >>= 1;
    2e18:	0001                	nop
    2e1a:	445a                	lw	s0,148(sp)
        if (x16 == 1)
    2e1c:	001d                	c.nop	7
    2e1e:	4800                	lw	s0,16(s0)
    2e20:	001d                	c.nop	7
    2e22:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2e24:	5a00                	lw	s0,48(a2)
	...
    2e2e:	1780                	addi	s0,sp,992
    2e30:	0000                	unimp
    2e32:	1cc0                	addi	s0,sp,628
    2e34:	0000                	unimp
    2e36:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e38:	fc58                	fsw	fa4,60(s0)
    2e3a:	001c                	0x1c
        if (x16 == 1)
    2e3c:	4800                	lw	s0,16(s0)
    2e3e:	001d                	c.nop	7
        data >>= 1;
    2e40:	0100                	addi	s0,sp,128
    2e42:	5800                	lw	s0,48(s0)
	...
            crc |= 0x8000;
    2e4c:	1780                	addi	s0,sp,992
    2e4e:	0000                	unimp
    2e50:	17b8                	addi	a4,sp,1000
    2e52:	0000                	unimp
    2e54:	0001                	nop
    2e56:	b85e                	fsd	fs7,48(sp)
    2e58:	70000017          	auipc	zero,0x70000
    2e5c:	0018                	0x18
    2e5e:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e60:	6400                	flw	fs0,8(s0)
    2e62:	1d08                	addi	a0,sp,688
        if (x16 == 1)
    2e64:	0000                	unimp
    2e66:	00001d13          	slli	s10,zero,0x0
        data >>= 1;
    2e6a:	0001                	nop
        if (x16 == 1)
    2e6c:	005e                	c.slli	zero,0x17
    2e6e:	0000                	unimp
    2e70:	0000                	unimp
    2e72:	0000                	unimp
            crc |= 0x8000;
    2e74:	8000                	0x8000
    2e76:	b8000017          	auipc	zero,0xb8000
    2e7a:	01000017          	auipc	zero,0x1000
    2e7e:	5c00                	lw	s0,56(s0)
    2e80:	17b8                	addi	a4,sp,1000
    2e82:	0000                	unimp
    2e84:	1cf8                	addi	a4,sp,636
    2e86:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e88:	b8910003          	lb	zero,-1143(sp)
        if (x16 == 1)
    2e8c:	f87f                	0xf87f
    2e8e:	001c                	0x1c
        data >>= 1;
    2e90:	fc00                	fsw	fs0,56(s0)
    2e92:	001c                	0x1c
        if (x16 == 1)
    2e94:	0300                	addi	s0,sp,384
    2e96:	7200                	flw	fs0,32(a2)
    2e98:	7fb8                	flw	fa4,120(a5)
    2e9a:	1cfc                	addi	a5,sp,636
            crc |= 0x8000;
    2e9c:	0000                	unimp
    2e9e:	1d08                	addi	a0,sp,688
    2ea0:	0000                	unimp
    2ea2:	b8910003          	lb	zero,-1143(sp)
    2ea6:	087f                	0x87f
    2ea8:	001d                	c.nop	7
    2eaa:	1300                	addi	s0,sp,416
    2eac:	001d                	c.nop	7
    2eae:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb0:	5c00                	lw	s0,56(s0)
    2eb2:	00001d13          	slli	s10,zero,0x0
        if (x16 == 1)
    2eb6:	1d48                	addi	a0,sp,692
        data >>= 1;
    2eb8:	0000                	unimp
    2eba:	b8910003          	lb	zero,-1143(sp)
        if (x16 == 1)
    2ebe:	007f                	0x7f
    2ec0:	0000                	unimp
    2ec2:	0000                	unimp
            crc |= 0x8000;
    2ec4:	0000                	unimp
    2ec6:	8000                	0x8000
    2ec8:	0c000017          	auipc	zero,0xc000
    2ecc:	0018                	0x18
    2ece:	0100                	addi	s0,sp,128
    2ed0:	5a00                	lw	s0,48(a2)
    2ed2:	180c                	addi	a1,sp,48
    2ed4:	0000                	unimp
    2ed6:	1d08                	addi	a0,sp,688
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ed8:	0000                	unimp
    2eda:	0004                	0x4
        if (x16 == 1)
    2edc:	9f5a01f3          	0x9f5a01f3
        data >>= 1;
    2ee0:	1d08                	addi	a0,sp,688
    2ee2:	0000                	unimp
        if (x16 == 1)
    2ee4:	00001d13          	slli	s10,zero,0x0
    2ee8:	0001                	nop
    2eea:	135a                	slli	t1,t1,0x36
            crc |= 0x8000;
    2eec:	001d                	c.nop	7
    2eee:	4800                	lw	s0,16(s0)
    2ef0:	001d                	c.nop	7
    2ef2:	0400                	addi	s0,sp,512
    2ef4:	f300                	fsw	fs0,32(a4)
    2ef6:	5a01                	li	s4,-32
    2ef8:	009f 0000 0000      	0x9f
    2efe:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f00:	8000                	0x8000
    2f02:	b8000017          	auipc	zero,0xb8000
        if (x16 == 1)
    2f06:	02000017          	auipc	zero,0x2000
        data >>= 1;
    2f0a:	3000                	fld	fs0,32(s0)
        if (x16 == 1)
    2f0c:	b89f 0017 d800      	0xd8000017b89f
    2f12:	01000017          	auipc	zero,0x1000
            crc |= 0x8000;
    2f16:	6600                	flw	fs0,8(a2)
    2f18:	17d8                	addi	a4,sp,996
    2f1a:	0000                	unimp
    2f1c:	1cb8                	addi	a4,sp,632
    2f1e:	0000                	unimp
    2f20:	0001                	nop
    2f22:	fc68                	fsw	fa0,124(s0)
    2f24:	001c                	0x1c
    2f26:	0800                	addi	s0,sp,16
        if (x16 == 1)
    2f28:	001d                	c.nop	7
    2f2a:	0100                	addi	s0,sp,128
    2f2c:	6800                	flw	fs0,16(s0)
    2f2e:	1d08                	addi	a0,sp,688
    2f30:	0000                	unimp
    2f32:	1d48                	addi	a0,sp,692
            crc |= 0x8000;
    2f34:	0000                	unimp
    2f36:	0002                	c.slli64	zero
    2f38:	9f30                	0x9f30
	...
    2f42:	17b8                	addi	a4,sp,1000
    2f44:	0000                	unimp
    2f46:	17c0                	addi	s0,sp,996
}
    2f48:	0000                	unimp
    2f4a:	0002                	c.slli64	zero
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f4c:	9f30                	0x9f30
	...
    return crcu16((ee_u16)newval, crc);
    2f56:	180c                	addi	a1,sp,48
        if (x16 == 1)
    2f58:	0000                	unimp
    2f5a:	184c                	addi	a1,sp,52
    return crcu16((ee_u16)newval, crc);
    2f5c:	0000                	unimp
    2f5e:	ac910003          	lb	zero,-1335(sp)
        data >>= 1;
    2f62:	4c7f                	0x4c7f
        if (x16 == 1)
    2f64:	0018                	0x18
    2f66:	6400                	flw	fs0,8(s0)
    2f68:	0018                	0x18
    2f6a:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2f6c:	5e00                	lw	s0,56(a2)
    2f6e:	1864                	addi	s1,sp,60
    2f70:	0000                	unimp
    2f72:	1a00                	addi	s0,sp,304
    2f74:	0000                	unimp
    2f76:	ac910007          	0xac910007
    2f7a:	067f                	0x67f
    2f7c:	089f0123          	sb	s1,130(t5)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f80:	001d                	c.nop	7
    2f82:	4800                	lw	s0,16(s0)
        if (x16 == 1)
    2f84:	001d                	c.nop	7
    2f86:	0200                	addi	s0,sp,256
    2f88:	3000                	fld	fs0,32(s0)
    2f8a:	009f 0000 0000      	0x9f
    2f90:	0000                	unimp
    2f92:	0c00                	addi	s0,sp,528
            crc |= 0x8000;
    2f94:	0018                	0x18
    2f96:	1800                	addi	s0,sp,48
    2f98:	0018                	0x18
    2f9a:	0200                	addi	s0,sp,256
    2f9c:	3000                	fld	fs0,32(s0)
    2f9e:	009f 0000 0000      	0x9f
    2fa4:	0000                	unimp
    2fa6:	8400                	0x8400
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fa8:	0018                	0x18
    2faa:	d400                	sw	s0,40(s0)
        if (x16 == 1)
    2fac:	0018                	0x18
    2fae:	0100                	addi	s0,sp,128
        data >>= 1;
    2fb0:	5b00                	lw	s0,48(a4)
    2fb2:	18d4                	addi	a3,sp,116
        if (x16 == 1)
    2fb4:	0000                	unimp
    2fb6:	18d8                	addi	a4,sp,116
    2fb8:	0000                	unimp
    2fba:	0002                	c.slli64	zero
            crc |= 0x8000;
    2fbc:	9f30                	0x9f30
    2fbe:	18d8                	addi	a4,sp,116
    2fc0:	0000                	unimp
    2fc2:	18f4                	addi	a3,sp,124
    2fc4:	0000                	unimp
    2fc6:	0001                	nop
    2fc8:	0000005b          	0x5b
    2fcc:	0000                	unimp
    2fce:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fd0:	8400                	0x8400
    2fd2:	0018                	0x18
        if (x16 == 1)
    2fd4:	9400                	0x9400
    2fd6:	0018                	0x18
        data >>= 1;
    2fd8:	0100                	addi	s0,sp,128
    2fda:	5e00                	lw	s0,56(a2)
        if (x16 == 1)
    2fdc:	18a0                	addi	s0,sp,120
    2fde:	0000                	unimp
    2fe0:	18a8                	addi	a0,sp,120
    2fe2:	0000                	unimp
            crc |= 0x8000;
    2fe4:	0001                	nop
    2fe6:	a85d                	j	309c <crc16+0x150>
    2fe8:	0018                	0x18
    2fea:	b800                	fsd	fs0,48(s0)
    2fec:	0018                	0x18
    2fee:	0100                	addi	s0,sp,128
    2ff0:	5e00                	lw	s0,56(a2)
    2ff2:	18d8                	addi	a4,sp,116
    2ff4:	0000                	unimp
    2ff6:	18e4                	addi	s1,sp,124
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ff8:	0000                	unimp
    2ffa:	0001                	nop
        if (x16 == 1)
    2ffc:	005d                	c.nop	23
    2ffe:	0000                	unimp
        data >>= 1;
    3000:	0000                	unimp
    3002:	0000                	unimp
        if (x16 == 1)
    3004:	9400                	0x9400
    3006:	0018                	0x18
    3008:	a800                	fsd	fs0,16(s0)
    300a:	0018                	0x18
            crc |= 0x8000;
    300c:	0100                	addi	s0,sp,128
    300e:	5d00                	lw	s0,56(a0)
    3010:	18ac                	addi	a1,sp,120
    3012:	0000                	unimp
    3014:	18f4                	addi	a3,sp,124
    3016:	0000                	unimp
    3018:	0001                	nop
    301a:	005d                	c.nop	23
    301c:	0000                	unimp
    301e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3020:	0000                	unimp
    3022:	8400                	0x8400
        if (x16 == 1)
    3024:	0018                	0x18
    3026:	9400                	0x9400
        data >>= 1;
    3028:	0018                	0x18
    302a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    302c:	5a00                	lw	s0,48(a2)
    302e:	18a0                	addi	s0,sp,120
    3030:	0000                	unimp
    3032:	18b0                	addi	a2,sp,120
            crc |= 0x8000;
    3034:	0000                	unimp
    3036:	0001                	nop
    3038:	d45a                	sw	s6,40(sp)
    303a:	0018                	0x18
    303c:	f400                	fsw	fs0,40(s0)
    303e:	0018                	0x18
    3040:	0100                	addi	s0,sp,128
    3042:	5a00                	lw	s0,48(a2)
	...
        if (x16 == 1)
    304c:	1884                	addi	s1,sp,112
    304e:	0000                	unimp
        data >>= 1;
    3050:	18e4                	addi	s1,sp,124
    3052:	0000                	unimp
        if (x16 == 1)
    3054:	0001                	nop
    3056:	e46c                	fsw	fa1,76(s0)
    3058:	0018                	0x18
    305a:	f400                	fsw	fs0,40(s0)
            crc |= 0x8000;
    305c:	0018                	0x18
    305e:	0100                	addi	s0,sp,128
    3060:	5c00                	lw	s0,56(s0)
	...
    306a:	1884                	addi	s1,sp,112
    306c:	0000                	unimp
    306e:	1894                	addi	a3,sp,112
        if (x16 == 1)
    3070:	0000                	unimp
    3072:	0002                	c.slli64	zero
    3074:	9f30                	0x9f30
	...
            crc |= 0x8000;
    307e:	190c                	addi	a1,sp,176
    3080:	0000                	unimp
    3082:	1cf8                	addi	a4,sp,636
    3084:	0000                	unimp
    3086:	9c910003          	lb	zero,-1591(sp)
    308a:	f87f                	0xf87f
    308c:	001c                	0x1c
    308e:	fc00                	fsw	fs0,56(s0)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    3090:	001c                	0x1c
    3092:	0300                	addi	s0,sp,384
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3094:	7200                	flw	fs0,32(a2)
    3096:	7f9c                	flw	fa5,56(a5)
        if (x16 == 1)
    3098:	1cfc                	addi	a5,sp,636
    309a:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    309c:	1d08                	addi	a0,sp,688
    309e:	0000                	unimp
        data >>= 1;
    30a0:	9c910003          	lb	zero,-1591(sp)
        if (x16 == 1)
    30a4:	147f                	0x147f
    30a6:	001d                	c.nop	7
    30a8:	4800                	lw	s0,16(s0)
    30aa:	001d                	c.nop	7
            crc |= 0x8000;
    30ac:	0300                	addi	s0,sp,384
    30ae:	9100                	0x9100
    30b0:	7f9c                	flw	fa5,56(a5)
	...
    30ba:	190c                	addi	a1,sp,176
    30bc:	0000                	unimp
    30be:	1cf8                	addi	a4,sp,636
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30c0:	0000                	unimp
    30c2:	b8910003          	lb	zero,-1143(sp)
        if (x16 == 1)
    30c6:	f87f                	0xf87f
        data >>= 1;
    30c8:	001c                	0x1c
    30ca:	fc00                	fsw	fs0,56(s0)
        if (x16 == 1)
    30cc:	001c                	0x1c
    30ce:	0300                	addi	s0,sp,384
    30d0:	7200                	flw	fs0,32(a2)
    30d2:	7fb8                	flw	fa4,120(a5)
            crc |= 0x8000;
    30d4:	1cfc                	addi	a5,sp,636
    30d6:	0000                	unimp
    30d8:	1d08                	addi	a0,sp,688
    30da:	0000                	unimp
    30dc:	b8910003          	lb	zero,-1143(sp)
    30e0:	147f                	0x147f
    30e2:	001d                	c.nop	7
    30e4:	4800                	lw	s0,16(s0)
    30e6:	001d                	c.nop	7
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30e8:	0300                	addi	s0,sp,384
    30ea:	9100                	0x9100
        if (x16 == 1)
    30ec:	7fb8                	flw	fa4,120(a5)
	...
    30f6:	190c                	addi	a1,sp,176
    30f8:	0000                	unimp
    30fa:	1cf8                	addi	a4,sp,636
            crc |= 0x8000;
    30fc:	0000                	unimp
    30fe:	b4910003          	lb	zero,-1207(sp)
    3102:	f87f                	0xf87f
    3104:	001c                	0x1c
    3106:	fc00                	fsw	fs0,56(s0)
    3108:	001c                	0x1c
    310a:	0300                	addi	s0,sp,384
    310c:	7200                	flw	fs0,32(a2)
    310e:	7fb4                	flw	fa3,120(a5)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3110:	1cfc                	addi	a5,sp,636
    3112:	0000                	unimp
        if (x16 == 1)
    3114:	1d08                	addi	a0,sp,688
    3116:	0000                	unimp
        data >>= 1;
    3118:	b4910003          	lb	zero,-1207(sp)
        if (x16 == 1)
    311c:	147f                	0x147f
    311e:	001d                	c.nop	7
    3120:	4800                	lw	s0,16(s0)
    3122:	001d                	c.nop	7
            crc |= 0x8000;
    3124:	0300                	addi	s0,sp,384
    3126:	9100                	0x9100
    3128:	7fb4                	flw	fa3,120(a5)
	...
    3132:	190c                	addi	a1,sp,176
    3134:	0000                	unimp
    3136:	1cb8                	addi	a4,sp,632
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3138:	0000                	unimp
    313a:	0001                	nop
        if (x16 == 1)
    313c:	fc68                	fsw	fa0,124(s0)
    313e:	001c                	0x1c
        data >>= 1;
    3140:	0800                	addi	s0,sp,16
    3142:	001d                	c.nop	7
        if (x16 == 1)
    3144:	0100                	addi	s0,sp,128
    3146:	6800                	flw	fs0,16(s0)
    3148:	1d14                	addi	a3,sp,688
    314a:	0000                	unimp
            crc |= 0x8000;
    314c:	1d48                	addi	a0,sp,692
    314e:	0000                	unimp
    3150:	0002                	c.slli64	zero
    3152:	9f30                	0x9f30
	...
    315c:	190c                	addi	a1,sp,176
    315e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3160:	1928                	addi	a0,sp,184
    3162:	0000                	unimp
        if (x16 == 1)
    3164:	0002                	c.slli64	zero
    3166:	9f30                	0x9f30
        data >>= 1;
    3168:	1d14                	addi	a3,sp,688
    316a:	0000                	unimp
        if (x16 == 1)
    316c:	1d48                	addi	a0,sp,692
    316e:	0000                	unimp
    3170:	0002                	c.slli64	zero
    3172:	9f30                	0x9f30
	...
            crc |= 0x8000;
    317c:	1928                	addi	a0,sp,184
    317e:	0000                	unimp
    3180:	1934                	addi	a3,sp,184
    3182:	0000                	unimp
    3184:	0002                	c.slli64	zero
    3186:	9f30                	0x9f30
	...
        data >>= 1;
    3190:	1978                	addi	a4,sp,188
    3192:	0000                	unimp
        if (x16 == 1)
    3194:	19c8                	addi	a0,sp,244
    3196:	0000                	unimp
    3198:	0001                	nop
    319a:	c85c                	sw	a5,20(s0)
            crc |= 0x8000;
    319c:	0019                	c.nop	6
    319e:	cc00                	sw	s0,24(s0)
    31a0:	0019                	c.nop	6
    31a2:	0200                	addi	s0,sp,256
    31a4:	3000                	fld	fs0,32(s0)
    31a6:	cc9f 0019 e800      	0xe8000019cc9f
    31ac:	0019                	c.nop	6
    31ae:	0100                	addi	s0,sp,128
        if (x16 == 1)
    31b0:	5c00                	lw	s0,56(s0)
	...
    31ba:	1978                	addi	a4,sp,188
            crc |= 0x8000;
    31bc:	0000                	unimp
    31be:	1984                	addi	s1,sp,240
    31c0:	0000                	unimp
    31c2:	0001                	nop
    31c4:	905e                	c.add	zero,s7
    31c6:	0019                	c.nop	6
    31c8:	9c00                	0x9c00
    31ca:	0019                	c.nop	6
    31cc:	0100                	addi	s0,sp,128
    31ce:	5d00                	lw	s0,56(a0)
}
    31d0:	199c                	addi	a5,sp,240
    31d2:	0000                	unimp
}
    31d4:	19ac                	addi	a1,sp,248
    31d6:	0000                	unimp
    31d8:	0001                	nop
    31da:	cc5e                	sw	s7,24(sp)
    unsigned lo = TIMER->lo;
    31dc:	0019                	c.nop	6
    31de:	e000                	fsw	fs0,0(s0)
    31e0:	0019                	c.nop	6
    31e2:	0100                	addi	s0,sp,128
    unsigned hi = TIMER->hi;
    31e4:	5d00                	lw	s0,56(a0)
	...
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31ee:	1984                	addi	s1,sp,240
    31f0:	0000                	unimp
    31f2:	199c                	addi	a5,sp,240
__UINT64_TYPE__ timer_getms() {
    31f4:	0000                	unimp
    31f6:	0001                	nop
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31f8:	a05d                	j	329e <__udivdi3+0x6e>
    31fa:	0019                	c.nop	6
    31fc:	e800                	fsw	fs0,16(s0)
    31fe:	0019                	c.nop	6
    3200:	0100                	addi	s0,sp,128
    3202:	5d00                	lw	s0,56(a0)
	...
    for (int i = 0; i < size; i++) {
    320c:	1978                	addi	a4,sp,188
    320e:	0000                	unimp
    3210:	1984                	addi	s1,sp,240
    3212:	0000                	unimp
    USART->write = c;
    3214:	0001                	nop
    3216:	905a                	c.add	zero,s6
    3218:	0019                	c.nop	6
    321a:	a400                	fsd	fs0,8(s0)
    321c:	0019                	c.nop	6
    321e:	0100                	addi	s0,sp,128
    3220:	5a00                	lw	s0,48(a2)
    3222:	19c8                	addi	a0,sp,244
    for (int i = 0; i < size; i++) {
    3224:	0000                	unimp
    3226:	19e8                	addi	a0,sp,252
    3228:	0000                	unimp
    322a:	0001                	nop
    322c:	005a                	c.slli	zero,0x16
    322e:	0000                	unimp
    3230:	0000                	unimp
    3232:	0000                	unimp
    3234:	7800                	flw	fs0,48(s0)
    3236:	0019                	c.nop	6
    3238:	e800                	fsw	fs0,16(s0)
    323a:	0019                	c.nop	6
    323c:	0100                	addi	s0,sp,128
    323e:	5600                	lw	s0,40(a2)
	...
    3248:	1978                	addi	a4,sp,188
    324a:	0000                	unimp
    324c:	1984                	addi	s1,sp,240
    324e:	0000                	unimp
    3250:	0002                	c.slli64	zero
    3252:	9f30                	0x9f30
    3254:	1984                	addi	s1,sp,240
    3256:	0000                	unimp
    3258:	198c                	addi	a1,sp,240
    325a:	0000                	unimp
    325c:	0001                	nop
    325e:	00198c5b          	0x198c5b
    3262:	9000                	0x9000
    3264:	0019                	c.nop	6
    3266:	0300                	addi	s0,sp,384
    3268:	7b00                	flw	fs0,48(a4)
    326a:	9f7f                	0x9f7f
    326c:	1990                	addi	a2,sp,240
    326e:	0000                	unimp
    3270:	19c4                	addi	s1,sp,244
    3272:	0000                	unimp
    3274:	0001                	nop
    3276:	0019c45b          	0x19c45b
    327a:	cc00                	sw	s0,24(s0)
    327c:	0019                	c.nop	6
    327e:	0300                	addi	s0,sp,384
    3280:	7b00                	flw	fs0,48(a4)
    3282:	9f7f                	0x9f7f
    3284:	19cc                	addi	a1,sp,244
    3286:	0000                	unimp
    3288:	19e8                	addi	a0,sp,252
    328a:	0000                	unimp
    328c:	0001                	nop
    328e:	0000005b          	0x5b
    3292:	0000                	unimp
    3294:	0000                	unimp
    3296:	fc00                	fsw	fs0,56(s0)
    3298:	0019                	c.nop	6
    329a:	f800                	fsw	fs0,48(s0)
    329c:	001c                	0x1c
    329e:	0300                	addi	s0,sp,384
    32a0:	9100                	0x9100
    32a2:	7f9c                	flw	fa5,56(a5)
    32a4:	1cf8                	addi	a4,sp,636
    32a6:	0000                	unimp
    32a8:	1cfc                	addi	a5,sp,636
    32aa:	0000                	unimp
    32ac:	9c720003          	lb	zero,-1593(tp) # fffff9c7 <__freertos_irq_stack_top+0xfefef9c7>
    32b0:	fc7f                	0xfc7f
    32b2:	001c                	0x1c
    32b4:	0800                	addi	s0,sp,16
    32b6:	001d                	c.nop	7
    32b8:	0300                	addi	s0,sp,384
    32ba:	9100                	0x9100
    32bc:	7f9c                	flw	fa5,56(a5)
    32be:	1d24                	addi	s1,sp,696
    32c0:	0000                	unimp
    32c2:	1d48                	addi	a0,sp,692
    32c4:	0000                	unimp
    32c6:	9c910003          	lb	zero,-1591(sp)
    32ca:	007f                	0x7f
    32cc:	0000                	unimp
    32ce:	0000                	unimp
    32d0:	0000                	unimp
    32d2:	fc00                	fsw	fs0,56(s0)
    32d4:	0019                	c.nop	6
    32d6:	f800                	fsw	fs0,48(s0)
    32d8:	001c                	0x1c
    32da:	0300                	addi	s0,sp,384
    32dc:	9100                	0x9100
    32de:	7fb8                	flw	fa4,120(a5)
    32e0:	1cf8                	addi	a4,sp,636
    32e2:	0000                	unimp
    32e4:	1cfc                	addi	a5,sp,636
    32e6:	0000                	unimp
    32e8:	b8720003          	lb	zero,-1145(tp) # fffffb87 <__freertos_irq_stack_top+0xfefefb87>
    32ec:	fc7f                	0xfc7f
    32ee:	001c                	0x1c
    32f0:	0800                	addi	s0,sp,16
    32f2:	001d                	c.nop	7
    32f4:	0300                	addi	s0,sp,384
    32f6:	9100                	0x9100
    32f8:	7fb8                	flw	fa4,120(a5)
    32fa:	1d24                	addi	s1,sp,696
    32fc:	0000                	unimp
    32fe:	1d48                	addi	a0,sp,692
    3300:	0000                	unimp
    3302:	b8910003          	lb	zero,-1143(sp)
    3306:	007f                	0x7f
    3308:	0000                	unimp
    330a:	0000                	unimp
    330c:	0000                	unimp
    330e:	fc00                	fsw	fs0,56(s0)
    3310:	0019                	c.nop	6
    3312:	f800                	fsw	fs0,48(s0)
    3314:	001c                	0x1c
    3316:	0300                	addi	s0,sp,384
    3318:	9100                	0x9100
    331a:	7fb4                	flw	fa3,120(a5)
    331c:	1cf8                	addi	a4,sp,636
    331e:	0000                	unimp
    3320:	1cfc                	addi	a5,sp,636
    3322:	0000                	unimp
    3324:	b4720003          	lb	zero,-1209(tp) # fffffb47 <__freertos_irq_stack_top+0xfefefb47>
    3328:	fc7f                	0xfc7f
    332a:	001c                	0x1c
    332c:	0800                	addi	s0,sp,16
    332e:	001d                	c.nop	7
    3330:	0300                	addi	s0,sp,384
    3332:	9100                	0x9100
    3334:	7fb4                	flw	fa3,120(a5)
    3336:	1d24                	addi	s1,sp,696
    3338:	0000                	unimp
    333a:	1d48                	addi	a0,sp,692
    333c:	0000                	unimp
    333e:	b4910003          	lb	zero,-1207(sp)
    3342:	007f                	0x7f
    3344:	0000                	unimp
    3346:	0000                	unimp
    3348:	0000                	unimp
    334a:	fc00                	fsw	fs0,56(s0)
    334c:	0019                	c.nop	6
    334e:	b800                	fsd	fs0,48(s0)
    3350:	001c                	0x1c
    3352:	0100                	addi	s0,sp,128
    3354:	6800                	flw	fs0,16(s0)
    3356:	1cfc                	addi	a5,sp,636
    3358:	0000                	unimp
    335a:	1d08                	addi	a0,sp,688
    335c:	0000                	unimp
    335e:	0001                	nop
    3360:	2468                	fld	fa0,200(s0)
    3362:	001d                	c.nop	7
    3364:	4800                	lw	s0,16(s0)
    3366:	001d                	c.nop	7
    3368:	0200                	addi	s0,sp,256
    336a:	3000                	fld	fs0,32(s0)
    336c:	009f 0000 0000      	0x9f
    3372:	0000                	unimp
    3374:	fc00                	fsw	fs0,56(s0)
    3376:	0019                	c.nop	6
    3378:	1400                	addi	s0,sp,544
    337a:	001a                	c.slli	zero,0x6
    337c:	0200                	addi	s0,sp,256
    337e:	3000                	fld	fs0,32(s0)
    3380:	149f 001a 9000      	0x9000001a149f
    3386:	001a                	c.slli	zero,0x6
    3388:	0300                	addi	s0,sp,384
    338a:	9100                	0x9100
    338c:	7fb0                	flw	fa2,120(a5)
    338e:	1a90                	addi	a2,sp,368
    3390:	0000                	unimp
    3392:	1ab4                	addi	a3,sp,376
    3394:	0000                	unimp
    3396:	0001                	nop
    3398:	b45f 001a 4400      	0x4400001ab45f
    339e:	0300001b          	0x300001b
    33a2:	9100                	0x9100
    33a4:	7fb0                	flw	fa2,120(a5)
    33a6:	1cfc                	addi	a5,sp,636
    33a8:	0000                	unimp
    33aa:	1d08                	addi	a0,sp,688
    33ac:	0000                	unimp
    33ae:	0002                	c.slli64	zero
    33b0:	9f30                	0x9f30
    33b2:	1d24                	addi	s1,sp,696
    33b4:	0000                	unimp
    33b6:	1d48                	addi	a0,sp,692
    33b8:	0000                	unimp
    33ba:	0002                	c.slli64	zero
    33bc:	9f30                	0x9f30
	...
    33c6:	1a14                	addi	a3,sp,304
    33c8:	0000                	unimp
    33ca:	1a34                	addi	a3,sp,312
    33cc:	0000                	unimp
    33ce:	0002                	c.slli64	zero
    33d0:	9f30                	0x9f30
    33d2:	1a34                	addi	a3,sp,312
    33d4:	0000                	unimp
    33d6:	1b44                	addi	s1,sp,436
    33d8:	0000                	unimp
    33da:	0001                	nop
    33dc:	0065                	c.nop	25
    33de:	0000                	unimp
    33e0:	0000                	unimp
    33e2:	0000                	unimp
    33e4:	3400                	fld	fs0,40(s0)
    33e6:	001a                	c.slli	zero,0x6
    33e8:	4400                	lw	s0,8(s0)
    33ea:	001a                	c.slli	zero,0x6
    33ec:	0200                	addi	s0,sp,256
    33ee:	3000                	fld	fs0,32(s0)
    33f0:	449f 001a 5000      	0x5000001a449f
    33f6:	001a                	c.slli	zero,0x6
    33f8:	0100                	addi	s0,sp,128
    33fa:	6b00                	flw	fs0,16(a4)
    33fc:	1a50                	addi	a2,sp,308
    33fe:	0000                	unimp
    3400:	1a5c                	addi	a5,sp,308
    3402:	0000                	unimp
    3404:	7f8b0003          	lb	zero,2040(s6)
    3408:	5c9f 001a 4400      	0x4400001a5c9f
    340e:	0100001b          	0x100001b
    3412:	6b00                	flw	fs0,16(a4)
	...
    341c:	1ab4                	addi	a3,sp,376
    341e:	0000                	unimp
    3420:	1b04                	addi	s1,sp,432
    3422:	0000                	unimp
    3424:	0001                	nop
    3426:	045c                	addi	a5,sp,516
    3428:	0800001b          	0x800001b
    342c:	0200001b          	0x200001b
    3430:	3000                	fld	fs0,32(s0)
    3432:	089f 001b 2400      	0x2400001b089f
    3438:	0100001b          	0x100001b
    343c:	5c00                	lw	s0,56(s0)
	...
    3446:	1ab4                	addi	a3,sp,376
    3448:	0000                	unimp
    344a:	1ac0                	addi	s0,sp,372
    344c:	0000                	unimp
    344e:	0001                	nop
    3450:	cc5e                	sw	s7,24(sp)
    3452:	001a                	c.slli	zero,0x6
    3454:	d800                	sw	s0,48(s0)
    3456:	001a                	c.slli	zero,0x6
    3458:	0100                	addi	s0,sp,128
    345a:	5d00                	lw	s0,56(a0)
    345c:	1ad8                	addi	a4,sp,372
    345e:	0000                	unimp
    3460:	1ae8                	addi	a0,sp,380
    3462:	0000                	unimp
    3464:	0001                	nop
    3466:	085e                	slli	a6,a6,0x17
    3468:	1c00001b          	0x1c00001b
    346c:	0100001b          	0x100001b
    3470:	5d00                	lw	s0,56(a0)
	...
    347a:	1ac0                	addi	s0,sp,372
    347c:	0000                	unimp
    347e:	1ad8                	addi	a4,sp,372
    3480:	0000                	unimp
    3482:	0001                	nop
    3484:	dc5d                	beqz	s0,3442 <__udivdi3+0x212>
    3486:	001a                	c.slli	zero,0x6
    3488:	2400                	fld	fs0,8(s0)
    348a:	0100001b          	0x100001b
    348e:	5d00                	lw	s0,56(a0)
	...
    3498:	1ab4                	addi	a3,sp,376
    349a:	0000                	unimp
    349c:	1ac0                	addi	s0,sp,372
    349e:	0000                	unimp
    34a0:	0001                	nop
    34a2:	cc5a                	sw	s6,24(sp)
    34a4:	001a                	c.slli	zero,0x6
    34a6:	e000                	fsw	fs0,0(s0)
    34a8:	001a                	c.slli	zero,0x6
    34aa:	0100                	addi	s0,sp,128
    34ac:	5a00                	lw	s0,48(a2)
    34ae:	1b04                	addi	s1,sp,432
    34b0:	0000                	unimp
    34b2:	1b24                	addi	s1,sp,440
    34b4:	0000                	unimp
    34b6:	0001                	nop
    34b8:	005a                	c.slli	zero,0x16
    34ba:	0000                	unimp
    34bc:	0000                	unimp
    34be:	0000                	unimp
    34c0:	b400                	fsd	fs0,40(s0)
    34c2:	001a                	c.slli	zero,0x6
    34c4:	2400                	fld	fs0,8(s0)
    34c6:	0100001b          	0x100001b
    34ca:	5600                	lw	s0,40(a2)
	...
    34d4:	1ab4                	addi	a3,sp,376
    34d6:	0000                	unimp
    34d8:	1ac0                	addi	s0,sp,372
    34da:	0000                	unimp
    34dc:	0002                	c.slli64	zero
    34de:	9f30                	0x9f30
    34e0:	1ac0                	addi	s0,sp,372
    34e2:	0000                	unimp
    34e4:	1ac8                	addi	a0,sp,372
    34e6:	0000                	unimp
    34e8:	0001                	nop
    34ea:	001ac85b          	0x1ac85b
    34ee:	cc00                	sw	s0,24(s0)
    34f0:	001a                	c.slli	zero,0x6
    34f2:	0300                	addi	s0,sp,384
    34f4:	7b00                	flw	fs0,48(a4)
    34f6:	9f7f                	0x9f7f
    34f8:	1acc                	addi	a1,sp,372
    34fa:	0000                	unimp
    34fc:	1b00                	addi	s0,sp,432
    34fe:	0000                	unimp
    3500:	0001                	nop
    3502:	001b005b          	0x1b005b
    3506:	0800                	addi	s0,sp,16
    3508:	0300001b          	0x300001b
    350c:	7b00                	flw	fs0,48(a4)
    350e:	9f7f                	0x9f7f
    3510:	1b08                	addi	a0,sp,432
    3512:	0000                	unimp
    3514:	1b24                	addi	s1,sp,440
    3516:	0000                	unimp
    3518:	0001                	nop
    351a:	0000005b          	0x5b
    351e:	0000                	unimp
    3520:	0000                	unimp
    3522:	3c00                	fld	fs0,56(s0)
    3524:	f800001b          	0xf800001b
    3528:	001c                	0x1c
    352a:	0300                	addi	s0,sp,384
    352c:	9100                	0x9100
    352e:	7f9c                	flw	fa5,56(a5)
    3530:	1cf8                	addi	a4,sp,636
    3532:	0000                	unimp
    3534:	1cfc                	addi	a5,sp,636
    3536:	0000                	unimp
    3538:	9c720003          	lb	zero,-1593(tp) # fffff9c7 <__freertos_irq_stack_top+0xfefef9c7>
    353c:	347f                	0x347f
    353e:	001d                	c.nop	7
    3540:	4800                	lw	s0,16(s0)
    3542:	001d                	c.nop	7
    3544:	0300                	addi	s0,sp,384
    3546:	9100                	0x9100
    3548:	7f9c                	flw	fa5,56(a5)
	...
    3552:	1b3c                	addi	a5,sp,440
    3554:	0000                	unimp
    3556:	1cf8                	addi	a4,sp,636
    3558:	0000                	unimp
    355a:	b8910003          	lb	zero,-1143(sp)
    355e:	f87f                	0xf87f
    3560:	001c                	0x1c
    3562:	fc00                	fsw	fs0,56(s0)
    3564:	001c                	0x1c
    3566:	0300                	addi	s0,sp,384
    3568:	7200                	flw	fs0,32(a2)
    356a:	7fb8                	flw	fa4,120(a5)
    356c:	1d34                	addi	a3,sp,696
    356e:	0000                	unimp
    3570:	1d48                	addi	a0,sp,692
    3572:	0000                	unimp
    3574:	b8910003          	lb	zero,-1143(sp)
    3578:	007f                	0x7f
    357a:	0000                	unimp
    357c:	0000                	unimp
    357e:	0000                	unimp
    3580:	3c00                	fld	fs0,56(s0)
    3582:	f800001b          	0xf800001b
    3586:	001c                	0x1c
    3588:	0300                	addi	s0,sp,384
    358a:	9100                	0x9100
    358c:	7fb4                	flw	fa3,120(a5)
    358e:	1cf8                	addi	a4,sp,636
    3590:	0000                	unimp
    3592:	1cfc                	addi	a5,sp,636
    3594:	0000                	unimp
    3596:	b4720003          	lb	zero,-1209(tp) # fffffb47 <__freertos_irq_stack_top+0xfefefb47>
    359a:	347f                	0x347f
    359c:	001d                	c.nop	7
    359e:	4800                	lw	s0,16(s0)
    35a0:	001d                	c.nop	7
    35a2:	0300                	addi	s0,sp,384
    35a4:	9100                	0x9100
    35a6:	7fb4                	flw	fa3,120(a5)
	...
    35b0:	1b3c                	addi	a5,sp,440
    35b2:	0000                	unimp
    35b4:	1cb8                	addi	a4,sp,632
    35b6:	0000                	unimp
    35b8:	0001                	nop
    35ba:	3468                	fld	fa0,232(s0)
    35bc:	001d                	c.nop	7
    35be:	4800                	lw	s0,16(s0)
    35c0:	001d                	c.nop	7
    35c2:	0200                	addi	s0,sp,256
    35c4:	3000                	fld	fs0,32(s0)
    35c6:	009f 0000 0000      	0x9f
    35cc:	0000                	unimp
    35ce:	3c00                	fld	fs0,56(s0)
    35d0:	4400001b          	0x4400001b
    35d4:	0200001b          	0x200001b
    35d8:	3000                	fld	fs0,32(s0)
    35da:	449f 001b d800      	0xd800001b449f
    35e0:	0300001b          	0x300001b
    35e4:	9100                	0x9100
    35e6:	7fb0                	flw	fa2,120(a5)
    35e8:	1bd8                	addi	a4,sp,500
    35ea:	0000                	unimp
    35ec:	1bf8                	addi	a4,sp,508
    35ee:	0000                	unimp
    35f0:	0001                	nop
    35f2:	f85f 001b b800      	0xb800001bf85f
    35f8:	001c                	0x1c
    35fa:	0300                	addi	s0,sp,384
    35fc:	9100                	0x9100
    35fe:	7fb0                	flw	fa2,120(a5)
    3600:	1d34                	addi	a3,sp,696
    3602:	0000                	unimp
    3604:	1d48                	addi	a0,sp,692
    3606:	0000                	unimp
    3608:	0002                	c.slli64	zero
    360a:	9f30                	0x9f30
	...
    3614:	1b44                	addi	s1,sp,436
    3616:	0000                	unimp
    3618:	1b64                	addi	s1,sp,444
    361a:	0000                	unimp
    361c:	0002                	c.slli64	zero
    361e:	9f30                	0x9f30
    3620:	1b64                	addi	s1,sp,444
    3622:	0000                	unimp
    3624:	1cb8                	addi	a4,sp,632
    3626:	0000                	unimp
    3628:	0001                	nop
    362a:	0064                	addi	s1,sp,12
    362c:	0000                	unimp
    362e:	0000                	unimp
    3630:	0000                	unimp
    3632:	6400                	flw	fs0,8(s0)
    3634:	7400001b          	0x7400001b
    3638:	0200001b          	0x200001b
    363c:	3000                	fld	fs0,32(s0)
    363e:	749f 001b 8000      	0x8000001b749f
    3644:	0100001b          	0x100001b
    3648:	6700                	flw	fs0,8(a4)
    364a:	1b80                	addi	s0,sp,496
    364c:	0000                	unimp
    364e:	1ba4                	addi	s1,sp,504
    3650:	0000                	unimp
    3652:	7f870003          	lb	zero,2040(a4)
    3656:	a49f 001b b800      	0xb800001ba49f
    365c:	001c                	0x1c
    365e:	0100                	addi	s0,sp,128
    3660:	6700                	flw	fs0,8(a4)
	...
    366a:	1b8c                	addi	a1,sp,496
    366c:	0000                	unimp
    366e:	1b9c                	addi	a5,sp,496
    3670:	0000                	unimp
    3672:	0001                	nop
    3674:	005a                	c.slli	zero,0x16
    3676:	0000                	unimp
    3678:	0000                	unimp
    367a:	0000                	unimp
    367c:	f800                	fsw	fs0,48(s0)
    367e:	4800001b          	0x4800001b
    3682:	001c                	0x1c
    3684:	0100                	addi	s0,sp,128
    3686:	5c00                	lw	s0,56(s0)
    3688:	1c48                	addi	a0,sp,564
    368a:	0000                	unimp
    368c:	1c4c                	addi	a1,sp,564
    368e:	0000                	unimp
    3690:	0002                	c.slli64	zero
    3692:	9f30                	0x9f30
    3694:	1c4c                	addi	a1,sp,564
    3696:	0000                	unimp
    3698:	1c74                	addi	a3,sp,572
    369a:	0000                	unimp
    369c:	0001                	nop
    369e:	005c                	addi	a5,sp,4
    36a0:	0000                	unimp
    36a2:	0000                	unimp
    36a4:	0000                	unimp
    36a6:	f800                	fsw	fs0,48(s0)
    36a8:	0400001b          	0x400001b
    36ac:	001c                	0x1c
    36ae:	0100                	addi	s0,sp,128
    36b0:	5e00                	lw	s0,56(a2)
    36b2:	1c10                	addi	a2,sp,560
    36b4:	0000                	unimp
    36b6:	1c1c                	addi	a5,sp,560
    36b8:	0000                	unimp
    36ba:	0001                	nop
    36bc:	1c5d                	addi	s8,s8,-9
    36be:	001c                	0x1c
    36c0:	2c00                	fld	fs0,24(s0)
    36c2:	001c                	0x1c
    36c4:	0100                	addi	s0,sp,128
    36c6:	5e00                	lw	s0,56(a2)
    36c8:	1c4c                	addi	a1,sp,564
    36ca:	0000                	unimp
    36cc:	1c74                	addi	a3,sp,572
    36ce:	0000                	unimp
    36d0:	0001                	nop
    36d2:	005d                	c.nop	23
    36d4:	0000                	unimp
    36d6:	0000                	unimp
    36d8:	0000                	unimp
    36da:	0400                	addi	s0,sp,512
    36dc:	001c                	0x1c
    36de:	1c00                	addi	s0,sp,560
    36e0:	001c                	0x1c
    36e2:	0100                	addi	s0,sp,128
    36e4:	5d00                	lw	s0,56(a0)
    36e6:	1c20                	addi	s0,sp,568
    36e8:	0000                	unimp
    36ea:	1c74                	addi	a3,sp,572
    36ec:	0000                	unimp
    36ee:	0001                	nop
    36f0:	005d                	c.nop	23
    36f2:	0000                	unimp
    36f4:	0000                	unimp
    36f6:	0000                	unimp
    36f8:	f800                	fsw	fs0,48(s0)
    36fa:	0400001b          	0x400001b
    36fe:	001c                	0x1c
    3700:	0100                	addi	s0,sp,128
    3702:	5a00                	lw	s0,48(a2)
    3704:	1c10                	addi	a2,sp,560
    3706:	0000                	unimp
    3708:	1c24                	addi	s1,sp,568
    370a:	0000                	unimp
    370c:	0001                	nop
    370e:	485a                	lw	a6,148(sp)
    3710:	001c                	0x1c
    3712:	7400                	flw	fs0,40(s0)
    3714:	001c                	0x1c
    3716:	0100                	addi	s0,sp,128
    3718:	5a00                	lw	s0,48(a2)
	...
    3722:	1bf8                	addi	a4,sp,508
    3724:	0000                	unimp
    3726:	1c74                	addi	a3,sp,572
    3728:	0000                	unimp
    372a:	0001                	nop
    372c:	0056                	c.slli	zero,0x15
    372e:	0000                	unimp
    3730:	0000                	unimp
    3732:	0000                	unimp
    3734:	f800                	fsw	fs0,48(s0)
    3736:	0400001b          	0x400001b
    373a:	001c                	0x1c
    373c:	0200                	addi	s0,sp,256
    373e:	3000                	fld	fs0,32(s0)
    3740:	049f 001c 0c00      	0xc00001c049f
    3746:	001c                	0x1c
    3748:	0100                	addi	s0,sp,128
    374a:	5b00                	lw	s0,48(a4)
    374c:	1c0c                	addi	a1,sp,560
    374e:	0000                	unimp
    3750:	1c10                	addi	a2,sp,560
    3752:	0000                	unimp
    3754:	7f7b0003          	lb	zero,2039(s6)
    3758:	109f 001c 4400      	0x4400001c109f
    375e:	001c                	0x1c
    3760:	0100                	addi	s0,sp,128
    3762:	5b00                	lw	s0,48(a4)
    3764:	1c44                	addi	s1,sp,564
    3766:	0000                	unimp
    3768:	1c4c                	addi	a1,sp,564
    376a:	0000                	unimp
    376c:	7f7b0003          	lb	zero,2039(s6)
    3770:	4c9f 001c 7400      	0x7400001c4c9f
    3776:	001c                	0x1c
    3778:	0100                	addi	s0,sp,128
    377a:	5b00                	lw	s0,48(a4)
	...
    3784:	1c80                	addi	s0,sp,624
    3786:	0000                	unimp
    3788:	1cb8                	addi	a4,sp,632
    378a:	0000                	unimp
    378c:	b8910003          	lb	zero,-1143(sp)
    3790:	447f                	0x447f
    3792:	001d                	c.nop	7
    3794:	4800                	lw	s0,16(s0)
    3796:	001d                	c.nop	7
    3798:	0300                	addi	s0,sp,384
    379a:	9100                	0x9100
    379c:	7fb8                	flw	fa4,120(a5)
	...
    37a6:	1c80                	addi	s0,sp,624
    37a8:	0000                	unimp
    37aa:	1cb8                	addi	a4,sp,632
    37ac:	0000                	unimp
    37ae:	0001                	nop
    37b0:	4468                	lw	a0,76(s0)
    37b2:	001d                	c.nop	7
    37b4:	4800                	lw	s0,16(s0)
    37b6:	001d                	c.nop	7
    37b8:	0200                	addi	s0,sp,256
    37ba:	3000                	fld	fs0,32(s0)
    37bc:	009f 0000 0000      	0x9f
    37c2:	0000                	unimp
    37c4:	8000                	0x8000
    37c6:	001c                	0x1c
    37c8:	8400                	0x8400
    37ca:	001c                	0x1c
    37cc:	0200                	addi	s0,sp,256
    37ce:	3000                	fld	fs0,32(s0)
    37d0:	849f 001c b800      	0xb800001c849f
    37d6:	001c                	0x1c
    37d8:	0100                	addi	s0,sp,128
    37da:	5b00                	lw	s0,48(a4)
    37dc:	1d44                	addi	s1,sp,692
    37de:	0000                	unimp
    37e0:	1d48                	addi	a0,sp,692
    37e2:	0000                	unimp
    37e4:	0002                	c.slli64	zero
    37e6:	9f30                	0x9f30
	...
    37f0:	1c84                	addi	s1,sp,624
    37f2:	0000                	unimp
    37f4:	1c8c                	addi	a1,sp,624
    37f6:	0000                	unimp
    37f8:	0002                	c.slli64	zero
    37fa:	9f30                	0x9f30
    37fc:	1c8c                	addi	a1,sp,624
    37fe:	0000                	unimp
    3800:	1cb8                	addi	a4,sp,632
    3802:	0000                	unimp
    3804:	0001                	nop
    3806:	005c                	addi	a5,sp,4
    3808:	0000                	unimp
    380a:	0000                	unimp
    380c:	0000                	unimp
    380e:	4800                	lw	s0,16(s0)
    3810:	001d                	c.nop	7
    3812:	6800                	flw	fs0,16(s0)
    3814:	001d                	c.nop	7
    3816:	0100                	addi	s0,sp,128
    3818:	5a00                	lw	s0,48(a2)
    381a:	1d68                	addi	a0,sp,700
    381c:	0000                	unimp
    381e:	1d8c                	addi	a1,sp,752
    3820:	0000                	unimp
    3822:	0004                	0x4
    3824:	9f5a01f3          	0x9f5a01f3
	...
    3830:	1d48                	addi	a0,sp,692
    3832:	0000                	unimp
    3834:	1d5c                	addi	a5,sp,692
    3836:	0000                	unimp
    3838:	0001                	nop
    383a:	001d5c5b          	0x1d5c5b
    383e:	8c00                	0x8c00
    3840:	001d                	c.nop	7
    3842:	0400                	addi	s0,sp,512
    3844:	f300                	fsw	fs0,32(a4)
    3846:	5b01                	li	s6,-32
    3848:	009f 0000 0000      	0x9f
    384e:	0000                	unimp
    3850:	4800                	lw	s0,16(s0)
    3852:	001d                	c.nop	7
    3854:	6400                	flw	fs0,8(s0)
    3856:	001d                	c.nop	7
    3858:	0100                	addi	s0,sp,128
    385a:	5c00                	lw	s0,56(s0)
    385c:	1d64                	addi	s1,sp,700
    385e:	0000                	unimp
    3860:	1d8c                	addi	a1,sp,752
    3862:	0000                	unimp
    3864:	0004                	0x4
    3866:	9f5c01f3          	0x9f5c01f3
	...
    3872:	1d48                	addi	a0,sp,692
    3874:	0000                	unimp
    3876:	1d68                	addi	a0,sp,700
    3878:	0000                	unimp
    387a:	0002                	c.slli64	zero
    387c:	007a                	c.slli	zero,0x1e
    387e:	1d68                	addi	a0,sp,700
    3880:	0000                	unimp
    3882:	00001d73          	csrrw	s10,ustatus,zero
    3886:	01f30003          	lb	zero,31(t1)
    388a:	005a                	c.slli	zero,0x16
    388c:	0000                	unimp
    388e:	0000                	unimp
    3890:	0000                	unimp
    3892:	4800                	lw	s0,16(s0)
    3894:	001d                	c.nop	7
    3896:	6800                	flw	fs0,16(s0)
    3898:	001d                	c.nop	7
    389a:	0200                	addi	s0,sp,256
    389c:	7a00                	flw	fs0,48(a2)
    389e:	680c                	flw	fa1,16(s0)
    38a0:	001d                	c.nop	7
    38a2:	7300                	flw	fs0,32(a4)
    38a4:	001d                	c.nop	7
    38a6:	0500                	addi	s0,sp,640
    38a8:	f300                	fsw	fs0,32(a4)
    38aa:	5a01                	li	s4,-32
    38ac:	00000c23          	sb	zero,24(zero) # 18 <_start+0x18>
    38b0:	0000                	unimp
    38b2:	0000                	unimp
    38b4:	0000                	unimp
    38b6:	1d48                	addi	a0,sp,692
    38b8:	0000                	unimp
    38ba:	1d68                	addi	a0,sp,700
    38bc:	0000                	unimp
    38be:	0002                	c.slli64	zero
    38c0:	047a                	slli	s0,s0,0x1e
    38c2:	1d68                	addi	a0,sp,700
    38c4:	0000                	unimp
    38c6:	00001d73          	csrrw	s10,ustatus,zero
    38ca:	0005                	c.nop	1
    38cc:	235a01f3          	0x235a01f3
    38d0:	0004                	0x4
    38d2:	0000                	unimp
    38d4:	0000                	unimp
    38d6:	0000                	unimp
    38d8:	4800                	lw	s0,16(s0)
    38da:	001d                	c.nop	7
    38dc:	6800                	flw	fs0,16(s0)
    38de:	001d                	c.nop	7
    38e0:	0200                	addi	s0,sp,256
    38e2:	7a00                	flw	fs0,48(a2)
    38e4:	6808                	flw	fa0,16(s0)
    38e6:	001d                	c.nop	7
    38e8:	7300                	flw	fs0,32(a4)
    38ea:	001d                	c.nop	7
    38ec:	0500                	addi	s0,sp,640
    38ee:	f300                	fsw	fs0,32(a4)
    38f0:	5a01                	li	s4,-32
    38f2:	00000823          	sb	zero,16(zero) # 10 <_start+0x10>
    38f6:	0000                	unimp
    38f8:	0000                	unimp
    38fa:	0000                	unimp
    38fc:	1d48                	addi	a0,sp,692
    38fe:	0000                	unimp
    3900:	1d5c                	addi	a5,sp,692
    3902:	0000                	unimp
    3904:	0001                	nop
    3906:	001d5c5b          	0x1d5c5b
    390a:	8c00                	0x8c00
    390c:	001d                	c.nop	7
    390e:	0400                	addi	s0,sp,512
    3910:	f300                	fsw	fs0,32(a4)
    3912:	5b01                	li	s6,-32
    3914:	009f 0000 0000      	0x9f
	...
    3922:	0000                	unimp
    3924:	0100                	addi	s0,sp,128
    3926:	5a00                	lw	s0,48(a2)
	...
    3930:	0001                	nop
    3932:	006e                	c.slli	zero,0x1b
    3934:	0000                	unimp
    3936:	0000                	unimp
    3938:	0000                	unimp
    393a:	0100                	addi	s0,sp,128
    393c:	5a00                	lw	s0,48(a2)
	...
    3946:	0001                	nop
    3948:	006e                	c.slli	zero,0x1b
	...
    3956:	0000                	unimp
    3958:	0100                	addi	s0,sp,128
    395a:	5b00                	lw	s0,48(a4)
	...
    3964:	0004                	0x4
    3966:	9f5b01f3          	0x9f5b01f3
	...
    3972:	0001                	nop
    3974:	0000005b          	0x5b
	...
    3984:	0200                	addi	s0,sp,256
    3986:	3000                	fld	fs0,32(s0)
    3988:	009f 0000 0000      	0x9f
    398e:	0000                	unimp
    3990:	0100                	addi	s0,sp,128
    3992:	5b00                	lw	s0,48(a4)
	...
    399c:	0002                	c.slli64	zero
    399e:	9f30                	0x9f30
	...
    39a8:	0001                	nop
    39aa:	0000005b          	0x5b
    39ae:	0000                	unimp
    39b0:	0000                	unimp
    39b2:	0200                	addi	s0,sp,256
    39b4:	3000                	fld	fs0,32(s0)
    39b6:	009f 0000 0000      	0x9f
	...
    39c4:	0000                	unimp
    39c6:	0200                	addi	s0,sp,256
    39c8:	3000                	fld	fs0,32(s0)
    39ca:	009f 0000 0000      	0x9f
    39d0:	0000                	unimp
    39d2:	0100                	addi	s0,sp,128
    39d4:	5e00                	lw	s0,56(a2)
	...
    39de:	0001                	nop
    39e0:	005d                	c.nop	23
    39e2:	0000                	unimp
    39e4:	0000                	unimp
    39e6:	0000                	unimp
    39e8:	0100                	addi	s0,sp,128
    39ea:	5e00                	lw	s0,56(a2)
	...
    39f4:	0001                	nop
    39f6:	005d                	c.nop	23
    39f8:	0000                	unimp
    39fa:	0000                	unimp
    39fc:	0000                	unimp
    39fe:	0200                	addi	s0,sp,256
    3a00:	3000                	fld	fs0,32(s0)
    3a02:	009f 0000 0000      	0x9f
	...
    3a10:	0000                	unimp
    3a12:	0200                	addi	s0,sp,256
    3a14:	3000                	fld	fs0,32(s0)
    3a16:	009f 0000 0000      	0x9f
    3a1c:	0000                	unimp
    3a1e:	0100                	addi	s0,sp,128
    3a20:	5d00                	lw	s0,56(a0)
	...
    3a2a:	0001                	nop
    3a2c:	005d                	c.nop	23
    3a2e:	0000                	unimp
    3a30:	0000                	unimp
    3a32:	0000                	unimp
    3a34:	0200                	addi	s0,sp,256
    3a36:	3000                	fld	fs0,32(s0)
    3a38:	009f 0000 0000      	0x9f
	...
    3a46:	0000                	unimp
    3a48:	0200                	addi	s0,sp,256
    3a4a:	3000                	fld	fs0,32(s0)
    3a4c:	009f 0000 0000      	0x9f
    3a52:	0000                	unimp
    3a54:	0100                	addi	s0,sp,128
    3a56:	5a00                	lw	s0,48(a2)
	...
    3a60:	0001                	nop
    3a62:	005a                	c.slli	zero,0x16
    3a64:	0000                	unimp
    3a66:	0000                	unimp
    3a68:	0000                	unimp
    3a6a:	0100                	addi	s0,sp,128
    3a6c:	5a00                	lw	s0,48(a2)
	...
    3a76:	0002                	c.slli64	zero
    3a78:	9f30                	0x9f30
	...
    3a8a:	0002                	c.slli64	zero
    3a8c:	9f30                	0x9f30
	...
    3a96:	0001                	nop
    3a98:	0056                	c.slli	zero,0x15
    3a9a:	0000                	unimp
    3a9c:	0000                	unimp
    3a9e:	0000                	unimp
    3aa0:	0200                	addi	s0,sp,256
    3aa2:	3000                	fld	fs0,32(s0)
    3aa4:	009f 0000 0000      	0x9f
	...
    3ab2:	0000                	unimp
    3ab4:	0200                	addi	s0,sp,256
    3ab6:	3000                	fld	fs0,32(s0)
    3ab8:	009f 0000 0000      	0x9f
	...
    3ac6:	0000                	unimp
    3ac8:	0100                	addi	s0,sp,128
    3aca:	5a00                	lw	s0,48(a2)
	...
    3ad4:	0001                	nop
    3ad6:	00000067          	jr	zero # 0 <_start>
    3ada:	0000                	unimp
    3adc:	0000                	unimp
    3ade:	0400                	addi	s0,sp,512
    3ae0:	f300                	fsw	fs0,32(a4)
    3ae2:	5a01                	li	s4,-32
    3ae4:	009f 0000 0000      	0x9f
    3aea:	0000                	unimp
    3aec:	0100                	addi	s0,sp,128
    3aee:	5a00                	lw	s0,48(a2)
	...
    3b00:	0001                	nop
    3b02:	0000005b          	0x5b
    3b06:	0000                	unimp
    3b08:	0000                	unimp
    3b0a:	0400                	addi	s0,sp,512
    3b0c:	f300                	fsw	fs0,32(a4)
    3b0e:	5b01                	li	s6,-32
    3b10:	009f 0000 0000      	0x9f
    3b16:	0000                	unimp
    3b18:	0100                	addi	s0,sp,128
    3b1a:	5b00                	lw	s0,48(a4)
	...
    3b2c:	0001                	nop
    3b2e:	005c                	addi	a5,sp,4
    3b30:	0000                	unimp
    3b32:	0000                	unimp
    3b34:	0000                	unimp
    3b36:	0400                	addi	s0,sp,512
    3b38:	f300                	fsw	fs0,32(a4)
    3b3a:	5c01                	li	s8,-32
    3b3c:	009f 0000 0000      	0x9f
    3b42:	0000                	unimp
    3b44:	0100                	addi	s0,sp,128
    3b46:	5c00                	lw	s0,56(s0)
	...
    3b58:	0001                	nop
    3b5a:	005d                	c.nop	23
    3b5c:	0000                	unimp
    3b5e:	0000                	unimp
    3b60:	0000                	unimp
    3b62:	0400                	addi	s0,sp,512
    3b64:	f300                	fsw	fs0,32(a4)
    3b66:	5d01                	li	s10,-32
    3b68:	009f 0000 0000      	0x9f
    3b6e:	0000                	unimp
    3b70:	0100                	addi	s0,sp,128
    3b72:	5d00                	lw	s0,56(a0)
	...
    3b84:	0002                	c.slli64	zero
    3b86:	9f30                	0x9f30
	...
    3b90:	0001                	nop
    3b92:	0065                	c.nop	25
    3b94:	0000                	unimp
    3b96:	0000                	unimp
    3b98:	0000                	unimp
    3b9a:	0200                	addi	s0,sp,256
    3b9c:	3000                	fld	fs0,32(s0)
    3b9e:	009f 0000 0000      	0x9f
	...
    3bac:	0000                	unimp
    3bae:	0200                	addi	s0,sp,256
    3bb0:	3000                	fld	fs0,32(s0)
    3bb2:	009f 0000 0000      	0x9f
	...
    3bc0:	0000                	unimp
    3bc2:	0100                	addi	s0,sp,128
    3bc4:	5b00                	lw	s0,48(a4)
	...
    3bce:	0004                	0x4
    3bd0:	9f5b01f3          	0x9f5b01f3
	...
    3be4:	0001                	nop
    3be6:	005c                	addi	a5,sp,4
    3be8:	0000                	unimp
    3bea:	0000                	unimp
    3bec:	0000                	unimp
    3bee:	0400                	addi	s0,sp,512
    3bf0:	f300                	fsw	fs0,32(a4)
    3bf2:	5c01                	li	s8,-32
    3bf4:	009f 0000 0000      	0x9f
	...
    3c02:	0000                	unimp
    3c04:	0200                	addi	s0,sp,256
    3c06:	3000                	fld	fs0,32(s0)
    3c08:	009f 0000 0000      	0x9f
    3c0e:	0000                	unimp
    3c10:	0100                	addi	s0,sp,128
    3c12:	5b00                	lw	s0,48(a4)
	...
    3c24:	0002                	c.slli64	zero
    3c26:	9f30                	0x9f30
	...
    3c38:	0001                	nop
    3c3a:	005a                	c.slli	zero,0x16
    3c3c:	0000                	unimp
    3c3e:	0000                	unimp
    3c40:	0000                	unimp
    3c42:	0100                	addi	s0,sp,128
    3c44:	6600                	flw	fs0,8(a2)
	...
    3c4e:	0004                	0x4
    3c50:	9f5a01f3          	0x9f5a01f3
	...
    3c5c:	0001                	nop
    3c5e:	005a                	c.slli	zero,0x16
	...
    3c6c:	0000                	unimp
    3c6e:	0100                	addi	s0,sp,128
    3c70:	5b00                	lw	s0,48(a4)
	...
    3c7a:	0001                	nop
    3c7c:	005a                	c.slli	zero,0x16
    3c7e:	0000                	unimp
    3c80:	0000                	unimp
    3c82:	0000                	unimp
    3c84:	0100                	addi	s0,sp,128
    3c86:	6400                	flw	fs0,8(s0)
	...
    3c90:	0004                	0x4
    3c92:	9f5b01f3          	0x9f5b01f3
	...
    3c9e:	0001                	nop
    3ca0:	0000005b          	0x5b
	...
    3cb0:	0100                	addi	s0,sp,128
    3cb2:	5c00                	lw	s0,56(s0)
	...
    3cbc:	0001                	nop
    3cbe:	0065                	c.nop	25
    3cc0:	0000                	unimp
    3cc2:	0000                	unimp
    3cc4:	0000                	unimp
    3cc6:	0400                	addi	s0,sp,512
    3cc8:	f300                	fsw	fs0,32(a4)
    3cca:	5c01                	li	s8,-32
    3ccc:	009f 0000 0000      	0x9f
    3cd2:	0000                	unimp
    3cd4:	0100                	addi	s0,sp,128
    3cd6:	5c00                	lw	s0,56(s0)
	...
    3ce8:	0001                	nop
    3cea:	005d                	c.nop	23
    3cec:	0000                	unimp
    3cee:	0000                	unimp
    3cf0:	0000                	unimp
    3cf2:	0100                	addi	s0,sp,128
    3cf4:	6700                	flw	fs0,8(a4)
	...
    3cfe:	0004                	0x4
    3d00:	9f5d01f3          	0x9f5d01f3
	...
    3d0c:	0001                	nop
    3d0e:	005d                	c.nop	23
	...
    3d1c:	0000                	unimp
    3d1e:	0200                	addi	s0,sp,256
    3d20:	3000                	fld	fs0,32(s0)
    3d22:	009f 0000 0000      	0x9f
    3d28:	0000                	unimp
    3d2a:	0200                	addi	s0,sp,256
    3d2c:	3000                	fld	fs0,32(s0)
    3d2e:	009f 0000 0000      	0x9f
	...
    3d3c:	0000                	unimp
    3d3e:	0200                	addi	s0,sp,256
    3d40:	3000                	fld	fs0,32(s0)
    3d42:	009f 0000 0000      	0x9f
	...
    3d50:	0000                	unimp
    3d52:	0100                	addi	s0,sp,128
    3d54:	5a00                	lw	s0,48(a2)
	...
    3d5e:	b8910003          	lb	zero,-1143(sp)
    3d62:	007f                	0x7f
    3d64:	0000                	unimp
    3d66:	0000                	unimp
    3d68:	0000                	unimp
    3d6a:	0300                	addi	s0,sp,384
    3d6c:	7200                	flw	fs0,32(a2)
    3d6e:	7fb8                	flw	fa4,120(a5)
	...
    3d78:	0001                	nop
    3d7a:	005a                	c.slli	zero,0x16
	...
    3d88:	0000                	unimp
    3d8a:	0100                	addi	s0,sp,128
    3d8c:	5b00                	lw	s0,48(a4)
	...
    3d96:	0004                	0x4
    3d98:	9f5b01f3          	0x9f5b01f3
	...
    3da4:	0001                	nop
    3da6:	0000005b          	0x5b
	...
    3db6:	0100                	addi	s0,sp,128
    3db8:	5c00                	lw	s0,56(s0)
	...
    3dc2:	0004                	0x4
    3dc4:	9f5c01f3          	0x9f5c01f3
	...
    3dd0:	0001                	nop
    3dd2:	005c                	addi	a5,sp,4
	...
    3de0:	0000                	unimp
    3de2:	0100                	addi	s0,sp,128
    3de4:	5d00                	lw	s0,56(a0)
	...
    3dee:	bc910003          	lb	zero,-1079(sp)
    3df2:	007f                	0x7f
    3df4:	0000                	unimp
    3df6:	0000                	unimp
    3df8:	0000                	unimp
    3dfa:	0300                	addi	s0,sp,384
    3dfc:	7200                	flw	fs0,32(a2)
    3dfe:	7fbc                	flw	fa5,120(a5)
	...
    3e08:	0001                	nop
    3e0a:	005d                	c.nop	23
	...
    3e18:	0000                	unimp
    3e1a:	0200                	addi	s0,sp,256
    3e1c:	3000                	fld	fs0,32(s0)
    3e1e:	009f 0000 0000      	0x9f
    3e24:	0000                	unimp
    3e26:	0100                	addi	s0,sp,128
    3e28:	6800                	flw	fs0,16(s0)
	...
    3e32:	0002                	c.slli64	zero
    3e34:	9f30                	0x9f30
	...
    3e46:	0002                	c.slli64	zero
    3e48:	9f30                	0x9f30
	...
    3e5a:	0002                	c.slli64	zero
    3e5c:	9f30                	0x9f30
	...
    3e6e:	0001                	nop
    3e70:	005a                	c.slli	zero,0x16
    3e72:	0000                	unimp
    3e74:	0000                	unimp
    3e76:	0000                	unimp
    3e78:	0300                	addi	s0,sp,384
    3e7a:	9100                	0x9100
    3e7c:	7fb8                	flw	fa4,120(a5)
	...
    3e86:	b8720003          	lb	zero,-1145(tp) # fffffb87 <__freertos_irq_stack_top+0xfefefb87>
    3e8a:	007f                	0x7f
    3e8c:	0000                	unimp
    3e8e:	0000                	unimp
    3e90:	0000                	unimp
    3e92:	0100                	addi	s0,sp,128
    3e94:	5a00                	lw	s0,48(a2)
	...
    3ea6:	0001                	nop
    3ea8:	0000005b          	0x5b
    3eac:	0000                	unimp
    3eae:	0000                	unimp
    3eb0:	0400                	addi	s0,sp,512
    3eb2:	f300                	fsw	fs0,32(a4)
    3eb4:	5b01                	li	s6,-32
    3eb6:	009f 0000 0000      	0x9f
    3ebc:	0000                	unimp
    3ebe:	0100                	addi	s0,sp,128
    3ec0:	5b00                	lw	s0,48(a4)
	...
    3ed2:	0001                	nop
    3ed4:	005c                	addi	a5,sp,4
    3ed6:	0000                	unimp
    3ed8:	0000                	unimp
    3eda:	0000                	unimp
    3edc:	0400                	addi	s0,sp,512
    3ede:	f300                	fsw	fs0,32(a4)
    3ee0:	5c01                	li	s8,-32
    3ee2:	009f 0000 0000      	0x9f
    3ee8:	0000                	unimp
    3eea:	0100                	addi	s0,sp,128
    3eec:	5c00                	lw	s0,56(s0)
	...
    3efe:	0001                	nop
    3f00:	005d                	c.nop	23
    3f02:	0000                	unimp
    3f04:	0000                	unimp
    3f06:	0000                	unimp
    3f08:	0300                	addi	s0,sp,384
    3f0a:	9100                	0x9100
    3f0c:	7fbc                	flw	fa5,120(a5)
	...
    3f16:	bc720003          	lb	zero,-1081(tp) # fffffbc7 <__freertos_irq_stack_top+0xfefefbc7>
    3f1a:	007f                	0x7f
    3f1c:	0000                	unimp
    3f1e:	0000                	unimp
    3f20:	0000                	unimp
    3f22:	0100                	addi	s0,sp,128
    3f24:	5d00                	lw	s0,56(a0)
	...
    3f36:	0002                	c.slli64	zero
    3f38:	9f30                	0x9f30
	...
    3f42:	0001                	nop
    3f44:	00000067          	jr	zero # 0 <_start>
    3f48:	0000                	unimp
    3f4a:	0000                	unimp
    3f4c:	0200                	addi	s0,sp,256
    3f4e:	3000                	fld	fs0,32(s0)
    3f50:	009f 0000 0000      	0x9f
	...
    3f5e:	0000                	unimp
    3f60:	0200                	addi	s0,sp,256
    3f62:	3000                	fld	fs0,32(s0)
    3f64:	009f 0000 0000      	0x9f
	...
    3f72:	0000                	unimp
    3f74:	0200                	addi	s0,sp,256
    3f76:	3000                	fld	fs0,32(s0)
    3f78:	009f 0000 0000      	0x9f
	...
    3f86:	0000                	unimp
    3f88:	0100                	addi	s0,sp,128
    3f8a:	5a00                	lw	s0,48(a2)
	...
    3f94:	2000                	fld	fs0,0(s0)
    3f96:	0000                	unimp
    3f98:	2010                	fld	fa2,0(s0)
    3f9a:	0000                	unimp
    3f9c:	0001                	nop
    3f9e:	105a                	c.slli	zero,0x36
    3fa0:	0020                	addi	s0,sp,8
    3fa2:	3000                	fld	fs0,32(s0)
    3fa4:	0020                	addi	s0,sp,8
    3fa6:	0100                	addi	s0,sp,128
    3fa8:	5800                	lw	s0,48(s0)
    3faa:	2030                	fld	fa2,64(s0)
    3fac:	0000                	unimp
    3fae:	2038                	fld	fa4,64(s0)
    3fb0:	0000                	unimp
    3fb2:	0004                	0x4
    3fb4:	9f5a01f3          	0x9f5a01f3
	...
    3fc0:	2000                	fld	fs0,0(s0)
    3fc2:	0000                	unimp
    3fc4:	201f 0000 0001      	0x10000201f
    3fca:	00201f5b          	0x201f5b
    3fce:	3800                	fld	fs0,48(s0)
    3fd0:	0020                	addi	s0,sp,8
    3fd2:	0400                	addi	s0,sp,512
    3fd4:	f300                	fsw	fs0,32(a4)
    3fd6:	5b01                	li	s6,-32
    3fd8:	009f 0000 0000      	0x9f
    3fde:	0000                	unimp
    3fe0:	0000                	unimp
    3fe2:	0020                	addi	s0,sp,8
    3fe4:	1f00                	addi	s0,sp,944
    3fe6:	0020                	addi	s0,sp,8
    3fe8:	0100                	addi	s0,sp,128
    3fea:	5c00                	lw	s0,56(s0)
    3fec:	201f 0000 2038      	0x20380000201f
    3ff2:	0000                	unimp
    3ff4:	0004                	0x4
    3ff6:	9f5c01f3          	0x9f5c01f3
	...
    4002:	1fd0                	addi	a2,sp,1012
    4004:	0000                	unimp
    4006:	1fdf 0000 0001      	0x100001fdf
    400c:	df5a                	sw	s6,188(sp)
    400e:	001f 0000 0020      	0x200000001f
    4014:	0400                	addi	s0,sp,512
    4016:	f300                	fsw	fs0,32(a4)
    4018:	5a01                	li	s4,-32
    401a:	009f 0000 0000      	0x9f
    4020:	0000                	unimp
    4022:	1c00                	addi	s0,sp,560
    4024:	0022                	c.slli	zero,0x8
    4026:	fc00                	fsw	fs0,56(s0)
    4028:	0022                	c.slli	zero,0x8
    402a:	0100                	addi	s0,sp,128
    402c:	5a00                	lw	s0,48(a2)
    402e:	22fc                	fld	fa5,192(a3)
    4030:	0000                	unimp
    4032:	2300                	fld	fs0,0(a4)
    4034:	0000                	unimp
    4036:	0004                	0x4
    4038:	9f5a01f3          	0x9f5a01f3
    403c:	2300                	fld	fs0,0(a4)
    403e:	0000                	unimp
    4040:	2334                	fld	fa3,64(a4)
    4042:	0000                	unimp
    4044:	0001                	nop
    4046:	345a                	fld	fs0,432(sp)
    4048:	38000023          	sb	zero,896(zero) # 380 <main+0x304>
    404c:	04000023          	sb	zero,64(zero) # 40 <_start+0x40>
    4050:	f300                	fsw	fs0,32(a4)
    4052:	5a01                	li	s4,-32
    4054:	389f 0023 5400      	0x54000023389f
    405a:	01000023          	sb	a6,0(zero) # 0 <_start>
    405e:	5a00                	lw	s0,48(a2)
    4060:	2354                	fld	fa3,128(a4)
    4062:	0000                	unimp
    4064:	2358                	fld	fa4,128(a4)
    4066:	0000                	unimp
    4068:	0004                	0x4
    406a:	9f5a01f3          	0x9f5a01f3
    406e:	2358                	fld	fa4,128(a4)
    4070:	0000                	unimp
    4072:	239c                	fld	fa5,0(a5)
    4074:	0000                	unimp
    4076:	0001                	nop
    4078:	9c5a                	add	s8,s8,s6
    407a:	a0000023          	sb	zero,-1536(zero) # fffffa00 <__freertos_irq_stack_top+0xfefefa00>
    407e:	04000023          	sb	zero,64(zero) # 40 <_start+0x40>
    4082:	f300                	fsw	fs0,32(a4)
    4084:	5a01                	li	s4,-32
    4086:	a09f 0023 0800      	0x8000023a09f
    408c:	0024                	addi	s1,sp,8
    408e:	0100                	addi	s0,sp,128
    4090:	5a00                	lw	s0,48(a2)
    4092:	2408                	fld	fa0,8(s0)
    4094:	0000                	unimp
    4096:	240c                	fld	fa1,8(s0)
    4098:	0000                	unimp
    409a:	0004                	0x4
    409c:	9f5a01f3          	0x9f5a01f3
    40a0:	240c                	fld	fa1,8(s0)
    40a2:	0000                	unimp
    40a4:	254c                	fld	fa1,136(a0)
    40a6:	0000                	unimp
    40a8:	0001                	nop
    40aa:	005a                	c.slli	zero,0x16
    40ac:	0000                	unimp
    40ae:	0000                	unimp
    40b0:	0000                	unimp
    40b2:	2000                	fld	fs0,0(s0)
    40b4:	0022                	c.slli	zero,0x8
    40b6:	5000                	lw	s0,32(s0)
    40b8:	0022                	c.slli	zero,0x8
    40ba:	0100                	addi	s0,sp,128
    40bc:	5f00                	lw	s0,56(a4)
    40be:	2250                	fld	fa2,128(a2)
    40c0:	0000                	unimp
    40c2:	225c                	fld	fa5,128(a2)
    40c4:	0000                	unimp
    40c6:	017f0003          	lb	zero,23(t5)
    40ca:	5c9f 0022 6000      	0x600000225c9f
    40d0:	0022                	c.slli	zero,0x8
    40d2:	0600                	addi	s0,sp,768
    40d4:	7a00                	flw	fs0,48(a2)
    40d6:	0600                	addi	s0,sp,768
    40d8:	849f0123          	sb	s1,-1982(t5)
    40dc:	0022                	c.slli	zero,0x8
    40de:	9800                	0x9800
    40e0:	0022                	c.slli	zero,0x8
    40e2:	0100                	addi	s0,sp,128
    40e4:	5c00                	lw	s0,56(s0)
    40e6:	2298                	fld	fa4,0(a3)
    40e8:	0000                	unimp
    40ea:	22a0                	fld	fs0,64(a3)
    40ec:	0000                	unimp
    40ee:	0001                	nop
    40f0:	005f 0023 2400      	0x24000023005f
    40f6:	01000023          	sb	a6,0(zero) # 0 <_start>
    40fa:	5f00                	lw	s0,56(a4)
    40fc:	2324                	fld	fs1,64(a4)
    40fe:	0000                	unimp
    4100:	232c                	fld	fa1,64(a4)
    4102:	0000                	unimp
    4104:	0002                	c.slli64	zero
    4106:	007a                	c.slli	zero,0x1e
    4108:	232c                	fld	fa1,64(a4)
    410a:	0000                	unimp
    410c:	2330                	fld	fa2,64(a4)
    410e:	0000                	unimp
    4110:	0006                	c.slli	zero,0x1
    4112:	007a                	c.slli	zero,0x1e
    4114:	2306                	fld	ft6,64(sp)
    4116:	9f01                	0x9f01
    4118:	2330                	fld	fa2,64(a4)
    411a:	0000                	unimp
    411c:	2338                	fld	fa4,64(a4)
    411e:	0000                	unimp
    4120:	0001                	nop
    4122:	585e                	lw	a6,244(sp)
    4124:	5c000023          	sb	zero,1472(zero) # 5c0 <main+0x544>
    4128:	01000023          	sb	a6,0(zero) # 0 <_start>
    412c:	5f00                	lw	s0,56(a4)
    412e:	235c                	fld	fa5,128(a4)
    4130:	0000                	unimp
    4132:	2390                	fld	fa2,0(a5)
    4134:	0000                	unimp
    4136:	017f0003          	lb	zero,23(t5)
    413a:	909f 0023 9400      	0x94000023909f
    4140:	03000023          	sb	a6,32(zero) # 20 <_start+0x20>
    4144:	7f00                	flw	fs0,56(a4)
    4146:	23949f03          	lh	t5,569(s1)
    414a:	0000                	unimp
    414c:	2398                	fld	fa4,0(a5)
    414e:	0000                	unimp
    4150:	0006                	c.slli	zero,0x1
    4152:	007a                	c.slli	zero,0x1e
    4154:	2306                	fld	ft6,64(sp)
    4156:	9f02                	jalr	t5
    4158:	2398                	fld	fa4,0(a5)
    415a:	0000                	unimp
    415c:	23a0                	fld	fs0,64(a5)
    415e:	0000                	unimp
    4160:	0001                	nop
    4162:	a05e                	fsd	fs7,0(sp)
    4164:	a4000023          	sb	zero,-1472(zero) # fffffa40 <__freertos_irq_stack_top+0xfefefa40>
    4168:	03000023          	sb	a6,32(zero) # 20 <_start+0x20>
    416c:	7f00                	flw	fs0,56(a4)
    416e:	9f01                	0x9f01
    4170:	23a4                	fld	fs1,64(a5)
    4172:	0000                	unimp
    4174:	23b4                	fld	fa3,64(a5)
    4176:	0000                	unimp
    4178:	037f0003          	lb	zero,55(t5)
    417c:	b49f 0023 b800      	0xb8000023b49f
    4182:	06000023          	sb	zero,96(zero) # 60 <_start+0x60>
    4186:	7a00                	flw	fs0,48(a2)
    4188:	0600                	addi	s0,sp,768
    418a:	509f0323          	sb	s1,1286(t5)
    418e:	0024                	addi	s1,sp,8
    4190:	6800                	flw	fs0,16(s0)
    4192:	0024                	addi	s1,sp,8
    4194:	0100                	addi	s0,sp,128
    4196:	5f00                	lw	s0,56(a4)
    4198:	2468                	fld	fa0,200(s0)
    419a:	0000                	unimp
    419c:	2470                	fld	fa2,200(s0)
    419e:	0000                	unimp
    41a0:	0001                	nop
    41a2:	705e                	flw	ft0,244(sp)
    41a4:	0024                	addi	s1,sp,8
    41a6:	7400                	flw	fs0,40(s0)
    41a8:	0024                	addi	s1,sp,8
    41aa:	0300                	addi	s0,sp,384
    41ac:	7e00                	flw	fs0,56(a2)
    41ae:	9f01                	0x9f01
    41b0:	2474                	fld	fa3,200(s0)
    41b2:	0000                	unimp
    41b4:	2484                	fld	fs1,8(s1)
    41b6:	0000                	unimp
    41b8:	0001                	nop
    41ba:	845f 0024 9000      	0x90000024845f
    41c0:	0024                	addi	s1,sp,8
    41c2:	0100                	addi	s0,sp,128
    41c4:	5e00                	lw	s0,56(a2)
    41c6:	2498                	fld	fa4,8(s1)
    41c8:	0000                	unimp
    41ca:	24ac                	fld	fa1,72(s1)
    41cc:	0000                	unimp
    41ce:	0001                	nop
    41d0:	ac5e                	fsd	fs7,24(sp)
    41d2:	0024                	addi	s1,sp,8
    41d4:	b000                	fsd	fs0,32(s0)
    41d6:	0024                	addi	s1,sp,8
    41d8:	0100                	addi	s0,sp,128
    41da:	5f00                	lw	s0,56(a4)
    41dc:	24b0                	fld	fa2,72(s1)
    41de:	0000                	unimp
    41e0:	24c0                	fld	fs0,136(s1)
    41e2:	0000                	unimp
    41e4:	017f0003          	lb	zero,23(t5)
    41e8:	c89f 0024 cc00      	0xcc000024c89f
    41ee:	0024                	addi	s1,sp,8
    41f0:	0300                	addi	s0,sp,384
    41f2:	7f00                	flw	fs0,56(a4)
    41f4:	9f01                	0x9f01
    41f6:	24cc                	fld	fa1,136(s1)
    41f8:	0000                	unimp
    41fa:	24d8                	fld	fa4,136(s1)
    41fc:	0000                	unimp
    41fe:	037f0003          	lb	zero,55(t5)
    4202:	d89f 0024 e000      	0xe0000024d89f
    4208:	0024                	addi	s1,sp,8
    420a:	0600                	addi	s0,sp,768
    420c:	7a00                	flw	fs0,48(a2)
    420e:	0600                	addi	s0,sp,768
    4210:	ec9f0323          	sb	s1,-314(t5)
    4214:	0024                	addi	s1,sp,8
    4216:	f000                	fsw	fs0,32(s0)
    4218:	0024                	addi	s1,sp,8
    421a:	0100                	addi	s0,sp,128
    421c:	5f00                	lw	s0,56(a4)
    421e:	2514                	fld	fa3,8(a0)
    4220:	0000                	unimp
    4222:	251c                	fld	fa5,8(a0)
    4224:	0000                	unimp
    4226:	0001                	nop
    4228:	1c5f 0025 2000      	0x200000251c5f
    422e:	0025                	c.nop	9
    4230:	0200                	addi	s0,sp,256
    4232:	7a00                	flw	fs0,48(a2)
    4234:	2000                	fld	fs0,0(s0)
    4236:	0025                	c.nop	9
    4238:	2400                	fld	fs0,8(s0)
    423a:	0025                	c.nop	9
    423c:	0300                	addi	s0,sp,384
    423e:	7f00                	flw	fs0,56(a4)
    4240:	9f01                	0x9f01
    4242:	2524                	fld	fs1,72(a0)
    4244:	0000                	unimp
    4246:	2528                	fld	fa0,72(a0)
    4248:	0000                	unimp
    424a:	0006                	c.slli	zero,0x1
    424c:	007a                	c.slli	zero,0x1e
    424e:	2306                	fld	ft6,64(sp)
    4250:	9f01                	0x9f01
    4252:	2528                	fld	fa0,72(a0)
    4254:	0000                	unimp
    4256:	252c                	fld	fa1,72(a0)
    4258:	0000                	unimp
    425a:	0001                	nop
    425c:	2c5e                	fld	fs8,464(sp)
    425e:	0025                	c.nop	9
    4260:	3000                	fld	fs0,32(s0)
    4262:	0025                	c.nop	9
    4264:	0100                	addi	s0,sp,128
    4266:	5f00                	lw	s0,56(a4)
    4268:	2530                	fld	fa2,72(a0)
    426a:	0000                	unimp
    426c:	2534                	fld	fa3,72(a0)
    426e:	0000                	unimp
    4270:	7f800003          	lb	zero,2040(zero) # 7f8 <main+0x77c>
    4274:	409f 0025 4c00      	0x4c000025409f
    427a:	0025                	c.nop	9
    427c:	0100                	addi	s0,sp,128
    427e:	5c00                	lw	s0,56(s0)
	...
    4288:	2228                	fld	fa0,64(a2)
    428a:	0000                	unimp
    428c:	2254                	fld	fa3,128(a2)
    428e:	0000                	unimp
    4290:	0001                	nop
    4292:	585d                	li	a6,-9
    4294:	0022                	c.slli	zero,0x8
    4296:	a400                	fsd	fs0,8(s0)
    4298:	0022                	c.slli	zero,0x8
    429a:	0100                	addi	s0,sp,128
    429c:	5d00                	lw	s0,56(a0)
    429e:	22b4                	fld	fa3,64(a3)
    42a0:	0000                	unimp
    42a2:	22d4                	fld	fa3,128(a3)
    42a4:	0000                	unimp
    42a6:	0001                	nop
    42a8:	005d                	c.nop	23
    42aa:	1c000023          	sb	zero,448(zero) # 1c0 <main+0x144>
    42ae:	01000023          	sb	a6,0(zero) # 0 <_start>
    42b2:	5d00                	lw	s0,56(a0)
    42b4:	231c                	fld	fa5,0(a4)
    42b6:	0000                	unimp
    42b8:	2320                	fld	fs0,64(a4)
    42ba:	0000                	unimp
    42bc:	0002                	c.slli64	zero
    42be:	007f                	0x7f
    42c0:	2338                	fld	fa4,64(a4)
    42c2:	0000                	unimp
    42c4:	233c                	fld	fa5,64(a4)
    42c6:	0000                	unimp
    42c8:	0001                	nop
    42ca:	585d                	li	a6,-9
    42cc:	64000023          	sb	zero,1600(zero) # 640 <main+0x5c4>
    42d0:	01000023          	sb	a6,0(zero) # 0 <_start>
    42d4:	5d00                	lw	s0,56(a0)
    42d6:	2364                	fld	fs1,192(a4)
    42d8:	0000                	unimp
    42da:	23ac                	fld	fa1,64(a5)
    42dc:	0000                	unimp
    42de:	0001                	nop
    42e0:	ac61                	j	4578 <__muldf3+0x1ac>
    42e2:	bc000023          	sb	zero,-1088(zero) # fffffbc0 <__freertos_irq_stack_top+0xfefefbc0>
    42e6:	01000023          	sb	a6,0(zero) # 0 <_start>
    42ea:	5d00                	lw	s0,56(a0)
    42ec:	23d8                	fld	fa4,128(a5)
    42ee:	0000                	unimp
    42f0:	23ec                	fld	fa1,192(a5)
    42f2:	0000                	unimp
    42f4:	0001                	nop
    42f6:	ec5f 0023 f000      	0xf0000023ec5f
    42fc:	03000023          	sb	a6,32(zero) # 20 <_start+0x20>
    4300:	7f00                	flw	fs0,56(a4)
    4302:	24149f2b          	0x24149f2b
    4306:	0000                	unimp
    4308:	2424                	fld	fs1,72(s0)
    430a:	0000                	unimp
    430c:	0001                	nop
    430e:	245f 0024 2800      	0x28000024245f
    4314:	0024                	addi	s1,sp,8
    4316:	0300                	addi	s0,sp,384
    4318:	7f00                	flw	fs0,56(a4)
    431a:	9f30                	0x9f30
    431c:	2428                	fld	fa0,72(s0)
    431e:	0000                	unimp
    4320:	2434                	fld	fa3,72(s0)
    4322:	0000                	unimp
    4324:	0002                	c.slli64	zero
    4326:	017c                	addi	a5,sp,140
    4328:	2440                	fld	fs0,136(s0)
    432a:	0000                	unimp
    432c:	2454                	fld	fa3,136(s0)
    432e:	0000                	unimp
    4330:	0001                	nop
    4332:	785d                	lui	a6,0xffff7
    4334:	0024                	addi	s1,sp,8
    4336:	9000                	0x9000
    4338:	0024                	addi	s1,sp,8
    433a:	0100                	addi	s0,sp,128
    433c:	5d00                	lw	s0,56(a0)
    433e:	2494                	fld	fa3,8(s1)
    4340:	0000                	unimp
    4342:	24b4                	fld	fa3,72(s1)
    4344:	0000                	unimp
    4346:	0001                	nop
    4348:	b85d                	j	3bfe <__divdf3+0x322>
    434a:	0024                	addi	s1,sp,8
    434c:	c800                	sw	s0,16(s0)
    434e:	0024                	addi	s1,sp,8
    4350:	0100                	addi	s0,sp,128
    4352:	5d00                	lw	s0,56(a0)
    4354:	24c8                	fld	fa0,136(s1)
    4356:	0000                	unimp
    4358:	24d4                	fld	fa3,136(s1)
    435a:	0000                	unimp
    435c:	0001                	nop
    435e:	d461                	beqz	s0,4326 <__ledf2+0x56>
    4360:	0024                	addi	s1,sp,8
    4362:	e400                	fsw	fs0,8(s0)
    4364:	0024                	addi	s1,sp,8
    4366:	0100                	addi	s0,sp,128
    4368:	5d00                	lw	s0,56(a0)
    436a:	24ec                	fld	fa1,200(s1)
    436c:	0000                	unimp
    436e:	24f8                	fld	fa4,200(s1)
    4370:	0000                	unimp
    4372:	0001                	nop
    4374:	285d                	jal	442a <__muldf3+0x5e>
    4376:	0025                	c.nop	9
    4378:	3400                	fld	fs0,40(s0)
    437a:	0025                	c.nop	9
    437c:	0100                	addi	s0,sp,128
    437e:	5d00                	lw	s0,56(a0)
    4380:	2540                	fld	fs0,136(a0)
    4382:	0000                	unimp
    4384:	254c                	fld	fa1,136(a0)
    4386:	0000                	unimp
    4388:	0001                	nop
    438a:	005d                	c.nop	23
    438c:	0000                	unimp
    438e:	0000                	unimp
    4390:	0000                	unimp
    4392:	2000                	fld	fs0,0(s0)
    4394:	0022                	c.slli	zero,0x8
    4396:	4c00                	lw	s0,24(s0)
    4398:	0022                	c.slli	zero,0x8
    439a:	0200                	addi	s0,sp,256
    439c:	3000                	fld	fs0,32(s0)
    439e:	4c9f 0022 a000      	0xa00000224c9f
    43a4:	0022                	c.slli	zero,0x8
    43a6:	0200                	addi	s0,sp,256
    43a8:	3400                	fld	fs0,40(s0)
    43aa:	a09f 0022 e000      	0xe0000022a09f
    43b0:	0022                	c.slli	zero,0x8
    43b2:	0200                	addi	s0,sp,256
    43b4:	3500                	fld	fs0,40(a0)
    43b6:	e09f 0022 0000      	0x22e09f
    43bc:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43c0:	3100                	fld	fs0,32(a0)
    43c2:	009f 0023 1800      	0x18000023009f
    43c8:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43cc:	3000                	fld	fs0,32(s0)
    43ce:	189f 0023 4c00      	0x4c000023189f
    43d4:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43d8:	3100                	fld	fs0,32(a0)
    43da:	589f 0023 8c00      	0x8c000023589f
    43e0:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43e4:	3200                	fld	fs0,32(a2)
    43e6:	8c9f 0023 a000      	0xa00000238c9f
    43ec:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43f0:	3100                	fld	fs0,32(a0)
    43f2:	a09f 0023 c400      	0xc4000023a09f
    43f8:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    43fc:	3400                	fld	fs0,40(s0)
    43fe:	c49f 0023 fc00      	0xfc000023c49f
    4404:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    4408:	3300                	fld	fs0,32(a4)
    440a:	fc9f 0023 0c00      	0xc000023fc9f
    4410:	0024                	addi	s1,sp,8
    4412:	0200                	addi	s0,sp,256
    4414:	3100                	fld	fs0,32(a0)
    4416:	0c9f 0024 3800      	0x380000240c9f
    441c:	0024                	addi	s1,sp,8
    441e:	0200                	addi	s0,sp,256
    4420:	3600                	fld	fs0,40(a2)
    4422:	389f 0024 5c00      	0x5c000024389f
    4428:	0024                	addi	s1,sp,8
    442a:	0200                	addi	s0,sp,256
    442c:	3700                	fld	fs0,40(a4)
    442e:	5c9f 0024 7400      	0x740000245c9f
    4434:	0024                	addi	s1,sp,8
    4436:	0200                	addi	s0,sp,256
    4438:	3100                	fld	fs0,32(a0)
    443a:	749f 0024 9000      	0x90000024749f
    4440:	0024                	addi	s1,sp,8
    4442:	0200                	addi	s0,sp,256
    4444:	3700                	fld	fs0,40(a4)
    4446:	909f 0024 ec00      	0xec000024909f
    444c:	0024                	addi	s1,sp,8
    444e:	0200                	addi	s0,sp,256
    4450:	3500                	fld	fs0,40(a0)
    4452:	ec9f 0024 f400      	0xf4000024ec9f
    4458:	0024                	addi	s1,sp,8
    445a:	0200                	addi	s0,sp,256
    445c:	3000                	fld	fs0,32(s0)
    445e:	f49f 0024 0000      	0x24f49f
    4464:	0025                	c.nop	9
    4466:	0200                	addi	s0,sp,256
    4468:	3700                	fld	fs0,40(a4)
    446a:	009f 0025 0800      	0x8000025009f
    4470:	0025                	c.nop	9
    4472:	0200                	addi	s0,sp,256
    4474:	3600                	fld	fs0,40(a2)
    4476:	089f 0025 1400      	0x14000025089f
    447c:	0025                	c.nop	9
    447e:	0200                	addi	s0,sp,256
    4480:	3300                	fld	fs0,32(a4)
    4482:	149f 0025 2000      	0x20000025149f
    4488:	0025                	c.nop	9
    448a:	0200                	addi	s0,sp,256
    448c:	3000                	fld	fs0,32(s0)
    448e:	209f 0025 2800      	0x28000025209f
    4494:	0025                	c.nop	9
    4496:	0200                	addi	s0,sp,256
    4498:	3200                	fld	fs0,32(a2)
    449a:	289f 0025 3400      	0x34000025289f
    44a0:	0025                	c.nop	9
    44a2:	0200                	addi	s0,sp,256
    44a4:	3700                	fld	fs0,40(a4)
    44a6:	349f 0025 4000      	0x40000025349f
    44ac:	0025                	c.nop	9
    44ae:	0200                	addi	s0,sp,256
    44b0:	3500                	fld	fs0,40(a0)
    44b2:	409f 0025 4c00      	0x4c000025409f
    44b8:	0025                	c.nop	9
    44ba:	0200                	addi	s0,sp,256
    44bc:	3400                	fld	fs0,40(s0)
    44be:	009f 0000 0000      	0x9f
    44c4:	0000                	unimp
    44c6:	3400                	fld	fs0,40(s0)
    44c8:	0022                	c.slli	zero,0x8
    44ca:	5400                	lw	s0,40(s0)
    44cc:	0022                	c.slli	zero,0x8
    44ce:	0100                	addi	s0,sp,128
    44d0:	5d00                	lw	s0,56(a0)
	...
    44da:	2300                	fld	fs0,0(a4)
    44dc:	0000                	unimp
    44de:	2338                	fld	fa4,64(a4)
    44e0:	0000                	unimp
    44e2:	0002                	c.slli64	zero
    44e4:	9f30                	0x9f30
    44e6:	2358                	fld	fa4,128(a4)
    44e8:	0000                	unimp
    44ea:	23b8                	fld	fa4,64(a5)
    44ec:	0000                	unimp
    44ee:	0002                	c.slli64	zero
    44f0:	9f30                	0x9f30
    44f2:	24ac                	fld	fa1,72(s1)
    44f4:	0000                	unimp
    44f6:	24e0                	fld	fs0,200(s1)
    44f8:	0000                	unimp
    44fa:	0002                	c.slli64	zero
    44fc:	9f30                	0x9f30
    44fe:	2520                	fld	fs0,72(a0)
    4500:	0000                	unimp
    4502:	2528                	fld	fa0,72(a0)
    4504:	0000                	unimp
    4506:	0002                	c.slli64	zero
    4508:	9f30                	0x9f30
	...
    4512:	2270                	fld	fa2,192(a2)
    4514:	0000                	unimp
    4516:	2280                	fld	fs0,0(a3)
    4518:	0000                	unimp
    451a:	0001                	nop
    451c:	945d                	srai	s0,s0,0x37
    451e:	0022                	c.slli	zero,0x8
    4520:	a400                	fsd	fs0,8(s0)
    4522:	0022                	c.slli	zero,0x8
    4524:	0100                	addi	s0,sp,128
    4526:	5d00                	lw	s0,56(a0)
	...
    4530:	2338                	fld	fa4,64(a4)
    4532:	0000                	unimp
    4534:	234c                	fld	fa1,128(a4)
    4536:	0000                	unimp
    4538:	0002                	c.slli64	zero
    453a:	9f30                	0x9f30
	...
    4544:	22cc                	fld	fa1,128(a3)
    4546:	0000                	unimp
    4548:	22d4                	fld	fa3,128(a3)
    454a:	0000                	unimp
    454c:	0001                	nop
    454e:	005d                	c.nop	23
    4550:	0000                	unimp
    4552:	0000                	unimp
    4554:	0000                	unimp
    4556:	e000                	fsw	fs0,0(s0)
    4558:	0022                	c.slli	zero,0x8
    455a:	0000                	unimp
    455c:	02000023          	sb	zero,32(zero) # 20 <_start+0x20>
    4560:	3000                	fld	fs0,32(s0)
    4562:	009f 0000 0000      	0x9f
    4568:	0000                	unimp
    456a:	6c00                	flw	fs0,24(s0)
    456c:	84000023          	sb	zero,-1984(zero) # fffff840 <__freertos_irq_stack_top+0xfefef840>
    4570:	01000023          	sb	a6,0(zero) # 0 <_start>
    4574:	6100                	flw	fs0,0(a0)
	...
    457e:	2384                	fld	fs1,0(a5)
    4580:	0000                	unimp
    4582:	23a0                	fld	fs0,64(a5)
    4584:	0000                	unimp
    4586:	0002                	c.slli64	zero
    4588:	9f30                	0x9f30
    458a:	23a0                	fld	fs0,64(a5)
    458c:	0000                	unimp
    458e:	23b8                	fld	fa4,64(a5)
    4590:	0000                	unimp
    4592:	0002                	c.slli64	zero
    4594:	9f31                	0x9f31
    4596:	24c8                	fld	fa0,136(s1)
    4598:	0000                	unimp
    459a:	24e0                	fld	fs0,200(s1)
    459c:	0000                	unimp
    459e:	0002                	c.slli64	zero
    45a0:	9f30                	0x9f30
	...
    45aa:	241c                	fld	fa5,8(s0)
    45ac:	0000                	unimp
    45ae:	2424                	fld	fs1,72(s0)
    45b0:	0000                	unimp
    45b2:	0001                	nop
    45b4:	245f 0024 2800      	0x28000024245f
    45ba:	0024                	addi	s1,sp,8
    45bc:	0300                	addi	s0,sp,384
    45be:	7f00                	flw	fs0,56(a4)
    45c0:	9f30                	0x9f30
    45c2:	2428                	fld	fa0,72(s0)
    45c4:	0000                	unimp
    45c6:	2434                	fld	fa3,72(s0)
    45c8:	0000                	unimp
    45ca:	0002                	c.slli64	zero
    45cc:	017c                	addi	a5,sp,140
	...
    45d6:	23fc                	fld	fa5,192(a5)
    45d8:	0000                	unimp
    45da:	240c                	fld	fa1,8(s0)
    45dc:	0000                	unimp
    45de:	0002                	c.slli64	zero
    45e0:	9f30                	0x9f30
    45e2:	2438                	fld	fa4,72(s0)
    45e4:	0000                	unimp
    45e6:	2490                	fld	fa2,8(s1)
    45e8:	0000                	unimp
    45ea:	0002                	c.slli64	zero
    45ec:	9f31                	0x9f31
    45ee:	24f4                	fld	fa3,200(s1)
    45f0:	0000                	unimp
    45f2:	2500                	fld	fs0,8(a0)
    45f4:	0000                	unimp
    45f6:	0002                	c.slli64	zero
    45f8:	9f31                	0x9f31
    45fa:	2528                	fld	fa0,72(a0)
    45fc:	0000                	unimp
    45fe:	2534                	fld	fa3,72(a0)
    4600:	0000                	unimp
    4602:	0002                	c.slli64	zero
    4604:	9f31                	0x9f31
	...
    460e:	2450                	fld	fa2,136(s0)
    4610:	0000                	unimp
    4612:	2454                	fld	fa3,136(s0)
    4614:	0000                	unimp
    4616:	0001                	nop
    4618:	005d                	c.nop	23
    461a:	0000                	unimp
    461c:	0000                	unimp
    461e:	0000                	unimp
    4620:	5c00                	lw	s0,56(s0)
    4622:	0024                	addi	s1,sp,8
    4624:	7400                	flw	fs0,40(s0)
    4626:	0024                	addi	s1,sp,8
    4628:	0200                	addi	s0,sp,256
    462a:	3000                	fld	fs0,32(s0)
    462c:	009f 0000 0000      	0x9f
    4632:	0000                	unimp
    4634:	4000                	lw	s0,0(s0)
    4636:	0020                	addi	s0,sp,8
    4638:	5000                	lw	s0,32(s0)
    463a:	0020                	addi	s0,sp,8
    463c:	0100                	addi	s0,sp,128
    463e:	5a00                	lw	s0,48(a2)
    4640:	2050                	fld	fa2,128(s0)
    4642:	0000                	unimp
    4644:	2074                	fld	fa3,192(s0)
    4646:	0000                	unimp
    4648:	0001                	nop
    464a:	7459                	lui	s0,0xffff6
    464c:	0020                	addi	s0,sp,8
    464e:	f300                	fsw	fs0,32(a4)
    4650:	0021                	c.nop	8
    4652:	0100                	addi	s0,sp,128
    4654:	6000                	flw	fs0,0(s0)
    4656:	000021f3          	csrr	gp,ustatus
    465a:	21f4                	fld	fa3,192(a1)
    465c:	0000                	unimp
    465e:	0006                	c.slli	zero,0x1
    4660:	315a01f3          	0x315a01f3
    4664:	9f1c                	0x9f1c
    4666:	21f4                	fld	fa3,192(a1)
    4668:	0000                	unimp
    466a:	221c                	fld	fa5,0(a2)
    466c:	0000                	unimp
    466e:	0001                	nop
    4670:	0060                	addi	s0,sp,12
    4672:	0000                	unimp
    4674:	0000                	unimp
    4676:	0000                	unimp
    4678:	4000                	lw	s0,0(s0)
    467a:	0020                	addi	s0,sp,8
    467c:	6f00                	flw	fs0,24(a4)
    467e:	0020                	addi	s0,sp,8
    4680:	0100                	addi	s0,sp,128
    4682:	5b00                	lw	s0,48(a4)
    4684:	0000206f          	j	6684 <_dtoa_r+0x98>
    4688:	2074                	fld	fa3,192(s0)
    468a:	0000                	unimp
    468c:	0004                	0x4
    468e:	9f5b01f3          	0x9f5b01f3
    4692:	2074                	fld	fa3,192(s0)
    4694:	0000                	unimp
    4696:	2088                	fld	fa0,0(s1)
    4698:	0000                	unimp
    469a:	0001                	nop
    469c:	8862                	mv	a6,s8
    469e:	0020                	addi	s0,sp,8
    46a0:	b800                	fsd	fs0,48(s0)
    46a2:	0020                	addi	s0,sp,8
    46a4:	0300                	addi	s0,sp,384
    46a6:	7d00                	flw	fs0,56(a0)
    46a8:	9f7f                	0x9f7f
    46aa:	20b8                	fld	fa4,64(s1)
    46ac:	0000                	unimp
    46ae:	20f8                	fld	fa4,192(s1)
    46b0:	0000                	unimp
    46b2:	0001                	nop
    46b4:	685d                	lui	a6,0x17
    46b6:	0021                	c.nop	8
    46b8:	8c00                	0x8c00
    46ba:	0021                	c.nop	8
    46bc:	0100                	addi	s0,sp,128
    46be:	5d00                	lw	s0,56(a0)
    46c0:	21ac                	fld	fa1,64(a1)
    46c2:	0000                	unimp
    46c4:	21b0                	fld	fa2,64(a1)
    46c6:	0000                	unimp
    46c8:	0001                	nop
    46ca:	f45d                	bnez	s0,4678 <__muldf3+0x2ac>
    46cc:	0021                	c.nop	8
    46ce:	fc00                	fsw	fs0,56(s0)
    46d0:	0021                	c.nop	8
    46d2:	0100                	addi	s0,sp,128
    46d4:	5d00                	lw	s0,56(a0)
    46d6:	2214                	fld	fa3,0(a2)
    46d8:	0000                	unimp
    46da:	221c                	fld	fa5,0(a2)
    46dc:	0000                	unimp
    46de:	0001                	nop
    46e0:	0062                	c.slli	zero,0x18
    46e2:	0000                	unimp
    46e4:	0000                	unimp
    46e6:	0000                	unimp
    46e8:	4000                	lw	s0,0(s0)
    46ea:	0020                	addi	s0,sp,8
    46ec:	6f00                	flw	fs0,24(a4)
    46ee:	0020                	addi	s0,sp,8
    46f0:	0100                	addi	s0,sp,128
    46f2:	5c00                	lw	s0,56(s0)
    46f4:	0000206f          	j	66f4 <_dtoa_r+0x108>
    46f8:	21d8                	fld	fa4,128(a1)
    46fa:	0000                	unimp
    46fc:	0001                	nop
    46fe:	d858                	sw	a4,52(s0)
    4700:	0021                	c.nop	8
    4702:	f400                	fsw	fs0,40(s0)
    4704:	0021                	c.nop	8
    4706:	0400                	addi	s0,sp,512
    4708:	f300                	fsw	fs0,32(a4)
    470a:	5c01                	li	s8,-32
    470c:	f49f 0021 0400      	0x4000021f49f
    4712:	0022                	c.slli	zero,0x8
    4714:	0100                	addi	s0,sp,128
    4716:	5800                	lw	s0,48(s0)
    4718:	2204                	fld	fs1,0(a2)
    471a:	0000                	unimp
    471c:	2214                	fld	fa3,0(a2)
    471e:	0000                	unimp
    4720:	0004                	0x4
    4722:	9f5c01f3          	0x9f5c01f3
    4726:	2214                	fld	fa3,0(a2)
    4728:	0000                	unimp
    472a:	221c                	fld	fa5,0(a2)
    472c:	0000                	unimp
    472e:	0001                	nop
    4730:	0058                	addi	a4,sp,4
    4732:	0000                	unimp
    4734:	0000                	unimp
    4736:	0000                	unimp
    4738:	7000                	flw	fs0,32(s0)
    473a:	0020                	addi	s0,sp,8
    473c:	b800                	fsd	fs0,48(s0)
    473e:	0020                	addi	s0,sp,8
    4740:	0200                	addi	s0,sp,256
    4742:	3000                	fld	fs0,32(s0)
    4744:	b89f 0020 1800      	0x18000020b89f
    474a:	0021                	c.nop	8
    474c:	0100                	addi	s0,sp,128
    474e:	5a00                	lw	s0,48(a2)
    4750:	2164                	fld	fs1,192(a0)
    4752:	0000                	unimp
    4754:	216c                	fld	fa1,192(a0)
    4756:	0000                	unimp
    4758:	0001                	nop
    475a:	6c5f 0021 d400      	0xd40000216c5f
    4760:	0021                	c.nop	8
    4762:	0100                	addi	s0,sp,128
    4764:	5a00                	lw	s0,48(a2)
    4766:	21f4                	fld	fa3,192(a1)
    4768:	0000                	unimp
    476a:	2214                	fld	fa3,0(a2)
    476c:	0000                	unimp
    476e:	0001                	nop
    4770:	145a                	slli	s0,s0,0x36
    4772:	0022                	c.slli	zero,0x8
    4774:	1c00                	addi	s0,sp,560
    4776:	0022                	c.slli	zero,0x8
    4778:	0200                	addi	s0,sp,256
    477a:	3000                	fld	fs0,32(s0)
    477c:	009f 0000 0000      	0x9f
    4782:	0000                	unimp
    4784:	7000                	flw	fs0,32(s0)
    4786:	0020                	addi	s0,sp,8
    4788:	dc00                	sw	s0,56(s0)
    478a:	0020                	addi	s0,sp,8
    478c:	0200                	addi	s0,sp,256
    478e:	3000                	fld	fs0,32(s0)
    4790:	049f 0021 1000      	0x10000021049f
    4796:	0021                	c.nop	8
    4798:	0200                	addi	s0,sp,256
    479a:	3800                	fld	fs0,48(s0)
    479c:	9c9f 0021 ac00      	0xac0000219c9f
    47a2:	0021                	c.nop	8
    47a4:	0200                	addi	s0,sp,256
    47a6:	3400                	fld	fs0,40(s0)
    47a8:	c09f 0021 c800      	0xc8000021c09f
    47ae:	0021                	c.nop	8
    47b0:	0200                	addi	s0,sp,256
    47b2:	3800                	fld	fs0,48(s0)
    47b4:	149f 0022 1c00      	0x1c000022149f
    47ba:	0022                	c.slli	zero,0x8
    47bc:	0200                	addi	s0,sp,256
    47be:	3000                	fld	fs0,32(s0)
    47c0:	009f 0000 0000      	0x9f
    47c6:	0000                	unimp
    47c8:	1000                	addi	s0,sp,32
    47ca:	0021                	c.nop	8
    47cc:	1c00                	addi	s0,sp,560
    47ce:	0021                	c.nop	8
    47d0:	0200                	addi	s0,sp,256
    47d2:	3000                	fld	fs0,32(s0)
    47d4:	1c9f 0021 2400      	0x240000211c9f
    47da:	0021                	c.nop	8
    47dc:	0200                	addi	s0,sp,256
    47de:	3100                	fld	fs0,32(a0)
    47e0:	249f 0021 2c00      	0x2c000021249f
    47e6:	0021                	c.nop	8
    47e8:	0200                	addi	s0,sp,256
    47ea:	3200                	fld	fs0,32(a2)
    47ec:	2c9f 0021 3400      	0x340000212c9f
    47f2:	0021                	c.nop	8
    47f4:	0200                	addi	s0,sp,256
    47f6:	3300                	fld	fs0,32(a4)
    47f8:	349f 0021 4000      	0x40000021349f
    47fe:	0021                	c.nop	8
    4800:	0200                	addi	s0,sp,256
    4802:	3400                	fld	fs0,40(s0)
    4804:	409f 0021 4800      	0x48000021409f
    480a:	0021                	c.nop	8
    480c:	0200                	addi	s0,sp,256
    480e:	3500                	fld	fs0,40(a0)
    4810:	489f 0021 5000      	0x50000021489f
    4816:	0021                	c.nop	8
    4818:	0200                	addi	s0,sp,256
    481a:	3600                	fld	fs0,40(a2)
    481c:	509f 0021 5c00      	0x5c000021509f
    4822:	0021                	c.nop	8
    4824:	0200                	addi	s0,sp,256
    4826:	3700                	fld	fs0,40(a4)
    4828:	009f 0000 0000      	0x9f
    482e:	0000                	unimp
    4830:	7000                	flw	fs0,32(s0)
    4832:	0020                	addi	s0,sp,8
    4834:	dc00                	sw	s0,56(s0)
    4836:	0020                	addi	s0,sp,8
    4838:	0200                	addi	s0,sp,256
    483a:	3000                	fld	fs0,32(s0)
    483c:	049f 0021 5800      	0x58000021049f
    4842:	0021                	c.nop	8
    4844:	0100                	addi	s0,sp,128
    4846:	5e00                	lw	s0,56(a2)
    4848:	219c                	fld	fa5,0(a1)
    484a:	0000                	unimp
    484c:	21ac                	fld	fa1,64(a1)
    484e:	0000                	unimp
    4850:	0001                	nop
    4852:	c05e                	sw	s7,0(sp)
    4854:	0021                	c.nop	8
    4856:	cc00                	sw	s0,24(s0)
    4858:	0021                	c.nop	8
    485a:	0100                	addi	s0,sp,128
    485c:	5e00                	lw	s0,56(a2)
    485e:	21fc                	fld	fa5,192(a1)
    4860:	0000                	unimp
    4862:	2214                	fld	fa3,0(a2)
    4864:	0000                	unimp
    4866:	0001                	nop
    4868:	145e                	slli	s0,s0,0x37
    486a:	0022                	c.slli	zero,0x8
    486c:	1c00                	addi	s0,sp,560
    486e:	0022                	c.slli	zero,0x8
    4870:	0200                	addi	s0,sp,256
    4872:	3000                	fld	fs0,32(s0)
    4874:	009f 0000 0000      	0x9f
    487a:	0000                	unimp
    487c:	4c00                	lw	s0,24(s0)
    487e:	0025                	c.nop	9
    4880:	e000                	fsw	fs0,0(s0)
    4882:	0025                	c.nop	9
    4884:	0100                	addi	s0,sp,128
    4886:	5a00                	lw	s0,48(a2)
    4888:	25e0                	fld	fs0,200(a1)
    488a:	0000                	unimp
    488c:	261c                	fld	fa5,8(a2)
    488e:	0000                	unimp
    4890:	0001                	nop
    4892:	00261c67          	0x261c67
    4896:	4400                	lw	s0,8(s0)
    4898:	04000027          	0x4000027
    489c:	f300                	fsw	fs0,32(a4)
    489e:	5a01                	li	s4,-32
    48a0:	449f 0027 5000      	0x50000027449f
    48a6:	01000027          	0x1000027
    48aa:	5a00                	lw	s0,48(a2)
    48ac:	2750                	fld	fa2,136(a4)
    48ae:	0000                	unimp
    48b0:	2758                	fld	fa4,136(a4)
    48b2:	0000                	unimp
    48b4:	0004                	0x4
    48b6:	9f5a01f3          	0x9f5a01f3
	...
    48c2:	254c                	fld	fa1,136(a0)
    48c4:	0000                	unimp
    48c6:	257c                	fld	fa5,200(a0)
    48c8:	0000                	unimp
    48ca:	0001                	nop
    48cc:	00257c5b          	0x257c5b
    48d0:	b000                	fsd	fs0,32(s0)
    48d2:	0026                	c.slli	zero,0x9
    48d4:	0100                	addi	s0,sp,128
    48d6:	5800                	lw	s0,48(s0)
    48d8:	26b0                	fld	fa2,72(a3)
    48da:	0000                	unimp
    48dc:	2744                	fld	fs1,136(a4)
    48de:	0000                	unimp
    48e0:	0004                	0x4
    48e2:	9f5b01f3          	0x9f5b01f3
    48e6:	2744                	fld	fs1,136(a4)
    48e8:	0000                	unimp
    48ea:	2758                	fld	fa4,136(a4)
    48ec:	0000                	unimp
    48ee:	0001                	nop
    48f0:	0058                	addi	a4,sp,4
    48f2:	0000                	unimp
    48f4:	0000                	unimp
    48f6:	0000                	unimp
    48f8:	4c00                	lw	s0,24(s0)
    48fa:	0025                	c.nop	9
    48fc:	e000                	fsw	fs0,0(s0)
    48fe:	0025                	c.nop	9
    4900:	0100                	addi	s0,sp,128
    4902:	5c00                	lw	s0,56(s0)
    4904:	25e0                	fld	fs0,200(a1)
    4906:	0000                	unimp
    4908:	2744                	fld	fs1,136(a4)
    490a:	0000                	unimp
    490c:	0004                	0x4
    490e:	9f5c01f3          	0x9f5c01f3
    4912:	2744                	fld	fs1,136(a4)
    4914:	0000                	unimp
    4916:	2750                	fld	fa2,136(a4)
    4918:	0000                	unimp
    491a:	0001                	nop
    491c:	505c                	lw	a5,36(s0)
    491e:	58000027          	0x58000027
    4922:	04000027          	0x4000027
    4926:	f300                	fsw	fs0,32(a4)
    4928:	5c01                	li	s8,-32
    492a:	009f 0000 0000      	0x9f
    4930:	0000                	unimp
    4932:	4c00                	lw	s0,24(s0)
    4934:	0025                	c.nop	9
    4936:	e000                	fsw	fs0,0(s0)
    4938:	0025                	c.nop	9
    493a:	0100                	addi	s0,sp,128
    493c:	5d00                	lw	s0,56(a0)
    493e:	25e0                	fld	fs0,200(a1)
    4940:	0000                	unimp
    4942:	2744                	fld	fs1,136(a4)
    4944:	0000                	unimp
    4946:	0004                	0x4
    4948:	9f5d01f3          	0x9f5d01f3
    494c:	2744                	fld	fs1,136(a4)
    494e:	0000                	unimp
    4950:	2750                	fld	fa2,136(a4)
    4952:	0000                	unimp
    4954:	0001                	nop
    4956:	505d                	c.li	zero,-9
    4958:	58000027          	0x58000027
    495c:	04000027          	0x4000027
    4960:	f300                	fsw	fs0,32(a4)
    4962:	5d01                	li	s10,-32
    4964:	009f 0000 0000      	0x9f
    496a:	0000                	unimp
    496c:	4c00                	lw	s0,24(s0)
    496e:	0025                	c.nop	9
    4970:	e000                	fsw	fs0,0(s0)
    4972:	0025                	c.nop	9
    4974:	0100                	addi	s0,sp,128
    4976:	5e00                	lw	s0,56(a2)
    4978:	25e0                	fld	fs0,200(a1)
    497a:	0000                	unimp
    497c:	2744                	fld	fs1,136(a4)
    497e:	0000                	unimp
    4980:	0004                	0x4
    4982:	9f5e01f3          	0x9f5e01f3
    4986:	2744                	fld	fs1,136(a4)
    4988:	0000                	unimp
    498a:	2750                	fld	fa2,136(a4)
    498c:	0000                	unimp
    498e:	0001                	nop
    4990:	505e                	0x505e
    4992:	58000027          	0x58000027
    4996:	04000027          	0x4000027
    499a:	f300                	fsw	fs0,32(a4)
    499c:	5e01                	li	t3,-32
    499e:	009f 0000 0000      	0x9f
    49a4:	0000                	unimp
    49a6:	4c00                	lw	s0,24(s0)
    49a8:	0025                	c.nop	9
    49aa:	e000                	fsw	fs0,0(s0)
    49ac:	0025                	c.nop	9
    49ae:	0100                	addi	s0,sp,128
    49b0:	5f00                	lw	s0,56(a4)
    49b2:	25e0                	fld	fs0,200(a1)
    49b4:	0000                	unimp
    49b6:	26d8                	fld	fa4,136(a3)
    49b8:	0000                	unimp
    49ba:	0004                	0x4
    49bc:	9f5f01f3          	0x9f5f01f3
    49c0:	26d8                	fld	fa4,136(a3)
    49c2:	0000                	unimp
    49c4:	26ec                	fld	fa1,200(a3)
    49c6:	0000                	unimp
    49c8:	0001                	nop
    49ca:	0026ec63          	bltu	a3,sp,49e2 <__muldf3+0x616>
    49ce:	f400                	fsw	fs0,40(s0)
    49d0:	0026                	c.slli	zero,0x9
    49d2:	0100                	addi	s0,sp,128
    49d4:	5a00                	lw	s0,48(a2)
    49d6:	2704                	fld	fs1,8(a4)
    49d8:	0000                	unimp
    49da:	2734                	fld	fa3,72(a4)
    49dc:	0000                	unimp
    49de:	0001                	nop
    49e0:	345a                	fld	fs0,432(sp)
    49e2:	44000027          	0x44000027
    49e6:	04000027          	0x4000027
    49ea:	f300                	fsw	fs0,32(a4)
    49ec:	5f01                	li	t5,-32
    49ee:	449f 0027 5000      	0x50000027449f
    49f4:	01000027          	0x1000027
    49f8:	5f00                	lw	s0,56(a4)
    49fa:	2750                	fld	fa2,136(a4)
    49fc:	0000                	unimp
    49fe:	2758                	fld	fa4,136(a4)
    4a00:	0000                	unimp
    4a02:	0004                	0x4
    4a04:	9f5f01f3          	0x9f5f01f3
	...
    4a10:	2588                	fld	fa0,8(a1)
    4a12:	0000                	unimp
    4a14:	26d8                	fld	fa4,136(a3)
    4a16:	0000                	unimp
    4a18:	0002                	c.slli64	zero
    4a1a:	9f30                	0x9f30
    4a1c:	2734                	fld	fa3,72(a4)
    4a1e:	0000                	unimp
    4a20:	2758                	fld	fa4,136(a4)
    4a22:	0000                	unimp
    4a24:	0002                	c.slli64	zero
    4a26:	9f30                	0x9f30
	...
    4a30:	25f0                	fld	fa2,200(a1)
    4a32:	0000                	unimp
    4a34:	25f8                	fld	fa4,200(a1)
    4a36:	0000                	unimp
    4a38:	0001                	nop
    4a3a:	005a                	c.slli	zero,0x16
    4a3c:	0000                	unimp
    4a3e:	0000                	unimp
    4a40:	0000                	unimp
    4a42:	8000                	0x8000
    4a44:	0026                	c.slli	zero,0x9
    4a46:	8800                	0x8800
    4a48:	0026                	c.slli	zero,0x9
    4a4a:	0100                	addi	s0,sp,128
    4a4c:	5a00                	lw	s0,48(a2)
	...
    4a56:	2a3c                	fld	fa5,80(a2)
    4a58:	0000                	unimp
    4a5a:	2cc4                	fld	fs1,152(s1)
    4a5c:	0000                	unimp
    4a5e:	0001                	nop
    4a60:	c45a                	sw	s6,8(sp)
    4a62:	002c                	addi	a1,sp,8
    4a64:	4c00                	lw	s0,24(s0)
    4a66:	0400002f          	0x400002f
    4a6a:	f300                	fsw	fs0,32(a4)
    4a6c:	5a01                	li	s4,-32
    4a6e:	009f 0000 0000      	0x9f
    4a74:	0000                	unimp
    4a76:	3c00                	fld	fs0,56(s0)
    4a78:	002a                	c.slli	zero,0xa
    4a7a:	6000                	flw	fs0,0(s0)
    4a7c:	002a                	c.slli	zero,0xa
    4a7e:	0100                	addi	s0,sp,128
    4a80:	5b00                	lw	s0,48(a4)
    4a82:	2a60                	fld	fs0,208(a2)
    4a84:	0000                	unimp
    4a86:	2cc0                	fld	fs0,152(s1)
    4a88:	0000                	unimp
    4a8a:	0004                	0x4
    4a8c:	9f5b01f3          	0x9f5b01f3
    4a90:	2f48                	fld	fa0,152(a4)
    4a92:	0000                	unimp
    4a94:	2f4c                	fld	fa1,152(a4)
    4a96:	0000                	unimp
    4a98:	0001                	nop
    4a9a:	005a                	c.slli	zero,0x16
    4a9c:	0000                	unimp
    4a9e:	0000                	unimp
    4aa0:	0000                	unimp
    4aa2:	3c00                	fld	fs0,56(s0)
    4aa4:	002a                	c.slli	zero,0xa
    4aa6:	6000                	flw	fs0,0(s0)
    4aa8:	002a                	c.slli	zero,0xa
    4aaa:	0100                	addi	s0,sp,128
    4aac:	5b00                	lw	s0,48(a4)
	...
    4ab6:	2a3c                	fld	fa5,80(a2)
    4ab8:	0000                	unimp
    4aba:	2cc0                	fld	fs0,152(s1)
    4abc:	0000                	unimp
    4abe:	0001                	nop
    4ac0:	005a                	c.slli	zero,0x16
    4ac2:	0000                	unimp
    4ac4:	0000                	unimp
    4ac6:	0000                	unimp
    4ac8:	5000                	lw	s0,32(s0)
    4aca:	002a                	c.slli	zero,0xa
    4acc:	6000                	flw	fs0,0(s0)
    4ace:	002a                	c.slli	zero,0xa
    4ad0:	0100                	addi	s0,sp,128
    4ad2:	5b00                	lw	s0,48(a4)
	...
    4adc:	2a50                	fld	fa2,144(a2)
    4ade:	0000                	unimp
    4ae0:	2b84                	fld	fs1,16(a5)
    4ae2:	0000                	unimp
    4ae4:	0001                	nop
    4ae6:	845e                	mv	s0,s7
    4ae8:	c000002b          	0xc000002b
    4aec:	002c                	addi	a1,sp,8
    4aee:	0700                	addi	s0,sp,896
    4af0:	7a00                	flw	fs0,48(a2)
    4af2:	4000                	lw	s0,0(s0)
    4af4:	4024                	lw	s1,64(s0)
    4af6:	9f25                	0x9f25
	...
    4b00:	2a50                	fld	fa2,144(a2)
    4b02:	0000                	unimp
    4b04:	2a5c                	fld	fa5,144(a2)
    4b06:	0000                	unimp
    4b08:	0001                	nop
    4b0a:	002a5c5b          	0x2a5c5b
    4b0e:	6c00                	flw	fs0,24(s0)
    4b10:	002a                	c.slli	zero,0xa
    4b12:	0700                	addi	s0,sp,896
    4b14:	7f00                	flw	fs0,56(a4)
    4b16:	0a00                	addi	s0,sp,272
    4b18:	2001                	jal	4b18 <__muldf3+0x74c>
    4b1a:	2a909f27          	0x2a909f27
    4b1e:	0000                	unimp
    4b20:	2a94                	fld	fa3,16(a3)
    4b22:	0000                	unimp
    4b24:	007f0007          	0x7f0007
    4b28:	010a                	slli	sp,sp,0x2
    4b2a:	2720                	fld	fs0,72(a4)
    4b2c:	ac9f 002a bc00      	0xbc00002aac9f
    4b32:	002a                	c.slli	zero,0xa
    4b34:	0700                	addi	s0,sp,896
    4b36:	7f00                	flw	fs0,56(a4)
    4b38:	0a00                	addi	s0,sp,272
    4b3a:	2001                	jal	4b3a <__fixunsdfsi+0xa>
    4b3c:	2ad49f27          	0x2ad49f27
    4b40:	0000                	unimp
    4b42:	2ae4                	fld	fs1,208(a3)
    4b44:	0000                	unimp
    4b46:	007f0007          	0x7f0007
    4b4a:	010a                	slli	sp,sp,0x2
    4b4c:	2720                	fld	fs0,72(a4)
    4b4e:	fc9f 002a 0c00      	0xc00002afc9f
    4b54:	0700002b          	0x700002b
    4b58:	7f00                	flw	fs0,56(a4)
    4b5a:	0a00                	addi	s0,sp,272
    4b5c:	2001                	jal	4b5c <__fixunsdfsi+0x2c>
    4b5e:	2b249f27          	0x2b249f27
    4b62:	0000                	unimp
    4b64:	2b34                	fld	fa3,80(a4)
    4b66:	0000                	unimp
    4b68:	007f0007          	0x7f0007
    4b6c:	010a                	slli	sp,sp,0x2
    4b6e:	2720                	fld	fs0,72(a4)
    4b70:	4c9f 002b 5c00      	0x5c00002b4c9f
    4b76:	0700002b          	0x700002b
    4b7a:	7f00                	flw	fs0,56(a4)
    4b7c:	0a00                	addi	s0,sp,272
    4b7e:	2001                	jal	4b7e <__fixunsdfsi+0x4e>
    4b80:	2b6c9f27          	0x2b6c9f27
    4b84:	0000                	unimp
    4b86:	2b7c                	fld	fa5,208(a4)
    4b88:	0000                	unimp
    4b8a:	007f0007          	0x7f0007
    4b8e:	010a                	slli	sp,sp,0x2
    4b90:	2720                	fld	fs0,72(a4)
    4b92:	009f 0000 0000      	0x9f
    4b98:	0000                	unimp
    4b9a:	5000                	lw	s0,32(s0)
    4b9c:	002a                	c.slli	zero,0xa
    4b9e:	5400                	lw	s0,40(s0)
    4ba0:	002a                	c.slli	zero,0xa
    4ba2:	0100                	addi	s0,sp,128
    4ba4:	5d00                	lw	s0,56(a0)
    4ba6:	2a54                	fld	fa3,144(a2)
    4ba8:	0000                	unimp
    4baa:	2a74                	fld	fa3,208(a2)
    4bac:	0000                	unimp
    4bae:	0001                	nop
    4bb0:	745c                	flw	fa5,44(s0)
    4bb2:	002a                	c.slli	zero,0xa
    4bb4:	8000                	0x8000
    4bb6:	002a                	c.slli	zero,0xa
    4bb8:	0500                	addi	s0,sp,640
    4bba:	7d00                	flw	fs0,56(a0)
    4bbc:	3100                	fld	fs0,32(a0)
    4bbe:	9f25                	0x9f25
    4bc0:	2a80                	fld	fs0,16(a3)
    4bc2:	0000                	unimp
    4bc4:	2a9c                	fld	fa5,16(a3)
    4bc6:	0000                	unimp
    4bc8:	0001                	nop
    4bca:	9c5c                	0x9c5c
    4bcc:	002a                	c.slli	zero,0xa
    4bce:	a400                	fsd	fs0,8(s0)
    4bd0:	002a                	c.slli	zero,0xa
    4bd2:	0500                	addi	s0,sp,640
    4bd4:	7d00                	flw	fs0,56(a0)
    4bd6:	3200                	fld	fs0,32(a2)
    4bd8:	9f25                	0x9f25
    4bda:	2aa4                	fld	fs1,80(a3)
    4bdc:	0000                	unimp
    4bde:	2ac4                	fld	fs1,144(a3)
    4be0:	0000                	unimp
    4be2:	0001                	nop
    4be4:	002ac45b          	0x2ac45b
    4be8:	cc00                	sw	s0,24(s0)
    4bea:	002a                	c.slli	zero,0xa
    4bec:	0500                	addi	s0,sp,640
    4bee:	7d00                	flw	fs0,56(a0)
    4bf0:	3300                	fld	fs0,32(a4)
    4bf2:	9f25                	0x9f25
    4bf4:	2acc                	fld	fa1,144(a3)
    4bf6:	0000                	unimp
    4bf8:	2aec                	fld	fa1,208(a3)
    4bfa:	0000                	unimp
    4bfc:	0001                	nop
    4bfe:	ec5c                	fsw	fa5,28(s0)
    4c00:	002a                	c.slli	zero,0xa
    4c02:	f400                	fsw	fs0,40(s0)
    4c04:	002a                	c.slli	zero,0xa
    4c06:	0500                	addi	s0,sp,640
    4c08:	7d00                	flw	fs0,56(a0)
    4c0a:	3400                	fld	fs0,40(s0)
    4c0c:	9f25                	0x9f25
    4c0e:	2af4                	fld	fa3,208(a3)
    4c10:	0000                	unimp
    4c12:	2b14                	fld	fa3,16(a4)
    4c14:	0000                	unimp
    4c16:	0001                	nop
    4c18:	002b145b          	0x2b145b
    4c1c:	1c00                	addi	s0,sp,560
    4c1e:	0500002b          	0x500002b
    4c22:	7d00                	flw	fs0,56(a0)
    4c24:	3500                	fld	fs0,40(a0)
    4c26:	9f25                	0x9f25
    4c28:	2b1c                	fld	fa5,16(a4)
    4c2a:	0000                	unimp
    4c2c:	2b3c                	fld	fa5,80(a4)
    4c2e:	0000                	unimp
    4c30:	0001                	nop
    4c32:	3c5c                	fld	fa5,184(s0)
    4c34:	4400002b          	0x4400002b
    4c38:	0500002b          	0x500002b
    4c3c:	7d00                	flw	fs0,56(a0)
    4c3e:	3600                	fld	fs0,40(a2)
    4c40:	9f25                	0x9f25
    4c42:	2b44                	fld	fs1,144(a4)
    4c44:	0000                	unimp
    4c46:	2b60                	fld	fs0,208(a4)
    4c48:	0000                	unimp
    4c4a:	0001                	nop
    4c4c:	605d                	c.lui	zero,0x17
    4c4e:	8000002b          	0x8000002b
    4c52:	0200002b          	0x200002b
    4c56:	3000                	fld	fs0,32(s0)
    4c58:	009f 0000 0000      	0x9f
    4c5e:	0000                	unimp
    4c60:	5000                	lw	s0,32(s0)
    4c62:	002a                	c.slli	zero,0xa
    4c64:	6000                	flw	fs0,0(s0)
    4c66:	002a                	c.slli	zero,0xa
    4c68:	0800                	addi	s0,sp,16
    4c6a:	7b00                	flw	fs0,48(a4)
    4c6c:	7a00                	flw	fs0,48(a2)
    4c6e:	2700                	fld	fs0,8(a4)
    4c70:	1a31                	addi	s4,s4,-20
    4c72:	009f 0000 0000      	0x9f
    4c78:	0000                	unimp
    4c7a:	5000                	lw	s0,32(s0)
    4c7c:	002a                	c.slli	zero,0xa
    4c7e:	5c00                	lw	s0,56(s0)
    4c80:	002a                	c.slli	zero,0xa
    4c82:	0200                	addi	s0,sp,256
    4c84:	3000                	fld	fs0,32(s0)
    4c86:	5c9f 002a 7000      	0x7000002a5c9f
    4c8c:	002a                	c.slli	zero,0xa
    4c8e:	0200                	addi	s0,sp,256
    4c90:	3100                	fld	fs0,32(a0)
    4c92:	849f 002a 9800      	0x9800002a849f
    4c98:	002a                	c.slli	zero,0xa
    4c9a:	0200                	addi	s0,sp,256
    4c9c:	3100                	fld	fs0,32(a0)
    4c9e:	ac9f 002a c000      	0xc000002aac9f
    4ca4:	002a                	c.slli	zero,0xa
    4ca6:	0200                	addi	s0,sp,256
    4ca8:	3100                	fld	fs0,32(a0)
    4caa:	d49f 002a e800      	0xe800002ad49f
    4cb0:	002a                	c.slli	zero,0xa
    4cb2:	0200                	addi	s0,sp,256
    4cb4:	3100                	fld	fs0,32(a0)
    4cb6:	fc9f 002a 1000      	0x1000002afc9f
    4cbc:	0200002b          	0x200002b
    4cc0:	3100                	fld	fs0,32(a0)
    4cc2:	249f 002b 3800      	0x3800002b249f
    4cc8:	0200002b          	0x200002b
    4ccc:	3100                	fld	fs0,32(a0)
    4cce:	4c9f 002b 6000      	0x6000002b4c9f
    4cd4:	0200002b          	0x200002b
    4cd8:	3100                	fld	fs0,32(a0)
    4cda:	6c9f 002b 8000      	0x8000002b6c9f
    4ce0:	0200002b          	0x200002b
    4ce4:	3100                	fld	fs0,32(a0)
    4ce6:	009f 0000 0000      	0x9f
    4cec:	0000                	unimp
    4cee:	9c00                	0x9c00
    4cf0:	ac00002b          	0xac00002b
    4cf4:	0700002b          	0x700002b
    4cf8:	7f00                	flw	fs0,56(a4)
    4cfa:	0a00                	addi	s0,sp,272
    4cfc:	2001                	jal	4cfc <__umodsi3+0x2c>
    4cfe:	2bc49f27          	0x2bc49f27
    4d02:	0000                	unimp
    4d04:	2bd4                	fld	fa3,144(a5)
    4d06:	0000                	unimp
    4d08:	007f0007          	0x7f0007
    4d0c:	010a                	slli	sp,sp,0x2
    4d0e:	2720                	fld	fs0,72(a4)
    4d10:	ec9f 002b fc00      	0xfc00002bec9f
    4d16:	0700002b          	0x700002b
    4d1a:	7f00                	flw	fs0,56(a4)
    4d1c:	0a00                	addi	s0,sp,272
    4d1e:	2001                	jal	4d1e <__modsi3+0x1a>
    4d20:	2c149f27          	0x2c149f27
    4d24:	0000                	unimp
    4d26:	2c24                	fld	fs1,88(s0)
    4d28:	0000                	unimp
    4d2a:	007f0007          	0x7f0007
    4d2e:	010a                	slli	sp,sp,0x2
    4d30:	2720                	fld	fs0,72(a4)
    4d32:	3c9f 002c 4c00      	0x4c00002c3c9f
    4d38:	002c                	addi	a1,sp,8
    4d3a:	0700                	addi	s0,sp,896
    4d3c:	7f00                	flw	fs0,56(a4)
    4d3e:	0a00                	addi	s0,sp,272
    4d40:	2001                	jal	4d40 <__clzsi2+0xc>
    4d42:	2c649f27          	0x2c649f27
    4d46:	0000                	unimp
    4d48:	2c74                	fld	fa3,216(s0)
    4d4a:	0000                	unimp
    4d4c:	007f0007          	0x7f0007
    4d50:	010a                	slli	sp,sp,0x2
    4d52:	2720                	fld	fs0,72(a4)
    4d54:	8c9f 002c 9c00      	0x9c00002c8c9f
    4d5a:	002c                	addi	a1,sp,8
    4d5c:	0700                	addi	s0,sp,896
    4d5e:	7f00                	flw	fs0,56(a4)
    4d60:	0a00                	addi	s0,sp,272
    4d62:	2001                	jal	4d62 <__clzsi2+0x2e>
    4d64:	2cac9f27          	0x2cac9f27
    4d68:	0000                	unimp
    4d6a:	2cbc                	fld	fa5,88(s1)
    4d6c:	0000                	unimp
    4d6e:	007f0007          	0x7f0007
    4d72:	010a                	slli	sp,sp,0x2
    4d74:	2720                	fld	fs0,72(a4)
    4d76:	009f 0000 0000      	0x9f
    4d7c:	0000                	unimp
    4d7e:	9000                	0x9000
    4d80:	9400002b          	0x9400002b
    4d84:	0100002b          	0x100002b
    4d88:	5e00                	lw	s0,56(a2)
    4d8a:	2b94                	fld	fa3,16(a5)
    4d8c:	0000                	unimp
    4d8e:	2bb4                	fld	fa3,80(a5)
    4d90:	0000                	unimp
    4d92:	0001                	nop
    4d94:	b45c                	fsd	fa5,168(s0)
    4d96:	bc00002b          	0xbc00002b
    4d9a:	0500002b          	0x500002b
    4d9e:	7e00                	flw	fs0,56(a2)
    4da0:	3100                	fld	fs0,32(a0)
    4da2:	9f25                	0x9f25
    4da4:	2bbc                	fld	fa5,80(a5)
    4da6:	0000                	unimp
    4da8:	2bdc                	fld	fa5,144(a5)
    4daa:	0000                	unimp
    4dac:	0001                	nop
    4dae:	dc5d                	beqz	s0,4d6c <__clzsi2+0x38>
    4db0:	e400002b          	0xe400002b
    4db4:	0500002b          	0x500002b
    4db8:	7e00                	flw	fs0,56(a2)
    4dba:	3200                	fld	fs0,32(a2)
    4dbc:	9f25                	0x9f25
    4dbe:	2be4                	fld	fs1,208(a5)
    4dc0:	0000                	unimp
    4dc2:	2c04                	fld	fs1,24(s0)
    4dc4:	0000                	unimp
    4dc6:	0001                	nop
    4dc8:	045c                	addi	a5,sp,516
    4dca:	002c                	addi	a1,sp,8
    4dcc:	0c00                	addi	s0,sp,528
    4dce:	002c                	addi	a1,sp,8
    4dd0:	0500                	addi	s0,sp,640
    4dd2:	7e00                	flw	fs0,56(a2)
    4dd4:	3300                	fld	fs0,32(a4)
    4dd6:	9f25                	0x9f25
    4dd8:	2c0c                	fld	fa1,24(s0)
    4dda:	0000                	unimp
    4ddc:	2c2c                	fld	fa1,88(s0)
    4dde:	0000                	unimp
    4de0:	0001                	nop
    4de2:	2c5d                	jal	5098 <__exponent+0x90>
    4de4:	002c                	addi	a1,sp,8
    4de6:	3400                	fld	fs0,40(s0)
    4de8:	002c                	addi	a1,sp,8
    4dea:	0500                	addi	s0,sp,640
    4dec:	7e00                	flw	fs0,56(a2)
    4dee:	3400                	fld	fs0,40(s0)
    4df0:	9f25                	0x9f25
    4df2:	2c34                	fld	fa3,88(s0)
    4df4:	0000                	unimp
    4df6:	2c54                	fld	fa3,152(s0)
    4df8:	0000                	unimp
    4dfa:	0001                	nop
    4dfc:	545c                	lw	a5,44(s0)
    4dfe:	002c                	addi	a1,sp,8
    4e00:	5c00                	lw	s0,56(s0)
    4e02:	002c                	addi	a1,sp,8
    4e04:	0500                	addi	s0,sp,640
    4e06:	7e00                	flw	fs0,56(a2)
    4e08:	3500                	fld	fs0,40(a0)
    4e0a:	9f25                	0x9f25
    4e0c:	2c5c                	fld	fa5,152(s0)
    4e0e:	0000                	unimp
    4e10:	2c7c                	fld	fa5,216(s0)
    4e12:	0000                	unimp
    4e14:	0001                	nop
    4e16:	7c5d                	lui	s8,0xffff7
    4e18:	002c                	addi	a1,sp,8
    4e1a:	8400                	0x8400
    4e1c:	002c                	addi	a1,sp,8
    4e1e:	0500                	addi	s0,sp,640
    4e20:	7e00                	flw	fs0,56(a2)
    4e22:	3600                	fld	fs0,40(a2)
    4e24:	9f25                	0x9f25
    4e26:	2c84                	fld	fs1,24(s1)
    4e28:	0000                	unimp
    4e2a:	2ca0                	fld	fs0,88(s1)
    4e2c:	0000                	unimp
    4e2e:	0001                	nop
    4e30:	a05e                	fsd	fs7,0(sp)
    4e32:	002c                	addi	a1,sp,8
    4e34:	c000                	sw	s0,0(s0)
    4e36:	002c                	addi	a1,sp,8
    4e38:	0200                	addi	s0,sp,256
    4e3a:	3000                	fld	fs0,32(s0)
    4e3c:	009f 0000 0000      	0x9f
    4e42:	0000                	unimp
    4e44:	9c00                	0x9c00
    4e46:	b000002b          	0xb000002b
    4e4a:	0200002b          	0x200002b
    4e4e:	3100                	fld	fs0,32(a0)
    4e50:	c49f 002b d800      	0xd800002bc49f
    4e56:	0200002b          	0x200002b
    4e5a:	3100                	fld	fs0,32(a0)
    4e5c:	ec9f 002b 0000      	0x2bec9f
    4e62:	002c                	addi	a1,sp,8
    4e64:	0200                	addi	s0,sp,256
    4e66:	3100                	fld	fs0,32(a0)
    4e68:	149f 002c 2800      	0x2800002c149f
    4e6e:	002c                	addi	a1,sp,8
    4e70:	0200                	addi	s0,sp,256
    4e72:	3100                	fld	fs0,32(a0)
    4e74:	3c9f 002c 5000      	0x5000002c3c9f
    4e7a:	002c                	addi	a1,sp,8
    4e7c:	0200                	addi	s0,sp,256
    4e7e:	3100                	fld	fs0,32(a0)
    4e80:	649f 002c 7800      	0x7800002c649f
    4e86:	002c                	addi	a1,sp,8
    4e88:	0200                	addi	s0,sp,256
    4e8a:	3100                	fld	fs0,32(a0)
    4e8c:	8c9f 002c a000      	0xa000002c8c9f
    4e92:	002c                	addi	a1,sp,8
    4e94:	0200                	addi	s0,sp,256
    4e96:	3100                	fld	fs0,32(a0)
    4e98:	ac9f 002c c000      	0xc000002cac9f
    4e9e:	002c                	addi	a1,sp,8
    4ea0:	0200                	addi	s0,sp,256
    4ea2:	3100                	fld	fs0,32(a0)
    4ea4:	009f 0000 0000      	0x9f
    4eaa:	0000                	unimp
    4eac:	c400                	sw	s0,8(s0)
    4eae:	002c                	addi	a1,sp,8
    4eb0:	e000                	fsw	fs0,0(s0)
    4eb2:	002c                	addi	a1,sp,8
    4eb4:	0100                	addi	s0,sp,128
    4eb6:	5a00                	lw	s0,48(a2)
    4eb8:	2ce0                	fld	fs0,216(s1)
    4eba:	0000                	unimp
    4ebc:	2f48                	fld	fa0,152(a4)
    4ebe:	0000                	unimp
    4ec0:	0006                	c.slli	zero,0x1
    4ec2:	405a01f3          	0x405a01f3
    4ec6:	9f25                	0x9f25
	...
    4ed0:	2cd8                	fld	fa4,152(s1)
    4ed2:	0000                	unimp
    4ed4:	2e1c                	fld	fa5,24(a2)
    4ed6:	0000                	unimp
    4ed8:	0001                	nop
    4eda:	1c5d                	addi	s8,s8,-9
    4edc:	002e                	c.slli	zero,0xb
    4ede:	4800                	lw	s0,16(s0)
    4ee0:	0a00002f          	0xa00002f
    4ee4:	f300                	fsw	fs0,32(a4)
    4ee6:	5a01                	li	s4,-32
    4ee8:	2540                	fld	fs0,136(a0)
    4eea:	2440                	fld	fs0,136(s0)
    4eec:	2540                	fld	fs0,136(a0)
    4eee:	009f 0000 0000      	0x9f
    4ef4:	0000                	unimp
    4ef6:	e400                	fsw	fs0,8(s0)
    4ef8:	002c                	addi	a1,sp,8
    4efa:	f400                	fsw	fs0,40(s0)
    4efc:	002c                	addi	a1,sp,8
    4efe:	0700                	addi	s0,sp,896
    4f00:	7a00                	flw	fs0,48(a2)
    4f02:	0a00                	addi	s0,sp,272
    4f04:	2001                	jal	4f04 <__cvt+0x60>
    4f06:	2d0c9f27          	0x2d0c9f27
    4f0a:	0000                	unimp
    4f0c:	2d1c                	fld	fa5,24(a0)
    4f0e:	0000                	unimp
    4f10:	007a0007          	0x7a0007
    4f14:	010a                	slli	sp,sp,0x2
    4f16:	2720                	fld	fs0,72(a4)
    4f18:	349f 002d 4400      	0x4400002d349f
    4f1e:	002d                	c.nop	11
    4f20:	0700                	addi	s0,sp,896
    4f22:	7a00                	flw	fs0,48(a2)
    4f24:	0a00                	addi	s0,sp,272
    4f26:	2001                	jal	4f26 <__cvt+0x82>
    4f28:	2d5c9f27          	0x2d5c9f27
    4f2c:	0000                	unimp
    4f2e:	2d6c                	fld	fa1,216(a0)
    4f30:	0000                	unimp
    4f32:	007a0007          	0x7a0007
    4f36:	010a                	slli	sp,sp,0x2
    4f38:	2720                	fld	fs0,72(a4)
    4f3a:	849f 002d 9400      	0x9400002d849f
    4f40:	002d                	c.nop	11
    4f42:	0700                	addi	s0,sp,896
    4f44:	7a00                	flw	fs0,48(a2)
    4f46:	0a00                	addi	s0,sp,272
    4f48:	2001                	jal	4f48 <__cvt+0xa4>
    4f4a:	2dac9f27          	0x2dac9f27
    4f4e:	0000                	unimp
    4f50:	2dbc                	fld	fa5,88(a1)
    4f52:	0000                	unimp
    4f54:	007a0007          	0x7a0007
    4f58:	010a                	slli	sp,sp,0x2
    4f5a:	2720                	fld	fs0,72(a4)
    4f5c:	d49f 002d e400      	0xe400002dd49f
    4f62:	002d                	c.nop	11
    4f64:	0700                	addi	s0,sp,896
    4f66:	7a00                	flw	fs0,48(a2)
    4f68:	0a00                	addi	s0,sp,272
    4f6a:	2001                	jal	4f6a <__cvt+0xc6>
    4f6c:	2df49f27          	0x2df49f27
    4f70:	0000                	unimp
    4f72:	2e04                	fld	fs1,24(a2)
    4f74:	0000                	unimp
    4f76:	007a0007          	0x7a0007
    4f7a:	010a                	slli	sp,sp,0x2
    4f7c:	2720                	fld	fs0,72(a4)
    4f7e:	009f 0000 0000      	0x9f
    4f84:	0000                	unimp
    4f86:	d800                	sw	s0,48(s0)
    4f88:	002c                	addi	a1,sp,8
    4f8a:	dc00                	sw	s0,56(s0)
    4f8c:	002c                	addi	a1,sp,8
    4f8e:	0100                	addi	s0,sp,128
    4f90:	5e00                	lw	s0,56(a2)
    4f92:	2cdc                	fld	fa5,152(s1)
    4f94:	0000                	unimp
    4f96:	2cfc                	fld	fa5,216(s1)
    4f98:	0000                	unimp
    4f9a:	0001                	nop
    4f9c:	fc5c                	fsw	fa5,60(s0)
    4f9e:	002c                	addi	a1,sp,8
    4fa0:	0400                	addi	s0,sp,512
    4fa2:	002d                	c.nop	11
    4fa4:	0500                	addi	s0,sp,640
    4fa6:	7e00                	flw	fs0,56(a2)
    4fa8:	3100                	fld	fs0,32(a0)
    4faa:	9f25                	0x9f25
    4fac:	2d04                	fld	fs1,24(a0)
    4fae:	0000                	unimp
    4fb0:	2d24                	fld	fs1,88(a0)
    4fb2:	0000                	unimp
    4fb4:	0001                	nop
    4fb6:	245f 002d 2c00      	0x2c00002d245f
    4fbc:	002d                	c.nop	11
    4fbe:	0500                	addi	s0,sp,640
    4fc0:	7e00                	flw	fs0,56(a2)
    4fc2:	3200                	fld	fs0,32(a2)
    4fc4:	9f25                	0x9f25
    4fc6:	2d2c                	fld	fa1,88(a0)
    4fc8:	0000                	unimp
    4fca:	2d4c                	fld	fa1,152(a0)
    4fcc:	0000                	unimp
    4fce:	0001                	nop
    4fd0:	4c5c                	lw	a5,28(s0)
    4fd2:	002d                	c.nop	11
    4fd4:	5400                	lw	s0,40(s0)
    4fd6:	002d                	c.nop	11
    4fd8:	0500                	addi	s0,sp,640
    4fda:	7e00                	flw	fs0,56(a2)
    4fdc:	3300                	fld	fs0,32(a4)
    4fde:	9f25                	0x9f25
    4fe0:	2d54                	fld	fa3,152(a0)
    4fe2:	0000                	unimp
    4fe4:	2d74                	fld	fa3,216(a0)
    4fe6:	0000                	unimp
    4fe8:	0001                	nop
    4fea:	745f 002d 7c00      	0x7c00002d745f
    4ff0:	002d                	c.nop	11
    4ff2:	0500                	addi	s0,sp,640
    4ff4:	7e00                	flw	fs0,56(a2)
    4ff6:	3400                	fld	fs0,40(s0)
    4ff8:	9f25                	0x9f25
    4ffa:	2d7c                	fld	fa5,216(a0)
    4ffc:	0000                	unimp
    4ffe:	2d9c                	fld	fa5,24(a1)
    5000:	0000                	unimp
    5002:	0001                	nop
    5004:	9c5c                	0x9c5c
    5006:	002d                	c.nop	11
    5008:	a400                	fsd	fs0,8(s0)
    500a:	002d                	c.nop	11
    500c:	0500                	addi	s0,sp,640
    500e:	7e00                	flw	fs0,56(a2)
    5010:	3500                	fld	fs0,40(a0)
    5012:	9f25                	0x9f25
    5014:	2da4                	fld	fs1,88(a1)
    5016:	0000                	unimp
    5018:	2dc4                	fld	fs1,152(a1)
    501a:	0000                	unimp
    501c:	0001                	nop
    501e:	c45f 002d cc00      	0xcc00002dc45f
    5024:	002d                	c.nop	11
    5026:	0500                	addi	s0,sp,640
    5028:	7e00                	flw	fs0,56(a2)
    502a:	3600                	fld	fs0,40(a2)
    502c:	9f25                	0x9f25
    502e:	2dcc                	fld	fa1,152(a1)
    5030:	0000                	unimp
    5032:	2de8                	fld	fa0,216(a1)
    5034:	0000                	unimp
    5036:	0001                	nop
    5038:	e85e                	fsw	fs7,16(sp)
    503a:	002d                	c.nop	11
    503c:	0800                	addi	s0,sp,16
    503e:	002e                	c.slli	zero,0xb
    5040:	0200                	addi	s0,sp,256
    5042:	3000                	fld	fs0,32(s0)
    5044:	009f 0000 0000      	0x9f
    504a:	0000                	unimp
    504c:	d800                	sw	s0,48(s0)
    504e:	002c                	addi	a1,sp,8
    5050:	e400                	fsw	fs0,8(s0)
    5052:	002c                	addi	a1,sp,8
    5054:	0200                	addi	s0,sp,256
    5056:	3000                	fld	fs0,32(s0)
    5058:	e49f 002c f800      	0xf800002ce49f
    505e:	002c                	addi	a1,sp,8
    5060:	0200                	addi	s0,sp,256
    5062:	3100                	fld	fs0,32(a0)
    5064:	0c9f 002d 2000      	0x2000002d0c9f
    506a:	002d                	c.nop	11
    506c:	0200                	addi	s0,sp,256
    506e:	3100                	fld	fs0,32(a0)
    5070:	349f 002d 4800      	0x4800002d349f
    5076:	002d                	c.nop	11
    5078:	0200                	addi	s0,sp,256
    507a:	3100                	fld	fs0,32(a0)
    507c:	5c9f 002d 7000      	0x7000002d5c9f
    5082:	002d                	c.nop	11
    5084:	0200                	addi	s0,sp,256
    5086:	3100                	fld	fs0,32(a0)
    5088:	849f 002d 9800      	0x9800002d849f
    508e:	002d                	c.nop	11
    5090:	0200                	addi	s0,sp,256
    5092:	3100                	fld	fs0,32(a0)
    5094:	ac9f 002d c000      	0xc000002dac9f
    509a:	002d                	c.nop	11
    509c:	0200                	addi	s0,sp,256
    509e:	3100                	fld	fs0,32(a0)
    50a0:	d49f 002d e800      	0xe800002dd49f
    50a6:	002d                	c.nop	11
    50a8:	0200                	addi	s0,sp,256
    50aa:	3100                	fld	fs0,32(a0)
    50ac:	f49f 002d 0800      	0x800002df49f
    50b2:	002e                	c.slli	zero,0xb
    50b4:	0200                	addi	s0,sp,256
    50b6:	3100                	fld	fs0,32(a0)
    50b8:	009f 0000 0000      	0x9f
    50be:	0000                	unimp
    50c0:	2400                	fld	fs0,8(s0)
    50c2:	002e                	c.slli	zero,0xb
    50c4:	3400                	fld	fs0,40(s0)
    50c6:	002e                	c.slli	zero,0xb
    50c8:	0700                	addi	s0,sp,896
    50ca:	7a00                	flw	fs0,48(a2)
    50cc:	0a00                	addi	s0,sp,272
    50ce:	2001                	jal	50ce <__exponent+0xc6>
    50d0:	2e4c9f27          	0x2e4c9f27
    50d4:	0000                	unimp
    50d6:	2e5c                	fld	fa5,152(a2)
    50d8:	0000                	unimp
    50da:	007a0007          	0x7a0007
    50de:	010a                	slli	sp,sp,0x2
    50e0:	2720                	fld	fs0,72(a4)
    50e2:	749f 002e 8400      	0x8400002e749f
    50e8:	002e                	c.slli	zero,0xb
    50ea:	0700                	addi	s0,sp,896
    50ec:	7a00                	flw	fs0,48(a2)
    50ee:	0a00                	addi	s0,sp,272
    50f0:	2001                	jal	50f0 <__exponent+0xe8>
    50f2:	2e9c9f27          	0x2e9c9f27
    50f6:	0000                	unimp
    50f8:	2eac                	fld	fa1,88(a3)
    50fa:	0000                	unimp
    50fc:	007a0007          	0x7a0007
    5100:	010a                	slli	sp,sp,0x2
    5102:	2720                	fld	fs0,72(a4)
    5104:	c49f 002e d400      	0xd400002ec49f
    510a:	002e                	c.slli	zero,0xb
    510c:	0700                	addi	s0,sp,896
    510e:	7a00                	flw	fs0,48(a2)
    5110:	0a00                	addi	s0,sp,272
    5112:	2001                	jal	5112 <_printf_float+0xa>
    5114:	2eec9f27          	0x2eec9f27
    5118:	0000                	unimp
    511a:	2efc                	fld	fa5,216(a3)
    511c:	0000                	unimp
    511e:	007a0007          	0x7a0007
    5122:	010a                	slli	sp,sp,0x2
    5124:	2720                	fld	fs0,72(a4)
    5126:	149f 002f 2400      	0x2400002f149f
    512c:	0700002f          	0x700002f
    5130:	7a00                	flw	fs0,48(a2)
    5132:	0a00                	addi	s0,sp,272
    5134:	2001                	jal	5134 <_printf_float+0x2c>
    5136:	2f349f27          	0x2f349f27
    513a:	0000                	unimp
    513c:	2f40                	fld	fs0,152(a4)
    513e:	0000                	unimp
    5140:	007a0007          	0x7a0007
    5144:	010a                	slli	sp,sp,0x2
    5146:	2720                	fld	fs0,72(a4)
    5148:	409f 002f 4400      	0x4400002f409f
    514e:	0b00002f          	0xb00002f
    5152:	7a00                	flw	fs0,48(a2)
    5154:	0b00                	addi	s0,sp,400
    5156:	a001                	j	5156 <_printf_float+0x4e>
    5158:	20010a27          	0x20010a27
    515c:	00009f27          	0x9f27
    5160:	0000                	unimp
    5162:	0000                	unimp
    5164:	0000                	unimp
    5166:	2e18                	fld	fa4,24(a2)
    5168:	0000                	unimp
    516a:	2e1c                	fld	fa5,24(a2)
    516c:	0000                	unimp
    516e:	0001                	nop
    5170:	1c5f 002e 3c00      	0x3c00002e1c5f
    5176:	002e                	c.slli	zero,0xb
    5178:	0100                	addi	s0,sp,128
    517a:	5d00                	lw	s0,56(a0)
    517c:	2e3c                	fld	fa5,88(a2)
    517e:	0000                	unimp
    5180:	2e44                	fld	fs1,152(a2)
    5182:	0000                	unimp
    5184:	0005                	c.nop	1
    5186:	007f                	0x7f
    5188:	2531                	jal	5794 <_printf_float+0x68c>
    518a:	449f 002e 6400      	0x6400002e449f
    5190:	002e                	c.slli	zero,0xb
    5192:	0100                	addi	s0,sp,128
    5194:	5e00                	lw	s0,56(a2)
    5196:	2e64                	fld	fs1,216(a2)
    5198:	0000                	unimp
    519a:	2e6c                	fld	fa1,216(a2)
    519c:	0000                	unimp
    519e:	0005                	c.nop	1
    51a0:	007f                	0x7f
    51a2:	2532                	fld	fa0,264(sp)
    51a4:	6c9f 002e 8c00      	0x8c00002e6c9f
    51aa:	002e                	c.slli	zero,0xb
    51ac:	0100                	addi	s0,sp,128
    51ae:	5d00                	lw	s0,56(a0)
    51b0:	2e8c                	fld	fa1,24(a3)
    51b2:	0000                	unimp
    51b4:	2e94                	fld	fa3,24(a3)
    51b6:	0000                	unimp
    51b8:	0005                	c.nop	1
    51ba:	007f                	0x7f
    51bc:	949f2533          	0x949f2533
    51c0:	002e                	c.slli	zero,0xb
    51c2:	b400                	fsd	fs0,40(s0)
    51c4:	002e                	c.slli	zero,0xb
    51c6:	0100                	addi	s0,sp,128
    51c8:	5e00                	lw	s0,56(a2)
    51ca:	2eb4                	fld	fa3,88(a3)
    51cc:	0000                	unimp
    51ce:	2ebc                	fld	fa5,88(a3)
    51d0:	0000                	unimp
    51d2:	0005                	c.nop	1
    51d4:	007f                	0x7f
    51d6:	2534                	fld	fa3,72(a0)
    51d8:	bc9f 002e dc00      	0xdc00002ebc9f
    51de:	002e                	c.slli	zero,0xb
    51e0:	0100                	addi	s0,sp,128
    51e2:	5d00                	lw	s0,56(a0)
    51e4:	2edc                	fld	fa5,152(a3)
    51e6:	0000                	unimp
    51e8:	2ee4                	fld	fs1,216(a3)
    51ea:	0000                	unimp
    51ec:	0005                	c.nop	1
    51ee:	007f                	0x7f
    51f0:	2535                	jal	581c <_printf_float+0x714>
    51f2:	e49f 002e 0400      	0x400002ee49f
    51f8:	0100002f          	0x100002f
    51fc:	5e00                	lw	s0,56(a2)
    51fe:	2f04                	fld	fs1,24(a4)
    5200:	0000                	unimp
    5202:	2f0c                	fld	fa1,24(a4)
    5204:	0000                	unimp
    5206:	0005                	c.nop	1
    5208:	007f                	0x7f
    520a:	2536                	fld	fa0,328(sp)
    520c:	0c9f 002f 2800      	0x2800002f0c9f
    5212:	0100002f          	0x100002f
    5216:	5f00                	lw	s0,56(a4)
    5218:	2f28                	fld	fa0,88(a4)
    521a:	0000                	unimp
    521c:	2f48                	fld	fa0,152(a4)
    521e:	0000                	unimp
    5220:	0002                	c.slli64	zero
    5222:	9f30                	0x9f30
	...
    522c:	2e24                	fld	fs1,88(a2)
    522e:	0000                	unimp
    5230:	2e38                	fld	fa4,88(a2)
    5232:	0000                	unimp
    5234:	0002                	c.slli64	zero
    5236:	9f31                	0x9f31
    5238:	2e4c                	fld	fa1,152(a2)
    523a:	0000                	unimp
    523c:	2e60                	fld	fs0,216(a2)
    523e:	0000                	unimp
    5240:	0002                	c.slli64	zero
    5242:	9f31                	0x9f31
    5244:	2e74                	fld	fa3,216(a2)
    5246:	0000                	unimp
    5248:	2e88                	fld	fa0,24(a3)
    524a:	0000                	unimp
    524c:	0002                	c.slli64	zero
    524e:	9f31                	0x9f31
    5250:	2e9c                	fld	fa5,24(a3)
    5252:	0000                	unimp
    5254:	2eb0                	fld	fa2,88(a3)
    5256:	0000                	unimp
    5258:	0002                	c.slli64	zero
    525a:	9f31                	0x9f31
    525c:	2ec4                	fld	fs1,152(a3)
    525e:	0000                	unimp
    5260:	2ed8                	fld	fa4,152(a3)
    5262:	0000                	unimp
    5264:	0002                	c.slli64	zero
    5266:	9f31                	0x9f31
    5268:	2eec                	fld	fa1,216(a3)
    526a:	0000                	unimp
    526c:	2f00                	fld	fs0,24(a4)
    526e:	0000                	unimp
    5270:	0002                	c.slli64	zero
    5272:	9f31                	0x9f31
    5274:	2f14                	fld	fa3,24(a4)
    5276:	0000                	unimp
    5278:	2f28                	fld	fa0,88(a4)
    527a:	0000                	unimp
    527c:	0002                	c.slli64	zero
    527e:	9f31                	0x9f31
    5280:	2f34                	fld	fa3,88(a4)
    5282:	0000                	unimp
    5284:	2f48                	fld	fa0,152(a4)
    5286:	0000                	unimp
    5288:	0002                	c.slli64	zero
    528a:	9f31                	0x9f31
	...
    5294:	2758                	fld	fa4,136(a4)
    5296:	0000                	unimp
    5298:	276c                	fld	fa1,200(a4)
    529a:	0000                	unimp
    529c:	0001                	nop
    529e:	6c5a                	flw	fs8,148(sp)
    52a0:	bc000027          	0xbc000027
    52a4:	04000027          	0x4000027
    52a8:	f300                	fsw	fs0,32(a4)
    52aa:	5a01                	li	s4,-32
    52ac:	009f 0000 0000      	0x9f
    52b2:	0000                	unimp
    52b4:	8000                	0x8000
    52b6:	84000027          	0x84000027
    52ba:	01000027          	0x1000027
    52be:	5a00                	lw	s0,48(a2)
    52c0:	278c                	fld	fa1,8(a5)
    52c2:	0000                	unimp
    52c4:	2790                	fld	fa2,8(a5)
    52c6:	0000                	unimp
    52c8:	0001                	nop
    52ca:	985a                	add	a6,a6,s6
    52cc:	9c000027          	0x9c000027
    52d0:	01000027          	0x1000027
    52d4:	5a00                	lw	s0,48(a2)
    52d6:	27a4                	fld	fs1,72(a5)
    52d8:	0000                	unimp
    52da:	27a8                	fld	fa0,72(a5)
    52dc:	0000                	unimp
    52de:	0001                	nop
    52e0:	b05a                	fsd	fs6,32(sp)
    52e2:	b4000027          	0xb4000027
    52e6:	01000027          	0x1000027
    52ea:	5a00                	lw	s0,48(a2)
    52ec:	27b8                	fld	fa4,72(a5)
    52ee:	0000                	unimp
    52f0:	27bc                	fld	fa5,72(a5)
    52f2:	0000                	unimp
    52f4:	0002                	c.slli64	zero
    52f6:	9f30                	0x9f30
	...
    5308:	0001                	nop
    530a:	005a                	c.slli	zero,0x16
    530c:	0000                	unimp
    530e:	0000                	unimp
    5310:	0000                	unimp
    5312:	0100                	addi	s0,sp,128
    5314:	5e00                	lw	s0,56(a2)
	...
    531e:	0005                	c.nop	1
    5320:	007a                	c.slli	zero,0x1e
    5322:	2531                	jal	592e <_printf_common+0x76>
    5324:	009f 0000 0000      	0x9f
    532a:	0000                	unimp
    532c:	0100                	addi	s0,sp,128
    532e:	5d00                	lw	s0,56(a0)
	...
    5338:	0005                	c.nop	1
    533a:	007a                	c.slli	zero,0x1e
    533c:	2532                	fld	fa0,264(sp)
    533e:	009f 0000 0000      	0x9f
    5344:	0000                	unimp
    5346:	0100                	addi	s0,sp,128
    5348:	5e00                	lw	s0,56(a2)
	...
    5352:	0005                	c.nop	1
    5354:	007a                	c.slli	zero,0x1e
    5356:	009f2533          	slt	a0,t5,s1
    535a:	0000                	unimp
    535c:	0000                	unimp
    535e:	0000                	unimp
    5360:	0100                	addi	s0,sp,128
    5362:	5d00                	lw	s0,56(a0)
	...
    536c:	0005                	c.nop	1
    536e:	007a                	c.slli	zero,0x1e
    5370:	2534                	fld	fa3,72(a0)
    5372:	009f 0000 0000      	0x9f
    5378:	0000                	unimp
    537a:	0100                	addi	s0,sp,128
    537c:	5e00                	lw	s0,56(a2)
	...
    5386:	0005                	c.nop	1
    5388:	007a                	c.slli	zero,0x1e
    538a:	2535                	jal	59b6 <_printf_common+0xfe>
    538c:	009f 0000 0000      	0x9f
    5392:	0000                	unimp
    5394:	0100                	addi	s0,sp,128
    5396:	5d00                	lw	s0,56(a0)
	...
    53a0:	0005                	c.nop	1
    53a2:	007a                	c.slli	zero,0x1e
    53a4:	2536                	fld	fa0,328(sp)
    53a6:	009f 0000 0000      	0x9f
    53ac:	0000                	unimp
    53ae:	0100                	addi	s0,sp,128
    53b0:	5e00                	lw	s0,56(a2)
	...
    53ba:	0002                	c.slli64	zero
    53bc:	9f30                	0x9f30
	...
    53ce:	0001                	nop
    53d0:	0000005b          	0x5b
    53d4:	0000                	unimp
    53d6:	0000                	unimp
    53d8:	0700                	addi	s0,sp,896
    53da:	7f00                	flw	fs0,56(a4)
    53dc:	0a00                	addi	s0,sp,272
    53de:	2001                	jal	53de <_printf_float+0x2d6>
    53e0:	00009f27          	0x9f27
    53e4:	0000                	unimp
    53e6:	0000                	unimp
    53e8:	0000                	unimp
    53ea:	000c                	0xc
    53ec:	2531007b          	0x2531007b
    53f0:	007d                	c.nop	31
    53f2:	20010a27          	0x20010a27
    53f6:	00009f27          	0x9f27
    53fa:	0000                	unimp
    53fc:	0000                	unimp
    53fe:	0000                	unimp
    5400:	007f0007          	0x7f0007
    5404:	010a                	slli	sp,sp,0x2
    5406:	2720                	fld	fs0,72(a4)
    5408:	009f 0000 0000      	0x9f
    540e:	0000                	unimp
    5410:	0700                	addi	s0,sp,896
    5412:	7f00                	flw	fs0,56(a4)
    5414:	0a00                	addi	s0,sp,272
    5416:	2001                	jal	5416 <_printf_float+0x30e>
    5418:	00009f27          	0x9f27
    541c:	0000                	unimp
    541e:	0000                	unimp
    5420:	0000                	unimp
    5422:	007f0007          	0x7f0007
    5426:	010a                	slli	sp,sp,0x2
    5428:	2720                	fld	fs0,72(a4)
    542a:	009f 0000 0000      	0x9f
    5430:	0000                	unimp
    5432:	0700                	addi	s0,sp,896
    5434:	7f00                	flw	fs0,56(a4)
    5436:	0a00                	addi	s0,sp,272
    5438:	2001                	jal	5438 <_printf_float+0x330>
    543a:	00009f27          	0x9f27
    543e:	0000                	unimp
    5440:	0000                	unimp
    5442:	0000                	unimp
    5444:	007f0007          	0x7f0007
    5448:	010a                	slli	sp,sp,0x2
    544a:	2720                	fld	fs0,72(a4)
    544c:	009f 0000 0000      	0x9f
    5452:	0000                	unimp
    5454:	0700                	addi	s0,sp,896
    5456:	7f00                	flw	fs0,56(a4)
    5458:	0a00                	addi	s0,sp,272
    545a:	2001                	jal	545a <_printf_float+0x352>
    545c:	00009f27          	0x9f27
    5460:	0000                	unimp
    5462:	0000                	unimp
    5464:	0000                	unimp
    5466:	007a0007          	0x7a0007
    546a:	010a                	slli	sp,sp,0x2
    546c:	2720                	fld	fs0,72(a4)
    546e:	009f 0000 0000      	0x9f
    5474:	0000                	unimp
    5476:	0b00                	addi	s0,sp,400
    5478:	7f00                	flw	fs0,56(a4)
    547a:	0b00                	addi	s0,sp,400
    547c:	a001                	j	547c <_printf_float+0x374>
    547e:	20010a27          	0x20010a27
    5482:	00009f27          	0x9f27
    5486:	0000                	unimp
    5488:	0000                	unimp
    548a:	0000                	unimp
    548c:	0001                	nop
    548e:	005a                	c.slli	zero,0x16
	...
    549c:	0000                	unimp
    549e:	0800                	addi	s0,sp,16
    54a0:	7a00                	flw	fs0,48(a2)
    54a2:	7b00                	flw	fs0,48(a4)
    54a4:	2700                	fld	fs0,8(a4)
    54a6:	1a31                	addi	s4,s4,-20
    54a8:	009f 0000 0000      	0x9f
	...
    54b6:	0000                	unimp
    54b8:	0200                	addi	s0,sp,256
    54ba:	3000                	fld	fs0,32(s0)
    54bc:	009f 0000 0000      	0x9f
    54c2:	0000                	unimp
    54c4:	0200                	addi	s0,sp,256
    54c6:	3100                	fld	fs0,32(a0)
    54c8:	009f 0000 0000      	0x9f
    54ce:	0000                	unimp
    54d0:	0200                	addi	s0,sp,256
    54d2:	3100                	fld	fs0,32(a0)
    54d4:	009f 0000 0000      	0x9f
    54da:	0000                	unimp
    54dc:	0200                	addi	s0,sp,256
    54de:	3100                	fld	fs0,32(a0)
    54e0:	009f 0000 0000      	0x9f
    54e6:	0000                	unimp
    54e8:	0200                	addi	s0,sp,256
    54ea:	3100                	fld	fs0,32(a0)
    54ec:	009f 0000 0000      	0x9f
    54f2:	0000                	unimp
    54f4:	0200                	addi	s0,sp,256
    54f6:	3100                	fld	fs0,32(a0)
    54f8:	009f 0000 0000      	0x9f
    54fe:	0000                	unimp
    5500:	0200                	addi	s0,sp,256
    5502:	3100                	fld	fs0,32(a0)
    5504:	009f 0000 0000      	0x9f
    550a:	0000                	unimp
    550c:	0200                	addi	s0,sp,256
    550e:	3100                	fld	fs0,32(a0)
    5510:	009f 0000 0000      	0x9f
    5516:	0000                	unimp
    5518:	0200                	addi	s0,sp,256
    551a:	3100                	fld	fs0,32(a0)
    551c:	009f 0000 0000      	0x9f
    5522:	0000                	unimp
    5524:	bc00                	fsd	fs0,56(s0)
    5526:	fc000027          	0xfc000027
    552a:	0028                	addi	a0,sp,8
    552c:	0100                	addi	s0,sp,128
    552e:	5a00                	lw	s0,48(a2)
    5530:	28fc                	fld	fa5,208(s1)
    5532:	0000                	unimp
    5534:	2a3c                	fld	fa5,80(a2)
    5536:	0000                	unimp
    5538:	0004                	0x4
    553a:	9f5a01f3          	0x9f5a01f3
	...
    5546:	27bc                	fld	fa5,72(a5)
    5548:	0000                	unimp
    554a:	28f8                	fld	fa4,208(s1)
    554c:	0000                	unimp
    554e:	0001                	nop
    5550:	002a385b          	0x2a385b
    5554:	3c00                	fld	fs0,56(s0)
    5556:	002a                	c.slli	zero,0xa
    5558:	0100                	addi	s0,sp,128
    555a:	5a00                	lw	s0,48(a2)
	...
    5564:	27c4                	fld	fs1,136(a5)
    5566:	0000                	unimp
    5568:	27d4                	fld	fa3,136(a5)
    556a:	0000                	unimp
    556c:	0001                	nop
    556e:	0027d45b          	0x27d45b
    5572:	e400                	fsw	fs0,8(s0)
    5574:	07000027          	0x7000027
    5578:	7f00                	flw	fs0,56(a4)
    557a:	0a00                	addi	s0,sp,272
    557c:	2001                	jal	557c <_printf_float+0x474>
    557e:	27e49f27          	0x27e49f27
    5582:	0000                	unimp
    5584:	27e8                	fld	fa0,200(a5)
    5586:	0000                	unimp
    5588:	000c                	0xc
    558a:	2531007b          	0x2531007b
    558e:	007c                	addi	a5,sp,12
    5590:	20010a27          	0x20010a27
    5594:	28089f27          	0x28089f27
    5598:	0000                	unimp
    559a:	280c                	fld	fa1,16(s0)
    559c:	0000                	unimp
    559e:	007f0007          	0x7f0007
    55a2:	010a                	slli	sp,sp,0x2
    55a4:	2720                	fld	fs0,72(a4)
    55a6:	249f 0028 3400      	0x34000028249f
    55ac:	0028                	addi	a0,sp,8
    55ae:	0700                	addi	s0,sp,896
    55b0:	7f00                	flw	fs0,56(a4)
    55b2:	0a00                	addi	s0,sp,272
    55b4:	2001                	jal	55b4 <_printf_float+0x4ac>
    55b6:	284c9f27          	0x284c9f27
    55ba:	0000                	unimp
    55bc:	285c                	fld	fa5,144(s0)
    55be:	0000                	unimp
    55c0:	007f0007          	0x7f0007
    55c4:	010a                	slli	sp,sp,0x2
    55c6:	2720                	fld	fs0,72(a4)
    55c8:	749f 0028 8400      	0x84000028749f
    55ce:	0028                	addi	a0,sp,8
    55d0:	0700                	addi	s0,sp,896
    55d2:	7f00                	flw	fs0,56(a4)
    55d4:	0a00                	addi	s0,sp,272
    55d6:	2001                	jal	55d6 <_printf_float+0x4ce>
    55d8:	289c9f27          	0x289c9f27
    55dc:	0000                	unimp
    55de:	28ac                	fld	fa1,80(s1)
    55e0:	0000                	unimp
    55e2:	007f0007          	0x7f0007
    55e6:	010a                	slli	sp,sp,0x2
    55e8:	2720                	fld	fs0,72(a4)
    55ea:	c49f 0028 d400      	0xd4000028c49f
    55f0:	0028                	addi	a0,sp,8
    55f2:	0700                	addi	s0,sp,896
    55f4:	7f00                	flw	fs0,56(a4)
    55f6:	0a00                	addi	s0,sp,272
    55f8:	2001                	jal	55f8 <_printf_float+0x4f0>
    55fa:	28e49f27          	0x28e49f27
    55fe:	0000                	unimp
    5600:	28f4                	fld	fa3,208(s1)
    5602:	0000                	unimp
    5604:	007f0007          	0x7f0007
    5608:	010a                	slli	sp,sp,0x2
    560a:	2720                	fld	fs0,72(a4)
    560c:	009f 0000 0000      	0x9f
    5612:	0000                	unimp
    5614:	c400                	sw	s0,8(s0)
    5616:	cc000027          	0xcc000027
    561a:	01000027          	0x1000027
    561e:	5d00                	lw	s0,56(a0)
    5620:	27cc                	fld	fa1,136(a5)
    5622:	0000                	unimp
    5624:	27ec                	fld	fa1,200(a5)
    5626:	0000                	unimp
    5628:	0001                	nop
    562a:	ec5e                	fsw	fs7,24(sp)
    562c:	f8000027          	0xf8000027
    5630:	05000027          	0x5000027
    5634:	7d00                	flw	fs0,56(a0)
    5636:	3100                	fld	fs0,32(a0)
    5638:	9f25                	0x9f25
    563a:	27f8                	fld	fa4,200(a5)
    563c:	0000                	unimp
    563e:	2814                	fld	fa3,16(s0)
    5640:	0000                	unimp
    5642:	0001                	nop
    5644:	145e                	slli	s0,s0,0x37
    5646:	0028                	addi	a0,sp,8
    5648:	1c00                	addi	s0,sp,560
    564a:	0028                	addi	a0,sp,8
    564c:	0500                	addi	s0,sp,640
    564e:	7d00                	flw	fs0,56(a0)
    5650:	3200                	fld	fs0,32(a2)
    5652:	9f25                	0x9f25
    5654:	281c                	fld	fa5,16(s0)
    5656:	0000                	unimp
    5658:	283c                	fld	fa5,80(s0)
    565a:	0000                	unimp
    565c:	0001                	nop
    565e:	3c5c                	fld	fa5,184(s0)
    5660:	0028                	addi	a0,sp,8
    5662:	4400                	lw	s0,8(s0)
    5664:	0028                	addi	a0,sp,8
    5666:	0500                	addi	s0,sp,640
    5668:	7d00                	flw	fs0,56(a0)
    566a:	3300                	fld	fs0,32(a4)
    566c:	9f25                	0x9f25
    566e:	2844                	fld	fs1,144(s0)
    5670:	0000                	unimp
    5672:	2864                	fld	fs1,208(s0)
    5674:	0000                	unimp
    5676:	0001                	nop
    5678:	645e                	flw	fs0,212(sp)
    567a:	0028                	addi	a0,sp,8
    567c:	6c00                	flw	fs0,24(s0)
    567e:	0028                	addi	a0,sp,8
    5680:	0500                	addi	s0,sp,640
    5682:	7d00                	flw	fs0,56(a0)
    5684:	3400                	fld	fs0,40(s0)
    5686:	9f25                	0x9f25
    5688:	286c                	fld	fa1,208(s0)
    568a:	0000                	unimp
    568c:	288c                	fld	fa1,16(s1)
    568e:	0000                	unimp
    5690:	0001                	nop
    5692:	8c5c                	0x8c5c
    5694:	0028                	addi	a0,sp,8
    5696:	9400                	0x9400
    5698:	0028                	addi	a0,sp,8
    569a:	0500                	addi	s0,sp,640
    569c:	7d00                	flw	fs0,56(a0)
    569e:	3500                	fld	fs0,40(a0)
    56a0:	9f25                	0x9f25
    56a2:	2894                	fld	fa3,16(s1)
    56a4:	0000                	unimp
    56a6:	28b4                	fld	fa3,80(s1)
    56a8:	0000                	unimp
    56aa:	0001                	nop
    56ac:	b45e                	fsd	fs7,40(sp)
    56ae:	0028                	addi	a0,sp,8
    56b0:	bc00                	fsd	fs0,56(s0)
    56b2:	0028                	addi	a0,sp,8
    56b4:	0500                	addi	s0,sp,640
    56b6:	7d00                	flw	fs0,56(a0)
    56b8:	3600                	fld	fs0,40(a2)
    56ba:	9f25                	0x9f25
    56bc:	28bc                	fld	fa5,80(s1)
    56be:	0000                	unimp
    56c0:	28d8                	fld	fa4,144(s1)
    56c2:	0000                	unimp
    56c4:	0001                	nop
    56c6:	d85d                	beqz	s0,567c <_printf_float+0x574>
    56c8:	0028                	addi	a0,sp,8
    56ca:	f800                	fsw	fs0,48(s0)
    56cc:	0028                	addi	a0,sp,8
    56ce:	0200                	addi	s0,sp,256
    56d0:	3000                	fld	fs0,32(s0)
    56d2:	009f 0000 0000      	0x9f
    56d8:	0000                	unimp
    56da:	c400                	sw	s0,8(s0)
    56dc:	e8000027          	0xe8000027
    56e0:	08000027          	0x8000027
    56e4:	7b00                	flw	fs0,48(a4)
    56e6:	7a00                	flw	fs0,48(a2)
    56e8:	2700                	fld	fs0,8(a4)
    56ea:	1a31                	addi	s4,s4,-20
    56ec:	009f 0000 0000      	0x9f
    56f2:	0000                	unimp
    56f4:	c400                	sw	s0,8(s0)
    56f6:	d4000027          	0xd4000027
    56fa:	02000027          	0x2000027
    56fe:	3000                	fld	fs0,32(s0)
    5700:	d49f 0027 e800      	0xe8000027d49f
    5706:	02000027          	0x2000027
    570a:	3100                	fld	fs0,32(a0)
    570c:	fc9f 0027 1000      	0x10000027fc9f
    5712:	0028                	addi	a0,sp,8
    5714:	0200                	addi	s0,sp,256
    5716:	3100                	fld	fs0,32(a0)
    5718:	249f 0028 3800      	0x38000028249f
    571e:	0028                	addi	a0,sp,8
    5720:	0200                	addi	s0,sp,256
    5722:	3100                	fld	fs0,32(a0)
    5724:	4c9f 0028 6000      	0x600000284c9f
    572a:	0028                	addi	a0,sp,8
    572c:	0200                	addi	s0,sp,256
    572e:	3100                	fld	fs0,32(a0)
    5730:	749f 0028 8800      	0x88000028749f
    5736:	0028                	addi	a0,sp,8
    5738:	0200                	addi	s0,sp,256
    573a:	3100                	fld	fs0,32(a0)
    573c:	9c9f 0028 b000      	0xb00000289c9f
    5742:	0028                	addi	a0,sp,8
    5744:	0200                	addi	s0,sp,256
    5746:	3100                	fld	fs0,32(a0)
    5748:	c49f 0028 d800      	0xd8000028c49f
    574e:	0028                	addi	a0,sp,8
    5750:	0200                	addi	s0,sp,256
    5752:	3100                	fld	fs0,32(a0)
    5754:	e49f 0028 f800      	0xf8000028e49f
    575a:	0028                	addi	a0,sp,8
    575c:	0200                	addi	s0,sp,256
    575e:	3100                	fld	fs0,32(a0)
    5760:	009f 0000 0000      	0x9f
    5766:	0000                	unimp
    5768:	1400                	addi	s0,sp,544
    576a:	0029                	c.nop	10
    576c:	2400                	fld	fs0,8(s0)
    576e:	0029                	c.nop	10
    5770:	0700                	addi	s0,sp,896
    5772:	7a00                	flw	fs0,48(a2)
    5774:	0a00                	addi	s0,sp,272
    5776:	2001                	jal	5776 <_printf_float+0x66e>
    5778:	293c9f27          	0x293c9f27
    577c:	0000                	unimp
    577e:	294c                	fld	fa1,144(a0)
    5780:	0000                	unimp
    5782:	007a0007          	0x7a0007
    5786:	010a                	slli	sp,sp,0x2
    5788:	2720                	fld	fs0,72(a4)
    578a:	649f 0029 7400      	0x74000029649f
    5790:	0029                	c.nop	10
    5792:	0700                	addi	s0,sp,896
    5794:	7a00                	flw	fs0,48(a2)
    5796:	0a00                	addi	s0,sp,272
    5798:	2001                	jal	5798 <_printf_float+0x690>
    579a:	298c9f27          	0x298c9f27
    579e:	0000                	unimp
    57a0:	299c                	fld	fa5,16(a1)
    57a2:	0000                	unimp
    57a4:	007a0007          	0x7a0007
    57a8:	010a                	slli	sp,sp,0x2
    57aa:	2720                	fld	fs0,72(a4)
    57ac:	b49f 0029 c400      	0xc4000029b49f
    57b2:	0029                	c.nop	10
    57b4:	0700                	addi	s0,sp,896
    57b6:	7a00                	flw	fs0,48(a2)
    57b8:	0a00                	addi	s0,sp,272
    57ba:	2001                	jal	57ba <_printf_float+0x6b2>
    57bc:	29dc9f27          	0x29dc9f27
    57c0:	0000                	unimp
    57c2:	29ec                	fld	fa1,208(a1)
    57c4:	0000                	unimp
    57c6:	007a0007          	0x7a0007
    57ca:	010a                	slli	sp,sp,0x2
    57cc:	2720                	fld	fs0,72(a4)
    57ce:	049f 002a 1400      	0x1400002a049f
    57d4:	002a                	c.slli	zero,0xa
    57d6:	0700                	addi	s0,sp,896
    57d8:	7a00                	flw	fs0,48(a2)
    57da:	0a00                	addi	s0,sp,272
    57dc:	2001                	jal	57dc <_printf_float+0x6d4>
    57de:	2a249f27          	0x2a249f27
    57e2:	0000                	unimp
    57e4:	2a30                	fld	fa2,80(a2)
    57e6:	0000                	unimp
    57e8:	007a0007          	0x7a0007
    57ec:	010a                	slli	sp,sp,0x2
    57ee:	2720                	fld	fs0,72(a4)
    57f0:	309f 002a 3400      	0x3400002a309f
    57f6:	002a                	c.slli	zero,0xa
    57f8:	0b00                	addi	s0,sp,400
    57fa:	7a00                	flw	fs0,48(a2)
    57fc:	0b00                	addi	s0,sp,400
    57fe:	a001                	j	57fe <_printf_float+0x6f6>
    5800:	20010a27          	0x20010a27
    5804:	00009f27          	0x9f27
    5808:	0000                	unimp
    580a:	0000                	unimp
    580c:	0000                	unimp
    580e:	2904                	fld	fs1,16(a0)
    5810:	0000                	unimp
    5812:	290c                	fld	fa1,16(a0)
    5814:	0000                	unimp
    5816:	0001                	nop
    5818:	0c5e                	slli	s8,s8,0x17
    581a:	0029                	c.nop	10
    581c:	2c00                	fld	fs0,24(s0)
    581e:	0029                	c.nop	10
    5820:	0100                	addi	s0,sp,128
    5822:	5d00                	lw	s0,56(a0)
    5824:	292c                	fld	fa1,80(a0)
    5826:	0000                	unimp
    5828:	2934                	fld	fa3,80(a0)
    582a:	0000                	unimp
    582c:	0005                	c.nop	1
    582e:	007e                	c.slli	zero,0x1f
    5830:	2531                	jal	5e3c <_printf_i+0x3d4>
    5832:	349f 0029 5400      	0x54000029349f
    5838:	0029                	c.nop	10
    583a:	0100                	addi	s0,sp,128
    583c:	5f00                	lw	s0,56(a4)
    583e:	2954                	fld	fa3,144(a0)
    5840:	0000                	unimp
    5842:	295c                	fld	fa5,144(a0)
    5844:	0000                	unimp
    5846:	0005                	c.nop	1
    5848:	007e                	c.slli	zero,0x1f
    584a:	2532                	fld	fa0,264(sp)
    584c:	5c9f 0029 7c00      	0x7c0000295c9f
    5852:	0029                	c.nop	10
    5854:	0100                	addi	s0,sp,128
    5856:	5d00                	lw	s0,56(a0)
    5858:	297c                	fld	fa5,208(a0)
    585a:	0000                	unimp
    585c:	2984                	fld	fs1,16(a1)
    585e:	0000                	unimp
    5860:	0005                	c.nop	1
    5862:	007e                	c.slli	zero,0x1f
    5864:	849f2533          	0x849f2533
    5868:	0029                	c.nop	10
    586a:	a400                	fsd	fs0,8(s0)
    586c:	0029                	c.nop	10
    586e:	0100                	addi	s0,sp,128
    5870:	5f00                	lw	s0,56(a4)
    5872:	29a4                	fld	fs1,80(a1)
    5874:	0000                	unimp
    5876:	29ac                	fld	fa1,80(a1)
    5878:	0000                	unimp
    587a:	0005                	c.nop	1
    587c:	007e                	c.slli	zero,0x1f
    587e:	2534                	fld	fa3,72(a0)
    5880:	ac9f 0029 cc00      	0xcc000029ac9f
    5886:	0029                	c.nop	10
    5888:	0100                	addi	s0,sp,128
    588a:	5d00                	lw	s0,56(a0)
    588c:	29cc                	fld	fa1,144(a1)
    588e:	0000                	unimp
    5890:	29d4                	fld	fa3,144(a1)
    5892:	0000                	unimp
    5894:	0005                	c.nop	1
    5896:	007e                	c.slli	zero,0x1f
    5898:	2535                	jal	5ec4 <iprintf+0x70>
    589a:	d49f 0029 f400      	0xf4000029d49f
    58a0:	0029                	c.nop	10
    58a2:	0100                	addi	s0,sp,128
    58a4:	5f00                	lw	s0,56(a4)
    58a6:	29f4                	fld	fa3,208(a1)
    58a8:	0000                	unimp
    58aa:	29fc                	fld	fa5,208(a1)
    58ac:	0000                	unimp
    58ae:	0005                	c.nop	1
    58b0:	007e                	c.slli	zero,0x1f
    58b2:	2536                	fld	fa0,328(sp)
    58b4:	fc9f 0029 1800      	0x18000029fc9f
    58ba:	002a                	c.slli	zero,0xa
    58bc:	0100                	addi	s0,sp,128
    58be:	5e00                	lw	s0,56(a2)
    58c0:	2a18                	fld	fa4,16(a2)
    58c2:	0000                	unimp
    58c4:	2a38                	fld	fa4,80(a2)
    58c6:	0000                	unimp
    58c8:	0002                	c.slli64	zero
    58ca:	9f30                	0x9f30
	...
    58d4:	2914                	fld	fa3,16(a0)
    58d6:	0000                	unimp
    58d8:	2928                	fld	fa0,80(a0)
    58da:	0000                	unimp
    58dc:	0002                	c.slli64	zero
    58de:	9f31                	0x9f31
    58e0:	293c                	fld	fa5,80(a0)
    58e2:	0000                	unimp
    58e4:	2950                	fld	fa2,144(a0)
    58e6:	0000                	unimp
    58e8:	0002                	c.slli64	zero
    58ea:	9f31                	0x9f31
    58ec:	2964                	fld	fs1,208(a0)
    58ee:	0000                	unimp
    58f0:	2978                	fld	fa4,208(a0)
    58f2:	0000                	unimp
    58f4:	0002                	c.slli64	zero
    58f6:	9f31                	0x9f31
    58f8:	298c                	fld	fa1,16(a1)
    58fa:	0000                	unimp
    58fc:	29a0                	fld	fs0,80(a1)
    58fe:	0000                	unimp
    5900:	0002                	c.slli64	zero
    5902:	9f31                	0x9f31
    5904:	29b4                	fld	fa3,80(a1)
    5906:	0000                	unimp
    5908:	29c8                	fld	fa0,144(a1)
    590a:	0000                	unimp
    590c:	0002                	c.slli64	zero
    590e:	9f31                	0x9f31
    5910:	29dc                	fld	fa5,144(a1)
    5912:	0000                	unimp
    5914:	29f0                	fld	fa2,208(a1)
    5916:	0000                	unimp
    5918:	0002                	c.slli64	zero
    591a:	9f31                	0x9f31
    591c:	2a04                	fld	fs1,16(a2)
    591e:	0000                	unimp
    5920:	2a18                	fld	fa4,16(a2)
    5922:	0000                	unimp
    5924:	0002                	c.slli64	zero
    5926:	9f31                	0x9f31
    5928:	2a24                	fld	fs1,80(a2)
    592a:	0000                	unimp
    592c:	2a38                	fld	fa4,80(a2)
    592e:	0000                	unimp
    5930:	0002                	c.slli64	zero
    5932:	9f31                	0x9f31
	...
    593c:	2f4c                	fld	fa1,152(a4)
    593e:	0000                	unimp
    5940:	2f68                	fld	fa0,216(a4)
    5942:	0000                	unimp
    5944:	0001                	nop
    5946:	685a                	flw	fa6,148(sp)
    5948:	d400002f          	0xd400002f
    594c:	0031                	c.nop	12
    594e:	0400                	addi	s0,sp,512
    5950:	f300                	fsw	fs0,32(a4)
    5952:	5a01                	li	s4,-32
    5954:	009f 0000 0000      	0x9f
    595a:	0000                	unimp
    595c:	4c00                	lw	s0,24(s0)
    595e:	7000002f          	0x7000002f
    5962:	0100002f          	0x100002f
    5966:	5b00                	lw	s0,48(a4)
    5968:	2f70                	fld	fa2,216(a4)
    596a:	0000                	unimp
    596c:	31d4                	fld	fa3,160(a1)
    596e:	0000                	unimp
    5970:	0004                	0x4
    5972:	9f5b01f3          	0x9f5b01f3
	...
    597e:	2f60                	fld	fs0,216(a4)
    5980:	0000                	unimp
    5982:	2f70                	fld	fa2,216(a4)
    5984:	0000                	unimp
    5986:	0001                	nop
    5988:	0000005b          	0x5b
    598c:	0000                	unimp
    598e:	0000                	unimp
    5990:	6000                	flw	fs0,0(s0)
    5992:	9400002f          	0x9400002f
    5996:	0030                	addi	a2,sp,8
    5998:	0100                	addi	s0,sp,128
    599a:	5f00                	lw	s0,56(a4)
	...
    59a4:	2f60                	fld	fs0,216(a4)
    59a6:	0000                	unimp
    59a8:	2f6c                	fld	fa1,216(a4)
    59aa:	0000                	unimp
    59ac:	0001                	nop
    59ae:	002f6c5b          	0x2f6c5b
    59b2:	7c00                	flw	fs0,56(s0)
    59b4:	0700002f          	0x700002f
    59b8:	7a00                	flw	fs0,48(a2)
    59ba:	0a00                	addi	s0,sp,272
    59bc:	2001                	jal	59bc <_printf_common+0x104>
    59be:	2fa09f27          	0x2fa09f27
    59c2:	0000                	unimp
    59c4:	2fa4                	fld	fs1,88(a5)
    59c6:	0000                	unimp
    59c8:	007a0007          	0x7a0007
    59cc:	010a                	slli	sp,sp,0x2
    59ce:	2720                	fld	fs0,72(a4)
    59d0:	bc9f 002f cc00      	0xcc00002fbc9f
    59d6:	0700002f          	0x700002f
    59da:	7a00                	flw	fs0,48(a2)
    59dc:	0a00                	addi	s0,sp,272
    59de:	2001                	jal	59de <_printf_common+0x126>
    59e0:	2fe49f27          	0x2fe49f27
    59e4:	0000                	unimp
    59e6:	2ff4                	fld	fa3,216(a5)
    59e8:	0000                	unimp
    59ea:	007a0007          	0x7a0007
    59ee:	010a                	slli	sp,sp,0x2
    59f0:	2720                	fld	fs0,72(a4)
    59f2:	0c9f 0030 1c00      	0x1c0000300c9f
    59f8:	0030                	addi	a2,sp,8
    59fa:	0700                	addi	s0,sp,896
    59fc:	7a00                	flw	fs0,48(a2)
    59fe:	0a00                	addi	s0,sp,272
    5a00:	2001                	jal	5a00 <_printf_common+0x148>
    5a02:	30349f27          	0x30349f27
    5a06:	0000                	unimp
    5a08:	3044                	fld	fs1,160(s0)
    5a0a:	0000                	unimp
    5a0c:	007a0007          	0x7a0007
    5a10:	010a                	slli	sp,sp,0x2
    5a12:	2720                	fld	fs0,72(a4)
    5a14:	5c9f 0030 6c00      	0x6c0000305c9f
    5a1a:	0030                	addi	a2,sp,8
    5a1c:	0700                	addi	s0,sp,896
    5a1e:	7a00                	flw	fs0,48(a2)
    5a20:	0a00                	addi	s0,sp,272
    5a22:	2001                	jal	5a22 <_printf_common+0x16a>
    5a24:	307c9f27          	0x307c9f27
    5a28:	0000                	unimp
    5a2a:	308c                	fld	fa1,32(s1)
    5a2c:	0000                	unimp
    5a2e:	007a0007          	0x7a0007
    5a32:	010a                	slli	sp,sp,0x2
    5a34:	2720                	fld	fs0,72(a4)
    5a36:	009f 0000 0000      	0x9f
    5a3c:	0000                	unimp
    5a3e:	6000                	flw	fs0,0(s0)
    5a40:	6400002f          	0x6400002f
    5a44:	0100002f          	0x100002f
    5a48:	5e00                	lw	s0,56(a2)
    5a4a:	2f64                	fld	fs1,216(a4)
    5a4c:	0000                	unimp
    5a4e:	2f84                	fld	fs1,24(a5)
    5a50:	0000                	unimp
    5a52:	0001                	nop
    5a54:	845d                	srai	s0,s0,0x17
    5a56:	9000002f          	0x9000002f
    5a5a:	0500002f          	0x500002f
    5a5e:	7e00                	flw	fs0,56(a2)
    5a60:	3100                	fld	fs0,32(a0)
    5a62:	9f25                	0x9f25
    5a64:	2f90                	fld	fa2,24(a5)
    5a66:	0000                	unimp
    5a68:	2fac                	fld	fa1,88(a5)
    5a6a:	0000                	unimp
    5a6c:	0001                	nop
    5a6e:	ac5d                	j	5d24 <_printf_i+0x2bc>
    5a70:	b400002f          	0xb400002f
    5a74:	0500002f          	0x500002f
    5a78:	7e00                	flw	fs0,56(a2)
    5a7a:	3200                	fld	fs0,32(a2)
    5a7c:	9f25                	0x9f25
    5a7e:	2fb4                	fld	fa3,88(a5)
    5a80:	0000                	unimp
    5a82:	2fd4                	fld	fa3,152(a5)
    5a84:	0000                	unimp
    5a86:	0001                	nop
    5a88:	d45c                	sw	a5,44(s0)
    5a8a:	dc00002f          	0xdc00002f
    5a8e:	0500002f          	0x500002f
    5a92:	7e00                	flw	fs0,56(a2)
    5a94:	3300                	fld	fs0,32(a4)
    5a96:	9f25                	0x9f25
    5a98:	2fdc                	fld	fa5,152(a5)
    5a9a:	0000                	unimp
    5a9c:	2ffc                	fld	fa5,216(a5)
    5a9e:	0000                	unimp
    5aa0:	0001                	nop
    5aa2:	fc5d                	bnez	s0,5a60 <_printf_common+0x1a8>
    5aa4:	0400002f          	0x400002f
    5aa8:	0030                	addi	a2,sp,8
    5aaa:	0500                	addi	s0,sp,640
    5aac:	7e00                	flw	fs0,56(a2)
    5aae:	3400                	fld	fs0,40(s0)
    5ab0:	9f25                	0x9f25
    5ab2:	3004                	fld	fs1,32(s0)
    5ab4:	0000                	unimp
    5ab6:	3024                	fld	fs1,96(s0)
    5ab8:	0000                	unimp
    5aba:	0001                	nop
    5abc:	245c                	fld	fa5,136(s0)
    5abe:	0030                	addi	a2,sp,8
    5ac0:	2c00                	fld	fs0,24(s0)
    5ac2:	0030                	addi	a2,sp,8
    5ac4:	0500                	addi	s0,sp,640
    5ac6:	7e00                	flw	fs0,56(a2)
    5ac8:	3500                	fld	fs0,40(a0)
    5aca:	9f25                	0x9f25
    5acc:	302c                	fld	fa1,96(s0)
    5ace:	0000                	unimp
    5ad0:	304c                	fld	fa1,160(s0)
    5ad2:	0000                	unimp
    5ad4:	0001                	nop
    5ad6:	4c5d                	li	s8,23
    5ad8:	0030                	addi	a2,sp,8
    5ada:	5400                	lw	s0,40(s0)
    5adc:	0030                	addi	a2,sp,8
    5ade:	0500                	addi	s0,sp,640
    5ae0:	7e00                	flw	fs0,56(a2)
    5ae2:	3600                	fld	fs0,40(a2)
    5ae4:	9f25                	0x9f25
    5ae6:	3054                	fld	fa3,160(s0)
    5ae8:	0000                	unimp
    5aea:	3070                	fld	fa2,224(s0)
    5aec:	0000                	unimp
    5aee:	0001                	nop
    5af0:	705e                	flw	ft0,244(sp)
    5af2:	0030                	addi	a2,sp,8
    5af4:	9000                	0x9000
    5af6:	0030                	addi	a2,sp,8
    5af8:	0200                	addi	s0,sp,256
    5afa:	3000                	fld	fs0,32(s0)
    5afc:	009f 0000 0000      	0x9f
    5b02:	0000                	unimp
    5b04:	6000                	flw	fs0,0(s0)
    5b06:	6800002f          	0x6800002f
    5b0a:	0800002f          	0x800002f
    5b0e:	7b00                	flw	fs0,48(a4)
    5b10:	7a00                	flw	fs0,48(a2)
    5b12:	2700                	fld	fs0,8(a4)
    5b14:	1a31                	addi	s4,s4,-20
    5b16:	009f 0000 0000      	0x9f
    5b1c:	0000                	unimp
    5b1e:	6000                	flw	fs0,0(s0)
    5b20:	6c00002f          	0x6c00002f
    5b24:	0200002f          	0x200002f
    5b28:	3000                	fld	fs0,32(s0)
    5b2a:	6c9f 002f 8000      	0x8000002f6c9f
    5b30:	0200002f          	0x200002f
    5b34:	3100                	fld	fs0,32(a0)
    5b36:	949f 002f a800      	0xa800002f949f
    5b3c:	0200002f          	0x200002f
    5b40:	3100                	fld	fs0,32(a0)
    5b42:	bc9f 002f d000      	0xd000002fbc9f
    5b48:	0200002f          	0x200002f
    5b4c:	3100                	fld	fs0,32(a0)
    5b4e:	e49f 002f f800      	0xf800002fe49f
    5b54:	0200002f          	0x200002f
    5b58:	3100                	fld	fs0,32(a0)
    5b5a:	0c9f 0030 2000      	0x200000300c9f
    5b60:	0030                	addi	a2,sp,8
    5b62:	0200                	addi	s0,sp,256
    5b64:	3100                	fld	fs0,32(a0)
    5b66:	349f 0030 4800      	0x48000030349f
    5b6c:	0030                	addi	a2,sp,8
    5b6e:	0200                	addi	s0,sp,256
    5b70:	3100                	fld	fs0,32(a0)
    5b72:	5c9f 0030 7000      	0x700000305c9f
    5b78:	0030                	addi	a2,sp,8
    5b7a:	0200                	addi	s0,sp,256
    5b7c:	3100                	fld	fs0,32(a0)
    5b7e:	7c9f 0030 9000      	0x900000307c9f
    5b84:	0030                	addi	a2,sp,8
    5b86:	0200                	addi	s0,sp,256
    5b88:	3100                	fld	fs0,32(a0)
    5b8a:	009f 0000 0000      	0x9f
    5b90:	0000                	unimp
    5b92:	ac00                	fsd	fs0,24(s0)
    5b94:	0030                	addi	a2,sp,8
    5b96:	bc00                	fsd	fs0,56(s0)
    5b98:	0030                	addi	a2,sp,8
    5b9a:	0700                	addi	s0,sp,896
    5b9c:	7a00                	flw	fs0,48(a2)
    5b9e:	0a00                	addi	s0,sp,272
    5ba0:	2001                	jal	5ba0 <_printf_i+0x138>
    5ba2:	30d49f27          	0x30d49f27
    5ba6:	0000                	unimp
    5ba8:	30e4                	fld	fs1,224(s1)
    5baa:	0000                	unimp
    5bac:	007a0007          	0x7a0007
    5bb0:	010a                	slli	sp,sp,0x2
    5bb2:	2720                	fld	fs0,72(a4)
    5bb4:	fc9f 0030 0c00      	0xc000030fc9f
    5bba:	0031                	c.nop	12
    5bbc:	0700                	addi	s0,sp,896
    5bbe:	7a00                	flw	fs0,48(a2)
    5bc0:	0a00                	addi	s0,sp,272
    5bc2:	2001                	jal	5bc2 <_printf_i+0x15a>
    5bc4:	31249f27          	0x31249f27
    5bc8:	0000                	unimp
    5bca:	3134                	fld	fa3,96(a0)
    5bcc:	0000                	unimp
    5bce:	007a0007          	0x7a0007
    5bd2:	010a                	slli	sp,sp,0x2
    5bd4:	2720                	fld	fs0,72(a4)
    5bd6:	4c9f 0031 5c00      	0x5c0000314c9f
    5bdc:	0031                	c.nop	12
    5bde:	0700                	addi	s0,sp,896
    5be0:	7a00                	flw	fs0,48(a2)
    5be2:	0a00                	addi	s0,sp,272
    5be4:	2001                	jal	5be4 <_printf_i+0x17c>
    5be6:	31749f27          	0x31749f27
    5bea:	0000                	unimp
    5bec:	3184                	fld	fs1,32(a1)
    5bee:	0000                	unimp
    5bf0:	007a0007          	0x7a0007
    5bf4:	010a                	slli	sp,sp,0x2
    5bf6:	2720                	fld	fs0,72(a4)
    5bf8:	9c9f 0031 ac00      	0xac0000319c9f
    5bfe:	0031                	c.nop	12
    5c00:	0700                	addi	s0,sp,896
    5c02:	7a00                	flw	fs0,48(a2)
    5c04:	0a00                	addi	s0,sp,272
    5c06:	2001                	jal	5c06 <_printf_i+0x19e>
    5c08:	31bc9f27          	0x31bc9f27
    5c0c:	0000                	unimp
    5c0e:	31c8                	fld	fa0,160(a1)
    5c10:	0000                	unimp
    5c12:	007a0007          	0x7a0007
    5c16:	010a                	slli	sp,sp,0x2
    5c18:	2720                	fld	fs0,72(a4)
    5c1a:	c89f 0031 cc00      	0xcc000031c89f
    5c20:	0031                	c.nop	12
    5c22:	0b00                	addi	s0,sp,400
    5c24:	7a00                	flw	fs0,48(a2)
    5c26:	0b00                	addi	s0,sp,400
    5c28:	a001                	j	5c28 <_printf_i+0x1c0>
    5c2a:	20010a27          	0x20010a27
    5c2e:	00009f27          	0x9f27
    5c32:	0000                	unimp
    5c34:	0000                	unimp
    5c36:	0000                	unimp
    5c38:	30a0                	fld	fs0,96(s1)
    5c3a:	0000                	unimp
    5c3c:	30a4                	fld	fs1,96(s1)
    5c3e:	0000                	unimp
    5c40:	0001                	nop
    5c42:	a45f 0030 c400      	0xc4000030a45f
    5c48:	0030                	addi	a2,sp,8
    5c4a:	0100                	addi	s0,sp,128
    5c4c:	5d00                	lw	s0,56(a0)
    5c4e:	30c4                	fld	fs1,160(s1)
    5c50:	0000                	unimp
    5c52:	30cc                	fld	fa1,160(s1)
    5c54:	0000                	unimp
    5c56:	0005                	c.nop	1
    5c58:	007f                	0x7f
    5c5a:	2531                	jal	6266 <__swsetup_r+0x46>
    5c5c:	cc9f 0030 ec00      	0xec000030cc9f
    5c62:	0030                	addi	a2,sp,8
    5c64:	0100                	addi	s0,sp,128
    5c66:	5e00                	lw	s0,56(a2)
    5c68:	30ec                	fld	fa1,224(s1)
    5c6a:	0000                	unimp
    5c6c:	30f4                	fld	fa3,224(s1)
    5c6e:	0000                	unimp
    5c70:	0005                	c.nop	1
    5c72:	007f                	0x7f
    5c74:	2532                	fld	fa0,264(sp)
    5c76:	f49f 0030 1400      	0x14000030f49f
    5c7c:	0031                	c.nop	12
    5c7e:	0100                	addi	s0,sp,128
    5c80:	5d00                	lw	s0,56(a0)
    5c82:	3114                	fld	fa3,32(a0)
    5c84:	0000                	unimp
    5c86:	311c                	fld	fa5,32(a0)
    5c88:	0000                	unimp
    5c8a:	0005                	c.nop	1
    5c8c:	007f                	0x7f
    5c8e:	1c9f2533          	0x1c9f2533
    5c92:	0031                	c.nop	12
    5c94:	3c00                	fld	fs0,56(s0)
    5c96:	0031                	c.nop	12
    5c98:	0100                	addi	s0,sp,128
    5c9a:	5e00                	lw	s0,56(a2)
    5c9c:	313c                	fld	fa5,96(a0)
    5c9e:	0000                	unimp
    5ca0:	3144                	fld	fs1,160(a0)
    5ca2:	0000                	unimp
    5ca4:	0005                	c.nop	1
    5ca6:	007f                	0x7f
    5ca8:	2534                	fld	fa3,72(a0)
    5caa:	449f 0031 6400      	0x64000031449f
    5cb0:	0031                	c.nop	12
    5cb2:	0100                	addi	s0,sp,128
    5cb4:	5d00                	lw	s0,56(a0)
    5cb6:	3164                	fld	fs1,224(a0)
    5cb8:	0000                	unimp
    5cba:	316c                	fld	fa1,224(a0)
    5cbc:	0000                	unimp
    5cbe:	0005                	c.nop	1
    5cc0:	007f                	0x7f
    5cc2:	2535                	jal	62ee <__swsetup_r+0xce>
    5cc4:	6c9f 0031 8c00      	0x8c0000316c9f
    5cca:	0031                	c.nop	12
    5ccc:	0100                	addi	s0,sp,128
    5cce:	5e00                	lw	s0,56(a2)
    5cd0:	318c                	fld	fa1,32(a1)
    5cd2:	0000                	unimp
    5cd4:	3194                	fld	fa3,32(a1)
    5cd6:	0000                	unimp
    5cd8:	0005                	c.nop	1
    5cda:	007f                	0x7f
    5cdc:	2536                	fld	fa0,328(sp)
    5cde:	949f 0031 b000      	0xb0000031949f
    5ce4:	0031                	c.nop	12
    5ce6:	0100                	addi	s0,sp,128
    5ce8:	5f00                	lw	s0,56(a4)
    5cea:	31b0                	fld	fa2,96(a1)
    5cec:	0000                	unimp
    5cee:	31d0                	fld	fa2,160(a1)
    5cf0:	0000                	unimp
    5cf2:	0002                	c.slli64	zero
    5cf4:	9f30                	0x9f30
	...
    5cfe:	30ac                	fld	fa1,96(s1)
    5d00:	0000                	unimp
    5d02:	30c0                	fld	fs0,160(s1)
    5d04:	0000                	unimp
    5d06:	0002                	c.slli64	zero
    5d08:	9f31                	0x9f31
    5d0a:	30d4                	fld	fa3,160(s1)
    5d0c:	0000                	unimp
    5d0e:	30e8                	fld	fa0,224(s1)
    5d10:	0000                	unimp
    5d12:	0002                	c.slli64	zero
    5d14:	9f31                	0x9f31
    5d16:	30fc                	fld	fa5,224(s1)
    5d18:	0000                	unimp
    5d1a:	3110                	fld	fa2,32(a0)
    5d1c:	0000                	unimp
    5d1e:	0002                	c.slli64	zero
    5d20:	9f31                	0x9f31
    5d22:	3124                	fld	fs1,96(a0)
    5d24:	0000                	unimp
    5d26:	3138                	fld	fa4,96(a0)
    5d28:	0000                	unimp
    5d2a:	0002                	c.slli64	zero
    5d2c:	9f31                	0x9f31
    5d2e:	314c                	fld	fa1,160(a0)
    5d30:	0000                	unimp
    5d32:	3160                	fld	fs0,224(a0)
    5d34:	0000                	unimp
    5d36:	0002                	c.slli64	zero
    5d38:	9f31                	0x9f31
    5d3a:	3174                	fld	fa3,224(a0)
    5d3c:	0000                	unimp
    5d3e:	3188                	fld	fa0,32(a1)
    5d40:	0000                	unimp
    5d42:	0002                	c.slli64	zero
    5d44:	9f31                	0x9f31
    5d46:	319c                	fld	fa5,32(a1)
    5d48:	0000                	unimp
    5d4a:	31b0                	fld	fa2,96(a1)
    5d4c:	0000                	unimp
    5d4e:	0002                	c.slli64	zero
    5d50:	9f31                	0x9f31
    5d52:	31bc                	fld	fa5,96(a1)
    5d54:	0000                	unimp
    5d56:	31d0                	fld	fa2,160(a1)
    5d58:	0000                	unimp
    5d5a:	0002                	c.slli64	zero
    5d5c:	9f31                	0x9f31
	...
    5d66:	31e4                	fld	fs1,224(a1)
    5d68:	0000                	unimp
    5d6a:	31ff                	0x31ff
    5d6c:	0000                	unimp
    5d6e:	0001                	nop
    5d70:	005a                	c.slli	zero,0x16
    5d72:	0000                	unimp
    5d74:	0000                	unimp
    5d76:	0000                	unimp
    5d78:	e800                	fsw	fs0,16(s0)
    5d7a:	0031                	c.nop	12
    5d7c:	ff00                	fsw	fs0,56(a4)
    5d7e:	0031                	c.nop	12
    5d80:	0100                	addi	s0,sp,128
    5d82:	5b00                	lw	s0,48(a4)
	...
    5d8c:	320c                	fld	fa1,32(a2)
    5d8e:	0000                	unimp
    5d90:	322c                	fld	fa1,96(a2)
    5d92:	0000                	unimp
    5d94:	0001                	nop
    5d96:	2c5a                	fld	fs8,400(sp)
    5d98:	0032                	c.slli	zero,0xc
    5d9a:	3000                	fld	fs0,32(s0)
    5d9c:	0032                	c.slli	zero,0xc
    5d9e:	0400                	addi	s0,sp,512
    5da0:	f300                	fsw	fs0,32(a4)
    5da2:	5a01                	li	s4,-32
    5da4:	009f 0000 0000      	0x9f
    5daa:	0000                	unimp
    5dac:	0c00                	addi	s0,sp,528
    5dae:	0032                	c.slli	zero,0xc
    5db0:	1800                	addi	s0,sp,48
    5db2:	0032                	c.slli	zero,0xc
    5db4:	0100                	addi	s0,sp,128
    5db6:	5b00                	lw	s0,48(a4)
    5db8:	3218                	fld	fa4,32(a2)
    5dba:	0000                	unimp
    5dbc:	3230                	fld	fa2,96(a2)
    5dbe:	0000                	unimp
    5dc0:	0004                	0x4
    5dc2:	9f5b01f3          	0x9f5b01f3
	...
    5dce:	320c                	fld	fa1,32(a2)
    5dd0:	0000                	unimp
    5dd2:	3218                	fld	fa4,32(a2)
    5dd4:	0000                	unimp
    5dd6:	0002                	c.slli64	zero
    5dd8:	9f30                	0x9f30
    5dda:	3218                	fld	fa4,32(a2)
    5ddc:	0000                	unimp
    5dde:	3220                	fld	fs0,96(a2)
    5de0:	0000                	unimp
    5de2:	007b0007          	0x7b0007
    5de6:	1c5b01f3          	0x1c5b01f3
    5dea:	209f 0032 2400      	0x24000032209f
    5df0:	0032                	c.slli	zero,0xc
    5df2:	0800                	addi	s0,sp,16
    5df4:	f300                	fsw	fs0,32(a4)
    5df6:	5b01                	li	s6,-32
    5df8:	7b20                	flw	fs0,112(a4)
    5dfa:	2200                	fld	fs0,0(a2)
    5dfc:	009f 0000 0000      	0x9f
    5e02:	0000                	unimp
    5e04:	1800                	addi	s0,sp,48
    5e06:	0032                	c.slli	zero,0xc
    5e08:	2000                	fld	fs0,0(s0)
    5e0a:	0032                	c.slli	zero,0xc
    5e0c:	0200                	addi	s0,sp,256
    5e0e:	7b00                	flw	fs0,48(a4)
    5e10:	2000                	fld	fs0,0(s0)
    5e12:	0032                	c.slli	zero,0xc
    5e14:	2400                	fld	fs0,8(s0)
    5e16:	0032                	c.slli	zero,0xc
    5e18:	0200                	addi	s0,sp,256
    5e1a:	7b00                	flw	fs0,48(a4)
    5e1c:	007f                	0x7f
	...
    5e2a:	0000                	unimp
    5e2c:	0100                	addi	s0,sp,128
    5e2e:	5a00                	lw	s0,48(a2)
	...
    5e38:	0004                	0x4
    5e3a:	9f5a01f3          	0x9f5a01f3
	...
    5e4e:	0002                	c.slli64	zero
    5e50:	9f30                	0x9f30
	...
    5e5a:	0001                	nop
    5e5c:	005c                	addi	a5,sp,4
    5e5e:	0000                	unimp
    5e60:	0000                	unimp
    5e62:	0000                	unimp
    5e64:	0100                	addi	s0,sp,128
    5e66:	5b00                	lw	s0,48(a4)
	...
    5e78:	0005                	c.nop	1
    5e7a:	007f                	0x7f
    5e7c:	1a32                	slli	s4,s4,0x2c
    5e7e:	009f 0000 0000      	0x9f
    5e84:	0000                	unimp
    5e86:	0100                	addi	s0,sp,128
    5e88:	5f00                	lw	s0,56(a4)
	...
    5e9a:	0005                	c.nop	1
    5e9c:	007e                	c.slli	zero,0x1f
    5e9e:	1a34                	addi	a3,sp,312
    5ea0:	009f 0000 0000      	0x9f
    5ea6:	0000                	unimp
    5ea8:	0100                	addi	s0,sp,128
    5eaa:	5e00                	lw	s0,56(a2)
	...
    5ebc:	0001                	nop
    5ebe:	005a                	c.slli	zero,0x16
    5ec0:	0000                	unimp
    5ec2:	0000                	unimp
    5ec4:	0000                	unimp
    5ec6:	0300                	addi	s0,sp,384
    5ec8:	7a00                	flw	fs0,48(a2)
    5eca:	9f7f                	0x9f7f
	...
    5ed4:	0004                	0x4
    5ed6:	9f5a01f3          	0x9f5a01f3
	...
    5eea:	0002                	c.slli64	zero
    5eec:	9f30                	0x9f30
	...
    5ef6:	0008                	0x8
    5ef8:	205a01f3          	0x205a01f3
    5efc:	007a                	c.slli	zero,0x1e
    5efe:	9f22                	add	t5,t5,s0
	...
    5f08:	007a0007          	0x7a0007
    5f0c:	1c5a01f3          	0x1c5a01f3
    5f10:	009f 0000 0000      	0x9f
    5f16:	0000                	unimp
    5f18:	0800                	addi	s0,sp,16
    5f1a:	f300                	fsw	fs0,32(a4)
    5f1c:	5a01                	li	s4,-32
    5f1e:	7a20                	flw	fs0,112(a2)
    5f20:	2200                	fld	fs0,0(a2)
    5f22:	009f 0000 0000      	0x9f
	...
    5f30:	0000                	unimp
    5f32:	0100                	addi	s0,sp,128
    5f34:	5f00                	lw	s0,56(a4)
	...
    5f46:	0005                	c.nop	1
    5f48:	007f                	0x7f
    5f4a:	1a32                	slli	s4,s4,0x2c
    5f4c:	009f 0000 0000      	0x9f
    5f52:	0000                	unimp
    5f54:	0100                	addi	s0,sp,128
    5f56:	5f00                	lw	s0,56(a4)
	...
    5f68:	0005                	c.nop	1
    5f6a:	007e                	c.slli	zero,0x1f
    5f6c:	1a34                	addi	a3,sp,312
    5f6e:	009f 0000 0000      	0x9f
    5f74:	0000                	unimp
    5f76:	0100                	addi	s0,sp,128
    5f78:	5e00                	lw	s0,56(a2)
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
	la gp, __global_pointer$
   0:	0074                	addi	a3,sp,12
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
	la sp, _sp
   8:	0000                	unimp
   a:	0004                	0x4
	...
	sw t0, (a1)
  30:	0d40                	addi	s0,sp,660
  32:	0000                	unimp
	lw t1, (a1)
  34:	0690                	addi	a2,sp,832
  36:	0000                	unimp
	addi a0, a0, 4
  38:	13d0                	addi	a2,sp,484
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	02bc                	addi	a5,sp,328
	...
	li tp,0xee
  76:	0000                	unimp
    j loop
  78:	0024                	addi	s1,sp,8
  7a:	0000                	unimp
{
  7c:	0002                	c.slli64	zero
  7e:	00001a8b          	0x1a8b
    portable_init(&(results[0].port), &argc, argv);
  82:	0004                	0x4
{
  84:	0000                	unimp
  86:	0000                	unimp
  88:	168c                	addi	a1,sp,864
  8a:	0000                	unimp
  8c:	00a8                	addi	a0,sp,72
  8e:	0000                	unimp
  90:	007c                	addi	a5,sp,12
  92:	0000                	unimp
  94:	0cc4                	addi	s1,sp,596
	...
  9e:	0000                	unimp
  a0:	005c                	addi	a5,sp,4
  a2:	0000                	unimp
  a4:	0002                	c.slli64	zero
  a6:	2f40                	fld	fs0,152(a4)
  a8:	0000                	unimp
  aa:	0004                	0x4
  ac:	0000                	unimp
  ae:	0000                	unimp
  b0:	1734                	addi	a3,sp,936
  b2:	0000                	unimp
  b4:	0614                	addi	a3,sp,768
  b6:	0000                	unimp
  b8:	1d48                	addi	a0,sp,692
  ba:	0000                	unimp
  bc:	0044                	addi	s1,sp,4
  be:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  c0:	1d8c                	addi	a1,sp,752
  c2:	0000                	unimp
  c4:	01dc                	addi	a5,sp,196
	...
    results[0].seed1      = get_seed(1);
  fe:	0000                	unimp
 100:	0044                	addi	s1,sp,4
 102:	0000                	unimp
    results[0].seed2      = get_seed(2);
 104:	0002                	c.slli64	zero
 106:	00004443          	fmadd.s	fs0,ft0,ft0,ft0,rmm
 10a:	0004                	0x4
 10c:	0000                	unimp
 10e:	0000                	unimp
 110:	1f68                	addi	a0,sp,956
 112:	0000                	unimp
    results[0].seed3      = get_seed(3);
 114:	0028                	addi	a0,sp,8
 116:	0000                	unimp
 118:	1f90                	addi	a2,sp,1008
 11a:	0000                	unimp
 11c:	0028                	addi	a0,sp,8
 11e:	0000                	unimp
 120:	1fb8                	addi	a4,sp,1016
 122:	0000                	unimp
    results[0].iterations = get_seed_32(4);
 124:	0018                	0x18
 126:	0000                	unimp
 128:	1fd0                	addi	a2,sp,1012
 12a:	0000                	unimp
 12c:	0030                	addi	a2,sp,8
 12e:	0000                	unimp
 130:	2000                	fld	fs0,0(s0)
 132:	0000                	unimp
    printf("start test2\n");
 134:	0038                	addi	a4,sp,8
 136:	0000                	unimp
 138:	2038                	fld	fa4,64(s0)
 13a:	0000                	unimp
 13c:	0008                	0x8
	...
    results[0].execs = get_seed_32(5);
 146:	0000                	unimp
 148:	002c                	addi	a1,sp,8
 14a:	0000                	unimp
 14c:	0002                	c.slli64	zero
 14e:	4ff4                	lw	a3,92(a5)
 150:	0000                	unimp
 152:	0004                	0x4
    printf("start test21\n");
 154:	0000                	unimp
 156:	0000                	unimp
 158:	2040                	fld	fs0,128(s0)
 15a:	0000                	unimp
 15c:	01dc                	addi	a5,sp,196
 15e:	0000                	unimp
 160:	221c                	fld	fa5,0(a2)
 162:	0000                	unimp
    if (results[0].execs == 0)
 164:	0330                	addi	a2,sp,392
 166:	0000                	unimp
 168:	254c                	fld	fa1,136(a0)
 16a:	0000                	unimp
    printf("start test3\n");
 16c:	020c                	addi	a1,sp,256
	...
 176:	0000                	unimp
 178:	0044                	addi	s1,sp,4
 17a:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 17c:	0002                	c.slli64	zero
 17e:	5ded                	li	s11,-5
 180:	0000                	unimp
 182:	0004                	0x4
 184:	0000                	unimp
 186:	0000                	unimp
 188:	2758                	fld	fa4,136(a4)
 18a:	0000                	unimp
 18c:	0064                	addi	s1,sp,12
	...
 196:	0000                	unimp
 198:	27bc                	fld	fa5,72(a5)
 19a:	0000                	unimp
    printf("start test4\n");
 19c:	0280                	addi	s0,sp,320
 19e:	0000                	unimp
 1a0:	2a3c                	fld	fa5,80(a2)
 1a2:	0000                	unimp
 1a4:	0510                	addi	a2,sp,640
 1a6:	0000                	unimp
 1a8:	2f4c                	fld	fa1,152(a4)
 1aa:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 1ac:	0288                	addi	a0,sp,320
 1ae:	0000                	unimp
 1b0:	31d4                	fld	fa3,160(a1)
 1b2:	0000                	unimp
 1b4:	0008                	0x8
	...
 1be:	0000                	unimp
 1c0:	0024                	addi	s1,sp,8
 1c2:	0000                	unimp
 1c4:	0002                	c.slli64	zero
 1c6:	6c3a                	flw	fs8,140(sp)
 1c8:	0000                	unimp
 1ca:	0004                	0x4
	...
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1d8:	31dc                	fld	fa5,160(a1)
 1da:	0000                	unimp
 1dc:	0030                	addi	a2,sp,8
	...
 1e6:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1e8:	003c                	addi	a5,sp,8
 1ea:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1ec:	0002                	c.slli64	zero
 1ee:	75e1                	lui	a1,0xffff8
        if ((1 << (ee_u32)i) & results[0].execs)
 1f0:	0000                	unimp
 1f2:	0004                	0x4
	...
            num_algorithms++;
 218:	320c                	fld	fa1,32(a2)
 21a:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
 21c:	0024                	addi	s1,sp,8
	...
 226:	0000                	unimp
 228:	001c                	0x1c
 22a:	0000                	unimp
 22c:	0002                	c.slli64	zero
 22e:	0000782f          	0x782f
 232:	0004                	0x4
	...
        if ((1 << (ee_u32)i) & results[0].execs)
 23c:	007c                	addi	a5,sp,12
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
	la gp, __global_pointer$
   0:	0001                	nop
   2:	0000                	unimp
   4:	0001                	nop
   6:	0000                	unimp
	la sp, _sp
   8:	0001                	nop
   a:	0000                	unimp
   c:	0001                	nop
   e:	0000                	unimp
	la a0, _data_lma 
  10:	0001                	nop
  12:	0000                	unimp
  14:	0001                	nop
	...
	la a1, _data
  1e:	0000                	unimp
	la a2, _edata
  20:	0001                	nop
  22:	0000                	unimp
  24:	0001                	nop
  26:	0000                	unimp
	bgeu a1, a2, 2f
  28:	0001                	nop
  2a:	0000                	unimp
	lw t0, (a0)
  2c:	0001                	nop
  2e:	0000                	unimp
	sw t0, (a1)
  30:	0001                	nop
  32:	0000                	unimp
	lw t1, (a1)
  34:	0001                	nop
  36:	0000                	unimp
	addi a0, a0, 4
  38:	0001                	nop
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	0001                	nop
  3e:	0000                	unimp
	bltu a1, a2, 1b
  40:	0001                	nop
  42:	0000                	unimp
	la a0, __bss_start
  44:	0001                	nop
  46:	0000                	unimp
  48:	0001                	nop
  4a:	0000                	unimp
	la a1, _end
  4c:	0001                	nop
	...
	bgeu a0, a1, 2f
  56:	0000                	unimp
	sw zero, (a0)
  58:	0001                	nop
  5a:	0000                	unimp
	addi a0, a0, 4
  5c:	0001                	nop
  5e:	0000                	unimp
	bltu a0, a1, 1b
  60:	0001                	nop
  62:	0000                	unimp
    li x31,0xa0
  64:	0001                	nop
  66:	0000                	unimp
    call main
  68:	0001                	nop
  6a:	0000                	unimp
  6c:	0001                	nop
  6e:	0000                	unimp
    li x31,0xaa
  70:	0001                	nop
  72:	0000                	unimp
	li tp,0xee
  74:	0001                	nop
	...
{
  7e:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  80:	0001                	nop
  82:	0000                	unimp
{
  84:	0001                	nop
  86:	0000                	unimp
  88:	0001                	nop
  8a:	0000                	unimp
  8c:	0001                	nop
  8e:	0000                	unimp
  90:	0001                	nop
  92:	0000                	unimp
  94:	0001                	nop
	...
  9e:	0000                	unimp
  a0:	0001                	nop
  a2:	0000                	unimp
  a4:	0001                	nop
  a6:	0000                	unimp
  a8:	0001                	nop
  aa:	0000                	unimp
  ac:	0001                	nop
  ae:	0000                	unimp
  b0:	0001                	nop
  b2:	0000                	unimp
  b4:	0001                	nop
  b6:	0000                	unimp
  b8:	0001                	nop
  ba:	0000                	unimp
  bc:	0001                	nop
	...
    portable_init(&(results[0].port), &argc, argv);
  c6:	0000                	unimp
  c8:	0da0                	addi	s0,sp,728
  ca:	0000                	unimp
  cc:	0da4                	addi	s1,sp,728
  ce:	0000                	unimp
{
  d0:	0dac                	addi	a1,sp,728
  d2:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  d4:	0de4                	addi	s1,sp,732
  d6:	0000                	unimp
  d8:	0de4                	addi	s1,sp,732
  da:	0000                	unimp
  dc:	0dec                	addi	a1,sp,732
  de:	0000                	unimp
  e0:	105c                	addi	a5,sp,36
  e2:	0000                	unimp
    printf("start test1\n");
  e4:	1090                	addi	a2,sp,96
	...
  ee:	0000                	unimp
  f0:	0de4                	addi	s1,sp,732
  f2:	0000                	unimp
    results[0].seed1      = get_seed(1);
  f4:	0de4                	addi	s1,sp,732
  f6:	0000                	unimp
  f8:	0dec                	addi	a1,sp,732
  fa:	0000                	unimp
  fc:	0e00                	addi	s0,sp,784
	...
    results[0].seed2      = get_seed(2);
 106:	0000                	unimp
 108:	0e98                	addi	a4,sp,848
 10a:	0000                	unimp
 10c:	0e98                	addi	a4,sp,848
 10e:	0000                	unimp
 110:	0e9c                	addi	a5,sp,848
 112:	0000                	unimp
    results[0].seed3      = get_seed(3);
 114:	0eb8                	addi	a4,sp,856
 116:	0000                	unimp
 118:	0ebc                	addi	a5,sp,856
 11a:	0000                	unimp
 11c:	0ec0                	addi	s0,sp,852
	...
    results[0].iterations = get_seed_32(4);
 126:	0000                	unimp
 128:	0e98                	addi	a4,sp,848
 12a:	0000                	unimp
 12c:	0e9c                	addi	a5,sp,848
 12e:	0000                	unimp
 130:	0eb8                	addi	a4,sp,856
 132:	0000                	unimp
    printf("start test2\n");
 134:	0ebc                	addi	a5,sp,856
 136:	0000                	unimp
 138:	0ec0                	addi	s0,sp,852
 13a:	0000                	unimp
 13c:	0edc                	addi	a5,sp,852
 13e:	0000                	unimp
 140:	1000                	addi	s0,sp,32
 142:	0000                	unimp
    results[0].execs = get_seed_32(5);
 144:	1018                	addi	a4,sp,32
	...
 14e:	0000                	unimp
 150:	0f0c                	addi	a1,sp,912
 152:	0000                	unimp
    printf("start test21\n");
 154:	0f14                	addi	a3,sp,912
 156:	0000                	unimp
 158:	0f18                	addi	a4,sp,912
 15a:	0000                	unimp
 15c:	0f28                	addi	a0,sp,920
	...
    if (results[0].execs == 0)
 166:	0000                	unimp
 168:	0f14                	addi	a3,sp,912
 16a:	0000                	unimp
    printf("start test3\n");
 16c:	0f18                	addi	a4,sp,912
 16e:	0000                	unimp
 170:	0f28                	addi	a0,sp,920
 172:	0000                	unimp
 174:	1000                	addi	s0,sp,32
 176:	0000                	unimp
 178:	1024                	addi	s1,sp,40
 17a:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 17c:	105c                	addi	a5,sp,36
 17e:	0000                	unimp
 180:	10b8                	addi	a4,sp,104
 182:	0000                	unimp
 184:	10b8                	addi	a4,sp,104
 186:	0000                	unimp
 188:	12d0                	addi	a2,sp,356
 18a:	0000                	unimp
 18c:	12d8                	addi	a4,sp,356
	...
 196:	0000                	unimp
 198:	1128                	addi	a0,sp,168
 19a:	0000                	unimp
    printf("start test4\n");
 19c:	12d0                	addi	a2,sp,356
 19e:	0000                	unimp
 1a0:	12d8                	addi	a4,sp,356
 1a2:	0000                	unimp
 1a4:	13c8                	addi	a0,sp,484
	...
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 1ae:	0000                	unimp
 1b0:	1134                	addi	a3,sp,168
 1b2:	0000                	unimp
 1b4:	113c                	addi	a5,sp,168
 1b6:	0000                	unimp
 1b8:	1190                	addi	a2,sp,224
 1ba:	0000                	unimp
 1bc:	1254                	addi	a3,sp,292
 1be:	0000                	unimp
 1c0:	12d8                	addi	a4,sp,356
 1c2:	0000                	unimp
 1c4:	13c8                	addi	a0,sp,484
	...
 1ce:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1d0:	1134                	addi	a3,sp,168
 1d2:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1d4:	113c                	addi	a5,sp,168
 1d6:	0000                	unimp
 1d8:	11f0                	addi	a2,sp,236
 1da:	0000                	unimp
 1dc:	1250                	addi	a2,sp,292
 1de:	0000                	unimp
 1e0:	12d8                	addi	a4,sp,356
 1e2:	0000                	unimp
 1e4:	134c                	addi	a1,sp,420
	...
 1ee:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1f0:	1134                	addi	a3,sp,168
 1f2:	0000                	unimp
            num_algorithms++;
 1f4:	113c                	addi	a5,sp,168
 1f6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1f8:	1200                	addi	s0,sp,288
 1fa:	0000                	unimp
 1fc:	1250                	addi	a2,sp,292
 1fe:	0000                	unimp
    results[i].err         = 0;
 200:	12d8                	addi	a4,sp,356
 202:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 204:	134c                	addi	a1,sp,420
	...
 20e:	0000                	unimp
            num_algorithms++;
 210:	1190                	addi	a2,sp,224
 212:	0000                	unimp
 214:	11f0                	addi	a2,sp,236
 216:	0000                	unimp
 218:	134c                	addi	a1,sp,420
 21a:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
 21c:	13c8                	addi	a0,sp,484
	...
 226:	0000                	unimp
 228:	11a0                	addi	s0,sp,232
 22a:	0000                	unimp
 22c:	11f0                	addi	a2,sp,236
 22e:	0000                	unimp
 230:	134c                	addi	a1,sp,420
 232:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 234:	13c8                	addi	a0,sp,484
	...
 23e:	0000                	unimp
 240:	1438                	addi	a4,sp,552
 242:	0000                	unimp
        if (results[i].execs & ID_LIST)
 244:	143c                	addi	a5,sp,552
 246:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
 248:	1448                	addi	a0,sp,548
 24a:	0000                	unimp
        if (results[i].execs & ID_STATE)
 24c:	1470                	addi	a2,sp,556
 24e:	0000                	unimp
 250:	1684                	addi	s1,sp,864
 252:	0000                	unimp
            core_init_state(
 254:	168c                	addi	a1,sp,864
	...
                results[0].size, results[i].seed1, results[i].memblock[3]);
 25e:	0000                	unimp
            core_init_state(
 260:	1478                	addi	a4,sp,556
 262:	0000                	unimp
 264:	1480                	addi	s0,sp,608
 266:	0000                	unimp
 268:	1484                	addi	s1,sp,608
 26a:	0000                	unimp
 26c:	14dc                	addi	a5,sp,612
	...
 276:	0000                	unimp
 278:	1478                	addi	a4,sp,556
 27a:	0000                	unimp
 27c:	1480                	addi	s0,sp,608
 27e:	0000                	unimp
    if (results[0].iterations == 0)
 280:	1484                	addi	s1,sp,608
 282:	0000                	unimp
 284:	1488                	addi	a0,sp,608
 286:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 288:	1488                	addi	a0,sp,608
 28a:	0000                	unimp
 28c:	14a0                	addi	s0,sp,616
 28e:	0000                	unimp
 290:	14b0                	addi	a2,sp,616
 292:	0000                	unimp
        results[0].iterations = 1;
 294:	14b4                	addi	a3,sp,616
 296:	0000                	unimp
 298:	14b8                	addi	a4,sp,616
 29a:	0000                	unimp
        crc      = core_bench_list(res, 1);
 29c:	14bc                	addi	a5,sp,616
 29e:	0000                	unimp
 2a0:	14c0                	addi	s0,sp,612
 2a2:	0000                	unimp
 2a4:	14c4                	addi	s1,sp,612
 2a6:	0000                	unimp
 2a8:	14c8                	addi	a0,sp,612
 2aa:	0000                	unimp
 2ac:	14dc                	addi	a5,sp,612
	...
 2b6:	0000                	unimp
            printf("start test44\n");
 2b8:	1478                	addi	a4,sp,556
 2ba:	0000                	unimp
 2bc:	1480                	addi	s0,sp,608
 2be:	0000                	unimp
 2c0:	1484                	addi	s1,sp,608
 2c2:	0000                	unimp
            results[0].iterations *= 10;
 2c4:	1488                	addi	a0,sp,608
 2c6:	0000                	unimp
    for (i = 0; i < iterations; i++)
 2c8:	14c4                	addi	s1,sp,612
 2ca:	0000                	unimp
            results[0].iterations *= 10;
 2cc:	14c4                	addi	s1,sp,612
 2ce:	0000                	unimp
 2d0:	14c8                	addi	a0,sp,612
 2d2:	0000                	unimp
 2d4:	14d0                	addi	a2,sp,612
 2d6:	0000                	unimp
 2d8:	14d0                	addi	a2,sp,612
 2da:	0000                	unimp
            start_time();
 2dc:	14dc                	addi	a5,sp,612
	...
    ee_u32        iterations = res->iterations;
 2e6:	0000                	unimp
    res->crc                 = 0;
 2e8:	14f8                	addi	a4,sp,620
 2ea:	0000                	unimp
 2ec:	14fc                	addi	a5,sp,620
 2ee:	0000                	unimp
    for (i = 0; i < iterations; i++)
 2f0:	1500                	addi	s0,sp,672
 2f2:	0000                	unimp
        crc      = core_bench_list(res, 1);
 2f4:	1504                	addi	s1,sp,672
 2f6:	0000                	unimp
 2f8:	1628                	addi	a0,sp,808
 2fa:	0000                	unimp
 2fc:	1634                	addi	a3,sp,808
 2fe:	0000                	unimp
 300:	1638                	addi	a4,sp,808
 302:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
 304:	1648                	addi	a0,sp,804
 306:	0000                	unimp
 308:	164c                	addi	a1,sp,804
 30a:	0000                	unimp
 30c:	1654                	addi	a3,sp,804
	...
        crc      = core_bench_list(res, -1);
 316:	0000                	unimp
 318:	0001                	nop
 31a:	0000                	unimp
 31c:	0001                	nop
 31e:	0000                	unimp
 320:	0001                	nop
 322:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
 324:	0001                	nop
	...
 32e:	0000                	unimp
 330:	0001                	nop
 332:	0000                	unimp
        if (i == 0)
 334:	0001                	nop
 336:	0000                	unimp
    for (i = 0; i < iterations; i++)
 338:	0001                	nop
 33a:	0000                	unimp
 33c:	0001                	nop
 33e:	0000                	unimp
            stop_time();
 340:	0001                	nop
 342:	0000                	unimp
 344:	0001                	nop
 346:	0000                	unimp
            secs_passed = time_in_secs(get_time());
 348:	0001                	nop
 34a:	0000                	unimp
 34c:	0001                	nop
 34e:	0000                	unimp
 350:	0d40                	addi	s0,sp,660
 352:	0000                	unimp
 354:	13d0                	addi	a2,sp,484
 356:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 358:	13d0                	addi	a2,sp,484
 35a:	0000                	unimp
 35c:	168c                	addi	a1,sp,864
 35e:	0000                	unimp
            secs_passed = time_in_secs(get_time());
 360:	0001                	nop
 362:	0000                	unimp
 364:	0001                	nop
 366:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 368:	0001                	nop
 36a:	0000                	unimp
 36c:	0001                	nop
 36e:	0000                	unimp
 370:	0001                	nop
 372:	0000                	unimp
        divisor = (ee_u32)secs_passed;
 374:	0001                	nop
 376:	0000                	unimp
 378:	0001                	nop
 37a:	0000                	unimp
 37c:	0001                	nop
 37e:	0000                	unimp
 380:	0001                	nop
 382:	0000                	unimp
 384:	0001                	nop
 386:	0000                	unimp
        if (divisor == 0) /* some machines cast float to int as 0 since this
 388:	0001                	nop
 38a:	0000                	unimp
            divisor = 1;
 38c:	0001                	nop
	...
        results[0].iterations *= 1 + 10 / divisor;
 396:	0000                	unimp
 398:	022c                	addi	a1,sp,264
 39a:	0000                	unimp
 39c:	022c                	addi	a1,sp,264
 39e:	0000                	unimp
 3a0:	0234                	addi	a3,sp,264
 3a2:	0000                	unimp
 3a4:	0244                	addi	s1,sp,260
 3a6:	0000                	unimp
 3a8:	0ad0                	addi	a2,sp,340
 3aa:	0000                	unimp
 3ac:	0b14                	addi	a3,sp,400
 3ae:	0000                	unimp
    start_time();
 3b0:	0b1c                	addi	a5,sp,400
 3b2:	0000                	unimp
 3b4:	0b64                	addi	s1,sp,412
	...
    iterate(&results[0]);
 3be:	0000                	unimp
 3c0:	0288                	addi	a0,sp,320
 3c2:	0000                	unimp
 3c4:	03b0                	addi	a2,sp,456
 3c6:	0000                	unimp
 3c8:	0b78                	addi	a4,sp,412
 3ca:	0000                	unimp
 3cc:	0b8c                	addi	a1,sp,464
	...
 3d6:	0000                	unimp
    stop_time();
 3d8:	029c                	addi	a5,sp,320
 3da:	0000                	unimp
 3dc:	02b8                	addi	a4,sp,328
 3de:	0000                	unimp
    total_time = get_time();
 3e0:	02c8                	addi	a0,sp,324
 3e2:	0000                	unimp
 3e4:	02cc                	addi	a1,sp,324
 3e6:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
 3e8:	02e4                	addi	s1,sp,332
 3ea:	0000                	unimp
 3ec:	0340                	addi	s0,sp,388
 3ee:	0000                	unimp
 3f0:	0b78                	addi	a4,sp,412
 3f2:	0000                	unimp
    total_time = get_time();
 3f4:	0b8c                	addi	a1,sp,464
	...
    seedcrc = crc16(results[0].seed1, seedcrc);
 3fe:	0000                	unimp
 400:	168c                	addi	a1,sp,864
 402:	0000                	unimp
 404:	1734                	addi	a3,sp,936
 406:	0000                	unimp
 408:	007c                	addi	a5,sp,12
 40a:	0000                	unimp
    seedcrc = crc16(results[0].seed2, seedcrc);
 40c:	0d40                	addi	s0,sp,660
	...
 416:	0000                	unimp
 418:	1780                	addi	s0,sp,992
 41a:	0000                	unimp
 41c:	17bc                	addi	a5,sp,1000
 41e:	0000                	unimp
    seedcrc = crc16(results[0].seed3, seedcrc);
 420:	17c0                	addi	s0,sp,996
 422:	0000                	unimp
 424:	1804                	addi	s1,sp,48
 426:	0000                	unimp
 428:	1810                	addi	a2,sp,48
 42a:	0000                	unimp
 42c:	1818                	addi	a4,sp,48
	...
    seedcrc = crc16(results[0].size, seedcrc);
 436:	0000                	unimp
 438:	1804                	addi	s1,sp,48
 43a:	0000                	unimp
 43c:	1810                	addi	a2,sp,48
 43e:	0000                	unimp
 440:	1818                	addi	a4,sp,48
 442:	0000                	unimp
 444:	1864                	addi	s1,sp,60
 446:	0000                	unimp
 448:	1874                	addi	a3,sp,60
 44a:	0000                	unimp
 44c:	1878                	addi	a4,sp,60
	...
    switch (seedcrc)
 456:	0000                	unimp
 458:	1864                	addi	s1,sp,60
 45a:	0000                	unimp
 45c:	1874                	addi	a3,sp,60
 45e:	0000                	unimp
 460:	1878                	addi	a4,sp,60
 462:	0000                	unimp
 464:	18f4                	addi	a3,sp,124
 466:	0000                	unimp
 468:	1d08                	addi	a0,sp,688
 46a:	0000                	unimp
 46c:	1d08                	addi	a0,sp,688
	...
            ee_printf("2K performance run parameters for coremark.\n");
 476:	0000                	unimp
 478:	190c                	addi	a1,sp,176
 47a:	0000                	unimp
 47c:	1920                	addi	s0,sp,184
 47e:	0000                	unimp
 480:	1928                	addi	a0,sp,184
 482:	0000                	unimp
 484:	1928                	addi	a0,sp,184
 486:	0000                	unimp
 488:	1934                	addi	a3,sp,184
 48a:	0000                	unimp
            known_id = 3;
 48c:	1968                	addi	a0,sp,188
 48e:	0000                	unimp
            ee_printf("2K performance run parameters for coremark.\n");
 490:	1d14                	addi	a3,sp,688
 492:	0000                	unimp
 494:	1d14                	addi	a3,sp,688
	...
            known_id = 3;
 49e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 4a0:	1968                	addi	a0,sp,188
 4a2:	0000                	unimp
 4a4:	19e8                	addi	a0,sp,252
 4a6:	0000                	unimp
 4a8:	1a2c                	addi	a1,sp,312
 4aa:	0000                	unimp
 4ac:	1a30                	addi	a2,sp,312
 4ae:	0000                	unimp
 4b0:	1d14                	addi	a3,sp,688
 4b2:	0000                	unimp
            results[i].err = 0;
 4b4:	1d14                	addi	a3,sp,688
	...
 4be:	0000                	unimp
 4c0:	19f4                	addi	a3,sp,252
 4c2:	0000                	unimp
 4c4:	19f8                	addi	a4,sp,252
 4c6:	0000                	unimp
 4c8:	19fc                	addi	a5,sp,252
 4ca:	0000                	unimp
 4cc:	1a2c                	addi	a1,sp,312
 4ce:	0000                	unimp
 4d0:	1a30                	addi	a2,sp,312
 4d2:	0000                	unimp
 4d4:	1aa4                	addi	s1,sp,376
 4d6:	0000                	unimp
 4d8:	1cfc                	addi	a5,sp,636
 4da:	0000                	unimp
 4dc:	1d08                	addi	a0,sp,688
 4de:	0000                	unimp
 4e0:	1d24                	addi	s1,sp,696
 4e2:	0000                	unimp
 4e4:	1d24                	addi	s1,sp,696
	...
            total_errors += results[i].err;
 4ee:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 4f0:	1aa4                	addi	s1,sp,376
 4f2:	0000                	unimp
            total_errors += results[i].err;
 4f4:	1b24                	addi	s1,sp,440
 4f6:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 4f8:	1b5c                	addi	a5,sp,436
 4fa:	0000                	unimp
            total_errors += results[i].err;
 4fc:	1b60                	addi	s0,sp,444
 4fe:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 500:	1d24                	addi	s1,sp,696
 502:	0000                	unimp
            total_errors += results[i].err;
 504:	1d24                	addi	s1,sp,696
	...
 50e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 510:	1b3c                	addi	a5,sp,440
 512:	0000                	unimp
            results[i].err = 0;
 514:	1b3c                	addi	a5,sp,440
 516:	0000                	unimp
 518:	1b40                	addi	s0,sp,436
 51a:	0000                	unimp
 51c:	1b5c                	addi	a5,sp,436
 51e:	0000                	unimp
 520:	1b60                	addi	s0,sp,444
 522:	0000                	unimp
 524:	1be8                	addi	a0,sp,508
 526:	0000                	unimp
 528:	1d34                	addi	a3,sp,696
 52a:	0000                	unimp
            if ((results[i].execs & ID_LIST)
 52c:	1d34                	addi	a3,sp,696
	...
 536:	0000                	unimp
 538:	1b74                	addi	a3,sp,444
 53a:	0000                	unimp
                && (results[i].crclist != list_known_crc[known_id]))
 53c:	1b7c                	addi	a5,sp,444
 53e:	0000                	unimp
 540:	1b84                	addi	s1,sp,496
 542:	0000                	unimp
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
 544:	1bac                	addi	a1,sp,504
	...
 54e:	0000                	unimp
 550:	1be8                	addi	a0,sp,508
 552:	0000                	unimp
 554:	1c74                	addi	a3,sp,572
 556:	0000                	unimp
 558:	1c84                	addi	s1,sp,624
 55a:	0000                	unimp
                results[i].err++;
 55c:	1c88                	addi	a0,sp,624
 55e:	0000                	unimp
 560:	1d34                	addi	a3,sp,696
 562:	0000                	unimp
 564:	1d34                	addi	a3,sp,696
	...
            if ((results[i].execs & ID_MATRIX)
 56e:	0000                	unimp
 570:	1c80                	addi	s0,sp,624
 572:	0000                	unimp
 574:	1c84                	addi	s1,sp,624
 576:	0000                	unimp
 578:	1c88                	addi	a0,sp,624
 57a:	0000                	unimp
 57c:	1cb8                	addi	a4,sp,632
	...
 586:	0000                	unimp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
 588:	1734                	addi	a3,sp,936
 58a:	0000                	unimp
 58c:	1d48                	addi	a0,sp,692
 58e:	0000                	unimp
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
 590:	1d48                	addi	a0,sp,692
 592:	0000                	unimp
 594:	1d8c                	addi	a1,sp,752
 596:	0000                	unimp
 598:	1d8c                	addi	a1,sp,752
 59a:	0000                	unimp
 59c:	1f68                	addi	a0,sp,956
 59e:	0000                	unimp
 5a0:	0001                	nop
 5a2:	0000                	unimp
 5a4:	0001                	nop
 5a6:	0000                	unimp
                results[i].err++;
 5a8:	0001                	nop
 5aa:	0000                	unimp
 5ac:	0001                	nop
 5ae:	0000                	unimp
 5b0:	0001                	nop
 5b2:	0000                	unimp
 5b4:	0001                	nop
 5b6:	0000                	unimp
            if ((results[i].execs & ID_STATE)
 5b8:	0001                	nop
 5ba:	0000                	unimp
 5bc:	0001                	nop
 5be:	0000                	unimp
                && (results[i].crcstate != state_known_crc[known_id]))
 5c0:	0001                	nop
 5c2:	0000                	unimp
 5c4:	0001                	nop
 5c6:	0000                	unimp
 5c8:	0001                	nop
 5ca:	0000                	unimp
 5cc:	0001                	nop
	...
 5d6:	0000                	unimp
 5d8:	1f68                	addi	a0,sp,956
 5da:	0000                	unimp
 5dc:	1f90                	addi	a2,sp,1008
 5de:	0000                	unimp
 5e0:	1f90                	addi	a2,sp,1008
 5e2:	0000                	unimp
            results[i].list = core_list_init(
 5e4:	1fb8                	addi	a4,sp,1016
 5e6:	0000                	unimp
 5e8:	1fb8                	addi	a4,sp,1016
 5ea:	0000                	unimp
 5ec:	1fd0                	addi	a2,sp,1012
 5ee:	0000                	unimp
 5f0:	1fd0                	addi	a2,sp,1012
 5f2:	0000                	unimp
 5f4:	2000                	fld	fs0,0(s0)
 5f6:	0000                	unimp
 5f8:	2000                	fld	fs0,0(s0)
 5fa:	0000                	unimp
 5fc:	2038                	fld	fa4,64(s0)
 5fe:	0000                	unimp
 600:	2038                	fld	fa4,64(s0)
 602:	0000                	unimp
 604:	2040                	fld	fs0,128(s0)
	...
 60e:	0000                	unimp
 610:	2234                	fld	fa3,64(a2)
 612:	0000                	unimp
 614:	224c                	fld	fa1,128(a2)
 616:	0000                	unimp
 618:	2300                	fld	fs0,0(a4)
 61a:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
 61c:	2300                	fld	fs0,0(a4)
	...
                                 | (((ee_s32)results[i].seed2) << 16),
 626:	0000                	unimp
 628:	2260                	fld	fs0,192(a2)
 62a:	0000                	unimp
            core_init_matrix(results[0].size,
 62c:	2264                	fld	fs1,192(a2)
 62e:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 630:	2268                	fld	fa0,192(a2)
 632:	0000                	unimp
 634:	226c                	fld	fa1,192(a2)
 636:	0000                	unimp
                             (ee_s32)results[i].seed1
 638:	2270                	fld	fa2,192(a2)
 63a:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 63c:	2274                	fld	fa3,192(a2)
 63e:	0000                	unimp
            core_init_matrix(results[0].size,
 640:	2278                	fld	fa4,192(a2)
 642:	0000                	unimp
                             (ee_s32)results[i].seed1
 644:	227c                	fld	fa5,192(a2)
 646:	0000                	unimp
            core_init_matrix(results[0].size,
 648:	2294                	fld	fa3,0(a3)
 64a:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 64c:	229c                	fld	fa5,0(a3)
 64e:	0000                	unimp
            core_init_matrix(results[0].size,
 650:	2338                	fld	fa4,64(a4)
 652:	0000                	unimp
 654:	2338                	fld	fa4,64(a4)
	...
 65e:	0000                	unimp
 660:	22c4                	fld	fs1,128(a3)
 662:	0000                	unimp
 664:	22c8                	fld	fa0,128(a3)
 666:	0000                	unimp
 668:	22cc                	fld	fa1,128(a3)
 66a:	0000                	unimp
 66c:	22d0                	fld	fa2,128(a3)
 66e:	0000                	unimp
 670:	22d4                	fld	fa3,128(a3)
 672:	0000                	unimp
 674:	22d8                	fld	fa4,128(a3)
 676:	0000                	unimp
 678:	22dc                	fld	fa5,128(a3)
 67a:	0000                	unimp
 67c:	22e0                	fld	fs0,192(a3)
	...
            ee_printf("Profile generation run parameters for coremark.\n");
 686:	0000                	unimp
 688:	236c                	fld	fa1,192(a4)
 68a:	0000                	unimp
 68c:	2384                	fld	fs1,0(a5)
 68e:	0000                	unimp
 690:	23a0                	fld	fs0,64(a5)
 692:	0000                	unimp
 694:	23a0                	fld	fs0,64(a5)
	...
            known_id = 2;
 69e:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
 6a0:	23fc                	fld	fa5,192(a5)
 6a2:	0000                	unimp
 6a4:	23fc                	fld	fa5,192(a5)
 6a6:	0000                	unimp
 6a8:	241c                	fld	fa5,8(s0)
 6aa:	0000                	unimp
            known_id = 2;
 6ac:	2430                	fld	fa2,72(s0)
 6ae:	0000                	unimp
 6b0:	2434                	fld	fa3,72(s0)
 6b2:	0000                	unimp
        && (results[0].seed3 == 0))
 6b4:	2438                	fld	fa4,72(s0)
	...
 6be:	0000                	unimp
        results[0].seed3 = 0x66;
 6c0:	2448                	fld	fa0,136(s0)
 6c2:	0000                	unimp
 6c4:	244c                	fld	fa1,136(s0)
 6c6:	0000                	unimp
 6c8:	2450                	fld	fa2,136(s0)
 6ca:	0000                	unimp
 6cc:	2450                	fld	fa2,136(s0)
 6ce:	0000                	unimp
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
 6d0:	2450                	fld	fa2,136(s0)
 6d2:	0000                	unimp
 6d4:	245c                	fld	fa5,136(s0)
	...
 6de:	0000                	unimp
 6e0:	25e0                	fld	fs0,200(a1)
 6e2:	0000                	unimp
 6e4:	25fc                	fld	fa5,200(a1)
 6e6:	0000                	unimp
                results[i].err++;
 6e8:	2600                	fld	fs0,8(a2)
 6ea:	0000                	unimp
 6ec:	2604                	fld	fs1,8(a2)
 6ee:	0000                	unimp
 6f0:	2608                	fld	fa0,8(a2)
 6f2:	0000                	unimp
 6f4:	2610                	fld	fa2,8(a2)
	...
 6fe:	0000                	unimp
    switch (seedcrc)
 700:	2670                	fld	fa2,200(a2)
 702:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
 704:	268c                	fld	fa1,8(a3)
 706:	0000                	unimp
    switch (seedcrc)
 708:	2690                	fld	fa2,8(a3)
 70a:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
 70c:	2694                	fld	fa3,8(a3)
 70e:	0000                	unimp
 710:	2698                	fld	fa4,8(a3)
 712:	0000                	unimp
    total_errors += check_data_types();
 714:	26a0                	fld	fs0,72(a3)
	...
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 71e:	0000                	unimp
    total_errors += check_data_types();
 720:	2040                	fld	fs0,128(s0)
 722:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 724:	221c                	fld	fa5,0(a2)
 726:	0000                	unimp
 728:	221c                	fld	fa5,0(a2)
 72a:	0000                	unimp
 72c:	254c                	fld	fa1,136(a0)
 72e:	0000                	unimp
 730:	254c                	fld	fa1,136(a0)
 732:	0000                	unimp
    ee_printf("Total ticks      : %d\n", (int)total_time);
 734:	2758                	fld	fa4,136(a4)
	...
 73e:	0000                	unimp
 740:	27bc                	fld	fa5,72(a5)
 742:	0000                	unimp
 744:	27c0                	fld	fs0,136(a5)
 746:	0000                	unimp
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
 748:	27c4                	fld	fs1,136(a5)
 74a:	0000                	unimp
 74c:	28f8                	fld	fa4,208(s1)
	...
 756:	0000                	unimp
 758:	28fc                	fld	fa5,208(s1)
 75a:	0000                	unimp
 75c:	2900                	fld	fs0,16(a0)
 75e:	0000                	unimp
 760:	2904                	fld	fs1,16(a0)
 762:	0000                	unimp
 764:	2a38                	fld	fa4,80(a2)
	...
    if (time_in_secs(total_time) > 0)
 76e:	0000                	unimp
 770:	2a3c                	fld	fa5,80(a2)
 772:	0000                	unimp
 774:	2a44                	fld	fs1,144(a2)
 776:	0000                	unimp
    total_errors += check_data_types();
 778:	2a48                	fld	fa0,144(a2)
 77a:	0000                	unimp
    if (time_in_secs(total_time) > 0)
 77c:	2a4c                	fld	fa1,144(a2)
 77e:	0000                	unimp
 780:	2a50                	fld	fa2,144(a2)
 782:	0000                	unimp
    total_errors += check_data_types();
 784:	2cc0                	fld	fs0,152(s1)
	...
    if (time_in_secs(total_time) > 0)
 78e:	0000                	unimp
 790:	2a3c                	fld	fa5,80(a2)
 792:	0000                	unimp
                  default_num_contexts * results[0].iterations
 794:	2a40                	fld	fs0,144(a2)
 796:	0000                	unimp
 798:	2a48                	fld	fa0,144(a2)
 79a:	0000                	unimp
 79c:	2a4c                	fld	fa1,144(a2)
 79e:	0000                	unimp
 7a0:	2a50                	fld	fa2,144(a2)
 7a2:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
 7a4:	2b80                	fld	fs0,16(a5)
	...
 7ae:	0000                	unimp
                      / time_in_secs(total_time));
 7b0:	2b84                	fld	fs1,16(a5)
 7b2:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
 7b4:	2b8c                	fld	fa1,16(a5)
 7b6:	0000                	unimp
                      / time_in_secs(total_time));
 7b8:	2b90                	fld	fa2,16(a5)
 7ba:	0000                	unimp
 7bc:	2cc0                	fld	fs0,152(s1)
	...
        ee_printf("Iterations/Sec   : %lf\n",
 7c6:	0000                	unimp
 7c8:	2cc4                	fld	fs1,152(s1)
 7ca:	0000                	unimp
 7cc:	2ccc                	fld	fa1,152(s1)
 7ce:	0000                	unimp
 7d0:	2cd0                	fld	fa2,152(s1)
 7d2:	0000                	unimp
 7d4:	2cd4                	fld	fa3,152(s1)
 7d6:	0000                	unimp
 7d8:	2cd8                	fld	fa4,152(s1)
 7da:	0000                	unimp
 7dc:	2f48                	fld	fa0,152(a4)
	...
 7e6:	0000                	unimp
 7e8:	2cc4                	fld	fs1,152(s1)
 7ea:	0000                	unimp
 7ec:	2cc8                	fld	fa0,152(s1)
 7ee:	0000                	unimp
    if (time_in_secs(total_time) < 10)
 7f0:	2cd0                	fld	fa2,152(s1)
 7f2:	0000                	unimp
 7f4:	2cd4                	fld	fa3,152(s1)
 7f6:	0000                	unimp
 7f8:	2cd8                	fld	fa4,152(s1)
 7fa:	0000                	unimp
 7fc:	2e08                	fld	fa0,24(a2)
	...
 806:	0000                	unimp
 808:	2e0c                	fld	fa1,24(a2)
 80a:	0000                	unimp
 80c:	2e14                	fld	fa3,24(a2)
 80e:	0000                	unimp
 810:	2e18                	fld	fa4,24(a2)
 812:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
 814:	2f48                	fld	fa0,152(a4)
	...
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 81e:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 820:	2f4c                	fld	fa1,152(a4)
 822:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
 824:	2f54                	fld	fa3,152(a4)
 826:	0000                	unimp
 828:	2f58                	fld	fa4,152(a4)
 82a:	0000                	unimp
 82c:	2f5c                	fld	fa5,152(a4)
 82e:	0000                	unimp
 830:	2f60                	fld	fs0,216(a4)
 832:	0000                	unimp
 834:	31d0                	fld	fa2,160(a1)
	...
 83e:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 840:	2f4c                	fld	fa1,152(a4)
 842:	0000                	unimp
 844:	2f50                	fld	fa2,152(a4)
 846:	0000                	unimp
 848:	2f58                	fld	fa4,152(a4)
 84a:	0000                	unimp
 84c:	2f5c                	fld	fa5,152(a4)
 84e:	0000                	unimp
 850:	2f60                	fld	fs0,216(a4)
 852:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 854:	3090                	fld	fa2,32(s1)
	...
 85e:	0000                	unimp
 860:	3094                	fld	fa3,32(s1)
 862:	0000                	unimp
 864:	309c                	fld	fa5,32(s1)
 866:	0000                	unimp
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 868:	30a0                	fld	fs0,96(s1)
 86a:	0000                	unimp
 86c:	31d0                	fld	fa2,160(a1)
	...
 876:	0000                	unimp
 878:	2758                	fld	fa4,136(a4)
 87a:	0000                	unimp
 87c:	27bc                	fld	fa5,72(a5)
 87e:	0000                	unimp
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
 880:	0001                	nop
 882:	0000                	unimp
 884:	0001                	nop
 886:	0000                	unimp
 888:	27bc                	fld	fa5,72(a5)
 88a:	0000                	unimp
 88c:	2a3c                	fld	fa5,80(a2)
 88e:	0000                	unimp
 890:	2a3c                	fld	fa5,80(a2)
 892:	0000                	unimp
    if (results[0].execs & ID_LIST)
 894:	2f4c                	fld	fa1,152(a4)
 896:	0000                	unimp
        total_errors++;
 898:	2f4c                	fld	fa1,152(a4)
 89a:	0000                	unimp
 89c:	31d4                	fld	fa3,160(a1)
 89e:	0000                	unimp
    if (results[0].execs & ID_LIST)
 8a0:	31d4                	fld	fa3,160(a1)
 8a2:	0000                	unimp
 8a4:	31dc                	fld	fa5,160(a1)
	...
        for (i = 0; i < default_num_contexts; i++)
 8ae:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 8b0:	0001                	nop
 8b2:	0000                	unimp
 8b4:	0001                	nop
 8b6:	0000                	unimp
 8b8:	31dc                	fld	fa5,160(a1)
 8ba:	0000                	unimp
 8bc:	320c                	fld	fa1,32(a2)
	...
        for (i = 0; i < default_num_contexts; i++)
 8c6:	0000                	unimp
 8c8:	0001                	nop
 8ca:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 8cc:	0001                	nop
 8ce:	0000                	unimp
 8d0:	0001                	nop
 8d2:	0000                	unimp
 8d4:	0001                	nop
	...
 8de:	0000                	unimp
 8e0:	0001                	nop
 8e2:	0000                	unimp
 8e4:	0001                	nop
 8e6:	0000                	unimp
 8e8:	0001                	nop
 8ea:	0000                	unimp
 8ec:	0001                	nop
	...
 8f6:	0000                	unimp
 8f8:	0001                	nop
 8fa:	0000                	unimp
 8fc:	0001                	nop
 8fe:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 900:	0001                	nop
 902:	0000                	unimp
 904:	0001                	nop
	...
 90e:	0000                	unimp
 910:	0001                	nop
 912:	0000                	unimp
 914:	0001                	nop
 916:	0000                	unimp
    if (results[0].execs & ID_MATRIX)
 918:	0001                	nop
 91a:	0000                	unimp
 91c:	0001                	nop
 91e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 920:	0001                	nop
 922:	0000                	unimp
 924:	0001                	nop
	...
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 92e:	0000                	unimp
 930:	3214                	fld	fa3,32(a2)
 932:	0000                	unimp
 934:	3218                	fld	fa4,32(a2)
 936:	0000                	unimp
 938:	3218                	fld	fa4,32(a2)
 93a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 93c:	3224                	fld	fs1,96(a2)
	...
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 946:	0000                	unimp
 948:	0001                	nop
 94a:	0000                	unimp
 94c:	0001                	nop
 94e:	0000                	unimp
 950:	0001                	nop
 952:	0000                	unimp
 954:	0001                	nop
 956:	0000                	unimp
 958:	0001                	nop
 95a:	0000                	unimp
 95c:	0001                	nop
 95e:	0000                	unimp
 960:	0001                	nop
 962:	0000                	unimp
 964:	0001                	nop
 966:	0000                	unimp
 968:	320c                	fld	fa1,32(a2)
 96a:	0000                	unimp
 96c:	3230                	fld	fa2,96(a2)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
	la gp, __global_pointer$
       0:	00002527          	fsw	ft0,10(zero) # a <_start+0xa>
       4:	01cc0003          	lb	zero,28(s8) # ffff701c <__freertos_irq_stack_top+0xfefe701c>
	la sp, _sp
       8:	0000                	unimp
       a:	0101                	addi	sp,sp,0
       c:	000d0efb          	0xd0efb
	la a0, _data_lma 
      10:	0101                	addi	sp,sp,0
      12:	0101                	addi	sp,sp,0
      14:	0000                	unimp
      16:	0100                	addi	s0,sp,128
	la a1, _data
      18:	0000                	unimp
      1a:	2e01                	jal	32a <main+0x2ae>
      1c:	6372732f          	0x6372732f
	la a2, _edata
      20:	726f632f          	0x726f632f
      24:	6d65                	lui	s10,0x19
      26:	7261                	lui	tp,0xffff8
	bgeu a1, a2, 2f
      28:	3a65006b          	0x3a65006b
	lw t0, (a0)
      2c:	705c                	flw	fa5,36(s0)
      2e:	6f72                	flw	ft10,28(sp)
	sw t0, (a1)
      30:	6d617267          	0x6d617267
	lw t1, (a1)
      34:	6966                	flw	fs2,88(sp)
      36:	656c                	flw	fa1,76(a0)
	addi a0, a0, 4
      38:	36387873          	csrrci	a6,0x363,16
	addi a1, a1, 4
      3c:	6e5c                	flw	fa5,28(a2)
      3e:	616d726f          	jal	tp,d7654 <_data_lma+0xcc4dc>
	bltu a1, a2, 1b
      42:	2d6c                	fld	fa1,216(a0)
	la a0, __bss_start
      44:	6972                	flw	fs2,28(sp)
      46:	2d766373          	csrrsi	t1,0x2d7,12
      4a:	6f6e                	flw	ft10,216(sp)
	la a1, _end
      4c:	656e                	flw	fa0,216(sp)
      4e:	672d                	lui	a4,0xb
      50:	382d6363          	bltu	s10,sp,3d6 <main+0x35a>
	bgeu a0, a1, 2f
      54:	322e                	fld	ft4,232(sp)
      56:	302e                	fld	ft0,232(sp)
	sw zero, (a0)
      58:	322d                	jal	fffff982 <__freertos_irq_stack_top+0xfefef982>
      5a:	322e                	fld	ft4,232(sp)
	addi a0, a0, 4
      5c:	322d                	jal	fffff986 <__freertos_irq_stack_top+0xfefef986>
      5e:	3130                	fld	fa2,96(a0)
	bltu a0, a1, 1b
      60:	3039                	jal	fffff86e <__freertos_irq_stack_top+0xfefef86e>
      62:	3235                	jal	fffff98e <__freertos_irq_stack_top+0xfefef98e>
    li x31,0xa0
      64:	2d31                	jal	680 <main+0x604>
      66:	3030                	fld	fa2,96(s0)
    call main
      68:	3430                	fld	fa2,104(s0)
      6a:	772d                	lui	a4,0xfffeb
      6c:	6e69                	lui	t3,0x1a
      6e:	3436                	fld	fs0,360(sp)
    li x31,0xaa
      70:	725c                	flw	fa5,36(a2)
      72:	7369                	lui	t1,0xffffa
	li tp,0xee
      74:	6e2d7663          	bgeu	s10,sp,760 <main+0x6e4>
    j loop
      78:	2d656e6f          	jal	t3,5634e <_data_lma+0x4b1d6>
{
      7c:	6d65                	lui	s10,0x19
      7e:	6562                	flw	fa0,24(sp)
    portable_init(&(results[0].port), &argc, argv);
      80:	5c64                	lw	s1,124(s0)
      82:	6e69                	lui	t3,0x1a
{
      84:	64756c63          	bltu	a0,t2,6dc <main+0x660>
      88:	5c65                	li	s8,-7
      8a:	00737973          	csrrci	s2,0x7,6
      8e:	3a65                	jal	fffffa46 <__freertos_irq_stack_top+0xfefefa46>
      90:	705c                	flw	fa5,36(s0)
      92:	6f72                	flw	ft10,28(sp)
      94:	6d617267          	0x6d617267
      98:	6966                	flw	fs2,88(sp)
      9a:	656c                	flw	fa1,76(a0)
      9c:	36387873          	csrrci	a6,0x363,16
      a0:	6e5c                	flw	fa5,28(a2)
      a2:	616d726f          	jal	tp,d76b8 <_data_lma+0xcc540>
      a6:	2d6c                	fld	fa1,216(a0)
      a8:	6972                	flw	fs2,28(sp)
      aa:	2d766373          	csrrsi	t1,0x2d7,12
      ae:	6f6e                	flw	ft10,216(sp)
      b0:	656e                	flw	fa0,216(sp)
      b2:	672d                	lui	a4,0xb
      b4:	382d6363          	bltu	s10,sp,43a <main+0x3be>
      b8:	322e                	fld	ft4,232(sp)
      ba:	302e                	fld	ft0,232(sp)
      bc:	322d                	jal	fffff9e6 <__freertos_irq_stack_top+0xfefef9e6>
      be:	322e                	fld	ft4,232(sp)
    portable_init(&(results[0].port), &argc, argv);
      c0:	322d                	jal	fffff9ea <__freertos_irq_stack_top+0xfefef9ea>
      c2:	3130                	fld	fa2,96(a0)
      c4:	3039                	jal	fffff8d2 <__freertos_irq_stack_top+0xfefef8d2>
      c6:	3235                	jal	fffff9f2 <__freertos_irq_stack_top+0xfefef9f2>
      c8:	2d31                	jal	6e4 <main+0x668>
      ca:	3030                	fld	fa2,96(s0)
      cc:	3430                	fld	fa2,104(s0)
      ce:	772d                	lui	a4,0xfffeb
{
      d0:	6e69                	lui	t3,0x1a
      d2:	3436                	fld	fs0,360(sp)
    portable_init(&(results[0].port), &argc, argv);
      d4:	6c5c                	flw	fa5,28(s0)
      d6:	6269                	lui	tp,0x1a
      d8:	675c                	flw	fa5,12(a4)
      da:	725c6363          	bltu	s8,t0,800 <main+0x784>
      de:	7369                	lui	t1,0xffffa
      e0:	6e2d7663          	bgeu	s10,sp,7cc <main+0x750>
    printf("start test1\n");
      e4:	2d656e6f          	jal	t3,563ba <_data_lma+0x4b242>
      e8:	6d65                	lui	s10,0x19
      ea:	6562                	flw	fa0,24(sp)
      ec:	5c64                	lw	s1,124(s0)
      ee:	2e38                	fld	fa4,88(a2)
      f0:	2e32                	fld	ft8,264(sp)
      f2:	5c30                	lw	a2,120(s0)
    results[0].seed1      = get_seed(1);
      f4:	6e69                	lui	t3,0x1a
      f6:	64756c63          	bltu	a0,t2,74e <main+0x6d2>
      fa:	0065                	c.nop	25
      fc:	3a65                	jal	fffffab4 <__freertos_irq_stack_top+0xfefefab4>
      fe:	705c                	flw	fa5,36(s0)
     100:	6f72                	flw	ft10,28(sp)
     102:	6d617267          	0x6d617267
    results[0].seed2      = get_seed(2);
     106:	6966                	flw	fs2,88(sp)
     108:	656c                	flw	fa1,76(a0)
     10a:	36387873          	csrrci	a6,0x363,16
     10e:	6e5c                	flw	fa5,28(a2)
     110:	616d726f          	jal	tp,d7726 <_data_lma+0xcc5ae>
    results[0].seed3      = get_seed(3);
     114:	2d6c                	fld	fa1,216(a0)
     116:	6972                	flw	fs2,28(sp)
     118:	2d766373          	csrrsi	t1,0x2d7,12
     11c:	6f6e                	flw	ft10,216(sp)
     11e:	656e                	flw	fa0,216(sp)
     120:	672d                	lui	a4,0xb
     122:	382d6363          	bltu	s10,sp,4a8 <main+0x42c>
    results[0].iterations = get_seed_32(4);
     126:	322e                	fld	ft4,232(sp)
     128:	302e                	fld	ft0,232(sp)
     12a:	322d                	jal	fffffa54 <__freertos_irq_stack_top+0xfefefa54>
     12c:	322e                	fld	ft4,232(sp)
     12e:	322d                	jal	fffffa58 <__freertos_irq_stack_top+0xfefefa58>
     130:	3130                	fld	fa2,96(a0)
     132:	3039                	jal	fffff940 <__freertos_irq_stack_top+0xfefef940>
    printf("start test2\n");
     134:	3235                	jal	fffffa60 <__freertos_irq_stack_top+0xfefefa60>
     136:	2d31                	jal	752 <main+0x6d6>
     138:	3030                	fld	fa2,96(s0)
     13a:	3430                	fld	fa2,104(s0)
     13c:	772d                	lui	a4,0xfffeb
     13e:	6e69                	lui	t3,0x1a
     140:	3436                	fld	fs0,360(sp)
     142:	725c                	flw	fa5,36(a2)
    results[0].execs = get_seed_32(5);
     144:	7369                	lui	t1,0xffffa
     146:	6e2d7663          	bgeu	s10,sp,832 <main+0x7b6>
     14a:	2d656e6f          	jal	t3,56420 <_data_lma+0x4b2a8>
     14e:	6d65                	lui	s10,0x19
     150:	6562                	flw	fa0,24(sp)
     152:	5c64                	lw	s1,124(s0)
    printf("start test21\n");
     154:	6e69                	lui	t3,0x1a
     156:	64756c63          	bltu	a0,t2,7ae <main+0x732>
     15a:	0065                	c.nop	25
     15c:	6300                	flw	fs0,0(a4)
     15e:	5f65726f          	jal	tp,57754 <_data_lma+0x4c5dc>
     162:	696c                	flw	fa1,84(a0)
    if (results[0].execs == 0)
     164:	6a5f7473          	csrrci	s0,0x6a5,30
     168:	2e6e696f          	jal	s2,e644e <_data_lma+0xdb2d6>
    printf("start test3\n");
     16c:	00010063          	beqz	sp,16c <main+0xf0>
     170:	6c00                	flw	fs0,24(s0)
     172:	2e6b636f          	jal	t1,b6458 <_data_lma+0xab2e0>
     176:	0068                	addi	a0,sp,12
     178:	0002                	c.slli64	zero
     17a:	5f00                	lw	s0,56(a4)
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	7974                	flw	fa3,116(a0)
     17e:	6570                	flw	fa2,76(a0)
     180:	00682e73          	csrrs	t3,0x6,a6
     184:	0002                	c.slli64	zero
     186:	7300                	flw	fs0,32(a4)
     188:	6474                	flw	fa3,76(s0)
     18a:	6564                	flw	fs1,76(a0)
     18c:	2e66                	fld	ft8,88(sp)
     18e:	0068                	addi	a0,sp,12
     190:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a4>
     194:	6565                	lui	a0,0x19
     196:	746e                	flw	fs0,248(sp)
     198:	682e                	flw	fa6,200(sp)
     19a:	0200                	addi	s0,sp,256
    printf("start test4\n");
     19c:	0000                	unimp
     19e:	6974                	flw	fa3,84(a0)
     1a0:	656d                	lui	a0,0x1b
     1a2:	682e                	flw	fa6,200(sp)
     1a4:	0400                	addi	s0,sp,512
     1a6:	0000                	unimp
     1a8:	65726f63          	bltu	tp,s7,806 <main+0x78a>
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	705f 726f 6d74      	0x6d74726f705f
     1b2:	2e65                	jal	56a <main+0x4ee>
     1b4:	0068                	addi	a0,sp,12
     1b6:	0001                	nop
     1b8:	6300                	flw	fs0,0(a4)
     1ba:	6d65726f          	jal	tp,57890 <_data_lma+0x4c718>
     1be:	7261                	lui	tp,0xffff8
     1c0:	00682e6b          	0x682e6b
     1c4:	0001                	nop
     1c6:	3c00                	fld	fs0,56(s0)
     1c8:	7562                	flw	fa0,56(sp)
     1ca:	6c69                	lui	s8,0x1a
     1cc:	2d74                	fld	fa3,216(a0)
     1ce:	6e69                	lui	t3,0x1a
        if ((1 << (ee_u32)i) & results[0].execs)
     1d0:	003e                	c.slli	zero,0xf
     1d2:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d4:	0000                	unimp
     1d6:	0105                	addi	sp,sp,1
     1d8:	0500                	addi	s0,sp,640
     1da:	0002                	c.slli64	zero
     1dc:	0000                	unimp
     1de:	0300                	addi	s0,sp,384
     1e0:	00c6                	slli	ra,ra,0x11
     1e2:	0501                	addi	a0,a0,0
     1e4:	0305                	addi	t1,t1,1
     1e6:	0901                	addi	s2,s2,0
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	0000                	unimp
     1ea:	0501                	addi	a0,a0,0
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	0601                	addi	a2,a2,0
     1ee:	00097f03          	0x97f03
        if ((1 << (ee_u32)i) & results[0].execs)
     1f2:	0100                	addi	s0,sp,128
            num_algorithms++;
     1f4:	0c05                	addi	s8,s8,1
     1f6:	00090103          	lb	sp,0(s2)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1fa:	0100                	addi	s0,sp,128
     1fc:	0505                	addi	a0,a0,1
     1fe:	0306                	slli	t1,t1,0x1
    results[i].err         = 0;
     200:	0901                	addi	s2,s2,0
     202:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     204:	0301                	addi	t1,t1,0
     206:	0901                	addi	s2,s2,0
            num_algorithms++;
     208:	0000                	unimp
     20a:	0301                	addi	t1,t1,0
        if ((1 << (ee_u32)i) & results[0].execs)
     20c:	00000903          	lb	s2,0(zero) # 0 <_start>
            num_algorithms++;
     210:	0501                	addi	a0,a0,0
     212:	0309                	addi	t1,t1,2
     214:	0901                	addi	s2,s2,0
     216:	0000                	unimp
     218:	0501                	addi	a0,a0,0
     21a:	0601                	addi	a2,a2,0
        results[i].size = results[i].size / num_algorithms;
     21c:	00097903          	0x97903
     220:	0100                	addi	s0,sp,128
     222:	0b05                	addi	s6,s6,1
     224:	00090503          	lb	a0,0(s2)
     228:	0100                	addi	s0,sp,128
     22a:	0105                	addi	sp,sp,1
     22c:	00097b03          	0x97b03
     230:	0100                	addi	s0,sp,128
     232:	0805                	addi	a6,a6,1
        if ((1 << (ee_u32)i) & results[0].execs)
     234:	00090603          	lb	a2,0(s2)
     238:	0100                	addi	s0,sp,128
     23a:	1605                	addi	a2,a2,-31
     23c:	00090103          	lb	sp,0(s2)
     240:	0100                	addi	s0,sp,128
     242:	0805                	addi	a6,a6,1
        if (results[i].execs & ID_LIST)
     244:	00097f03          	0x97f03
        if (results[i].execs & ID_MATRIX)
     248:	0100                	addi	s0,sp,128
     24a:	0905                	addi	s2,s2,1
        if (results[i].execs & ID_STATE)
     24c:	0306                	slli	t1,t1,0x1
     24e:	0904                	addi	s1,sp,144
     250:	0000                	unimp
     252:	0501                	addi	a0,a0,0
            core_init_state(
     254:	0610                	addi	a2,sp,768
     256:	00090303          	lb	t1,0(s2)
     25a:	0100                	addi	s0,sp,128
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	00097e03          	0x97e03
            core_init_state(
     260:	0100                	addi	s0,sp,128
     262:	0f05                	addi	t5,t5,1
     264:	00090303          	lb	t1,0(s2)
     268:	0100                	addi	s0,sp,128
     26a:	1005                	c.nop	-31
     26c:	00097c03          	0x97c03
     270:	0100                	addi	s0,sp,128
     272:	0905                	addi	s2,s2,1
     274:	0306                	slli	t1,t1,0x1
     276:	0901                	addi	s2,s2,0
     278:	0000                	unimp
     27a:	0301                	addi	t1,t1,0
     27c:	00000903          	lb	s2,0(zero) # 0 <_start>
    if (results[0].iterations == 0)
     280:	0501                	addi	a0,a0,0
     282:	0003060f          	0x3060f
     286:	0009                	c.nop	2
        while (secs_passed < (secs_ret)1)
     288:	0100                	addi	s0,sp,128
     28a:	0905                	addi	s2,s2,1
     28c:	0306                	slli	t1,t1,0x1
     28e:	0901                	addi	s2,s2,0
     290:	0000                	unimp
     292:	0501                	addi	a0,a0,0
        results[0].iterations = 1;
     294:	060c                	addi	a1,sp,768
     296:	00097203          	0x97203
     29a:	0100                	addi	s0,sp,128
        crc      = core_bench_list(res, 1);
     29c:	0905                	addi	s2,s2,1
     29e:	0306                	slli	t1,t1,0x1
     2a0:	0925                	addi	s2,s2,9
     2a2:	0000                	unimp
     2a4:	0501                	addi	a0,a0,0
     2a6:	0614                	addi	a3,sp,768
     2a8:	00090003          	lb	zero,0(s2)
     2ac:	0100                	addi	s0,sp,128
     2ae:	1005                	c.nop	-31
     2b0:	00090103          	lb	sp,0(s2)
     2b4:	0100                	addi	s0,sp,128
     2b6:	1805                	addi	a6,a6,-31
            printf("start test44\n");
     2b8:	00090103          	lb	sp,0(s2)
     2bc:	0100                	addi	s0,sp,128
     2be:	1405                	addi	s0,s0,-31
     2c0:	00097e03          	0x97e03
            results[0].iterations *= 10;
     2c4:	0100                	addi	s0,sp,128
     2c6:	2b05                	jal	7f6 <main+0x77a>
    for (i = 0; i < iterations; i++)
     2c8:	00090203          	lb	tp,0(s2)
            results[0].iterations *= 10;
     2cc:	0100                	addi	s0,sp,128
     2ce:	1205                	addi	tp,tp,-31
     2d0:	00097e03          	0x97e03
     2d4:	0100                	addi	s0,sp,128
     2d6:	0905                	addi	s2,s2,1
     2d8:	0306                	slli	t1,t1,0x1
     2da:	0901                	addi	s2,s2,0
            start_time();
     2dc:	0000                	unimp
     2de:	0301                	addi	t1,t1,0
     2e0:	0901                	addi	s2,s2,0
     2e2:	0000                	unimp
    ee_u32        iterations = res->iterations;
     2e4:	0501                	addi	a0,a0,0
     2e6:	0003062b          	0x3062b
    res->crc                 = 0;
     2ea:	0009                	c.nop	2
     2ec:	0100                	addi	s0,sp,128
     2ee:	1005                	c.nop	-31
    for (i = 0; i < iterations; i++)
     2f0:	00090003          	lb	zero,0(s2)
        crc      = core_bench_list(res, 1);
     2f4:	0100                	addi	s0,sp,128
     2f6:	0905                	addi	s2,s2,1
     2f8:	0306                	slli	t1,t1,0x1
     2fa:	0901                	addi	s2,s2,0
     2fc:	0000                	unimp
     2fe:	0501                	addi	a0,a0,0
     300:	0601                	addi	a2,a2,0
     302:	00090203          	lb	tp,0(s2)
        res->crc = crcu16(crc, res->crc);
     306:	0100                	addi	s0,sp,128
     308:	1105                	addi	sp,sp,-31
     30a:	0306                	slli	t1,t1,0x1
     30c:	00000967          	jalr	s2,zero # 0 <_start>
     310:	0301                	addi	t1,t1,0
     312:	0902                	c.slli64	s2
        crc      = core_bench_list(res, -1);
     314:	0000                	unimp
     316:	0501                	addi	a0,a0,0
     318:	061a                	slli	a2,a2,0x6
     31a:	00090003          	lb	zero,0(s2)
     31e:	0100                	addi	s0,sp,128
     320:	1405                	addi	s0,s0,-31
     322:	00090603          	lb	a2,0(s2)
        res->crc = crcu16(crc, res->crc);
     326:	0100                	addi	s0,sp,128
     328:	1805                	addi	a6,a6,-31
     32a:	00097a03          	0x97a03
     32e:	0100                	addi	s0,sp,128
     330:	1105                	addi	sp,sp,-31
     332:	0306                	slli	t1,t1,0x1
        if (i == 0)
     334:	0906                	slli	s2,s2,0x1
     336:	0000                	unimp
    for (i = 0; i < iterations; i++)
     338:	0501                	addi	a0,a0,0
     33a:	0614                	addi	a3,sp,768
     33c:	00090003          	lb	zero,0(s2)
            stop_time();
     340:	0100                	addi	s0,sp,128
     342:	1505                	addi	a0,a0,-31
     344:	0306                	slli	t1,t1,0x1
     346:	0901                	addi	s2,s2,0
            secs_passed = time_in_secs(get_time());
     348:	0000                	unimp
     34a:	0501                	addi	a0,a0,0
     34c:	00030623          	sb	zero,12(t1) # ffffa00c <__freertos_irq_stack_top+0xfefea00c>
     350:	0009                	c.nop	2
     352:	0100                	addi	s0,sp,128
     354:	1105                	addi	sp,sp,-31
     356:	0306                	slli	t1,t1,0x1
        while (secs_passed < (secs_ret)1)
     358:	00000903          	lb	s2,0(zero) # 0 <_start>
     35c:	0501                	addi	a0,a0,0
     35e:	061a                	slli	a2,a2,0x6
            secs_passed = time_in_secs(get_time());
     360:	00090003          	lb	zero,0(s2)
     364:	0100                	addi	s0,sp,128
     366:	1405                	addi	s0,s0,-31
        while (secs_passed < (secs_ret)1)
     368:	00090103          	lb	sp,0(s2)
     36c:	0100                	addi	s0,sp,128
     36e:	1805                	addi	a6,a6,-31
     370:	00097f03          	0x97f03
        divisor = (ee_u32)secs_passed;
     374:	0100                	addi	s0,sp,128
     376:	1105                	addi	sp,sp,-31
     378:	0306                	slli	t1,t1,0x1
     37a:	0901                	addi	s2,s2,0
     37c:	0000                	unimp
     37e:	0501                	addi	a0,a0,0
     380:	0614                	addi	a3,sp,768
     382:	00090003          	lb	zero,0(s2)
     386:	0100                	addi	s0,sp,128
        if (divisor == 0) /* some machines cast float to int as 0 since this
     388:	1505                	addi	a0,a0,-31
     38a:	0306                	slli	t1,t1,0x1
            divisor = 1;
     38c:	0901                	addi	s2,s2,0
     38e:	0000                	unimp
        results[0].iterations *= 1 + 10 / divisor;
     390:	0501                	addi	a0,a0,0
     392:	0624                	addi	s1,sp,776
     394:	00090003          	lb	zero,0(s2)
     398:	0100                	addi	s0,sp,128
     39a:	0009                	c.nop	2
     39c:	0000                	unimp
     39e:	0101                	addi	sp,sp,0
     3a0:	0105                	addi	sp,sp,1
     3a2:	0500                	addi	s0,sp,640
     3a4:	0002                	c.slli64	zero
     3a6:	0000                	unimp
     3a8:	0300                	addi	s0,sp,384
     3aa:	00f9                	addi	ra,ra,30
     3ac:	0501                	addi	a0,a0,0
     3ae:	0305                	addi	t1,t1,1
    start_time();
     3b0:	0901                	addi	s2,s2,0
     3b2:	0000                	unimp
     3b4:	0501                	addi	a0,a0,0
     3b6:	0601                	addi	a2,a2,0
    iterate(&results[0]);
     3b8:	00097f03          	0x97f03
     3bc:	0100                	addi	s0,sp,128
     3be:	0c05                	addi	s8,s8,1
     3c0:	00094e03          	lbu	t3,0(s2)
     3c4:	0100                	addi	s0,sp,128
     3c6:	0105                	addi	sp,sp,1
     3c8:	00093203          	0x93203
     3cc:	0100                	addi	s0,sp,128
     3ce:	0b05                	addi	s6,s6,1
     3d0:	00095203          	lhu	tp,0(s2)
     3d4:	0100                	addi	s0,sp,128
     3d6:	0105                	addi	sp,sp,1
    stop_time();
     3d8:	00092e03          	lw	t3,0(s2)
     3dc:	0100                	addi	s0,sp,128
     3de:	0805                	addi	a6,a6,1
    total_time = get_time();
     3e0:	00095303          	lhu	t1,0(s2)
     3e4:	0100                	addi	s0,sp,128
     3e6:	0105                	addi	sp,sp,1
    seedcrc = crc16(results[0].seed1, seedcrc);
     3e8:	00092d03          	lw	s10,0(s2)
     3ec:	0100                	addi	s0,sp,128
     3ee:	0505                	addi	a0,a0,1
     3f0:	0306                	slli	t1,t1,0x1
     3f2:	094e                	slli	s2,s2,0x13
    total_time = get_time();
     3f4:	0000                	unimp
     3f6:	0301                	addi	t1,t1,0
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	0901                	addi	s2,s2,0
     3fa:	0000                	unimp
     3fc:	0301                	addi	t1,t1,0
     3fe:	0901                	addi	s2,s2,0
     400:	0000                	unimp
     402:	0301                	addi	t1,t1,0
     404:	00000903          	lb	s2,0(zero) # 0 <_start>
     408:	0501                	addi	a0,a0,0
     40a:	0309                	addi	t1,t1,2
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	0901                	addi	s2,s2,0
     40e:	0000                	unimp
     410:	0501                	addi	a0,a0,0
     412:	0616                	slli	a2,a2,0x5
     414:	00090003          	lb	zero,0(s2)
     418:	0100                	addi	s0,sp,128
     41a:	0805                	addi	a6,a6,1
     41c:	00097f03          	0x97f03
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	0100                	addi	s0,sp,128
     422:	0905                	addi	s2,s2,1
     424:	0306                	slli	t1,t1,0x1
     426:	0904                	addi	s1,sp,144
     428:	0000                	unimp
     42a:	0501                	addi	a0,a0,0
     42c:	0610                	addi	a2,sp,768
     42e:	00090303          	lb	t1,0(s2)
     432:	0100                	addi	s0,sp,128
    seedcrc = crc16(results[0].size, seedcrc);
     434:	00097e03          	0x97e03
     438:	0100                	addi	s0,sp,128
     43a:	0f05                	addi	t5,t5,1
     43c:	00090303          	lb	t1,0(s2)
     440:	0100                	addi	s0,sp,128
     442:	1005                	c.nop	-31
     444:	00097c03          	0x97c03
     448:	0100                	addi	s0,sp,128
     44a:	0905                	addi	s2,s2,1
     44c:	0306                	slli	t1,t1,0x1
     44e:	0901                	addi	s2,s2,0
    switch (seedcrc)
     450:	0000                	unimp
     452:	0301                	addi	t1,t1,0
     454:	00000903          	lb	s2,0(zero) # 0 <_start>
     458:	0501                	addi	a0,a0,0
     45a:	0003060f          	0x3060f
     45e:	0009                	c.nop	2
     460:	0100                	addi	s0,sp,128
     462:	0905                	addi	s2,s2,1
     464:	0306                	slli	t1,t1,0x1
     466:	0901                	addi	s2,s2,0
     468:	0000                	unimp
     46a:	0501                	addi	a0,a0,0
     46c:	060c                	addi	a1,sp,768
     46e:	00097203          	0x97203
            ee_printf("2K performance run parameters for coremark.\n");
     472:	0100                	addi	s0,sp,128
     474:	0905                	addi	s2,s2,1
     476:	0306                	slli	t1,t1,0x1
     478:	0925                	addi	s2,s2,9
     47a:	0000                	unimp
     47c:	0501                	addi	a0,a0,0
     47e:	0614                	addi	a3,sp,768
     480:	00090003          	lb	zero,0(s2)
     484:	0100                	addi	s0,sp,128
     486:	1005                	c.nop	-31
     488:	00090103          	lb	sp,0(s2)
            known_id = 3;
     48c:	0100                	addi	s0,sp,128
     48e:	1805                	addi	a6,a6,-31
            ee_printf("2K performance run parameters for coremark.\n");
     490:	00090103          	lb	sp,0(s2)
     494:	0100                	addi	s0,sp,128
     496:	1405                	addi	s0,s0,-31
     498:	00097e03          	0x97e03
            known_id = 3;
     49c:	0100                	addi	s0,sp,128
     49e:	2b05                	jal	9ce <main+0x952>
        for (i = 0; i < default_num_contexts; i++)
     4a0:	00090203          	lb	tp,0(s2)
     4a4:	0100                	addi	s0,sp,128
     4a6:	1205                	addi	tp,tp,-31
     4a8:	00097e03          	0x97e03
     4ac:	0100                	addi	s0,sp,128
     4ae:	0905                	addi	s2,s2,1
     4b0:	0306                	slli	t1,t1,0x1
     4b2:	0901                	addi	s2,s2,0
            results[i].err = 0;
     4b4:	0000                	unimp
     4b6:	0301                	addi	t1,t1,0
     4b8:	0901                	addi	s2,s2,0
     4ba:	0000                	unimp
     4bc:	0501                	addi	a0,a0,0
     4be:	0003062b          	0x3062b
     4c2:	0009                	c.nop	2
     4c4:	0100                	addi	s0,sp,128
     4c6:	1005                	c.nop	-31
     4c8:	00090003          	lb	zero,0(s2)
     4cc:	0100                	addi	s0,sp,128
     4ce:	0905                	addi	s2,s2,1
     4d0:	0306                	slli	t1,t1,0x1
     4d2:	0901                	addi	s2,s2,0
     4d4:	0000                	unimp
     4d6:	0501                	addi	a0,a0,0
     4d8:	0305                	addi	t1,t1,1
     4da:	090c                	addi	a1,sp,144
     4dc:	0000                	unimp
     4de:	0301                	addi	t1,t1,0
     4e0:	094c                	addi	a1,sp,148
     4e2:	0000                	unimp
     4e4:	0501                	addi	a0,a0,0
     4e6:	060c                	addi	a1,sp,768
     4e8:	00090003          	lb	zero,0(s2)
            total_errors += results[i].err;
     4ec:	0100                	addi	s0,sp,128
     4ee:	0505                	addi	a0,a0,1
        for (i = 0; i < default_num_contexts; i++)
     4f0:	0306                	slli	t1,t1,0x1
     4f2:	0901                	addi	s2,s2,0
            total_errors += results[i].err;
     4f4:	0000                	unimp
     4f6:	0301                	addi	t1,t1,0
        for (i = 0; i < default_num_contexts; i++)
     4f8:	0901                	addi	s2,s2,0
     4fa:	0000                	unimp
            total_errors += results[i].err;
     4fc:	0301                	addi	t1,t1,0
     4fe:	00000903          	lb	s2,0(zero) # 0 <_start>
        for (i = 0; i < default_num_contexts; i++)
     502:	0501                	addi	a0,a0,0
            total_errors += results[i].err;
     504:	0309                	addi	t1,t1,2
     506:	0901                	addi	s2,s2,0
        for (i = 0; i < default_num_contexts; i++)
     508:	0000                	unimp
     50a:	0501                	addi	a0,a0,0
            total_errors += results[i].err;
     50c:	7e03060b          	0x7e03060b
        for (i = 0; i < default_num_contexts; i++)
     510:	0009                	c.nop	2
     512:	0100                	addi	s0,sp,128
            results[i].err = 0;
     514:	0805                	addi	a6,a6,1
     516:	00090103          	lb	sp,0(s2)
     51a:	0100                	addi	s0,sp,128
     51c:	1605                	addi	a2,a2,-31
     51e:	00090103          	lb	sp,0(s2)
     522:	0100                	addi	s0,sp,128
     524:	0805                	addi	a6,a6,1
     526:	00097f03          	0x97f03
     52a:	0100                	addi	s0,sp,128
            if ((results[i].execs & ID_LIST)
     52c:	0905                	addi	s2,s2,1
     52e:	0306                	slli	t1,t1,0x1
            results[i].err = 0;
     530:	0904                	addi	s1,sp,144
     532:	0000                	unimp
            if ((results[i].execs & ID_LIST)
     534:	0501                	addi	a0,a0,0
     536:	0610                	addi	a2,sp,768
     538:	00090303          	lb	t1,0(s2)
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	0100                	addi	s0,sp,128
     53e:	00097e03          	0x97e03
     542:	0100                	addi	s0,sp,128
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	0f05                	addi	t5,t5,1
     546:	00090303          	lb	t1,0(s2)
     54a:	0100                	addi	s0,sp,128
     54c:	1005                	c.nop	-31
     54e:	00097c03          	0x97c03
     552:	0100                	addi	s0,sp,128
     554:	0905                	addi	s2,s2,1
     556:	0306                	slli	t1,t1,0x1
     558:	0901                	addi	s2,s2,0
     55a:	0000                	unimp
                results[i].err++;
     55c:	0301                	addi	t1,t1,0
     55e:	00000903          	lb	s2,0(zero) # 0 <_start>
     562:	0501                	addi	a0,a0,0
     564:	0003060f          	0x3060f
            if ((results[i].execs & ID_MATRIX)
     568:	0009                	c.nop	2
     56a:	0100                	addi	s0,sp,128
     56c:	0905                	addi	s2,s2,1
     56e:	0306                	slli	t1,t1,0x1
     570:	0901                	addi	s2,s2,0
     572:	0000                	unimp
     574:	0501                	addi	a0,a0,0
     576:	060c                	addi	a1,sp,768
     578:	00097203          	0x97203
     57c:	0100                	addi	s0,sp,128
     57e:	0905                	addi	s2,s2,1
     580:	0306                	slli	t1,t1,0x1
     582:	0925                	addi	s2,s2,9
     584:	0000                	unimp
     586:	0501                	addi	a0,a0,0
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	0614                	addi	a3,sp,768
     58a:	00090003          	lb	zero,0(s2)
     58e:	0100                	addi	s0,sp,128
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     590:	1005                	c.nop	-31
     592:	00090103          	lb	sp,0(s2)
     596:	0100                	addi	s0,sp,128
     598:	1805                	addi	a6,a6,-31
     59a:	00090103          	lb	sp,0(s2)
     59e:	0100                	addi	s0,sp,128
     5a0:	1405                	addi	s0,s0,-31
     5a2:	00097e03          	0x97e03
     5a6:	0100                	addi	s0,sp,128
                results[i].err++;
     5a8:	2b05                	jal	ad8 <main+0xa5c>
     5aa:	00090203          	lb	tp,0(s2)
     5ae:	0100                	addi	s0,sp,128
     5b0:	1205                	addi	tp,tp,-31
     5b2:	00097e03          	0x97e03
     5b6:	0100                	addi	s0,sp,128
            if ((results[i].execs & ID_STATE)
     5b8:	0905                	addi	s2,s2,1
     5ba:	0306                	slli	t1,t1,0x1
     5bc:	0901                	addi	s2,s2,0
     5be:	0000                	unimp
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	0301                	addi	t1,t1,0
     5c2:	0901                	addi	s2,s2,0
     5c4:	0000                	unimp
     5c6:	0501                	addi	a0,a0,0
     5c8:	0003062b          	0x3062b
     5cc:	0009                	c.nop	2
     5ce:	0100                	addi	s0,sp,128
     5d0:	1005                	c.nop	-31
     5d2:	00090003          	lb	zero,0(s2)
     5d6:	0100                	addi	s0,sp,128
     5d8:	0905                	addi	s2,s2,1
     5da:	0306                	slli	t1,t1,0x1
     5dc:	0901                	addi	s2,s2,0
     5de:	0000                	unimp
     5e0:	0501                	addi	a0,a0,0
     5e2:	0305                	addi	t1,t1,1
            results[i].list = core_list_init(
     5e4:	090d                	addi	s2,s2,3
     5e6:	0000                	unimp
     5e8:	0501                	addi	a0,a0,0
     5ea:	0601                	addi	a2,a2,0
     5ec:	00090103          	lb	sp,0(s2)
     5f0:	0100                	addi	s0,sp,128
     5f2:	1105                	addi	sp,sp,-31
     5f4:	0306                	slli	t1,t1,0x1
     5f6:	0000095b          	0x95b
     5fa:	0301                	addi	t1,t1,0
     5fc:	0902                	c.slli64	s2
     5fe:	0000                	unimp
     600:	0501                	addi	a0,a0,0
     602:	061a                	slli	a2,a2,0x6
     604:	00090003          	lb	zero,0(s2)
     608:	0100                	addi	s0,sp,128
     60a:	1405                	addi	s0,s0,-31
     60c:	00090603          	lb	a2,0(s2)
     610:	0100                	addi	s0,sp,128
     612:	1805                	addi	a6,a6,-31
     614:	00097a03          	0x97a03
     618:	0100                	addi	s0,sp,128
     61a:	1105                	addi	sp,sp,-31
        if (results[i].execs & ID_MATRIX)
     61c:	0306                	slli	t1,t1,0x1
     61e:	0906                	slli	s2,s2,0x1
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	0000                	unimp
     622:	0501                	addi	a0,a0,0
     624:	0614                	addi	a3,sp,768
     626:	00090003          	lb	zero,0(s2)
     62a:	0100                	addi	s0,sp,128
            core_init_matrix(results[0].size,
     62c:	1505                	addi	a0,a0,-31
     62e:	0306                	slli	t1,t1,0x1
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	0901                	addi	s2,s2,0
     632:	0000                	unimp
     634:	0501                	addi	a0,a0,0
     636:	00030623          	sb	zero,12(t1)
                             (ee_s32)results[i].seed1
     63a:	0009                	c.nop	2
                                 | (((ee_s32)results[i].seed2) << 16),
     63c:	0100                	addi	s0,sp,128
     63e:	1105                	addi	sp,sp,-31
            core_init_matrix(results[0].size,
     640:	0306                	slli	t1,t1,0x1
     642:	00000977          	0x977
                             (ee_s32)results[i].seed1
     646:	0301                	addi	t1,t1,0
            core_init_matrix(results[0].size,
     648:	0902                	c.slli64	s2
     64a:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     64c:	0501                	addi	a0,a0,0
     64e:	061a                	slli	a2,a2,0x6
            core_init_matrix(results[0].size,
     650:	00090003          	lb	zero,0(s2)
     654:	0100                	addi	s0,sp,128
     656:	1405                	addi	s0,s0,-31
     658:	00090603          	lb	a2,0(s2)
     65c:	0100                	addi	s0,sp,128
     65e:	1805                	addi	a6,a6,-31
     660:	00097a03          	0x97a03
     664:	0100                	addi	s0,sp,128
     666:	1105                	addi	sp,sp,-31
     668:	0306                	slli	t1,t1,0x1
     66a:	0906                	slli	s2,s2,0x1
     66c:	0000                	unimp
     66e:	0501                	addi	a0,a0,0
     670:	0614                	addi	a3,sp,768
     672:	00090003          	lb	zero,0(s2)
     676:	0100                	addi	s0,sp,128
     678:	1505                	addi	a0,a0,-31
     67a:	0306                	slli	t1,t1,0x1
     67c:	0901                	addi	s2,s2,0
     67e:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
     680:	0501                	addi	a0,a0,0
     682:	00030623          	sb	zero,12(t1)
     686:	0009                	c.nop	2
     688:	0100                	addi	s0,sp,128
     68a:	1105                	addi	sp,sp,-31
     68c:	0306                	slli	t1,t1,0x1
     68e:	00000903          	lb	s2,0(zero) # 0 <_start>
     692:	0501                	addi	a0,a0,0
     694:	061a                	slli	a2,a2,0x6
     696:	00090003          	lb	zero,0(s2)
     69a:	0100                	addi	s0,sp,128
            known_id = 2;
     69c:	1405                	addi	s0,s0,-31
     69e:	00090103          	lb	sp,0(s2)
            ee_printf("Profile generation run parameters for coremark.\n");
     6a2:	0100                	addi	s0,sp,128
     6a4:	1805                	addi	a6,a6,-31
     6a6:	00097f03          	0x97f03
     6aa:	0100                	addi	s0,sp,128
            known_id = 2;
     6ac:	1105                	addi	sp,sp,-31
     6ae:	0306                	slli	t1,t1,0x1
     6b0:	0901                	addi	s2,s2,0
     6b2:	0000                	unimp
        && (results[0].seed3 == 0))
     6b4:	0501                	addi	a0,a0,0
     6b6:	0614                	addi	a3,sp,768
     6b8:	00090003          	lb	zero,0(s2)
     6bc:	0100                	addi	s0,sp,128
     6be:	1505                	addi	a0,a0,-31
        results[0].seed3 = 0x66;
     6c0:	0306                	slli	t1,t1,0x1
     6c2:	0901                	addi	s2,s2,0
     6c4:	0000                	unimp
     6c6:	0501                	addi	a0,a0,0
     6c8:	0624                	addi	s1,sp,776
     6ca:	00090003          	lb	zero,0(s2)
     6ce:	0100                	addi	s0,sp,128
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	1105                	addi	sp,sp,-31
     6d2:	0306                	slli	t1,t1,0x1
     6d4:	097e                	slli	s2,s2,0x1f
     6d6:	0000                	unimp
     6d8:	0501                	addi	a0,a0,0
     6da:	061a                	slli	a2,a2,0x6
     6dc:	00090003          	lb	zero,0(s2)
     6e0:	0100                	addi	s0,sp,128
     6e2:	1405                	addi	s0,s0,-31
     6e4:	00090103          	lb	sp,0(s2)
                results[i].err++;
     6e8:	0100                	addi	s0,sp,128
     6ea:	1805                	addi	a6,a6,-31
     6ec:	00097f03          	0x97f03
     6f0:	0100                	addi	s0,sp,128
     6f2:	1105                	addi	sp,sp,-31
     6f4:	0306                	slli	t1,t1,0x1
     6f6:	0901                	addi	s2,s2,0
     6f8:	0000                	unimp
     6fa:	0501                	addi	a0,a0,0
     6fc:	0614                	addi	a3,sp,768
     6fe:	00090003          	lb	zero,0(s2)
    switch (seedcrc)
     702:	0100                	addi	s0,sp,128
    ee_s16       known_id = -1, total_errors = 0;
     704:	1505                	addi	a0,a0,-31
     706:	0306                	slli	t1,t1,0x1
    switch (seedcrc)
     708:	0901                	addi	s2,s2,0
     70a:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
     70c:	0501                	addi	a0,a0,0
     70e:	0624                	addi	s1,sp,776
     710:	00090003          	lb	zero,0(s2)
    total_errors += check_data_types();
     714:	0100                	addi	s0,sp,128
     716:	0009                	c.nop	2
     718:	0000                	unimp
     71a:	0101                	addi	sp,sp,0
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	0105                	addi	sp,sp,1
     71e:	0500                	addi	s0,sp,640
    total_errors += check_data_types();
     720:	0002                	c.slli64	zero
     722:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	0300                	addi	s0,sp,384
     726:	0186                	slli	gp,gp,0x1
     728:	0501                	addi	a0,a0,0
     72a:	0305                	addi	t1,t1,1
     72c:	0901                	addi	s2,s2,0
     72e:	0000                	unimp
     730:	0501                	addi	a0,a0,0
     732:	0608                	addi	a0,sp,768
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	00090003          	lb	zero,0(s2)
     738:	0100                	addi	s0,sp,128
     73a:	0505                	addi	a0,a0,1
     73c:	0306                	slli	t1,t1,0x1
     73e:	0905                	addi	s2,s2,1
     740:	0000                	unimp
     742:	0501                	addi	a0,a0,0
     744:	060d                	addi	a2,a2,3
     746:	00090003          	lb	zero,0(s2)
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     74a:	0100                	addi	s0,sp,128
     74c:	1605                	addi	a2,a2,-31
     74e:	00090003          	lb	zero,0(s2)
     752:	0100                	addi	s0,sp,128
     754:	0105                	addi	sp,sp,1
     756:	00090103          	lb	sp,0(s2)
     75a:	0100                	addi	s0,sp,128
     75c:	0905                	addi	s2,s2,1
     75e:	0306                	slli	t1,t1,0x1
     760:	097c                	addi	a5,sp,156
     762:	0000                	unimp
     764:	0501                	addi	a0,a0,0
     766:	00030617          	auipc	a2,0x30
     76a:	0009                	c.nop	2
    if (time_in_secs(total_time) > 0)
     76c:	0100                	addi	s0,sp,128
     76e:	2a05                	jal	89e <main+0x822>
     770:	00090003          	lb	zero,0(s2)
     774:	0100                	addi	s0,sp,128
     776:	2005                	jal	796 <main+0x71a>
    total_errors += check_data_types();
     778:	00090003          	lb	zero,0(s2)
    if (time_in_secs(total_time) > 0)
     77c:	0100                	addi	s0,sp,128
     77e:	2a05                	jal	8ae <main+0x832>
     780:	00090003          	lb	zero,0(s2)
    total_errors += check_data_types();
     784:	0100                	addi	s0,sp,128
     786:	1305                	addi	t1,t1,-31
    if (time_in_secs(total_time) > 0)
     788:	00090003          	lb	zero,0(s2)
     78c:	0100                	addi	s0,sp,128
     78e:	0905                	addi	s2,s2,1
     790:	0306                	slli	t1,t1,0x1
     792:	0901                	addi	s2,s2,0
                  default_num_contexts * results[0].iterations
     794:	0000                	unimp
     796:	0501                	addi	a0,a0,0
     798:	00030617          	auipc	a2,0x30
     79c:	0009                	c.nop	2
     79e:	0100                	addi	s0,sp,128
     7a0:	0d05                	addi	s10,s10,1
     7a2:	00090203          	lb	tp,0(s2)
        ee_printf("Iterations/Sec   : %lf\n",
     7a6:	0100                	addi	s0,sp,128
     7a8:	2a05                	jal	8d8 <main+0x85c>
     7aa:	00097e03          	0x97e03
     7ae:	0100                	addi	s0,sp,128
                      / time_in_secs(total_time));
     7b0:	2005                	jal	7d0 <main+0x754>
     7b2:	00090003          	lb	zero,0(s2)
        ee_printf("Iterations/Sec   : %lf\n",
     7b6:	0100                	addi	s0,sp,128
                      / time_in_secs(total_time));
     7b8:	2a05                	jal	8e8 <main+0x86c>
     7ba:	00090003          	lb	zero,0(s2)
     7be:	0100                	addi	s0,sp,128
        ee_printf("Iterations/Sec   : %lf\n",
     7c0:	1305                	addi	t1,t1,-31
     7c2:	00090003          	lb	zero,0(s2)
     7c6:	0100                	addi	s0,sp,128
     7c8:	0505                	addi	a0,a0,1
     7ca:	0306                	slli	t1,t1,0x1
     7cc:	0902                	c.slli64	s2
     7ce:	0000                	unimp
     7d0:	0501                	addi	a0,a0,0
     7d2:	0616                	slli	a2,a2,0x5
     7d4:	00090003          	lb	zero,0(s2)
     7d8:	0100                	addi	s0,sp,128
     7da:	0105                	addi	sp,sp,1
     7dc:	00090103          	lb	sp,0(s2)
     7e0:	0100                	addi	s0,sp,128
     7e2:	0009                	c.nop	2
     7e4:	0000                	unimp
     7e6:	0101                	addi	sp,sp,0
     7e8:	0105                	addi	sp,sp,1
     7ea:	0500                	addi	s0,sp,640
     7ec:	0002                	c.slli64	zero
     7ee:	0000                	unimp
    if (time_in_secs(total_time) < 10)
     7f0:	0300                	addi	s0,sp,384
     7f2:	0191                	addi	gp,gp,4
     7f4:	0501                	addi	a0,a0,0
     7f6:	0305                	addi	t1,t1,1
     7f8:	0901                	addi	s2,s2,0
     7fa:	0000                	unimp
     7fc:	0501                	addi	a0,a0,0
     7fe:	0616                	slli	a2,a2,0x5
     800:	00090003          	lb	zero,0(s2)
     804:	0100                	addi	s0,sp,128
     806:	00090103          	lb	sp,0(s2)
     80a:	0100                	addi	s0,sp,128
     80c:	1005                	c.nop	-31
     80e:	00097f03          	0x97f03
     812:	0100                	addi	s0,sp,128
    ee_printf("Iterations       : %lu\n",
     814:	0505                	addi	a0,a0,1
     816:	0306                	slli	t1,t1,0x1
     818:	0901                	addi	s2,s2,0
     81a:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     81c:	0501                	addi	a0,a0,0
     81e:	0610                	addi	a2,sp,768
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     820:	00090003          	lb	zero,0(s2)
    ee_printf("Iterations       : %lu\n",
     824:	0100                	addi	s0,sp,128
     826:	0105                	addi	sp,sp,1
     828:	00090103          	lb	sp,0(s2)
     82c:	0100                	addi	s0,sp,128
     82e:	0009                	c.nop	2
     830:	0000                	unimp
     832:	0101                	addi	sp,sp,0
     834:	0105                	addi	sp,sp,1
     836:	0500                	addi	s0,sp,640
     838:	4002                	0x4002
     83a:	000d                	c.nop	3
     83c:	0300                	addi	s0,sp,384
     83e:	019f 0501 0305      	0x3050501019f
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     844:	0901                	addi	s2,s2,0
     846:	0000                	unimp
     848:	0301                	addi	t1,t1,0
     84a:	0901                	addi	s2,s2,0
     84c:	0000                	unimp
     84e:	0301                	addi	t1,t1,0
     850:	0901                	addi	s2,s2,0
     852:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	0501                	addi	a0,a0,0
     856:	0610                	addi	a2,sp,768
     858:	00090103          	lb	sp,0(s2)
     85c:	0100                	addi	s0,sp,128
     85e:	0105                	addi	sp,sp,1
     860:	04097c03          	0x4097c03
     864:	0100                	addi	s0,sp,128
     866:	38090003          	lb	zero,896(s2)
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     86a:	0100                	addi	s0,sp,128
     86c:	1005                	c.nop	-31
     86e:	08090303          	lb	t1,128(s2)
     872:	0100                	addi	s0,sp,128
     874:	0505                	addi	a0,a0,1
     876:	0306                	slli	t1,t1,0x1
     878:	0901                	addi	s2,s2,0
     87a:	0004                	0x4
     87c:	0301                	addi	t1,t1,0
     87e:	0901                	addi	s2,s2,0
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     880:	0000                	unimp
     882:	0301                	addi	t1,t1,0
     884:	0901                	addi	s2,s2,0
     886:	0000                	unimp
     888:	0301                	addi	t1,t1,0
     88a:	0901                	addi	s2,s2,0
     88c:	0000                	unimp
     88e:	0301                	addi	t1,t1,0
     890:	0901                	addi	s2,s2,0
     892:	0000                	unimp
    if (results[0].execs & ID_LIST)
     894:	0301                	addi	t1,t1,0
     896:	0902                	c.slli64	s2
        total_errors++;
     898:	0000                	unimp
     89a:	0301                	addi	t1,t1,0
     89c:	00000903          	lb	s2,0(zero) # 0 <_start>
    if (results[0].execs & ID_LIST)
     8a0:	0501                	addi	a0,a0,0
     8a2:	060e                	slli	a2,a2,0x3
     8a4:	04097d03          	0x4097d03
        for (i = 0; i < default_num_contexts; i++)
     8a8:	0100                	addi	s0,sp,128
     8aa:	0c05                	addi	s8,s8,1
     8ac:	04090303          	lb	t1,64(s2)
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b0:	0100                	addi	s0,sp,128
     8b2:	1b05                	addi	s6,s6,-31
     8b4:	04097503          	0x4097503
     8b8:	0100                	addi	s0,sp,128
     8ba:	1005                	c.nop	-31
     8bc:	04090003          	lb	zero,64(s2)
     8c0:	0100                	addi	s0,sp,128
     8c2:	04097f03          	0x4097f03
        for (i = 0; i < default_num_contexts; i++)
     8c6:	0100                	addi	s0,sp,128
     8c8:	0905                	addi	s2,s2,1
     8ca:	0306                	slli	t1,t1,0x1
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8cc:	090e                	slli	s2,s2,0x3
     8ce:	0004                	0x4
     8d0:	0501                	addi	a0,a0,0
     8d2:	0608                	addi	a0,sp,768
     8d4:	09028703          	lb	a4,144(t0) # 19582c <_data_lma+0x18a6b4>
     8d8:	0000                	unimp
     8da:	0501                	addi	a0,a0,0
     8dc:	031a                	slli	t1,t1,0x6
     8de:	7df9                	lui	s11,0xffffe
     8e0:	0409                	addi	s0,s0,2
     8e2:	0100                	addi	s0,sp,128
     8e4:	0905                	addi	s2,s2,1
     8e6:	0306                	slli	t1,t1,0x1
     8e8:	0901                	addi	s2,s2,0
     8ea:	0008                	0x8
     8ec:	0501                	addi	a0,a0,0
     8ee:	0305                	addi	t1,t1,1
     8f0:	0286                	slli	t0,t0,0x1
     8f2:	0009                	c.nop	2
     8f4:	0100                	addi	s0,sp,128
     8f6:	0805                	addi	a6,a6,1
     8f8:	0306                	slli	t1,t1,0x1
     8fa:	0900                	addi	s0,sp,144
     8fc:	0000                	unimp
     8fe:	0501                	addi	a0,a0,0
        for (i = 0; i < default_num_contexts; i++)
     900:	0902030f          	0x902030f
     904:	0004                	0x4
     906:	0501                	addi	a0,a0,0
     908:	09000323          	sb	a6,134(zero) # 86 <main+0xa>
     90c:	0004                	0x4
     90e:	0501                	addi	a0,a0,0
     910:	0315                	addi	t1,t1,5
     912:	0900                	addi	s0,sp,144
     914:	0008                	0x8
     916:	0501                	addi	a0,a0,0
    if (results[0].execs & ID_MATRIX)
     918:	09000323          	sb	a6,134(zero) # 86 <main+0xa>
     91c:	0010                	0x10
     91e:	0501                	addi	a0,a0,0
        for (i = 0; i < default_num_contexts; i++)
     920:	0315                	addi	t1,t1,5
     922:	0900                	addi	s0,sp,144
     924:	0004                	0x4
     926:	0501                	addi	a0,a0,0
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	060d                	addi	a2,a2,3
     92a:	0c090103          	lb	sp,192(s2)
     92e:	0100                	addi	s0,sp,128
     930:	1205                	addi	tp,tp,-31
     932:	0306                	slli	t1,t1,0x1
     934:	0900                	addi	s0,sp,144
     936:	0000                	unimp
     938:	0501                	addi	a0,a0,0
     93a:	097f030f          	0x97f030f
        for (i = 0; i < default_num_contexts; i++)
     93e:	0004                	0x4
     940:	0501                	addi	a0,a0,0
     942:	0609                	addi	a2,a2,2
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     944:	097df903          	0x97df903
     948:	0004                	0x4
     94a:	0501                	addi	a0,a0,0
     94c:	0305                	addi	t1,t1,1
     94e:	000902a3          	sb	zero,5(s2)
     952:	0100                	addi	s0,sp,128
     954:	00090103          	lb	sp,0(s2)
     958:	0100                	addi	s0,sp,128
     95a:	1505                	addi	a0,a0,-31
     95c:	0306                	slli	t1,t1,0x1
     95e:	00000963          	beqz	zero,970 <main+0x8f4>
     962:	0501                	addi	a0,a0,0
     964:	091d030b          	0x91d030b
     968:	0008                	0x8
     96a:	0501                	addi	a0,a0,0
     96c:	0609                	addi	a2,a2,2
     96e:	08090203          	lb	tp,128(s2)
     972:	0100                	addi	s0,sp,128
     974:	1405                	addi	s0,s0,-31
     976:	0306                	slli	t1,t1,0x1
        for (i = 0; i < default_num_contexts; i++)
     978:	0900                	addi	s0,sp,144
     97a:	0000                	unimp
     97c:	0501                	addi	a0,a0,0
     97e:	0609                	addi	a2,a2,2
     980:	04090103          	lb	sp,64(s2)
     984:	0100                	addi	s0,sp,128
     986:	1405                	addi	s0,s0,-31
     988:	0306                	slli	t1,t1,0x1
     98a:	0900                	addi	s0,sp,144
     98c:	0000                	unimp
     98e:	0501                	addi	a0,a0,0
    if (results[0].execs & ID_STATE)
     990:	0609                	addi	a2,a2,2
     992:	04090103          	lb	sp,64(s2)
     996:	0100                	addi	s0,sp,128
        for (i = 0; i < default_num_contexts; i++)
     998:	00090103          	lb	sp,0(s2)
     99c:	0100                	addi	s0,sp,128
     99e:	0b05                	addi	s6,s6,1
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	0306                	slli	t1,t1,0x1
     9a2:	0000097b          	0x97b
     9a6:	0501                	addi	a0,a0,0
     9a8:	0605                	addi	a2,a2,1
     9aa:	04090703          	lb	a4,64(s2)
     9ae:	0100                	addi	s0,sp,128
     9b0:	0905                	addi	s2,s2,1
     9b2:	097dd603          	lhu	a2,151(s11) # ffffe097 <__freertos_irq_stack_top+0xfefee097>
        for (i = 0; i < default_num_contexts; i++)
     9b6:	0000                	unimp
     9b8:	0501                	addi	a0,a0,0
     9ba:	060c                	addi	a1,sp,768
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9bc:	00090003          	lb	zero,0(s2)
     9c0:	0100                	addi	s0,sp,128
     9c2:	0d05                	addi	s10,s10,1
     9c4:	0306                	slli	t1,t1,0x1
     9c6:	00040907          	0x40907
     9ca:	0501                	addi	a0,a0,0
     9cc:	0620                	addi	s0,sp,776
     9ce:	00090103          	lb	sp,0(s2)
     9d2:	0100                	addi	s0,sp,128
     9d4:	1205                	addi	tp,tp,-31
     9d6:	04097f03          	0x4097f03
     9da:	0100                	addi	s0,sp,128
     9dc:	2005                	jal	9fc <main+0x980>
     9de:	08090103          	lb	sp,128(s2)
     9e2:	0100                	addi	s0,sp,128
     9e4:	1205                	addi	tp,tp,-31
     9e6:	04097f03          	0x4097f03
     9ea:	0100                	addi	s0,sp,128
     9ec:	0d05                	addi	s10,s10,1
     9ee:	0306                	slli	t1,t1,0x1
        for (i = 0; i < default_num_contexts; i++)
     9f0:	0901                	addi	s2,s2,0
     9f2:	0004                	0x4
     9f4:	0501                	addi	a0,a0,0
     9f6:	0610                	addi	a2,sp,768
     9f8:	00090003          	lb	zero,0(s2)
     9fc:	0100                	addi	s0,sp,128
     9fe:	1105                	addi	sp,sp,-31
     a00:	0306                	slli	t1,t1,0x1
     a02:	0901                	addi	s2,s2,0
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	0008                	0x8
     a06:	0501                	addi	a0,a0,0
    for (i = 0; i < default_num_contexts; i++)
     a08:	063a                	slli	a2,a2,0xe
     a0a:	00090003          	lb	zero,0(s2)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a0e:	0100                	addi	s0,sp,128
     a10:	1805                	addi	a6,a6,-31
     a12:	08090003          	lb	zero,128(s2)
     a16:	0100                	addi	s0,sp,128
    for (i = 0; i < default_num_contexts; i++)
     a18:	0d05                	addi	s10,s10,1
     a1a:	0306                	slli	t1,t1,0x1
     a1c:	0902                	c.slli64	s2
     a1e:	000c                	0xc
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	0501                	addi	a0,a0,0
     a22:	061a                	slli	a2,a2,0x6
     a24:	00090003          	lb	zero,0(s2)
    for (i = 0; i < default_num_contexts; i++)
     a28:	0100                	addi	s0,sp,128
     a2a:	1005                	c.nop	-31
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	04090003          	lb	zero,64(s2)
     a30:	0100                	addi	s0,sp,128
     a32:	1105                	addi	sp,sp,-31
     a34:	0306                	slli	t1,t1,0x1
     a36:	0902                	c.slli64	s2
     a38:	0004                	0x4
     a3a:	0301                	addi	t1,t1,0
     a3c:	0901                	addi	s2,s2,0
     a3e:	0000                	unimp
     a40:	0501                	addi	a0,a0,0
     a42:	0629                	addi	a2,a2,10
     a44:	00090003          	lb	zero,0(s2)
     a48:	0100                	addi	s0,sp,128
     a4a:	2105                	jal	e6a <core_bench_list+0x12a>
     a4c:	04090003          	lb	zero,64(s2)
     a50:	0100                	addi	s0,sp,128
     a52:	1105                	addi	sp,sp,-31
    for (i = 0; i < default_num_contexts; i++)
     a54:	0306                	slli	t1,t1,0x1
     a56:	0901                	addi	s2,s2,0
     a58:	0004                	0x4
     a5a:	0501                	addi	a0,a0,0
     a5c:	00030627          	0x30627
     a60:	0009                	c.nop	2
     a62:	0100                	addi	s0,sp,128
     a64:	2105                	jal	e84 <core_bench_list+0x144>
     a66:	04090003          	lb	zero,64(s2)
    if (total_errors == 0)
     a6a:	0100                	addi	s0,sp,128
    if (total_errors > 0)
     a6c:	1105                	addi	sp,sp,-31
     a6e:	0306                	slli	t1,t1,0x1
        ee_printf("Errors detected\n");
     a70:	0901                	addi	s2,s2,0
     a72:	0004                	0x4
     a74:	0501                	addi	a0,a0,0
     a76:	0621                	addi	a2,a2,8
     a78:	00090003          	lb	zero,0(s2)
     a7c:	0100                	addi	s0,sp,128
     a7e:	0905                	addi	s2,s2,1
    portable_fini(&(results[0].port));
     a80:	0306                	slli	t1,t1,0x1
     a82:	00040903          	lb	s2,0(s0) # ffff6000 <__freertos_irq_stack_top+0xfefe6000>
     a86:	0501                	addi	a0,a0,0
     a88:	060c                	addi	a1,sp,768
     a8a:	00090003          	lb	zero,0(s2)
}
     a8e:	0100                	addi	s0,sp,128
     a90:	0d05                	addi	s10,s10,1
     a92:	0306                	slli	t1,t1,0x1
     a94:	0901                	addi	s2,s2,0
     a96:	0008                	0x8
     a98:	0501                	addi	a0,a0,0
     a9a:	0615                	addi	a2,a2,5
     a9c:	00090003          	lb	zero,0(s2)
     aa0:	0100                	addi	s0,sp,128
     aa2:	0505                	addi	a0,a0,1
     aa4:	0200                	addi	s0,sp,256
     aa6:	0204                	addi	s1,sp,256
     aa8:	1c096703          	0x1c096703
     aac:	0100                	addi	s0,sp,128
     aae:	0306                	slli	t1,t1,0x1
     ab0:	091e                	slli	s2,s2,0x7
     ab2:	001c                	0x1c
     ab4:	0301                	addi	t1,t1,0
     ab6:	0902                	c.slli64	s2
     ab8:	0000                	unimp
     aba:	0501                	addi	a0,a0,0
     abc:	0608                	addi	a0,sp,768
     abe:	00090003          	lb	zero,0(s2)
     ac2:	0100                	addi	s0,sp,128
     ac4:	0505                	addi	a0,a0,1
     ac6:	0306                	slli	t1,t1,0x1
     ac8:	0902                	c.slli64	s2
     aca:	0004                	0x4
     acc:	0501                	addi	a0,a0,0
     ace:	0624                	addi	s1,sp,776
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	00090003          	lb	zero,0(s2)
     ad4:	0100                	addi	s0,sp,128
     ad6:	0505                	addi	a0,a0,1
     ad8:	0306                	slli	t1,t1,0x1
     ada:	01ad                	addi	gp,gp,11
     adc:	0409                	addi	s0,s0,2
     ade:	0100                	addi	s0,sp,128
     ae0:	00090103          	lb	sp,0(s2)
     ae4:	0100                	addi	s0,sp,128
     ae6:	0805                	addi	a6,a6,1
     ae8:	0306                	slli	t1,t1,0x1
     aea:	0939                	addi	s2,s2,14
            j++;
     aec:	0000                	unimp
     aee:	0501                	addi	a0,a0,0
        if ((1 << (ee_u32)i) & results[0].execs)
     af0:	0310                	addi	a2,sp,384
     af2:	00040947          	fmsub.s	fs2,fs0,ft0,ft0,rne
     af6:	0501                	addi	a0,a0,0
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	0605                	addi	a2,a2,1
     afa:	04090203          	lb	tp,64(s2)
     afe:	0100                	addi	s0,sp,128
     b00:	1005                	c.nop	-31
     b02:	0306                	slli	t1,t1,0x1
     b04:	0900                	addi	s0,sp,144
     b06:	0000                	unimp
     b08:	0501                	addi	a0,a0,0
     b0a:	0605                	addi	a2,a2,1
     b0c:	04090103          	lb	sp,64(s2)
     b10:	0100                	addi	s0,sp,128
     b12:	1505                	addi	a0,a0,-31
        if (results[i].execs & ID_LIST)
     b14:	0306                	slli	t1,t1,0x1
     b16:	0900                	addi	s0,sp,144
     b18:	0000                	unimp
     b1a:	0501                	addi	a0,a0,0
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1c:	031c                	addi	a5,sp,384
     b1e:	00040903          	lb	s2,0(s0)
     b22:	0501                	addi	a0,a0,0
     b24:	0310                	addi	a2,sp,384
     b26:	097d                	addi	s2,s2,31
     b28:	0004                	0x4
     b2a:	0501                	addi	a0,a0,0
     b2c:	0605                	addi	a2,a2,1
     b2e:	04090103          	lb	sp,64(s2)
     b32:	0100                	addi	s0,sp,128
     b34:	1005                	c.nop	-31
     b36:	0306                	slli	t1,t1,0x1
     b38:	0900                	addi	s0,sp,144
     b3a:	0000                	unimp
     b3c:	0501                	addi	a0,a0,0
     b3e:	0605                	addi	a2,a2,1
     b40:	04090203          	lb	tp,64(s2)
     b44:	0100                	addi	s0,sp,128
     b46:	1005                	c.nop	-31
            j++;
     b48:	0306                	slli	t1,t1,0x1
     b4a:	0900                	addi	s0,sp,144
     b4c:	0000                	unimp
     b4e:	0501                	addi	a0,a0,0
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	0605                	addi	a2,a2,1
     b52:	04090103          	lb	sp,64(s2)
     b56:	0100                	addi	s0,sp,128
            j++;
     b58:	0805                	addi	a6,a6,1
     b5a:	0306                	slli	t1,t1,0x1
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	0932                	slli	s2,s2,0xc
     b5e:	0000                	unimp
     b60:	0501                	addi	a0,a0,0
     b62:	0310                	addi	a2,sp,384
        ee_printf(
     b64:	094e                	slli	s2,s2,0x13
     b66:	0004                	0x4
     b68:	0501                	addi	a0,a0,0
     b6a:	0605                	addi	a2,a2,1
     b6c:	04090103          	lb	sp,64(s2)
     b70:	0100                	addi	s0,sp,128
     b72:	097ecd03          	lbu	s10,151(t4)
     b76:	0000                	unimp
            res->crclist = res->crc;
     b78:	0301                	addi	t1,t1,0
     b7a:	01e4                	addi	s1,sp,204
    for (i = 0; i < iterations; i++)
     b7c:	0009                	c.nop	2
     b7e:	0100                	addi	s0,sp,128
     b80:	0805                	addi	a6,a6,1
     b82:	0306                	slli	t1,t1,0x1
     b84:	0900                	addi	s0,sp,144
     b86:	0000                	unimp
     b88:	0501                	addi	a0,a0,0
     b8a:	09020323          	sb	a6,134(tp) # ffff8086 <__freertos_irq_stack_top+0xfefe8086>
        && (results[0].seed3 == 0))
     b8e:	0004                	0x4
     b90:	0501                	addi	a0,a0,0
     b92:	0315                	addi	t1,t1,5
     b94:	0900                	addi	s0,sp,144
     b96:	0004                	0x4
        results[0].seed1 = 0x3415;
     b98:	0501                	addi	a0,a0,0
     b9a:	060d                	addi	a2,a2,3
     b9c:	0c090103          	lb	sp,192(s2)
     ba0:	0100                	addi	s0,sp,128
     ba2:	1205                	addi	tp,tp,-31
     ba4:	0306                	slli	t1,t1,0x1
     ba6:	0900                	addi	s0,sp,144
        results[0].seed3 = 0x66;
     ba8:	0000                	unimp
     baa:	0501                	addi	a0,a0,0
     bac:	097f030f          	0x97f030f
     bb0:	0004                	0x4
     bb2:	0501                	addi	a0,a0,0
        printf("start test22\n");
     bb4:	0605                	addi	a2,a2,1
     bb6:	097e9b03          	lh	s6,151(t4)
        results[0].execs = ALL_ALGORITHMS_MASK;
     bba:	0004                	0x4
        printf("start test22\n");
     bbc:	0501                	addi	a0,a0,0
     bbe:	0309                	addi	t1,t1,2
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	0901                	addi	s2,s2,0
     bc2:	0000                	unimp
        printf("start test22\n");
     bc4:	0501                	addi	a0,a0,0
     bc6:	0610                	addi	a2,sp,768
     bc8:	00090003          	lb	zero,0(s2)
     bcc:	0100                	addi	s0,sp,128
     bce:	0b05                	addi	s6,s6,1
        ee_printf(
     bd0:	04090103          	lb	sp,64(s2)
     bd4:	0100                	addi	s0,sp,128
     bd6:	0905                	addi	s2,s2,1
     bd8:	0306                	slli	t1,t1,0x1
     bda:	0902                	c.slli64	s2
     bdc:	0004                	0x4
     bde:	0501                	addi	a0,a0,0
        if (known_id == 3)
     be0:	0612                	slli	a2,a2,0x4
     be2:	00090003          	lb	zero,0(s2)
     be6:	0100                	addi	s0,sp,128
     be8:	1005                	c.nop	-31
     bea:	14090103          	lb	sp,320(s2)
                      default_num_contexts * results[0].iterations
     bee:	0100                	addi	s0,sp,128
     bf0:	1205                	addi	tp,tp,-31
     bf2:	04097f03          	0x4097f03
     bf6:	0100                	addi	s0,sp,128
     bf8:	0905                	addi	s2,s2,1
     bfa:	0306                	slli	t1,t1,0x1
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	0901                	addi	s2,s2,0
     bfe:	0004                	0x4
     c00:	0501                	addi	a0,a0,0
     c02:	7d03060b          	0x7d03060b
     c06:	0009                	c.nop	2
                          / time_in_secs(total_time),
     c08:	0100                	addi	s0,sp,128
     c0a:	0505                	addi	a0,a0,1
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	0306                	slli	t1,t1,0x1
     c0e:	0908                	addi	a0,sp,144
                          / time_in_secs(total_time),
     c10:	000c                	0xc
     c12:	0301                	addi	t1,t1,0
     c14:	01be                	slli	gp,gp,0xf
     c16:	0009                	c.nop	2
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	0100                	addi	s0,sp,128
     c1a:	00090203          	lb	tp,0(s2)
     c1e:	0100                	addi	s0,sp,128
     c20:	00090103          	lb	sp,0(s2)
     c24:	0100                	addi	s0,sp,128
     c26:	2805                	jal	c56 <main+0xbda>
     c28:	0306                	slli	t1,t1,0x1
     c2a:	0900                	addi	s0,sp,144
     c2c:	0000                	unimp
     c2e:	0301                	addi	t1,t1,0
     c30:	00040903          	lb	s2,0(s0)
     c34:	0501                	addi	a0,a0,0
     c36:	030c                	addi	a1,sp,384
     c38:	00d9                	addi	ra,ra,22
     c3a:	0409                	addi	s0,s0,2
     c3c:	0100                	addi	s0,sp,128
     c3e:	1905                	addi	s2,s2,-31
     c40:	097fa403          	lw	s0,151(t6)
     c44:	0004                	0x4
     c46:	0501                	addi	a0,a0,0
     c48:	0605                	addi	a2,a2,1
     c4a:	04090103          	lb	sp,64(s2)
     c4e:	0100                	addi	s0,sp,128
            ee_printf(" / %s", MEM_LOCATION);
     c50:	1905                	addi	s2,s2,-31
     c52:	0306                	slli	t1,t1,0x1
     c54:	0900                	addi	s0,sp,144
     c56:	0000                	unimp
     c58:	0501                	addi	a0,a0,0
     c5a:	0605                	addi	a2,a2,1
     c5c:	04090203          	lb	tp,64(s2)
     c60:	0100                	addi	s0,sp,128
     c62:	1905                	addi	s2,s2,-31
            ee_printf("\n");
     c64:	0306                	slli	t1,t1,0x1
     c66:	0900                	addi	s0,sp,144
     c68:	0000                	unimp
     c6a:	0501                	addi	a0,a0,0
     c6c:	0605                	addi	a2,a2,1
     c6e:	04090103          	lb	sp,64(s2)
     c72:	0100                	addi	s0,sp,128
        ee_printf(
     c74:	1905                	addi	s2,s2,-31
     c76:	0306                	slli	t1,t1,0x1
     c78:	0900                	addi	s0,sp,144
     c7a:	0000                	unimp
     c7c:	0501                	addi	a0,a0,0
     c7e:	0605                	addi	a2,a2,1
     c80:	04090103          	lb	sp,64(s2)
        total_errors++;
     c84:	0100                	addi	s0,sp,128
     c86:	097ebc03          	0x97ebc03
     c8a:	0000                	unimp
    if (results[0].execs & ID_STATE)
     c8c:	0301                	addi	t1,t1,0
     c8e:	0298                	addi	a4,sp,320
     c90:	0009                	c.nop	2
     c92:	0100                	addi	s0,sp,128
     c94:	00090103          	lb	sp,0(s2)
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	0100                	addi	s0,sp,128
     c9a:	00090203          	lb	tp,0(s2)
     c9e:	0100                	addi	s0,sp,128
     ca0:	00090203          	lb	tp,0(s2)
     ca4:	0100                	addi	s0,sp,128
     ca6:	0905                	addi	s2,s2,1
     ca8:	00090203          	lb	tp,0(s2)
     cac:	0100                	addi	s0,sp,128
     cae:	00090103          	lb	sp,0(s2)
            known_id = 4;
     cb2:	0100                	addi	s0,sp,128
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	00090103          	lb	sp,0(s2)
     cb8:	0100                	addi	s0,sp,128
     cba:	00090203          	lb	tp,0(s2)
     cbe:	0100                	addi	s0,sp,128
     cc0:	00090203          	lb	tp,0(s2)
            known_id = 4;
     cc4:	0100                	addi	s0,sp,128
     cc6:	0e05                	addi	t3,t3,1
     cc8:	0306                	slli	t1,t1,0x1
     cca:	097c                	addi	a5,sp,156
            ee_printf("6k validation run parameters for coremark.\n");
     ccc:	0000                	unimp
     cce:	0301                	addi	t1,t1,0
     cd0:	097f                	0x97f
     cd2:	0004                	0x4
     cd4:	0501                	addi	a0,a0,0
     cd6:	0311                	addi	t1,t1,4
     cd8:	00040903          	lb	s2,0(s0)
     cdc:	0501                	addi	a0,a0,0
     cde:	030c                	addi	a1,sp,384
     ce0:	00c9                	addi	ra,ra,18
     ce2:	0409                	addi	s0,s0,2
     ce4:	0100                	addi	s0,sp,128
     ce6:	0d05                	addi	s10,s10,1
     ce8:	0306                	slli	t1,t1,0x1
     cea:	04097fbb          	0x4097fbb
            known_id = 1;
     cee:	0100                	addi	s0,sp,128
            ee_printf("6k validation run parameters for coremark.\n");
     cf0:	1405                	addi	s0,s0,-31
     cf2:	0306                	slli	t1,t1,0x1
     cf4:	0900                	addi	s0,sp,144
     cf6:	0000                	unimp
     cf8:	0501                	addi	a0,a0,0
     cfa:	060d                	addi	a2,a2,3
            known_id = 1;
     cfc:	04090203          	lb	tp,64(s2)
     d00:	0100                	addi	s0,sp,128
     d02:	00090103          	lb	sp,0(s2)
            ee_printf("6k performance run parameters for coremark.\n");
     d06:	0100                	addi	s0,sp,128
     d08:	00090103          	lb	sp,0(s2)
     d0c:	0100                	addi	s0,sp,128
     d0e:	1405                	addi	s0,s0,-31
     d10:	0306                	slli	t1,t1,0x1
     d12:	097c                	addi	a5,sp,156
     d14:	0000                	unimp
     d16:	0501                	addi	a0,a0,0
     d18:	09030313          	addi	t1,t1,144
     d1c:	0004                	0x4
     d1e:	0501                	addi	a0,a0,0
     d20:	0611                	addi	a2,a2,4
     d22:	04090303          	lb	t1,64(s2)
     d26:	0100                	addi	s0,sp,128
     d28:	1305                	addi	t1,t1,-31
     d2a:	0306                	slli	t1,t1,0x1
     d2c:	0901                	addi	s2,s2,0
     d2e:	0000                	unimp
            known_id = 0;
     d30:	0501                	addi	a0,a0,0
     d32:	0316                	slli	t1,t1,0x5
     d34:	097f                	0x97f
     d36:	0004                	0x4
        for (i = 0; i < default_num_contexts; i++)
     d38:	0501                	addi	a0,a0,0
     d3a:	0611                	addi	a2,a2,4
     d3c:	04090103          	lb	sp,64(s2)
    ee_s16     find_num = res->seed3;
     d40:	0100                	addi	s0,sp,128
     d42:	00090103          	lb	sp,0(s2)
{
     d46:	0100                	addi	s0,sp,128
     d48:	1405                	addi	s0,s0,-31
     d4a:	0306                	slli	t1,t1,0x1
     d4c:	0900                	addi	s0,sp,144
     d4e:	0000                	unimp
     d50:	0501                	addi	a0,a0,0
     d52:	030d                	addi	t1,t1,3
     d54:	097c                	addi	a5,sp,156
     d56:	0004                	0x4
     d58:	0501                	addi	a0,a0,0
     d5a:	031a                	slli	t1,t1,0x6
     d5c:	0935                	addi	s2,s2,13
     d5e:	0008                	0x8
     d60:	0501                	addi	a0,a0,0
     d62:	09570313          	addi	t1,a4,149 # fffeb095 <__freertos_irq_stack_top+0xfefdb095>
     d66:	000c                	0xc
     d68:	0501                	addi	a0,a0,0
     d6a:	0611                	addi	a2,a2,4
     d6c:	04090403          	lb	s0,64(s2)
     d70:	0100                	addi	s0,sp,128
     d72:	1605                	addi	a2,a2,-31
     d74:	00090703          	lb	a4,0(s2)
     d78:	0100                	addi	s0,sp,128
     d7a:	1905                	addi	s2,s2,-31
     d7c:	0306                	slli	t1,t1,0x1
     d7e:	0900                	addi	s0,sp,144
     d80:	0000                	unimp
     d82:	0501                	addi	a0,a0,0
    list_head *list     = res->list;
     d84:	0325                	addi	t1,t1,9
     d86:	0900                	addi	s0,sp,144
    for (i = 0; i < find_num; i++)
     d88:	0004                	0x4
     d8a:	0501                	addi	a0,a0,0
    info.idx = finder_idx;
     d8c:	0616                	slli	a2,a2,0x5
     d8e:	04090703          	lb	a4,64(s2)
    for (i = 0; i < find_num; i++)
     d92:	0100                	addi	s0,sp,128
    ee_u16     found = 0, missed = 0;
     d94:	1f05                	addi	t5,t5,-31
     d96:	0306                	slli	t1,t1,0x1
     d98:	0900                	addi	s0,sp,144
     d9a:	0000                	unimp
    ee_u16     retval = 0;
     d9c:	0501                	addi	a0,a0,0
     d9e:	0328                	addi	a0,sp,392
    if (info->idx >= 0)
     da0:	0900                	addi	s0,sp,144
     da2:	0004                	0x4
        info.data16 = (i & 0xff);
     da4:	0501                	addi	a0,a0,0
     da6:	0605                	addi	a2,a2,1
     da8:	097ce003          	0x97ce003
    if (info->idx >= 0)
     dac:	0004                	0x4
     dae:	0501                	addi	a0,a0,0
        while (list && (list->info->idx != info->idx))
     db0:	0309                	addi	t1,t1,2
     db2:	0902                	c.slli64	s2
     db4:	0000                	unimp
     db6:	0501                	addi	a0,a0,0
     db8:	00030617          	auipc	a2,0x30
     dbc:	0009                	c.nop	2
     dbe:	0100                	addi	s0,sp,128
     dc0:	1605                	addi	a2,a2,-31
     dc2:	04090303          	lb	t1,64(s2)
     dc6:	0100                	addi	s0,sp,128
     dc8:	0d05                	addi	s10,s10,1
     dca:	04090003          	lb	zero,64(s2)
     dce:	0100                	addi	s0,sp,128
     dd0:	2a05                	jal	f00 <core_bench_list+0x1c0>
     dd2:	04097d03          	0x4097d03
     dd6:	0100                	addi	s0,sp,128
     dd8:	2005                	jal	df8 <core_bench_list+0xb8>
     dda:	08090003          	lb	zero,128(s2)
            list = list->next;
     dde:	0100                	addi	s0,sp,128
        while (list && (list->info->idx != info->idx))
     de0:	2a05                	jal	f10 <core_bench_list+0x1d0>
     de2:	04090003          	lb	zero,64(s2)
     de6:	0100                	addi	s0,sp,128
     de8:	1305                	addi	t1,t1,-31
     dea:	08090003          	lb	zero,128(s2)
    while (list)
     dee:	0100                	addi	s0,sp,128
     df0:	0905                	addi	s2,s2,1
     df2:	0306                	slli	t1,t1,0x1
        tmp        = list->next;
     df4:	0901                	addi	s2,s2,0
     df6:	0004                	0x4
        list->next = next;
     df8:	0501                	addi	a0,a0,0
     dfa:	00030617          	auipc	a2,0x30
    while (list)
     dfe:	0009                	c.nop	2
        if (this_find == NULL)
     e00:	0100                	addi	s0,sp,128
     e02:	1305                	addi	t1,t1,-31
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	04090203          	lb	tp,64(s2)
            found++;
     e08:	0100                	addi	s0,sp,128
     e0a:	2a05                	jal	f3a <core_bench_list+0x1fa>
     e0c:	04097e03          	0x4097e03
            if (this_find->info->data16 & 0x1) /* use found value */
     e10:	0100                	addi	s0,sp,128
     e12:	2005                	jal	e32 <core_bench_list+0xf2>
            found++;
     e14:	08090003          	lb	zero,128(s2)
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	0100                	addi	s0,sp,128
     e1a:	2a05                	jal	f4a <core_bench_list+0x20a>
     e1c:	04090003          	lb	zero,64(s2)
                retval += (this_find->info->data16 >> 9) & 1;
     e20:	0100                	addi	s0,sp,128
     e22:	1305                	addi	t1,t1,-31
     e24:	08090003          	lb	zero,128(s2)
     e28:	0100                	addi	s0,sp,128
     e2a:	0505                	addi	a0,a0,1
     e2c:	0306                	slli	t1,t1,0x1
     e2e:	0902                	c.slli64	s2
     e30:	0004                	0x4
     e32:	0501                	addi	a0,a0,0
            if (this_find->next != NULL)
     e34:	0619                	addi	a2,a2,6
     e36:	09039b03          	lh	s6,144(t2)
     e3a:	0000                	unimp
                this_find->next = finder->next;
     e3c:	0501                	addi	a0,a0,0
     e3e:	0615                	addi	a2,a2,5
     e40:	04090b03          	lb	s6,64(s2)
                finder->next    = list->next;
     e44:	0100                	addi	s0,sp,128
     e46:	00090103          	lb	sp,0(s2)
     e4a:	0100                	addi	s0,sp,128
                list->next      = finder;
     e4c:	00090103          	lb	sp,0(s2)
        if (info.idx >= 0)
     e50:	0100                	addi	s0,sp,128
     e52:	1a05                	addi	s4,s4,-31
     e54:	0306                	slli	t1,t1,0x1
     e56:	0900                	addi	s0,sp,144
            info.idx++;
     e58:	0000                	unimp
     e5a:	0501                	addi	a0,a0,0
     e5c:	097f0317          	auipc	t1,0x97f0
     e60:	0004                	0x4
     e62:	0501                	addi	a0,a0,0
     e64:	031a                	slli	t1,t1,0x6
     e66:	0901                	addi	s2,s2,0
     e68:	0004                	0x4
     e6a:	0501                	addi	a0,a0,0
     e6c:	0611                	addi	a2,a2,4
     e6e:	04090403          	lb	s0,64(s2)
     e72:	0100                	addi	s0,sp,128
    for (i = 0; i < find_num; i++)
     e74:	1405                	addi	s0,s0,-31
     e76:	0306                	slli	t1,t1,0x1
     e78:	0900                	addi	s0,sp,144
     e7a:	0000                	unimp
     e7c:	0501                	addi	a0,a0,0
     e7e:	0615                	addi	a2,a2,5
     e80:	04090203          	lb	tp,64(s2)
     e84:	0100                	addi	s0,sp,128
     e86:	2005                	jal	ea6 <core_bench_list+0x166>
     e88:	0306                	slli	t1,t1,0x1
     e8a:	0900                	addi	s0,sp,144
     e8c:	0000                	unimp
     e8e:	0501                	addi	a0,a0,0
    if (finder_idx > 0)
     e90:	031a                	slli	t1,t1,0x6
     e92:	0904                	addi	s1,sp,144
    remover = core_list_remove(list->next);
     e94:	0004                	0x4
     e96:	0501                	addi	a0,a0,0
    if (info->idx >= 0)
     e98:	09570313          	addi	t1,a4,149
    list_head *ret = item->next;
     e9c:	0004                	0x4
     e9e:	0501                	addi	a0,a0,0
    tmp        = item->info;
     ea0:	031e                	slli	t1,t1,0x7
     ea2:	0900                	addi	s0,sp,144
    item->info = ret->info;
     ea4:	0004                	0x4
     ea6:	0501                	addi	a0,a0,0
    item->next = item->next->next;
     ea8:	032c                	addi	a1,sp,392
     eaa:	0900                	addi	s0,sp,144
    item->info = ret->info;
     eac:	0004                	0x4
     eae:	0501                	addi	a0,a0,0
    ret->info  = tmp;
     eb0:	0611                	addi	a2,a2,4
     eb2:	04090403          	lb	s0,64(s2)
    item->next = item->next->next;
     eb6:	0100                	addi	s0,sp,128
    if (info->idx >= 0)
     eb8:	1505                	addi	a0,a0,-31
     eba:	00090303          	lb	t1,0(s2)
    ret->next  = NULL;
     ebe:	0100                	addi	s0,sp,128
    if (info->idx >= 0)
     ec0:	00090103          	lb	sp,0(s2)
        while (list && (list->info->idx != info->idx))
     ec4:	0100                	addi	s0,sp,128
     ec6:	00090103          	lb	sp,0(s2)
     eca:	0100                	addi	s0,sp,128
     ecc:	1a05                	addi	s4,s4,-31
     ece:	0306                	slli	t1,t1,0x1
     ed0:	0900                	addi	s0,sp,144
     ed2:	0000                	unimp
            list = list->next;
     ed4:	0501                	addi	a0,a0,0
     ed6:	097f0317          	auipc	t1,0x97f0
        while (list && (list->info->idx != info->idx))
     eda:	0008                	0x8
        finder = list->next;
     edc:	0501                	addi	a0,a0,0
     ede:	0611                	addi	a2,a2,4
    while (finder)
     ee0:	04091b03          	lh	s6,64(s2)
        retval = crc16(list->info->data16, retval);
     ee4:	0100                	addi	s0,sp,128
     ee6:	1405                	addi	s0,s0,-31
     ee8:	0306                	slli	t1,t1,0x1
     eea:	0900                	addi	s0,sp,144
     eec:	0000                	unimp
     eee:	0501                	addi	a0,a0,0
     ef0:	031a                	slli	t1,t1,0x6
     ef2:	0906                	slli	s2,s2,0x1
     ef4:	0004                	0x4
     ef6:	0501                	addi	a0,a0,0
        finder = finder->next;
     ef8:	0324                	addi	s1,sp,392
     efa:	7eff                	0x7eff
        retval = crc16(list->info->data16, retval);
     efc:	0c09                	addi	s8,s8,2
     efe:	0100                	addi	s0,sp,128
    while (finder)
     f00:	1505                	addi	a0,a0,-31
     f02:	04090003          	lb	zero,64(s2)
     f06:	0100                	addi	s0,sp,128
     f08:	2d05                	jal	1538 <core_list_init+0x168>
     f0a:	04090003          	lb	zero,64(s2)
    item_removed->info  = item_modified->info;
     f0e:	0100                	addi	s0,sp,128
    item_removed->next  = item_modified->next;
     f10:	1505                	addi	a0,a0,-31
     f12:	04090003          	lb	zero,64(s2)
    insize = 1;
     f16:	0100                	addi	s0,sp,128
    item_removed->info  = item_modified->info;
     f18:	0d05                	addi	s10,s10,1
     f1a:	0306                	slli	t1,t1,0x1
    item_modified->info = tmp;
     f1c:	0901                	addi	s2,s2,0
     f1e:	0004                	0x4
    item_removed->next  = item_modified->next;
     f20:	0501                	addi	a0,a0,0
     f22:	0612                	slli	a2,a2,0x4
    item_modified->next = item_removed;
     f24:	00090003          	lb	zero,0(s2)
        tail = NULL;
     f28:	0100                	addi	s0,sp,128
     f2a:	0f05                	addi	t5,t5,1
        list = NULL;
     f2c:	04097f03          	0x4097f03
        nmerges = 0; /* count number of merges we do in this pass */
     f30:	0100                	addi	s0,sp,128
     f32:	0505                	addi	a0,a0,1
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	0306                	slli	t1,t1,0x1
     f36:	7e95                	lui	t4,0xfffe5
            nmerges++; /* there exists a merge to be done */
     f38:	0409                	addi	s0,s0,2
     f3a:	0100                	addi	s0,sp,128
     f3c:	0905                	addi	s2,s2,1
     f3e:	00090103          	lb	sp,0(s2)
            psize = 0;
     f42:	0100                	addi	s0,sp,128
                q = q->next;
     f44:	1005                	c.nop	-31
     f46:	0306                	slli	t1,t1,0x1
                psize++;
     f48:	0900                	addi	s0,sp,144
     f4a:	0000                	unimp
                if (!q)
     f4c:	0501                	addi	a0,a0,0
     f4e:	0901030b          	0x901030b
            for (i = 0; i < insize; i++)
     f52:	0004                	0x4
     f54:	0501                	addi	a0,a0,0
     f56:	0615                	addi	a2,a2,5
                    list = e;
     f58:	0902d703          	lhu	a4,144(t0)
     f5c:	0008                	0x8
     f5e:	0301                	addi	t1,t1,0
     f60:	0901                	addi	s2,s2,0
     f62:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
     f64:	0301                	addi	t1,t1,0
     f66:	0901                	addi	s2,s2,0
                else if (qsize == 0 || !q)
     f68:	0000                	unimp
     f6a:	0501                	addi	a0,a0,0
     f6c:	061a                	slli	a2,a2,0x6
     f6e:	00090003          	lb	zero,0(s2)
                else if (cmp(p->info, q->info, res) <= 0)
     f72:	0100                	addi	s0,sp,128
     f74:	1705                	addi	a4,a4,-31
     f76:	08097f03          	0x8097f03
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f7a:	0100                	addi	s0,sp,128
    return a->idx - b->idx;
     f7c:	0f05                	addi	t5,t5,1
     f7e:	08095703          	lhu	a4,128(s2)
     f82:	0100                	addi	s0,sp,128
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	0905                	addi	s2,s2,1
     f86:	0306                	slli	t1,t1,0x1
     f88:	00c4                	addi	s1,sp,68
     f8a:	0409                	addi	s0,s0,2
     f8c:	0100                	addi	s0,sp,128
     f8e:	1405                	addi	s0,s0,-31
     f90:	0306                	slli	t1,t1,0x1
     f92:	0900                	addi	s0,sp,144
     f94:	0000                	unimp
     f96:	0501                	addi	a0,a0,0
     f98:	0609                	addi	a2,a2,2
     f9a:	04090303          	lb	t1,64(s2)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     f9e:	0100                	addi	s0,sp,128
    return a->idx - b->idx;
     fa0:	0c05                	addi	s8,s8,1
     fa2:	0306                	slli	t1,t1,0x1
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	0900                	addi	s0,sp,144
     fa6:	0000                	unimp
     fa8:	0501                	addi	a0,a0,0
     faa:	0609                	addi	a2,a2,2
     fac:	04090403          	lb	s0,64(s2)
     fb0:	0100                	addi	s0,sp,128
     fb2:	1005                	c.nop	-31
     fb4:	0306                	slli	t1,t1,0x1
     fb6:	0900                	addi	s0,sp,144
     fb8:	0000                	unimp
     fba:	0501                	addi	a0,a0,0
                else if (cmp(p->info, q->info, res) <= 0)
     fbc:	0605                	addi	a2,a2,1
     fbe:	097fad03          	lw	s10,151(t6)
                    qsize--;
     fc2:	0004                	0x4
                    q = q->next;
     fc4:	0501                	addi	a0,a0,0
     fc6:	0309                	addi	t1,t1,2
                    qsize--;
     fc8:	0902                	c.slli64	s2
     fca:	0000                	unimp
                if (tail)
     fcc:	0301                	addi	t1,t1,0
     fce:	0901                	addi	s2,s2,0
                    tail->next = e;
     fd0:	0000                	unimp
     fd2:	0301                	addi	t1,t1,0
                    list = e;
     fd4:	0901                	addi	s2,s2,0
     fd6:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
     fd8:	0301                	addi	t1,t1,0
     fda:	0902                	c.slli64	s2
     fdc:	0000                	unimp
     fde:	0301                	addi	t1,t1,0
     fe0:	0902                	c.slli64	s2
     fe2:	0000                	unimp
                    qsize--;
     fe4:	0501                	addi	a0,a0,0
     fe6:	0003060f          	0x3060f
     fea:	0009                	c.nop	2
                    q = q->next;
     fec:	0100                	addi	s0,sp,128
     fee:	1105                	addi	sp,sp,-31
                if (tail)
     ff0:	08097e03          	0x8097e03
                    list = e;
     ff4:	0100                	addi	s0,sp,128
     ff6:	0e05                	addi	t3,t3,1
     ff8:	04097e03          	0x4097e03
     ffc:	0100                	addi	s0,sp,128
     ffe:	04097f03          	0x4097f03
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1002:	0100                	addi	s0,sp,128
    1004:	0f05                	addi	t5,t5,1
    1006:	097fbf03          	0x97fbf03
    100a:	0008                	0x8
    100c:	0501                	addi	a0,a0,0
    100e:	0324                	addi	s1,sp,392
            list = list->next;
    1010:	0900                	addi	s0,sp,144
    1012:	0004                	0x4
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1014:	0501                	addi	a0,a0,0
    1016:	0315                	addi	t1,t1,5
        finder = list->next;
    1018:	0900                	addi	s0,sp,144
    101a:	0004                	0x4
    while (finder)
    101c:	0501                	addi	a0,a0,0
    101e:	032d                	addi	t1,t1,11
    1020:	0900                	addi	s0,sp,144
    1022:	0004                	0x4
                    psize--;
    1024:	0501                	addi	a0,a0,0
    1026:	0315                	addi	t1,t1,5
    1028:	0900                	addi	s0,sp,144
    102a:	0004                	0x4
                    p = p->next;
    102c:	0501                	addi	a0,a0,0
    102e:	0324                	addi	s1,sp,392
    1030:	0900                	addi	s0,sp,144
    1032:	0008                	0x8
        while (p)
    1034:	0501                	addi	a0,a0,0
    1036:	0315                	addi	t1,t1,5
        tail->next = NULL;
    1038:	0900                	addi	s0,sp,144
    103a:	0004                	0x4
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	0501                	addi	a0,a0,0
    103e:	032d                	addi	t1,t1,11
        insize *= 2;
    1040:	0900                	addi	s0,sp,144
    1042:	0004                	0x4
        while (p)
    1044:	0501                	addi	a0,a0,0
    1046:	0315                	addi	t1,t1,5
    1048:	0900                	addi	s0,sp,144
    104a:	0004                	0x4
        nmerges = 0; /* count number of merges we do in this pass */
    104c:	0501                	addi	a0,a0,0
    104e:	060d                	addi	a2,a2,3
        tail = NULL;
    1050:	04090103          	lb	sp,64(s2)
        list = NULL;
    1054:	0100                	addi	s0,sp,128
    1056:	1205                	addi	tp,tp,-31
    1058:	0306                	slli	t1,t1,0x1
    105a:	0900                	addi	s0,sp,144
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	0000                	unimp
    105e:	0501                	addi	a0,a0,0
    1060:	097f030f          	0x97f030f
    1064:	0004                	0x4
    1066:	0501                	addi	a0,a0,0
    1068:	060d                	addi	a2,a2,3
    106a:	097df603          	0x97df603
    106e:	0008                	0x8
    1070:	0501                	addi	a0,a0,0
    1072:	0628                	addi	a0,sp,776
    1074:	00090103          	lb	sp,0(s2)
    1078:	0100                	addi	s0,sp,128
    107a:	1305                	addi	t1,t1,-31
    107c:	04097f03          	0x4097f03
    1080:	0100                	addi	s0,sp,128
    1082:	3705                	jal	fa2 <core_bench_list+0x262>
            list = list->next;
    1084:	08090103          	lb	sp,128(s2)
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1088:	0100                	addi	s0,sp,128
    108a:	1305                	addi	t1,t1,-31
    108c:	04097f03          	0x4097f03
            retval += (list->next->info->data16 >> 8) & 1;
    1090:	0100                	addi	s0,sp,128
    1092:	0d05                	addi	s10,s10,1
            missed++;
    1094:	0306                	slli	t1,t1,0x1
    1096:	0901                	addi	s2,s2,0
    1098:	0004                	0x4
    109a:	0501                	addi	a0,a0,0
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	00030637          	lui	a2,0x30
            missed++;
    10a0:	0009                	c.nop	2
    10a2:	0100                	addi	s0,sp,128
            retval += (list->next->info->data16 >> 8) & 1;
    10a4:	1405                	addi	s0,s0,-31
    10a6:	04090003          	lb	zero,64(s2)
    10aa:	0100                	addi	s0,sp,128
    10ac:	0d05                	addi	s10,s10,1
    10ae:	0306                	slli	t1,t1,0x1
    10b0:	10090397          	auipc	t2,0x10090
    10b4:	0100                	addi	s0,sp,128
    10b6:	0505                	addi	a0,a0,1
    finder = list->next;
    10b8:	097d9503          	lh	a0,151(s11)
    while (finder)
    10bc:	0000                	unimp
    10be:	0501                	addi	a0,a0,0
        retval = crc16(list->info->data16, retval);
    10c0:	060c                	addi	a1,sp,768
    10c2:	00090003          	lb	zero,0(s2)
    10c6:	0100                	addi	s0,sp,128
    10c8:	0505                	addi	a0,a0,1
    10ca:	0306                	slli	t1,t1,0x1
    10cc:	0901                	addi	s2,s2,0
    10ce:	0004                	0x4
    10d0:	0501                	addi	a0,a0,0
    10d2:	0003060b          	0x3060b
        finder = finder->next;
    10d6:	0009                	c.nop	2
        retval = crc16(list->info->data16, retval);
    10d8:	0100                	addi	s0,sp,128
    10da:	0905                	addi	s2,s2,1
    while (finder)
    10dc:	0306                	slli	t1,t1,0x1
    10de:	0902                	c.slli64	s2
}
    10e0:	0004                	0x4
    10e2:	0501                	addi	a0,a0,0
    10e4:	0612                	slli	a2,a2,0x4
    10e6:	00090003          	lb	zero,0(s2)
    10ea:	0100                	addi	s0,sp,128
    10ec:	1005                	c.nop	-31
    10ee:	14090103          	lb	sp,320(s2)
    10f2:	0100                	addi	s0,sp,128
    10f4:	1205                	addi	tp,tp,-31
    10f6:	04097f03          	0x4097f03
    10fa:	0100                	addi	s0,sp,128
    10fc:	0905                	addi	s2,s2,1
    10fe:	0306                	slli	t1,t1,0x1
    1100:	0901                	addi	s2,s2,0
    1102:	0004                	0x4
    1104:	0501                	addi	a0,a0,0
    1106:	7d03060b          	0x7d03060b
    110a:	0009                	c.nop	2
    110c:	0100                	addi	s0,sp,128
    110e:	0105                	addi	sp,sp,1
    1110:	04090903          	lb	s2,64(s2)
    1114:	0100                	addi	s0,sp,128
    1116:	0505                	addi	a0,a0,1
    1118:	0306                	slli	t1,t1,0x1
    111a:	0960                	addi	s0,sp,156
    info.idx = finder_idx;
    111c:	003c                	addi	a5,sp,8
    111e:	0301                	addi	t1,t1,0
    1120:	0902                	c.slli64	s2
    1122:	0000                	unimp
    if (finder_idx > 0)
    1124:	0501                	addi	a0,a0,0
    1126:	060e                	slli	a2,a2,0x3
        while (p)
    1128:	00095d03          	lhu	s10,0(s2)
    112c:	0100                	addi	s0,sp,128
    112e:	0805                	addi	a6,a6,1
    1130:	08092303          	lw	t1,128(s2)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	0100                	addi	s0,sp,128
    1136:	0505                	addi	a0,a0,1
    1138:	0306                	slli	t1,t1,0x1
    113a:	040902af          	0x40902af
        while (p)
    113e:	0100                	addi	s0,sp,128
        tail = NULL;
    1140:	0905                	addi	s2,s2,1
    1142:	00090203          	lb	tp,0(s2)
        list = NULL;
    1146:	0100                	addi	s0,sp,128
        nmerges = 0; /* count number of merges we do in this pass */
    1148:	00090103          	lb	sp,0(s2)
    114c:	0100                	addi	s0,sp,128
    114e:	00090103          	lb	sp,0(s2)
            nmerges++; /* there exists a merge to be done */
    1152:	0100                	addi	s0,sp,128
    1154:	00090203          	lb	tp,0(s2)
            psize = 0;
    1158:	0100                	addi	s0,sp,128
    115a:	00090203          	lb	tp,0(s2)
            nmerges++; /* there exists a merge to be done */
    115e:	0100                	addi	s0,sp,128
    1160:	0f05                	addi	t5,t5,1
    1162:	0306                	slli	t1,t1,0x1
                q = q->next;
    1164:	0900                	addi	s0,sp,144
    1166:	0000                	unimp
                psize++;
    1168:	0501                	addi	a0,a0,0
    116a:	031a                	slli	t1,t1,0x6
                if (!q)
    116c:	7ce1                	lui	s9,0xffff8
    116e:	0c09                	addi	s8,s8,2
            for (i = 0; i < insize; i++)
    1170:	0100                	addi	s0,sp,128
    1172:	0f05                	addi	t5,t5,1
    1174:	09039f03          	lh	t5,144(t2) # 10091140 <__freertos_irq_stack_top+0xf081140>
                    list = e;
    1178:	0008                	0x8
    117a:	0501                	addi	a0,a0,0
            while (psize > 0 || (qsize > 0 && q))
    117c:	030e                	slli	t1,t1,0x3
    117e:	097c                	addi	a5,sp,156
                else if (qsize == 0 || !q)
    1180:	0004                	0x4
    1182:	0301                	addi	t1,t1,0
    1184:	097f                	0x97f
    1186:	0004                	0x4
                else if (cmp(p->info, q->info, res) <= 0)
    1188:	0501                	addi	a0,a0,0
    118a:	0311                	addi	t1,t1,4
    118c:	00040903          	lb	s2,0(s0)
    ee_s16 data = *pdata;
    1190:	0501                	addi	a0,a0,0
    1192:	060d                	addi	a2,a2,3
    if (optype) /* if cached, use cache */
    1194:	08090403          	lb	s0,128(s2)
        return (data & 0x007f);
    1198:	0100                	addi	s0,sp,128
    119a:	1405                	addi	s0,s0,-31
    if (optype) /* if cached, use cache */
    119c:	0306                	slli	t1,t1,0x1
    119e:	0900                	addi	s0,sp,144
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	0000                	unimp
    11a2:	0501                	addi	a0,a0,0
        ee_s16 dtype
    11a4:	09030313          	addi	t1,t1,144 # 97f0f66 <__freertos_irq_stack_top+0x87e0f66>
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	0008                	0x8
    11aa:	0501                	addi	a0,a0,0
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ac:	0314                	addi	a3,sp,384
    11ae:	097d                	addi	s2,s2,31
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	0004                	0x4
    11b2:	0501                	addi	a0,a0,0
        switch (flag)
    11b4:	060d                	addi	a2,a2,3
    11b6:	08090203          	lb	tp,128(s2)
    11ba:	0100                	addi	s0,sp,128
    11bc:	00090103          	lb	sp,0(s2)
    11c0:	0100                	addi	s0,sp,128
    11c2:	00090103          	lb	sp,0(s2)
    11c6:	0100                	addi	s0,sp,128
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	1105                	addi	sp,sp,-31
    11ca:	00090203          	lb	tp,0(s2)
        res->crc = crcu16(retval, res->crc);
    11ce:	0100                	addi	s0,sp,128
    11d0:	1305                	addi	t1,t1,-31
    11d2:	0306                	slli	t1,t1,0x1
    11d4:	0901                	addi	s2,s2,0
    11d6:	0000                	unimp
        retval &= 0x007f;
    11d8:	0501                	addi	a0,a0,0
    11da:	0316                	slli	t1,t1,0x5
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11dc:	097f                	0x97f
    11de:	0004                	0x4
    11e0:	0501                	addi	a0,a0,0
    11e2:	0611                	addi	a2,a2,4
        res->crc = crcu16(retval, res->crc);
    11e4:	04090103          	lb	sp,64(s2)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	0100                	addi	s0,sp,128
    11ea:	00090103          	lb	sp,0(s2)
    11ee:	0100                	addi	s0,sp,128
    ee_s16 data = *pdata;
    11f0:	1405                	addi	s0,s0,-31
    11f2:	0306                	slli	t1,t1,0x1
    if (optype) /* if cached, use cache */
    11f4:	0900                	addi	s0,sp,144
    11f6:	0000                	unimp
        return (data & 0x007f);
    11f8:	0501                	addi	a0,a0,0
    11fa:	030d                	addi	t1,t1,3
    if (optype) /* if cached, use cache */
    11fc:	097c                	addi	a5,sp,156
    11fe:	0004                	0x4
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	0501                	addi	a0,a0,0
    1202:	031a                	slli	t1,t1,0x6
        ee_s16 dtype
    1204:	0935                	addi	s2,s2,13
    1206:	0008                	0x8
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	0501                	addi	a0,a0,0
    120a:	09570313          	addi	t1,a4,149
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120e:	0004                	0x4
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1210:	0501                	addi	a0,a0,0
    1212:	0611                	addi	a2,a2,4
        switch (flag)
    1214:	04090403          	lb	s0,64(s2)
    1218:	0100                	addi	s0,sp,128
    121a:	1605                	addi	a2,a2,-31
    121c:	00090703          	lb	a4,0(s2)
    1220:	0100                	addi	s0,sp,128
    1222:	1905                	addi	s2,s2,-31
    1224:	0306                	slli	t1,t1,0x1
    1226:	0900                	addi	s0,sp,144
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1228:	0000                	unimp
    122a:	0501                	addi	a0,a0,0
        res->crc = crcu16(retval, res->crc);
    122c:	0325                	addi	t1,t1,9
    122e:	0900                	addi	s0,sp,144
    1230:	0004                	0x4
    1232:	0501                	addi	a0,a0,0
    1234:	0616                	slli	a2,a2,0x5
    1236:	04090703          	lb	a4,64(s2)
        retval &= 0x007f;
    123a:	0100                	addi	s0,sp,128
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123c:	1f05                	addi	t5,t5,-31
    123e:	0306                	slli	t1,t1,0x1
    1240:	0900                	addi	s0,sp,144
    1242:	0000                	unimp
        res->crc = crcu16(retval, res->crc);
    1244:	0501                	addi	a0,a0,0
    1246:	0328                	addi	a0,sp,392
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	0900                	addi	s0,sp,144
    124a:	0004                	0x4
    124c:	0501                	addi	a0,a0,0
    124e:	0605                	addi	a2,a2,1
    return val1 - val2;
    1250:	097cd303          	lhu	t1,151(s9) # ffff8097 <__freertos_irq_stack_top+0xfefe8097>
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	0004                	0x4
    1256:	0301                	addi	t1,t1,0
                    qsize--;
    1258:	094d                	addi	s2,s2,19
    125a:	0000                	unimp
                    q = q->next;
    125c:	0501                	addi	a0,a0,0
    125e:	060c                	addi	a1,sp,768
                    qsize--;
    1260:	00090003          	lb	zero,0(s2)
                if (tail)
    1264:	0100                	addi	s0,sp,128
    1266:	0505                	addi	a0,a0,1
                    tail->next = e;
    1268:	0306                	slli	t1,t1,0x1
    126a:	0901                	addi	s2,s2,0
                    list = e;
    126c:	0004                	0x4
    126e:	0301                	addi	t1,t1,0
            while (psize > 0 || (qsize > 0 && q))
    1270:	0901                	addi	s2,s2,0
    1272:	0000                	unimp
    1274:	0301                	addi	t1,t1,0
    1276:	00000903          	lb	s2,0(zero) # 0 <_start>
    127a:	0501                	addi	a0,a0,0
                    qsize--;
    127c:	0309                	addi	t1,t1,2
    127e:	0901                	addi	s2,s2,0
    1280:	0000                	unimp
    1282:	0501                	addi	a0,a0,0
                    q = q->next;
    1284:	0608                	addi	a0,sp,768
    1286:	00097f03          	0x97f03
                if (tail)
    128a:	0100                	addi	s0,sp,128
                    list = e;
    128c:	1605                	addi	a2,a2,-31
    128e:	04090103          	lb	sp,64(s2)
    1292:	0100                	addi	s0,sp,128
    1294:	0805                	addi	a6,a6,1
    1296:	04097f03          	0x4097f03
                    psize--;
    129a:	0100                	addi	s0,sp,128
    129c:	0905                	addi	s2,s2,1
    129e:	0306                	slli	t1,t1,0x1
                    p = p->next;
    12a0:	0904                	addi	s1,sp,144
    12a2:	0004                	0x4
    12a4:	0501                	addi	a0,a0,0
    12a6:	0610                	addi	a2,sp,768
    12a8:	00090303          	lb	t1,0(s2)
        while (p)
    12ac:	0100                	addi	s0,sp,128
    12ae:	04097e03          	0x4097e03
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b2:	0100                	addi	s0,sp,128
        tail->next = NULL;
    12b4:	0f05                	addi	t5,t5,1
    12b6:	04090303          	lb	t1,64(s2)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12ba:	0100                	addi	s0,sp,128
    12bc:	1005                	c.nop	-31
    12be:	04097c03          	0x4097c03
        insize *= 2;
    12c2:	0100                	addi	s0,sp,128
    12c4:	0905                	addi	s2,s2,1
    12c6:	0306                	slli	t1,t1,0x1
    12c8:	0901                	addi	s2,s2,0
    12ca:	0004                	0x4
        while (p)
    12cc:	0301                	addi	t1,t1,0
    12ce:	00000903          	lb	s2,0(zero) # 0 <_start>
        tail->next = NULL;
    12d2:	0501                	addi	a0,a0,0
    12d4:	0003060f          	0x3060f
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	0009                	c.nop	2
    12da:	0100                	addi	s0,sp,128
    12dc:	0905                	addi	s2,s2,1
    12de:	0306                	slli	t1,t1,0x1
    12e0:	0901                	addi	s2,s2,0
    12e2:	0004                	0x4
    12e4:	0501                	addi	a0,a0,0
    12e6:	7f03060f          	0x7f03060f
                if (res->crcmatrix == 0)
    12ea:	1409                	addi	s0,s0,-30
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	0100                	addi	s0,sp,128
    12ee:	0905                	addi	s2,s2,1
    12f0:	0306                	slli	t1,t1,0x1
    12f2:	0918                	addi	a4,sp,144
                if (res->crcmatrix == 0)
    12f4:	0004                	0x4
    12f6:	0501                	addi	a0,a0,0
                    res->crcmatrix = retval;
    12f8:	0614                	addi	a3,sp,768
    12fa:	00090003          	lb	zero,0(s2)
    12fe:	0100                	addi	s0,sp,128
    1300:	1005                	c.nop	-31
    1302:	0c090103          	lb	sp,192(s2)
                retval = core_bench_state(res->size,
    1306:	0100                	addi	s0,sp,128
    1308:	1805                	addi	a6,a6,-31
    130a:	04090103          	lb	sp,64(s2)
    130e:	0100                	addi	s0,sp,128
    1310:	2b05                	jal	1840 <matrix_test+0x10c>
    1312:	04090003          	lb	zero,64(s2)
    1316:	0100                	addi	s0,sp,128
    1318:	1205                	addi	tp,tp,-31
    131a:	04097e03          	0x4097e03
    131e:	0100                	addi	s0,sp,128
    1320:	0905                	addi	s2,s2,1
    1322:	0306                	slli	t1,t1,0x1
    1324:	0901                	addi	s2,s2,0
    1326:	0004                	0x4
    1328:	0301                	addi	t1,t1,0
    132a:	0901                	addi	s2,s2,0
    132c:	0000                	unimp
    132e:	0501                	addi	a0,a0,0
                if (res->crcstate == 0)
    1330:	0003062b          	0x3062b
                retval = core_bench_state(res->size,
    1334:	0009                	c.nop	2
    1336:	0100                	addi	s0,sp,128
    1338:	1005                	c.nop	-31
    133a:	04090003          	lb	zero,64(s2)
                if (res->crcstate == 0)
    133e:	0100                	addi	s0,sp,128
                    res->crcstate = retval;
    1340:	0905                	addi	s2,s2,1
    1342:	0306                	slli	t1,t1,0x1
    1344:	0901                	addi	s2,s2,0
    1346:	0004                	0x4
    1348:	0501                	addi	a0,a0,0
    134a:	0305                	addi	t1,t1,1
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134c:	090c                	addi	a1,sp,144
    134e:	0000                	unimp
    1350:	0301                	addi	t1,t1,0
    1352:	094c                	addi	a1,sp,148
    1354:	0000                	unimp
    1356:	0501                	addi	a0,a0,0
    1358:	060c                	addi	a1,sp,768
    135a:	00090003          	lb	zero,0(s2)
                if (res->crcmatrix == 0)
    135e:	0100                	addi	s0,sp,128
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	0505                	addi	a0,a0,1
    1362:	0306                	slli	t1,t1,0x1
    1364:	0901                	addi	s2,s2,0
    1366:	0004                	0x4
                if (res->crcmatrix == 0)
    1368:	0301                	addi	t1,t1,0
    136a:	0901                	addi	s2,s2,0
                    res->crcmatrix = retval;
    136c:	0000                	unimp
    136e:	0301                	addi	t1,t1,0
    1370:	00000903          	lb	s2,0(zero) # 0 <_start>
    1374:	0501                	addi	a0,a0,0
    1376:	0309                	addi	t1,t1,2
                retval = core_bench_state(res->size,
    1378:	0901                	addi	s2,s2,0
    137a:	0000                	unimp
    137c:	0501                	addi	a0,a0,0
    137e:	0608                	addi	a0,sp,768
    1380:	00097f03          	0x97f03
    1384:	0100                	addi	s0,sp,128
    1386:	1605                	addi	a2,a2,-31
    1388:	04090103          	lb	sp,64(s2)
    138c:	0100                	addi	s0,sp,128
    138e:	0805                	addi	a6,a6,1
    1390:	04097f03          	0x4097f03
    1394:	0100                	addi	s0,sp,128
    1396:	0905                	addi	s2,s2,1
    1398:	0306                	slli	t1,t1,0x1
    139a:	0904                	addi	s1,sp,144
    139c:	0004                	0x4
    139e:	0501                	addi	a0,a0,0
    13a0:	0610                	addi	a2,sp,768
    13a2:	00090303          	lb	t1,0(s2)
                if (res->crcstate == 0)
    13a6:	0100                	addi	s0,sp,128
                retval = core_bench_state(res->size,
    13a8:	04097e03          	0x4097e03
    13ac:	0100                	addi	s0,sp,128
    13ae:	0f05                	addi	t5,t5,1
                if (res->crcstate == 0)
    13b0:	04090303          	lb	t1,64(s2)
                    res->crcstate = retval;
    13b4:	0100                	addi	s0,sp,128
    13b6:	1005                	c.nop	-31
    13b8:	04097c03          	0x4097c03
    13bc:	0100                	addi	s0,sp,128
    13be:	0905                	addi	s2,s2,1
    13c0:	0306                	slli	t1,t1,0x1
    13c2:	0901                	addi	s2,s2,0
    13c4:	0004                	0x4
    13c6:	0301                	addi	t1,t1,0
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	00000903          	lb	s2,0(zero) # 0 <_start>
    13cc:	0501                	addi	a0,a0,0
    13ce:	0003060f          	0x3060f
{
    13d2:	0009                	c.nop	2
    13d4:	0100                	addi	s0,sp,128
    13d6:	0905                	addi	s2,s2,1
    13d8:	0306                	slli	t1,t1,0x1
    13da:	0901                	addi	s2,s2,0
    printf("start test41\n");
    13dc:	0004                	0x4
    13de:	0501                	addi	a0,a0,0
    13e0:	7f03060f          	0x7f03060f
{
    13e4:	1409                	addi	s0,s0,-30
    13e6:	0100                	addi	s0,sp,128
    13e8:	0905                	addi	s2,s2,1
    13ea:	0306                	slli	t1,t1,0x1
    13ec:	0918                	addi	a4,sp,144
    13ee:	0004                	0x4
    13f0:	0501                	addi	a0,a0,0
    13f2:	0614                	addi	a3,sp,768
    13f4:	00090003          	lb	zero,0(s2)
    printf("start test41\n");
    13f8:	0100                	addi	s0,sp,128
    13fa:	1005                	c.nop	-31
    13fc:	0c090103          	lb	sp,192(s2)
    ee_u32 size     = (blksize / per_item)
    1400:	0100                	addi	s0,sp,128
    1402:	1805                	addi	a6,a6,-31
    1404:	04090103          	lb	sp,64(s2)
    1408:	0100                	addi	s0,sp,128
    140a:	2b05                	jal	193a <matrix_test+0x206>
    140c:	04090003          	lb	zero,64(s2)
    1410:	0100                	addi	s0,sp,128
    1412:	1205                	addi	tp,tp,-31
    list_head *memblock_end  = memblock + size;
    1414:	04097e03          	0x4097e03
    1418:	0100                	addi	s0,sp,128
    141a:	0905                	addi	s2,s2,1
    list->info->data16 = (ee_s16)0x8080;
    141c:	0306                	slli	t1,t1,0x1
    141e:	0901                	addi	s2,s2,0
    list->next         = NULL;
    1420:	0004                	0x4
    1422:	0301                	addi	t1,t1,0
    list->info         = datablock;
    1424:	0901                	addi	s2,s2,0
    1426:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1428:	0501                	addi	a0,a0,0
    142a:	0003062b          	0x3062b
    list_data *datablock_end = datablock + size;
    142e:	0009                	c.nop	2
    list->info->data16 = (ee_s16)0x8080;
    1430:	0100                	addi	s0,sp,128
    1432:	1005                	c.nop	-31
    list->info->idx    = 0x0000;
    1434:	04090003          	lb	zero,64(s2)
    if ((*memblock + 1) >= memblock_end)
    1438:	0100                	addi	s0,sp,128
    143a:	0905                	addi	s2,s2,1
    list_data *datablock_end = datablock + size;
    143c:	0306                	slli	t1,t1,0x1
    143e:	0901                	addi	s2,s2,0
    memblock++;
    1440:	0004                	0x4
    1442:	0501                	addi	a0,a0,0
    datablock++;
    1444:	0305                	addi	t1,t1,1
    1446:	090d                	addi	s2,s2,3
    if ((*memblock + 1) >= memblock_end)
    1448:	0000                	unimp
    144a:	0501                	addi	a0,a0,0
    if ((*datablock + 1) >= datablock_end)
    144c:	0611                	addi	a2,a2,4
    144e:	00090003          	lb	zero,0(s2)
    1452:	0100                	addi	s0,sp,128
    newitem->info = *datablock;
    1454:	1905                	addi	s2,s2,-31
    1456:	0903ab03          	lw	s6,144(t2)
    newitem->next      = insert_point->next;
    145a:	0004                	0x4
    insert_point->next = newitem;
    145c:	0501                	addi	a0,a0,0
    145e:	0615                	addi	a2,a2,5
    to->idx    = from->idx;
    1460:	04090b03          	lb	s6,64(s2)
    to->data16 = from->data16;
    1464:	0100                	addi	s0,sp,128
    1466:	00090103          	lb	sp,0(s2)
    146a:	0100                	addi	s0,sp,128
    to->idx    = from->idx;
    146c:	00090103          	lb	sp,0(s2)
    for (i = 0; i < size; i++)
    1470:	0100                	addi	s0,sp,128
    1472:	1a05                	addi	s4,s4,-31
    1474:	0306                	slli	t1,t1,0x1
    1476:	0900                	addi	s0,sp,144
    to->idx    = from->idx;
    1478:	0000                	unimp
    147a:	0501                	addi	a0,a0,0
    147c:	097f0317          	auipc	t1,0x97f0
    for (i = 0; i < size; i++)
    1480:	0004                	0x4
    1482:	0501                	addi	a0,a0,0
    to->idx    = from->idx;
    1484:	031a                	slli	t1,t1,0x6
    1486:	0901                	addi	s2,s2,0
    if ((*memblock + 1) >= memblock_end)
    1488:	0004                	0x4
    148a:	0501                	addi	a0,a0,0
    148c:	0611                	addi	a2,a2,4
    148e:	04090403          	lb	s0,64(s2)
    if ((*datablock + 1) >= datablock_end)
    1492:	0100                	addi	s0,sp,128
    1494:	1405                	addi	s0,s0,-31
    1496:	0306                	slli	t1,t1,0x1
    1498:	0900                	addi	s0,sp,144
    149a:	0000                	unimp
    149c:	0501                	addi	a0,a0,0
    149e:	0615                	addi	a2,a2,5
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a0:	04090203          	lb	tp,64(s2)
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a4:	0100                	addi	s0,sp,128
    14a6:	2005                	jal	14c6 <core_list_init+0xf6>
    14a8:	0306                	slli	t1,t1,0x1
    14aa:	0900                	addi	s0,sp,144
    14ac:	0000                	unimp
    14ae:	0501                	addi	a0,a0,0
    newitem->next      = insert_point->next;
    14b0:	031a                	slli	t1,t1,0x6
    14b2:	0904                	addi	s1,sp,144
        ee_u16 dat
    14b4:	0004                	0x4
    14b6:	0501                	addi	a0,a0,0
    insert_point->next = newitem;
    14b8:	09570313          	addi	t1,a4,149
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14bc:	0004                	0x4
    14be:	0501                	addi	a0,a0,0
    newitem->info = *datablock;
    14c0:	031e                	slli	t1,t1,0x7
    14c2:	0900                	addi	s0,sp,144
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c4:	0004                	0x4
    14c6:	0501                	addi	a0,a0,0
    to->data16 = from->data16;
    14c8:	032c                	addi	a1,sp,392
    14ca:	0900                	addi	s0,sp,144
    to->idx    = from->idx;
    14cc:	0004                	0x4
    14ce:	0501                	addi	a0,a0,0
    14d0:	0611                	addi	a2,a2,4
    14d2:	04090403          	lb	s0,64(s2)
    14d6:	0100                	addi	s0,sp,128
    14d8:	1505                	addi	a0,a0,-31
    14da:	00090303          	lb	t1,0(s2)
    for (i = 0; i < size; i++)
    14de:	0100                	addi	s0,sp,128
    14e0:	00090103          	lb	sp,0(s2)
    while (finder->next != NULL)
    14e4:	0100                	addi	s0,sp,128
    14e6:	00090103          	lb	sp,0(s2)
    14ea:	0100                	addi	s0,sp,128
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	1a05                	addi	s4,s4,-31
    14ee:	0306                	slli	t1,t1,0x1
    14f0:	0900                	addi	s0,sp,144
    14f2:	0000                	unimp
    14f4:	0501                	addi	a0,a0,0
    14f6:	097f0317          	auipc	t1,0x97f0
                                & (((i & 0x07) << 8)
    14fa:	0008                	0x8
        if (i < size / 5) /* first 20% of the list in order */
    14fc:	0501                	addi	a0,a0,0
    14fe:	0611                	addi	a2,a2,4
                                & (((i & 0x07) << 8)
    1500:	04091b03          	lh	s6,64(s2)
        if (i < size / 5) /* first 20% of the list in order */
    1504:	0100                	addi	s0,sp,128
    1506:	1405                	addi	s0,s0,-31
    1508:	0306                	slli	t1,t1,0x1
    150a:	0900                	addi	s0,sp,144
        finder = finder->next;
    150c:	0000                	unimp
    150e:	0501                	addi	a0,a0,0
            finder->info->idx = i++;
    1510:	031a                	slli	t1,t1,0x6
    1512:	0906                	slli	s2,s2,0x1
        finder = finder->next;
    1514:	0004                	0x4
    1516:	0501                	addi	a0,a0,0
    while (finder->next != NULL)
    1518:	0615                	addi	a2,a2,5
    151a:	0c096d03          	0xc096d03
    151e:	0100                	addi	s0,sp,128
    insize = 1;
    1520:	00090103          	lb	sp,0(s2)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	0100                	addi	s0,sp,128
    1526:	00090103          	lb	sp,0(s2)
    insize = 1;
    152a:	0100                	addi	s0,sp,128
        tail = NULL;
    152c:	1a05                	addi	s4,s4,-31
    152e:	0306                	slli	t1,t1,0x1
        list = NULL;
    1530:	0900                	addi	s0,sp,144
    1532:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1534:	0501                	addi	a0,a0,0
    1536:	097f0317          	auipc	t1,0x97f0
            nmerges++; /* there exists a merge to be done */
    153a:	0008                	0x8
    153c:	0501                	addi	a0,a0,0
    153e:	0957030f          	0x957030f
            psize = 0;
    1542:	000c                	0xc
                q = q->next;
    1544:	0501                	addi	a0,a0,0
    1546:	0609                	addi	a2,a2,2
                psize++;
    1548:	0900c403          	lbu	s0,144(ra) # 90 <main+0x14>
                if (!q)
    154c:	0004                	0x4
    154e:	0501                	addi	a0,a0,0
            for (i = 0; i < insize; i++)
    1550:	060c                	addi	a1,sp,768
    1552:	00090303          	lb	t1,0(s2)
                    list = e;
    1556:	0100                	addi	s0,sp,128
    1558:	1405                	addi	s0,s0,-31
    155a:	04097d03          	0x4097d03
    155e:	0100                	addi	s0,sp,128
            while (psize > 0 || (qsize > 0 && q))
    1560:	0905                	addi	s2,s2,1
    1562:	0306                	slli	t1,t1,0x1
                else if (qsize == 0 || !q)
    1564:	00040903          	lb	s2,0(s0)
    1568:	0501                	addi	a0,a0,0
    156a:	060c                	addi	a1,sp,768
                else if (cmp(p->info, q->info, res) <= 0)
    156c:	00090003          	lb	zero,0(s2)
    1570:	0100                	addi	s0,sp,128
    1572:	0905                	addi	s2,s2,1
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	0306                	slli	t1,t1,0x1
    1576:	0904                	addi	s1,sp,144
    return a->idx - b->idx;
    1578:	0008                	0x8
    157a:	0501                	addi	a0,a0,0
    157c:	0610                	addi	a2,sp,768
    157e:	00090003          	lb	zero,0(s2)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1582:	0100                	addi	s0,sp,128
    1584:	0505                	addi	a0,a0,1
    1586:	0306                	slli	t1,t1,0x1
    1588:	7fad                	lui	t6,0xfffeb
    158a:	0c09                	addi	s8,s8,2
    158c:	0100                	addi	s0,sp,128
    158e:	0905                	addi	s2,s2,1
    1590:	00090203          	lb	tp,0(s2)
    1594:	0100                	addi	s0,sp,128
    1596:	00090103          	lb	sp,0(s2)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    159a:	0100                	addi	s0,sp,128
    return a->idx - b->idx;
    159c:	00090103          	lb	sp,0(s2)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	0100                	addi	s0,sp,128
    15a2:	00090203          	lb	tp,0(s2)
    15a6:	0100                	addi	s0,sp,128
    15a8:	00090203          	lb	tp,0(s2)
    15ac:	0100                	addi	s0,sp,128
    15ae:	0f05                	addi	t5,t5,1
    15b0:	0306                	slli	t1,t1,0x1
    15b2:	0900                	addi	s0,sp,144
    15b4:	0000                	unimp
    15b6:	0501                	addi	a0,a0,0
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	0609                	addi	a2,a2,2
    15ba:	0900c403          	lbu	s0,144(ra)
                    qsize--;
    15be:	0004                	0x4
                    q = q->next;
    15c0:	0501                	addi	a0,a0,0
    15c2:	0614                	addi	a3,sp,768
                    qsize--;
    15c4:	00090003          	lb	zero,0(s2)
                if (tail)
    15c8:	0100                	addi	s0,sp,128
    15ca:	1105                	addi	sp,sp,-31
                    tail->next = e;
    15cc:	0306                	slli	t1,t1,0x1
    15ce:	7c9d                	lui	s9,0xfffe7
                    list = e;
    15d0:	0809                	addi	a6,a6,2
    15d2:	0100                	addi	s0,sp,128
            while (psize > 0 || (qsize > 0 && q))
    15d4:	1a05                	addi	s4,s4,-31
    15d6:	0306                	slli	t1,t1,0x1
    15d8:	0900                	addi	s0,sp,144
    15da:	0000                	unimp
    15dc:	0501                	addi	a0,a0,0
    15de:	0314                	addi	a3,sp,384
                    qsize--;
    15e0:	0901                	addi	s2,s2,0
    15e2:	0010                	0x10
    15e4:	0501                	addi	a0,a0,0
    15e6:	0318                	addi	a4,sp,384
                    q = q->next;
    15e8:	097f                	0x97f
    15ea:	0004                	0x4
                if (tail)
    15ec:	0501                	addi	a0,a0,0
    15ee:	0611                	addi	a2,a2,4
                    list = e;
    15f0:	08090103          	lb	sp,128(s2)
    15f4:	0100                	addi	s0,sp,128
    15f6:	1405                	addi	s0,s0,-31
    15f8:	0306                	slli	t1,t1,0x1
    15fa:	0900                	addi	s0,sp,144
                    psize--;
    15fc:	0000                	unimp
    15fe:	0501                	addi	a0,a0,0
    1600:	0615                	addi	a2,a2,5
    1602:	04090103          	lb	sp,64(s2)
                    p = p->next;
    1606:	0100                	addi	s0,sp,128
    1608:	2405                	jal	1828 <matrix_test+0xf4>
    160a:	0306                	slli	t1,t1,0x1
        while (p)
    160c:	0900                	addi	s0,sp,144
    160e:	0004                	0x4
        tail->next = NULL;
    1610:	0501                	addi	a0,a0,0
    1612:	0611                	addi	a2,a2,4
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1614:	08097203          	0x8097203
        insize *= 2;
    1618:	0100                	addi	s0,sp,128
    161a:	00090203          	lb	tp,0(s2)
        while (p)
    161e:	0100                	addi	s0,sp,128
        tail->next = NULL;
    1620:	1a05                	addi	s4,s4,-31
    1622:	0306                	slli	t1,t1,0x1
    1624:	0900                	addi	s0,sp,144
    1626:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1628:	0501                	addi	a0,a0,0
    162a:	0314                	addi	a3,sp,384
    162c:	0906                	slli	s2,s2,0x1
    162e:	002c                	addi	a1,sp,8
                                & (((i & 0x07) << 8)
    1630:	0501                	addi	a0,a0,0
    1632:	0318                	addi	a4,sp,384
        finder = finder->next;
    1634:	097a                	slli	s2,s2,0x1e
    1636:	0004                	0x4
                                & (((i & 0x07) << 8)
    1638:	0501                	addi	a0,a0,0
    163a:	0611                	addi	a2,a2,4
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163c:	08090603          	lb	a2,128(s2)
                                & (((i & 0x07) << 8)
    1640:	0100                	addi	s0,sp,128
    1642:	1405                	addi	s0,s0,-31
                                   | pat); /* make sure the mixed items end up
    1644:	0306                	slli	t1,t1,0x1
    1646:	0900                	addi	s0,sp,144
    while (finder->next != NULL)
    1648:	0000                	unimp
    164a:	0501                	addi	a0,a0,0
                                & (((i & 0x07) << 8)
    164c:	0615                	addi	a2,a2,5
    164e:	04090103          	lb	sp,64(s2)
            finder->info->idx = 0x3fff
    1652:	0100                	addi	s0,sp,128
        finder = finder->next;
    1654:	2305                	jal	1b74 <matrix_test+0x440>
    1656:	0306                	slli	t1,t1,0x1
    while (finder->next != NULL)
    1658:	0900                	addi	s0,sp,144
    165a:	0000                	unimp
    165c:	0501                	addi	a0,a0,0
    165e:	0611                	addi	a2,a2,4
}
    1660:	0c090303          	lb	t1,192(s2)
    1664:	0100                	addi	s0,sp,128
    1666:	1a05                	addi	s4,s4,-31
    1668:	0306                	slli	t1,t1,0x1
    166a:	0900                	addi	s0,sp,144
    166c:	0000                	unimp
    166e:	0501                	addi	a0,a0,0
    1670:	0314                	addi	a3,sp,384
    1672:	0901                	addi	s2,s2,0
    1674:	0010                	0x10
    1676:	0501                	addi	a0,a0,0
    1678:	0318                	addi	a4,sp,384
    167a:	097f                	0x97f
    memblock++;
    167c:	0004                	0x4
    167e:	0501                	addi	a0,a0,0
    datablock++;
    1680:	0611                	addi	a2,a2,4
    1682:	08090103          	lb	sp,128(s2)
    if ((*datablock + 1) >= datablock_end)
    1686:	0100                	addi	s0,sp,128
    1688:	1405                	addi	s0,s0,-31
    168a:	0306                	slli	t1,t1,0x1
{
    168c:	0900                	addi	s0,sp,144
    168e:	0000                	unimp
    1690:	0501                	addi	a0,a0,0
    1692:	0615                	addi	a2,a2,5
    ee_u32        iterations = res->iterations;
    1694:	04090103          	lb	sp,64(s2)
{
    1698:	0100                	addi	s0,sp,128
    169a:	2405                	jal	18ba <matrix_test+0x186>
    169c:	0306                	slli	t1,t1,0x1
    169e:	0900                	addi	s0,sp,144
    16a0:	0004                	0x4
    16a2:	0501                	addi	a0,a0,0
    res->crc                 = 0;
    16a4:	0611                	addi	a2,a2,4
    16a6:	08097203          	0x8097203
    16aa:	0100                	addi	s0,sp,128
{
    16ac:	00090203          	lb	tp,0(s2)
    for (i = 0; i < iterations; i++)
    16b0:	0100                	addi	s0,sp,128
    16b2:	1a05                	addi	s4,s4,-31
    16b4:	0306                	slli	t1,t1,0x1
    16b6:	0900                	addi	s0,sp,144
        crc      = core_bench_list(res, 1);
    16b8:	0000                	unimp
    16ba:	0501                	addi	a0,a0,0
    16bc:	0314                	addi	a3,sp,384
    16be:	0906                	slli	s2,s2,0x1
    16c0:	002c                	addi	a1,sp,8
    16c2:	0501                	addi	a0,a0,0
    16c4:	0318                	addi	a4,sp,384
    16c6:	097a                	slli	s2,s2,0x1e
        res->crc = crcu16(crc, res->crc);
    16c8:	0004                	0x4
    16ca:	0501                	addi	a0,a0,0
    16cc:	0611                	addi	a2,a2,4
    16ce:	08090603          	lb	a2,128(s2)
    16d2:	0100                	addi	s0,sp,128
    16d4:	1405                	addi	s0,s0,-31
    16d6:	0306                	slli	t1,t1,0x1
        crc      = core_bench_list(res, -1);
    16d8:	0900                	addi	s0,sp,144
    16da:	0000                	unimp
    16dc:	0501                	addi	a0,a0,0
    16de:	0615                	addi	a2,a2,5
    16e0:	04090103          	lb	sp,64(s2)
    16e4:	0100                	addi	s0,sp,128
    16e6:	2305                	jal	1c06 <matrix_test+0x4d2>
        res->crc = crcu16(crc, res->crc);
    16e8:	0306                	slli	t1,t1,0x1
    16ea:	0900                	addi	s0,sp,144
    16ec:	0000                	unimp
    16ee:	0501                	addi	a0,a0,0
    16f0:	060d                	addi	a2,a2,3
    16f2:	0900d203          	lhu	tp,144(ra)
    16f6:	0014                	0x14
        if (i == 0)
    16f8:	0301                	addi	t1,t1,0
    16fa:	0901                	addi	s2,s2,0
    for (i = 0; i < iterations; i++)
    16fc:	0000                	unimp
    16fe:	0501                	addi	a0,a0,0
    1700:	061c                	addi	a5,sp,768
    1702:	00090003          	lb	zero,0(s2)
}
    1706:	0100                	addi	s0,sp,128
    1708:	0809                	addi	a6,a6,2
    170a:	0000                	unimp
    170c:	0101                	addi	sp,sp,0
    170e:	0105                	addi	sp,sp,1
    1710:	0500                	addi	s0,sp,640
    1712:	d002                	sw	zero,32(sp)
    1714:	03000013          	li	zero,48
    1718:	050101fb          	0x50101fb
    171c:	0305                	addi	t1,t1,1
    171e:	0901                	addi	s2,s2,0
            res->crclist = res->crc;
    1720:	0000                	unimp
    1722:	0501                	addi	a0,a0,0
    for (i = 0; i < iterations; i++)
    1724:	0601                	addi	a2,a2,0
    1726:	00097f03          	0x97f03
    172a:	0100                	addi	s0,sp,128
    172c:	0505                	addi	a0,a0,1
    172e:	0c090103          	lb	sp,192(s2)
    1732:	0100                	addi	s0,sp,128
{
    1734:	0105                	addi	sp,sp,1
    1736:	08097f03          	0x8097f03
    173a:	0100                	addi	s0,sp,128
    173c:	0c090003          	lb	zero,192(s2)
    MATDAT clipval = matrix_big(val);
    1740:	0100                	addi	s0,sp,128
    1742:	0505                	addi	a0,a0,1
{
    1744:	08090103          	lb	sp,128(s2)
    1748:	0100                	addi	s0,sp,128
    174a:	0306                	slli	t1,t1,0x1
    174c:	0902                	c.slli64	s2
    174e:	0008                	0x8
    1750:	0301                	addi	t1,t1,0
    1752:	0901                	addi	s2,s2,0
    1754:	0000                	unimp
    1756:	0501                	addi	a0,a0,0
    1758:	0620                	addi	s0,sp,776
    175a:	00090003          	lb	zero,0(s2)
    175e:	0100                	addi	s0,sp,128
    1760:	0c05                	addi	s8,s8,1
    1762:	10090003          	lb	zero,256(s2)
    1766:	0100                	addi	s0,sp,128
    1768:	0505                	addi	a0,a0,1
    176a:	0306                	slli	t1,t1,0x1
    176c:	00040903          	lb	s2,0(s0)
    1770:	0501                	addi	a0,a0,0
    1772:	0629                	addi	a2,a2,10
    1774:	00090003          	lb	zero,0(s2)
    1778:	0100                	addi	s0,sp,128
    177a:	1005                	c.nop	-31
    MATDAT clipval = matrix_big(val);
    177c:	04090003          	lb	zero,64(s2)
    for (i = 0; i < N; i++)
    1780:	0100                	addi	s0,sp,128
    1782:	0505                	addi	a0,a0,1
    1784:	0306                	slli	t1,t1,0x1
    1786:	0901                	addi	s2,s2,0
    1788:	0004                	0x4
    178a:	0301                	addi	t1,t1,0
    178c:	0901                	addi	s2,s2,0
    178e:	0000                	unimp
    1790:	0501                	addi	a0,a0,0
    1792:	0618                	addi	a4,sp,768
    1794:	00090a03          	lb	s4,0(s2)
    1798:	0100                	addi	s0,sp,128
    179a:	04097d03          	0x4097d03
    179e:	0100                	addi	s0,sp,128
    17a0:	04090103          	lb	sp,64(s2)
    17a4:	0100                	addi	s0,sp,128
    17a6:	04090203          	lb	tp,64(s2)
    17aa:	0100                	addi	s0,sp,128
    17ac:	2a05                	jal	18dc <matrix_test+0x1a8>
    17ae:	04097603          	0x4097603
    17b2:	0100                	addi	s0,sp,128
    17b4:	1805                	addi	a6,a6,-31
    17b6:	04090a03          	lb	s4,64(s2)
    17ba:	0100                	addi	s0,sp,128
{
    17bc:	04097f03          	0x4097f03
            A[i * N + j] += val;
    17c0:	0100                	addi	s0,sp,128
    17c2:	1405                	addi	s0,s0,-31
    17c4:	0900cc03          	lbu	s8,144(ra)
    17c8:	0004                	0x4
    17ca:	0501                	addi	a0,a0,0
    17cc:	0310                	addi	a2,sp,384
    17ce:	04097fab          	0x4097fab
        for (j = 0; j < N; j++)
    17d2:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    17d4:	0505                	addi	a0,a0,1
    17d6:	0306                	slli	t1,t1,0x1
    17d8:	0902                	c.slli64	s2
    17da:	0004                	0x4
    17dc:	0301                	addi	t1,t1,0
    17de:	0901                	addi	s2,s2,0
    17e0:	0000                	unimp
    17e2:	0301                	addi	t1,t1,0
    17e4:	0901                	addi	s2,s2,0
    17e6:	0000                	unimp
    17e8:	0301                	addi	t1,t1,0
    17ea:	00000903          	lb	s2,0(zero) # 0 <_start>
    17ee:	0301                	addi	t1,t1,0
    17f0:	0901                	addi	s2,s2,0
    17f2:	0000                	unimp
    17f4:	0301                	addi	t1,t1,0
    17f6:	0901                	addi	s2,s2,0
    17f8:	0000                	unimp
    17fa:	0301                	addi	t1,t1,0
    17fc:	0901                	addi	s2,s2,0
    17fe:	0000                	unimp
    1800:	0301                	addi	t1,t1,0
    1802:	0901                	addi	s2,s2,0
    for (i = 0; i < N; i++)
    1804:	0000                	unimp
    1806:	0501                	addi	a0,a0,0
    1808:	060d                	addi	a2,a2,3
    180a:	00090003          	lb	zero,0(s2)
    180e:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    1810:	0505                	addi	a0,a0,1
    1812:	0306                	slli	t1,t1,0x1
    1814:	0901                	addi	s2,s2,0
    1816:	0004                	0x4
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    1818:	0501                	addi	a0,a0,0
    181a:	060e                	slli	a2,a2,0x3
    181c:	00090003          	lb	zero,0(s2)
    1820:	0100                	addi	s0,sp,128
    1822:	0505                	addi	a0,a0,1
    1824:	0306                	slli	t1,t1,0x1
    1826:	0901                	addi	s2,s2,0
    1828:	0004                	0x4
    182a:	0301                	addi	t1,t1,0
    182c:	0901                	addi	s2,s2,0
    182e:	0000                	unimp
    1830:	0301                	addi	t1,t1,0
    1832:	0901                	addi	s2,s2,0
        for (j = 0; j < N; j++)
    1834:	0000                	unimp
    1836:	0301                	addi	t1,t1,0
    1838:	00c4                	addi	s1,sp,68
    183a:	0009                	c.nop	2
    for (i = 0; i < N; i++)
    183c:	0100                	addi	s0,sp,128
    183e:	00090203          	lb	tp,0(s2)
    1842:	0100                	addi	s0,sp,128
    1844:	0805                	addi	a6,a6,1
    1846:	0306                	slli	t1,t1,0x1
    1848:	0900                	addi	s0,sp,144
    184a:	0000                	unimp
    184c:	0501                	addi	a0,a0,0
    184e:	0605                	addi	a2,a2,1
    1850:	04090203          	lb	tp,64(s2)
    1854:	0100                	addi	s0,sp,128
    1856:	1505                	addi	a0,a0,-31
    1858:	0306                	slli	t1,t1,0x1
    185a:	0900                	addi	s0,sp,144
    185c:	0000                	unimp
    185e:	0501                	addi	a0,a0,0
    1860:	0308                	addi	a0,sp,384
    1862:	0900                	addi	s0,sp,144
    ee_s16 ret = 0;
    1864:	0004                	0x4
    1866:	0501                	addi	a0,a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1868:	0605                	addi	a2,a2,1
    186a:	04090303          	lb	t1,64(s2)
    186e:	0100                	addi	s0,sp,128
    1870:	00090103          	lb	sp,0(s2)
    for (i = 0; i < N; i++)
    1874:	0100                	addi	s0,sp,128
    1876:	00090103          	lb	sp,0(s2)
    MATRES tmp = 0, prev = 0, cur = 0;
    187a:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    187c:	1305                	addi	t1,t1,-31
    187e:	0306                	slli	t1,t1,0x1
    1880:	00000903          	lb	s2,0(zero) # 0 <_start>
    1884:	0501                	addi	a0,a0,0
    1886:	0318                	addi	a4,sp,384
    1888:	097d                	addi	s2,s2,31
    188a:	0004                	0x4
    188c:	0501                	addi	a0,a0,0
    188e:	0605                	addi	a2,a2,1
    1890:	04090103          	lb	sp,64(s2)
                ret += (cur > prev) ? 1 : 0;
    1894:	0100                	addi	s0,sp,128
    1896:	1805                	addi	a6,a6,-31
    1898:	0306                	slli	t1,t1,0x1
    189a:	0900                	addi	s0,sp,144
    189c:	0000                	unimp
    189e:	0501                	addi	a0,a0,0
            cur = C[i * N + j];
    18a0:	0605                	addi	a2,a2,1
    18a2:	04090203          	lb	tp,64(s2)
        for (j = 0; j < N; j++)
    18a6:	0100                	addi	s0,sp,128
            cur = C[i * N + j];
    18a8:	00090103          	lb	sp,0(s2)
            tmp += cur;
    18ac:	0100                	addi	s0,sp,128
    18ae:	00090103          	lb	sp,0(s2)
    18b2:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    18b4:	097ead03          	lw	s10,151(t4) # fffe5097 <__freertos_irq_stack_top+0xfefd5097>
            tmp += cur;
    18b8:	0000                	unimp
    18ba:	0501                	addi	a0,a0,0
                ret += 10;
    18bc:	0610                	addi	a2,sp,768
    18be:	00090103          	lb	sp,0(s2)
                ret += (cur > prev) ? 1 : 0;
    18c2:	0100                	addi	s0,sp,128
            if (tmp > clipval)
    18c4:	04097f03          	0x4097f03
                ret += 10;
    18c8:	0100                	addi	s0,sp,128
    18ca:	0505                	addi	a0,a0,1
    18cc:	0306                	slli	t1,t1,0x1
    18ce:	0901                	addi	s2,s2,0
    18d0:	0008                	0x8
    18d2:	0501                	addi	a0,a0,0
                tmp = 0;
    18d4:	0610                	addi	a2,sp,768
    18d6:	00090003          	lb	zero,0(s2)
            cur = C[i * N + j];
    18da:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    18dc:	0505                	addi	a0,a0,1
    18de:	0306                	slli	t1,t1,0x1
    for (i = 0; i < N; i++)
    18e0:	01d4                	addi	a3,sp,196
    18e2:	0409                	addi	s0,s0,2
    18e4:	0100                	addi	s0,sp,128
    18e6:	0200                	addi	s0,sp,256
    18e8:	0104                	addi	s1,sp,128
    18ea:	0306                	slli	t1,t1,0x1
    18ec:	7fb0                	flw	fa2,120(a5)
    18ee:	0009                	c.nop	2
    18f0:	0100                	addi	s0,sp,128
    18f2:	1005                	c.nop	-31
    crc = crc16(matrix_sum(N, C, clipval), crc);
    18f4:	097efc03          	0x97efc03
    18f8:	0008                	0x8
    18fa:	0501                	addi	a0,a0,0
    18fc:	0305                	addi	t1,t1,1
    18fe:	0184                	addi	s1,sp,192
    1900:	0809                	addi	a6,a6,2
    1902:	0100                	addi	s0,sp,128
    1904:	1005                	c.nop	-31
    1906:	097efc03          	0x97efc03
    190a:	0004                	0x4
    for (i = 0; i < N; i++)
    190c:	0501                	addi	a0,a0,0
    190e:	0009                	c.nop	2
    1910:	0402                	c.slli64	s0
    1912:	86030603          	lb	a2,-1952(t1) # 97f0d96 <__freertos_irq_stack_top+0x87e0d96>
    1916:	0901                	addi	s2,s2,0
    1918:	0004                	0x4
    191a:	0001                	nop
    191c:	0402                	c.slli64	s0
    191e:	09010303          	lb	t1,144(sp)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1922:	0000                	unimp
    1924:	0001                	nop
    1926:	0402                	c.slli64	s0
    1928:	09020303          	lb	t1,144(tp) # 90 <main+0x14>
    192c:	0000                	unimp
    192e:	0001                	nop
    1930:	0402                	c.slli64	s0
    1932:	09020303          	lb	t1,144(tp) # 90 <main+0x14>
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    1936:	0000                	unimp
    1938:	0501                	addi	a0,a0,0
    193a:	0005                	c.nop	1
    193c:	0402                	c.slli64	s0
    193e:	09390303          	lb	t1,147(s2)
    1942:	0000                	unimp
    1944:	0001                	nop
    1946:	0402                	c.slli64	s0
    1948:	09020303          	lb	t1,144(tp) # 90 <main+0x14>
    194c:	0000                	unimp
    194e:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    1950:	0014                	0x14
    1952:	0402                	c.slli64	s0
    1954:	00030603          	lb	a2,0(t1)
    1958:	0009                	c.nop	2
    195a:	0100                	addi	s0,sp,128
    195c:	0805                	addi	a6,a6,1
    195e:	0200                	addi	s0,sp,256
    for (i = 0; i < N; i++)
    1960:	0304                	addi	s1,sp,384
    1962:	04090003          	lb	zero,64(s2)
    1966:	0100                	addi	s0,sp,128
    ee_s16 ret = 0;
    1968:	0505                	addi	a0,a0,1
    196a:	0306                	slli	t1,t1,0x1
    MATRES tmp = 0, prev = 0, cur = 0;
    196c:	0902                	c.slli64	s2
    196e:	0004                	0x4
    1970:	0501                	addi	a0,a0,0
    1972:	0615                	addi	a2,a2,5
    for (i = 0; i < N; i++)
    1974:	00090003          	lb	zero,0(s2)
    1978:	0100                	addi	s0,sp,128
    197a:	0805                	addi	a6,a6,1
        for (j = 0; j < N; j++)
    197c:	04090003          	lb	zero,64(s2)
    1980:	0100                	addi	s0,sp,128
    1982:	1a05                	addi	s4,s4,-31
                ret += (cur > prev) ? 1 : 0;
    1984:	097fbe03          	0x97fbe03
        for (j = 0; j < N; j++)
    1988:	000c                	0xc
    198a:	0501                	addi	a0,a0,0
                ret += (cur > prev) ? 1 : 0;
    198c:	09020317          	auipc	t1,0x9020
            prev = cur;
    1990:	0004                	0x4
    1992:	0501                	addi	a0,a0,0
            cur = C[i * N + j];
    1994:	0322                	slli	t1,t1,0x8
    1996:	0900                	addi	s0,sp,144
        for (j = 0; j < N; j++)
    1998:	0004                	0x4
    199a:	0501                	addi	a0,a0,0
            cur = C[i * N + j];
    199c:	09000317          	auipc	t1,0x9000
            tmp += cur;
    19a0:	0004                	0x4
    19a2:	0501                	addi	a0,a0,0
    19a4:	0318                	addi	a4,sp,384
    19a6:	00c5                	addi	ra,ra,17
                ret += (cur > prev) ? 1 : 0;
    19a8:	0409                	addi	s0,s0,2
    19aa:	0100                	addi	s0,sp,128
            tmp += cur;
    19ac:	1005                	c.nop	-31
    19ae:	097fba03          	0x97fba03
                ret += 10;
    19b2:	0004                	0x4
                ret += (cur > prev) ? 1 : 0;
    19b4:	0501                	addi	a0,a0,0
    19b6:	0605                	addi	a2,a2,1
            if (tmp > clipval)
    19b8:	0900c403          	lbu	s0,144(ra)
                ret += 10;
    19bc:	0004                	0x4
    19be:	0301                	addi	t1,t1,0
        for (j = 0; j < N; j++)
    19c0:	0901                	addi	s2,s2,0
    19c2:	0000                	unimp
                ret += 10;
    19c4:	0301                	addi	t1,t1,0
    19c6:	0901                	addi	s2,s2,0
                tmp = 0;
    19c8:	0000                	unimp
    19ca:	0301                	addi	t1,t1,0
            prev = cur;
    19cc:	0901                	addi	s2,s2,0
    19ce:	0000                	unimp
            cur = C[i * N + j];
    19d0:	0501                	addi	a0,a0,0
    19d2:	0618                	addi	a4,sp,768
        for (j = 0; j < N; j++)
    19d4:	00090003          	lb	zero,0(s2)
    19d8:	0100                	addi	s0,sp,128
    19da:	0505                	addi	a0,a0,1
    for (i = 0; i < N; i++)
    19dc:	0306                	slli	t1,t1,0x1
    19de:	0902                	c.slli64	s2
    19e0:	0004                	0x4
    19e2:	0501                	addi	a0,a0,0
    19e4:	061c                	addi	a5,sp,768
    19e6:	097fb903          	0x97fb903
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19ea:	0000                	unimp
    19ec:	0501                	addi	a0,a0,0
    19ee:	00c70313          	addi	t1,a4,12
    19f2:	0409                	addi	s0,s0,2
            C[i * N + j] = 0;
    19f4:	0100                	addi	s0,sp,128
    19f6:	0505                	addi	a0,a0,1
    crc = crc16(matrix_sum(N, C, clipval), crc);
    19f8:	0306                	slli	t1,t1,0x1
    19fa:	0901                	addi	s2,s2,0
            C[i * N + j] = 0;
    19fc:	0004                	0x4
    19fe:	0301                	addi	t1,t1,0
    1a00:	0901                	addi	s2,s2,0
    1a02:	0000                	unimp
    1a04:	0301                	addi	t1,t1,0
    1a06:	7ead                	lui	t4,0xfffeb
    1a08:	0009                	c.nop	2
    1a0a:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    1a0c:	2205                	jal	1b2c <matrix_test+0x3f8>
    1a0e:	0306                	slli	t1,t1,0x1
            C[i * N + j] = 0;
    1a10:	018a                	slli	gp,gp,0x2
    1a12:	0009                	c.nop	2
    1a14:	0100                	addi	s0,sp,128
    1a16:	1005                	c.nop	-31
    1a18:	097ef603          	0x97ef603
    1a1c:	0004                	0x4
    1a1e:	0501                	addi	a0,a0,0
    1a20:	0605                	addi	a2,a2,1
    1a22:	04090103          	lb	sp,64(s2)
    1a26:	0100                	addi	s0,sp,128
    1a28:	1005                	c.nop	-31
    1a2a:	0306                	slli	t1,t1,0x1
                tmp = 0;
    1a2c:	0900                	addi	s0,sp,144
    1a2e:	0000                	unimp
        for (j = 0; j < N; j++)
    1a30:	0501                	addi	a0,a0,0
    1a32:	0605                	addi	a2,a2,1
    1a34:	0901d403          	lhu	s0,144(gp) # 10014c0 <__global_pointer$+0x90>
    1a38:	0004                	0x4
    1a3a:	0501                	addi	a0,a0,0
    1a3c:	0610                	addi	a2,sp,768
    1a3e:	097eac03          	lw	s8,151(t4) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
            for (k = 0; k < N; k++)
    1a42:	0000                	unimp
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a44:	0501                	addi	a0,a0,0
    1a46:	031c                	addi	a5,sp,384
    1a48:	0184                	addi	s1,sp,192
    1a4a:	0c09                	addi	s8,s8,2
            for (k = 0; k < N; k++)
    1a4c:	0100                	addi	s0,sp,128
    1a4e:	0505                	addi	a0,a0,1
    1a50:	04090003          	lb	zero,64(s2)
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1a54:	0100                	addi	s0,sp,128
    1a56:	0306                	slli	t1,t1,0x1
    1a58:	0004090b          	0x4090b
    1a5c:	0301                	addi	t1,t1,0
    1a5e:	0901                	addi	s2,s2,0
    1a60:	0000                	unimp
    1a62:	0301                	addi	t1,t1,0
            for (k = 0; k < N; k++)
    1a64:	0901                	addi	s2,s2,0
    1a66:	0000                	unimp
    1a68:	0501                	addi	a0,a0,0
    1a6a:	0003060b          	0x3060b
        for (j = 0; j < N; j++)
    1a6e:	0009                	c.nop	2
    1a70:	0100                	addi	s0,sp,128
    1a72:	1605                	addi	a2,a2,-31
    1a74:	08090203          	lb	tp,128(s2)
    1a78:	0100                	addi	s0,sp,128
    1a7a:	2105                	jal	1e9a <core_init_matrix+0x10e>
    for (i = 0; i < N; i++)
    1a7c:	0c090603          	lb	a2,192(s2)
    1a80:	0100                	addi	s0,sp,128
    1a82:	1605                	addi	a2,a2,-31
    1a84:	04097a03          	0x4097a03
    1a88:	0100                	addi	s0,sp,128
    1a8a:	2105                	jal	1eaa <core_init_matrix+0x11e>
    1a8c:	04090603          	lb	a2,64(s2)
    1a90:	0100                	addi	s0,sp,128
    1a92:	0905                	addi	s2,s2,1
    1a94:	0306                	slli	t1,t1,0x1
    1a96:	097a                	slli	s2,s2,0x1e
    1a98:	0004                	0x4
    1a9a:	0501                	addi	a0,a0,0
    1a9c:	060c                	addi	a1,sp,768
    1a9e:	04090003          	lb	zero,64(s2)
    1aa2:	0100                	addi	s0,sp,128
    ee_s16 ret = 0;
    1aa4:	0d05                	addi	s10,s10,1
    1aa6:	0306                	slli	t1,t1,0x1
    MATRES tmp = 0, prev = 0, cur = 0;
    1aa8:	0901                	addi	s2,s2,0
    1aaa:	0004                	0x4
    1aac:	0501                	addi	a0,a0,0
    1aae:	0610                	addi	a2,sp,768
    for (i = 0; i < N; i++)
    1ab0:	00090903          	lb	s2,0(s2)
    1ab4:	0100                	addi	s0,sp,128
    1ab6:	1f05                	addi	t5,t5,-31
        for (j = 0; j < N; j++)
    1ab8:	04097703          	0x4097703
    1abc:	0100                	addi	s0,sp,128
    1abe:	0905                	addi	s2,s2,1
                ret += (cur > prev) ? 1 : 0;
    1ac0:	0306                	slli	t1,t1,0x1
    1ac2:	0909                	addi	s2,s2,2
        for (j = 0; j < N; j++)
    1ac4:	0004                	0x4
    1ac6:	0501                	addi	a0,a0,0
                ret += (cur > prev) ? 1 : 0;
    1ac8:	7403060b          	0x7403060b
            prev = cur;
    1acc:	0409                	addi	s0,s0,2
    1ace:	0100                	addi	s0,sp,128
            cur = C[i * N + j];
    1ad0:	0505                	addi	a0,a0,1
    1ad2:	0306                	slli	t1,t1,0x1
        for (j = 0; j < N; j++)
    1ad4:	080901d7          	0x80901d7
            cur = C[i * N + j];
    1ad8:	0100                	addi	s0,sp,128
    1ada:	0905                	addi	s2,s2,1
            tmp += cur;
    1adc:	00090203          	lb	tp,0(s2)
    1ae0:	0100                	addi	s0,sp,128
    1ae2:	00090103          	lb	sp,0(s2)
                ret += (cur > prev) ? 1 : 0;
    1ae6:	0100                	addi	s0,sp,128
            tmp += cur;
    1ae8:	00090103          	lb	sp,0(s2)
                ret += 10;
    1aec:	0100                	addi	s0,sp,128
    1aee:	00090203          	lb	tp,0(s2)
                ret += (cur > prev) ? 1 : 0;
    1af2:	0100                	addi	s0,sp,128
            if (tmp > clipval)
    1af4:	00090203          	lb	tp,0(s2)
                ret += 10;
    1af8:	0100                	addi	s0,sp,128
    1afa:	0c05                	addi	s8,s8,1
        for (j = 0; j < N; j++)
    1afc:	0306                	slli	t1,t1,0x1
    1afe:	0976                	slli	s2,s2,0x1d
                ret += 10;
    1b00:	0000                	unimp
    1b02:	0301                	addi	t1,t1,0
                tmp = 0;
    1b04:	00d1                	addi	ra,ra,20
    1b06:	0409                	addi	s0,s0,2
            prev = cur;
    1b08:	0100                	addi	s0,sp,128
    1b0a:	097faf03          	lw	t5,151(t6) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
            cur = C[i * N + j];
    1b0e:	0004                	0x4
        for (j = 0; j < N; j++)
    1b10:	0501                	addi	a0,a0,0
    1b12:	030e                	slli	t1,t1,0x3
    1b14:	0906                	slli	s2,s2,0x1
    1b16:	0004                	0x4
    for (i = 0; i < N; i++)
    1b18:	0301                	addi	t1,t1,0
    1b1a:	097f                	0x97f
    1b1c:	0004                	0x4
    1b1e:	0501                	addi	a0,a0,0
    1b20:	0311                	addi	t1,t1,4
    1b22:	00040903          	lb	s2,0(s0)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b26:	0501                	addi	a0,a0,0
    1b28:	060d                	addi	a2,a2,3
    1b2a:	04090403          	lb	s0,64(s2)
    1b2e:	0100                	addi	s0,sp,128
    1b30:	1405                	addi	s0,s0,-31
    1b32:	0306                	slli	t1,t1,0x1
    1b34:	0900                	addi	s0,sp,144
    1b36:	0000                	unimp
    1b38:	0501                	addi	a0,a0,0
    1b3a:	060d                	addi	a2,a2,3
    1b3c:	04090203          	lb	tp,64(s2)
    for (i = 0; i < N; i++)
    1b40:	0100                	addi	s0,sp,128
    1b42:	00090103          	lb	sp,0(s2)
    1b46:	0100                	addi	s0,sp,128
    1b48:	00090103          	lb	sp,0(s2)
    1b4c:	0100                	addi	s0,sp,128
    1b4e:	1405                	addi	s0,s0,-31
    1b50:	0306                	slli	t1,t1,0x1
    1b52:	097c                	addi	a5,sp,156
    1b54:	0000                	unimp
    1b56:	0501                	addi	a0,a0,0
    1b58:	09030313          	addi	t1,t1,144 # 9001a2c <__freertos_irq_stack_top+0x7ff1a2c>
                tmp = 0;
    1b5c:	0004                	0x4
    1b5e:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    1b60:	0611                	addi	a2,a2,4
    1b62:	04090303          	lb	t1,64(s2)
    1b66:	0100                	addi	s0,sp,128
    1b68:	1305                	addi	t1,t1,-31
    1b6a:	0306                	slli	t1,t1,0x1
    1b6c:	0901                	addi	s2,s2,0
    1b6e:	0000                	unimp
            for (k = 0; k < N; k++)
    1b70:	0501                	addi	a0,a0,0
    1b72:	0316                	slli	t1,t1,0x5
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b74:	097f                	0x97f
    1b76:	0004                	0x4
    1b78:	0501                	addi	a0,a0,0
    1b7a:	0611                	addi	a2,a2,4
            for (k = 0; k < N; k++)
    1b7c:	04090103          	lb	sp,64(s2)
    1b80:	0100                	addi	s0,sp,128
    1b82:	00090103          	lb	sp,0(s2)
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    1b86:	0100                	addi	s0,sp,128
    1b88:	1405                	addi	s0,s0,-31
    1b8a:	0306                	slli	t1,t1,0x1
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    1b8c:	0900                	addi	s0,sp,144
    1b8e:	0000                	unimp
    1b90:	0501                	addi	a0,a0,0
    1b92:	030d                	addi	t1,t1,3
    1b94:	097c                	addi	a5,sp,156
    1b96:	0004                	0x4
    1b98:	0501                	addi	a0,a0,0
    1b9a:	031a                	slli	t1,t1,0x6
    1b9c:	0935                	addi	s2,s2,13
    1b9e:	0004                	0x4
    1ba0:	0501                	addi	a0,a0,0
    1ba2:	09570313          	addi	t1,a4,149
    1ba6:	000c                	0xc
    1ba8:	0501                	addi	a0,a0,0
    1baa:	0611                	addi	a2,a2,4
            for (k = 0; k < N; k++)
    1bac:	04090403          	lb	s0,64(s2)
    1bb0:	0100                	addi	s0,sp,128
    1bb2:	1605                	addi	a2,a2,-31
        for (j = 0; j < N; j++)
    1bb4:	00090703          	lb	a4,0(s2)
    1bb8:	0100                	addi	s0,sp,128
    1bba:	1905                	addi	s2,s2,-31
    1bbc:	0306                	slli	t1,t1,0x1
    1bbe:	0900                	addi	s0,sp,144
    1bc0:	0000                	unimp
    1bc2:	0501                	addi	a0,a0,0
    for (i = 0; i < N; i++)
    1bc4:	0325                	addi	t1,t1,9
    1bc6:	0900                	addi	s0,sp,144
    1bc8:	0004                	0x4
    1bca:	0501                	addi	a0,a0,0
    1bcc:	0616                	slli	a2,a2,0x5
    1bce:	04090703          	lb	a4,64(s2)
    1bd2:	0100                	addi	s0,sp,128
    1bd4:	1f05                	addi	t5,t5,-31
    1bd6:	0306                	slli	t1,t1,0x1
    1bd8:	0900                	addi	s0,sp,144
    1bda:	0000                	unimp
    1bdc:	0501                	addi	a0,a0,0
    1bde:	0328                	addi	a0,sp,392
    1be0:	0900                	addi	s0,sp,144
    1be2:	0004                	0x4
    1be4:	0501                	addi	a0,a0,0
    1be6:	0605                	addi	a2,a2,1
    ee_s16 ret = 0;
    1be8:	097ce003          	0x97ce003
    MATRES tmp = 0, prev = 0, cur = 0;
    1bec:	0004                	0x4
    1bee:	0501                	addi	a0,a0,0
    1bf0:	0309                	addi	t1,t1,2
    1bf2:	0902                	c.slli64	s2
    for (i = 0; i < N; i++)
    1bf4:	0000                	unimp
    1bf6:	0501                	addi	a0,a0,0
    1bf8:	00030617          	auipc	a2,0x30
        for (j = 0; j < N; j++)
    1bfc:	0009                	c.nop	2
    1bfe:	0100                	addi	s0,sp,128
    1c00:	1605                	addi	a2,a2,-31
    1c02:	04090303          	lb	t1,64(s2)
                ret += (cur > prev) ? 1 : 0;
    1c06:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1c08:	0d05                	addi	s10,s10,1
    1c0a:	04090003          	lb	zero,64(s2)
                ret += (cur > prev) ? 1 : 0;
    1c0e:	0100                	addi	s0,sp,128
            prev = cur;
    1c10:	2a05                	jal	1d40 <matrix_test+0x60c>
    1c12:	04097d03          	0x4097d03
            cur = C[i * N + j];
    1c16:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1c18:	2005                	jal	1c38 <matrix_test+0x504>
    1c1a:	08090003          	lb	zero,128(s2)
            cur = C[i * N + j];
    1c1e:	0100                	addi	s0,sp,128
            tmp += cur;
    1c20:	2a05                	jal	1d50 <core_bench_matrix+0x8>
    1c22:	04090003          	lb	zero,64(s2)
    1c26:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    1c28:	1305                	addi	t1,t1,-31
    1c2a:	08090003          	lb	zero,128(s2)
            tmp += cur;
    1c2e:	0100                	addi	s0,sp,128
                ret += 10;
    1c30:	0905                	addi	s2,s2,1
    1c32:	0306                	slli	t1,t1,0x1
                ret += (cur > prev) ? 1 : 0;
    1c34:	0901                	addi	s2,s2,0
    1c36:	0004                	0x4
            if (tmp > clipval)
    1c38:	0501                	addi	a0,a0,0
    1c3a:	00030617          	auipc	a2,0x30
                ret += 10;
    1c3e:	0009                	c.nop	2
        for (j = 0; j < N; j++)
    1c40:	0100                	addi	s0,sp,128
    1c42:	1305                	addi	t1,t1,-31
                ret += 10;
    1c44:	04090203          	lb	tp,64(s2)
                tmp = 0;
    1c48:	0100                	addi	s0,sp,128
    1c4a:	2a05                	jal	1d7a <core_bench_matrix+0x32>
            prev = cur;
    1c4c:	04097e03          	0x4097e03
            cur = C[i * N + j];
    1c50:	0100                	addi	s0,sp,128
    1c52:	2005                	jal	1c72 <matrix_test+0x53e>
        for (j = 0; j < N; j++)
    1c54:	08090003          	lb	zero,128(s2)
    1c58:	0100                	addi	s0,sp,128
    1c5a:	2a05                	jal	1d8a <core_bench_matrix+0x42>
    1c5c:	04090003          	lb	zero,64(s2)
    for (i = 0; i < N; i++)
    1c60:	0100                	addi	s0,sp,128
    1c62:	1305                	addi	t1,t1,-31
    1c64:	08090003          	lb	zero,128(s2)
    1c68:	0100                	addi	s0,sp,128
    1c6a:	0505                	addi	a0,a0,1
            cur = C[i * N + j];
    1c6c:	0306                	slli	t1,t1,0x1
    1c6e:	0902                	c.slli64	s2
    for (i = 0; i < N; i++)
    1c70:	0004                	0x4
    1c72:	0501                	addi	a0,a0,0
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1c74:	0619                	addi	a2,a2,6
    1c76:	09039b03          	lh	s6,144(t2)
    1c7a:	0000                	unimp
    1c7c:	0501                	addi	a0,a0,0
    1c7e:	0615                	addi	a2,a2,5
    for (i = 0; i < N; i++)
    1c80:	04090b03          	lb	s6,64(s2)
                tmp = 0;
    1c84:	0100                	addi	s0,sp,128
    1c86:	00090103          	lb	sp,0(s2)
        for (j = 0; j < N; j++)
    1c8a:	0100                	addi	s0,sp,128
            A[i * N + j] += val;
    1c8c:	00090103          	lb	sp,0(s2)
    1c90:	0100                	addi	s0,sp,128
    1c92:	1a05                	addi	s4,s4,-31
        for (j = 0; j < N; j++)
    1c94:	0306                	slli	t1,t1,0x1
    1c96:	0900                	addi	s0,sp,144
            A[i * N + j] += val;
    1c98:	0000                	unimp
    1c9a:	0501                	addi	a0,a0,0
    1c9c:	097f0317          	auipc	t1,0x97f0
        for (j = 0; j < N; j++)
    1ca0:	0004                	0x4
    1ca2:	0501                	addi	a0,a0,0
    1ca4:	031a                	slli	t1,t1,0x6
    1ca6:	0901                	addi	s2,s2,0
    for (i = 0; i < N; i++)
    1ca8:	0004                	0x4
    1caa:	0501                	addi	a0,a0,0
    1cac:	0611                	addi	a2,a2,4
    1cae:	04090403          	lb	s0,64(s2)
    1cb2:	0100                	addi	s0,sp,128
    1cb4:	1405                	addi	s0,s0,-31
    1cb6:	0306                	slli	t1,t1,0x1
}
    1cb8:	0900                	addi	s0,sp,144
    1cba:	0000                	unimp
    1cbc:	0501                	addi	a0,a0,0
    1cbe:	0615                	addi	a2,a2,5
    return crc;
    1cc0:	04090203          	lb	tp,64(s2)
}
    1cc4:	0100                	addi	s0,sp,128
    1cc6:	2005                	jal	1ce6 <matrix_test+0x5b2>
    1cc8:	0306                	slli	t1,t1,0x1
    1cca:	0900                	addi	s0,sp,144
    1ccc:	0000                	unimp
    1cce:	0501                	addi	a0,a0,0
    1cd0:	031a                	slli	t1,t1,0x6
    1cd2:	0904                	addi	s1,sp,144
    1cd4:	0004                	0x4
    1cd6:	0501                	addi	a0,a0,0
    1cd8:	09570313          	addi	t1,a4,149
    1cdc:	0004                	0x4
    1cde:	0501                	addi	a0,a0,0
    1ce0:	031e                	slli	t1,t1,0x7
    1ce2:	0900                	addi	s0,sp,144
    1ce4:	0004                	0x4
    1ce6:	0501                	addi	a0,a0,0
    1ce8:	032c                	addi	a1,sp,392
    1cea:	0900                	addi	s0,sp,144
    1cec:	0004                	0x4
    1cee:	0501                	addi	a0,a0,0
    return crc;
    1cf0:	0611                	addi	a2,a2,4
    1cf2:	04090403          	lb	s0,64(s2)
}
    1cf6:	0100                	addi	s0,sp,128
    1cf8:	1505                	addi	a0,a0,-31
    1cfa:	00090303          	lb	t1,0(s2)
            C[i * N + j] = 0;
    1cfe:	0100                	addi	s0,sp,128
    1d00:	00090103          	lb	sp,0(s2)
    1d04:	0100                	addi	s0,sp,128
    1d06:	00090103          	lb	sp,0(s2)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d0a:	0100                	addi	s0,sp,128
    1d0c:	1a05                	addi	s4,s4,-31
    1d0e:	0306                	slli	t1,t1,0x1
    1d10:	0900                	addi	s0,sp,144
    1d12:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d14:	0501                	addi	a0,a0,0
    1d16:	097f0317          	auipc	t1,0x97f0
    1d1a:	0008                	0x8
    1d1c:	0501                	addi	a0,a0,0
    1d1e:	0611                	addi	a2,a2,4
    1d20:	04091b03          	lh	s6,64(s2)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d24:	0100                	addi	s0,sp,128
    1d26:	1405                	addi	s0,s0,-31
    1d28:	0306                	slli	t1,t1,0x1
    1d2a:	0900                	addi	s0,sp,144
    1d2c:	0000                	unimp
    1d2e:	0501                	addi	a0,a0,0
    1d30:	031a                	slli	t1,t1,0x6
    1d32:	0906                	slli	s2,s2,0x1
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1d34:	0004                	0x4
    1d36:	0501                	addi	a0,a0,0
    1d38:	0615                	addi	a2,a2,5
    1d3a:	0c096d03          	0xc096d03
    1d3e:	0100                	addi	s0,sp,128
    1d40:	00090103          	lb	sp,0(s2)
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1d44:	0100                	addi	s0,sp,128
    1d46:	00090103          	lb	sp,0(s2)
{
    1d4a:	0100                	addi	s0,sp,128
    1d4c:	1a05                	addi	s4,s4,-31
    1d4e:	0306                	slli	t1,t1,0x1
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d50:	0900                	addi	s0,sp,144
    1d52:	0000                	unimp
{
    1d54:	0501                	addi	a0,a0,0
    1d56:	097f0317          	auipc	t1,0x97f0
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d5a:	0008                	0x8
    1d5c:	0501                	addi	a0,a0,0
    1d5e:	0957030f          	0x957030f
    1d62:	0008                	0x8
    1d64:	0501                	addi	a0,a0,0
    1d66:	0609                	addi	a2,a2,2
{
    1d68:	0900c403          	lbu	s0,144(ra)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d6c:	0004                	0x4
    1d6e:	0501                	addi	a0,a0,0
    1d70:	0614                	addi	a3,sp,768
    1d72:	00090003          	lb	zero,0(s2)
    1d76:	0100                	addi	s0,sp,128
}
    1d78:	0905                	addi	s2,s2,1
    1d7a:	0306                	slli	t1,t1,0x1
    1d7c:	00040903          	lb	s2,0(s0)
    1d80:	0501                	addi	a0,a0,0
    1d82:	060c                	addi	a1,sp,768
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1d84:	00090003          	lb	zero,0(s2)
    1d88:	0100                	addi	s0,sp,128
    1d8a:	0905                	addi	s2,s2,1
{
    1d8c:	0306                	slli	t1,t1,0x1
    1d8e:	0904                	addi	s1,sp,144
    1d90:	0004                	0x4
    1d92:	0501                	addi	a0,a0,0
    1d94:	0610                	addi	a2,sp,768
    1d96:	00090003          	lb	zero,0(s2)
    printf("start test42\n");
    1d9a:	0100                	addi	s0,sp,128
{
    1d9c:	0505                	addi	a0,a0,1
    1d9e:	0306                	slli	t1,t1,0x1
    printf("start test42\n");
    1da0:	7fad                	lui	t6,0xfffeb
    1da2:	0409                	addi	s0,s0,2
{
    1da4:	0100                	addi	s0,sp,128
    1da6:	0905                	addi	s2,s2,1
    1da8:	00090203          	lb	tp,0(s2)
    1dac:	0100                	addi	s0,sp,128
    1dae:	00090103          	lb	sp,0(s2)
    1db2:	0100                	addi	s0,sp,128
    1db4:	00090103          	lb	sp,0(s2)
    1db8:	0100                	addi	s0,sp,128
    1dba:	00090203          	lb	tp,0(s2)
    1dbe:	0100                	addi	s0,sp,128
    1dc0:	00090203          	lb	tp,0(s2)
    1dc4:	0100                	addi	s0,sp,128
    1dc6:	0f05                	addi	t5,t5,1
    1dc8:	0306                	slli	t1,t1,0x1
    1dca:	0900                	addi	s0,sp,144
    1dcc:	0000                	unimp
    1dce:	0501                	addi	a0,a0,0
    1dd0:	0609                	addi	a2,a2,2
    1dd2:	0900c403          	lbu	s0,144(ra)
    1dd6:	0004                	0x4
    1dd8:	0501                	addi	a0,a0,0
    1dda:	0614                	addi	a3,sp,768
    printf("start test42\n");
    1ddc:	00090003          	lb	zero,0(s2)
    1de0:	0100                	addi	s0,sp,128
    1de2:	0d05                	addi	s10,s10,1
    if (seed == 0)
    1de4:	0306                	slli	t1,t1,0x1
    1de6:	08097de3          	bgeu	s2,zero,2680 <core_bench_state+0x134>
        seed = 1;
    1dea:	0100                	addi	s0,sp,128
    1dec:	08090103          	lb	sp,128(s2)
    1df0:	0100                	addi	s0,sp,128
    1df2:	3005                	jal	1612 <core_list_init+0x242>
    1df4:	0306                	slli	t1,t1,0x1
    1df6:	0901                	addi	s2,s2,0
    1df8:	0000                	unimp
    1dfa:	0501                	addi	a0,a0,0
    while (j < blksize)
    1dfc:	0310                	addi	a2,sp,384
    1dfe:	0904                	addi	s1,sp,144
    1e00:	0004                	0x4
    1e02:	0501                	addi	a0,a0,0
    1e04:	0330                	addi	a2,sp,392
    1e06:	097c                	addi	a5,sp,156
        i++;
    1e08:	0004                	0x4
    1e0a:	0501                	addi	a0,a0,0
    1e0c:	0314                	addi	a3,sp,384
    1e0e:	097e                	slli	s2,s2,0x1f
        j = i * i * 2 * 4;
    1e10:	0004                	0x4
    1e12:	0501                	addi	a0,a0,0
    1e14:	0330                	addi	a2,sp,392
    1e16:	0902                	c.slli64	s2
    1e18:	0004                	0x4
    1e1a:	0501                	addi	a0,a0,0
    1e1c:	0324                	addi	s1,sp,392
    1e1e:	0901                	addi	s2,s2,0
    1e20:	0004                	0x4
    1e22:	0501                	addi	a0,a0,0
    while (j < blksize)
    1e24:	0977030b          	0x977030b
    B = A + N * N;
    1e28:	0004                	0x4
    1e2a:	0501                	addi	a0,a0,0
    1e2c:	0321                	addi	t1,t1,8
    1e2e:	0908                	addi	a0,sp,144
    1e30:	0004                	0x4
    1e32:	0501                	addi	a0,a0,0
    1e34:	031f 097f 0004      	0x4097f031f
    1e3a:	0501                	addi	a0,a0,0
    1e3c:	0609                	addi	a2,a2,2
    1e3e:	04090503          	lb	a0,64(s2)
    1e42:	0100                	addi	s0,sp,128
    1e44:	0b05                	addi	s6,s6,1
    1e46:	0306                	slli	t1,t1,0x1
    1e48:	0974                	addi	a3,sp,156
    1e4a:	0004                	0x4
    for (i = 0; i < N; i++)
    1e4c:	0501                	addi	a0,a0,0
    1e4e:	0301                	addi	t1,t1,0
    1e50:	0008091b          	0x8091b
            seed         = ((order * seed) % 65536);
    1e54:	0501                	addi	a0,a0,0
    1e56:	030d                	addi	t1,t1,3
    1e58:	0950                	addi	a2,sp,148
    1e5a:	001c                	0x1c
    B = A + N * N;
    1e5c:	0501                	addi	a0,a0,0
    1e5e:	030e                	slli	t1,t1,0x3
    1e60:	0901                	addi	s2,s2,0
    1e62:	0004                	0x4
    1e64:	0501                	addi	a0,a0,0
    1e66:	0308                	addi	a0,sp,384
    1e68:	040900cb          	0x40900cb
            seed         = ((order * seed) % 65536);
    1e6c:	0100                	addi	s0,sp,128
    1e6e:	0809                	addi	a6,a6,2
        seed = 1;
    1e70:	0000                	unimp
    1e72:	0101                	addi	sp,sp,0
        for (j = 0; j < N; j++)
    1e74:	0105                	addi	sp,sp,1
    1e76:	0500                	addi	s0,sp,640
            seed         = ((order * seed) % 65536);
    1e78:	0002                	c.slli64	zero
    1e7a:	0000                	unimp
    1e7c:	0300                	addi	s0,sp,384
    1e7e:	02d6                	slli	t0,t0,0x15
    1e80:	0501                	addi	a0,a0,0
    1e82:	0305                	addi	t1,t1,1
    1e84:	0901                	addi	s2,s2,0
    1e86:	0000                	unimp
    1e88:	0301                	addi	t1,t1,0
    1e8a:	0902                	c.slli64	s2
    1e8c:	0000                	unimp
    1e8e:	0501                	addi	a0,a0,0
    1e90:	060a                	slli	a2,a2,0x2
    1e92:	00090003          	lb	zero,0(s2)
    1e96:	0100                	addi	s0,sp,128
    1e98:	1405                	addi	s0,s0,-31
    1e9a:	00090003          	lb	zero,0(s2)
    1e9e:	0100                	addi	s0,sp,128
    1ea0:	0805                	addi	a6,a6,1
    1ea2:	00090003          	lb	zero,0(s2)
            val          = (seed + order);
    1ea6:	0100                	addi	s0,sp,128
    1ea8:	0505                	addi	a0,a0,1
    1eaa:	0306                	slli	t1,t1,0x1
    1eac:	0902                	c.slli64	s2
    1eae:	0000                	unimp
            val          = (val + order);
    1eb0:	0501                	addi	a0,a0,0
    1eb2:	060a                	slli	a2,a2,0x2
            B[i * N + j] = val;
    1eb4:	00090003          	lb	zero,0(s2)
            val          = matrix_clip(val, 1);
    1eb8:	0100                	addi	s0,sp,128
    1eba:	1505                	addi	a0,a0,-31
            A[i * N + j] = val;
    1ebc:	00090003          	lb	zero,0(s2)
    1ec0:	0100                	addi	s0,sp,128
    1ec2:	0805                	addi	a6,a6,1
        for (j = 0; j < N; j++)
    1ec4:	00090003          	lb	zero,0(s2)
            order++;
    1ec8:	0100                	addi	s0,sp,128
    1eca:	0505                	addi	a0,a0,1
    1ecc:	0306                	slli	t1,t1,0x1
    1ece:	00000903          	lb	s2,0(zero) # 0 <_start>
        for (j = 0; j < N; j++)
    1ed2:	0301                	addi	t1,t1,0
    for (i = 0; i < N; i++)
    1ed4:	0901                	addi	s2,s2,0
    1ed6:	0000                	unimp
    1ed8:	0501                	addi	a0,a0,0
    1eda:	0610                	addi	a2,sp,768
    1edc:	00090003          	lb	zero,0(s2)
    p->C = (MATRES *)align_mem(B + N * N);
    1ee0:	0100                	addi	s0,sp,128
    1ee2:	0505                	addi	a0,a0,1
    p->A = A;
    1ee4:	0306                	slli	t1,t1,0x1
    1ee6:	0901                	addi	s2,s2,0
}
    1ee8:	0000                	unimp
    1eea:	0501                	addi	a0,a0,0
    p->C = (MATRES *)align_mem(B + N * N);
    1eec:	0626                	slli	a2,a2,0x9
    1eee:	00090003          	lb	zero,0(s2)
    1ef2:	0100                	addi	s0,sp,128
    1ef4:	1605                	addi	a2,a2,-31
    1ef6:	097eb203          	0x97eb203
    1efa:	0000                	unimp
    1efc:	0301                	addi	t1,t1,0
    1efe:	0901                	addi	s2,s2,0
    p->N = N;
    1f00:	0000                	unimp
    1f02:	0501                	addi	a0,a0,0
}
    1f04:	0318                	addi	a4,sp,384
    1f06:	01cd                	addi	gp,gp,19
    p->B = B;
    1f08:	0009                	c.nop	2
    1f0a:	0100                	addi	s0,sp,128
    p->A = A;
    1f0c:	0505                	addi	a0,a0,1
    1f0e:	0306                	slli	t1,t1,0x1
    p->N = N;
    1f10:	0901                	addi	s2,s2,0
    1f12:	0000                	unimp
}
    1f14:	0501                	addi	a0,a0,0
    1f16:	0618                	addi	a4,sp,768
    1f18:	00090003          	lb	zero,0(s2)
    1f1c:	0100                	addi	s0,sp,128
    1f1e:	0505                	addi	a0,a0,1
    1f20:	0306                	slli	t1,t1,0x1
    1f22:	0902                	c.slli64	s2
    1f24:	0000                	unimp
    1f26:	0501                	addi	a0,a0,0
    1f28:	00030613          	mv	a2,t1
    1f2c:	0009                	c.nop	2
    1f2e:	0100                	addi	s0,sp,128
    1f30:	0505                	addi	a0,a0,1
    1f32:	0306                	slli	t1,t1,0x1
    1f34:	0901                	addi	s2,s2,0
    1f36:	0000                	unimp
    1f38:	0501                	addi	a0,a0,0
    1f3a:	0611                	addi	a2,a2,4
    1f3c:	00090003          	lb	zero,0(s2)
    1f40:	0100                	addi	s0,sp,128
    1f42:	0105                	addi	sp,sp,1
    1f44:	00090403          	lb	s0,0(s2)
    1f48:	0100                	addi	s0,sp,128
    1f4a:	1105                	addi	sp,sp,-31
    B = A + N * N;
    1f4c:	00097c03          	0x97c03
    1f50:	0100                	addi	s0,sp,128
    1f52:	0505                	addi	a0,a0,1
    1f54:	0306                	slli	t1,t1,0x1
    1f56:	0901                	addi	s2,s2,0
    1f58:	0000                	unimp
    1f5a:	0501                	addi	a0,a0,0
    N = i - 1;
    1f5c:	0616                	slli	a2,a2,0x5
    1f5e:	00090003          	lb	zero,0(s2)
    B = A + N * N;
    1f62:	0100                	addi	s0,sp,128
    1f64:	0505                	addi	a0,a0,1
    1f66:	0306                	slli	t1,t1,0x1
start_time(void) {
    1f68:	7ead                	lui	t4,0xfffeb
    1f6a:	0009                	c.nop	2
    1f6c:	0100                	addi	s0,sp,128
    1f6e:	1005                	c.nop	-31
    timer_0 = timer_getms();
    1f70:	0306                	slli	t1,t1,0x1
    1f72:	0900                	addi	s0,sp,144
    1f74:	0000                	unimp
    1f76:	0501                	addi	a0,a0,0
}
    1f78:	0605                	addi	a2,a2,1
    1f7a:	00090103          	lb	sp,0(s2)
    timer_0 = timer_getms();
    1f7e:	0100                	addi	s0,sp,128
    1f80:	1005                	c.nop	-31
    1f82:	0306                	slli	t1,t1,0x1
    1f84:	0900                	addi	s0,sp,144
    1f86:	0000                	unimp
}
    1f88:	0501                	addi	a0,a0,0
    1f8a:	0605                	addi	a2,a2,1
    1f8c:	0901d403          	lhu	s0,144(gp) # 10014c0 <__global_pointer$+0x90>
stop_time(void) {
    1f90:	0000                	unimp
    1f92:	0501                	addi	a0,a0,0
    1f94:	0601                	addi	a2,a2,0
    1f96:	00090103          	lb	sp,0(s2)
    timer_1 = timer_getms();
    1f9a:	0100                	addi	s0,sp,128
    1f9c:	1005                	c.nop	-31
    1f9e:	00097203          	0x97203
}
    1fa2:	0100                	addi	s0,sp,128
    timer_1 = timer_getms();
    1fa4:	0105                	addi	sp,sp,1
    1fa6:	00090e03          	lb	t3,0(s2)
    1faa:	0100                	addi	s0,sp,128
    1fac:	0009                	c.nop	2
    1fae:	0000                	unimp
}
    1fb0:	0101                	addi	sp,sp,0
    1fb2:	0105                	addi	sp,sp,1
    1fb4:	0500                	addi	s0,sp,640
    1fb6:	0002                	c.slli64	zero
    return timer_1 - timer_0;
    1fb8:	0000                	unimp
    1fba:	0300                	addi	s0,sp,384
    1fbc:	02fa                	slli	t0,t0,0x1e
    1fbe:	0501                	addi	a0,a0,0
    1fc0:	0305                	addi	t1,t1,1
    1fc2:	0901                	addi	s2,s2,0
    1fc4:	0000                	unimp
    1fc6:	0301                	addi	t1,t1,0
}
    1fc8:	0901                	addi	s2,s2,0
    1fca:	0000                	unimp
    1fcc:	0501                	addi	a0,a0,0
    1fce:	0610                	addi	a2,sp,768
time_in_secs(CORE_TICKS ticks) {
    1fd0:	00090003          	lb	zero,0(s2)
    1fd4:	0100                	addi	s0,sp,128
    1fd6:	0505                	addi	a0,a0,1
    return ((double)ticks) / 1000.0;
    1fd8:	0306                	slli	t1,t1,0x1
    1fda:	0902                	c.slli64	s2
    1fdc:	0000                	unimp
    1fde:	0501                	addi	a0,a0,0
    1fe0:	0610                	addi	a2,sp,768
    1fe2:	00090003          	lb	zero,0(s2)
    1fe6:	0100                	addi	s0,sp,128
    1fe8:	0505                	addi	a0,a0,1
    1fea:	0306                	slli	t1,t1,0x1
    1fec:	0901                	addi	s2,s2,0
    1fee:	0000                	unimp
    1ff0:	0501                	addi	a0,a0,0
    1ff2:	0601                	addi	a2,a2,0
}
    1ff4:	00097b03          	0x97b03
    1ff8:	0100                	addi	s0,sp,128
    1ffa:	1505                	addi	a0,a0,-31
    1ffc:	00090503          	lb	a0,0(s2)
portable_init(core_portable* p, int* argc, char* argv[]) {
    2000:	0100                	addi	s0,sp,128
    2002:	1c05                	addi	s8,s8,-31
    2004:	00090303          	lb	t1,0(s2)
    2008:	0100                	addi	s0,sp,128
    200a:	0105                	addi	sp,sp,1
    printf("start run!!\n");
    200c:	00090303          	lb	t1,0(s2)
    2010:	0100                	addi	s0,sp,128
    2012:	1005                	c.nop	-31
portable_init(core_portable* p, int* argc, char* argv[]) {
    2014:	00097a03          	0x97a03
    printf("start run!!\n");
    2018:	0100                	addi	s0,sp,128
    201a:	0505                	addi	a0,a0,1
    201c:	0306                	slli	t1,t1,0x1
    201e:	0901                	addi	s2,s2,0
    p->portable_id = 1;
    2020:	0000                	unimp
    2022:	0501                	addi	a0,a0,0
    2024:	0610                	addi	a2,sp,768
    2026:	00090003          	lb	zero,0(s2)
}
    202a:	0100                	addi	s0,sp,128
    202c:	0505                	addi	a0,a0,1
    202e:	0306                	slli	t1,t1,0x1
    2030:	0902                	c.slli64	s2
    2032:	0000                	unimp
    2034:	0501                	addi	a0,a0,0
    2036:	0610                	addi	a2,sp,768
    p->portable_id = 0;
    2038:	00090003          	lb	zero,0(s2)
}
    203c:	0100                	addi	s0,sp,128
    203e:	0505                	addi	a0,a0,1
{
    2040:	0306                	slli	t1,t1,0x1
    2042:	0901                	addi	s2,s2,0
    2044:	0000                	unimp
    2046:	0501                	addi	a0,a0,0
    2048:	0610                	addi	a2,sp,768
    204a:	00090003          	lb	zero,0(s2)
    printf("start test43\n");
    204e:	0100                	addi	s0,sp,128
    2050:	0505                	addi	a0,a0,1
    2052:	0306                	slli	t1,t1,0x1
{
    2054:	0901                	addi	s2,s2,0
    2056:	0000                	unimp
    2058:	0501                	addi	a0,a0,0
    205a:	0601                	addi	a2,a2,0
    205c:	00090103          	lb	sp,0(s2)
    2060:	0100                	addi	s0,sp,128
    2062:	0009                	c.nop	2
    2064:	0000                	unimp
    2066:	0101                	addi	sp,sp,0
    printf("start test43\n");
    2068:	0105                	addi	sp,sp,1
    206a:	0500                	addi	s0,sp,640
    206c:	0002                	c.slli64	zero
    206e:	0000                	unimp
    size--;
    2070:	0300                	addi	s0,sp,384
    2072:	0399                	addi	t2,t2,6
    while ((total + next + 1) < size)
    2074:	0501                	addi	a0,a0,0
    2076:	0305                	addi	t1,t1,1
    2078:	0901                	addi	s2,s2,0
    207a:	0000                	unimp
    207c:	0301                	addi	t1,t1,0
    207e:	0902                	c.slli64	s2
    2080:	0000                	unimp
    2082:	0501                	addi	a0,a0,0
    2084:	0628                	addi	a0,sp,776
    2086:	00090103          	lb	sp,0(s2)
        switch (seed & 0x7)
    208a:	0100                	addi	s0,sp,128
    208c:	1905                	addi	s2,s2,-31
    208e:	00097f03          	0x97f03
    2092:	0100                	addi	s0,sp,128
                buf  = intpat[(seed >> 3) & 0x3];
    2094:	0505                	addi	a0,a0,1
    2096:	0306                	slli	t1,t1,0x1
        switch (seed & 0x7)
    2098:	0901                	addi	s2,s2,0
    209a:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    209c:	0501                	addi	a0,a0,0
    209e:	0628                	addi	a0,sp,776
                buf  = scipat[(seed >> 3) & 0x3];
    20a0:	00090303          	lb	t1,0(s2)
                buf  = floatpat[(seed >> 3) & 0x3];
    20a4:	0100                	addi	s0,sp,128
    20a6:	1905                	addi	s2,s2,-31
    20a8:	00097d03          	0x97d03
        switch (seed & 0x7)
    20ac:	0100                	addi	s0,sp,128
    20ae:	0505                	addi	a0,a0,1
    20b0:	0306                	slli	t1,t1,0x1
    20b2:	0901                	addi	s2,s2,0
    ee_u32 total = 0, next = 0, i;
    20b4:	0000                	unimp
    20b6:	0501                	addi	a0,a0,0
                buf  = intpat[(seed >> 3) & 0x3];
    20b8:	0619                	addi	a2,a2,6
    20ba:	00090003          	lb	zero,0(s2)
        switch (seed & 0x7)
    20be:	0100                	addi	s0,sp,128
                buf  = errpat[(seed >> 3) & 0x3];
    20c0:	0505                	addi	a0,a0,1
    20c2:	0306                	slli	t1,t1,0x1
                next = 8;
    20c4:	0902                	c.slli64	s2
    20c6:	0000                	unimp
                buf  = scipat[(seed >> 3) & 0x3];
    20c8:	0501                	addi	a0,a0,0
    20ca:	0619                	addi	a2,a2,6
                buf  = floatpat[(seed >> 3) & 0x3];
    20cc:	00090003          	lb	zero,0(s2)
            *(p + total + i) = ',';
    20d0:	0100                	addi	s0,sp,128
    20d2:	0505                	addi	a0,a0,1
    20d4:	0306                	slli	t1,t1,0x1
    20d6:	0901                	addi	s2,s2,0
        switch (seed & 0x7)
    20d8:	0000                	unimp
    20da:	0501                	addi	a0,a0,0
    20dc:	0619                	addi	a2,a2,6
    20de:	00090003          	lb	zero,0(s2)
    20e2:	0100                	addi	s0,sp,128
    20e4:	0505                	addi	a0,a0,1
    20e6:	0306                	slli	t1,t1,0x1
                buf  = errpat[(seed >> 3) & 0x3];
    20e8:	0901                	addi	s2,s2,0
    20ea:	0000                	unimp
        switch (seed & 0x7)
    20ec:	0501                	addi	a0,a0,0
    20ee:	0601                	addi	a2,a2,0
                buf  = floatpat[(seed >> 3) & 0x3];
    20f0:	00090103          	lb	sp,0(s2)
    20f4:	0100                	addi	s0,sp,128
    20f6:	0009                	c.nop	2
    20f8:	0000                	unimp
    20fa:	0101                	addi	sp,sp,0
    while ((total + next + 1) < size)
    20fc:	0105                	addi	sp,sp,1
    20fe:	0500                	addi	s0,sp,640
                buf  = errpat[(seed >> 3) & 0x3];
    2100:	0002                	c.slli64	zero
    2102:	0000                	unimp
                break;
    2104:	0300                	addi	s0,sp,384
    2106:	03b4                	addi	a3,sp,456
    while ((total + next + 1) < size)
    2108:	0501                	addi	a0,a0,0
    210a:	0305                	addi	t1,t1,1
                next = 8;
    210c:	0901                	addi	s2,s2,0
    210e:	0000                	unimp
                *(p + total + i) = buf[i];
    2110:	0501                	addi	a0,a0,0
    2112:	060d                	addi	a2,a2,3
    2114:	00090003          	lb	zero,0(s2)
    2118:	0100                	addi	s0,sp,128
    211a:	0805                	addi	a6,a6,1
    211c:	00090003          	lb	zero,0(s2)
    2120:	0100                	addi	s0,sp,128
    2122:	0f05                	addi	t5,t5,1
    2124:	00090203          	lb	tp,0(s2)
    2128:	0100                	addi	s0,sp,128
    212a:	2305                	jal	264a <core_bench_state+0xfe>
    212c:	00090003          	lb	zero,0(s2)
    2130:	0100                	addi	s0,sp,128
    2132:	1505                	addi	a0,a0,-31
            for (i = 0; i < next; i++)
    2134:	00090003          	lb	zero,0(s2)
                *(p + total + i) = buf[i];
    2138:	0100                	addi	s0,sp,128
    213a:	2305                	jal	265a <core_bench_state+0x10e>
    213c:	0200                	addi	s0,sp,256
    213e:	0104                	addi	s1,sp,128
    2140:	00090003          	lb	zero,0(s2)
    2144:	0100                	addi	s0,sp,128
    2146:	1505                	addi	a0,a0,-31
    2148:	0200                	addi	s0,sp,256
    214a:	0104                	addi	s1,sp,128
    214c:	00090003          	lb	zero,0(s2)
            for (i = 0; i < next; i++)
    2150:	0100                	addi	s0,sp,128
    2152:	0d05                	addi	s10,s10,1
                *(p + total + i) = buf[i];
    2154:	0306                	slli	t1,t1,0x1
    2156:	0901                	addi	s2,s2,0
    2158:	0000                	unimp
    215a:	0501                	addi	a0,a0,0
            *(p + total + i) = ',';
    215c:	0612                	slli	a2,a2,0x4
    215e:	00090003          	lb	zero,0(s2)
    2162:	0100                	addi	s0,sp,128
    2164:	0f05                	addi	t5,t5,1
    2166:	00097f03          	0x97f03
        switch (seed & 0x7)
    216a:	0100                	addi	s0,sp,128
    216c:	0105                	addi	sp,sp,1
    216e:	00090a03          	lb	s4,0(s2)
    2172:	0100                	addi	s0,sp,128
    2174:	0f05                	addi	t5,t5,1
    2176:	00097c03          	0x97c03
    217a:	0100                	addi	s0,sp,128
    217c:	2405                	jal	239c <core_state_transition+0x180>
    217e:	00090003          	lb	zero,0(s2)
    2182:	0100                	addi	s0,sp,128
                buf  = intpat[(seed >> 3) & 0x3];
    2184:	3c05                	jal	1bb4 <matrix_test+0x480>
    2186:	00090003          	lb	zero,0(s2)
    218a:	0100                	addi	s0,sp,128
    218c:	2d05                	jal	27bc <crcu16>
    218e:	00090003          	lb	zero,0(s2)
    2192:	0100                	addi	s0,sp,128
    while ((total + next + 1) < size)
    2194:	1505                	addi	a0,a0,-31
    2196:	00090003          	lb	zero,0(s2)
                buf  = intpat[(seed >> 3) & 0x3];
    219a:	0100                	addi	s0,sp,128
                break;
    219c:	2405                	jal	23bc <core_state_transition+0x1a0>
    219e:	00090003          	lb	zero,0(s2)
    while ((total + next + 1) < size)
    21a2:	0100                	addi	s0,sp,128
                next = 4;
    21a4:	2d05                	jal	27d4 <crcu16+0x18>
    21a6:	00090003          	lb	zero,0(s2)
    21aa:	0100                	addi	s0,sp,128
                buf  = scipat[(seed >> 3) & 0x3];
    21ac:	1505                	addi	a0,a0,-31
    21ae:	00090003          	lb	zero,0(s2)
    21b2:	0100                	addi	s0,sp,128
    21b4:	0d05                	addi	s10,s10,1
    21b6:	0306                	slli	t1,t1,0x1
    while ((total + next + 1) < size)
    21b8:	0901                	addi	s2,s2,0
    21ba:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    21bc:	0501                	addi	a0,a0,0
    21be:	0612                	slli	a2,a2,0x4
                break;
    21c0:	00090003          	lb	zero,0(s2)
    while ((total + next + 1) < size)
    21c4:	0100                	addi	s0,sp,128
    21c6:	0f05                	addi	t5,t5,1
    while (total < size)
    21c8:	00097f03          	0x97f03
    21cc:	0100                	addi	s0,sp,128
    21ce:	0009                	c.nop	2
    21d0:	0000                	unimp
    21d2:	0101                	addi	sp,sp,0
}
    21d4:	0105                	addi	sp,sp,1
    21d6:	0500                	addi	s0,sp,640
    21d8:	0002                	c.slli64	zero
    21da:	0000                	unimp
    21dc:	0300                	addi	s0,sp,384
    21de:	03d2                	slli	t2,t2,0x14
    21e0:	0501                	addi	a0,a0,0
    21e2:	0305                	addi	t1,t1,1
    21e4:	0901                	addi	s2,s2,0
    21e6:	0000                	unimp
    21e8:	0301                	addi	t1,t1,0
    21ea:	0901                	addi	s2,s2,0
    21ec:	0000                	unimp
    21ee:	0501                	addi	a0,a0,0
    21f0:	0003060b          	0x3060b
                buf  = errpat[(seed >> 3) & 0x3];
    21f4:	0009                	c.nop	2
    21f6:	0100                	addi	s0,sp,128
    21f8:	1005                	c.nop	-31
    21fa:	00097f03          	0x97f03
}
    21fe:	0100                	addi	s0,sp,128
    2200:	0905                	addi	s2,s2,1
    2202:	0306                	slli	t1,t1,0x1
    2204:	00000903          	lb	s2,0(zero) # 0 <_start>
    2208:	0501                	addi	a0,a0,0
    220a:	0614                	addi	a3,sp,768
    220c:	00090003          	lb	zero,0(s2)
    2210:	0100                	addi	s0,sp,128
    2212:	0905                	addi	s2,s2,1
    ee_u32 total = 0, next = 0, i;
    2214:	0306                	slli	t1,t1,0x1
    2216:	0901                	addi	s2,s2,0
    2218:	0000                	unimp
    221a:	0501                	addi	a0,a0,0
    ee_u8 *         str = *instr;
    221c:	0614                	addi	a3,sp,768
    221e:	00090003          	lb	zero,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    2222:	0100                	addi	s0,sp,128
    2224:	0905                	addi	s2,s2,1
    2226:	0306                	slli	t1,t1,0x1
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	0901                	addi	s2,s2,0
    222a:	0000                	unimp
    222c:	0301                	addi	t1,t1,0
    222e:	0901                	addi	s2,s2,0
    2230:	0000                	unimp
    2232:	0501                	addi	a0,a0,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2234:	7b03060b          	0x7b03060b
    2238:	0009                	c.nop	2
    223a:	0100                	addi	s0,sp,128
    223c:	0505                	addi	a0,a0,1
    223e:	0306                	slli	t1,t1,0x1
    2240:	00000907          	0x907
    2244:	0501                	addi	a0,a0,0
    2246:	0601                	addi	a2,a2,0
    2248:	00090103          	lb	sp,0(s2)
                transition_count[CORE_START]++;
    224c:	0100                	addi	s0,sp,128
    224e:	0009                	c.nop	2
    for (; *str && state != CORE_INVALID; str++)
    2250:	0000                	unimp
    2252:	0101                	addi	sp,sp,0
    2254:	0105                	addi	sp,sp,1
    2256:	0500                	addi	s0,sp,640
        if (NEXT_SYMBOL == ',') /* end of this input */
    2258:	0002                	c.slli64	zero
    225a:	0000                	unimp
    225c:	0300                	addi	s0,sp,384
    225e:	03f5                	addi	t2,t2,29
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2260:	0501                	addi	a0,a0,0
    2262:	0305                	addi	t1,t1,1
                if (NEXT_SYMBOL == '.')
    2264:	0901                	addi	s2,s2,0
    2266:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2268:	0301                	addi	t1,t1,0
    226a:	0901                	addi	s2,s2,0
        if (NEXT_SYMBOL == ',') /* end of this input */
    226c:	0000                	unimp
    226e:	0301                	addi	t1,t1,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2270:	0902                	c.slli64	s2
    2272:	0000                	unimp
                if (NEXT_SYMBOL == '.')
    2274:	0301                	addi	t1,t1,0
    2276:	0902                	c.slli64	s2
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2278:	0000                	unimp
    227a:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    227c:	0309                	addi	t1,t1,2
    227e:	0902                	c.slli64	s2
        if (NEXT_SYMBOL == ',') /* end of this input */
    2280:	0000                	unimp
    2282:	0301                	addi	t1,t1,0
    2284:	0901                	addi	s2,s2,0
    2286:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2288:	0301                	addi	t1,t1,0
    228a:	0901                	addi	s2,s2,0
        if (NEXT_SYMBOL == ',') /* end of this input */
    228c:	0000                	unimp
    228e:	0301                	addi	t1,t1,0
    2290:	0902                	c.slli64	s2
    2292:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2294:	0301                	addi	t1,t1,0
    2296:	0902                	c.slli64	s2
    2298:	0000                	unimp
    229a:	0501                	addi	a0,a0,0
                if (NEXT_SYMBOL == '.')
    229c:	0003060f          	0x3060f
                    transition_count[CORE_INT]++;
    22a0:	0009                	c.nop	2
    22a2:	0100                	addi	s0,sp,128
    22a4:	0105                	addi	sp,sp,1
    22a6:	00097203          	0x97203
    22aa:	0100                	addi	s0,sp,128
    for (; *str && state != CORE_INVALID; str++)
    22ac:	0c05                	addi	s8,s8,1
    22ae:	00090403          	lb	s0,0(s2)
    22b2:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    22b4:	0900d103          	lhu	sp,144(ra)
    22b8:	0000                	unimp
    22ba:	0301                	addi	t1,t1,0
    22bc:	00097faf          	0x97faf
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22c0:	0100                	addi	s0,sp,128
    22c2:	1105                	addi	sp,sp,-31
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22c4:	00090803          	lb	a6,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    22c8:	0100                	addi	s0,sp,128
    22ca:	0e05                	addi	t3,t3,1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22cc:	00097e03          	0x97e03
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d0:	0100                	addi	s0,sp,128
    22d2:	00097f03          	0x97f03
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22d6:	0100                	addi	s0,sp,128
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    22d8:	0d05                	addi	s10,s10,1
    22da:	0306                	slli	t1,t1,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    22dc:	00000907          	0x907
                    transition_count[CORE_FLOAT]++;
    22e0:	0501                	addi	a0,a0,0
    22e2:	0614                	addi	a3,sp,768
    22e4:	00090003          	lb	zero,0(s2)
                    state = CORE_INVALID;
    22e8:	0100                	addi	s0,sp,128
    22ea:	0d05                	addi	s10,s10,1
                    transition_count[CORE_FLOAT]++;
    22ec:	0306                	slli	t1,t1,0x1
    22ee:	0902                	c.slli64	s2
    22f0:	0000                	unimp
    22f2:	0301                	addi	t1,t1,0
    *instr = str;
    22f4:	0901                	addi	s2,s2,0
    22f6:	0000                	unimp
}
    22f8:	0301                	addi	t1,t1,0
    22fa:	0901                	addi	s2,s2,0
    22fc:	0000                	unimp
    22fe:	0501                	addi	a0,a0,0
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2300:	0614                	addi	a3,sp,768
    2302:	00097c03          	0x97c03
    2306:	0100                	addi	s0,sp,128
    2308:	1305                	addi	t1,t1,-31
    230a:	00090303          	lb	t1,0(s2)
    230e:	0100                	addi	s0,sp,128
                else if (NEXT_SYMBOL == '.')
    2310:	1105                	addi	sp,sp,-31
    2312:	0306                	slli	t1,t1,0x1
    2314:	00000903          	lb	s2,0(zero) # 0 <_start>
                    transition_count[CORE_INVALID]++;
    2318:	0501                	addi	a0,a0,0
    231a:	01030613          	addi	a2,t1,16 # 97f1d66 <__freertos_irq_stack_top+0x87e1d66>
                transition_count[CORE_START]++;
    231e:	0009                	c.nop	2
                    state = CORE_INVALID;
    2320:	0100                	addi	s0,sp,128
    2322:	1605                	addi	a2,a2,-31
                    transition_count[CORE_INVALID]++;
    2324:	00097f03          	0x97f03
    2328:	0100                	addi	s0,sp,128
    232a:	1105                	addi	sp,sp,-31
    *instr = str;
    232c:	0306                	slli	t1,t1,0x1
    232e:	0901                	addi	s2,s2,0
}
    2330:	0000                	unimp
    2332:	0301                	addi	t1,t1,0
    2334:	0901                	addi	s2,s2,0
    2336:	0000                	unimp
                    transition_count[CORE_INT]++;
    2338:	0501                	addi	a0,a0,0
    233a:	0614                	addi	a3,sp,768
    233c:	00090003          	lb	zero,0(s2)
                    state = CORE_INVALID;
    2340:	0100                	addi	s0,sp,128
    2342:	0d05                	addi	s10,s10,1
                    transition_count[CORE_INT]++;
    2344:	0200                	addi	s0,sp,256
    2346:	0104                	addi	s1,sp,128
    2348:	00097c03          	0x97c03
    *instr = str;
    234c:	0100                	addi	s0,sp,128
    234e:	1a05                	addi	s4,s4,-31
}
    2350:	00093503          	0x93503
    2354:	0100                	addi	s0,sp,128
    2356:	1305                	addi	t1,t1,-31
                transition_count[CORE_START]++;
    2358:	00095703          	lhu	a4,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    235c:	0100                	addi	s0,sp,128
    235e:	1105                	addi	sp,sp,-31
    2360:	0306                	slli	t1,t1,0x1
    2362:	0904                	addi	s1,sp,144
        if (NEXT_SYMBOL == ',') /* end of this input */
    2364:	0000                	unimp
    2366:	0501                	addi	a0,a0,0
    2368:	0316                	slli	t1,t1,0x5
    236a:	00000907          	0x907
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    236e:	0501                	addi	a0,a0,0
    2370:	0619                	addi	a2,a2,6
    2372:	00090003          	lb	zero,0(s2)
    2376:	0100                	addi	s0,sp,128
    2378:	2505                	jal	2998 <crcu16+0x1dc>
    237a:	0200                	addi	s0,sp,256
    237c:	0104                	addi	s1,sp,128
    237e:	00090003          	lb	zero,0(s2)
    2382:	0100                	addi	s0,sp,128
                else if (NEXT_SYMBOL == '.')
    2384:	1605                	addi	a2,a2,-31
    2386:	0306                	slli	t1,t1,0x1
    2388:	00000907          	0x907
                    transition_count[CORE_S1]++;
    238c:	0501                	addi	a0,a0,0
    238e:	061a                	slli	a2,a2,0x6
                    state = CORE_INVALID;
    2390:	00090003          	lb	zero,0(s2)
    *instr = str;
    2394:	0100                	addi	s0,sp,128
    2396:	1905                	addi	s2,s2,-31
}
    2398:	00090003          	lb	zero,0(s2)
    239c:	0100                	addi	s0,sp,128
    239e:	1505                	addi	a0,a0,-31
                    transition_count[CORE_S1]++;
    23a0:	0306                	slli	t1,t1,0x1
    23a2:	0000090b          	0x90b
    for (; *str && state != CORE_INVALID; str++)
    23a6:	0301                	addi	t1,t1,0
    23a8:	0901                	addi	s2,s2,0
    23aa:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    23ac:	0301                	addi	t1,t1,0
    23ae:	0901                	addi	s2,s2,0
    23b0:	0000                	unimp
    23b2:	0501                	addi	a0,a0,0
    23b4:	061a                	slli	a2,a2,0x6
    23b6:	00090003          	lb	zero,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    23ba:	0100                	addi	s0,sp,128
    23bc:	1705                	addi	a4,a4,-31
    23be:	00097f03          	0x97f03
    23c2:	0100                	addi	s0,sp,128
                    transition_count[CORE_FLOAT]++;
    23c4:	1a05                	addi	s4,s4,-31
    23c6:	00090103          	lb	sp,0(s2)
    23ca:	0100                	addi	s0,sp,128
    23cc:	1105                	addi	sp,sp,-31
    23ce:	0306                	slli	t1,t1,0x1
    for (; *str && state != CORE_INVALID; str++)
    23d0:	0904                	addi	s1,sp,144
    23d2:	0000                	unimp
    23d4:	0501                	addi	a0,a0,0
    23d6:	0614                	addi	a3,sp,768
        if (NEXT_SYMBOL == ',') /* end of this input */
    23d8:	00090003          	lb	zero,0(s2)
    23dc:	0100                	addi	s0,sp,128
    23de:	1505                	addi	a0,a0,-31
    23e0:	0306                	slli	t1,t1,0x1
    23e2:	0902                	c.slli64	s2
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23e4:	0000                	unimp
    23e6:	0501                	addi	a0,a0,0
    23e8:	0620                	addi	s0,sp,776
    23ea:	00090003          	lb	zero,0(s2)
    23ee:	0100                	addi	s0,sp,128
    23f0:	1a05                	addi	s4,s4,-31
    23f2:	00090403          	lb	s0,0(s2)
                    transition_count[CORE_S2]++;
    23f6:	0100                	addi	s0,sp,128
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    23f8:	1305                	addi	t1,t1,-31
    23fa:	00095703          	lhu	a4,0(s2)
                    state = CORE_INVALID;
    23fe:	0100                	addi	s0,sp,128
    *instr = str;
    2400:	1e05                	addi	t3,t3,-31
    2402:	0200                	addi	s0,sp,256
}
    2404:	0104                	addi	s1,sp,128
    2406:	00090003          	lb	zero,0(s2)
    240a:	0100                	addi	s0,sp,128
    for (; *str && state != CORE_INVALID; str++)
    240c:	2c05                	jal	263c <core_bench_state+0xf0>
    240e:	0200                	addi	s0,sp,256
    2410:	0204                	addi	s1,sp,256
    2412:	00090003          	lb	zero,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2416:	0100                	addi	s0,sp,128
    2418:	1105                	addi	sp,sp,-31
    241a:	0306                	slli	t1,t1,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    241c:	0904                	addi	s1,sp,144
    241e:	0000                	unimp
    2420:	0501                	addi	a0,a0,0
    2422:	0315                	addi	t1,t1,5
    2424:	00000903          	lb	s2,0(zero) # 0 <_start>
    2428:	0301                	addi	t1,t1,0
    242a:	0901                	addi	s2,s2,0
    242c:	0000                	unimp
    242e:	0301                	addi	t1,t1,0
                    transition_count[CORE_EXPONENT]++;
    2430:	0901                	addi	s2,s2,0
    2432:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2434:	0501                	addi	a0,a0,0
    2436:	061a                	slli	a2,a2,0x6
    for (; *str && state != CORE_INVALID; str++)
    2438:	00090003          	lb	zero,0(s2)
    243c:	0100                	addi	s0,sp,128
    243e:	1705                	addi	a4,a4,-31
        if (NEXT_SYMBOL == ',') /* end of this input */
    2440:	00097f03          	0x97f03
    2444:	0100                	addi	s0,sp,128
    2446:	1105                	addi	sp,sp,-31
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2448:	0306                	slli	t1,t1,0x1
    244a:	0000091b          	0x91b
        if (NEXT_SYMBOL == ',') /* end of this input */
    244e:	0501                	addi	a0,a0,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2450:	0614                	addi	a3,sp,768
    2452:	00090003          	lb	zero,0(s2)
    2456:	0100                	addi	s0,sp,128
    2458:	1a05                	addi	s4,s4,-31
    245a:	00090603          	lb	a2,0(s2)
                    transition_count[CORE_INVALID]++;
    245e:	0100                	addi	s0,sp,128
    2460:	1505                	addi	a0,a0,-31
    2462:	0306                	slli	t1,t1,0x1
                    state = CORE_INVALID;
    2464:	096d                	addi	s2,s2,27
    2466:	0000                	unimp
                    transition_count[CORE_INVALID]++;
    2468:	0301                	addi	t1,t1,0
    246a:	0901                	addi	s2,s2,0
    246c:	0000                	unimp
    246e:	0301                	addi	t1,t1,0
    2470:	0901                	addi	s2,s2,0
    2472:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2474:	0501                	addi	a0,a0,0
    2476:	061a                	slli	a2,a2,0x6
        if (NEXT_SYMBOL == ',') /* end of this input */
    2478:	00090003          	lb	zero,0(s2)
    247c:	0100                	addi	s0,sp,128
    247e:	1705                	addi	a4,a4,-31
    for (; *str && state != CORE_INVALID; str++)
    2480:	00097f03          	0x97f03
        if (NEXT_SYMBOL == ',') /* end of this input */
    2484:	0100                	addi	s0,sp,128
    2486:	0f05                	addi	t5,t5,1
    2488:	00095703          	lhu	a4,0(s2)
    248c:	0100                	addi	s0,sp,128
    248e:	0905                	addi	s2,s2,1
    for (; *str && state != CORE_INVALID; str++)
    2490:	0306                	slli	t1,t1,0x1
    2492:	00c4                	addi	s1,sp,68
        if (NEXT_SYMBOL == ',') /* end of this input */
    2494:	0009                	c.nop	2
    2496:	0100                	addi	s0,sp,128
    2498:	1405                	addi	s0,s0,-31
    249a:	0306                	slli	t1,t1,0x1
    for (; *str && state != CORE_INVALID; str++)
    249c:	0900                	addi	s0,sp,144
    249e:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    24a0:	0501                	addi	a0,a0,0
    24a2:	0609                	addi	a2,a2,2
    24a4:	00090303          	lb	t1,0(s2)
    24a8:	0100                	addi	s0,sp,128
    24aa:	0c05                	addi	s8,s8,1
                transition_count[CORE_START]++;
    24ac:	0306                	slli	t1,t1,0x1
    24ae:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    24b0:	0000                	unimp
    24b2:	0501                	addi	a0,a0,0
    24b4:	0609                	addi	a2,a2,2
    24b6:	00090403          	lb	s0,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ba:	0100                	addi	s0,sp,128
    24bc:	1005                	c.nop	-31
    24be:	0306                	slli	t1,t1,0x1
    24c0:	0900                	addi	s0,sp,144
    24c2:	0000                	unimp
    24c4:	0501                	addi	a0,a0,0
    24c6:	0605                	addi	a2,a2,1
                    transition_count[CORE_S1]++;
    24c8:	097fad03          	lw	s10,151(t6) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
    for (; *str && state != CORE_INVALID; str++)
    24cc:	0000                	unimp
    24ce:	0501                	addi	a0,a0,0
    24d0:	0309                	addi	t1,t1,2
    24d2:	0902                	c.slli64	s2
        if (NEXT_SYMBOL == ',') /* end of this input */
    24d4:	0000                	unimp
    24d6:	0301                	addi	t1,t1,0
    24d8:	0901                	addi	s2,s2,0
    24da:	0000                	unimp
    24dc:	0301                	addi	t1,t1,0
    24de:	0901                	addi	s2,s2,0
    for (; *str && state != CORE_INVALID; str++)
    24e0:	0000                	unimp
    24e2:	0301                	addi	t1,t1,0
                    state = CORE_FLOAT;
    24e4:	0902                	c.slli64	s2
    24e6:	0000                	unimp
    24e8:	0301                	addi	t1,t1,0
    24ea:	0902                	c.slli64	s2
        if (NEXT_SYMBOL == ',') /* end of this input */
    24ec:	0000                	unimp
    24ee:	0501                	addi	a0,a0,0
            break;
    24f0:	0003060f          	0x3060f
    for (; *str && state != CORE_INVALID; str++)
    24f4:	0009                	c.nop	2
    24f6:	0100                	addi	s0,sp,128
    24f8:	0905                	addi	s2,s2,1
    24fa:	0306                	slli	t1,t1,0x1
    24fc:	00c4                	addi	s1,sp,68
    24fe:	0009                	c.nop	2
                    state = CORE_EXPONENT;
    2500:	0100                	addi	s0,sp,128
    2502:	1405                	addi	s0,s0,-31
    2504:	0306                	slli	t1,t1,0x1
    2506:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    2508:	0000                	unimp
    250a:	0501                	addi	a0,a0,0
                    state = CORE_S2;
    250c:	0301                	addi	t1,t1,0
    250e:	090c                	addi	a1,sp,144
    2510:	0000                	unimp
    2512:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    2514:	0609                	addi	a2,a2,2
    2516:	00097403          	0x97403
    enum CORE_STATE state = CORE_START;
    251a:	0100                	addi	s0,sp,128
    251c:	1405                	addi	s0,s0,-31
    251e:	0306                	slli	t1,t1,0x1
                    state = CORE_S1;
    2520:	0900                	addi	s0,sp,144
    2522:	0000                	unimp
    2524:	0901                	addi	s2,s2,0
    2526:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    2528:	0100                	addi	s0,sp,128
    252a:	8a01                	andi	a2,a2,0
    252c:	0011                	c.nop	4
    252e:	0300                	addi	s0,sp,384
    2530:	dd00                	sw	s0,56(a0)
    2532:	0001                	nop
    for (; *str && state != CORE_INVALID; str++)
    2534:	0100                	addi	s0,sp,128
    2536:	fb01                	bnez	a4,2446 <core_state_transition+0x22a>
                    state = CORE_FLOAT;
    2538:	0d0e                	slli	s10,s10,0x3
    253a:	0100                	addi	s0,sp,128
    253c:	0101                	addi	sp,sp,0
    253e:	0001                	nop
        if (NEXT_SYMBOL == ',') /* end of this input */
    2540:	0000                	unimp
    2542:	0001                	nop
    2544:	0100                	addi	s0,sp,128
    2546:	2f2e                	fld	ft10,200(sp)
    2548:	2f637273          	csrrci	tp,0x2f6,6
{
    254c:	65726f63          	bltu	tp,s7,2baa <crcu32+0x16e>
    2550:	616d                	addi	sp,sp,240
    2552:	6b72                	flw	fs6,28(sp)
    2554:	6500                	flw	fs0,8(a0)
    2556:	5c3a                	lw	s8,172(sp)
    2558:	7270                	flw	fa2,100(a2)
    255a:	6172676f          	jal	a4,29370 <_data_lma+0x1e1f8>
    255e:	666d                	lui	a2,0x1b
    2560:	6c69                	lui	s8,0x1a
    2562:	7365                	lui	t1,0xffff9
    2564:	3878                	fld	fa4,240(s0)
    2566:	5c36                	lw	s8,108(sp)
    2568:	6f6e                	flw	ft10,216(sp)
    256a:	6d72                	flw	fs10,28(sp)
    256c:	6c61                	lui	s8,0x18
    256e:	722d                	lui	tp,0xfffeb
    2570:	7369                	lui	t1,0xffffa
    2572:	6e2d7663          	bgeu	s10,sp,2c5e <crcu32+0x222>
    2576:	2d656e6f          	jal	t3,5884c <_data_lma+0x4d6d4>
    while (*p != 0)
    257a:	2d636367          	0x2d636367
    257e:	2e38                	fld	fa4,88(a2)
    2580:	2e32                	fld	ft8,264(sp)
    2582:	2d30                	fld	fa2,88(a0)
    ee_u8 *p = memblock;
    2584:	2e32                	fld	ft8,264(sp)
    2586:	2d32                	fld	fs10,264(sp)
    for (i = 0; i < NUM_CORE_STATES; i++)
    2588:	3032                	fld	ft0,296(sp)
    258a:	3931                	jal	21a6 <core_init_state+0x166>
    258c:	3530                	fld	fa2,104(a0)
    258e:	3132                	fld	ft2,296(sp)
    2590:	302d                	jal	1dba <core_init_matrix+0x2e>
    2592:	3030                	fld	fa2,96(s0)
    2594:	2d34                	fld	fa3,88(a0)
    2596:	366e6977          	0x366e6977
    259a:	5c34                	lw	a3,120(s0)
    259c:	6972                	flw	fs2,28(sp)
    259e:	2d766373          	csrrsi	t1,0x2d7,12
    25a2:	6f6e                	flw	ft10,216(sp)
    25a4:	656e                	flw	fa0,216(sp)
    25a6:	652d                	lui	a0,0xb
    25a8:	626d                	lui	tp,0x1b
    25aa:	6465                	lui	s0,0x19
    25ac:	695c                	flw	fa5,20(a0)
    25ae:	636e                	flw	ft6,216(sp)
    25b0:	756c                	flw	fa1,108(a0)
    25b2:	6564                	flw	fs1,76(a0)
    25b4:	735c                	flw	fa5,36(a4)
    25b6:	7379                	lui	t1,0xffffe
    25b8:	6500                	flw	fs0,8(a0)
    25ba:	5c3a                	lw	s8,172(sp)
    25bc:	7270                	flw	fa2,100(a2)
    25be:	6172676f          	jal	a4,293d4 <_data_lma+0x1e25c>
    25c2:	666d                	lui	a2,0x1b
{
    25c4:	6c69                	lui	s8,0x1a
    25c6:	7365                	lui	t1,0xffff9
    25c8:	3878                	fld	fa4,240(s0)
    25ca:	5c36                	lw	s8,108(sp)
    25cc:	6f6e                	flw	ft10,216(sp)
    25ce:	6d72                	flw	fs10,28(sp)
    25d0:	6c61                	lui	s8,0x18
    25d2:	722d                	lui	tp,0xfffeb
    25d4:	7369                	lui	t1,0xffffa
    25d6:	6e2d7663          	bgeu	s10,sp,2cc2 <crcu32+0x286>
    while (*p != 0)
    25da:	2d656e6f          	jal	t3,588b0 <_data_lma+0x4d738>
    25de:	2d636367          	0x2d636367
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    25e2:	2e38                	fld	fa4,88(a2)
    25e4:	2e32                	fld	ft8,264(sp)
    25e6:	2d30                	fld	fa2,88(a0)
    25e8:	2e32                	fld	ft8,264(sp)
    25ea:	2d32                	fld	fs10,264(sp)
    25ec:	3032                	fld	ft0,296(sp)
    25ee:	3931                	jal	220a <core_init_state+0x1ca>
        final_counts[fstate]++;
    25f0:	3530                	fld	fa2,104(a0)
    25f2:	3132                	fld	ft2,296(sp)
    25f4:	302d                	jal	1e1e <core_init_matrix+0x92>
    25f6:	3030                	fld	fa2,96(s0)
    25f8:	2d34                	fld	fa3,88(a0)
    25fa:	366e6977          	0x366e6977
    while (*p != 0)
    25fe:	5c34                	lw	a3,120(s0)
        final_counts[fstate]++;
    2600:	696c                	flw	fa1,84(a0)
    2602:	5c62                	lw	s8,56(sp)
    while (*p != 0)
    2604:	5c636367          	0x5c636367
        final_counts[fstate]++;
    2608:	6972                	flw	fs2,28(sp)
    260a:	2d766373          	csrrsi	t1,0x2d7,12
    260e:	6f6e                	flw	ft10,216(sp)
    while (*p != 0)
    2610:	656e                	flw	fa0,216(sp)
    2612:	652d                	lui	a0,0xb
    p = memblock;
    2614:	626d                	lui	tp,0x1b
    2616:	6465                	lui	s0,0x19
    while (p < (memblock + blksize))
    2618:	385c                	fld	fa5,176(s0)
    261a:	322e                	fld	ft4,232(sp)
    261c:	302e                	fld	ft0,232(sp)
    261e:	695c                	flw	fa5,20(a0)
    2620:	636e                	flw	ft6,216(sp)
    2622:	756c                	flw	fa1,108(a0)
        if (*p != ',')
    2624:	6564                	flw	fs1,76(a0)
    2626:	6500                	flw	fs0,8(a0)
{
    2628:	5c3a                	lw	s8,172(sp)
    262a:	7270                	flw	fa2,100(a2)
            *p ^= (ee_u8)seed1;
    262c:	6172676f          	jal	a4,29442 <_data_lma+0x1e2ca>
        if (*p != ',')
    2630:	666d                	lui	a2,0x1b
    2632:	6c69                	lui	s8,0x1a
            *p ^= (ee_u8)seed1;
    2634:	7365                	lui	t1,0xffff9
    2636:	3878                	fld	fa4,240(s0)
        p += step;
    2638:	5c36                	lw	s8,108(sp)
    263a:	6f6e                	flw	ft10,216(sp)
    263c:	6d72                	flw	fs10,28(sp)
    263e:	6c61                	lui	s8,0x18
    2640:	722d                	lui	tp,0xfffeb
    2642:	7369                	lui	t1,0xffffa
    while (p < (memblock + blksize))
    2644:	6e2d7663          	bgeu	s10,sp,2d30 <crcu32+0x2f4>
    2648:	2d656e6f          	jal	t3,5891e <_data_lma+0x4d7a6>
            *p ^= (ee_u8)seed1;
    264c:	2d636367          	0x2d636367
        if (*p != ',')
    2650:	2e38                	fld	fa4,88(a2)
    2652:	2e32                	fld	ft8,264(sp)
        p += step;
    2654:	2d30                	fld	fa2,88(a0)
    2656:	2e32                	fld	ft8,264(sp)
    2658:	2d32                	fld	fs10,264(sp)
    265a:	3032                	fld	ft0,296(sp)
    while (p < (memblock + blksize))
    265c:	3931                	jal	2278 <core_state_transition+0x5c>
    265e:	3530                	fld	fa2,104(a0)
    while (*p != 0)
    2660:	3132                	fld	ft2,296(sp)
    2662:	302d                	jal	1e8c <core_init_matrix+0x100>
    p = memblock;
    2664:	3030                	fld	fa2,96(s0)
    2666:	2d34                	fld	fa3,88(a0)
    while (*p != 0)
    2668:	366e6977          	0x366e6977
    266c:	5c34                	lw	a3,120(s0)
    266e:	6972                	flw	fs2,28(sp)
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2670:	2d766373          	csrrsi	t1,0x2d7,12
    2674:	6f6e                	flw	ft10,216(sp)
    2676:	656e                	flw	fa0,216(sp)
    2678:	652d                	lui	a0,0xb
    267a:	626d                	lui	tp,0x1b
    267c:	6465                	lui	s0,0x19
    267e:	695c                	flw	fa5,20(a0)
        final_counts[fstate]++;
    2680:	636e                	flw	ft6,216(sp)
    2682:	756c                	flw	fa1,108(a0)
    2684:	6564                	flw	fs1,76(a0)
    2686:	0000                	unimp
    2688:	65726f63          	bltu	tp,s7,2ce6 <crcu32+0x2aa>
    while (*p != 0)
    268c:	6d5f 6961 2e6e      	0x2e6e69616d5f
        final_counts[fstate]++;
    2692:	00010063          	beqz	sp,2692 <core_bench_state+0x146>
    while (*p != 0)
    2696:	6c00                	flw	fs0,24(s0)
        final_counts[fstate]++;
    2698:	2e6b636f          	jal	t1,b897e <_data_lma+0xad806>
    269c:	0068                	addi	a0,sp,12
    269e:	0002                	c.slli64	zero
    while (*p != 0)
    26a0:	5f00                	lw	s0,56(a4)
    26a2:	7974                	flw	fa3,116(a0)
    p = memblock;
    26a4:	6570                	flw	fa2,76(a0)
    26a6:	00682e73          	csrrs	t3,0x6,a6
    while (p < (memblock + blksize))
    26aa:	0002                	c.slli64	zero
        if (*p != ',')
    26ac:	7300                	flw	fs0,32(a4)
    26ae:	6474                	flw	fa3,76(s0)
    26b0:	6564                	flw	fs1,76(a0)
    26b2:	2e66                	fld	ft8,88(sp)
            *p ^= (ee_u8)seed2;
    26b4:	0068                	addi	a0,sp,12
    26b6:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a4>
        if (*p != ',')
    26ba:	6565                	lui	a0,0x19
            *p ^= (ee_u8)seed2;
    26bc:	746e                	flw	fs0,248(sp)
    26be:	682e                	flw	fa6,200(sp)
        p += step;
    26c0:	0200                	addi	s0,sp,256
    26c2:	0000                	unimp
    26c4:	7974                	flw	fa3,116(a0)
    26c6:	6570                	flw	fa2,76(a0)
    26c8:	00682e73          	csrrs	t3,0x6,a6
    while (p < (memblock + blksize))
    26cc:	0002                	c.slli64	zero
    26ce:	7400                	flw	fs0,40(s0)
    26d0:	6d69                	lui	s10,0x1a
    26d2:	2e65                	jal	2a8a <crcu32+0x4e>
    26d4:	0068                	addi	a0,sp,12
    26d6:	0004                	0x4
        crc = crcu32(final_counts[i], crc);
    26d8:	6300                	flw	fs0,0(a4)
    26da:	5f65726f          	jal	tp,59cd0 <_data_lma+0x4eb58>
    26de:	6f70                	flw	fa2,92(a4)
    26e0:	7472                	flw	fs0,60(sp)
    26e2:	656d                	lui	a0,0x1b
    26e4:	682e                	flw	fa6,200(sp)
    26e6:	0100                	addi	s0,sp,128
    26e8:	0000                	unimp
    26ea:	65726f63          	bltu	tp,s7,2d48 <crcu32+0x30c>
        crc = crcu32(track_counts[i], crc);
    26ee:	616d                	addi	sp,sp,240
    26f0:	6b72                	flw	fs6,28(sp)
    26f2:	682e                	flw	fa6,200(sp)
    26f4:	0100                	addi	s0,sp,128
    26f6:	0000                	unimp
    26f8:	69647473          	csrrci	s0,0x696,8
    26fc:	00682e6f          	jal	t3,84702 <_data_lma+0x7958a>
    2700:	0004                	0x4
    2702:	3c00                	fld	fs0,56(s0)
    for (i = 0; i < NUM_CORE_STATES; i++)
    2704:	7562                	flw	fa0,56(sp)
    2706:	6c69                	lui	s8,0x1a
}
    2708:	2d74                	fld	fa3,216(a0)
    270a:	6e69                	lui	t3,0x1a
    270c:	003e                	c.slli	zero,0xf
    270e:	0000                	unimp
    2710:	0000                	unimp
    2712:	0105                	addi	sp,sp,1
    2714:	0500                	addi	s0,sp,640
    2716:	8c02                	jr	s8
    2718:	0016                	c.slli	zero,0x5
    271a:	0300                	addi	s0,sp,384
    271c:	0115                	addi	sp,sp,5
    271e:	0505                	addi	a0,a0,1
    2720:	00090103          	lb	sp,0(s2)
    2724:	0100                	addi	s0,sp,128
    2726:	00090103          	lb	sp,0(s2)
    272a:	0100                	addi	s0,sp,128
    272c:	00090103          	lb	sp,0(s2)
    2730:	0100                	addi	s0,sp,128
    2732:	0105                	addi	sp,sp,1
        p += step;
    2734:	0306                	slli	t1,t1,0x1
    2736:	097d                	addi	s2,s2,31
    2738:	0000                	unimp
    273a:	0501                	addi	a0,a0,0
    while (p < (memblock + blksize))
    273c:	09040313          	addi	t1,s0,144 # 19090 <_data_lma+0xdf18>
    2740:	0008                	0x8
    2742:	0501                	addi	a0,a0,0
    while (p < (memblock + blksize))
    2744:	0301                	addi	t1,t1,0
    2746:	097c                	addi	a5,sp,156
    2748:	0004                	0x4
    274a:	0501                	addi	a0,a0,0
    274c:	031e                	slli	t1,t1,0x7
    274e:	0905                	addi	s2,s2,1
    while (*p != 0)
    2750:	000c                	0xc
    2752:	0501                	addi	a0,a0,0
    2754:	0301                	addi	t1,t1,0
    2756:	0008097b          	0x8097b
    switch (i)
    275a:	0501                	addi	a0,a0,0
    275c:	0605                	addi	a2,a2,1
    275e:	04090403          	lb	s0,64(s2)
    2762:	0100                	addi	s0,sp,128
    2764:	00090103          	lb	sp,0(s2)
    2768:	0100                	addi	s0,sp,128
    276a:	00090103          	lb	sp,0(s2)
    276e:	0100                	addi	s0,sp,128
    2770:	00090103          	lb	sp,0(s2)
    2774:	0100                	addi	s0,sp,128
    2776:	00090103          	lb	sp,0(s2)
            retval = seed5_volatile;
    277a:	0100                	addi	s0,sp,128
    277c:	00090203          	lb	tp,0(s2)
            break;
    2780:	0100                	addi	s0,sp,128
    2782:	0c05                	addi	s8,s8,1
            retval = seed1_volatile;
    2784:	0306                	slli	t1,t1,0x1
    2786:	0900                	addi	s0,sp,144
    2788:	0000                	unimp
    278a:	0501                	addi	a0,a0,0
            break;
    278c:	0305                	addi	t1,t1,1
    278e:	0900                	addi	s0,sp,144
            retval = seed2_volatile;
    2790:	0004                	0x4
    2792:	0501                	addi	a0,a0,0
    2794:	0609                	addi	a2,a2,2
    2796:	04090203          	lb	tp,64(s2)
            break;
    279a:	0100                	addi	s0,sp,128
            retval = seed3_volatile;
    279c:	1405                	addi	s0,s0,-31
    279e:	0306                	slli	t1,t1,0x1
    27a0:	0900                	addi	s0,sp,144
    27a2:	0000                	unimp
            break;
    27a4:	0501                	addi	a0,a0,0
    27a6:	0609                	addi	a2,a2,2
            retval = seed4_volatile;
    27a8:	10090103          	lb	sp,256(s2)
    27ac:	0100                	addi	s0,sp,128
    27ae:	1405                	addi	s0,s0,-31
            break;
    27b0:	0306                	slli	t1,t1,0x1
    27b2:	0900                	addi	s0,sp,144
            retval = 0;
    27b4:	0000                	unimp
    27b6:	0501                	addi	a0,a0,0
}
    27b8:	0312                	slli	t1,t1,0x4
    27ba:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27bc:	000c                	0xc
    27be:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)(newval), crc);
    27c0:	0609                	addi	a2,a2,2
    27c2:	04090103          	lb	sp,64(s2)
        if (x16 == 1)
    27c6:	0100                	addi	s0,sp,128
        data >>= 1;
    27c8:	1405                	addi	s0,s0,-31
    27ca:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    27cc:	0900                	addi	s0,sp,144
    27ce:	0000                	unimp
    27d0:	0501                	addi	a0,a0,0
    27d2:	0609                	addi	a2,a2,2
            crc |= 0x8000;
    27d4:	10090103          	lb	sp,256(s2)
    27d8:	0100                	addi	s0,sp,128
    27da:	1405                	addi	s0,s0,-31
    27dc:	0306                	slli	t1,t1,0x1
    27de:	0900                	addi	s0,sp,144
    27e0:	0000                	unimp
    27e2:	0501                	addi	a0,a0,0
    27e4:	0312                	slli	t1,t1,0x4
    27e6:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27e8:	000c                	0xc
    27ea:	0501                	addi	a0,a0,0
        if (x16 == 1)
    27ec:	0609                	addi	a2,a2,2
    27ee:	04090103          	lb	sp,64(s2)
    27f2:	0100                	addi	s0,sp,128
        data >>= 1;
    27f4:	0c05                	addi	s8,s8,1
    27f6:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    27f8:	0900                	addi	s0,sp,144
    27fa:	0000                	unimp
            crc |= 0x8000;
    27fc:	0501                	addi	a0,a0,0
    27fe:	0022                	c.slli	zero,0x8
    2800:	0402                	c.slli64	s0
    2802:	0302                	c.slli64	t1
    2804:	097a                	slli	s2,s2,0x1e
    2806:	0004                	0x4
    2808:	0501                	addi	a0,a0,0
    280a:	0005                	c.nop	1
    280c:	0402                	c.slli64	s0
    280e:	0302                	c.slli64	t1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2810:	0900                	addi	s0,sp,144
    2812:	0004                	0x4
        if (x16 == 1)
    2814:	0601                	addi	a2,a2,0
    2816:	04090903          	lb	s2,64(s2)
        data >>= 1;
    281a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    281c:	0105                	addi	sp,sp,1
    281e:	0306                	slli	t1,t1,0x1
    2820:	0901                	addi	s2,s2,0
    2822:	0000                	unimp
            crc |= 0x8000;
    2824:	0501                	addi	a0,a0,0
    2826:	060d                	addi	a2,a2,3
    2828:	1c097d03          	0x1c097d03
    282c:	0100                	addi	s0,sp,128
    282e:	1a05                	addi	s4,s4,-31
    2830:	0306                	slli	t1,t1,0x1
    2832:	0900                	addi	s0,sp,144
    2834:	0000                	unimp
    2836:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2838:	0305                	addi	t1,t1,1
    283a:	0979                	addi	s2,s2,30
        if (x16 == 1)
    283c:	0004                	0x4
    283e:	0501                	addi	a0,a0,0
        data >>= 1;
    2840:	0322                	slli	t1,t1,0x8
    2842:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2844:	0008                	0x8
    2846:	0901                	addi	s2,s2,0
    2848:	0008                	0x8
    284a:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    284c:	0501                	addi	a0,a0,0
    284e:	0001                	nop
    2850:	0205                	addi	tp,tp,1
    2852:	007c                	addi	a5,sp,12
    2854:	0000                	unimp
    2856:	0100d403          	lhu	s0,16(ra)
    285a:	0505                	addi	a0,a0,1
    285c:	00090603          	lb	a2,0(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2860:	0100                	addi	s0,sp,128
    2862:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    2866:	0100                	addi	s0,sp,128
        data >>= 1;
    2868:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    286c:	0100                	addi	s0,sp,128
    286e:	00090103          	lb	sp,0(s2)
    2872:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2874:	00090103          	lb	sp,0(s2)
    2878:	0100                	addi	s0,sp,128
    287a:	00090203          	lb	tp,0(s2)
    287e:	0100                	addi	s0,sp,128
    2880:	00090303          	lb	t1,0(s2)
    2884:	0100                	addi	s0,sp,128
    2886:	0105                	addi	sp,sp,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2888:	0306                	slli	t1,t1,0x1
    288a:	0971                	addi	s2,s2,28
        if (x16 == 1)
    288c:	0000                	unimp
    288e:	0501                	addi	a0,a0,0
        data >>= 1;
    2890:	0305                	addi	t1,t1,1
    2892:	0004090f          	0x4090f
        if (x16 == 1)
    2896:	0501                	addi	a0,a0,0
    2898:	0301                	addi	t1,t1,0
    289a:	0971                	addi	s2,s2,28
            crc |= 0x8000;
    289c:	0004                	0x4
    289e:	0501                	addi	a0,a0,0
    28a0:	0305                	addi	t1,t1,1
    28a2:	003c090f          	0x3c090f
    28a6:	0501                	addi	a0,a0,0
    28a8:	0301                	addi	t1,t1,0
    28aa:	0971                	addi	s2,s2,28
    28ac:	0010                	0x10
    28ae:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28b0:	0305                	addi	t1,t1,1
    28b2:	0004090f          	0x4090f
        if (x16 == 1)
    28b6:	0601                	addi	a2,a2,0
        data >>= 1;
    28b8:	10090203          	lb	tp,256(s2)
        if (x16 == 1)
    28bc:	0100                	addi	s0,sp,128
    28be:	10090103          	lb	sp,256(s2)
    28c2:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    28c4:	00090503          	lb	a0,0(s2)
    28c8:	0100                	addi	s0,sp,128
    28ca:	1d05                	addi	s10,s10,-31
    28cc:	0306                	slli	t1,t1,0x1
    28ce:	0900                	addi	s0,sp,144
    28d0:	0000                	unimp
    28d2:	0501                	addi	a0,a0,0
    28d4:	0605                	addi	a2,a2,1
    28d6:	10090103          	lb	sp,256(s2)
        if (x16 == 1)
    28da:	0100                	addi	s0,sp,128
    28dc:	1d05                	addi	s10,s10,-31
    28de:	0306                	slli	t1,t1,0x1
    28e0:	0900                	addi	s0,sp,144
    28e2:	0000                	unimp
            crc |= 0x8000;
    28e4:	0501                	addi	a0,a0,0
    28e6:	0605                	addi	a2,a2,1
    28e8:	10090103          	lb	sp,256(s2)
    28ec:	0100                	addi	s0,sp,128
    28ee:	1d05                	addi	s10,s10,-31
    28f0:	0306                	slli	t1,t1,0x1
    28f2:	0900                	addi	s0,sp,144
    28f4:	0000                	unimp
    28f6:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28f8:	0605                	addi	a2,a2,1
    28fa:	10090103          	lb	sp,256(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28fe:	0100                	addi	s0,sp,128
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2900:	1d05                	addi	s10,s10,-31
    2902:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2904:	0900                	addi	s0,sp,144
    2906:	0000                	unimp
        data >>= 1;
    2908:	0501                	addi	a0,a0,0
    290a:	0900031b          	0x900031b
        if (x16 == 1)
    290e:	000c                	0xc
    2910:	0501                	addi	a0,a0,0
    2912:	0605                	addi	a2,a2,1
            crc |= 0x8000;
    2914:	04090103          	lb	sp,64(s2)
    2918:	0100                	addi	s0,sp,128
    291a:	10090403          	lb	s0,256(s2)
    291e:	0100                	addi	s0,sp,128
    2920:	1805                	addi	a6,a6,-31
    2922:	0306                	slli	t1,t1,0x1
    2924:	0900                	addi	s0,sp,144
    2926:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2928:	0501                	addi	a0,a0,0
    292a:	0316                	slli	t1,t1,0x5
        if (x16 == 1)
    292c:	0900                	addi	s0,sp,144
    292e:	000c                	0xc
        data >>= 1;
    2930:	0501                	addi	a0,a0,0
    2932:	0605                	addi	a2,a2,1
        if (x16 == 1)
    2934:	04090103          	lb	sp,64(s2)
    2938:	0100                	addi	s0,sp,128
    293a:	10090103          	lb	sp,256(s2)
            crc |= 0x8000;
    293e:	0100                	addi	s0,sp,128
    2940:	0805                	addi	a6,a6,1
    2942:	0306                	slli	t1,t1,0x1
    2944:	0900                	addi	s0,sp,144
    2946:	0000                	unimp
    2948:	0501                	addi	a0,a0,0
    294a:	0605                	addi	a2,a2,1
    294c:	08090503          	lb	a0,128(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2950:	0100                	addi	s0,sp,128
    2952:	10090203          	lb	tp,256(s2)
        if (x16 == 1)
    2956:	0100                	addi	s0,sp,128
        data >>= 1;
    2958:	2105                	jal	2d78 <crcu32+0x33c>
    295a:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    295c:	0900                	addi	s0,sp,144
    295e:	0000                	unimp
    2960:	0501                	addi	a0,a0,0
    2962:	0308                	addi	a0,sp,384
            crc |= 0x8000;
    2964:	0900                	addi	s0,sp,144
    2966:	0018                	0x18
    2968:	0501                	addi	a0,a0,0
    296a:	0605                	addi	a2,a2,1
    296c:	08090703          	lb	a4,128(s2)
    2970:	0100                	addi	s0,sp,128
    2972:	10090103          	lb	sp,256(s2)
    2976:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2978:	2105                	jal	2d98 <crcu32+0x35c>
    297a:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    297c:	0900                	addi	s0,sp,144
    297e:	0000                	unimp
        data >>= 1;
    2980:	0501                	addi	a0,a0,0
    2982:	0308                	addi	a0,sp,384
        if (x16 == 1)
    2984:	0900                	addi	s0,sp,144
    2986:	0014                	0x14
    2988:	0501                	addi	a0,a0,0
    298a:	0321                	addi	t1,t1,8
            crc |= 0x8000;
    298c:	0900                	addi	s0,sp,144
    298e:	0004                	0x4
    2990:	0501                	addi	a0,a0,0
    2992:	0308                	addi	a0,sp,384
    2994:	0900                	addi	s0,sp,144
    2996:	0004                	0x4
    2998:	0501                	addi	a0,a0,0
    299a:	0605                	addi	a2,a2,1
    299c:	08092103          	lw	sp,128(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a0:	0100                	addi	s0,sp,128
    29a2:	2a05                	jal	2ad2 <crcu32+0x96>
        if (x16 == 1)
    29a4:	0306                	slli	t1,t1,0x1
    29a6:	0000090f          	0x90f
        data >>= 1;
    29aa:	0501                	addi	a0,a0,0
        if (x16 == 1)
    29ac:	031c                	addi	a5,sp,384
    29ae:	0971                	addi	s2,s2,28
    29b0:	0004                	0x4
    29b2:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    29b4:	031e                	slli	t1,t1,0x7
    29b6:	0014090f          	0x14090f
    29ba:	0501                	addi	a0,a0,0
    29bc:	031c                	addi	a5,sp,384
    29be:	0971                	addi	s2,s2,28
    29c0:	0004                	0x4
    29c2:	0501                	addi	a0,a0,0
    29c4:	031e                	slli	t1,t1,0x7
    29c6:	0004090f          	0x4090f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29ca:	0501                	addi	a0,a0,0
        if (x16 == 1)
    29cc:	0901031b          	0x901031b
        data >>= 1;
    29d0:	0004                	0x4
    29d2:	0501                	addi	a0,a0,0
        if (x16 == 1)
    29d4:	031c                	addi	a5,sp,384
    29d6:	0970                	addi	a2,sp,156
    29d8:	0004                	0x4
    29da:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    29dc:	0605                	addi	a2,a2,1
    29de:	08090103          	lb	sp,128(s2)
    29e2:	0100                	addi	s0,sp,128
    29e4:	00090103          	lb	sp,0(s2)
    29e8:	0100                	addi	s0,sp,128
    29ea:	00090103          	lb	sp,0(s2)
    29ee:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29f0:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    29f4:	0100                	addi	s0,sp,128
    29f6:	00090103          	lb	sp,0(s2)
        data >>= 1;
    29fa:	0100                	addi	s0,sp,128
        if (x16 == 1)
    29fc:	1c05                	addi	s8,s8,-31
    29fe:	0306                	slli	t1,t1,0x1
    2a00:	0900                	addi	s0,sp,144
    2a02:	0000                	unimp
            crc |= 0x8000;
    2a04:	0501                	addi	a0,a0,0
    2a06:	0605                	addi	a2,a2,1
    2a08:	04090103          	lb	sp,64(s2)
    2a0c:	0100                	addi	s0,sp,128
    2a0e:	0905                	addi	s2,s2,1
    2a10:	00090903          	lb	s2,0(s2)
    2a14:	0100                	addi	s0,sp,128
    2a16:	00090003          	lb	zero,0(s2)
        if (x16 == 1)
    2a1a:	0100                	addi	s0,sp,128
    2a1c:	1e05                	addi	t3,t3,-31
    2a1e:	0306                	slli	t1,t1,0x1
    2a20:	0900                	addi	s0,sp,144
    2a22:	0000                	unimp
            crc |= 0x8000;
    2a24:	0501                	addi	a0,a0,0
    2a26:	0901031b          	0x901031b
    2a2a:	0004                	0x4
    2a2c:	0501                	addi	a0,a0,0
    2a2e:	0609                	addi	a2,a2,2
    2a30:	04097f03          	0x4097f03
    2a34:	0100                	addi	s0,sp,128
    2a36:	0c05                	addi	s8,s8,1
}
    2a38:	0306                	slli	t1,t1,0x1
    2a3a:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a3c:	0000                	unimp
    2a3e:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)(newval), crc);
    2a40:	060d                	addi	a2,a2,3
    2a42:	04090103          	lb	sp,64(s2)
    return crcu16((ee_u16)newval, crc);
    2a46:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2a48:	1b05                	addi	s6,s6,-31
    2a4a:	0306                	slli	t1,t1,0x1
    return crcu16((ee_u16)newval, crc);
    2a4c:	0900                	addi	s0,sp,144
    2a4e:	0000                	unimp
        data >>= 1;
    2a50:	0501                	addi	a0,a0,0
    2a52:	0609                	addi	a2,a2,2
        if (x16 == 1)
    2a54:	0c090303          	lb	t1,192(s2)
    2a58:	0100                	addi	s0,sp,128
    2a5a:	2b05                	jal	2f8a <crc16+0x3e>
            crc |= 0x8000;
    2a5c:	0306                	slli	t1,t1,0x1
    2a5e:	0900                	addi	s0,sp,144
    2a60:	0000                	unimp
    2a62:	0501                	addi	a0,a0,0
    2a64:	0319                	addi	t1,t1,6
    2a66:	0900                	addi	s0,sp,144
    2a68:	000c                	0xc
    2a6a:	0501                	addi	a0,a0,0
    2a6c:	0609                	addi	a2,a2,2
    2a6e:	04090403          	lb	s0,64(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a72:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2a74:	00090103          	lb	sp,0(s2)
    2a78:	0100                	addi	s0,sp,128
    2a7a:	2b05                	jal	2faa <crc16+0x5e>
        data >>= 1;
    2a7c:	0306                	slli	t1,t1,0x1
    2a7e:	0000097b          	0x97b
        if (x16 == 1)
    2a82:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2a84:	0319                	addi	t1,t1,6
    2a86:	0900                	addi	s0,sp,144
    2a88:	0004                	0x4
    2a8a:	0501                	addi	a0,a0,0
    2a8c:	030c                	addi	a1,sp,384
    2a8e:	0905                	addi	s2,s2,1
    2a90:	0004                	0x4
    2a92:	0501                	addi	a0,a0,0
    2a94:	0609                	addi	a2,a2,2
    2a96:	08097f03          	0x8097f03
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a9a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2a9c:	00090103          	lb	sp,0(s2)
        data >>= 1;
    2aa0:	0100                	addi	s0,sp,128
    2aa2:	0c05                	addi	s8,s8,1
        if (x16 == 1)
    2aa4:	0306                	slli	t1,t1,0x1
    2aa6:	0900                	addi	s0,sp,144
    2aa8:	0000                	unimp
    2aaa:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2aac:	0609                	addi	a2,a2,2
    2aae:	04097f03          	0x4097f03
    2ab2:	0100                	addi	s0,sp,128
    2ab4:	00090103          	lb	sp,0(s2)
    2ab8:	0100                	addi	s0,sp,128
    2aba:	0c05                	addi	s8,s8,1
    2abc:	0306                	slli	t1,t1,0x1
    2abe:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac0:	0000                	unimp
    2ac2:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2ac4:	0609                	addi	a2,a2,2
    2ac6:	04090b03          	lb	s6,64(s2)
        data >>= 1;
    2aca:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2acc:	0c05                	addi	s8,s8,1
    2ace:	0306                	slli	t1,t1,0x1
    2ad0:	0900                	addi	s0,sp,144
    2ad2:	0000                	unimp
            crc |= 0x8000;
    2ad4:	0501                	addi	a0,a0,0
    2ad6:	0609                	addi	a2,a2,2
    2ad8:	04090503          	lb	a0,64(s2)
    2adc:	0100                	addi	s0,sp,128
    2ade:	0c05                	addi	s8,s8,1
    2ae0:	0306                	slli	t1,t1,0x1
    2ae2:	0900                	addi	s0,sp,144
    2ae4:	0000                	unimp
    2ae6:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ae8:	0609                	addi	a2,a2,2
    2aea:	04090803          	lb	a6,64(s2)
        if (x16 == 1)
    2aee:	0100                	addi	s0,sp,128
        data >>= 1;
    2af0:	1e05                	addi	t3,t3,-31
    2af2:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2af4:	0900                	addi	s0,sp,144
    2af6:	0000                	unimp
    2af8:	0501                	addi	a0,a0,0
    2afa:	030c                	addi	a1,sp,384
            crc |= 0x8000;
    2afc:	0900                	addi	s0,sp,144
    2afe:	0004                	0x4
    2b00:	0501                	addi	a0,a0,0
    2b02:	060d                	addi	a2,a2,3
    2b04:	04090203          	lb	tp,64(s2)
    2b08:	0100                	addi	s0,sp,128
    2b0a:	4705                	li	a4,1
    2b0c:	0306                	slli	t1,t1,0x1
    2b0e:	0901                	addi	s2,s2,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b10:	0008                	0x8
    2b12:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2b14:	030d                	addi	t1,t1,3
    2b16:	097f                	0x97f
        data >>= 1;
    2b18:	0004                	0x4
    2b1a:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2b1c:	0605                	addi	a2,a2,1
    2b1e:	20090603          	lb	a2,512(s2)
    2b22:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2b24:	1305                	addi	t1,t1,-31
    2b26:	0306                	slli	t1,t1,0x1
    2b28:	0900                	addi	s0,sp,144
    2b2a:	0000                	unimp
    2b2c:	0501                	addi	a0,a0,0
    2b2e:	0308                	addi	a0,sp,384
    2b30:	0900                	addi	s0,sp,144
    2b32:	0004                	0x4
    2b34:	0501                	addi	a0,a0,0
    2b36:	0609                	addi	a2,a2,2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b38:	04090203          	lb	tp,64(s2)
        if (x16 == 1)
    2b3c:	0100                	addi	s0,sp,128
    2b3e:	00090103          	lb	sp,0(s2)
        data >>= 1;
    2b42:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2b44:	00090103          	lb	sp,0(s2)
    2b48:	0100                	addi	s0,sp,128
    2b4a:	0f05                	addi	t5,t5,1
            crc |= 0x8000;
    2b4c:	0306                	slli	t1,t1,0x1
    2b4e:	0901                	addi	s2,s2,0
    2b50:	0000                	unimp
    2b52:	0501                	addi	a0,a0,0
    2b54:	031f 097f 000c      	0xc097f031f
    2b5a:	0501                	addi	a0,a0,0
    2b5c:	0609                	addi	a2,a2,2
    2b5e:	08090103          	lb	sp,128(s2)
        if (x16 == 1)
    2b62:	0100                	addi	s0,sp,128
    2b64:	1405                	addi	s0,s0,-31
    2b66:	0306                	slli	t1,t1,0x1
    2b68:	00097ebf 0d050100 	0xd05010000097ebf
            crc |= 0x8000;
    2b70:	0306                	slli	t1,t1,0x1
    2b72:	1c0901c3          	0x1c0901c3
    2b76:	0100                	addi	s0,sp,128
    2b78:	0c090103          	lb	sp,192(s2)
    2b7c:	0100                	addi	s0,sp,128
    2b7e:	2305                	jal	309e <crc16+0x152>
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b80:	0306                	slli	t1,t1,0x1
    2b82:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b84:	0000                	unimp
    2b86:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2b88:	030c                	addi	a1,sp,384
    2b8a:	7eba                	flw	ft9,172(sp)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b8c:	0409                	addi	s0,s0,2
    2b8e:	0100                	addi	s0,sp,128
        data >>= 1;
    2b90:	2305                	jal	30b0 <crc16+0x164>
    2b92:	0901c603          	lbu	a2,144(gp) # 10014c0 <__global_pointer$+0x90>
        if (x16 == 1)
    2b96:	0004                	0x4
    2b98:	0501                	addi	a0,a0,0
    2b9a:	060d                	addi	a2,a2,3
            crc |= 0x8000;
    2b9c:	10090103          	lb	sp,256(s2)
    2ba0:	0100                	addi	s0,sp,128
    2ba2:	08090103          	lb	sp,128(s2)
    2ba6:	0100                	addi	s0,sp,128
    2ba8:	0505                	addi	a0,a0,1
    2baa:	097eaf03          	lw	t5,151(t4) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
    2bae:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb0:	0301                	addi	t1,t1,0
    2bb2:	0901                	addi	s2,s2,0
        if (x16 == 1)
    2bb4:	0000                	unimp
    2bb6:	0301                	addi	t1,t1,0
        data >>= 1;
    2bb8:	0901                	addi	s2,s2,0
    2bba:	0000                	unimp
        if (x16 == 1)
    2bbc:	0301                	addi	t1,t1,0
    2bbe:	0901                	addi	s2,s2,0
    2bc0:	0000                	unimp
    2bc2:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2bc4:	00030613          	mv	a2,t1
    2bc8:	0009                	c.nop	2
    2bca:	0100                	addi	s0,sp,128
    2bcc:	0505                	addi	a0,a0,1
    2bce:	0306                	slli	t1,t1,0x1
    2bd0:	0901                	addi	s2,s2,0
    2bd2:	0004                	0x4
    2bd4:	0301                	addi	t1,t1,0
    2bd6:	0901                	addi	s2,s2,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bd8:	0000                	unimp
    2bda:	0301                	addi	t1,t1,0
        if (x16 == 1)
    2bdc:	0901                	addi	s2,s2,0
    2bde:	0000                	unimp
        data >>= 1;
    2be0:	0301                	addi	t1,t1,0
    2be2:	0901                	addi	s2,s2,0
        if (x16 == 1)
    2be4:	0000                	unimp
    2be6:	0501                	addi	a0,a0,0
    2be8:	061e                	slli	a2,a2,0x7
    2bea:	00097d03          	0x97d03
            crc |= 0x8000;
    2bee:	0100                	addi	s0,sp,128
    2bf0:	0505                	addi	a0,a0,1
    2bf2:	0306                	slli	t1,t1,0x1
    2bf4:	0905                	addi	s2,s2,1
    2bf6:	0008                	0x8
    2bf8:	0501                	addi	a0,a0,0
    2bfa:	0309                	addi	t1,t1,2
    2bfc:	0902                	c.slli64	s2
    2bfe:	0004                	0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c00:	0501                	addi	a0,a0,0
    2c02:	0614                	addi	a3,sp,768
        if (x16 == 1)
    2c04:	00090003          	lb	zero,0(s2)
        data >>= 1;
    2c08:	0100                	addi	s0,sp,128
    2c0a:	0905                	addi	s2,s2,1
        if (x16 == 1)
    2c0c:	0306                	slli	t1,t1,0x1
    2c0e:	0901                	addi	s2,s2,0
    2c10:	0010                	0x10
    2c12:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2c14:	0614                	addi	a3,sp,768
    2c16:	00090003          	lb	zero,0(s2)
    2c1a:	0100                	addi	s0,sp,128
    2c1c:	1205                	addi	tp,tp,-31
    2c1e:	0c090003          	lb	zero,192(s2)
    2c22:	0100                	addi	s0,sp,128
    2c24:	0905                	addi	s2,s2,1
    2c26:	0306                	slli	t1,t1,0x1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c28:	0901                	addi	s2,s2,0
    2c2a:	0004                	0x4
        if (x16 == 1)
    2c2c:	0501                	addi	a0,a0,0
    2c2e:	0614                	addi	a3,sp,768
        data >>= 1;
    2c30:	00090003          	lb	zero,0(s2)
        if (x16 == 1)
    2c34:	0100                	addi	s0,sp,128
    2c36:	0905                	addi	s2,s2,1
    2c38:	0306                	slli	t1,t1,0x1
    2c3a:	0901                	addi	s2,s2,0
            crc |= 0x8000;
    2c3c:	0010                	0x10
    2c3e:	0501                	addi	a0,a0,0
    2c40:	0614                	addi	a3,sp,768
    2c42:	00090003          	lb	zero,0(s2)
    2c46:	0100                	addi	s0,sp,128
    2c48:	1205                	addi	tp,tp,-31
    2c4a:	0c090003          	lb	zero,192(s2)
    2c4e:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c50:	0905                	addi	s2,s2,1
    2c52:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2c54:	0901                	addi	s2,s2,0
    2c56:	0004                	0x4
        data >>= 1;
    2c58:	0501                	addi	a0,a0,0
    2c5a:	060c                	addi	a1,sp,768
        if (x16 == 1)
    2c5c:	00090003          	lb	zero,0(s2)
    2c60:	0100                	addi	s0,sp,128
    2c62:	2205                	jal	2d82 <crcu32+0x346>
            crc |= 0x8000;
    2c64:	04097a03          	0x4097a03
    2c68:	0100                	addi	s0,sp,128
    2c6a:	0505                	addi	a0,a0,1
    2c6c:	04090003          	lb	zero,64(s2)
    2c70:	0100                	addi	s0,sp,128
    2c72:	0306                	slli	t1,t1,0x1
    2c74:	0909                	addi	s2,s2,2
    2c76:	0004                	0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c78:	0501                	addi	a0,a0,0
    2c7a:	030d                	addi	t1,t1,3
        if (x16 == 1)
    2c7c:	01c0                	addi	s0,sp,196
    2c7e:	0009                	c.nop	2
        data >>= 1;
    2c80:	0100                	addi	s0,sp,128
    2c82:	08090103          	lb	sp,128(s2)
        if (x16 == 1)
    2c86:	0100                	addi	s0,sp,128
    2c88:	1b05                	addi	s6,s6,-31
    2c8a:	0306                	slli	t1,t1,0x1
            crc |= 0x8000;
    2c8c:	0900                	addi	s0,sp,144
    2c8e:	0000                	unimp
    2c90:	0501                	addi	a0,a0,0
    2c92:	0979030f          	0x979030f
    2c96:	0010                	0x10
    2c98:	0501                	addi	a0,a0,0
    2c9a:	0907031b          	0x907031b
    2c9e:	0008                	0x8
        if (x16 == 1)
    2ca0:	0501                	addi	a0,a0,0
    2ca2:	0979030f          	0x979030f
    2ca6:	0008                	0x8
    2ca8:	0501                	addi	a0,a0,0
    2caa:	0609                	addi	a2,a2,2
            crc |= 0x8000;
    2cac:	0c090b03          	lb	s6,192(s2)
    2cb0:	0100                	addi	s0,sp,128
    2cb2:	1105                	addi	sp,sp,-31
    2cb4:	0306                	slli	t1,t1,0x1
    2cb6:	0900                	addi	s0,sp,144
    2cb8:	0000                	unimp
    2cba:	0501                	addi	a0,a0,0
    2cbc:	0609                	addi	a2,a2,2
    2cbe:	14090103          	lb	sp,320(s2)
    crc = crc16((ee_s16)(newval >> 16), crc);
    2cc2:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cc4:	0c05                	addi	s8,s8,1
    2cc6:	0306                	slli	t1,t1,0x1
    crc = crcu8((ee_u8)(newval), crc);
    2cc8:	0900                	addi	s0,sp,144
    2cca:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    2ccc:	0501                	addi	a0,a0,0
    2cce:	0315                	addi	t1,t1,5
        if (x16 == 1)
    2cd0:	00040903          	lb	s2,0(s0)
    return crcu16((ee_u16)newval, crc);
    2cd4:	0501                	addi	a0,a0,0
    2cd6:	0609                	addi	a2,a2,2
        data >>= 1;
    2cd8:	04090103          	lb	sp,64(s2)
        if (x16 == 1)
    2cdc:	0100                	addi	s0,sp,128
    2cde:	2905                	jal	310e <crc16+0x1c2>
    2ce0:	0306                	slli	t1,t1,0x1
    2ce2:	0900                	addi	s0,sp,144
            crc |= 0x8000;
    2ce4:	0000                	unimp
    2ce6:	0501                	addi	a0,a0,0
    2ce8:	031f 0900 000c      	0xc0900031f
    2cee:	0501                	addi	a0,a0,0
    2cf0:	0605                	addi	a2,a2,1
    2cf2:	14090303          	lb	t1,320(s2)
    2cf6:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cf8:	08091103          	lh	sp,128(s2)
        if (x16 == 1)
    2cfc:	0100                	addi	s0,sp,128
    2cfe:	20090203          	lb	tp,512(s2)
        data >>= 1;
    2d02:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d04:	08090103          	lb	sp,128(s2)
    2d08:	0100                	addi	s0,sp,128
    2d0a:	1205                	addi	tp,tp,-31
            crc |= 0x8000;
    2d0c:	0306                	slli	t1,t1,0x1
    2d0e:	0900                	addi	s0,sp,144
    2d10:	0000                	unimp
    2d12:	0501                	addi	a0,a0,0
    2d14:	0902030f          	0x902030f
    2d18:	0008                	0x8
    2d1a:	0501                	addi	a0,a0,0
    2d1c:	0312                	slli	t1,t1,0x4
    2d1e:	097e                	slli	s2,s2,0x1f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d20:	000c                	0xc
    2d22:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2d24:	0605                	addi	a2,a2,1
    2d26:	04090203          	lb	tp,64(s2)
        data >>= 1;
    2d2a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d2c:	0f05                	addi	t5,t5,1
    2d2e:	0306                	slli	t1,t1,0x1
    2d30:	0900                	addi	s0,sp,144
    2d32:	0000                	unimp
            crc |= 0x8000;
    2d34:	0501                	addi	a0,a0,0
    2d36:	0605                	addi	a2,a2,1
    2d38:	14090103          	lb	sp,320(s2)
    2d3c:	0100                	addi	s0,sp,128
    2d3e:	0f05                	addi	t5,t5,1
    2d40:	0306                	slli	t1,t1,0x1
    2d42:	0900                	addi	s0,sp,144
    2d44:	0000                	unimp
    2d46:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d48:	0605                	addi	a2,a2,1
    2d4a:	14090103          	lb	sp,320(s2)
        if (x16 == 1)
    2d4e:	0100                	addi	s0,sp,128
        data >>= 1;
    2d50:	0f05                	addi	t5,t5,1
    2d52:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2d54:	0900                	addi	s0,sp,144
    2d56:	0000                	unimp
    2d58:	0501                	addi	a0,a0,0
    2d5a:	0605                	addi	a2,a2,1
            crc |= 0x8000;
    2d5c:	14090103          	lb	sp,320(s2)
    2d60:	0100                	addi	s0,sp,128
    2d62:	0f05                	addi	t5,t5,1
    2d64:	0306                	slli	t1,t1,0x1
    2d66:	0900                	addi	s0,sp,144
    2d68:	0000                	unimp
    2d6a:	0501                	addi	a0,a0,0
    2d6c:	0605                	addi	a2,a2,1
    2d6e:	1c090203          	lb	tp,448(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d72:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d74:	0d05                	addi	s10,s10,1
    2d76:	20091103          	lh	sp,512(s2)
        data >>= 1;
    2d7a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d7c:	00090103          	lb	sp,0(s2)
    2d80:	0100                	addi	s0,sp,128
    2d82:	10090103          	lb	sp,256(s2)
            crc |= 0x8000;
    2d86:	0100                	addi	s0,sp,128
    2d88:	0505                	addi	a0,a0,1
    2d8a:	00090a03          	lb	s4,0(s2)
    2d8e:	0100                	addi	s0,sp,128
    2d90:	0d05                	addi	s10,s10,1
    2d92:	0306                	slli	t1,t1,0x1
    2d94:	0975                	addi	s2,s2,29
    2d96:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d98:	0501                	addi	a0,a0,0
    2d9a:	0316                	slli	t1,t1,0x5
        if (x16 == 1)
    2d9c:	097f                	0x97f
    2d9e:	000c                	0xc
        data >>= 1;
    2da0:	0501                	addi	a0,a0,0
    2da2:	030d                	addi	t1,t1,3
        if (x16 == 1)
    2da4:	0901                	addi	s2,s2,0
    2da6:	0004                	0x4
    2da8:	0501                	addi	a0,a0,0
    2daa:	0316                	slli	t1,t1,0x5
            crc |= 0x8000;
    2dac:	097f                	0x97f
    2dae:	000c                	0xc
    2db0:	0501                	addi	a0,a0,0
    2db2:	04020017          	auipc	zero,0x4020
    2db6:	0301                	addi	t1,t1,0
    2db8:	090e                	slli	s2,s2,0x3
    2dba:	0004                	0x4
    2dbc:	0501                	addi	a0,a0,0
    2dbe:	0009                	c.nop	2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2dc0:	0402                	c.slli64	s0
    2dc2:	0301                	addi	t1,t1,0
        if (x16 == 1)
    2dc4:	0900                	addi	s0,sp,144
    2dc6:	0004                	0x4
        data >>= 1;
    2dc8:	0501                	addi	a0,a0,0
    2dca:	031c                	addi	a5,sp,384
        if (x16 == 1)
    2dcc:	0902                	c.slli64	s2
    2dce:	0010                	0x10
    2dd0:	0501                	addi	a0,a0,0
    2dd2:	000d                	c.nop	3
            crc |= 0x8000;
    2dd4:	0402                	c.slli64	s0
    2dd6:	0602                	c.slli64	a2
    2dd8:	38091c03          	lh	s8,896(s2)
    2ddc:	0100                	addi	s0,sp,128
    2dde:	1a05                	addi	s4,s4,-31
    2de0:	0200                	addi	s0,sp,256
    2de2:	0204                	addi	s1,sp,256
    2de4:	0306                	slli	t1,t1,0x1
    2de6:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2de8:	0000                	unimp
    2dea:	0501                	addi	a0,a0,0
    2dec:	0030                	addi	a2,sp,8
    2dee:	0402                	c.slli64	s0
    2df0:	0302                	c.slli64	t1
    2df2:	0962                	slli	s2,s2,0x18
            crc |= 0x8000;
    2df4:	0004                	0x4
    2df6:	0501                	addi	a0,a0,0
    2df8:	001a                	c.slli	zero,0x6
    2dfa:	0402                	c.slli64	s0
    2dfc:	0302                	c.slli64	t1
    2dfe:	091e                	slli	s2,s2,0x7
    2e00:	0004                	0x4
    2e02:	0501                	addi	a0,a0,0
    2e04:	0009                	c.nop	2
    2e06:	0402                	c.slli64	s0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e08:	0302                	c.slli64	t1
    2e0a:	0962                	slli	s2,s2,0x18
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e0c:	0004                	0x4
    2e0e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2e10:	001a                	c.slli	zero,0x6
    2e12:	0402                	c.slli64	s0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2e14:	0302                	c.slli64	t1
    2e16:	091e                	slli	s2,s2,0x7
        data >>= 1;
    2e18:	0004                	0x4
    2e1a:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2e1c:	0030                	addi	a2,sp,8
    2e1e:	0402                	c.slli64	s0
    2e20:	0302                	c.slli64	t1
    2e22:	0962                	slli	s2,s2,0x18
            crc |= 0x8000;
    2e24:	0004                	0x4
    2e26:	0501                	addi	a0,a0,0
    2e28:	001a                	c.slli	zero,0x6
    2e2a:	0402                	c.slli64	s0
    2e2c:	0302                	c.slli64	t1
    2e2e:	091e                	slli	s2,s2,0x7
    2e30:	0004                	0x4
    2e32:	0501                	addi	a0,a0,0
    2e34:	0030                	addi	a2,sp,8
    2e36:	0402                	c.slli64	s0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e38:	0302                	c.slli64	t1
    2e3a:	0962                	slli	s2,s2,0x18
        if (x16 == 1)
    2e3c:	0004                	0x4
    2e3e:	0501                	addi	a0,a0,0
        data >>= 1;
    2e40:	001a                	c.slli	zero,0x6
    2e42:	0402                	c.slli64	s0
        if (x16 == 1)
    2e44:	0302                	c.slli64	t1
    2e46:	091e                	slli	s2,s2,0x7
    2e48:	0004                	0x4
    2e4a:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2e4c:	0009                	c.nop	2
    2e4e:	0402                	c.slli64	s0
    2e50:	0302                	c.slli64	t1
    2e52:	0962                	slli	s2,s2,0x18
    2e54:	0004                	0x4
    2e56:	0501                	addi	a0,a0,0
    2e58:	060d                	addi	a2,a2,3
    2e5a:	04090203          	lb	tp,64(s2)
    2e5e:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e60:	1c05                	addi	s8,s8,-31
    2e62:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2e64:	0900                	addi	s0,sp,144
    2e66:	0000                	unimp
        data >>= 1;
    2e68:	0501                	addi	a0,a0,0
    2e6a:	09010323          	sb	a6,134(sp)
        if (x16 == 1)
    2e6e:	0018                	0x18
    2e70:	0501                	addi	a0,a0,0
    2e72:	031c                	addi	a5,sp,384
            crc |= 0x8000;
    2e74:	097f                	0x97f
    2e76:	0004                	0x4
    2e78:	0501                	addi	a0,a0,0
    2e7a:	060d                	addi	a2,a2,3
    2e7c:	04090103          	lb	sp,64(s2)
    2e80:	0100                	addi	s0,sp,128
    2e82:	2305                	jal	33a2 <__udivdi3+0x172>
    2e84:	0306                	slli	t1,t1,0x1
    2e86:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e88:	0000                	unimp
    2e8a:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2e8c:	0310                	addi	a2,sp,384
    2e8e:	0900                	addi	s0,sp,144
        data >>= 1;
    2e90:	0004                	0x4
    2e92:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2e94:	031f 0901 0004      	0x40901031f
    2e9a:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2e9c:	0311                	addi	t1,t1,4
    2e9e:	0900                	addi	s0,sp,144
    2ea0:	0004                	0x4
    2ea2:	0601                	addi	a2,a2,0
    2ea4:	04090203          	lb	tp,64(s2)
    2ea8:	0100                	addi	s0,sp,128
    2eaa:	18090403          	lb	s0,384(s2)
    2eae:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb0:	1f05                	addi	t5,t5,-31
    2eb2:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2eb4:	0900                	addi	s0,sp,144
    2eb6:	0000                	unimp
        data >>= 1;
    2eb8:	0501                	addi	a0,a0,0
    2eba:	060d                	addi	a2,a2,3
        if (x16 == 1)
    2ebc:	0c090203          	lb	tp,192(s2)
    2ec0:	0100                	addi	s0,sp,128
    2ec2:	1c05                	addi	s8,s8,-31
            crc |= 0x8000;
    2ec4:	0306                	slli	t1,t1,0x1
    2ec6:	0900                	addi	s0,sp,144
    2ec8:	0000                	unimp
    2eca:	0501                	addi	a0,a0,0
    2ecc:	09000323          	sb	a6,134(zero) # 86 <main+0xa>
    2ed0:	0018                	0x18
    2ed2:	0501                	addi	a0,a0,0
    2ed4:	0310                	addi	a2,sp,384
    2ed6:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ed8:	0004                	0x4
    2eda:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2edc:	031f 0901 0004      	0x40901031f
        data >>= 1;
    2ee2:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2ee4:	0311                	addi	t1,t1,4
    2ee6:	0900                	addi	s0,sp,144
    2ee8:	0004                	0x4
    2eea:	0601                	addi	a2,a2,0
            crc |= 0x8000;
    2eec:	04090203          	lb	tp,64(s2)
    2ef0:	0100                	addi	s0,sp,128
    2ef2:	18090403          	lb	s0,384(s2)
    2ef6:	0100                	addi	s0,sp,128
    2ef8:	1f05                	addi	t5,t5,-31
    2efa:	0306                	slli	t1,t1,0x1
    2efc:	0900                	addi	s0,sp,144
    2efe:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f00:	0501                	addi	a0,a0,0
    2f02:	060d                	addi	a2,a2,3
        if (x16 == 1)
    2f04:	10090203          	lb	tp,256(s2)
        data >>= 1;
    2f08:	0100                	addi	s0,sp,128
    2f0a:	2305                	jal	342a <__udivdi3+0x1fa>
        if (x16 == 1)
    2f0c:	0306                	slli	t1,t1,0x1
    2f0e:	0900                	addi	s0,sp,144
    2f10:	0000                	unimp
    2f12:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2f14:	0310                	addi	a2,sp,384
    2f16:	0900                	addi	s0,sp,144
    2f18:	0004                	0x4
    2f1a:	0501                	addi	a0,a0,0
    2f1c:	031f 0901 0004      	0x40901031f
    2f22:	0501                	addi	a0,a0,0
    2f24:	0311                	addi	t1,t1,4
    2f26:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2f28:	0018                	0x18
    2f2a:	0501                	addi	a0,a0,0
    2f2c:	060d                	addi	a2,a2,3
    2f2e:	097f8503          	lb	a0,151(t6)
    2f32:	000c                	0xc
            crc |= 0x8000;
    2f34:	0501                	addi	a0,a0,0
    2f36:	061f 0003 0009      	0x90003061f
    2f3c:	0100                	addi	s0,sp,128
    2f3e:	1d05                	addi	s10,s10,-31
    2f40:	30090003          	lb	zero,768(s2)
    2f44:	0100                	addi	s0,sp,128
    2f46:	0905                	addi	s2,s2,1
}
    2f48:	0306                	slli	t1,t1,0x1
    2f4a:	00080903          	lb	s2,0(a6) # 17000 <_data_lma+0xbe88>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f4e:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)(newval), crc);
    2f50:	060c                	addi	a1,sp,768
    2f52:	00090003          	lb	zero,0(s2)
    return crcu16((ee_u16)newval, crc);
    2f56:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2f58:	0d05                	addi	s10,s10,1
    2f5a:	0306                	slli	t1,t1,0x1
    return crcu16((ee_u16)newval, crc);
    2f5c:	0902                	c.slli64	s2
    2f5e:	0004                	0x4
        data >>= 1;
    2f60:	0501                	addi	a0,a0,0
    2f62:	0638                	addi	a4,sp,776
        if (x16 == 1)
    2f64:	00090303          	lb	t1,0(s2)
    2f68:	0100                	addi	s0,sp,128
    2f6a:	0d05                	addi	s10,s10,1
            crc |= 0x8000;
    2f6c:	0c097d03          	0xc097d03
    2f70:	0100                	addi	s0,sp,128
    2f72:	3805                	jal	27a2 <get_seed_32+0x4a>
    2f74:	04090303          	lb	t1,64(s2)
    2f78:	0100                	addi	s0,sp,128
    2f7a:	1e05                	addi	t3,t3,-31
    2f7c:	08097f03          	0x8097f03
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2f80:	0100                	addi	s0,sp,128
    2f82:	2605                	jal	32a2 <__udivdi3+0x72>
        if (x16 == 1)
    2f84:	04090103          	lb	sp,64(s2)
    2f88:	0100                	addi	s0,sp,128
    2f8a:	0d05                	addi	s10,s10,1
        data >>= 1;
    2f8c:	04097d03          	0x4097d03
        if (x16 == 1)
    2f90:	0100                	addi	s0,sp,128
    2f92:	1e05                	addi	t3,t3,-31
            crc |= 0x8000;
    2f94:	04090203          	lb	tp,64(s2)
    2f98:	0100                	addi	s0,sp,128
    2f9a:	0d05                	addi	s10,s10,1
    2f9c:	04097e03          	0x4097e03
    2fa0:	0100                	addi	s0,sp,128
    2fa2:	4005                	c.li	zero,1
    2fa4:	04090303          	lb	t1,64(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fa8:	0100                	addi	s0,sp,128
    2faa:	0d05                	addi	s10,s10,1
        if (x16 == 1)
    2fac:	04097d03          	0x4097d03
        data >>= 1;
    2fb0:	0100                	addi	s0,sp,128
    2fb2:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2fb4:	00ce                	slli	ra,ra,0x13
    2fb6:	3009                	jal	27b8 <get_seed_32+0x60>
    2fb8:	0100                	addi	s0,sp,128
    2fba:	00090103          	lb	sp,0(s2)
            crc |= 0x8000;
    2fbe:	0100                	addi	s0,sp,128
    2fc0:	10090103          	lb	sp,256(s2)
    2fc4:	0100                	addi	s0,sp,128
    2fc6:	0505                	addi	a0,a0,1
    2fc8:	00090e03          	lb	t3,0(s2)
    2fcc:	0100                	addi	s0,sp,128
    2fce:	0d05                	addi	s10,s10,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2fd0:	0306                	slli	t1,t1,0x1
    2fd2:	0971                	addi	s2,s2,28
        if (x16 == 1)
    2fd4:	0000                	unimp
    2fd6:	0501                	addi	a0,a0,0
        data >>= 1;
    2fd8:	0316                	slli	t1,t1,0x5
    2fda:	097f                	0x97f
        if (x16 == 1)
    2fdc:	000c                	0xc
    2fde:	0501                	addi	a0,a0,0
    2fe0:	030d                	addi	t1,t1,3
    2fe2:	0901                	addi	s2,s2,0
            crc |= 0x8000;
    2fe4:	0004                	0x4
    2fe6:	0501                	addi	a0,a0,0
    2fe8:	0316                	slli	t1,t1,0x5
    2fea:	097f                	0x97f
    2fec:	000c                	0xc
    2fee:	0501                	addi	a0,a0,0
    2ff0:	0309                	addi	t1,t1,2
    2ff2:	7ee0                	flw	fs0,124(a3)
    2ff4:	0809                	addi	a6,a6,2
    2ff6:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ff8:	0306                	slli	t1,t1,0x1
    2ffa:	0902                	c.slli64	s2
        if (x16 == 1)
    2ffc:	000c                	0xc
    2ffe:	0301                	addi	t1,t1,0
        data >>= 1;
    3000:	0901                	addi	s2,s2,0
    3002:	0000                	unimp
        if (x16 == 1)
    3004:	0301                	addi	t1,t1,0
    3006:	0901                	addi	s2,s2,0
    3008:	0000                	unimp
    300a:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    300c:	061a                	slli	a2,a2,0x6
    300e:	00090003          	lb	zero,0(s2)
    3012:	0100                	addi	s0,sp,128
    3014:	1105                	addi	sp,sp,-31
    3016:	0306                	slli	t1,t1,0x1
    3018:	01c6                	slli	gp,gp,0x11
    301a:	1009                	c.nop	-30
    301c:	0100                	addi	s0,sp,128
    301e:	18090403          	lb	s0,384(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3022:	0100                	addi	s0,sp,128
        if (x16 == 1)
    3024:	1f05                	addi	t5,t5,-31
    3026:	0306                	slli	t1,t1,0x1
        data >>= 1;
    3028:	0900                	addi	s0,sp,144
    302a:	0000                	unimp
        if (x16 == 1)
    302c:	0501                	addi	a0,a0,0
    302e:	0305                	addi	t1,t1,1
    3030:	0945                	addi	s2,s2,17
    3032:	0018                	0x18
            crc |= 0x8000;
    3034:	0501                	addi	a0,a0,0
    3036:	0312                	slli	t1,t1,0x4
    3038:	04097ecb          	0x4097ecb
    303c:	0100                	addi	s0,sp,128
    303e:	0505                	addi	a0,a0,1
    3040:	0901b503          	0x901b503
    3044:	0004                	0x4
    3046:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3048:	0312                	slli	t1,t1,0x4
    304a:	04097ecb          	0x4097ecb
        if (x16 == 1)
    304e:	0100                	addi	s0,sp,128
        data >>= 1;
    3050:	0505                	addi	a0,a0,1
    3052:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    3054:	01f5                	addi	gp,gp,29
    3056:	0809                	addi	a6,a6,2
    3058:	0100                	addi	s0,sp,128
    305a:	1505                	addi	a0,a0,-31
            crc |= 0x8000;
    305c:	0306                	slli	t1,t1,0x1
    305e:	0900                	addi	s0,sp,144
    3060:	0000                	unimp
    3062:	0501                	addi	a0,a0,0
    3064:	0305                	addi	t1,t1,1
    3066:	0902                	c.slli64	s2
    3068:	0008                	0x8
    306a:	0501                	addi	a0,a0,0
    306c:	0312                	slli	t1,t1,0x4
    306e:	097e                	slli	s2,s2,0x1f
        if (x16 == 1)
    3070:	0004                	0x4
    3072:	0501                	addi	a0,a0,0
    3074:	0305                	addi	t1,t1,1
    3076:	0902                	c.slli64	s2
    3078:	0004                	0x4
    307a:	0301                	addi	t1,t1,0
            crc |= 0x8000;
    307c:	0901                	addi	s2,s2,0
    307e:	0010                	0x10
    3080:	0501                	addi	a0,a0,0
    3082:	09020333          	0x9020333
    3086:	0014                	0x14
    3088:	0501                	addi	a0,a0,0
    308a:	0305                	addi	t1,t1,1
    308c:	0900                	addi	s0,sp,144
    308e:	000c                	0xc
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    3090:	0501                	addi	a0,a0,0
    3092:	0309                	addi	t1,t1,2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3094:	0901                	addi	s2,s2,0
    3096:	0018                	0x18
        if (x16 == 1)
    3098:	0501                	addi	a0,a0,0
    309a:	0312                	slli	t1,t1,0x4
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    309c:	097a                	slli	s2,s2,0x1e
    309e:	000c                	0xc
        data >>= 1;
    30a0:	0501                	addi	a0,a0,0
    30a2:	0308                	addi	a0,sp,384
        if (x16 == 1)
    30a4:	0906                	slli	s2,s2,0x1
    30a6:	0004                	0x4
    30a8:	0501                	addi	a0,a0,0
    30aa:	0312                	slli	t1,t1,0x4
            crc |= 0x8000;
    30ac:	097a                	slli	s2,s2,0x1e
    30ae:	0008                	0x8
    30b0:	0501                	addi	a0,a0,0
    30b2:	0605                	addi	a2,a2,1
    30b4:	04090203          	lb	tp,64(s2)
    30b8:	0100                	addi	s0,sp,128
    30ba:	00090103          	lb	sp,0(s2)
    30be:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30c0:	00090203          	lb	tp,0(s2)
        if (x16 == 1)
    30c4:	0100                	addi	s0,sp,128
    30c6:	00090103          	lb	sp,0(s2)
        data >>= 1;
    30ca:	0100                	addi	s0,sp,128
        if (x16 == 1)
    30cc:	0805                	addi	a6,a6,1
    30ce:	0306                	slli	t1,t1,0x1
    30d0:	0900                	addi	s0,sp,144
    30d2:	0000                	unimp
            crc |= 0x8000;
    30d4:	0501                	addi	a0,a0,0
    30d6:	0609                	addi	a2,a2,2
    30d8:	0c090103          	lb	sp,192(s2)
    30dc:	0100                	addi	s0,sp,128
    30de:	2805                	jal	310e <crc16+0x1c2>
    30e0:	0306                	slli	t1,t1,0x1
    30e2:	0901                	addi	s2,s2,0
    30e4:	0000                	unimp
    30e6:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    30e8:	0309                	addi	t1,t1,2
    30ea:	097f                	0x97f
        if (x16 == 1)
    30ec:	0010                	0x10
    30ee:	0501                	addi	a0,a0,0
        data >>= 1;
    30f0:	0319                	addi	t1,t1,6
    30f2:	0902                	c.slli64	s2
        if (x16 == 1)
    30f4:	000c                	0xc
    30f6:	0501                	addi	a0,a0,0
    30f8:	0309                	addi	t1,t1,2
    30fa:	097e                	slli	s2,s2,0x1f
            crc |= 0x8000;
    30fc:	0004                	0x4
    30fe:	0501                	addi	a0,a0,0
    3100:	0319                	addi	t1,t1,6
    3102:	0902                	c.slli64	s2
    3104:	0004                	0x4
    3106:	0501                	addi	a0,a0,0
    3108:	0309                	addi	t1,t1,2
    310a:	097e                	slli	s2,s2,0x1f
    310c:	0008                	0x8
    310e:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3110:	0605                	addi	a2,a2,1
    3112:	30090a03          	lb	s4,768(s2)
        if (x16 == 1)
    3116:	0100                	addi	s0,sp,128
        data >>= 1;
    3118:	0905                	addi	s2,s2,1
    311a:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    311c:	0900                	addi	s0,sp,144
    311e:	0000                	unimp
    3120:	0501                	addi	a0,a0,0
    3122:	0308                	addi	a0,sp,384
            crc |= 0x8000;
    3124:	0900                	addi	s0,sp,144
    3126:	000c                	0xc
    3128:	0501                	addi	a0,a0,0
    312a:	0305                	addi	t1,t1,1
    312c:	00180907          	0x180907
    3130:	0301                	addi	t1,t1,0
    3132:	0902                	c.slli64	s2
    3134:	0008                	0x8
    3136:	0301                	addi	t1,t1,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3138:	0901                	addi	s2,s2,0
    313a:	0004                	0x4
        if (x16 == 1)
    313c:	0301                	addi	t1,t1,0
    313e:	097d                	addi	s2,s2,31
        data >>= 1;
    3140:	0004                	0x4
    3142:	0301                	addi	t1,t1,0
        if (x16 == 1)
    3144:	0902                	c.slli64	s2
    3146:	001c                	0x1c
    3148:	0301                	addi	t1,t1,0
    314a:	0901                	addi	s2,s2,0
            crc |= 0x8000;
    314c:	0014                	0x14
    314e:	0301                	addi	t1,t1,0
    3150:	0904                	addi	s1,sp,144
    3152:	0014                	0x14
    3154:	0301                	addi	t1,t1,0
    3156:	0902                	c.slli64	s2
    3158:	0018                	0x18
    315a:	0501                	addi	a0,a0,0
    315c:	031a                	slli	t1,t1,0x6
    315e:	0901                	addi	s2,s2,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    3160:	0014                	0x14
    3162:	0501                	addi	a0,a0,0
        if (x16 == 1)
    3164:	0315                	addi	t1,t1,5
    3166:	00040973          	0x40973
        data >>= 1;
    316a:	0501                	addi	a0,a0,0
        if (x16 == 1)
    316c:	0605                	addi	a2,a2,1
    316e:	08090303          	lb	t1,128(s2)
    3172:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    3174:	00090203          	lb	tp,0(s2)
    3178:	0100                	addi	s0,sp,128
    317a:	00090103          	lb	sp,0(s2)
    317e:	0100                	addi	s0,sp,128
    3180:	00090403          	lb	s0,0(s2)
    3184:	0100                	addi	s0,sp,128
    3186:	00090203          	lb	tp,0(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    318a:	0100                	addi	s0,sp,128
        if (x16 == 1)
    318c:	00090103          	lb	sp,0(s2)
        data >>= 1;
    3190:	0100                	addi	s0,sp,128
    3192:	1a05                	addi	s4,s4,-31
        if (x16 == 1)
    3194:	0306                	slli	t1,t1,0x1
    3196:	0900                	addi	s0,sp,144
    3198:	0000                	unimp
    319a:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    319c:	0308                	addi	a0,sp,384
    319e:	0900                	addi	s0,sp,144
    31a0:	0004                	0x4
    31a2:	0501                	addi	a0,a0,0
    31a4:	0309                	addi	t1,t1,2
    31a6:	0901                	addi	s2,s2,0
    31a8:	0004                	0x4
    31aa:	0501                	addi	a0,a0,0
    31ac:	0344                	addi	s1,sp,388
    31ae:	0901                	addi	s2,s2,0
        if (x16 == 1)
    31b0:	0008                	0x8
    31b2:	0501                	addi	a0,a0,0
    31b4:	0310                	addi	a2,sp,384
    31b6:	097f                	0x97f
    31b8:	0014                	0x14
    31ba:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    31bc:	0344                	addi	s1,sp,388
    31be:	0901                	addi	s2,s2,0
    31c0:	0008                	0x8
    31c2:	0501                	addi	a0,a0,0
    31c4:	000d                	c.nop	3
    31c6:	0402                	c.slli64	s0
    31c8:	00030603          	lb	a2,0(t1) # ffffa000 <__freertos_irq_stack_top+0xfefea000>
    31cc:	0809                	addi	a6,a6,2
    31ce:	0100                	addi	s0,sp,128
}
    31d0:	4405                	li	s0,1
    31d2:	0200                	addi	s0,sp,256
}
    31d4:	0304                	addi	s1,sp,384
    31d6:	0306                	slli	t1,t1,0x1
    31d8:	0900                	addi	s0,sp,144
    31da:	0000                	unimp
    unsigned lo = TIMER->lo;
    31dc:	0501                	addi	a0,a0,0
    31de:	000d                	c.nop	3
    31e0:	0402                	c.slli64	s0
    31e2:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    unsigned hi = TIMER->hi;
    31e6:	0018                	0x18
__UINT64_TYPE__ timer_getms() {
    31e8:	0501                	addi	a0,a0,0
    31ea:	0030                	addi	a2,sp,8
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31ec:	0402                	c.slli64	s0
    31ee:	097f0303          	lb	t1,151(t5)
    31f2:	0014                	0x14
__UINT64_TYPE__ timer_getms() {
    31f4:	0501                	addi	a0,a0,0
    31f6:	0009                	c.nop	2
    return (((__UINT64_TYPE__)hi << 32) | lo) / 1000;
    31f8:	0402                	c.slli64	s0
    31fa:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    31fe:	0004                	0x4
    3200:	0501                	addi	a0,a0,0
    3202:	0030                	addi	a2,sp,8
    3204:	0402                	c.slli64	s0
    3206:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    320a:	0004                	0x4
    for (int i = 0; i < size; i++) {
    320c:	0501                	addi	a0,a0,0
    320e:	0009                	c.nop	2
    3210:	0402                	c.slli64	s0
    3212:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    USART->write = c;
    3216:	0008                	0x8
    3218:	0501                	addi	a0,a0,0
    321a:	0605                	addi	a2,a2,1
    321c:	08090203          	lb	tp,128(s2)
    3220:	0100                	addi	s0,sp,128
    3222:	1a05                	addi	s4,s4,-31
    for (int i = 0; i < size; i++) {
    3224:	0306                	slli	t1,t1,0x1
    3226:	0900                	addi	s0,sp,144
    3228:	0000                	unimp
    322a:	0501                	addi	a0,a0,0
    322c:	0308                	addi	a0,sp,384
    322e:	0900                	addi	s0,sp,144
    3230:	0004                	0x4
    3232:	0501                	addi	a0,a0,0
    3234:	0309                	addi	t1,t1,2
    3236:	0901                	addi	s2,s2,0
    3238:	0004                	0x4
    323a:	0501                	addi	a0,a0,0
    323c:	0344                	addi	s1,sp,388
    323e:	0901                	addi	s2,s2,0
    3240:	0008                	0x8
    3242:	0501                	addi	a0,a0,0
    3244:	0310                	addi	a2,sp,384
    3246:	097f                	0x97f
    3248:	0014                	0x14
    324a:	0501                	addi	a0,a0,0
    324c:	0344                	addi	s1,sp,388
    324e:	0901                	addi	s2,s2,0
    3250:	0008                	0x8
    3252:	0501                	addi	a0,a0,0
    3254:	000d                	c.nop	3
    3256:	0402                	c.slli64	s0
    3258:	00030603          	lb	a2,0(t1)
    325c:	0809                	addi	a6,a6,2
    325e:	0100                	addi	s0,sp,128
    3260:	4405                	li	s0,1
    3262:	0200                	addi	s0,sp,256
    3264:	0304                	addi	s1,sp,384
    3266:	0306                	slli	t1,t1,0x1
    3268:	0900                	addi	s0,sp,144
    326a:	0000                	unimp
    326c:	0501                	addi	a0,a0,0
    326e:	000d                	c.nop	3
    3270:	0402                	c.slli64	s0
    3272:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    3276:	0018                	0x18
    3278:	0501                	addi	a0,a0,0
    327a:	0030                	addi	a2,sp,8
    327c:	0402                	c.slli64	s0
    327e:	097f0303          	lb	t1,151(t5)
    3282:	0014                	0x14
    3284:	0501                	addi	a0,a0,0
    3286:	0009                	c.nop	2
    3288:	0402                	c.slli64	s0
    328a:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    328e:	0004                	0x4
    3290:	0501                	addi	a0,a0,0
    3292:	0030                	addi	a2,sp,8
    3294:	0402                	c.slli64	s0
    3296:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    329a:	0004                	0x4
    329c:	0501                	addi	a0,a0,0
    329e:	0009                	c.nop	2
    32a0:	0402                	c.slli64	s0
    32a2:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    32a6:	0008                	0x8
    32a8:	0501                	addi	a0,a0,0
    32aa:	0605                	addi	a2,a2,1
    32ac:	08090203          	lb	tp,128(s2)
    32b0:	0100                	addi	s0,sp,128
    32b2:	1a05                	addi	s4,s4,-31
    32b4:	0306                	slli	t1,t1,0x1
    32b6:	0900                	addi	s0,sp,144
    32b8:	0000                	unimp
    32ba:	0501                	addi	a0,a0,0
    32bc:	0308                	addi	a0,sp,384
    32be:	0900                	addi	s0,sp,144
    32c0:	0004                	0x4
    32c2:	0501                	addi	a0,a0,0
    32c4:	0309                	addi	t1,t1,2
    32c6:	0901                	addi	s2,s2,0
    32c8:	0004                	0x4
    32ca:	0501                	addi	a0,a0,0
    32cc:	0344                	addi	s1,sp,388
    32ce:	0901                	addi	s2,s2,0
    32d0:	0008                	0x8
    32d2:	0501                	addi	a0,a0,0
    32d4:	0310                	addi	a2,sp,384
    32d6:	097f                	0x97f
    32d8:	0014                	0x14
    32da:	0501                	addi	a0,a0,0
    32dc:	0344                	addi	s1,sp,388
    32de:	0901                	addi	s2,s2,0
    32e0:	0008                	0x8
    32e2:	0501                	addi	a0,a0,0
    32e4:	000d                	c.nop	3
    32e6:	0402                	c.slli64	s0
    32e8:	00030603          	lb	a2,0(t1)
    32ec:	0809                	addi	a6,a6,2
    32ee:	0100                	addi	s0,sp,128
    32f0:	4405                	li	s0,1
    32f2:	0200                	addi	s0,sp,256
    32f4:	0304                	addi	s1,sp,384
    32f6:	0306                	slli	t1,t1,0x1
    32f8:	0900                	addi	s0,sp,144
    32fa:	0000                	unimp
    32fc:	0501                	addi	a0,a0,0
    32fe:	000d                	c.nop	3
    3300:	0402                	c.slli64	s0
    3302:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    3306:	0018                	0x18
    3308:	0501                	addi	a0,a0,0
    330a:	0030                	addi	a2,sp,8
    330c:	0402                	c.slli64	s0
    330e:	097f0303          	lb	t1,151(t5)
    3312:	0014                	0x14
    3314:	0501                	addi	a0,a0,0
    3316:	0009                	c.nop	2
    3318:	0402                	c.slli64	s0
    331a:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    331e:	0004                	0x4
    3320:	0501                	addi	a0,a0,0
    3322:	0030                	addi	a2,sp,8
    3324:	0402                	c.slli64	s0
    3326:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    332a:	0004                	0x4
    332c:	0501                	addi	a0,a0,0
    332e:	0009                	c.nop	2
    3330:	0402                	c.slli64	s0
    3332:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    3336:	0008                	0x8
    3338:	0501                	addi	a0,a0,0
    333a:	0340                	addi	s0,sp,388
    333c:	00040903          	lb	s2,0(s0)
    3340:	0501                	addi	a0,a0,0
    3342:	0305                	addi	t1,t1,1
    3344:	097f                	0x97f
    3346:	0004                	0x4
    3348:	0501                	addi	a0,a0,0
    334a:	0340                	addi	s0,sp,388
    334c:	0901                	addi	s2,s2,0
    334e:	0004                	0x4
    3350:	0501                	addi	a0,a0,0
    3352:	0305                	addi	t1,t1,1
    3354:	097f                	0x97f
    3356:	000c                	0xc
    3358:	0501                	addi	a0,a0,0
    335a:	0340                	addi	s0,sp,388
    335c:	0901                	addi	s2,s2,0
    335e:	0008                	0x8
    3360:	0501                	addi	a0,a0,0
    3362:	0305                	addi	t1,t1,1
    3364:	097f                	0x97f
    3366:	0008                	0x8
    3368:	0501                	addi	a0,a0,0
    336a:	0009                	c.nop	2
    336c:	0402                	c.slli64	s0
    336e:	01030603          	lb	a2,16(t1)
    3372:	0409                	addi	s0,s0,2
    3374:	0100                	addi	s0,sp,128
    3376:	4005                	c.li	zero,1
    3378:	0200                	addi	s0,sp,256
    337a:	0304                	addi	s1,sp,384
    337c:	0306                	slli	t1,t1,0x1
    337e:	0900                	addi	s0,sp,144
    3380:	0000                	unimp
    3382:	0501                	addi	a0,a0,0
    3384:	0009                	c.nop	2
    3386:	0402                	c.slli64	s0
    3388:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    338c:	0014                	0x14
    338e:	0501                	addi	a0,a0,0
    3390:	002c                	addi	a1,sp,8
    3392:	0402                	c.slli64	s0
    3394:	097f0303          	lb	t1,151(t5)
    3398:	0014                	0x14
    339a:	0501                	addi	a0,a0,0
    339c:	0005                	c.nop	1
    339e:	0402                	c.slli64	s0
    33a0:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    33a4:	0004                	0x4
    33a6:	0501                	addi	a0,a0,0
    33a8:	002c                	addi	a1,sp,8
    33aa:	0402                	c.slli64	s0
    33ac:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    33b0:	0004                	0x4
    33b2:	0501                	addi	a0,a0,0
    33b4:	0005                	c.nop	1
    33b6:	0402                	c.slli64	s0
    33b8:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    33bc:	0008                	0x8
    33be:	0601                	addi	a2,a2,0
    33c0:	04090203          	lb	tp,64(s2)
    33c4:	0100                	addi	s0,sp,128
    33c6:	0805                	addi	a6,a6,1
    33c8:	0306                	slli	t1,t1,0x1
    33ca:	0900                	addi	s0,sp,144
    33cc:	0000                	unimp
    33ce:	0501                	addi	a0,a0,0
    33d0:	0605                	addi	a2,a2,1
    33d2:	04091a03          	lh	s4,64(s2)
    33d6:	0100                	addi	s0,sp,128
    33d8:	0805                	addi	a6,a6,1
    33da:	0306                	slli	t1,t1,0x1
    33dc:	0900                	addi	s0,sp,144
    33de:	0000                	unimp
    33e0:	0501                	addi	a0,a0,0
    33e2:	0609                	addi	a2,a2,2
    33e4:	04090103          	lb	sp,64(s2)
    33e8:	0100                	addi	s0,sp,128
    33ea:	0505                	addi	a0,a0,1
    33ec:	10090103          	lb	sp,256(s2)
    33f0:	0100                	addi	s0,sp,128
    33f2:	00090a03          	lb	s4,0(s2)
    33f6:	0100                	addi	s0,sp,128
    33f8:	0c090203          	lb	tp,192(s2)
    33fc:	0100                	addi	s0,sp,128
    33fe:	0105                	addi	sp,sp,1
    3400:	0306                	slli	t1,t1,0x1
    3402:	0901                	addi	s2,s2,0
    3404:	0000                	unimp
    3406:	0501                	addi	a0,a0,0
    3408:	0611                	addi	a2,a2,4
    340a:	097e9a03          	lh	s4,151(t4)
    340e:	0044                	addi	s1,sp,4
    3410:	0501                	addi	a0,a0,0
    3412:	0615                	addi	a2,a2,5
    3414:	00090103          	lb	sp,0(s2)
    3418:	0100                	addi	s0,sp,128
    341a:	0d05                	addi	s10,s10,1
    341c:	0306                	slli	t1,t1,0x1
    341e:	0901                	addi	s2,s2,0
    3420:	001c                	0x1c
    3422:	0501                	addi	a0,a0,0
    3424:	060e                	slli	a2,a2,0x3
    3426:	00090003          	lb	zero,0(s2)
    342a:	0100                	addi	s0,sp,128
    342c:	0905                	addi	s2,s2,1
    342e:	0306                	slli	t1,t1,0x1
    3430:	097a                	slli	s2,s2,0x1e
    3432:	0004                	0x4
    3434:	0301                	addi	t1,t1,0
    3436:	0901                	addi	s2,s2,0
    3438:	0000                	unimp
    343a:	0501                	addi	a0,a0,0
    343c:	060c                	addi	a1,sp,768
    343e:	00090003          	lb	zero,0(s2)
    3442:	0100                	addi	s0,sp,128
    3444:	1105                	addi	sp,sp,-31
    3446:	0306                	slli	t1,t1,0x1
    3448:	00080903          	lb	s2,0(a6)
    344c:	0501                	addi	a0,a0,0
    344e:	064c                	addi	a1,sp,772
    3450:	00090103          	lb	sp,0(s2)
    3454:	0100                	addi	s0,sp,128
    3456:	3a05                	jal	2d86 <crcu32+0x34a>
    3458:	10090003          	lb	zero,256(s2)
    345c:	0100                	addi	s0,sp,128
    345e:	1505                	addi	a0,a0,-31
    3460:	08090003          	lb	zero,128(s2)
    3464:	0100                	addi	s0,sp,128
    3466:	0d05                	addi	s10,s10,1
    3468:	0306                	slli	t1,t1,0x1
    346a:	0901                	addi	s2,s2,0
    346c:	0004                	0x4
    346e:	0501                	addi	a0,a0,0
    3470:	0309                	addi	t1,t1,2
    3472:	0906                	slli	s2,s2,0x1
    3474:	0000                	unimp
    3476:	0501                	addi	a0,a0,0
    3478:	060c                	addi	a1,sp,768
    347a:	00090003          	lb	zero,0(s2)
    347e:	0100                	addi	s0,sp,128
    3480:	1105                	addi	sp,sp,-31
    3482:	0306                	slli	t1,t1,0x1
    3484:	0978                	addi	a4,sp,156
    3486:	0008                	0x8
    3488:	0501                	addi	a0,a0,0
    348a:	064c                	addi	a1,sp,772
    348c:	00090103          	lb	sp,0(s2)
    3490:	0100                	addi	s0,sp,128
    3492:	3a05                	jal	2dc2 <crcu32+0x386>
    3494:	10090003          	lb	zero,256(s2)
    3498:	0100                	addi	s0,sp,128
    349a:	1505                	addi	a0,a0,-31
    349c:	08090003          	lb	zero,128(s2)
    34a0:	0100                	addi	s0,sp,128
    34a2:	0e05                	addi	t3,t3,1
    34a4:	14090103          	lb	sp,320(s2)
    34a8:	0100                	addi	s0,sp,128
    34aa:	1505                	addi	a0,a0,-31
    34ac:	08097f03          	0x8097f03
    34b0:	0100                	addi	s0,sp,128
    34b2:	0d05                	addi	s10,s10,1
    34b4:	0306                	slli	t1,t1,0x1
    34b6:	0901                	addi	s2,s2,0
    34b8:	0008                	0x8
    34ba:	0501                	addi	a0,a0,0
    34bc:	060e                	slli	a2,a2,0x3
    34be:	00090003          	lb	zero,0(s2)
    34c2:	0100                	addi	s0,sp,128
    34c4:	0905                	addi	s2,s2,1
    34c6:	0306                	slli	t1,t1,0x1
    34c8:	097a                	slli	s2,s2,0x1e
    34ca:	0004                	0x4
    34cc:	0301                	addi	t1,t1,0
    34ce:	0901                	addi	s2,s2,0
    34d0:	0000                	unimp
    34d2:	0501                	addi	a0,a0,0
    34d4:	060c                	addi	a1,sp,768
    34d6:	00090003          	lb	zero,0(s2)
    34da:	0100                	addi	s0,sp,128
    34dc:	0505                	addi	a0,a0,1
    34de:	0306                	slli	t1,t1,0x1
    34e0:	01dc                	addi	a5,sp,196
    34e2:	0809                	addi	a6,a6,2
    34e4:	0100                	addi	s0,sp,128
    34e6:	0905                	addi	s2,s2,1
    34e8:	00090103          	lb	sp,0(s2)
    34ec:	0100                	addi	s0,sp,128
    34ee:	0d05                	addi	s10,s10,1
    34f0:	097d8c03          	lb	s8,151(s11)
    34f4:	0014                	0x14
    34f6:	0501                	addi	a0,a0,0
    34f8:	061a                	slli	a2,a2,0x6
    34fa:	00090003          	lb	zero,0(s2)
    34fe:	0100                	addi	s0,sp,128
    3500:	0505                	addi	a0,a0,1
    3502:	04097903          	0x4097903
    3506:	0100                	addi	s0,sp,128
    3508:	2205                	jal	3628 <__udivdi3+0x3f8>
    350a:	08090003          	lb	zero,128(s2)
    350e:	0100                	addi	s0,sp,128
    3510:	0905                	addi	s2,s2,1
    3512:	0900e603          	0x900e603
    3516:	0008                	0x8
    3518:	0601                	addi	a2,a2,0
    351a:	0c090203          	lb	tp,192(s2)
    351e:	0100                	addi	s0,sp,128
    3520:	00090103          	lb	sp,0(s2)
    3524:	0100                	addi	s0,sp,128
    3526:	1a05                	addi	s4,s4,-31
    3528:	0306                	slli	t1,t1,0x1
    352a:	097f                	0x97f
    352c:	0000                	unimp
    352e:	0501                	addi	a0,a0,0
    3530:	0609                	addi	a2,a2,2
    3532:	10090203          	lb	tp,256(s2)
    3536:	0100                	addi	s0,sp,128
    3538:	1a05                	addi	s4,s4,-31
    353a:	0306                	slli	t1,t1,0x1
    353c:	0900                	addi	s0,sp,144
    353e:	0000                	unimp
    3540:	0501                	addi	a0,a0,0
    3542:	0609                	addi	a2,a2,2
    3544:	0c096e03          	0xc096e03
    3548:	0100                	addi	s0,sp,128
    354a:	0306                	slli	t1,t1,0x1
    354c:	0901                	addi	s2,s2,0
    354e:	0000                	unimp
    3550:	0501                	addi	a0,a0,0
    3552:	031a                	slli	t1,t1,0x6
    3554:	097f                	0x97f
    3556:	0004                	0x4
    3558:	0501                	addi	a0,a0,0
    355a:	0309                	addi	t1,t1,2
    355c:	0901                	addi	s2,s2,0
    355e:	0004                	0x4
    3560:	0501                	addi	a0,a0,0
    3562:	031a                	slli	t1,t1,0x6
    3564:	097f                	0x97f
    3566:	0004                	0x4
    3568:	0501                	addi	a0,a0,0
    356a:	0609                	addi	a2,a2,2
    356c:	04090103          	lb	sp,64(s2)
    3570:	0100                	addi	s0,sp,128
    3572:	09028703          	lb	a4,144(t0)
    3576:	000c                	0xc
    3578:	0301                	addi	t1,t1,0
    357a:	0904                	addi	s1,sp,144
    357c:	0010                	0x10
    357e:	0501                	addi	a0,a0,0
    3580:	060c                	addi	a1,sp,768
    3582:	00090003          	lb	zero,0(s2)
    3586:	0100                	addi	s0,sp,128
    3588:	0d05                	addi	s10,s10,1
    358a:	0306                	slli	t1,t1,0x1
    358c:	0902                	c.slli64	s2
    358e:	000c                	0xc
    3590:	0501                	addi	a0,a0,0
    3592:	062c                	addi	a1,sp,776
    3594:	00090103          	lb	sp,0(s2)
    3598:	0100                	addi	s0,sp,128
    359a:	0d05                	addi	s10,s10,1
    359c:	10097f03          	0x10097f03
    35a0:	0100                	addi	s0,sp,128
    35a2:	1d05                	addi	s10,s10,-31
    35a4:	0c090203          	lb	tp,192(s2)
    35a8:	0100                	addi	s0,sp,128
    35aa:	0d05                	addi	s10,s10,1
    35ac:	04097e03          	0x4097e03
    35b0:	0100                	addi	s0,sp,128
    35b2:	1d05                	addi	s10,s10,-31
    35b4:	04090203          	lb	tp,64(s2)
    35b8:	0100                	addi	s0,sp,128
    35ba:	0d05                	addi	s10,s10,1
    35bc:	08097e03          	0x8097e03
    35c0:	0100                	addi	s0,sp,128
    35c2:	0306                	slli	t1,t1,0x1
    35c4:	0906                	slli	s2,s2,0x1
    35c6:	0038                	addi	a4,sp,8
    35c8:	0301                	addi	t1,t1,0
    35ca:	0908                	addi	a0,sp,144
    35cc:	0014                	0x14
    35ce:	0501                	addi	a0,a0,0
    35d0:	0309                	addi	t1,t1,2
    35d2:	0950                	addi	a2,sp,148
    35d4:	0010                	0x10
    35d6:	0301                	addi	t1,t1,0
    35d8:	0902                	c.slli64	s2
    35da:	0010                	0x10
    35dc:	0501                	addi	a0,a0,0
    35de:	0615                	addi	a2,a2,5
    35e0:	00090003          	lb	zero,0(s2)
    35e4:	0100                	addi	s0,sp,128
    35e6:	0505                	addi	a0,a0,1
    35e8:	0306                	slli	t1,t1,0x1
    35ea:	00080913          	mv	s2,a6
    35ee:	0501                	addi	a0,a0,0
    35f0:	061a                	slli	a2,a2,0x6
    35f2:	00090003          	lb	zero,0(s2)
    35f6:	0100                	addi	s0,sp,128
    35f8:	0805                	addi	a6,a6,1
    35fa:	04090003          	lb	zero,64(s2)
    35fe:	0100                	addi	s0,sp,128
    3600:	0d05                	addi	s10,s10,1
    3602:	0306                	slli	t1,t1,0x1
    3604:	7fae                	flw	ft11,232(sp)
    3606:	0809                	addi	a6,a6,2
    3608:	0100                	addi	s0,sp,128
    360a:	00090103          	lb	sp,0(s2)
    360e:	0100                	addi	s0,sp,128
    3610:	10090103          	lb	sp,256(s2)
    3614:	0100                	addi	s0,sp,128
    3616:	0505                	addi	a0,a0,1
    3618:	00090503          	lb	a0,0(s2)
    361c:	0100                	addi	s0,sp,128
    361e:	0d05                	addi	s10,s10,1
    3620:	0306                	slli	t1,t1,0x1
    3622:	097a                	slli	s2,s2,0x1e
    3624:	0000                	unimp
    3626:	0501                	addi	a0,a0,0
    3628:	0316                	slli	t1,t1,0x5
    362a:	097f                	0x97f
    362c:	0008                	0x8
    362e:	0501                	addi	a0,a0,0
    3630:	030d                	addi	t1,t1,3
    3632:	0901                	addi	s2,s2,0
    3634:	0004                	0x4
    3636:	0501                	addi	a0,a0,0
    3638:	0316                	slli	t1,t1,0x5
    363a:	097f                	0x97f
    363c:	0010                	0x10
    363e:	0501                	addi	a0,a0,0
    3640:	060d                	addi	a2,a2,3
    3642:	08097203          	0x8097203
    3646:	0100                	addi	s0,sp,128
    3648:	00090103          	lb	sp,0(s2)
    364c:	0100                	addi	s0,sp,128
    364e:	10090103          	lb	sp,256(s2)
    3652:	0100                	addi	s0,sp,128
    3654:	0505                	addi	a0,a0,1
    3656:	00091303          	lh	t1,0(s2)
    365a:	0100                	addi	s0,sp,128
    365c:	0d05                	addi	s10,s10,1
    365e:	0306                	slli	t1,t1,0x1
    3660:	096c                	addi	a1,sp,156
    3662:	0000                	unimp
    3664:	0501                	addi	a0,a0,0
    3666:	0316                	slli	t1,t1,0x5
    3668:	097f                	0x97f
    366a:	0010                	0x10
    366c:	0501                	addi	a0,a0,0
    366e:	030d                	addi	t1,t1,3
    3670:	0901                	addi	s2,s2,0
    3672:	0004                	0x4
    3674:	0501                	addi	a0,a0,0
    3676:	0316                	slli	t1,t1,0x5
    3678:	097f                	0x97f
    367a:	000c                	0xc
    367c:	0501                	addi	a0,a0,0
    367e:	060d                	addi	a2,a2,3
    3680:	08097b03          	0x8097b03
    3684:	0100                	addi	s0,sp,128
    3686:	00090103          	lb	sp,0(s2)
    368a:	0100                	addi	s0,sp,128
    368c:	20090103          	lb	sp,512(s2)
    3690:	0100                	addi	s0,sp,128
    3692:	0505                	addi	a0,a0,1
    3694:	00091803          	lh	a6,0(s2)
    3698:	0100                	addi	s0,sp,128
    369a:	0d05                	addi	s10,s10,1
    369c:	0306                	slli	t1,t1,0x1
    369e:	00000967          	jalr	s2,zero # 0 <_start>
    36a2:	0501                	addi	a0,a0,0
    36a4:	0316                	slli	t1,t1,0x5
    36a6:	097f                	0x97f
    36a8:	000c                	0xc
    36aa:	0501                	addi	a0,a0,0
    36ac:	0309                	addi	t1,t1,2
    36ae:	091c                	addi	a5,sp,144
    36b0:	0008                	0x8
    36b2:	0901                	addi	s2,s2,0
    36b4:	0008                	0x8
    36b6:	0100                	addi	s0,sp,128
    36b8:	df01                	beqz	a4,35d0 <__udivdi3+0x3a0>
    36ba:	0011                	c.nop	4
    36bc:	0300                	addi	s0,sp,384
    36be:	c900                	sw	s0,16(a0)
    36c0:	0001                	nop
    36c2:	0100                	addi	s0,sp,128
    36c4:	fb01                	bnez	a4,35d4 <__udivdi3+0x3a4>
    36c6:	0d0e                	slli	s10,s10,0x3
    36c8:	0100                	addi	s0,sp,128
    36ca:	0101                	addi	sp,sp,0
    36cc:	0001                	nop
    36ce:	0000                	unimp
    36d0:	0001                	nop
    36d2:	0100                	addi	s0,sp,128
    36d4:	2f2e                	fld	ft10,200(sp)
    36d6:	2f637273          	csrrci	tp,0x2f6,6
    36da:	65726f63          	bltu	tp,s7,3d38 <__divdf3+0x45c>
    36de:	616d                	addi	sp,sp,240
    36e0:	6b72                	flw	fs6,28(sp)
    36e2:	6500                	flw	fs0,8(a0)
    36e4:	5c3a                	lw	s8,172(sp)
    36e6:	7270                	flw	fa2,100(a2)
    36e8:	6172676f          	jal	a4,2a4fe <_data_lma+0x1f386>
    36ec:	666d                	lui	a2,0x1b
    36ee:	6c69                	lui	s8,0x1a
    36f0:	7365                	lui	t1,0xffff9
    36f2:	3878                	fld	fa4,240(s0)
    36f4:	5c36                	lw	s8,108(sp)
    36f6:	6f6e                	flw	ft10,216(sp)
    36f8:	6d72                	flw	fs10,28(sp)
    36fa:	6c61                	lui	s8,0x18
    36fc:	722d                	lui	tp,0xfffeb
    36fe:	7369                	lui	t1,0xffffa
    3700:	6e2d7663          	bgeu	s10,sp,3dec <__divdf3+0x510>
    3704:	2d656e6f          	jal	t3,599da <_data_lma+0x4e862>
    3708:	2d636367          	0x2d636367
    370c:	2e38                	fld	fa4,88(a2)
    370e:	2e32                	fld	ft8,264(sp)
    3710:	2d30                	fld	fa2,88(a0)
    3712:	2e32                	fld	ft8,264(sp)
    3714:	2d32                	fld	fs10,264(sp)
    3716:	3032                	fld	ft0,296(sp)
    3718:	3931                	jal	3334 <__udivdi3+0x104>
    371a:	3530                	fld	fa2,104(a0)
    371c:	3132                	fld	ft2,296(sp)
    371e:	302d                	jal	2f48 <crcu32+0x50c>
    3720:	3030                	fld	fa2,96(s0)
    3722:	2d34                	fld	fa3,88(a0)
    3724:	366e6977          	0x366e6977
    3728:	5c34                	lw	a3,120(s0)
    372a:	6972                	flw	fs2,28(sp)
    372c:	2d766373          	csrrsi	t1,0x2d7,12
    3730:	6f6e                	flw	ft10,216(sp)
    3732:	656e                	flw	fa0,216(sp)
    3734:	652d                	lui	a0,0xb
    3736:	626d                	lui	tp,0x1b
    3738:	6465                	lui	s0,0x19
    373a:	695c                	flw	fa5,20(a0)
    373c:	636e                	flw	ft6,216(sp)
    373e:	756c                	flw	fa1,108(a0)
    3740:	6564                	flw	fs1,76(a0)
    3742:	735c                	flw	fa5,36(a4)
    3744:	7379                	lui	t1,0xffffe
    3746:	6500                	flw	fs0,8(a0)
    3748:	5c3a                	lw	s8,172(sp)
    374a:	7270                	flw	fa2,100(a2)
    374c:	6172676f          	jal	a4,2a562 <_data_lma+0x1f3ea>
    3750:	666d                	lui	a2,0x1b
    3752:	6c69                	lui	s8,0x1a
    3754:	7365                	lui	t1,0xffff9
    3756:	3878                	fld	fa4,240(s0)
    3758:	5c36                	lw	s8,108(sp)
    375a:	6f6e                	flw	ft10,216(sp)
    375c:	6d72                	flw	fs10,28(sp)
    375e:	6c61                	lui	s8,0x18
    3760:	722d                	lui	tp,0xfffeb
    3762:	7369                	lui	t1,0xffffa
    3764:	6e2d7663          	bgeu	s10,sp,3e50 <__divdf3+0x574>
    3768:	2d656e6f          	jal	t3,59a3e <_data_lma+0x4e8c6>
    376c:	2d636367          	0x2d636367
    3770:	2e38                	fld	fa4,88(a2)
    3772:	2e32                	fld	ft8,264(sp)
    3774:	2d30                	fld	fa2,88(a0)
    3776:	2e32                	fld	ft8,264(sp)
    3778:	2d32                	fld	fs10,264(sp)
    377a:	3032                	fld	ft0,296(sp)
    377c:	3931                	jal	3398 <__udivdi3+0x168>
    377e:	3530                	fld	fa2,104(a0)
    3780:	3132                	fld	ft2,296(sp)
    3782:	302d                	jal	2fac <crc16+0x60>
    3784:	3030                	fld	fa2,96(s0)
    3786:	2d34                	fld	fa3,88(a0)
    3788:	366e6977          	0x366e6977
    378c:	5c34                	lw	a3,120(s0)
    378e:	696c                	flw	fa1,84(a0)
    3790:	5c62                	lw	s8,56(sp)
    3792:	5c636367          	0x5c636367
    3796:	6972                	flw	fs2,28(sp)
    3798:	2d766373          	csrrsi	t1,0x2d7,12
    379c:	6f6e                	flw	ft10,216(sp)
    379e:	656e                	flw	fa0,216(sp)
    37a0:	652d                	lui	a0,0xb
    37a2:	626d                	lui	tp,0x1b
    37a4:	6465                	lui	s0,0x19
    37a6:	385c                	fld	fa5,176(s0)
    37a8:	322e                	fld	ft4,232(sp)
    37aa:	302e                	fld	ft0,232(sp)
    37ac:	695c                	flw	fa5,20(a0)
    37ae:	636e                	flw	ft6,216(sp)
    37b0:	756c                	flw	fa1,108(a0)
    37b2:	6564                	flw	fs1,76(a0)
    37b4:	6500                	flw	fs0,8(a0)
    37b6:	5c3a                	lw	s8,172(sp)
    37b8:	7270                	flw	fa2,100(a2)
    37ba:	6172676f          	jal	a4,2a5d0 <_data_lma+0x1f458>
    37be:	666d                	lui	a2,0x1b
    37c0:	6c69                	lui	s8,0x1a
    37c2:	7365                	lui	t1,0xffff9
    37c4:	3878                	fld	fa4,240(s0)
    37c6:	5c36                	lw	s8,108(sp)
    37c8:	6f6e                	flw	ft10,216(sp)
    37ca:	6d72                	flw	fs10,28(sp)
    37cc:	6c61                	lui	s8,0x18
    37ce:	722d                	lui	tp,0xfffeb
    37d0:	7369                	lui	t1,0xffffa
    37d2:	6e2d7663          	bgeu	s10,sp,3ebe <__divdf3+0x5e2>
    37d6:	2d656e6f          	jal	t3,59aac <_data_lma+0x4e934>
    37da:	2d636367          	0x2d636367
    37de:	2e38                	fld	fa4,88(a2)
    37e0:	2e32                	fld	ft8,264(sp)
    37e2:	2d30                	fld	fa2,88(a0)
    37e4:	2e32                	fld	ft8,264(sp)
    37e6:	2d32                	fld	fs10,264(sp)
    37e8:	3032                	fld	ft0,296(sp)
    37ea:	3931                	jal	3406 <__udivdi3+0x1d6>
    37ec:	3530                	fld	fa2,104(a0)
    37ee:	3132                	fld	ft2,296(sp)
    37f0:	302d                	jal	301a <crc16+0xce>
    37f2:	3030                	fld	fa2,96(s0)
    37f4:	2d34                	fld	fa3,88(a0)
    37f6:	366e6977          	0x366e6977
    37fa:	5c34                	lw	a3,120(s0)
    37fc:	6972                	flw	fs2,28(sp)
    37fe:	2d766373          	csrrsi	t1,0x2d7,12
    3802:	6f6e                	flw	ft10,216(sp)
    3804:	656e                	flw	fa0,216(sp)
    3806:	652d                	lui	a0,0xb
    3808:	626d                	lui	tp,0x1b
    380a:	6465                	lui	s0,0x19
    380c:	695c                	flw	fa5,20(a0)
    380e:	636e                	flw	ft6,216(sp)
    3810:	756c                	flw	fa1,108(a0)
    3812:	6564                	flw	fs1,76(a0)
    3814:	0000                	unimp
    3816:	65726f63          	bltu	tp,s7,3e74 <__divdf3+0x598>
    381a:	6d5f 7461 6972      	0x697274616d5f
    3820:	2e78                	fld	fa4,216(a2)
    3822:	00010063          	beqz	sp,3822 <__udivdi3+0x5f2>
    3826:	6c00                	flw	fs0,24(s0)
    3828:	2e6b636f          	jal	t1,b9b0e <_data_lma+0xae996>
    382c:	0068                	addi	a0,sp,12
    382e:	0002                	c.slli64	zero
    3830:	5f00                	lw	s0,56(a4)
    3832:	7974                	flw	fa3,116(a0)
    3834:	6570                	flw	fa2,76(a0)
    3836:	00682e73          	csrrs	t3,0x6,a6
    383a:	0002                	c.slli64	zero
    383c:	7300                	flw	fs0,32(a4)
    383e:	6474                	flw	fa3,76(s0)
    3840:	6564                	flw	fs1,76(a0)
    3842:	2e66                	fld	ft8,88(sp)
    3844:	0068                	addi	a0,sp,12
    3846:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a4>
    384a:	6565                	lui	a0,0x19
    384c:	746e                	flw	fs0,248(sp)
    384e:	682e                	flw	fa6,200(sp)
    3850:	0200                	addi	s0,sp,256
    3852:	0000                	unimp
    3854:	6974                	flw	fa3,84(a0)
    3856:	656d                	lui	a0,0x1b
    3858:	682e                	flw	fa6,200(sp)
    385a:	0400                	addi	s0,sp,512
    385c:	0000                	unimp
    385e:	65726f63          	bltu	tp,s7,3ebc <__divdf3+0x5e0>
    3862:	705f 726f 6d74      	0x6d74726f705f
    3868:	2e65                	jal	3c20 <__divdf3+0x344>
    386a:	0068                	addi	a0,sp,12
    386c:	0001                	nop
    386e:	6300                	flw	fs0,0(a4)
    3870:	6d65726f          	jal	tp,5af46 <_data_lma+0x4fdce>
    3874:	7261                	lui	tp,0xffff8
    3876:	00682e6b          	0x682e6b
    387a:	0001                	nop
    387c:	3c00                	fld	fs0,56(s0)
    387e:	7562                	flw	fa0,56(sp)
    3880:	6c69                	lui	s8,0x1a
    3882:	2d74                	fld	fa3,216(a0)
    3884:	6e69                	lui	t3,0x1a
    3886:	003e                	c.slli	zero,0xf
    3888:	0000                	unimp
    388a:	0000                	unimp
    388c:	0105                	addi	sp,sp,1
    388e:	0500                	addi	s0,sp,640
    3890:	3402                	fld	fs0,32(sp)
    3892:	03000017          	auipc	zero,0x3000
    3896:	0182                	c.slli64	gp
    3898:	0501                	addi	a0,a0,0
    389a:	060c                	addi	a1,sp,768
    389c:	0c090203          	lb	tp,192(s2)
    38a0:	0100                	addi	s0,sp,128
    38a2:	0105                	addi	sp,sp,1
    38a4:	04097e03          	0x4097e03
    38a8:	0100                	addi	s0,sp,128
    38aa:	2c090003          	lb	zero,704(s2)
    38ae:	0100                	addi	s0,sp,128
    38b0:	0505                	addi	a0,a0,1
    38b2:	0306                	slli	t1,t1,0x1
    38b4:	0901                	addi	s2,s2,0
    38b6:	000c                	0xc
    38b8:	0301                	addi	t1,t1,0
    38ba:	0901                	addi	s2,s2,0
    38bc:	0000                	unimp
    38be:	0501                	addi	a0,a0,0
    38c0:	060c                	addi	a1,sp,768
    38c2:	00090003          	lb	zero,0(s2)
    38c6:	0100                	addi	s0,sp,128
    38c8:	0505                	addi	a0,a0,1
    38ca:	0306                	slli	t1,t1,0x1
    38cc:	0902                	c.slli64	s2
    38ce:	0004                	0x4
    38d0:	0301                	addi	t1,t1,0
    38d2:	0199                	addi	gp,gp,6
    38d4:	0009                	c.nop	2
    38d6:	0100                	addi	s0,sp,128
    38d8:	00090103          	lb	sp,0(s2)
    38dc:	0100                	addi	s0,sp,128
    38de:	0c05                	addi	s8,s8,1
    38e0:	0306                	slli	t1,t1,0x1
    38e2:	0900                	addi	s0,sp,144
    38e4:	0030                	addi	a2,sp,8
    38e6:	0501                	addi	a0,a0,0
    38e8:	0301                	addi	t1,t1,0
    38ea:	7ee2                	flw	ft9,56(sp)
    38ec:	0c09                	addi	s8,s8,2
    38ee:	0100                	addi	s0,sp,128
    38f0:	0d05                	addi	s10,s10,1
    38f2:	0306                	slli	t1,t1,0x1
    38f4:	01a2                	slli	gp,gp,0x8
    38f6:	0409                	addi	s0,s0,2
    38f8:	0100                	addi	s0,sp,128
    38fa:	1a05                	addi	s4,s4,-31
    38fc:	0306                	slli	t1,t1,0x1
    38fe:	0900                	addi	s0,sp,144
    3900:	0000                	unimp
    3902:	0501                	addi	a0,a0,0
    3904:	0309                	addi	t1,t1,2
    3906:	097e                	slli	s2,s2,0x1f
    3908:	0010                	0x10
    390a:	0501                	addi	a0,a0,0
    390c:	0319                	addi	t1,t1,6
    390e:	097e                	slli	s2,s2,0x1f
    3910:	0004                	0x4
    3912:	0501                	addi	a0,a0,0
    3914:	0305                	addi	t1,t1,1
    3916:	0900                	addi	s0,sp,144
    3918:	0008                	0x8
    391a:	0501                	addi	a0,a0,0
    391c:	030c                	addi	a1,sp,384
    391e:	0970                	addi	a2,sp,156
    3920:	0028                	addi	a0,sp,8
    3922:	0501                	addi	a0,a0,0
    3924:	0305                	addi	t1,t1,1
    3926:	0910                	addi	a2,sp,144
    3928:	000c                	0xc
    392a:	0501                	addi	a0,a0,0
    392c:	060d                	addi	a2,a2,3
    392e:	08097403          	0x8097403
    3932:	0100                	addi	s0,sp,128
    3934:	3105                	jal	3554 <__udivdi3+0x324>
    3936:	0306                	slli	t1,t1,0x1
    3938:	0900                	addi	s0,sp,144
    393a:	0000                	unimp
    393c:	0501                	addi	a0,a0,0
    393e:	031a                	slli	t1,t1,0x6
    3940:	0900                	addi	s0,sp,144
    3942:	0014                	0x14
    3944:	0501                	addi	a0,a0,0
    3946:	0309                	addi	t1,t1,2
    3948:	097e                	slli	s2,s2,0x1f
    394a:	0008                	0x8
    394c:	0501                	addi	a0,a0,0
    394e:	0319                	addi	t1,t1,6
    3950:	097e                	slli	s2,s2,0x1f
    3952:	0008                	0x8
    3954:	0501                	addi	a0,a0,0
    3956:	0305                	addi	t1,t1,1
    3958:	0900                	addi	s0,sp,144
    395a:	0014                	0x14
    395c:	0501                	addi	a0,a0,0
    395e:	030c                	addi	a1,sp,384
    3960:	0961                	addi	s2,s2,24
    3962:	0014                	0x14
    3964:	0301                	addi	t1,t1,0
    3966:	097f                	0x97f
    3968:	0004                	0x4
    396a:	0501                	addi	a0,a0,0
    396c:	0305                	addi	t1,t1,1
    396e:	0920                	addi	s0,sp,152
    3970:	000c                	0xc
    3972:	0501                	addi	a0,a0,0
    3974:	0315                	addi	t1,t1,5
    3976:	0960                	addi	s0,sp,156
    3978:	0004                	0x4
    397a:	0501                	addi	a0,a0,0
    397c:	030c                	addi	a1,sp,384
    397e:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xde88>
    3982:	0501                	addi	a0,a0,0
    3984:	0305                	addi	t1,t1,1
    3986:	0900                	addi	s0,sp,144
    3988:	0010                	0x10
    398a:	0501                	addi	a0,a0,0
    398c:	0315                	addi	t1,t1,5
    398e:	090d                	addi	s2,s2,3
    3990:	0008                	0x8
    3992:	0501                	addi	a0,a0,0
    3994:	060d                	addi	a2,a2,3
    3996:	0c090203          	lb	tp,192(s2)
    399a:	0100                	addi	s0,sp,128
    399c:	1105                	addi	sp,sp,-31
    399e:	0306                	slli	t1,t1,0x1
    39a0:	0975                	addi	s2,s2,29
    39a2:	0000                	unimp
    39a4:	0501                	addi	a0,a0,0
    39a6:	0309                	addi	t1,t1,2
    39a8:	097e                	slli	s2,s2,0x1f
    39aa:	0004                	0x4
    39ac:	0501                	addi	a0,a0,0
    39ae:	060d                	addi	a2,a2,3
    39b0:	04090203          	lb	tp,64(s2)
    39b4:	0100                	addi	s0,sp,128
    39b6:	1105                	addi	sp,sp,-31
    39b8:	00090903          	lb	s2,0(s2)
    39bc:	0100                	addi	s0,sp,128
    39be:	00097b03          	0x97b03
    39c2:	0100                	addi	s0,sp,128
    39c4:	0306                	slli	t1,t1,0x1
    39c6:	097c                	addi	a5,sp,156
    39c8:	0000                	unimp
    39ca:	0501                	addi	a0,a0,0
    39cc:	060d                	addi	a2,a2,3
    39ce:	04090103          	lb	sp,64(s2)
    39d2:	0100                	addi	s0,sp,128
    39d4:	2905                	jal	3e04 <__divdf3+0x528>
    39d6:	0306                	slli	t1,t1,0x1
    39d8:	0908                	addi	a0,sp,144
    39da:	0008                	0x8
    39dc:	0501                	addi	a0,a0,0
    39de:	0311                	addi	t1,t1,4
    39e0:	0978                	addi	a4,sp,156
    39e2:	0004                	0x4
    39e4:	0501                	addi	a0,a0,0
    39e6:	060d                	addi	a2,a2,3
    39e8:	04090103          	lb	sp,64(s2)
    39ec:	0100                	addi	s0,sp,128
    39ee:	1505                	addi	a0,a0,-31
    39f0:	0306                	slli	t1,t1,0x1
    39f2:	0902                	c.slli64	s2
    39f4:	0000                	unimp
    39f6:	0301                	addi	t1,t1,0
    39f8:	0905                	addi	s2,s2,1
    39fa:	0004                	0x4
    39fc:	0501                	addi	a0,a0,0
    39fe:	0310                	addi	a2,sp,384
    3a00:	0979                	addi	s2,s2,30
    3a02:	0004                	0x4
    3a04:	0501                	addi	a0,a0,0
    3a06:	0315                	addi	t1,t1,5
    3a08:	0902                	c.slli64	s2
    3a0a:	0004                	0x4
    3a0c:	0501                	addi	a0,a0,0
    3a0e:	0611                	addi	a2,a2,4
    3a10:	0c090103          	lb	sp,192(s2)
    3a14:	0100                	addi	s0,sp,128
    3a16:	1505                	addi	a0,a0,-31
    3a18:	0306                	slli	t1,t1,0x1
    3a1a:	0900                	addi	s0,sp,144
    3a1c:	0000                	unimp
    3a1e:	0501                	addi	a0,a0,0
    3a20:	060d                	addi	a2,a2,3
    3a22:	04090603          	lb	a2,64(s2)
    3a26:	0100                	addi	s0,sp,128
    3a28:	1105                	addi	sp,sp,-31
    3a2a:	0306                	slli	t1,t1,0x1
    3a2c:	0975                	addi	s2,s2,29
    3a2e:	0000                	unimp
    3a30:	0501                	addi	a0,a0,0
    3a32:	0309                	addi	t1,t1,2
    3a34:	097e                	slli	s2,s2,0x1f
    3a36:	0004                	0x4
    3a38:	0501                	addi	a0,a0,0
    3a3a:	0319                	addi	t1,t1,6
    3a3c:	097e                	slli	s2,s2,0x1f
    3a3e:	0004                	0x4
    3a40:	0501                	addi	a0,a0,0
    3a42:	0305                	addi	t1,t1,1
    3a44:	0900                	addi	s0,sp,144
    3a46:	0008                	0x8
    3a48:	0601                	addi	a2,a2,0
    3a4a:	0c091203          	lh	tp,192(s2)
    3a4e:	0100                	addi	s0,sp,128
    3a50:	0b05                	addi	s6,s6,1
    3a52:	0306                	slli	t1,t1,0x1
    3a54:	7f86                	flw	ft11,96(sp)
    3a56:	0009                	c.nop	2
    3a58:	0100                	addi	s0,sp,128
    3a5a:	0505                	addi	a0,a0,1
    3a5c:	0306                	slli	t1,t1,0x1
    3a5e:	0904                	addi	s1,sp,144
    3a60:	0018                	0x18
    3a62:	0301                	addi	t1,t1,0
    3a64:	01a2                	slli	gp,gp,0x8
    3a66:	0009                	c.nop	2
    3a68:	0100                	addi	s0,sp,128
    3a6a:	00090103          	lb	sp,0(s2)
    3a6e:	0100                	addi	s0,sp,128
    3a70:	0b05                	addi	s6,s6,1
    3a72:	0306                	slli	t1,t1,0x1
    3a74:	7ed9                	lui	t4,0xffff6
    3a76:	1409                	addi	s0,s0,-30
    3a78:	0100                	addi	s0,sp,128
    3a7a:	0905                	addi	s2,s2,1
    3a7c:	0306                	slli	t1,t1,0x1
    3a7e:	01a9                	addi	gp,gp,10
    3a80:	0809                	addi	a6,a6,2
    3a82:	0100                	addi	s0,sp,128
    3a84:	00090103          	lb	sp,0(s2)
    3a88:	0100                	addi	s0,sp,128
    3a8a:	0b05                	addi	s6,s6,1
    3a8c:	0306                	slli	t1,t1,0x1
    3a8e:	7ed6                	flw	ft9,116(sp)
    3a90:	0009                	c.nop	2
    3a92:	0100                	addi	s0,sp,128
    3a94:	0d05                	addi	s10,s10,1
    3a96:	0306                	slli	t1,t1,0x1
    3a98:	01ac                	addi	a1,sp,200
    3a9a:	0c09                	addi	s8,s8,2
    3a9c:	0100                	addi	s0,sp,128
    3a9e:	2a05                	jal	3bce <__divdf3+0x2f2>
    3aa0:	0306                	slli	t1,t1,0x1
    3aa2:	0900                	addi	s0,sp,144
    3aa4:	0000                	unimp
    3aa6:	0501                	addi	a0,a0,0
    3aa8:	0312                	slli	t1,t1,0x4
    3aaa:	0900                	addi	s0,sp,144
    3aac:	0018                	0x18
    3aae:	0501                	addi	a0,a0,0
    3ab0:	0309                	addi	t1,t1,2
    3ab2:	097e                	slli	s2,s2,0x1f
    3ab4:	0004                	0x4
    3ab6:	0501                	addi	a0,a0,0
    3ab8:	0305                	addi	t1,t1,1
    3aba:	097d                	addi	s2,s2,31
    3abc:	0010                	0x10
    3abe:	0501                	addi	a0,a0,0
    3ac0:	030c                	addi	a1,sp,384
    3ac2:	08097fbf 15050100 	0x1505010008097fbf
    3aca:	04097f03          	0x4097f03
    3ace:	0100                	addi	s0,sp,128
    3ad0:	0c05                	addi	s8,s8,1
    3ad2:	04090003          	lb	zero,64(s2)
    3ad6:	0100                	addi	s0,sp,128
    3ad8:	04090303          	lb	t1,64(s2)
    3adc:	0100                	addi	s0,sp,128
    3ade:	1005                	c.nop	-31
    3ae0:	08090203          	lb	tp,128(s2)
    3ae4:	0100                	addi	s0,sp,128
    3ae6:	1505                	addi	a0,a0,-31
    3ae8:	08090b03          	lb	s6,128(s2)
    3aec:	0100                	addi	s0,sp,128
    3aee:	1d05                	addi	s10,s10,-31
    3af0:	04097503          	0x4097503
    3af4:	0100                	addi	s0,sp,128
    3af6:	1505                	addi	a0,a0,-31
    3af8:	04090b03          	lb	s6,64(s2)
    3afc:	0100                	addi	s0,sp,128
    3afe:	0d05                	addi	s10,s10,1
    3b00:	0306                	slli	t1,t1,0x1
    3b02:	0902                	c.slli64	s2
    3b04:	0004                	0x4
    3b06:	0501                	addi	a0,a0,0
    3b08:	0611                	addi	a2,a2,4
    3b0a:	04097503          	0x4097503
    3b0e:	0100                	addi	s0,sp,128
    3b10:	0905                	addi	s2,s2,1
    3b12:	04097e03          	0x4097e03
    3b16:	0100                	addi	s0,sp,128
    3b18:	0d05                	addi	s10,s10,1
    3b1a:	0306                	slli	t1,t1,0x1
    3b1c:	0902                	c.slli64	s2
    3b1e:	0004                	0x4
    3b20:	0501                	addi	a0,a0,0
    3b22:	0311                	addi	t1,t1,4
    3b24:	0909                	addi	s2,s2,2
    3b26:	0000                	unimp
    3b28:	0301                	addi	t1,t1,0
    3b2a:	0000097b          	0x97b
    3b2e:	0601                	addi	a2,a2,0
    3b30:	00097c03          	0x97c03
    3b34:	0100                	addi	s0,sp,128
    3b36:	0d05                	addi	s10,s10,1
    3b38:	0306                	slli	t1,t1,0x1
    3b3a:	0901                	addi	s2,s2,0
    3b3c:	0004                	0x4
    3b3e:	0501                	addi	a0,a0,0
    3b40:	0629                	addi	a2,a2,10
    3b42:	08090803          	lb	a6,128(s2)
    3b46:	0100                	addi	s0,sp,128
    3b48:	1105                	addi	sp,sp,-31
    3b4a:	04097803          	0x4097803
    3b4e:	0100                	addi	s0,sp,128
    3b50:	0d05                	addi	s10,s10,1
    3b52:	0306                	slli	t1,t1,0x1
    3b54:	0901                	addi	s2,s2,0
    3b56:	0004                	0x4
    3b58:	0501                	addi	a0,a0,0
    3b5a:	0615                	addi	a2,a2,5
    3b5c:	00090203          	lb	tp,0(s2)
    3b60:	0100                	addi	s0,sp,128
    3b62:	04090503          	lb	a0,64(s2)
    3b66:	0100                	addi	s0,sp,128
    3b68:	1005                	c.nop	-31
    3b6a:	04097903          	0x4097903
    3b6e:	0100                	addi	s0,sp,128
    3b70:	1505                	addi	a0,a0,-31
    3b72:	04090203          	lb	tp,64(s2)
    3b76:	0100                	addi	s0,sp,128
    3b78:	1d05                	addi	s10,s10,-31
    3b7a:	04097a03          	0x4097a03
    3b7e:	0100                	addi	s0,sp,128
    3b80:	1505                	addi	a0,a0,-31
    3b82:	04090603          	lb	a2,64(s2)
    3b86:	0100                	addi	s0,sp,128
    3b88:	1105                	addi	sp,sp,-31
    3b8a:	0306                	slli	t1,t1,0x1
    3b8c:	0901                	addi	s2,s2,0
    3b8e:	0004                	0x4
    3b90:	0501                	addi	a0,a0,0
    3b92:	0615                	addi	a2,a2,5
    3b94:	00090003          	lb	zero,0(s2)
    3b98:	0100                	addi	s0,sp,128
    3b9a:	0d05                	addi	s10,s10,1
    3b9c:	0306                	slli	t1,t1,0x1
    3b9e:	0906                	slli	s2,s2,0x1
    3ba0:	0004                	0x4
    3ba2:	0501                	addi	a0,a0,0
    3ba4:	0611                	addi	a2,a2,4
    3ba6:	04097503          	0x4097503
    3baa:	0100                	addi	s0,sp,128
    3bac:	0905                	addi	s2,s2,1
    3bae:	04097e03          	0x4097e03
    3bb2:	0100                	addi	s0,sp,128
    3bb4:	1905                	addi	s2,s2,-31
    3bb6:	08097e03          	0x8097e03
    3bba:	0100                	addi	s0,sp,128
    3bbc:	0505                	addi	a0,a0,1
    3bbe:	08090003          	lb	zero,128(s2)
    3bc2:	0100                	addi	s0,sp,128
    3bc4:	0306                	slli	t1,t1,0x1
    3bc6:	0912                	slli	s2,s2,0x4
    3bc8:	0004                	0x4
    3bca:	0501                	addi	a0,a0,0
    3bcc:	8b03060b          	0x8b03060b
    3bd0:	097f                	0x97f
    3bd2:	0000                	unimp
    3bd4:	0501                	addi	a0,a0,0
    3bd6:	031a                	slli	t1,t1,0x6
    3bd8:	01b9                	addi	gp,gp,14
    3bda:	0c09                	addi	s8,s8,2
    3bdc:	0100                	addi	s0,sp,128
    3bde:	0b05                	addi	s6,s6,1
    3be0:	097ec703          	lbu	a4,151(t4) # ffff6097 <__freertos_irq_stack_top+0xfefe6097>
    3be4:	0004                	0x4
    3be6:	0501                	addi	a0,a0,0
    3be8:	0605                	addi	a2,a2,1
    3bea:	04090403          	lb	s0,64(s2)
    3bee:	0100                	addi	s0,sp,128
    3bf0:	0901b003          	0x901b003
    3bf4:	0000                	unimp
    3bf6:	0301                	addi	t1,t1,0
    3bf8:	0901                	addi	s2,s2,0
    3bfa:	0000                	unimp
    3bfc:	0501                	addi	a0,a0,0
    3bfe:	061a                	slli	a2,a2,0x6
    3c00:	00090403          	lb	s0,0(s2)
    3c04:	0100                	addi	s0,sp,128
    3c06:	0c05                	addi	s8,s8,1
    3c08:	10097c03          	0x10097c03
    3c0c:	0100                	addi	s0,sp,128
    3c0e:	1a05                	addi	s4,s4,-31
    3c10:	04090403          	lb	s0,64(s2)
    3c14:	0100                	addi	s0,sp,128
    3c16:	1505                	addi	a0,a0,-31
    3c18:	097fb303          	0x97fb303
    3c1c:	001c                	0x1c
    3c1e:	0501                	addi	a0,a0,0
    3c20:	0310                	addi	a2,sp,384
    3c22:	040900cb          	0x40900cb
    3c26:	0100                	addi	s0,sp,128
    3c28:	0d05                	addi	s10,s10,1
    3c2a:	0306                	slli	t1,t1,0x1
    3c2c:	0902                	c.slli64	s2
    3c2e:	0004                	0x4
    3c30:	0301                	addi	t1,t1,0
    3c32:	0901                	addi	s2,s2,0
    3c34:	0000                	unimp
    3c36:	0501                	addi	a0,a0,0
    3c38:	0610                	addi	a2,sp,768
    3c3a:	00097d03          	0x97d03
    3c3e:	0100                	addi	s0,sp,128
    3c40:	1405                	addi	s0,s0,-31
    3c42:	0c090303          	lb	t1,192(s2)
    3c46:	0100                	addi	s0,sp,128
    3c48:	1105                	addi	sp,sp,-31
    3c4a:	0306                	slli	t1,t1,0x1
    3c4c:	0902                	c.slli64	s2
    3c4e:	0004                	0x4
    3c50:	0501                	addi	a0,a0,0
    3c52:	0636                	slli	a2,a2,0xd
    3c54:	00090003          	lb	zero,0(s2)
    3c58:	0100                	addi	s0,sp,128
    3c5a:	2105                	jal	407a <__divdf3+0x79e>
    3c5c:	08097e03          	0x8097e03
    3c60:	0100                	addi	s0,sp,128
    3c62:	3605                	jal	3782 <__udivdi3+0x552>
    3c64:	08090203          	lb	tp,128(s2)
    3c68:	0100                	addi	s0,sp,128
    3c6a:	1e05                	addi	t3,t3,-31
    3c6c:	08090003          	lb	zero,128(s2)
    3c70:	0100                	addi	s0,sp,128
    3c72:	0d05                	addi	s10,s10,1
    3c74:	08097e03          	0x8097e03
    3c78:	0100                	addi	s0,sp,128
    3c7a:	1d05                	addi	s10,s10,-31
    3c7c:	08097d03          	0x8097d03
    3c80:	0100                	addi	s0,sp,128
    3c82:	0905                	addi	s2,s2,1
    3c84:	0c090003          	lb	zero,192(s2)
    3c88:	0100                	addi	s0,sp,128
    3c8a:	1905                	addi	s2,s2,-31
    3c8c:	04097e03          	0x4097e03
    3c90:	0100                	addi	s0,sp,128
    3c92:	0505                	addi	a0,a0,1
    3c94:	20090003          	lb	zero,512(s2)
    3c98:	0100                	addi	s0,sp,128
    3c9a:	0c05                	addi	s8,s8,1
    3c9c:	097fac03          	lw	s8,151(t6)
    3ca0:	0008                	0x8
    3ca2:	0501                	addi	a0,a0,0
    3ca4:	0315                	addi	t1,t1,5
    3ca6:	097f                	0x97f
    3ca8:	0004                	0x4
    3caa:	0501                	addi	a0,a0,0
    3cac:	030c                	addi	a1,sp,384
    3cae:	0900                	addi	s0,sp,144
    3cb0:	0004                	0x4
    3cb2:	0301                	addi	t1,t1,0
    3cb4:	00040903          	lb	s2,0(s0)
    3cb8:	0501                	addi	a0,a0,0
    3cba:	0310                	addi	a2,sp,384
    3cbc:	0902                	c.slli64	s2
    3cbe:	0008                	0x8
    3cc0:	0501                	addi	a0,a0,0
    3cc2:	0315                	addi	t1,t1,5
    3cc4:	0008090b          	0x8090b
    3cc8:	0501                	addi	a0,a0,0
    3cca:	031d                	addi	t1,t1,7
    3ccc:	0975                	addi	s2,s2,29
    3cce:	0004                	0x4
    3cd0:	0501                	addi	a0,a0,0
    3cd2:	0315                	addi	t1,t1,5
    3cd4:	0004090b          	0x4090b
    3cd8:	0501                	addi	a0,a0,0
    3cda:	060d                	addi	a2,a2,3
    3cdc:	04090203          	lb	tp,64(s2)
    3ce0:	0100                	addi	s0,sp,128
    3ce2:	1105                	addi	sp,sp,-31
    3ce4:	0306                	slli	t1,t1,0x1
    3ce6:	0975                	addi	s2,s2,29
    3ce8:	0004                	0x4
    3cea:	0501                	addi	a0,a0,0
    3cec:	0309                	addi	t1,t1,2
    3cee:	097e                	slli	s2,s2,0x1f
    3cf0:	0004                	0x4
    3cf2:	0501                	addi	a0,a0,0
    3cf4:	060d                	addi	a2,a2,3
    3cf6:	04090203          	lb	tp,64(s2)
    3cfa:	0100                	addi	s0,sp,128
    3cfc:	1105                	addi	sp,sp,-31
    3cfe:	00090903          	lb	s2,0(s2)
    3d02:	0100                	addi	s0,sp,128
    3d04:	00097b03          	0x97b03
    3d08:	0100                	addi	s0,sp,128
    3d0a:	0306                	slli	t1,t1,0x1
    3d0c:	097c                	addi	a5,sp,156
    3d0e:	0000                	unimp
    3d10:	0501                	addi	a0,a0,0
    3d12:	060d                	addi	a2,a2,3
    3d14:	04090103          	lb	sp,64(s2)
    3d18:	0100                	addi	s0,sp,128
    3d1a:	2905                	jal	414a <__divdf3+0x86e>
    3d1c:	0306                	slli	t1,t1,0x1
    3d1e:	0908                	addi	a0,sp,144
    3d20:	0008                	0x8
    3d22:	0501                	addi	a0,a0,0
    3d24:	0311                	addi	t1,t1,4
    3d26:	0978                	addi	a4,sp,156
    3d28:	0004                	0x4
    3d2a:	0501                	addi	a0,a0,0
    3d2c:	060d                	addi	a2,a2,3
    3d2e:	04090103          	lb	sp,64(s2)
    3d32:	0100                	addi	s0,sp,128
    3d34:	1505                	addi	a0,a0,-31
    3d36:	0306                	slli	t1,t1,0x1
    3d38:	0902                	c.slli64	s2
    3d3a:	0000                	unimp
    3d3c:	0301                	addi	t1,t1,0
    3d3e:	0905                	addi	s2,s2,1
    3d40:	0004                	0x4
    3d42:	0501                	addi	a0,a0,0
    3d44:	0310                	addi	a2,sp,384
    3d46:	0979                	addi	s2,s2,30
    3d48:	0004                	0x4
    3d4a:	0501                	addi	a0,a0,0
    3d4c:	0315                	addi	t1,t1,5
    3d4e:	0902                	c.slli64	s2
    3d50:	0004                	0x4
    3d52:	0501                	addi	a0,a0,0
    3d54:	031d                	addi	t1,t1,7
    3d56:	097a                	slli	s2,s2,0x1e
    3d58:	0004                	0x4
    3d5a:	0501                	addi	a0,a0,0
    3d5c:	0315                	addi	t1,t1,5
    3d5e:	0906                	slli	s2,s2,0x1
    3d60:	0004                	0x4
    3d62:	0501                	addi	a0,a0,0
    3d64:	0611                	addi	a2,a2,4
    3d66:	04090103          	lb	sp,64(s2)
    3d6a:	0100                	addi	s0,sp,128
    3d6c:	1505                	addi	a0,a0,-31
    3d6e:	0306                	slli	t1,t1,0x1
    3d70:	0900                	addi	s0,sp,144
    3d72:	0000                	unimp
    3d74:	0501                	addi	a0,a0,0
    3d76:	060d                	addi	a2,a2,3
    3d78:	04090603          	lb	a2,64(s2)
    3d7c:	0100                	addi	s0,sp,128
    3d7e:	1105                	addi	sp,sp,-31
    3d80:	0306                	slli	t1,t1,0x1
    3d82:	0975                	addi	s2,s2,29
    3d84:	0004                	0x4
    3d86:	0501                	addi	a0,a0,0
    3d88:	0309                	addi	t1,t1,2
    3d8a:	097e                	slli	s2,s2,0x1f
    3d8c:	0004                	0x4
    3d8e:	0501                	addi	a0,a0,0
    3d90:	0319                	addi	t1,t1,6
    3d92:	097e                	slli	s2,s2,0x1f
    3d94:	0008                	0x8
    3d96:	0501                	addi	a0,a0,0
    3d98:	0305                	addi	t1,t1,1
    3d9a:	0900                	addi	s0,sp,144
    3d9c:	0008                	0x8
    3d9e:	0601                	addi	a2,a2,0
    3da0:	04091203          	lh	tp,64(s2)
    3da4:	0100                	addi	s0,sp,128
    3da6:	0b05                	addi	s6,s6,1
    3da8:	0306                	slli	t1,t1,0x1
    3daa:	7f90                	flw	fa2,56(a5)
    3dac:	0009                	c.nop	2
    3dae:	0100                	addi	s0,sp,128
    3db0:	0505                	addi	a0,a0,1
    3db2:	0306                	slli	t1,t1,0x1
    3db4:	0904                	addi	s1,sp,144
    3db6:	0018                	0x18
    3db8:	0301                	addi	t1,t1,0
    3dba:	01c1                	addi	gp,gp,16
    3dbc:	0009                	c.nop	2
    3dbe:	0100                	addi	s0,sp,128
    3dc0:	00090103          	lb	sp,0(s2)
    3dc4:	0100                	addi	s0,sp,128
    3dc6:	0b05                	addi	s6,s6,1
    3dc8:	0306                	slli	t1,t1,0x1
    3dca:	7eba                	flw	ft9,172(sp)
    3dcc:	0009                	c.nop	2
    3dce:	0100                	addi	s0,sp,128
    3dd0:	0c05                	addi	s8,s8,1
    3dd2:	0901c603          	lbu	a2,144(gp) # 10014c0 <__global_pointer$+0x90>
    3dd6:	0004                	0x4
    3dd8:	0501                	addi	a0,a0,0
    3dda:	0315                	addi	t1,t1,5
    3ddc:	7fa1                	lui	t6,0xfffe8
    3dde:	1c09                	addi	s8,s8,-30
    3de0:	0100                	addi	s0,sp,128
    3de2:	1005                	c.nop	-31
    3de4:	0900e103          	0x900e103
    3de8:	0004                	0x4
    3dea:	0501                	addi	a0,a0,0
    3dec:	060d                	addi	a2,a2,3
    3dee:	04090203          	lb	tp,64(s2)
    3df2:	0100                	addi	s0,sp,128
    3df4:	00090103          	lb	sp,0(s2)
    3df8:	0100                	addi	s0,sp,128
    3dfa:	1005                	c.nop	-31
    3dfc:	0306                	slli	t1,t1,0x1
    3dfe:	097d                	addi	s2,s2,31
    3e00:	0000                	unimp
    3e02:	0501                	addi	a0,a0,0
    3e04:	0314                	addi	a3,sp,384
    3e06:	000c0903          	lb	s2,0(s8) # 1a000 <_data_lma+0xee88>
    3e0a:	0501                	addi	a0,a0,0
    3e0c:	0611                	addi	a2,a2,4
    3e0e:	04090203          	lb	tp,64(s2)
    3e12:	0100                	addi	s0,sp,128
    3e14:	1805                	addi	a6,a6,-31
    3e16:	0306                	slli	t1,t1,0x1
    3e18:	0900                	addi	s0,sp,144
    3e1a:	0000                	unimp
    3e1c:	0501                	addi	a0,a0,0
    3e1e:	0321                	addi	t1,t1,8
    3e20:	097e                	slli	s2,s2,0x1f
    3e22:	0008                	0x8
    3e24:	0501                	addi	a0,a0,0
    3e26:	0318                	addi	a4,sp,384
    3e28:	0902                	c.slli64	s2
    3e2a:	0008                	0x8
    3e2c:	0501                	addi	a0,a0,0
    3e2e:	0611                	addi	a2,a2,4
    3e30:	08090103          	lb	sp,128(s2)
    3e34:	0100                	addi	s0,sp,128
    3e36:	2105                	jal	4256 <__gedf2+0x76>
    3e38:	0306                	slli	t1,t1,0x1
    3e3a:	0900                	addi	s0,sp,144
    3e3c:	0000                	unimp
    3e3e:	0501                	addi	a0,a0,0
    3e40:	033a                	slli	t1,t1,0xe
    3e42:	0900                	addi	s0,sp,144
    3e44:	0004                	0x4
    3e46:	0501                	addi	a0,a0,0
    3e48:	0338                	addi	a4,sp,392
    3e4a:	0900                	addi	s0,sp,144
    3e4c:	0004                	0x4
    3e4e:	0501                	addi	a0,a0,0
    3e50:	031e                	slli	t1,t1,0x7
    3e52:	0900                	addi	s0,sp,144
    3e54:	0010                	0x10
    3e56:	0501                	addi	a0,a0,0
    3e58:	030d                	addi	t1,t1,3
    3e5a:	097d                	addi	s2,s2,31
    3e5c:	0008                	0x8
    3e5e:	0501                	addi	a0,a0,0
    3e60:	031d                	addi	t1,t1,7
    3e62:	097d                	addi	s2,s2,31
    3e64:	0008                	0x8
    3e66:	0501                	addi	a0,a0,0
    3e68:	0309                	addi	t1,t1,2
    3e6a:	0900                	addi	s0,sp,144
    3e6c:	000c                	0xc
    3e6e:	0501                	addi	a0,a0,0
    3e70:	0319                	addi	t1,t1,6
    3e72:	097e                	slli	s2,s2,0x1f
    3e74:	0004                	0x4
    3e76:	0501                	addi	a0,a0,0
    3e78:	0305                	addi	t1,t1,1
    3e7a:	0900                	addi	s0,sp,144
    3e7c:	0020                	addi	s0,sp,8
    3e7e:	0501                	addi	a0,a0,0
    3e80:	030c                	addi	a1,sp,384
    3e82:	7f96                	flw	ft11,100(sp)
    3e84:	0409                	addi	s0,s0,2
    3e86:	0100                	addi	s0,sp,128
    3e88:	1505                	addi	a0,a0,-31
    3e8a:	04097f03          	0x4097f03
    3e8e:	0100                	addi	s0,sp,128
    3e90:	0c05                	addi	s8,s8,1
    3e92:	04090003          	lb	zero,64(s2)
    3e96:	0100                	addi	s0,sp,128
    3e98:	04090303          	lb	t1,64(s2)
    3e9c:	0100                	addi	s0,sp,128
    3e9e:	1005                	c.nop	-31
    3ea0:	08090203          	lb	tp,128(s2)
    3ea4:	0100                	addi	s0,sp,128
    3ea6:	1505                	addi	a0,a0,-31
    3ea8:	08090b03          	lb	s6,128(s2)
    3eac:	0100                	addi	s0,sp,128
    3eae:	1d05                	addi	s10,s10,-31
    3eb0:	04097503          	0x4097503
    3eb4:	0100                	addi	s0,sp,128
    3eb6:	1505                	addi	a0,a0,-31
    3eb8:	04090b03          	lb	s6,64(s2)
    3ebc:	0100                	addi	s0,sp,128
    3ebe:	0d05                	addi	s10,s10,1
    3ec0:	0306                	slli	t1,t1,0x1
    3ec2:	0902                	c.slli64	s2
    3ec4:	0004                	0x4
    3ec6:	0501                	addi	a0,a0,0
    3ec8:	0611                	addi	a2,a2,4
    3eca:	04097503          	0x4097503
    3ece:	0100                	addi	s0,sp,128
    3ed0:	0905                	addi	s2,s2,1
    3ed2:	04097e03          	0x4097e03
    3ed6:	0100                	addi	s0,sp,128
    3ed8:	0d05                	addi	s10,s10,1
    3eda:	0306                	slli	t1,t1,0x1
    3edc:	0902                	c.slli64	s2
    3ede:	0004                	0x4
    3ee0:	0501                	addi	a0,a0,0
    3ee2:	0311                	addi	t1,t1,4
    3ee4:	0909                	addi	s2,s2,2
    3ee6:	0000                	unimp
    3ee8:	0301                	addi	t1,t1,0
    3eea:	0000097b          	0x97b
    3eee:	0601                	addi	a2,a2,0
    3ef0:	00097c03          	0x97c03
    3ef4:	0100                	addi	s0,sp,128
    3ef6:	0d05                	addi	s10,s10,1
    3ef8:	0306                	slli	t1,t1,0x1
    3efa:	0901                	addi	s2,s2,0
    3efc:	0004                	0x4
    3efe:	0501                	addi	a0,a0,0
    3f00:	0629                	addi	a2,a2,10
    3f02:	08090803          	lb	a6,128(s2)
    3f06:	0100                	addi	s0,sp,128
    3f08:	1105                	addi	sp,sp,-31
    3f0a:	04097803          	0x4097803
    3f0e:	0100                	addi	s0,sp,128
    3f10:	0d05                	addi	s10,s10,1
    3f12:	0306                	slli	t1,t1,0x1
    3f14:	0901                	addi	s2,s2,0
    3f16:	0004                	0x4
    3f18:	0501                	addi	a0,a0,0
    3f1a:	0615                	addi	a2,a2,5
    3f1c:	00090203          	lb	tp,0(s2)
    3f20:	0100                	addi	s0,sp,128
    3f22:	04090503          	lb	a0,64(s2)
    3f26:	0100                	addi	s0,sp,128
    3f28:	1005                	c.nop	-31
    3f2a:	04097903          	0x4097903
    3f2e:	0100                	addi	s0,sp,128
    3f30:	1505                	addi	a0,a0,-31
    3f32:	04090203          	lb	tp,64(s2)
    3f36:	0100                	addi	s0,sp,128
    3f38:	1d05                	addi	s10,s10,-31
    3f3a:	04097a03          	0x4097a03
    3f3e:	0100                	addi	s0,sp,128
    3f40:	1505                	addi	a0,a0,-31
    3f42:	04090603          	lb	a2,64(s2)
    3f46:	0100                	addi	s0,sp,128
    3f48:	1105                	addi	sp,sp,-31
    3f4a:	0306                	slli	t1,t1,0x1
    3f4c:	0901                	addi	s2,s2,0
    3f4e:	0004                	0x4
    3f50:	0501                	addi	a0,a0,0
    3f52:	0615                	addi	a2,a2,5
    3f54:	00090003          	lb	zero,0(s2)
    3f58:	0100                	addi	s0,sp,128
    3f5a:	0d05                	addi	s10,s10,1
    3f5c:	0306                	slli	t1,t1,0x1
    3f5e:	0906                	slli	s2,s2,0x1
    3f60:	0004                	0x4
    3f62:	0501                	addi	a0,a0,0
    3f64:	0611                	addi	a2,a2,4
    3f66:	04097503          	0x4097503
    3f6a:	0100                	addi	s0,sp,128
    3f6c:	0905                	addi	s2,s2,1
    3f6e:	04097e03          	0x4097e03
    3f72:	0100                	addi	s0,sp,128
    3f74:	1905                	addi	s2,s2,-31
    3f76:	0c097e03          	0xc097e03
    3f7a:	0100                	addi	s0,sp,128
    3f7c:	1105                	addi	sp,sp,-31
    3f7e:	0c090403          	lb	s0,192(s2)
    3f82:	0100                	addi	s0,sp,128
    3f84:	0505                	addi	a0,a0,1
    3f86:	04097c03          	0x4097c03
    3f8a:	0100                	addi	s0,sp,128
    3f8c:	0306                	slli	t1,t1,0x1
    3f8e:	0912                	slli	s2,s2,0x4
    3f90:	0004                	0x4
    3f92:	0501                	addi	a0,a0,0
    3f94:	9503060b          	0x9503060b
    3f98:	097f                	0x97f
    3f9a:	0000                	unimp
    3f9c:	0501                	addi	a0,a0,0
    3f9e:	0605                	addi	a2,a2,1
    3fa0:	0c090503          	lb	a0,192(s2)
    3fa4:	0100                	addi	s0,sp,128
    3fa6:	0c05                	addi	s8,s8,1
    3fa8:	0306                	slli	t1,t1,0x1
    3faa:	0181                	addi	gp,gp,0
    3fac:	0009                	c.nop	2
    3fae:	0100                	addi	s0,sp,128
    3fb0:	1505                	addi	a0,a0,-31
    3fb2:	04095c03          	lhu	s8,64(s2)
    3fb6:	0100                	addi	s0,sp,128
    3fb8:	1005                	c.nop	-31
    3fba:	04092603          	lw	a2,64(s2)
    3fbe:	0100                	addi	s0,sp,128
    3fc0:	0d05                	addi	s10,s10,1
    3fc2:	0306                	slli	t1,t1,0x1
    3fc4:	0902                	c.slli64	s2
    3fc6:	0004                	0x4
    3fc8:	0501                	addi	a0,a0,0
    3fca:	061a                	slli	a2,a2,0x6
    3fcc:	00090003          	lb	zero,0(s2)
    3fd0:	0100                	addi	s0,sp,128
    3fd2:	1d05                	addi	s10,s10,-31
    3fd4:	08097e03          	0x8097e03
    3fd8:	0100                	addi	s0,sp,128
    3fda:	1a05                	addi	s4,s4,-31
    3fdc:	04090203          	lb	tp,64(s2)
    3fe0:	0100                	addi	s0,sp,128
    3fe2:	0905                	addi	s2,s2,1
    3fe4:	08097e03          	0x8097e03
    3fe8:	0100                	addi	s0,sp,128
    3fea:	1905                	addi	s2,s2,-31
    3fec:	08097e03          	0x8097e03
    3ff0:	0100                	addi	s0,sp,128
    3ff2:	0505                	addi	a0,a0,1
    3ff4:	0c090003          	lb	zero,192(s2)
    3ff8:	0100                	addi	s0,sp,128
    3ffa:	0306                	slli	t1,t1,0x1
    3ffc:	7f80                	flw	fs0,56(a5)
    3ffe:	0409                	addi	s0,s0,2
    4000:	0100                	addi	s0,sp,128
    4002:	0105                	addi	sp,sp,1
    4004:	0306                	slli	t1,t1,0x1
    4006:	0901                	addi	s2,s2,0
    4008:	0000                	unimp
    400a:	0501                	addi	a0,a0,0
    400c:	030c                	addi	a1,sp,384
    400e:	097f                	0x97f
    4010:	0008                	0x8
    4012:	0501                	addi	a0,a0,0
    4014:	0301                	addi	t1,t1,0
    4016:	0901                	addi	s2,s2,0
    4018:	0004                	0x4
    401a:	0501                	addi	a0,a0,0
    401c:	030c                	addi	a1,sp,384
    401e:	097f                	0x97f
    4020:	002c                	addi	a1,sp,8
    4022:	0501                	addi	a0,a0,0
    4024:	0301                	addi	t1,t1,0
    4026:	0901                	addi	s2,s2,0
    4028:	0004                	0x4
    402a:	0501                	addi	a0,a0,0
    402c:	031a                	slli	t1,t1,0x6
    402e:	01a8                	addi	a0,sp,200
    4030:	0809                	addi	a6,a6,2
    4032:	0100                	addi	s0,sp,128
    4034:	0505                	addi	a0,a0,1
    4036:	0306                	slli	t1,t1,0x1
    4038:	7fbc                	flw	fa5,120(a5)
    403a:	0c09                	addi	s8,s8,2
    403c:	0100                	addi	s0,sp,128
    403e:	0b05                	addi	s6,s6,1
    4040:	0306                	slli	t1,t1,0x1
    4042:	7f86                	flw	ft11,96(sp)
    4044:	0009                	c.nop	2
    4046:	0100                	addi	s0,sp,128
    4048:	0505                	addi	a0,a0,1
    404a:	0306                	slli	t1,t1,0x1
    404c:	0904                	addi	s1,sp,144
    404e:	000c                	0xc
    4050:	0301                	addi	t1,t1,0
    4052:	01a2                	slli	gp,gp,0x8
    4054:	0009                	c.nop	2
    4056:	0100                	addi	s0,sp,128
    4058:	00090103          	lb	sp,0(s2)
    405c:	0100                	addi	s0,sp,128
    405e:	00095303          	lhu	t1,0(s2)
    4062:	0100                	addi	s0,sp,128
    4064:	0b05                	addi	s6,s6,1
    4066:	0306                	slli	t1,t1,0x1
    4068:	00097f8b          	0x97f8b
    406c:	0100                	addi	s0,sp,128
    406e:	0505                	addi	a0,a0,1
    4070:	0306                	slli	t1,t1,0x1
    4072:	0904                	addi	s1,sp,144
    4074:	0010                	0x10
    4076:	0301                	addi	t1,t1,0
    4078:	01b0                	addi	a2,sp,200
    407a:	0009                	c.nop	2
    407c:	0100                	addi	s0,sp,128
    407e:	00090103          	lb	sp,0(s2)
    4082:	0100                	addi	s0,sp,128
    4084:	00094003          	lbu	zero,0(s2)
    4088:	0100                	addi	s0,sp,128
    408a:	0b05                	addi	s6,s6,1
    408c:	0306                	slli	t1,t1,0x1
    408e:	7f90                	flw	fa2,56(a5)
    4090:	0009                	c.nop	2
    4092:	0100                	addi	s0,sp,128
    4094:	0505                	addi	a0,a0,1
    4096:	0306                	slli	t1,t1,0x1
    4098:	0904                	addi	s1,sp,144
    409a:	0010                	0x10
    409c:	0301                	addi	t1,t1,0
    409e:	01c1                	addi	gp,gp,16
    40a0:	0009                	c.nop	2
    40a2:	0100                	addi	s0,sp,128
    40a4:	00090103          	lb	sp,0(s2)
    40a8:	0100                	addi	s0,sp,128
    40aa:	097faa03          	lw	s4,151(t6) # fffe8097 <__freertos_irq_stack_top+0xfefd8097>
    40ae:	0000                	unimp
    40b0:	0501                	addi	a0,a0,0
    40b2:	9503060b          	0x9503060b
    40b6:	097f                	0x97f
    40b8:	0000                	unimp
    40ba:	0501                	addi	a0,a0,0
    40bc:	0605                	addi	a2,a2,1
    40be:	10090503          	lb	a0,256(s2)
    40c2:	0100                	addi	s0,sp,128
    40c4:	0409                	addi	s0,s0,2
    40c6:	0000                	unimp
    40c8:	0101                	addi	sp,sp,0
    40ca:	0105                	addi	sp,sp,1
    40cc:	0500                	addi	s0,sp,640
    40ce:	4802                	lw	a6,0(sp)
    40d0:	001d                	c.nop	7
    40d2:	0300                	addi	s0,sp,384
    40d4:	00dc                	addi	a5,sp,68
    40d6:	0501                	addi	a0,a0,0
    40d8:	0305                	addi	t1,t1,1
    40da:	0901                	addi	s2,s2,0
    40dc:	0000                	unimp
    40de:	0301                	addi	t1,t1,0
    40e0:	0901                	addi	s2,s2,0
    40e2:	0000                	unimp
    40e4:	0301                	addi	t1,t1,0
    40e6:	0901                	addi	s2,s2,0
    40e8:	0000                	unimp
    40ea:	0301                	addi	t1,t1,0
    40ec:	0901                	addi	s2,s2,0
    40ee:	0000                	unimp
    40f0:	0301                	addi	t1,t1,0
    40f2:	0901                	addi	s2,s2,0
    40f4:	0000                	unimp
    40f6:	0301                	addi	t1,t1,0
    40f8:	0902                	c.slli64	s2
    40fa:	0000                	unimp
    40fc:	0501                	addi	a0,a0,0
    40fe:	0601                	addi	a2,a2,0
    4100:	00097903          	0x97903
    4104:	0100                	addi	s0,sp,128
    4106:	0b05                	addi	s6,s6,1
    4108:	08090703          	lb	a4,128(s2)
    410c:	0100                	addi	s0,sp,128
    410e:	0105                	addi	sp,sp,1
    4110:	04097903          	0x4097903
    4114:	0100                	addi	s0,sp,128
    4116:	0b05                	addi	s6,s6,1
    4118:	04090703          	lb	a4,64(s2)
    411c:	0100                	addi	s0,sp,128
    411e:	0105                	addi	sp,sp,1
    4120:	10097903          	0x10097903
    4124:	0100                	addi	s0,sp,128
    4126:	0b05                	addi	s6,s6,1
    4128:	04090703          	lb	a4,64(s2)
    412c:	0100                	addi	s0,sp,128
    412e:	0105                	addi	sp,sp,1
    4130:	0c090303          	lb	t1,192(s2)
    4134:	0100                	addi	s0,sp,128
    4136:	0b05                	addi	s6,s6,1
    4138:	0c097d03          	0xc097d03
    413c:	0100                	addi	s0,sp,128
    413e:	0809                	addi	a6,a6,2
    4140:	0000                	unimp
    4142:	0101                	addi	sp,sp,0
    4144:	0105                	addi	sp,sp,1
    4146:	0500                	addi	s0,sp,640
    4148:	8c02                	jr	s8
    414a:	001d                	c.nop	7
    414c:	0300                	addi	s0,sp,384
    414e:	01b5                	addi	gp,gp,13
    4150:	0501                	addi	a0,a0,0
    4152:	0305                	addi	t1,t1,1
    4154:	0901                	addi	s2,s2,0
    4156:	000c                	0xc
    4158:	0501                	addi	a0,a0,0
    415a:	0601                	addi	a2,a2,0
    415c:	04097f03          	0x4097f03
    4160:	0100                	addi	s0,sp,128
    4162:	0505                	addi	a0,a0,1
    4164:	04090103          	lb	sp,64(s2)
    4168:	0100                	addi	s0,sp,128
    416a:	0105                	addi	sp,sp,1
    416c:	04097f03          	0x4097f03
    4170:	0100                	addi	s0,sp,128
    4172:	30090003          	lb	zero,768(s2)
    4176:	0100                	addi	s0,sp,128
    4178:	0505                	addi	a0,a0,1
    417a:	08090103          	lb	sp,128(s2)
    417e:	0100                	addi	s0,sp,128
    4180:	0306                	slli	t1,t1,0x1
    4182:	0901                	addi	s2,s2,0
    4184:	0008                	0x8
    4186:	0301                	addi	t1,t1,0
    4188:	0901                	addi	s2,s2,0
    418a:	0000                	unimp
    418c:	0301                	addi	t1,t1,0
    418e:	0901                	addi	s2,s2,0
    4190:	0000                	unimp
    4192:	0301                	addi	t1,t1,0
    4194:	0901                	addi	s2,s2,0
    4196:	0000                	unimp
    4198:	0301                	addi	t1,t1,0
    419a:	0901                	addi	s2,s2,0
    419c:	0000                	unimp
    419e:	0301                	addi	t1,t1,0
    41a0:	0901                	addi	s2,s2,0
    41a2:	0000                	unimp
    41a4:	0301                	addi	t1,t1,0
    41a6:	0901                	addi	s2,s2,0
    41a8:	0000                	unimp
    41aa:	0501                	addi	a0,a0,0
    41ac:	0608                	addi	a0,sp,768
    41ae:	00090003          	lb	zero,0(s2)
    41b2:	0100                	addi	s0,sp,128
    41b4:	0e05                	addi	t3,t3,1
    41b6:	04090103          	lb	sp,64(s2)
    41ba:	0100                	addi	s0,sp,128
    41bc:	0b05                	addi	s6,s6,1
    41be:	14090103          	lb	sp,320(s2)
    41c2:	0100                	addi	s0,sp,128
    41c4:	0a05                	addi	s4,s4,1
    41c6:	0c090203          	lb	tp,192(s2)
    41ca:	0100                	addi	s0,sp,128
    41cc:	0905                	addi	s2,s2,1
    41ce:	0306                	slli	t1,t1,0x1
    41d0:	0900                	addi	s0,sp,144
    41d2:	0004                	0x4
    41d4:	0501                	addi	a0,a0,0
    41d6:	060a                	slli	a2,a2,0x2
    41d8:	00090003          	lb	zero,0(s2)
    41dc:	0100                	addi	s0,sp,128
    41de:	0905                	addi	s2,s2,1
    41e0:	0306                	slli	t1,t1,0x1
    41e2:	0901                	addi	s2,s2,0
    41e4:	0004                	0x4
    41e6:	0501                	addi	a0,a0,0
    41e8:	0003060f          	0x3060f
    41ec:	0009                	c.nop	2
    41ee:	0100                	addi	s0,sp,128
    41f0:	0b05                	addi	s6,s6,1
    41f2:	10090003          	lb	zero,256(s2)
    41f6:	0100                	addi	s0,sp,128
    41f8:	04097d03          	0x4097d03
    41fc:	0100                	addi	s0,sp,128
    41fe:	0505                	addi	a0,a0,1
    4200:	0306                	slli	t1,t1,0x1
    4202:	0905                	addi	s2,s2,1
    4204:	0004                	0x4
    4206:	0301                	addi	t1,t1,0
    4208:	0901                	addi	s2,s2,0
    420a:	0000                	unimp
    420c:	0301                	addi	t1,t1,0
    420e:	0901                	addi	s2,s2,0
    4210:	0000                	unimp
    4212:	0501                	addi	a0,a0,0
    4214:	0003060f          	0x3060f
    4218:	0009                	c.nop	2
    421a:	0100                	addi	s0,sp,128
    421c:	0705                	addi	a4,a4,1
    421e:	10090003          	lb	zero,256(s2)
    4222:	0100                	addi	s0,sp,128
    4224:	0b05                	addi	s6,s6,1
    4226:	04090003          	lb	zero,64(s2)
    422a:	0100                	addi	s0,sp,128
    422c:	0705                	addi	a4,a4,1
    422e:	0c090003          	lb	zero,192(s2)
    4232:	0100                	addi	s0,sp,128
    4234:	0505                	addi	a0,a0,1
    4236:	0306                	slli	t1,t1,0x1
    4238:	0902                	c.slli64	s2
    423a:	0004                	0x4
    423c:	0501                	addi	a0,a0,0
    423e:	061a                	slli	a2,a2,0x6
    4240:	08090403          	lb	s0,128(s2)
    4244:	0100                	addi	s0,sp,128
    4246:	0b05                	addi	s6,s6,1
    4248:	08097a03          	0x8097a03
    424c:	0100                	addi	s0,sp,128
    424e:	1a05                	addi	s4,s4,-31
    4250:	10090603          	lb	a2,256(s2)
    4254:	0100                	addi	s0,sp,128
    4256:	0e05                	addi	t3,t3,1
    4258:	04097203          	0x4097203
    425c:	0100                	addi	s0,sp,128
    425e:	1005                	c.nop	-31
    4260:	04090c03          	lb	s8,64(s2)
    4264:	0100                	addi	s0,sp,128
    4266:	0d05                	addi	s10,s10,1
    4268:	0200                	addi	s0,sp,256
    426a:	0304                	addi	s1,sp,384
    426c:	0306                	slli	t1,t1,0x1
    426e:	0902                	c.slli64	s2
    4270:	0004                	0x4
    4272:	0501                	addi	a0,a0,0
    4274:	0024                	addi	s1,sp,8
    4276:	0402                	c.slli64	s0
    4278:	00030603          	lb	a2,0(t1) # ffffa000 <__freertos_irq_stack_top+0xfefea000>
    427c:	0009                	c.nop	2
    427e:	0100                	addi	s0,sp,128
    4280:	1a05                	addi	s4,s4,-31
    4282:	0200                	addi	s0,sp,256
    4284:	0304                	addi	s1,sp,384
    4286:	10090003          	lb	zero,256(s2)
    428a:	0100                	addi	s0,sp,128
    428c:	0d05                	addi	s10,s10,1
    428e:	0200                	addi	s0,sp,256
    4290:	0304                	addi	s1,sp,384
    4292:	0306                	slli	t1,t1,0x1
    4294:	0901                	addi	s2,s2,0
    4296:	001c                	0x1c
    4298:	0501                	addi	a0,a0,0
    429a:	0022                	c.slli	zero,0x8
    429c:	0402                	c.slli64	s0
    429e:	00030603          	lb	a2,0(t1)
    42a2:	0009                	c.nop	2
    42a4:	0100                	addi	s0,sp,128
    42a6:	0d05                	addi	s10,s10,1
    42a8:	0200                	addi	s0,sp,256
    42aa:	0304                	addi	s1,sp,384
    42ac:	0306                	slli	t1,t1,0x1
    42ae:	0901                	addi	s2,s2,0
    42b0:	000c                	0xc
    42b2:	0001                	nop
    42b4:	0402                	c.slli64	s0
    42b6:	09010303          	lb	t1,144(sp)
    42ba:	0000                	unimp
    42bc:	0501                	addi	a0,a0,0
    42be:	0021                	c.nop	8
    42c0:	0402                	c.slli64	s0
    42c2:	01030603          	lb	a2,16(t1)
    42c6:	0009                	c.nop	2
    42c8:	0100                	addi	s0,sp,128
    42ca:	1a05                	addi	s4,s4,-31
    42cc:	0200                	addi	s0,sp,256
    42ce:	0304                	addi	s1,sp,384
    42d0:	04097f03          	0x4097f03
    42d4:	0100                	addi	s0,sp,128
    42d6:	0d05                	addi	s10,s10,1
    42d8:	0200                	addi	s0,sp,256
    42da:	0304                	addi	s1,sp,384
    42dc:	0306                	slli	t1,t1,0x1
    42de:	0901                	addi	s2,s2,0
    42e0:	0004                	0x4
    42e2:	0001                	nop
    42e4:	0402                	c.slli64	s0
    42e6:	09010303          	lb	t1,144(sp)
    42ea:	0000                	unimp
    42ec:	0001                	nop
    42ee:	0402                	c.slli64	s0
    42f0:	09010303          	lb	t1,144(sp)
    42f4:	0000                	unimp
    42f6:	0501                	addi	a0,a0,0
    42f8:	001a                	c.slli	zero,0x6
    42fa:	0402                	c.slli64	s0
    42fc:	7f030603          	lb	a2,2032(t1)
    4300:	0009                	c.nop	2
    4302:	0100                	addi	s0,sp,128
    4304:	0200                	addi	s0,sp,256
    4306:	0304                	addi	s1,sp,384
    4308:	04090103          	lb	sp,64(s2)
    430c:	0100                	addi	s0,sp,128
    430e:	0d05                	addi	s10,s10,1
    4310:	0200                	addi	s0,sp,256
    4312:	0304                	addi	s1,sp,384
    4314:	0306                	slli	t1,t1,0x1
    4316:	0901                	addi	s2,s2,0
    4318:	0008                	0x8
    431a:	0501                	addi	a0,a0,0
    431c:	001d                	c.nop	7
    431e:	0402                	c.slli64	s0
    4320:	77030603          	lb	a2,1904(t1)
    4324:	0009                	c.nop	2
    4326:	0100                	addi	s0,sp,128
    4328:	1205                	addi	tp,tp,-31
    432a:	0200                	addi	s0,sp,256
    432c:	0304                	addi	s1,sp,384
    432e:	04090903          	lb	s2,64(s2)
    4332:	0100                	addi	s0,sp,128
    4334:	0905                	addi	s2,s2,1
    4336:	0200                	addi	s0,sp,256
    4338:	0304                	addi	s1,sp,384
    433a:	08097703          	0x8097703
    433e:	0100                	addi	s0,sp,128
    4340:	1905                	addi	s2,s2,-31
    4342:	0200                	addi	s0,sp,256
    4344:	0204                	addi	s1,sp,256
    4346:	04097e03          	0x4097e03
    434a:	0100                	addi	s0,sp,128
    434c:	0505                	addi	a0,a0,1
    434e:	0200                	addi	s0,sp,256
    4350:	0204                	addi	s1,sp,256
    4352:	08090003          	lb	zero,128(s2)
    4356:	0100                	addi	s0,sp,128
    4358:	0306                	slli	t1,t1,0x1
    435a:	0004090f          	0x4090f
    435e:	0501                	addi	a0,a0,0
    4360:	0616                	slli	a2,a2,0x5
    4362:	00090203          	lb	tp,0(s2)
    4366:	0100                	addi	s0,sp,128
    4368:	0a05                	addi	s4,s4,1
    436a:	04097e03          	0x4097e03
    436e:	0100                	addi	s0,sp,128
    4370:	0105                	addi	sp,sp,1
    4372:	04090903          	lb	s2,64(s2)
    4376:	0100                	addi	s0,sp,128
    4378:	1605                	addi	a2,a2,-31
    437a:	04097903          	0x4097903
    437e:	0100                	addi	s0,sp,128
    4380:	0a05                	addi	s4,s4,1
    4382:	10090003          	lb	zero,256(s2)
    4386:	0100                	addi	s0,sp,128
    4388:	04090103          	lb	sp,64(s2)
    438c:	0100                	addi	s0,sp,128
    438e:	0105                	addi	sp,sp,1
    4390:	04090603          	lb	a2,64(s2)
    4394:	0100                	addi	s0,sp,128
    4396:	0a05                	addi	s4,s4,1
    4398:	04097803          	0x4097803
    439c:	0100                	addi	s0,sp,128
    439e:	04097f03          	0x4097f03
    43a2:	0100                	addi	s0,sp,128
    43a4:	0505                	addi	a0,a0,1
    43a6:	0306                	slli	t1,t1,0x1
    43a8:	0901                	addi	s2,s2,0
    43aa:	0004                	0x4
    43ac:	0301                	addi	t1,t1,0
    43ae:	0901                	addi	s2,s2,0
    43b0:	0000                	unimp
    43b2:	0301                	addi	t1,t1,0
    43b4:	0901                	addi	s2,s2,0
    43b6:	0000                	unimp
    43b8:	0501                	addi	a0,a0,0
    43ba:	060a                	slli	a2,a2,0x2
    43bc:	00090003          	lb	zero,0(s2)
    43c0:	0100                	addi	s0,sp,128
    43c2:	0505                	addi	a0,a0,1
    43c4:	0306                	slli	t1,t1,0x1
    43c6:	0905                	addi	s2,s2,1
    43c8:	0004                	0x4
    43ca:	0501                	addi	a0,a0,0
    43cc:	0601                	addi	a2,a2,0
    43ce:	00090103          	lb	sp,0(s2)
    43d2:	0100                	addi	s0,sp,128
    43d4:	0505                	addi	a0,a0,1
    43d6:	0306                	slli	t1,t1,0x1
    43d8:	0964                	addi	s1,sp,156
    43da:	0038                	addi	a4,sp,8
    43dc:	0301                	addi	t1,t1,0
    43de:	0901                	addi	s2,s2,0
    43e0:	0000                	unimp
    43e2:	0301                	addi	t1,t1,0
    43e4:	0901                	addi	s2,s2,0
    43e6:	0000                	unimp
    43e8:	0501                	addi	a0,a0,0
    43ea:	00030607          	0x30607
    43ee:	0009                	c.nop	2
    43f0:	0100                	addi	s0,sp,128
    43f2:	0b05                	addi	s6,s6,1
    43f4:	08090003          	lb	zero,128(s2)
    43f8:	0100                	addi	s0,sp,128
    43fa:	0705                	addi	a4,a4,1
    43fc:	04090003          	lb	zero,64(s2)
    4400:	0100                	addi	s0,sp,128
    4402:	0505                	addi	a0,a0,1
    4404:	0306                	slli	t1,t1,0x1
    4406:	0902                	c.slli64	s2
    4408:	0004                	0x4
    440a:	0501                	addi	a0,a0,0
    440c:	7c030607          	0x7c030607
    4410:	0009                	c.nop	2
    4412:	0100                	addi	s0,sp,128
    4414:	0b05                	addi	s6,s6,1
    4416:	04090203          	lb	tp,64(s2)
    441a:	0100                	addi	s0,sp,128
    441c:	0809                	addi	a6,a6,2
    441e:	0000                	unimp
    4420:	0101                	addi	sp,sp,0
    4422:	0105                	addi	sp,sp,1
    4424:	0500                	addi	s0,sp,640
    4426:	0002                	c.slli64	zero
    4428:	0000                	unimp
    442a:	0300                	addi	s0,sp,384
    442c:	050101ef          	jal	gp,1447c <_data_lma+0x9304>
    4430:	0305                	addi	t1,t1,1
    4432:	0901                	addi	s2,s2,0
    4434:	0000                	unimp
    4436:	0301                	addi	t1,t1,0
    4438:	0901                	addi	s2,s2,0
    443a:	0000                	unimp
    443c:	0301                	addi	t1,t1,0
    443e:	0901                	addi	s2,s2,0
    4440:	0000                	unimp
    4442:	0301                	addi	t1,t1,0
    4444:	0901                	addi	s2,s2,0
    4446:	0000                	unimp
    4448:	0501                	addi	a0,a0,0
    444a:	0601                	addi	a2,a2,0
    444c:	00097c03          	0x97c03
    4450:	0100                	addi	s0,sp,128
    4452:	0505                	addi	a0,a0,1
    4454:	00090403          	lb	s0,0(s2)
    4458:	0100                	addi	s0,sp,128
    445a:	0c05                	addi	s8,s8,1
    445c:	00090003          	lb	zero,0(s2)
    4460:	0100                	addi	s0,sp,128
    4462:	00097e03          	0x97e03
    4466:	0100                	addi	s0,sp,128
    4468:	1505                	addi	a0,a0,-31
    446a:	00097f03          	0x97f03
    446e:	0100                	addi	s0,sp,128
    4470:	0c05                	addi	s8,s8,1
    4472:	00090003          	lb	zero,0(s2)
    4476:	0100                	addi	s0,sp,128
    4478:	1505                	addi	a0,a0,-31
    447a:	00091003          	lh	zero,0(s2)
    447e:	0100                	addi	s0,sp,128
    4480:	0d05                	addi	s10,s10,1
    4482:	0306                	slli	t1,t1,0x1
    4484:	0902                	c.slli64	s2
    4486:	0000                	unimp
    4488:	0501                	addi	a0,a0,0
    448a:	0611                	addi	a2,a2,4
    448c:	00097503          	0x97503
    4490:	0100                	addi	s0,sp,128
    4492:	0905                	addi	s2,s2,1
    4494:	00097e03          	0x97e03
    4498:	0100                	addi	s0,sp,128
    449a:	0d05                	addi	s10,s10,1
    449c:	0306                	slli	t1,t1,0x1
    449e:	0902                	c.slli64	s2
    44a0:	0000                	unimp
    44a2:	0501                	addi	a0,a0,0
    44a4:	0311                	addi	t1,t1,4
    44a6:	0909                	addi	s2,s2,2
    44a8:	0000                	unimp
    44aa:	0301                	addi	t1,t1,0
    44ac:	0000097b          	0x97b
    44b0:	0601                	addi	a2,a2,0
    44b2:	00097c03          	0x97c03
    44b6:	0100                	addi	s0,sp,128
    44b8:	0d05                	addi	s10,s10,1
    44ba:	0306                	slli	t1,t1,0x1
    44bc:	0901                	addi	s2,s2,0
    44be:	0000                	unimp
    44c0:	0501                	addi	a0,a0,0
    44c2:	0629                	addi	a2,a2,10
    44c4:	00090803          	lb	a6,0(s2)
    44c8:	0100                	addi	s0,sp,128
    44ca:	1105                	addi	sp,sp,-31
    44cc:	00097803          	0x97803
    44d0:	0100                	addi	s0,sp,128
    44d2:	0d05                	addi	s10,s10,1
    44d4:	0306                	slli	t1,t1,0x1
    44d6:	0901                	addi	s2,s2,0
    44d8:	0000                	unimp
    44da:	0501                	addi	a0,a0,0
    44dc:	0615                	addi	a2,a2,5
    44de:	00090203          	lb	tp,0(s2)
    44e2:	0100                	addi	s0,sp,128
    44e4:	00090503          	lb	a0,0(s2)
    44e8:	0100                	addi	s0,sp,128
    44ea:	1005                	c.nop	-31
    44ec:	00097903          	0x97903
    44f0:	0100                	addi	s0,sp,128
    44f2:	1505                	addi	a0,a0,-31
    44f4:	00090203          	lb	tp,0(s2)
    44f8:	0100                	addi	s0,sp,128
    44fa:	1105                	addi	sp,sp,-31
    44fc:	0306                	slli	t1,t1,0x1
    44fe:	0901                	addi	s2,s2,0
    4500:	0000                	unimp
    4502:	0501                	addi	a0,a0,0
    4504:	0615                	addi	a2,a2,5
    4506:	00090003          	lb	zero,0(s2)
    450a:	0100                	addi	s0,sp,128
    450c:	0d05                	addi	s10,s10,1
    450e:	0306                	slli	t1,t1,0x1
    4510:	0906                	slli	s2,s2,0x1
    4512:	0000                	unimp
    4514:	0501                	addi	a0,a0,0
    4516:	0611                	addi	a2,a2,4
    4518:	00097503          	0x97503
    451c:	0100                	addi	s0,sp,128
    451e:	0905                	addi	s2,s2,1
    4520:	00097e03          	0x97e03
    4524:	0100                	addi	s0,sp,128
    4526:	1905                	addi	s2,s2,-31
    4528:	00097e03          	0x97e03
    452c:	0100                	addi	s0,sp,128
    452e:	0505                	addi	a0,a0,1
    4530:	00090003          	lb	zero,0(s2)
    4534:	0100                	addi	s0,sp,128
    4536:	0c05                	addi	s8,s8,1
    4538:	00097e03          	0x97e03
    453c:	0100                	addi	s0,sp,128
    453e:	0505                	addi	a0,a0,1
    4540:	0306                	slli	t1,t1,0x1
    4542:	0914                	addi	a3,sp,144
    4544:	0000                	unimp
    4546:	0501                	addi	a0,a0,0
    4548:	0601                	addi	a2,a2,0
    454a:	00090103          	lb	sp,0(s2)
    454e:	0100                	addi	s0,sp,128
    4550:	0009                	c.nop	2
    4552:	0000                	unimp
    4554:	0101                	addi	sp,sp,0
    4556:	0105                	addi	sp,sp,1
    4558:	0500                	addi	s0,sp,640
    455a:	0002                	c.slli64	zero
    455c:	0000                	unimp
    455e:	0300                	addi	s0,sp,384
    4560:	028e                	slli	t0,t0,0x3
    4562:	0501                	addi	a0,a0,0
    4564:	0305                	addi	t1,t1,1
    4566:	0901                	addi	s2,s2,0
    4568:	0000                	unimp
    456a:	0301                	addi	t1,t1,0
    456c:	0901                	addi	s2,s2,0
    456e:	0000                	unimp
    4570:	0501                	addi	a0,a0,0
    4572:	0601                	addi	a2,a2,0
    4574:	00097e03          	0x97e03
    4578:	0100                	addi	s0,sp,128
    457a:	0c05                	addi	s8,s8,1
    457c:	00090203          	lb	tp,0(s2)
    4580:	0100                	addi	s0,sp,128
    4582:	0105                	addi	sp,sp,1
    4584:	00097e03          	0x97e03
    4588:	0100                	addi	s0,sp,128
    458a:	0d05                	addi	s10,s10,1
    458c:	0200                	addi	s0,sp,256
    458e:	0304                	addi	s1,sp,384
    4590:	0306                	slli	t1,t1,0x1
    4592:	0906                	slli	s2,s2,0x1
    4594:	0000                	unimp
    4596:	0501                	addi	a0,a0,0
    4598:	0031                	c.nop	12
    459a:	0402                	c.slli64	s0
    459c:	00030603          	lb	a2,0(t1)
    45a0:	0009                	c.nop	2
    45a2:	0100                	addi	s0,sp,128
    45a4:	1a05                	addi	s4,s4,-31
    45a6:	0200                	addi	s0,sp,256
    45a8:	0304                	addi	s1,sp,384
    45aa:	00090003          	lb	zero,0(s2)
    45ae:	0100                	addi	s0,sp,128
    45b0:	0905                	addi	s2,s2,1
    45b2:	0200                	addi	s0,sp,256
    45b4:	0304                	addi	s1,sp,384
    45b6:	00097e03          	0x97e03
    45ba:	0100                	addi	s0,sp,128
    45bc:	1905                	addi	s2,s2,-31
    45be:	0200                	addi	s0,sp,256
    45c0:	0204                	addi	s1,sp,256
    45c2:	00097e03          	0x97e03
    45c6:	0100                	addi	s0,sp,128
    45c8:	0505                	addi	a0,a0,1
    45ca:	0200                	addi	s0,sp,256
    45cc:	0204                	addi	s1,sp,256
    45ce:	00090003          	lb	zero,0(s2)
    45d2:	0100                	addi	s0,sp,128
    45d4:	0105                	addi	sp,sp,1
    45d6:	00090703          	lb	a4,0(s2)
    45da:	0100                	addi	s0,sp,128
    45dc:	0009                	c.nop	2
    45de:	0000                	unimp
    45e0:	0101                	addi	sp,sp,0
    45e2:	0105                	addi	sp,sp,1
    45e4:	0500                	addi	s0,sp,640
    45e6:	0002                	c.slli64	zero
    45e8:	0000                	unimp
    45ea:	0300                	addi	s0,sp,384
    45ec:	029e                	slli	t0,t0,0x7
    45ee:	0501                	addi	a0,a0,0
    45f0:	0305                	addi	t1,t1,1
    45f2:	0901                	addi	s2,s2,0
    45f4:	0000                	unimp
    45f6:	0301                	addi	t1,t1,0
    45f8:	0901                	addi	s2,s2,0
    45fa:	0000                	unimp
    45fc:	0501                	addi	a0,a0,0
    45fe:	060c                	addi	a1,sp,768
    4600:	00090003          	lb	zero,0(s2)
    4604:	0100                	addi	s0,sp,128
    4606:	0105                	addi	sp,sp,1
    4608:	00097e03          	0x97e03
    460c:	0100                	addi	s0,sp,128
    460e:	0d05                	addi	s10,s10,1
    4610:	0200                	addi	s0,sp,256
    4612:	0304                	addi	s1,sp,384
    4614:	0306                	slli	t1,t1,0x1
    4616:	0906                	slli	s2,s2,0x1
    4618:	0000                	unimp
    461a:	0501                	addi	a0,a0,0
    461c:	001a                	c.slli	zero,0x6
    461e:	0402                	c.slli64	s0
    4620:	00030603          	lb	a2,0(t1)
    4624:	0009                	c.nop	2
    4626:	0100                	addi	s0,sp,128
    4628:	0905                	addi	s2,s2,1
    462a:	0200                	addi	s0,sp,256
    462c:	0304                	addi	s1,sp,384
    462e:	00097e03          	0x97e03
    4632:	0100                	addi	s0,sp,128
    4634:	1905                	addi	s2,s2,-31
    4636:	0200                	addi	s0,sp,256
    4638:	0204                	addi	s1,sp,256
    463a:	00097e03          	0x97e03
    463e:	0100                	addi	s0,sp,128
    4640:	0505                	addi	a0,a0,1
    4642:	0200                	addi	s0,sp,256
    4644:	0204                	addi	s1,sp,256
    4646:	00090003          	lb	zero,0(s2)
    464a:	0100                	addi	s0,sp,128
    464c:	0105                	addi	sp,sp,1
    464e:	00090703          	lb	a4,0(s2)
    4652:	0100                	addi	s0,sp,128
    4654:	0009                	c.nop	2
    4656:	0000                	unimp
    4658:	0101                	addi	sp,sp,0
    465a:	0105                	addi	sp,sp,1
    465c:	0500                	addi	s0,sp,640
    465e:	0002                	c.slli64	zero
    4660:	0000                	unimp
    4662:	0300                	addi	s0,sp,384
    4664:	02b0                	addi	a2,sp,328
    4666:	0501                	addi	a0,a0,0
    4668:	0305                	addi	t1,t1,1
    466a:	0901                	addi	s2,s2,0
    466c:	0000                	unimp
    466e:	0301                	addi	t1,t1,0
    4670:	0901                	addi	s2,s2,0
    4672:	0000                	unimp
    4674:	0501                	addi	a0,a0,0
    4676:	0601                	addi	a2,a2,0
    4678:	00097e03          	0x97e03
    467c:	0100                	addi	s0,sp,128
    467e:	0e05                	addi	t3,t3,1
    4680:	00090403          	lb	s0,0(s2)
    4684:	0100                	addi	s0,sp,128
    4686:	0105                	addi	sp,sp,1
    4688:	00097c03          	0x97c03
    468c:	0100                	addi	s0,sp,128
    468e:	0905                	addi	s2,s2,1
    4690:	0306                	slli	t1,t1,0x1
    4692:	0904                	addi	s1,sp,144
    4694:	0000                	unimp
    4696:	0301                	addi	t1,t1,0
    4698:	0901                	addi	s2,s2,0
    469a:	0000                	unimp
    469c:	0501                	addi	a0,a0,0
    469e:	0601                	addi	a2,a2,0
    46a0:	00097b03          	0x97b03
    46a4:	0100                	addi	s0,sp,128
    46a6:	0d05                	addi	s10,s10,1
    46a8:	0200                	addi	s0,sp,256
    46aa:	0304                	addi	s1,sp,384
    46ac:	0306                	slli	t1,t1,0x1
    46ae:	00000907          	0x907
    46b2:	0501                	addi	a0,a0,0
    46b4:	002a                	c.slli	zero,0xa
    46b6:	0402                	c.slli64	s0
    46b8:	00030603          	lb	a2,0(t1)
    46bc:	0009                	c.nop	2
    46be:	0100                	addi	s0,sp,128
    46c0:	1205                	addi	tp,tp,-31
    46c2:	0200                	addi	s0,sp,256
    46c4:	0304                	addi	s1,sp,384
    46c6:	00090003          	lb	zero,0(s2)
    46ca:	0100                	addi	s0,sp,128
    46cc:	0905                	addi	s2,s2,1
    46ce:	0200                	addi	s0,sp,256
    46d0:	0304                	addi	s1,sp,384
    46d2:	00097e03          	0x97e03
    46d6:	0100                	addi	s0,sp,128
    46d8:	0505                	addi	a0,a0,1
    46da:	0200                	addi	s0,sp,256
    46dc:	0204                	addi	s1,sp,256
    46de:	00097d03          	0x97d03
    46e2:	0100                	addi	s0,sp,128
    46e4:	0105                	addi	sp,sp,1
    46e6:	00090803          	lb	a6,0(s2)
    46ea:	0100                	addi	s0,sp,128
    46ec:	0009                	c.nop	2
    46ee:	0000                	unimp
    46f0:	0101                	addi	sp,sp,0
    46f2:	0105                	addi	sp,sp,1
    46f4:	0500                	addi	s0,sp,640
    46f6:	0002                	c.slli64	zero
    46f8:	0000                	unimp
    46fa:	0300                	addi	s0,sp,384
    46fc:	050102c3          	0x50102c3
    4700:	0305                	addi	t1,t1,1
    4702:	0901                	addi	s2,s2,0
    4704:	0000                	unimp
    4706:	0301                	addi	t1,t1,0
    4708:	0901                	addi	s2,s2,0
    470a:	0000                	unimp
    470c:	0501                	addi	a0,a0,0
    470e:	0601                	addi	a2,a2,0
    4710:	00097e03          	0x97e03
    4714:	0100                	addi	s0,sp,128
    4716:	0c05                	addi	s8,s8,1
    4718:	00090203          	lb	tp,0(s2)
    471c:	0100                	addi	s0,sp,128
    471e:	0105                	addi	sp,sp,1
    4720:	00097e03          	0x97e03
    4724:	0100                	addi	s0,sp,128
    4726:	0d05                	addi	s10,s10,1
    4728:	0306                	slli	t1,t1,0x1
    472a:	0906                	slli	s2,s2,0x1
    472c:	0000                	unimp
    472e:	0301                	addi	t1,t1,0
    4730:	0901                	addi	s2,s2,0
    4732:	0000                	unimp
    4734:	0501                	addi	a0,a0,0
    4736:	0601                	addi	a2,a2,0
    4738:	00097903          	0x97903
    473c:	0100                	addi	s0,sp,128
    473e:	1105                	addi	sp,sp,-31
    4740:	0200                	addi	s0,sp,256
    4742:	0304                	addi	s1,sp,384
    4744:	0306                	slli	t1,t1,0x1
    4746:	0909                	addi	s2,s2,2
    4748:	0000                	unimp
    474a:	0501                	addi	a0,a0,0
    474c:	0036                	c.slli	zero,0xd
    474e:	0402                	c.slli64	s0
    4750:	00030603          	lb	a2,0(t1)
    4754:	0009                	c.nop	2
    4756:	0100                	addi	s0,sp,128
    4758:	1e05                	addi	t3,t3,-31
    475a:	0200                	addi	s0,sp,256
    475c:	0304                	addi	s1,sp,384
    475e:	00090003          	lb	zero,0(s2)
    4762:	0100                	addi	s0,sp,128
    4764:	0d05                	addi	s10,s10,1
    4766:	0200                	addi	s0,sp,256
    4768:	0304                	addi	s1,sp,384
    476a:	00097e03          	0x97e03
    476e:	0100                	addi	s0,sp,128
    4770:	0905                	addi	s2,s2,1
    4772:	0200                	addi	s0,sp,256
    4774:	0204                	addi	s1,sp,256
    4776:	00097d03          	0x97d03
    477a:	0100                	addi	s0,sp,128
    477c:	0505                	addi	a0,a0,1
    477e:	0200                	addi	s0,sp,256
    4780:	0204                	addi	s1,sp,256
    4782:	00097e03          	0x97e03
    4786:	0100                	addi	s0,sp,128
    4788:	1905                	addi	s2,s2,-31
    478a:	0200                	addi	s0,sp,256
    478c:	0204                	addi	s1,sp,256
    478e:	00090003          	lb	zero,0(s2)
    4792:	0100                	addi	s0,sp,128
    4794:	0505                	addi	a0,a0,1
    4796:	0200                	addi	s0,sp,256
    4798:	0204                	addi	s1,sp,256
    479a:	00090003          	lb	zero,0(s2)
    479e:	0100                	addi	s0,sp,128
    47a0:	0105                	addi	sp,sp,1
    47a2:	00090b03          	lb	s6,0(s2)
    47a6:	0100                	addi	s0,sp,128
    47a8:	0009                	c.nop	2
    47aa:	0000                	unimp
    47ac:	0101                	addi	sp,sp,0
    47ae:	0105                	addi	sp,sp,1
    47b0:	0500                	addi	s0,sp,640
    47b2:	0002                	c.slli64	zero
    47b4:	0000                	unimp
    47b6:	0300                	addi	s0,sp,384
    47b8:	02d9                	addi	t0,t0,22
    47ba:	0501                	addi	a0,a0,0
    47bc:	0305                	addi	t1,t1,1
    47be:	0901                	addi	s2,s2,0
    47c0:	0000                	unimp
    47c2:	0301                	addi	t1,t1,0
    47c4:	0901                	addi	s2,s2,0
    47c6:	0000                	unimp
    47c8:	0501                	addi	a0,a0,0
    47ca:	0601                	addi	a2,a2,0
    47cc:	00097e03          	0x97e03
    47d0:	0100                	addi	s0,sp,128
    47d2:	0c05                	addi	s8,s8,1
    47d4:	00090203          	lb	tp,0(s2)
    47d8:	0100                	addi	s0,sp,128
    47da:	0105                	addi	sp,sp,1
    47dc:	00097e03          	0x97e03
    47e0:	0100                	addi	s0,sp,128
    47e2:	0d05                	addi	s10,s10,1
    47e4:	0306                	slli	t1,t1,0x1
    47e6:	0906                	slli	s2,s2,0x1
    47e8:	0000                	unimp
    47ea:	0301                	addi	t1,t1,0
    47ec:	0901                	addi	s2,s2,0
    47ee:	0000                	unimp
    47f0:	0501                	addi	a0,a0,0
    47f2:	0601                	addi	a2,a2,0
    47f4:	00097903          	0x97903
    47f8:	0100                	addi	s0,sp,128
    47fa:	1105                	addi	sp,sp,-31
    47fc:	0200                	addi	s0,sp,256
    47fe:	0304                	addi	s1,sp,384
    4800:	0306                	slli	t1,t1,0x1
    4802:	0909                	addi	s2,s2,2
    4804:	0000                	unimp
    4806:	0501                	addi	a0,a0,0
    4808:	0018                	0x18
    480a:	0402                	c.slli64	s0
    480c:	00030603          	lb	a2,0(t1)
    4810:	0009                	c.nop	2
    4812:	0100                	addi	s0,sp,128
    4814:	1105                	addi	sp,sp,-31
    4816:	0200                	addi	s0,sp,256
    4818:	0304                	addi	s1,sp,384
    481a:	0306                	slli	t1,t1,0x1
    481c:	0901                	addi	s2,s2,0
    481e:	0000                	unimp
    4820:	0501                	addi	a0,a0,0
    4822:	0021                	c.nop	8
    4824:	0402                	c.slli64	s0
    4826:	00030603          	lb	a2,0(t1)
    482a:	0009                	c.nop	2
    482c:	0100                	addi	s0,sp,128
    482e:	3a05                	jal	415e <__divdf3+0x882>
    4830:	0200                	addi	s0,sp,256
    4832:	0304                	addi	s1,sp,384
    4834:	00090003          	lb	zero,0(s2)
    4838:	0100                	addi	s0,sp,128
    483a:	3805                	jal	406a <__divdf3+0x78e>
    483c:	0200                	addi	s0,sp,256
    483e:	0304                	addi	s1,sp,384
    4840:	00090003          	lb	zero,0(s2)
    4844:	0100                	addi	s0,sp,128
    4846:	1e05                	addi	t3,t3,-31
    4848:	0200                	addi	s0,sp,256
    484a:	0304                	addi	s1,sp,384
    484c:	00090003          	lb	zero,0(s2)
    4850:	0100                	addi	s0,sp,128
    4852:	0d05                	addi	s10,s10,1
    4854:	0200                	addi	s0,sp,256
    4856:	0304                	addi	s1,sp,384
    4858:	00097d03          	0x97d03
    485c:	0100                	addi	s0,sp,128
    485e:	0905                	addi	s2,s2,1
    4860:	0200                	addi	s0,sp,256
    4862:	0204                	addi	s1,sp,256
    4864:	00097d03          	0x97d03
    4868:	0100                	addi	s0,sp,128
    486a:	0505                	addi	a0,a0,1
    486c:	0200                	addi	s0,sp,256
    486e:	0204                	addi	s1,sp,256
    4870:	00097e03          	0x97e03
    4874:	0100                	addi	s0,sp,128
    4876:	1905                	addi	s2,s2,-31
    4878:	0200                	addi	s0,sp,256
    487a:	0204                	addi	s1,sp,256
    487c:	00090003          	lb	zero,0(s2)
    4880:	0100                	addi	s0,sp,128
    4882:	0505                	addi	a0,a0,1
    4884:	0200                	addi	s0,sp,256
    4886:	0204                	addi	s1,sp,256
    4888:	00090003          	lb	zero,0(s2)
    488c:	0100                	addi	s0,sp,128
    488e:	0105                	addi	sp,sp,1
    4890:	00090c03          	lb	s8,0(s2)
    4894:	0100                	addi	s0,sp,128
    4896:	0009                	c.nop	2
    4898:	0000                	unimp
    489a:	0101                	addi	sp,sp,0
    489c:	00000377          	0x377
    48a0:	01f80003          	lb	zero,31(a6)
    48a4:	0000                	unimp
    48a6:	0101                	addi	sp,sp,0
    48a8:	000d0efb          	0xd0efb
    48ac:	0101                	addi	sp,sp,0
    48ae:	0101                	addi	sp,sp,0
    48b0:	0000                	unimp
    48b2:	0100                	addi	s0,sp,128
    48b4:	0000                	unimp
    48b6:	2e01                	jal	4bc6 <__floatunsidf+0x1e>
    48b8:	6372732f          	0x6372732f
    48bc:	726f632f          	0x726f632f
    48c0:	6d65                	lui	s10,0x19
    48c2:	7261                	lui	tp,0xffff8
    48c4:	3a65006b          	0x3a65006b
    48c8:	705c                	flw	fa5,36(s0)
    48ca:	6f72                	flw	ft10,28(sp)
    48cc:	6d617267          	0x6d617267
    48d0:	6966                	flw	fs2,88(sp)
    48d2:	656c                	flw	fa1,76(a0)
    48d4:	36387873          	csrrci	a6,0x363,16
    48d8:	6e5c                	flw	fa5,28(a2)
    48da:	616d726f          	jal	tp,dbef0 <_data_lma+0xd0d78>
    48de:	2d6c                	fld	fa1,216(a0)
    48e0:	6972                	flw	fs2,28(sp)
    48e2:	2d766373          	csrrsi	t1,0x2d7,12
    48e6:	6f6e                	flw	ft10,216(sp)
    48e8:	656e                	flw	fa0,216(sp)
    48ea:	672d                	lui	a4,0xb
    48ec:	382d6363          	bltu	s10,sp,4c72 <__mulsi3+0x16>
    48f0:	322e                	fld	ft4,232(sp)
    48f2:	302e                	fld	ft0,232(sp)
    48f4:	322d                	jal	421e <__gedf2+0x3e>
    48f6:	322e                	fld	ft4,232(sp)
    48f8:	322d                	jal	4222 <__gedf2+0x42>
    48fa:	3130                	fld	fa2,96(a0)
    48fc:	3039                	jal	410a <__divdf3+0x82e>
    48fe:	3235                	jal	422a <__gedf2+0x4a>
    4900:	2d31                	jal	4f1c <__cvt+0x78>
    4902:	3030                	fld	fa2,96(s0)
    4904:	3430                	fld	fa2,104(s0)
    4906:	772d                	lui	a4,0xfffeb
    4908:	6e69                	lui	t3,0x1a
    490a:	3436                	fld	fs0,360(sp)
    490c:	725c                	flw	fa5,36(a2)
    490e:	7369                	lui	t1,0xffffa
    4910:	6e2d7663          	bgeu	s10,sp,4ffc <__cvt+0x158>
    4914:	2d656e6f          	jal	t3,5abea <_data_lma+0x4fa72>
    4918:	6d65                	lui	s10,0x19
    491a:	6562                	flw	fa0,24(sp)
    491c:	5c64                	lw	s1,124(s0)
    491e:	6e69                	lui	t3,0x1a
    4920:	64756c63          	bltu	a0,t2,4f78 <__cvt+0xd4>
    4924:	5c65                	li	s8,-7
    4926:	00737973          	csrrci	s2,0x7,6
    492a:	3a65                	jal	42e2 <__ledf2+0x12>
    492c:	705c                	flw	fa5,36(s0)
    492e:	6f72                	flw	ft10,28(sp)
    4930:	6d617267          	0x6d617267
    4934:	6966                	flw	fs2,88(sp)
    4936:	656c                	flw	fa1,76(a0)
    4938:	36387873          	csrrci	a6,0x363,16
    493c:	6e5c                	flw	fa5,28(a2)
    493e:	616d726f          	jal	tp,dbf54 <_data_lma+0xd0ddc>
    4942:	2d6c                	fld	fa1,216(a0)
    4944:	6972                	flw	fs2,28(sp)
    4946:	2d766373          	csrrsi	t1,0x2d7,12
    494a:	6f6e                	flw	ft10,216(sp)
    494c:	656e                	flw	fa0,216(sp)
    494e:	672d                	lui	a4,0xb
    4950:	382d6363          	bltu	s10,sp,4cd6 <__umodsi3+0x6>
    4954:	322e                	fld	ft4,232(sp)
    4956:	302e                	fld	ft0,232(sp)
    4958:	322d                	jal	4282 <__gedf2+0xa2>
    495a:	322e                	fld	ft4,232(sp)
    495c:	322d                	jal	4286 <__gedf2+0xa6>
    495e:	3130                	fld	fa2,96(a0)
    4960:	3039                	jal	416e <__divdf3+0x892>
    4962:	3235                	jal	428e <__gedf2+0xae>
    4964:	2d31                	jal	4f80 <__cvt+0xdc>
    4966:	3030                	fld	fa2,96(s0)
    4968:	3430                	fld	fa2,104(s0)
    496a:	772d                	lui	a4,0xfffeb
    496c:	6e69                	lui	t3,0x1a
    496e:	3436                	fld	fs0,360(sp)
    4970:	6c5c                	flw	fa5,28(s0)
    4972:	6269                	lui	tp,0x1a
    4974:	675c                	flw	fa5,12(a4)
    4976:	725c6363          	bltu	s8,t0,509c <__exponent+0x94>
    497a:	7369                	lui	t1,0xffffa
    497c:	6e2d7663          	bgeu	s10,sp,5068 <__exponent+0x60>
    4980:	2d656e6f          	jal	t3,5ac56 <_data_lma+0x4fade>
    4984:	6d65                	lui	s10,0x19
    4986:	6562                	flw	fa0,24(sp)
    4988:	5c64                	lw	s1,124(s0)
    498a:	2e38                	fld	fa4,88(a2)
    498c:	2e32                	fld	ft8,264(sp)
    498e:	5c30                	lw	a2,120(s0)
    4990:	6e69                	lui	t3,0x1a
    4992:	64756c63          	bltu	a0,t2,4fea <__cvt+0x146>
    4996:	0065                	c.nop	25
    4998:	3a65                	jal	4350 <__ledf2+0x80>
    499a:	705c                	flw	fa5,36(s0)
    499c:	6f72                	flw	ft10,28(sp)
    499e:	6d617267          	0x6d617267
    49a2:	6966                	flw	fs2,88(sp)
    49a4:	656c                	flw	fa1,76(a0)
    49a6:	36387873          	csrrci	a6,0x363,16
    49aa:	6e5c                	flw	fa5,28(a2)
    49ac:	616d726f          	jal	tp,dbfc2 <_data_lma+0xd0e4a>
    49b0:	2d6c                	fld	fa1,216(a0)
    49b2:	6972                	flw	fs2,28(sp)
    49b4:	2d766373          	csrrsi	t1,0x2d7,12
    49b8:	6f6e                	flw	ft10,216(sp)
    49ba:	656e                	flw	fa0,216(sp)
    49bc:	672d                	lui	a4,0xb
    49be:	382d6363          	bltu	s10,sp,4d44 <__clzsi2+0x10>
    49c2:	322e                	fld	ft4,232(sp)
    49c4:	302e                	fld	ft0,232(sp)
    49c6:	322d                	jal	42f0 <__ledf2+0x20>
    49c8:	322e                	fld	ft4,232(sp)
    49ca:	322d                	jal	42f4 <__ledf2+0x24>
    49cc:	3130                	fld	fa2,96(a0)
    49ce:	3039                	jal	41dc <__divdf3+0x900>
    49d0:	3235                	jal	42fc <__ledf2+0x2c>
    49d2:	2d31                	jal	4fee <__cvt+0x14a>
    49d4:	3030                	fld	fa2,96(s0)
    49d6:	3430                	fld	fa2,104(s0)
    49d8:	772d                	lui	a4,0xfffeb
    49da:	6e69                	lui	t3,0x1a
    49dc:	3436                	fld	fs0,360(sp)
    49de:	725c                	flw	fa5,36(a2)
    49e0:	7369                	lui	t1,0xffffa
    49e2:	6e2d7663          	bgeu	s10,sp,50ce <__exponent+0xc6>
    49e6:	2d656e6f          	jal	t3,5acbc <_data_lma+0x4fb44>
    49ea:	6d65                	lui	s10,0x19
    49ec:	6562                	flw	fa0,24(sp)
    49ee:	5c64                	lw	s1,124(s0)
    49f0:	6e69                	lui	t3,0x1a
    49f2:	64756c63          	bltu	a0,t2,504a <__exponent+0x42>
    49f6:	0065                	c.nop	25
    49f8:	2f637273          	csrrci	tp,0x2f6,6
    49fc:	616d                	addi	sp,sp,240
    49fe:	6e69                	lui	t3,0x1a
    4a00:	636e692f          	0x636e692f
    4a04:	0000                	unimp
    4a06:	65726f63          	bltu	tp,s7,5064 <__exponent+0x5c>
    4a0a:	705f 726f 6d74      	0x6d74726f705f
    4a10:	2e65                	jal	4dc8 <memset>
    4a12:	00010063          	beqz	sp,4a12 <__muldf3+0x646>
    4a16:	6c00                	flw	fs0,24(s0)
    4a18:	2e6b636f          	jal	t1,bacfe <_data_lma+0xafb86>
    4a1c:	0068                	addi	a0,sp,12
    4a1e:	0002                	c.slli64	zero
    4a20:	5f00                	lw	s0,56(a4)
    4a22:	7974                	flw	fa3,116(a0)
    4a24:	6570                	flw	fa2,76(a0)
    4a26:	00682e73          	csrrs	t3,0x6,a6
    4a2a:	0002                	c.slli64	zero
    4a2c:	7300                	flw	fs0,32(a4)
    4a2e:	6474                	flw	fa3,76(s0)
    4a30:	6564                	flw	fs1,76(a0)
    4a32:	2e66                	fld	ft8,88(sp)
    4a34:	0068                	addi	a0,sp,12
    4a36:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a4>
    4a3a:	6565                	lui	a0,0x19
    4a3c:	746e                	flw	fs0,248(sp)
    4a3e:	682e                	flw	fa6,200(sp)
    4a40:	0200                	addi	s0,sp,256
    4a42:	0000                	unimp
    4a44:	7974                	flw	fa3,116(a0)
    4a46:	6570                	flw	fa2,76(a0)
    4a48:	00682e73          	csrrs	t3,0x6,a6
    4a4c:	0002                	c.slli64	zero
    4a4e:	7300                	flw	fs0,32(a4)
    4a50:	6474                	flw	fa3,76(s0)
    4a52:	696c                	flw	fa1,84(a0)
    4a54:	2e62                	fld	ft8,24(sp)
    4a56:	0068                	addi	a0,sp,12
    4a58:	0004                	0x4
    4a5a:	7400                	flw	fs0,40(s0)
    4a5c:	6d69                	lui	s10,0x1a
    4a5e:	2e65                	jal	4e16 <memset+0x4e>
    4a60:	0068                	addi	a0,sp,12
    4a62:	0004                	0x4
    4a64:	6300                	flw	fs0,0(a4)
    4a66:	5f65726f          	jal	tp,5c05c <_data_lma+0x50ee4>
    4a6a:	6f70                	flw	fa2,92(a4)
    4a6c:	7472                	flw	fs0,60(sp)
    4a6e:	656d                	lui	a0,0x1b
    4a70:	682e                	flw	fa6,200(sp)
    4a72:	0100                	addi	s0,sp,128
    4a74:	0000                	unimp
    4a76:	65726f63          	bltu	tp,s7,50d4 <__exponent+0xcc>
    4a7a:	616d                	addi	sp,sp,240
    4a7c:	6b72                	flw	fs6,28(sp)
    4a7e:	682e                	flw	fa6,200(sp)
    4a80:	0100                	addi	s0,sp,128
    4a82:	0000                	unimp
    4a84:	623c                	flw	fa5,64(a2)
    4a86:	6975                	lui	s2,0x1d
    4a88:	746c                	flw	fa1,108(s0)
    4a8a:	692d                	lui	s2,0xb
    4a8c:	3e6e                	fld	ft8,248(sp)
    4a8e:	0000                	unimp
    4a90:	0000                	unimp
    4a92:	6974                	flw	fa3,84(a0)
    4a94:	656d                	lui	a0,0x1b
    4a96:	2e72                	fld	ft8,280(sp)
    4a98:	0068                	addi	a0,sp,12
    4a9a:	0005                	c.nop	1
    4a9c:	0000                	unimp
    4a9e:	1205                	addi	tp,tp,-31
    4aa0:	0500                	addi	s0,sp,640
    4aa2:	6802                	flw	fa6,0(sp)
    4aa4:	001f 0300 012c      	0x12c0300001f
    4aaa:	0505                	addi	a0,a0,1
    4aac:	00090203          	lb	tp,0(s2) # b000 <__trunctfdf2+0x220>
    4ab0:	0100                	addi	s0,sp,128
    4ab2:	1205                	addi	tp,tp,-31
    4ab4:	0306                	slli	t1,t1,0x1
    4ab6:	097e                	slli	s2,s2,0x1f
    4ab8:	0000                	unimp
    4aba:	0501                	addi	a0,a0,0
    4abc:	0902030f          	0x902030f
    4ac0:	0008                	0x8
    4ac2:	0501                	addi	a0,a0,0
    4ac4:	0301                	addi	t1,t1,0
    4ac6:	0901                	addi	s2,s2,0
    4ac8:	0008                	0x8
    4aca:	0501                	addi	a0,a0,0
    4acc:	030d                	addi	t1,t1,3
    4ace:	097f                	0x97f
    4ad0:	0004                	0x4
    4ad2:	0501                	addi	a0,a0,0
    4ad4:	0301                	addi	t1,t1,0
    4ad6:	0901                	addi	s2,s2,0
    4ad8:	000c                	0xc
    4ada:	0901                	addi	s2,s2,0
    4adc:	0008                	0x8
    4ade:	0100                	addi	s0,sp,128
    4ae0:	0501                	addi	a0,a0,0
    4ae2:	0011                	c.nop	4
    4ae4:	0205                	addi	tp,tp,1
    4ae6:	1f90                	addi	a2,sp,1008
    4ae8:	0000                	unimp
    4aea:	05013303          	0x5013303
    4aee:	0305                	addi	t1,t1,1
    4af0:	0902                	c.slli64	s2
    4af2:	0000                	unimp
    4af4:	0501                	addi	a0,a0,0
    4af6:	0611                	addi	a2,a2,4
    4af8:	00097e03          	0x97e03
    4afc:	0100                	addi	s0,sp,128
    4afe:	0f05                	addi	t5,t5,1
    4b00:	08090203          	lb	tp,128(s2)
    4b04:	0100                	addi	s0,sp,128
    4b06:	0105                	addi	sp,sp,1
    4b08:	08090103          	lb	sp,128(s2)
    4b0c:	0100                	addi	s0,sp,128
    4b0e:	0d05                	addi	s10,s10,1
    4b10:	04097f03          	0x4097f03
    4b14:	0100                	addi	s0,sp,128
    4b16:	0105                	addi	sp,sp,1
    4b18:	0c090103          	lb	sp,192(s2)
    4b1c:	0100                	addi	s0,sp,128
    4b1e:	0809                	addi	a6,a6,2
    4b20:	0000                	unimp
    4b22:	0101                	addi	sp,sp,0
    4b24:	1005                	c.nop	-31
    4b26:	0500                	addi	s0,sp,640
    4b28:	b802                	fsd	ft0,48(sp)
    4b2a:	001f 0300 013b      	0x13b0300001f
    4b30:	0505                	addi	a0,a0,1
    4b32:	00090303          	lb	t1,0(s2)
    4b36:	0100                	addi	s0,sp,128
    4b38:	1405                	addi	s0,s0,-31
    4b3a:	0306                	slli	t1,t1,0x1
    4b3c:	0900                	addi	s0,sp,144
    4b3e:	0000                	unimp
    4b40:	0501                	addi	a0,a0,0
    4b42:	0301                	addi	t1,t1,0
    4b44:	0901                	addi	s2,s2,0
    4b46:	0010                	0x10
    4b48:	0901                	addi	s2,s2,0
    4b4a:	0008                	0x8
    4b4c:	0100                	addi	s0,sp,128
    4b4e:	0501                	addi	a0,a0,0
    4b50:	0020                	addi	s0,sp,8
    4b52:	0205                	addi	tp,tp,1
    4b54:	1fd0                	addi	a2,sp,1012
    4b56:	0000                	unimp
    4b58:	0100c803          	lbu	a6,16(ra)
    4b5c:	0505                	addi	a0,a0,1
    4b5e:	00090203          	lb	tp,0(s2)
    4b62:	0100                	addi	s0,sp,128
    4b64:	2005                	jal	4b84 <__fixunsdfsi+0x54>
    4b66:	0306                	slli	t1,t1,0x1
    4b68:	097e                	slli	s2,s2,0x1f
    4b6a:	0000                	unimp
    4b6c:	0501                	addi	a0,a0,0
    4b6e:	030d                	addi	t1,t1,3
    4b70:	0902                	c.slli64	s2
    4b72:	0008                	0x8
    4b74:	0501                	addi	a0,a0,0
    4b76:	031c                	addi	a5,sp,384
    4b78:	0900                	addi	s0,sp,144
    4b7a:	0008                	0x8
    4b7c:	0501                	addi	a0,a0,0
    4b7e:	0301                	addi	t1,t1,0
    4b80:	0901                	addi	s2,s2,0
    4b82:	0014                	0x14
    4b84:	0901                	addi	s2,s2,0
    4b86:	000c                	0xc
    4b88:	0100                	addi	s0,sp,128
    4b8a:	0501                	addi	a0,a0,0
    4b8c:	003a                	c.slli	zero,0xe
    4b8e:	0205                	addi	tp,tp,1
    4b90:	2000                	fld	fs0,0(s0)
    4b92:	0000                	unimp
    4b94:	0100d803          	lhu	a6,16(ra)
    4b98:	0505                	addi	a0,a0,1
    4b9a:	00090203          	lb	tp,0(s2)
    4b9e:	0100                	addi	s0,sp,128
    4ba0:	3a05                	jal	44d0 <__muldf3+0x104>
    4ba2:	0306                	slli	t1,t1,0x1
    4ba4:	097e                	slli	s2,s2,0x1f
    4ba6:	0000                	unimp
    4ba8:	0501                	addi	a0,a0,0
    4baa:	0305                	addi	t1,t1,1
    4bac:	0902                	c.slli64	s2
    4bae:	000c                	0xc
    4bb0:	0501                	addi	a0,a0,0
    4bb2:	033a                	slli	t1,t1,0xe
    4bb4:	097e                	slli	s2,s2,0x1f
    4bb6:	0008                	0x8
    4bb8:	0501                	addi	a0,a0,0
    4bba:	0305                	addi	t1,t1,1
    4bbc:	0902                	c.slli64	s2
    4bbe:	0004                	0x4
    4bc0:	0601                	addi	a2,a2,0
    4bc2:	08090103          	lb	sp,128(s2)
    4bc6:	0100                	addi	s0,sp,128
    4bc8:	00090503          	lb	a0,0(s2)
    4bcc:	0100                	addi	s0,sp,128
    4bce:	00090303          	lb	t1,0(s2)
    4bd2:	0100                	addi	s0,sp,128
    4bd4:	1405                	addi	s0,s0,-31
    4bd6:	0306                	slli	t1,t1,0x1
    4bd8:	0900                	addi	s0,sp,144
    4bda:	0000                	unimp
    4bdc:	0501                	addi	a0,a0,0
    4bde:	0301                	addi	t1,t1,0
    4be0:	0901                	addi	s2,s2,0
    4be2:	0008                	0x8
    4be4:	0901                	addi	s2,s2,0
    4be6:	0010                	0x10
    4be8:	0100                	addi	s0,sp,128
    4bea:	0501                	addi	a0,a0,0
    4bec:	0021                	c.nop	8
    4bee:	0205                	addi	tp,tp,1
    4bf0:	2038                	fld	fa4,64(s0)
    4bf2:	0000                	unimp
    4bf4:	0100e903          	0x100e903
    4bf8:	0505                	addi	a0,a0,1
    4bfa:	00090103          	lb	sp,0(s2)
    4bfe:	0100                	addi	s0,sp,128
    4c00:	1405                	addi	s0,s0,-31
    4c02:	0306                	slli	t1,t1,0x1
    4c04:	0900                	addi	s0,sp,144
    4c06:	0000                	unimp
    4c08:	0501                	addi	a0,a0,0
    4c0a:	0301                	addi	t1,t1,0
    4c0c:	0901                	addi	s2,s2,0
    4c0e:	0004                	0x4
    4c10:	0901                	addi	s2,s2,0
    4c12:	0004                	0x4
    4c14:	0100                	addi	s0,sp,128
    4c16:	9101                	srli	a0,a0,0x20
    4c18:	0300000f          	fence	rw,unknown
    4c1c:	c800                	sw	s0,16(s0)
    4c1e:	0001                	nop
    4c20:	0100                	addi	s0,sp,128
    4c22:	fb01                	bnez	a4,4b32 <__fixunsdfsi+0x2>
    4c24:	0d0e                	slli	s10,s10,0x3
    4c26:	0100                	addi	s0,sp,128
    4c28:	0101                	addi	sp,sp,0
    4c2a:	0001                	nop
    4c2c:	0000                	unimp
    4c2e:	0001                	nop
    4c30:	0100                	addi	s0,sp,128
    4c32:	2f2e                	fld	ft10,200(sp)
    4c34:	2f637273          	csrrci	tp,0x2f6,6
    4c38:	65726f63          	bltu	tp,s7,5296 <_printf_float+0x18e>
    4c3c:	616d                	addi	sp,sp,240
    4c3e:	6b72                	flw	fs6,28(sp)
    4c40:	6500                	flw	fs0,8(a0)
    4c42:	5c3a                	lw	s8,172(sp)
    4c44:	7270                	flw	fa2,100(a2)
    4c46:	6172676f          	jal	a4,2ba5c <_data_lma+0x208e4>
    4c4a:	666d                	lui	a2,0x1b
    4c4c:	6c69                	lui	s8,0x1a
    4c4e:	7365                	lui	t1,0xffff9
    4c50:	3878                	fld	fa4,240(s0)
    4c52:	5c36                	lw	s8,108(sp)
    4c54:	6f6e                	flw	ft10,216(sp)
    4c56:	6d72                	flw	fs10,28(sp)
    4c58:	6c61                	lui	s8,0x18
    4c5a:	722d                	lui	tp,0xfffeb
    4c5c:	7369                	lui	t1,0xffffa
    4c5e:	6e2d7663          	bgeu	s10,sp,534a <_printf_float+0x242>
    4c62:	2d656e6f          	jal	t3,5af38 <_data_lma+0x4fdc0>
    4c66:	2d636367          	0x2d636367
    4c6a:	2e38                	fld	fa4,88(a2)
    4c6c:	2e32                	fld	ft8,264(sp)
    4c6e:	2d30                	fld	fa2,88(a0)
    4c70:	2e32                	fld	ft8,264(sp)
    4c72:	2d32                	fld	fs10,264(sp)
    4c74:	3032                	fld	ft0,296(sp)
    4c76:	3931                	jal	4892 <__muldf3+0x4c6>
    4c78:	3530                	fld	fa2,104(a0)
    4c7a:	3132                	fld	ft2,296(sp)
    4c7c:	302d                	jal	44a6 <__muldf3+0xda>
    4c7e:	3030                	fld	fa2,96(s0)
    4c80:	2d34                	fld	fa3,88(a0)
    4c82:	366e6977          	0x366e6977
    4c86:	5c34                	lw	a3,120(s0)
    4c88:	6972                	flw	fs2,28(sp)
    4c8a:	2d766373          	csrrsi	t1,0x2d7,12
    4c8e:	6f6e                	flw	ft10,216(sp)
    4c90:	656e                	flw	fa0,216(sp)
    4c92:	652d                	lui	a0,0xb
    4c94:	626d                	lui	tp,0x1b
    4c96:	6465                	lui	s0,0x19
    4c98:	695c                	flw	fa5,20(a0)
    4c9a:	636e                	flw	ft6,216(sp)
    4c9c:	756c                	flw	fa1,108(a0)
    4c9e:	6564                	flw	fs1,76(a0)
    4ca0:	735c                	flw	fa5,36(a4)
    4ca2:	7379                	lui	t1,0xffffe
    4ca4:	6500                	flw	fs0,8(a0)
    4ca6:	5c3a                	lw	s8,172(sp)
    4ca8:	7270                	flw	fa2,100(a2)
    4caa:	6172676f          	jal	a4,2bac0 <_data_lma+0x20948>
    4cae:	666d                	lui	a2,0x1b
    4cb0:	6c69                	lui	s8,0x1a
    4cb2:	7365                	lui	t1,0xffff9
    4cb4:	3878                	fld	fa4,240(s0)
    4cb6:	5c36                	lw	s8,108(sp)
    4cb8:	6f6e                	flw	ft10,216(sp)
    4cba:	6d72                	flw	fs10,28(sp)
    4cbc:	6c61                	lui	s8,0x18
    4cbe:	722d                	lui	tp,0xfffeb
    4cc0:	7369                	lui	t1,0xffffa
    4cc2:	6e2d7663          	bgeu	s10,sp,53ae <_printf_float+0x2a6>
    4cc6:	2d656e6f          	jal	t3,5af9c <_data_lma+0x4fe24>
    4cca:	2d636367          	0x2d636367
    4cce:	2e38                	fld	fa4,88(a2)
    4cd0:	2e32                	fld	ft8,264(sp)
    4cd2:	2d30                	fld	fa2,88(a0)
    4cd4:	2e32                	fld	ft8,264(sp)
    4cd6:	2d32                	fld	fs10,264(sp)
    4cd8:	3032                	fld	ft0,296(sp)
    4cda:	3931                	jal	48f6 <__muldf3+0x52a>
    4cdc:	3530                	fld	fa2,104(a0)
    4cde:	3132                	fld	ft2,296(sp)
    4ce0:	302d                	jal	450a <__muldf3+0x13e>
    4ce2:	3030                	fld	fa2,96(s0)
    4ce4:	2d34                	fld	fa3,88(a0)
    4ce6:	366e6977          	0x366e6977
    4cea:	5c34                	lw	a3,120(s0)
    4cec:	696c                	flw	fa1,84(a0)
    4cee:	5c62                	lw	s8,56(sp)
    4cf0:	5c636367          	0x5c636367
    4cf4:	6972                	flw	fs2,28(sp)
    4cf6:	2d766373          	csrrsi	t1,0x2d7,12
    4cfa:	6f6e                	flw	ft10,216(sp)
    4cfc:	656e                	flw	fa0,216(sp)
    4cfe:	652d                	lui	a0,0xb
    4d00:	626d                	lui	tp,0x1b
    4d02:	6465                	lui	s0,0x19
    4d04:	385c                	fld	fa5,176(s0)
    4d06:	322e                	fld	ft4,232(sp)
    4d08:	302e                	fld	ft0,232(sp)
    4d0a:	695c                	flw	fa5,20(a0)
    4d0c:	636e                	flw	ft6,216(sp)
    4d0e:	756c                	flw	fa1,108(a0)
    4d10:	6564                	flw	fs1,76(a0)
    4d12:	6500                	flw	fs0,8(a0)
    4d14:	5c3a                	lw	s8,172(sp)
    4d16:	7270                	flw	fa2,100(a2)
    4d18:	6172676f          	jal	a4,2bb2e <_data_lma+0x209b6>
    4d1c:	666d                	lui	a2,0x1b
    4d1e:	6c69                	lui	s8,0x1a
    4d20:	7365                	lui	t1,0xffff9
    4d22:	3878                	fld	fa4,240(s0)
    4d24:	5c36                	lw	s8,108(sp)
    4d26:	6f6e                	flw	ft10,216(sp)
    4d28:	6d72                	flw	fs10,28(sp)
    4d2a:	6c61                	lui	s8,0x18
    4d2c:	722d                	lui	tp,0xfffeb
    4d2e:	7369                	lui	t1,0xffffa
    4d30:	6e2d7663          	bgeu	s10,sp,541c <_printf_float+0x314>
    4d34:	2d656e6f          	jal	t3,5b00a <_data_lma+0x4fe92>
    4d38:	2d636367          	0x2d636367
    4d3c:	2e38                	fld	fa4,88(a2)
    4d3e:	2e32                	fld	ft8,264(sp)
    4d40:	2d30                	fld	fa2,88(a0)
    4d42:	2e32                	fld	ft8,264(sp)
    4d44:	2d32                	fld	fs10,264(sp)
    4d46:	3032                	fld	ft0,296(sp)
    4d48:	3931                	jal	4964 <__muldf3+0x598>
    4d4a:	3530                	fld	fa2,104(a0)
    4d4c:	3132                	fld	ft2,296(sp)
    4d4e:	302d                	jal	4578 <__muldf3+0x1ac>
    4d50:	3030                	fld	fa2,96(s0)
    4d52:	2d34                	fld	fa3,88(a0)
    4d54:	366e6977          	0x366e6977
    4d58:	5c34                	lw	a3,120(s0)
    4d5a:	6972                	flw	fs2,28(sp)
    4d5c:	2d766373          	csrrsi	t1,0x2d7,12
    4d60:	6f6e                	flw	ft10,216(sp)
    4d62:	656e                	flw	fa0,216(sp)
    4d64:	652d                	lui	a0,0xb
    4d66:	626d                	lui	tp,0x1b
    4d68:	6465                	lui	s0,0x19
    4d6a:	695c                	flw	fa5,20(a0)
    4d6c:	636e                	flw	ft6,216(sp)
    4d6e:	756c                	flw	fa1,108(a0)
    4d70:	6564                	flw	fs1,76(a0)
    4d72:	0000                	unimp
    4d74:	65726f63          	bltu	tp,s7,53d2 <_printf_float+0x2ca>
    4d78:	735f 6174 6574      	0x65746174735f
    4d7e:	632e                	flw	ft6,200(sp)
    4d80:	0100                	addi	s0,sp,128
    4d82:	0000                	unimp
    4d84:	6f6c                	flw	fa1,92(a4)
    4d86:	682e6b63          	bltu	t3,sp,541c <_printf_float+0x314>
    4d8a:	0200                	addi	s0,sp,256
    4d8c:	0000                	unimp
    4d8e:	745f 7079 7365      	0x73657079745f
    4d94:	682e                	flw	fa6,200(sp)
    4d96:	0200                	addi	s0,sp,256
    4d98:	0000                	unimp
    4d9a:	64647473          	csrrci	s0,0x646,8
    4d9e:	6665                	lui	a2,0x19
    4da0:	682e                	flw	fa6,200(sp)
    4da2:	0300                	addi	s0,sp,384
    4da4:	0000                	unimp
    4da6:	6572                	flw	fa0,28(sp)
    4da8:	6e65                	lui	t3,0x19
    4daa:	2e74                	fld	fa3,216(a2)
    4dac:	0068                	addi	a0,sp,12
    4dae:	0002                	c.slli64	zero
    4db0:	7400                	flw	fs0,40(s0)
    4db2:	6d69                	lui	s10,0x1a
    4db4:	2e65                	jal	516c <_printf_float+0x64>
    4db6:	0068                	addi	a0,sp,12
    4db8:	0004                	0x4
    4dba:	6300                	flw	fs0,0(a4)
    4dbc:	5f65726f          	jal	tp,5c3b2 <_data_lma+0x5123a>
    4dc0:	6f70                	flw	fa2,92(a4)
    4dc2:	7472                	flw	fs0,60(sp)
    4dc4:	656d                	lui	a0,0x1b
    4dc6:	682e                	flw	fa6,200(sp)
    4dc8:	0100                	addi	s0,sp,128
    4dca:	0000                	unimp
    4dcc:	623c                	flw	fa5,64(a2)
    4dce:	6975                	lui	s2,0x1d
    4dd0:	746c                	flw	fa1,108(s0)
    4dd2:	692d                	lui	s2,0xb
    4dd4:	3e6e                	fld	ft8,248(sp)
    4dd6:	0000                	unimp
    4dd8:	0000                	unimp
    4dda:	65726f63          	bltu	tp,s7,5438 <_printf_float+0x330>
    4dde:	616d                	addi	sp,sp,240
    4de0:	6b72                	flw	fs6,28(sp)
    4de2:	682e                	flw	fa6,200(sp)
    4de4:	0100                	addi	s0,sp,128
    4de6:	0000                	unimp
    4de8:	0500                	addi	s0,sp,640
    4dea:	0001                	nop
    4dec:	0205                	addi	tp,tp,1
    4dee:	2040                	fld	fs0,128(s0)
    4df0:	0000                	unimp
    4df2:	01018c03          	lb	s8,16(gp) # 1001440 <__global_pointer$+0x10>
    4df6:	0505                	addi	a0,a0,1
    4df8:	00090103          	lb	sp,0(s2) # b000 <__trunctfdf2+0x220>
    4dfc:	0100                	addi	s0,sp,128
    4dfe:	0105                	addi	sp,sp,1
    4e00:	0306                	slli	t1,t1,0x1
    4e02:	097f                	0x97f
    4e04:	0000                	unimp
    4e06:	0501                	addi	a0,a0,0
    4e08:	0305                	addi	t1,t1,1
    4e0a:	0901                	addi	s2,s2,0
    4e0c:	000c                	0xc
    4e0e:	0501                	addi	a0,a0,0
    4e10:	0301                	addi	t1,t1,0
    4e12:	097f                	0x97f
    4e14:	0008                	0x8
    4e16:	0301                	addi	t1,t1,0
    4e18:	0900                	addi	s0,sp,144
    4e1a:	000c                	0xc
    4e1c:	0501                	addi	a0,a0,0
    4e1e:	0305                	addi	t1,t1,1
    4e20:	0901                	addi	s2,s2,0
    4e22:	0008                	0x8
    4e24:	0601                	addi	a2,a2,0
    4e26:	08090103          	lb	sp,128(s2)
    4e2a:	0100                	addi	s0,sp,128
    4e2c:	00090103          	lb	sp,0(s2)
    4e30:	0100                	addi	s0,sp,128
    4e32:	00090503          	lb	a0,0(s2)
    4e36:	0100                	addi	s0,sp,128
    4e38:	0905                	addi	s2,s2,1
    4e3a:	0306                	slli	t1,t1,0x1
    4e3c:	0900                	addi	s0,sp,144
    4e3e:	0000                	unimp
    4e40:	0501                	addi	a0,a0,0
    4e42:	0605                	addi	a2,a2,1
    4e44:	04090103          	lb	sp,64(s2)
    4e48:	0100                	addi	s0,sp,128
    4e4a:	00090103          	lb	sp,0(s2)
    4e4e:	0100                	addi	s0,sp,128
    4e50:	0b05                	addi	s6,s6,1
    4e52:	0306                	slli	t1,t1,0x1
    4e54:	0900                	addi	s0,sp,144
    4e56:	0000                	unimp
    4e58:	0501                	addi	a0,a0,0
    4e5a:	0609                	addi	a2,a2,2
    4e5c:	14090203          	lb	tp,320(s2)
    4e60:	0100                	addi	s0,sp,128
    4e62:	0306                	slli	t1,t1,0x1
    4e64:	0908                	addi	a0,sp,144
    4e66:	0000                	unimp
    4e68:	0501                	addi	a0,a0,0
    4e6a:	0316                	slli	t1,t1,0x5
    4e6c:	0905                	addi	s2,s2,1
    4e6e:	000c                	0xc
    4e70:	0501                	addi	a0,a0,0
    4e72:	0309                	addi	t1,t1,2
    4e74:	0004097b          	0x4097b
    4e78:	0501                	addi	a0,a0,0
    4e7a:	0316                	slli	t1,t1,0x5
    4e7c:	00040913          	mv	s2,s0
    4e80:	0301                	addi	t1,t1,0
    4e82:	097c                	addi	a5,sp,156
    4e84:	0004                	0x4
    4e86:	0301                	addi	t1,t1,0
    4e88:	0004097b          	0x4097b
    4e8c:	0501                	addi	a0,a0,0
    4e8e:	0309                	addi	t1,t1,2
    4e90:	0976                	slli	s2,s2,0x1d
    4e92:	0008                	0x8
    4e94:	0501                	addi	a0,a0,0
    4e96:	030c                	addi	a1,sp,384
    4e98:	096e                	slli	s2,s2,0x1b
    4e9a:	0008                	0x8
    4e9c:	0501                	addi	a0,a0,0
    4e9e:	0609                	addi	a2,a2,2
    4ea0:	04091103          	lh	sp,64(s2)
    4ea4:	0100                	addi	s0,sp,128
    4ea6:	00090103          	lb	sp,0(s2)
    4eaa:	0100                	addi	s0,sp,128
    4eac:	1605                	addi	a2,a2,-31
    4eae:	0306                	slli	t1,t1,0x1
    4eb0:	0905                	addi	s2,s2,1
    4eb2:	0000                	unimp
    4eb4:	0501                	addi	a0,a0,0
    4eb6:	0309                	addi	t1,t1,2
    4eb8:	0004097b          	0x4097b
    4ebc:	0501                	addi	a0,a0,0
    4ebe:	0316                	slli	t1,t1,0x5
    4ec0:	00040913          	mv	s2,s0
    4ec4:	0301                	addi	t1,t1,0
    4ec6:	0901                	addi	s2,s2,0
    4ec8:	0004                	0x4
    4eca:	0301                	addi	t1,t1,0
    4ecc:	0004097b          	0x4097b
    4ed0:	0301                	addi	t1,t1,0
    4ed2:	0004097b          	0x4097b
    4ed6:	0501                	addi	a0,a0,0
    4ed8:	031e                	slli	t1,t1,0x7
    4eda:	0972                	slli	s2,s2,0x1c
    4edc:	0004                	0x4
    4ede:	0501                	addi	a0,a0,0
    4ee0:	0309                	addi	t1,t1,2
    4ee2:	0904                	addi	s1,sp,144
    4ee4:	0008                	0x8
    4ee6:	0501                	addi	a0,a0,0
    4ee8:	0316                	slli	t1,t1,0x5
    4eea:	00100913          	li	s2,1
    4eee:	0501                	addi	a0,a0,0
    4ef0:	0309                	addi	t1,t1,2
    4ef2:	096d                	addi	s2,s2,27
    4ef4:	0004                	0x4
    4ef6:	0501                	addi	a0,a0,0
    4ef8:	0611                	addi	a2,a2,4
    4efa:	04090a03          	lb	s4,64(s2)
    4efe:	0100                	addi	s0,sp,128
    4f00:	1605                	addi	a2,a2,-31
    4f02:	0306                	slli	t1,t1,0x1
    4f04:	0900                	addi	s0,sp,144
    4f06:	0000                	unimp
    4f08:	0501                	addi	a0,a0,0
    4f0a:	031a                	slli	t1,t1,0x6
    4f0c:	096c                	addi	a1,sp,156
    4f0e:	000c                	0xc
    4f10:	0501                	addi	a0,a0,0
    4f12:	0316                	slli	t1,t1,0x5
    4f14:	091d                	addi	s2,s2,7
    4f16:	0004                	0x4
    4f18:	0501                	addi	a0,a0,0
    4f1a:	0611                	addi	a2,a2,4
    4f1c:	04090103          	lb	sp,64(s2)
    4f20:	0100                	addi	s0,sp,128
    4f22:	00090103          	lb	sp,0(s2)
    4f26:	0100                	addi	s0,sp,128
    4f28:	0b05                	addi	s6,s6,1
    4f2a:	0306                	slli	t1,t1,0x1
    4f2c:	0961                	addi	s2,s2,24
    4f2e:	0004                	0x4
    4f30:	0501                	addi	a0,a0,0
    4f32:	0316                	slli	t1,t1,0x5
    4f34:	091e                	slli	s2,s2,0x7
    4f36:	0004                	0x4
    4f38:	0501                	addi	a0,a0,0
    4f3a:	0611                	addi	a2,a2,4
    4f3c:	04096703          	0x4096703
    4f40:	0100                	addi	s0,sp,128
    4f42:	2705                	jal	5662 <_printf_float+0x55a>
    4f44:	0306                	slli	t1,t1,0x1
    4f46:	0900                	addi	s0,sp,144
    4f48:	0000                	unimp
    4f4a:	0501                	addi	a0,a0,0
    4f4c:	0322                	slli	t1,t1,0x8
    4f4e:	0900                	addi	s0,sp,144
    4f50:	0004                	0x4
    4f52:	0501                	addi	a0,a0,0
    4f54:	0611                	addi	a2,a2,4
    4f56:	08090003          	lb	zero,128(s2)
    4f5a:	0100                	addi	s0,sp,128
    4f5c:	2705                	jal	567c <_printf_float+0x574>
    4f5e:	0306                	slli	t1,t1,0x1
    4f60:	0900                	addi	s0,sp,144
    4f62:	0000                	unimp
    4f64:	0501                	addi	a0,a0,0
    4f66:	0322                	slli	t1,t1,0x8
    4f68:	0900                	addi	s0,sp,144
    4f6a:	0004                	0x4
    4f6c:	0501                	addi	a0,a0,0
    4f6e:	0611                	addi	a2,a2,4
    4f70:	04090003          	lb	zero,64(s2)
    4f74:	0100                	addi	s0,sp,128
    4f76:	2705                	jal	5696 <_printf_float+0x58e>
    4f78:	0306                	slli	t1,t1,0x1
    4f7a:	0900                	addi	s0,sp,144
    4f7c:	0000                	unimp
    4f7e:	0501                	addi	a0,a0,0
    4f80:	0322                	slli	t1,t1,0x8
    4f82:	0900                	addi	s0,sp,144
    4f84:	0004                	0x4
    4f86:	0501                	addi	a0,a0,0
    4f88:	0611                	addi	a2,a2,4
    4f8a:	04090003          	lb	zero,64(s2)
    4f8e:	0100                	addi	s0,sp,128
    4f90:	2705                	jal	56b0 <_printf_float+0x5a8>
    4f92:	0306                	slli	t1,t1,0x1
    4f94:	0900                	addi	s0,sp,144
    4f96:	0000                	unimp
    4f98:	0501                	addi	a0,a0,0
    4f9a:	0322                	slli	t1,t1,0x8
    4f9c:	0900                	addi	s0,sp,144
    4f9e:	0004                	0x4
    4fa0:	0501                	addi	a0,a0,0
    4fa2:	030d                	addi	t1,t1,3
    4fa4:	097f                	0x97f
    4fa6:	0004                	0x4
    4fa8:	0501                	addi	a0,a0,0
    4faa:	0611                	addi	a2,a2,4
    4fac:	04090103          	lb	sp,64(s2)
    4fb0:	0100                	addi	s0,sp,128
    4fb2:	2705                	jal	56d2 <_printf_float+0x5ca>
    4fb4:	0306                	slli	t1,t1,0x1
    4fb6:	0900                	addi	s0,sp,144
    4fb8:	0000                	unimp
    4fba:	0501                	addi	a0,a0,0
    4fbc:	0322                	slli	t1,t1,0x8
    4fbe:	0900                	addi	s0,sp,144
    4fc0:	0004                	0x4
    4fc2:	0501                	addi	a0,a0,0
    4fc4:	0611                	addi	a2,a2,4
    4fc6:	04090003          	lb	zero,64(s2)
    4fca:	0100                	addi	s0,sp,128
    4fcc:	2705                	jal	56ec <_printf_float+0x5e4>
    4fce:	0306                	slli	t1,t1,0x1
    4fd0:	0900                	addi	s0,sp,144
    4fd2:	0000                	unimp
    4fd4:	0501                	addi	a0,a0,0
    4fd6:	0322                	slli	t1,t1,0x8
    4fd8:	0900                	addi	s0,sp,144
    4fda:	0004                	0x4
    4fdc:	0501                	addi	a0,a0,0
    4fde:	0611                	addi	a2,a2,4
    4fe0:	04090003          	lb	zero,64(s2)
    4fe4:	0100                	addi	s0,sp,128
    4fe6:	2705                	jal	5706 <_printf_float+0x5fe>
    4fe8:	0306                	slli	t1,t1,0x1
    4fea:	0900                	addi	s0,sp,144
    4fec:	0000                	unimp
    4fee:	0501                	addi	a0,a0,0
    4ff0:	0322                	slli	t1,t1,0x8
    4ff2:	0900                	addi	s0,sp,144
    4ff4:	0004                	0x4
    4ff6:	0501                	addi	a0,a0,0
    4ff8:	030d                	addi	t1,t1,3
    4ffa:	097f                	0x97f
    4ffc:	0004                	0x4
    4ffe:	0501                	addi	a0,a0,0
    5000:	0011                	c.nop	4
    5002:	0402                	c.slli64	s0
    5004:	01030603          	lb	a2,16(t1) # ffffa010 <__freertos_irq_stack_top+0xfefea010>
    5008:	0409                	addi	s0,s0,2
    500a:	0100                	addi	s0,sp,128
    500c:	2705                	jal	572c <_printf_float+0x624>
    500e:	0200                	addi	s0,sp,256
    5010:	0304                	addi	s1,sp,384
    5012:	0306                	slli	t1,t1,0x1
    5014:	0900                	addi	s0,sp,144
    5016:	0000                	unimp
    5018:	0501                	addi	a0,a0,0
    501a:	0022                	c.slli	zero,0x8
    501c:	0402                	c.slli64	s0
    501e:	09000303          	lb	t1,144(zero) # 90 <main+0x14>
    5022:	0004                	0x4
    5024:	0501                	addi	a0,a0,0
    5026:	060d                	addi	a2,a2,3
    5028:	04090103          	lb	sp,64(s2)
    502c:	0100                	addi	s0,sp,128
    502e:	1e05                	addi	t3,t3,-31
    5030:	0306                	slli	t1,t1,0x1
    5032:	0900                	addi	s0,sp,144
    5034:	0000                	unimp
    5036:	0501                	addi	a0,a0,0
    5038:	060d                	addi	a2,a2,3
    503a:	08090103          	lb	sp,128(s2)
    503e:	0100                	addi	s0,sp,128
    5040:	1e05                	addi	t3,t3,-31
    5042:	0306                	slli	t1,t1,0x1
    5044:	097f                	0x97f
    5046:	0000                	unimp
    5048:	0501                	addi	a0,a0,0
    504a:	0609                	addi	a2,a2,2
    504c:	04090303          	lb	t1,64(s2)
    5050:	0100                	addi	s0,sp,128
    5052:	00090103          	lb	sp,0(s2)
    5056:	0100                	addi	s0,sp,128
    5058:	1105                	addi	sp,sp,-31
    505a:	1c090503          	lb	a0,448(s2)
    505e:	0100                	addi	s0,sp,128
    5060:	1605                	addi	a2,a2,-31
    5062:	0306                	slli	t1,t1,0x1
    5064:	0900                	addi	s0,sp,144
    5066:	0000                	unimp
    5068:	0501                	addi	a0,a0,0
    506a:	031a                	slli	t1,t1,0x6
    506c:	0971                	addi	s2,s2,28
    506e:	0010                	0x10
    5070:	0501                	addi	a0,a0,0
    5072:	0316                	slli	t1,t1,0x5
    5074:	0004090f          	0x4090f
    5078:	0501                	addi	a0,a0,0
    507a:	0611                	addi	a2,a2,4
    507c:	04090103          	lb	sp,64(s2)
    5080:	0100                	addi	s0,sp,128
    5082:	00090103          	lb	sp,0(s2)
    5086:	0100                	addi	s0,sp,128
    5088:	0b05                	addi	s6,s6,1
    508a:	0306                	slli	t1,t1,0x1
    508c:	0004096f          	jal	s2,4508c <_data_lma+0x39f14>
    5090:	0501                	addi	a0,a0,0
    5092:	0316                	slli	t1,t1,0x5
    5094:	0910                	addi	a2,sp,144
    5096:	0004                	0x4
    5098:	0501                	addi	a0,a0,0
    509a:	0611                	addi	a2,a2,4
    509c:	08090903          	lb	s2,128(s2)
    50a0:	0100                	addi	s0,sp,128
    50a2:	1605                	addi	a2,a2,-31
    50a4:	0306                	slli	t1,t1,0x1
    50a6:	0900                	addi	s0,sp,144
    50a8:	0004                	0x4
    50aa:	0501                	addi	a0,a0,0
    50ac:	031a                	slli	t1,t1,0x6
    50ae:	00080967          	jalr	s2,a6
    50b2:	0501                	addi	a0,a0,0
    50b4:	0316                	slli	t1,t1,0x5
    50b6:	091d                	addi	s2,s2,7
    50b8:	0004                	0x4
    50ba:	0501                	addi	a0,a0,0
    50bc:	0611                	addi	a2,a2,4
    50be:	04090103          	lb	sp,64(s2)
    50c2:	0100                	addi	s0,sp,128
    50c4:	00090103          	lb	sp,0(s2)
    50c8:	0100                	addi	s0,sp,128
    50ca:	0b05                	addi	s6,s6,1
    50cc:	0306                	slli	t1,t1,0x1
    50ce:	0961                	addi	s2,s2,24
    50d0:	0004                	0x4
    50d2:	0301                	addi	t1,t1,0
    50d4:	0925                	addi	s2,s2,9
    50d6:	0004                	0x4
    50d8:	0501                	addi	a0,a0,0
    50da:	0301                	addi	t1,t1,0
    50dc:	0908                	addi	a0,sp,144
    50de:	000c                	0xc
    50e0:	0501                	addi	a0,a0,0
    50e2:	0611                	addi	a2,a2,4
    50e4:	20097003          	0x20097003
    50e8:	0100                	addi	s0,sp,128
    50ea:	1605                	addi	a2,a2,-31
    50ec:	0306                	slli	t1,t1,0x1
    50ee:	0900                	addi	s0,sp,144
    50f0:	0000                	unimp
    50f2:	0501                	addi	a0,a0,0
    50f4:	0301                	addi	t1,t1,0
    50f6:	0910                	addi	a2,sp,144
    50f8:	0008                	0x8
    50fa:	0501                	addi	a0,a0,0
    50fc:	030c                	addi	a1,sp,384
    50fe:	0018094b          	fnmsub.s	fs2,fa6,ft1,ft0,rne
    5102:	0901                	addi	s2,s2,0
    5104:	0008                	0x8
    5106:	0100                	addi	s0,sp,128
    5108:	0501                	addi	a0,a0,0
    510a:	0001                	nop
    510c:	0205                	addi	tp,tp,1
    510e:	221c                	fld	fa5,0(a2)
    5110:	0000                	unimp
    5112:	0101da03          	lhu	s4,16(gp) # 1001440 <__global_pointer$+0x10>
    5116:	0505                	addi	a0,a0,1
    5118:	00090103          	lb	sp,0(s2)
    511c:	0100                	addi	s0,sp,128
    511e:	1505                	addi	a0,a0,-31
    5120:	0306                	slli	t1,t1,0x1
    5122:	0900                	addi	s0,sp,144
    5124:	0000                	unimp
    5126:	0501                	addi	a0,a0,0
    5128:	0605                	addi	a2,a2,1
    512a:	04090103          	lb	sp,64(s2)
    512e:	0100                	addi	s0,sp,128
    5130:	00090103          	lb	sp,0(s2)
    5134:	0100                	addi	s0,sp,128
    5136:	00090103          	lb	sp,0(s2)
    513a:	0100                	addi	s0,sp,128
    513c:	0c05                	addi	s8,s8,1
    513e:	0306                	slli	t1,t1,0x1
    5140:	0900                	addi	s0,sp,144
    5142:	0000                	unimp
    5144:	0501                	addi	a0,a0,0
    5146:	0305                	addi	t1,t1,1
    5148:	0900                	addi	s0,sp,144
    514a:	0004                	0x4
    514c:	0501                	addi	a0,a0,0
    514e:	0609                	addi	a2,a2,2
    5150:	04090203          	lb	tp,64(s2)
    5154:	0100                	addi	s0,sp,128
    5156:	00090103          	lb	sp,0(s2)
    515a:	0100                	addi	s0,sp,128
    515c:	0c05                	addi	s8,s8,1
    515e:	0306                	slli	t1,t1,0x1
    5160:	0900                	addi	s0,sp,144
    5162:	0000                	unimp
    5164:	0501                	addi	a0,a0,0
    5166:	0609                	addi	a2,a2,2
    5168:	0c090503          	lb	a0,192(s2)
    516c:	0100                	addi	s0,sp,128
    516e:	1105                	addi	sp,sp,-31
    5170:	00090303          	lb	t1,0(s2)
    5174:	0100                	addi	s0,sp,128
    5176:	0505                	addi	a0,a0,1
    5178:	00095f03          	lhu	t5,0(s2)
    517c:	0100                	addi	s0,sp,128
    517e:	00090103          	lb	sp,0(s2)
    5182:	0100                	addi	s0,sp,128
    5184:	1a05                	addi	s4,s4,-31
    5186:	0306                	slli	t1,t1,0x1
    5188:	0900                	addi	s0,sp,144
    518a:	0004                	0x4
    518c:	0501                	addi	a0,a0,0
    518e:	030c                	addi	a1,sp,384
    5190:	0900                	addi	s0,sp,144
    5192:	0004                	0x4
    5194:	0501                	addi	a0,a0,0
    5196:	0611                	addi	a2,a2,4
    5198:	10093103          	0x10093103
    519c:	0100                	addi	s0,sp,128
    519e:	2d05                	jal	57ce <_printf_float+0x6c6>
    51a0:	0306                	slli	t1,t1,0x1
    51a2:	0900                	addi	s0,sp,144
    51a4:	0000                	unimp
    51a6:	0501                	addi	a0,a0,0
    51a8:	0611                	addi	a2,a2,4
    51aa:	04090103          	lb	sp,64(s2)
    51ae:	0100                	addi	s0,sp,128
    51b0:	0c05                	addi	s8,s8,1
    51b2:	0306                	slli	t1,t1,0x1
    51b4:	00000963          	beqz	zero,51c6 <_printf_float+0xbe>
    51b8:	0501                	addi	a0,a0,0
    51ba:	0305                	addi	t1,t1,1
    51bc:	0900                	addi	s0,sp,144
    51be:	0004                	0x4
    51c0:	0501                	addi	a0,a0,0
    51c2:	0609                	addi	a2,a2,2
    51c4:	04090203          	lb	tp,64(s2)
    51c8:	0100                	addi	s0,sp,128
    51ca:	00090103          	lb	sp,0(s2)
    51ce:	0100                	addi	s0,sp,128
    51d0:	0c05                	addi	s8,s8,1
    51d2:	0306                	slli	t1,t1,0x1
    51d4:	0900                	addi	s0,sp,144
    51d6:	0004                	0x4
    51d8:	0501                	addi	a0,a0,0
    51da:	031a                	slli	t1,t1,0x6
    51dc:	0968                	addi	a0,sp,156
    51de:	0004                	0x4
    51e0:	0501                	addi	a0,a0,0
    51e2:	0314                	addi	a3,sp,384
    51e4:	00c5                	addi	ra,ra,17
    51e6:	0409                	addi	s0,s0,2
    51e8:	0100                	addi	s0,sp,128
    51ea:	0c05                	addi	s8,s8,1
    51ec:	097fbb03          	0x97fbb03
    51f0:	0004                	0x4
    51f2:	0301                	addi	t1,t1,0
    51f4:	0918                	addi	a4,sp,144
    51f6:	0004                	0x4
    51f8:	0501                	addi	a0,a0,0
    51fa:	0611                	addi	a2,a2,4
    51fc:	04092d03          	lw	s10,64(s2)
    5200:	0100                	addi	s0,sp,128
    5202:	1605                	addi	a2,a2,-31
    5204:	00090503          	lb	a0,0(s2)
    5208:	0100                	addi	s0,sp,128
    520a:	0505                	addi	a0,a0,1
    520c:	097fb503          	0x97fb503
    5210:	0000                	unimp
    5212:	0301                	addi	t1,t1,0
    5214:	0901                	addi	s2,s2,0
    5216:	0000                	unimp
    5218:	0501                	addi	a0,a0,0
    521a:	060c                	addi	a1,sp,768
    521c:	00090003          	lb	zero,0(s2)
    5220:	0100                	addi	s0,sp,128
    5222:	1405                	addi	s0,s0,-31
    5224:	0900c503          	lbu	a0,144(ra)
    5228:	0004                	0x4
    522a:	0501                	addi	a0,a0,0
    522c:	0609                	addi	a2,a2,2
    522e:	04095203          	lhu	tp,64(s2)
    5232:	0100                	addi	s0,sp,128
    5234:	0c05                	addi	s8,s8,1
    5236:	0306                	slli	t1,t1,0x1
    5238:	0969                	addi	s2,s2,26
    523a:	0000                	unimp
    523c:	0301                	addi	t1,t1,0
    523e:	0915                	addi	s2,s2,5
    5240:	0004                	0x4
    5242:	0501                	addi	a0,a0,0
    5244:	0609                	addi	a2,a2,2
    5246:	04090303          	lb	t1,64(s2)
    524a:	0100                	addi	s0,sp,128
    524c:	0505                	addi	a0,a0,1
    524e:	0306                	slli	t1,t1,0x1
    5250:	097d                	addi	s2,s2,31
    5252:	0008                	0x8
    5254:	0501                	addi	a0,a0,0
    5256:	030c                	addi	a1,sp,384
    5258:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xde88>
    525c:	0501                	addi	a0,a0,0
    525e:	0611                	addi	a2,a2,4
    5260:	08092d03          	lw	s10,128(s2)
    5264:	0100                	addi	s0,sp,128
    5266:	1605                	addi	a2,a2,-31
    5268:	00090503          	lb	a0,0(s2)
    526c:	0100                	addi	s0,sp,128
    526e:	0505                	addi	a0,a0,1
    5270:	097fb503          	0x97fb503
    5274:	0000                	unimp
    5276:	0301                	addi	t1,t1,0
    5278:	0901                	addi	s2,s2,0
    527a:	0000                	unimp
    527c:	0501                	addi	a0,a0,0
    527e:	061a                	slli	a2,a2,0x6
    5280:	00090003          	lb	zero,0(s2)
    5284:	0100                	addi	s0,sp,128
    5286:	0c05                	addi	s8,s8,1
    5288:	04090003          	lb	zero,64(s2)
    528c:	0100                	addi	s0,sp,128
    528e:	1405                	addi	s0,s0,-31
    5290:	0900c503          	lbu	a0,144(ra)
    5294:	0004                	0x4
    5296:	0501                	addi	a0,a0,0
    5298:	0615                	addi	a2,a2,5
    529a:	04090203          	lb	tp,64(s2)
    529e:	0100                	addi	s0,sp,128
    52a0:	00090103          	lb	sp,0(s2)
    52a4:	0100                	addi	s0,sp,128
    52a6:	2f05                	jal	59d6 <_printf_common+0x11e>
    52a8:	0306                	slli	t1,t1,0x1
    52aa:	0900                	addi	s0,sp,144
    52ac:	0000                	unimp
    52ae:	0501                	addi	a0,a0,0
    52b0:	030c                	addi	a1,sp,384
    52b2:	094d                	addi	s2,s2,19
    52b4:	000c                	0xc
    52b6:	0501                	addi	a0,a0,0
    52b8:	0305                	addi	t1,t1,1
    52ba:	0900                	addi	s0,sp,144
    52bc:	0004                	0x4
    52be:	0501                	addi	a0,a0,0
    52c0:	0609                	addi	a2,a2,2
    52c2:	04090203          	lb	tp,64(s2)
    52c6:	0100                	addi	s0,sp,128
    52c8:	00090103          	lb	sp,0(s2)
    52cc:	0100                	addi	s0,sp,128
    52ce:	0c05                	addi	s8,s8,1
    52d0:	0306                	slli	t1,t1,0x1
    52d2:	0900                	addi	s0,sp,144
    52d4:	0000                	unimp
    52d6:	0501                	addi	a0,a0,0
    52d8:	0314                	addi	a3,sp,384
    52da:	0939                	addi	s2,s2,14
    52dc:	000c                	0xc
    52de:	0501                	addi	a0,a0,0
    52e0:	030c                	addi	a1,sp,384
    52e2:	04097faf          	0x4097faf
    52e6:	0100                	addi	s0,sp,128
    52e8:	04091803          	lh	a6,64(s2)
    52ec:	0100                	addi	s0,sp,128
    52ee:	1105                	addi	sp,sp,-31
    52f0:	0306                	slli	t1,t1,0x1
    52f2:	0939                	addi	s2,s2,14
    52f4:	0004                	0x4
    52f6:	0501                	addi	a0,a0,0
    52f8:	0316                	slli	t1,t1,0x5
    52fa:	0905                	addi	s2,s2,1
    52fc:	0000                	unimp
    52fe:	0501                	addi	a0,a0,0
    5300:	0305                	addi	t1,t1,1
    5302:	7fa9                	lui	t6,0xfffea
    5304:	0009                	c.nop	2
    5306:	0100                	addi	s0,sp,128
    5308:	00090103          	lb	sp,0(s2)
    530c:	0100                	addi	s0,sp,128
    530e:	1a05                	addi	s4,s4,-31
    5310:	0306                	slli	t1,t1,0x1
    5312:	0900                	addi	s0,sp,144
    5314:	0000                	unimp
    5316:	0501                	addi	a0,a0,0
    5318:	0314                	addi	a3,sp,384
    531a:	00d1                	addi	ra,ra,20
    531c:	0409                	addi	s0,s0,2
    531e:	0100                	addi	s0,sp,128
    5320:	0c05                	addi	s8,s8,1
    5322:	097faf03          	lw	t5,151(t6) # fffea097 <__freertos_irq_stack_top+0xfefda097>
    5326:	0004                	0x4
    5328:	0501                	addi	a0,a0,0
    532a:	0314                	addi	a3,sp,384
    532c:	00d1                	addi	ra,ra,20
    532e:	0409                	addi	s0,s0,2
    5330:	0100                	addi	s0,sp,128
    5332:	0905                	addi	s2,s2,1
    5334:	0306                	slli	t1,t1,0x1
    5336:	0946                	slli	s2,s2,0x11
    5338:	0004                	0x4
    533a:	0501                	addi	a0,a0,0
    533c:	060c                	addi	a1,sp,768
    533e:	00096903          	0x96903
    5342:	0100                	addi	s0,sp,128
    5344:	0505                	addi	a0,a0,1
    5346:	0306                	slli	t1,t1,0x1
    5348:	0901                	addi	s2,s2,0
    534a:	0004                	0x4
    534c:	0501                	addi	a0,a0,0
    534e:	0315                	addi	t1,t1,5
    5350:	000900d7          	0x900d7
    5354:	0100                	addi	s0,sp,128
    5356:	00090103          	lb	sp,0(s2)
    535a:	0100                	addi	s0,sp,128
    535c:	3105                	jal	4f7c <__cvt+0xd8>
    535e:	0306                	slli	t1,t1,0x1
    5360:	0900                	addi	s0,sp,144
    5362:	0000                	unimp
    5364:	0501                	addi	a0,a0,0
    5366:	097f031b          	0x97f031b
    536a:	0008                	0x8
    536c:	0501                	addi	a0,a0,0
    536e:	0331                	addi	t1,t1,12
    5370:	0901                	addi	s2,s2,0
    5372:	0004                	0x4
    5374:	0501                	addi	a0,a0,0
    5376:	0605                	addi	a2,a2,1
    5378:	08092603          	lw	a2,128(s2)
    537c:	0100                	addi	s0,sp,128
    537e:	0c05                	addi	s8,s8,1
    5380:	0306                	slli	t1,t1,0x1
    5382:	0900                	addi	s0,sp,144
    5384:	0000                	unimp
    5386:	0501                	addi	a0,a0,0
    5388:	0605                	addi	a2,a2,1
    538a:	04090103          	lb	sp,64(s2)
    538e:	0100                	addi	s0,sp,128
    5390:	0105                	addi	sp,sp,1
    5392:	0306                	slli	t1,t1,0x1
    5394:	0901                	addi	s2,s2,0
    5396:	0000                	unimp
    5398:	0501                	addi	a0,a0,0
    539a:	0605                	addi	a2,a2,1
    539c:	097f8003          	lb	zero,151(t6)
    53a0:	0008                	0x8
    53a2:	0501                	addi	a0,a0,0
    53a4:	0316                	slli	t1,t1,0x5
    53a6:	00000923          	sb	zero,18(zero) # 12 <_start+0x12>
    53aa:	0501                	addi	a0,a0,0
    53ac:	0619                	addi	a2,a2,6
    53ae:	00090003          	lb	zero,0(s2)
    53b2:	0100                	addi	s0,sp,128
    53b4:	2d05                	jal	59e4 <_printf_common+0x12c>
    53b6:	0200                	addi	s0,sp,256
    53b8:	0104                	addi	s1,sp,128
    53ba:	08090003          	lb	zero,128(s2)
    53be:	0100                	addi	s0,sp,128
    53c0:	1605                	addi	a2,a2,-31
    53c2:	0306                	slli	t1,t1,0x1
    53c4:	0904                	addi	s1,sp,144
    53c6:	0008                	0x8
    53c8:	0501                	addi	a0,a0,0
    53ca:	0619                	addi	a2,a2,6
    53cc:	00090003          	lb	zero,0(s2)
    53d0:	0100                	addi	s0,sp,128
    53d2:	1505                	addi	a0,a0,-31
    53d4:	0306                	slli	t1,t1,0x1
    53d6:	0906                	slli	s2,s2,0x1
    53d8:	0008                	0x8
    53da:	0301                	addi	t1,t1,0
    53dc:	0901                	addi	s2,s2,0
    53de:	0000                	unimp
    53e0:	0501                	addi	a0,a0,0
    53e2:	00030633          	add	a2,t1,zero
    53e6:	0009                	c.nop	2
    53e8:	0100                	addi	s0,sp,128
    53ea:	2d05                	jal	5a1a <_printf_common+0x162>
    53ec:	04090203          	lb	tp,64(s2)
    53f0:	0100                	addi	s0,sp,128
    53f2:	1b05                	addi	s6,s6,-31
    53f4:	04097d03          	0x4097d03
    53f8:	0100                	addi	s0,sp,128
    53fa:	3305                	jal	511a <_printf_float+0x12>
    53fc:	04090103          	lb	sp,64(s2)
    5400:	0100                	addi	s0,sp,128
    5402:	1105                	addi	sp,sp,-31
    5404:	0306                	slli	t1,t1,0x1
    5406:	0902                	c.slli64	s2
    5408:	0008                	0x8
    540a:	0301                	addi	t1,t1,0
    540c:	0901                	addi	s2,s2,0
    540e:	0000                	unimp
    5410:	0501                	addi	a0,a0,0
    5412:	0305                	addi	t1,t1,1
    5414:	00cd                	addi	ra,ra,19
    5416:	0009                	c.nop	2
    5418:	0100                	addi	s0,sp,128
    541a:	0c05                	addi	s8,s8,1
    541c:	0306                	slli	t1,t1,0x1
    541e:	0900                	addi	s0,sp,144
    5420:	0000                	unimp
    5422:	0501                	addi	a0,a0,0
    5424:	0605                	addi	a2,a2,1
    5426:	04090103          	lb	sp,64(s2)
    542a:	0100                	addi	s0,sp,128
    542c:	0105                	addi	sp,sp,1
    542e:	0306                	slli	t1,t1,0x1
    5430:	0901                	addi	s2,s2,0
    5432:	0000                	unimp
    5434:	0501                	addi	a0,a0,0
    5436:	0605                	addi	a2,a2,1
    5438:	097f8003          	lb	zero,151(t6)
    543c:	0008                	0x8
    543e:	0501                	addi	a0,a0,0
    5440:	0315                	addi	t1,t1,5
    5442:	000900cb          	fnmsub.s	ft1,fs2,ft0,ft0,rne
    5446:	0100                	addi	s0,sp,128
    5448:	00090103          	lb	sp,0(s2)
    544c:	0100                	addi	s0,sp,128
    544e:	2f05                	jal	5b7e <_printf_i+0x116>
    5450:	0306                	slli	t1,t1,0x1
    5452:	0900                	addi	s0,sp,144
    5454:	0000                	unimp
    5456:	0501                	addi	a0,a0,0
    5458:	097f031b          	0x97f031b
    545c:	0008                	0x8
    545e:	0501                	addi	a0,a0,0
    5460:	0901032f          	0x901032f
    5464:	0004                	0x4
    5466:	0501                	addi	a0,a0,0
    5468:	0605                	addi	a2,a2,1
    546a:	08093203          	0x8093203
    546e:	0100                	addi	s0,sp,128
    5470:	0c05                	addi	s8,s8,1
    5472:	0306                	slli	t1,t1,0x1
    5474:	0900                	addi	s0,sp,144
    5476:	0000                	unimp
    5478:	0501                	addi	a0,a0,0
    547a:	0605                	addi	a2,a2,1
    547c:	04090103          	lb	sp,64(s2)
    5480:	0100                	addi	s0,sp,128
    5482:	0105                	addi	sp,sp,1
    5484:	0306                	slli	t1,t1,0x1
    5486:	0901                	addi	s2,s2,0
    5488:	0000                	unimp
    548a:	0501                	addi	a0,a0,0
    548c:	0611                	addi	a2,a2,4
    548e:	097fb003          	0x97fb003
    5492:	0008                	0x8
    5494:	0501                	addi	a0,a0,0
    5496:	062d                	addi	a2,a2,11
    5498:	00090003          	lb	zero,0(s2)
    549c:	0100                	addi	s0,sp,128
    549e:	1105                	addi	sp,sp,-31
    54a0:	0306                	slli	t1,t1,0x1
    54a2:	0901                	addi	s2,s2,0
    54a4:	0004                	0x4
    54a6:	0501                	addi	a0,a0,0
    54a8:	060c                	addi	a1,sp,768
    54aa:	00096303          	0x96303
    54ae:	0100                	addi	s0,sp,128
    54b0:	0505                	addi	a0,a0,1
    54b2:	04090003          	lb	zero,64(s2)
    54b6:	0100                	addi	s0,sp,128
    54b8:	0905                	addi	s2,s2,1
    54ba:	0306                	slli	t1,t1,0x1
    54bc:	0902                	c.slli64	s2
    54be:	0004                	0x4
    54c0:	0301                	addi	t1,t1,0
    54c2:	0901                	addi	s2,s2,0
    54c4:	0000                	unimp
    54c6:	0501                	addi	a0,a0,0
    54c8:	060c                	addi	a1,sp,768
    54ca:	04090003          	lb	zero,64(s2)
    54ce:	0100                	addi	s0,sp,128
    54d0:	1105                	addi	sp,sp,-31
    54d2:	0306                	slli	t1,t1,0x1
    54d4:	091c                	addi	a5,sp,144
    54d6:	0004                	0x4
    54d8:	0501                	addi	a0,a0,0
    54da:	0305                	addi	t1,t1,1
    54dc:	0000094b          	fnmsub.s	fs2,ft0,ft0,ft0,rne
    54e0:	0301                	addi	t1,t1,0
    54e2:	0901                	addi	s2,s2,0
    54e4:	0000                	unimp
    54e6:	0501                	addi	a0,a0,0
    54e8:	061a                	slli	a2,a2,0x6
    54ea:	04090003          	lb	zero,64(s2)
    54ee:	0100                	addi	s0,sp,128
    54f0:	0c05                	addi	s8,s8,1
    54f2:	04090003          	lb	zero,64(s2)
    54f6:	0100                	addi	s0,sp,128
    54f8:	0505                	addi	a0,a0,1
    54fa:	0306                	slli	t1,t1,0x1
    54fc:	0901                	addi	s2,s2,0
    54fe:	0010                	0x10
    5500:	0501                	addi	a0,a0,0
    5502:	0316                	slli	t1,t1,0x5
    5504:	0938                	addi	a4,sp,152
    5506:	0000                	unimp
    5508:	0501                	addi	a0,a0,0
    550a:	0619                	addi	a2,a2,6
    550c:	00090003          	lb	zero,0(s2)
    5510:	0100                	addi	s0,sp,128
    5512:	1505                	addi	a0,a0,-31
    5514:	0306                	slli	t1,t1,0x1
    5516:	00080907          	0x80907
    551a:	0301                	addi	t1,t1,0
    551c:	0901                	addi	s2,s2,0
    551e:	0000                	unimp
    5520:	0501                	addi	a0,a0,0
    5522:	062e                	slli	a2,a2,0xb
    5524:	00090003          	lb	zero,0(s2)
    5528:	0100                	addi	s0,sp,128
    552a:	1b05                	addi	s6,s6,-31
    552c:	04097f03          	0x4097f03
    5530:	0100                	addi	s0,sp,128
    5532:	0505                	addi	a0,a0,1
    5534:	0306                	slli	t1,t1,0x1
    5536:	0004093f 060c0501 	0x60c05010004093f
    553e:	00090003          	lb	zero,0(s2)
    5542:	0100                	addi	s0,sp,128
    5544:	0505                	addi	a0,a0,1
    5546:	0306                	slli	t1,t1,0x1
    5548:	0901                	addi	s2,s2,0
    554a:	0004                	0x4
    554c:	0501                	addi	a0,a0,0
    554e:	0601                	addi	a2,a2,0
    5550:	00090103          	lb	sp,0(s2)
    5554:	0100                	addi	s0,sp,128
    5556:	0505                	addi	a0,a0,1
    5558:	0306                	slli	t1,t1,0x1
    555a:	7f80                	flw	fs0,56(a5)
    555c:	0809                	addi	a6,a6,2
    555e:	0100                	addi	s0,sp,128
    5560:	1505                	addi	a0,a0,-31
    5562:	00093503          	0x93503
    5566:	0100                	addi	s0,sp,128
    5568:	00090103          	lb	sp,0(s2)
    556c:	0100                	addi	s0,sp,128
    556e:	2e05                	jal	589e <_printf_float+0x796>
    5570:	0306                	slli	t1,t1,0x1
    5572:	0900                	addi	s0,sp,144
    5574:	0000                	unimp
    5576:	0501                	addi	a0,a0,0
    5578:	030c                	addi	a1,sp,384
    557a:	095e                	slli	s2,s2,0x17
    557c:	0004                	0x4
    557e:	0501                	addi	a0,a0,0
    5580:	0305                	addi	t1,t1,1
    5582:	0900                	addi	s0,sp,144
    5584:	0004                	0x4
    5586:	0501                	addi	a0,a0,0
    5588:	0609                	addi	a2,a2,2
    558a:	04090203          	lb	tp,64(s2)
    558e:	0100                	addi	s0,sp,128
    5590:	00090103          	lb	sp,0(s2)
    5594:	0100                	addi	s0,sp,128
    5596:	0c05                	addi	s8,s8,1
    5598:	0306                	slli	t1,t1,0x1
    559a:	0900                	addi	s0,sp,144
    559c:	0000                	unimp
    559e:	0501                	addi	a0,a0,0
    55a0:	0305                	addi	t1,t1,1
    55a2:	097d                	addi	s2,s2,31
    55a4:	000c                	0xc
    55a6:	0501                	addi	a0,a0,0
    55a8:	0615                	addi	a2,a2,5
    55aa:	0c093e03          	0xc093e03
    55ae:	0100                	addi	s0,sp,128
    55b0:	00090103          	lb	sp,0(s2)
    55b4:	0100                	addi	s0,sp,128
    55b6:	3105                	jal	51d6 <_printf_float+0xce>
    55b8:	0306                	slli	t1,t1,0x1
    55ba:	0900                	addi	s0,sp,144
    55bc:	0000                	unimp
    55be:	0501                	addi	a0,a0,0
    55c0:	030c                	addi	a1,sp,384
    55c2:	0941                	addi	s2,s2,16
    55c4:	000c                	0xc
    55c6:	0501                	addi	a0,a0,0
    55c8:	0305                	addi	t1,t1,1
    55ca:	0900                	addi	s0,sp,144
    55cc:	0004                	0x4
    55ce:	0501                	addi	a0,a0,0
    55d0:	0609                	addi	a2,a2,2
    55d2:	04090203          	lb	tp,64(s2)
    55d6:	0100                	addi	s0,sp,128
    55d8:	00090103          	lb	sp,0(s2)
    55dc:	0100                	addi	s0,sp,128
    55de:	0c05                	addi	s8,s8,1
    55e0:	0306                	slli	t1,t1,0x1
    55e2:	0900                	addi	s0,sp,144
    55e4:	0000                	unimp
    55e6:	0501                	addi	a0,a0,0
    55e8:	0611                	addi	a2,a2,4
    55ea:	0900c503          	lbu	a0,144(ra)
    55ee:	000c                	0xc
    55f0:	0501                	addi	a0,a0,0
    55f2:	0614                	addi	a3,sp,768
    55f4:	04090003          	lb	zero,64(s2)
    55f8:	0100                	addi	s0,sp,128
    55fa:	2e05                	jal	592a <_printf_common+0x72>
    55fc:	0c090303          	lb	t1,192(s2)
    5600:	0100                	addi	s0,sp,128
    5602:	1405                	addi	s0,s0,-31
    5604:	04097d03          	0x4097d03
    5608:	0100                	addi	s0,sp,128
    560a:	0505                	addi	a0,a0,1
    560c:	0306                	slli	t1,t1,0x1
    560e:	7fa4                	flw	fs1,120(a5)
    5610:	0409                	addi	s0,s0,2
    5612:	0100                	addi	s0,sp,128
    5614:	1505                	addi	a0,a0,-31
    5616:	0900ef03          	0x900ef03
    561a:	0000                	unimp
    561c:	0301                	addi	t1,t1,0
    561e:	0901                	addi	s2,s2,0
    5620:	0000                	unimp
    5622:	0501                	addi	a0,a0,0
    5624:	7f03061b          	0x7f03061b
    5628:	0009                	c.nop	2
    562a:	0100                	addi	s0,sp,128
    562c:	0505                	addi	a0,a0,1
    562e:	0306                	slli	t1,t1,0x1
    5630:	0004090f          	0x4090f
    5634:	0501                	addi	a0,a0,0
    5636:	060c                	addi	a1,sp,768
    5638:	00090003          	lb	zero,0(s2)
    563c:	0100                	addi	s0,sp,128
    563e:	0505                	addi	a0,a0,1
    5640:	0306                	slli	t1,t1,0x1
    5642:	0901                	addi	s2,s2,0
    5644:	0004                	0x4
    5646:	0501                	addi	a0,a0,0
    5648:	0601                	addi	a2,a2,0
    564a:	00090103          	lb	sp,0(s2)
    564e:	0100                	addi	s0,sp,128
    5650:	1505                	addi	a0,a0,-31
    5652:	0306                	slli	t1,t1,0x1
    5654:	095e                	slli	s2,s2,0x17
    5656:	0008                	0x8
    5658:	0301                	addi	t1,t1,0
    565a:	0901                	addi	s2,s2,0
    565c:	0000                	unimp
    565e:	0501                	addi	a0,a0,0
    5660:	060c                	addi	a1,sp,768
    5662:	097fb503          	0x97fb503
    5666:	0000                	unimp
    5668:	0501                	addi	a0,a0,0
    566a:	0305                	addi	t1,t1,1
    566c:	0900                	addi	s0,sp,144
    566e:	0004                	0x4
    5670:	0501                	addi	a0,a0,0
    5672:	0609                	addi	a2,a2,2
    5674:	04090203          	lb	tp,64(s2)
    5678:	0100                	addi	s0,sp,128
    567a:	00090103          	lb	sp,0(s2)
    567e:	0100                	addi	s0,sp,128
    5680:	0c05                	addi	s8,s8,1
    5682:	0306                	slli	t1,t1,0x1
    5684:	0900                	addi	s0,sp,144
    5686:	0004                	0x4
    5688:	0501                	addi	a0,a0,0
    568a:	0611                	addi	a2,a2,4
    568c:	0900d103          	lhu	sp,144(ra)
    5690:	0004                	0x4
    5692:	0501                	addi	a0,a0,0
    5694:	0305                	addi	t1,t1,1
    5696:	7f96                	flw	ft11,100(sp)
    5698:	0009                	c.nop	2
    569a:	0100                	addi	s0,sp,128
    569c:	00090103          	lb	sp,0(s2)
    56a0:	0100                	addi	s0,sp,128
    56a2:	1a05                	addi	s4,s4,-31
    56a4:	0306                	slli	t1,t1,0x1
    56a6:	0900                	addi	s0,sp,144
    56a8:	0004                	0x4
    56aa:	0501                	addi	a0,a0,0
    56ac:	030c                	addi	a1,sp,384
    56ae:	0900                	addi	s0,sp,144
    56b0:	0004                	0x4
    56b2:	0501                	addi	a0,a0,0
    56b4:	0334                	addi	a3,sp,392
    56b6:	00ec                	addi	a1,sp,76
    56b8:	0c09                	addi	s8,s8,2
    56ba:	0100                	addi	s0,sp,128
    56bc:	0c05                	addi	s8,s8,1
    56be:	097f9403          	lh	s0,151(t6)
    56c2:	0004                	0x4
    56c4:	0501                	addi	a0,a0,0
    56c6:	0605                	addi	a2,a2,1
    56c8:	04090103          	lb	sp,64(s2)
    56cc:	0100                	addi	s0,sp,128
    56ce:	1505                	addi	a0,a0,-31
    56d0:	0900ea03          	0x900ea03
    56d4:	0000                	unimp
    56d6:	0301                	addi	t1,t1,0
    56d8:	0901                	addi	s2,s2,0
    56da:	0000                	unimp
    56dc:	0501                	addi	a0,a0,0
    56de:	060c                	addi	a1,sp,768
    56e0:	097fa903          	lw	s2,151(t6)
    56e4:	0000                	unimp
    56e6:	0501                	addi	a0,a0,0
    56e8:	0305                	addi	t1,t1,1
    56ea:	0900                	addi	s0,sp,144
    56ec:	0004                	0x4
    56ee:	0501                	addi	a0,a0,0
    56f0:	0609                	addi	a2,a2,2
    56f2:	04090203          	lb	tp,64(s2)
    56f6:	0100                	addi	s0,sp,128
    56f8:	00090103          	lb	sp,0(s2)
    56fc:	0100                	addi	s0,sp,128
    56fe:	0c05                	addi	s8,s8,1
    5700:	0306                	slli	t1,t1,0x1
    5702:	0900                	addi	s0,sp,144
    5704:	0004                	0x4
    5706:	0301                	addi	t1,t1,0
    5708:	0968                	addi	a0,sp,156
    570a:	0004                	0x4
    570c:	0301                	addi	t1,t1,0
    570e:	0918                	addi	a4,sp,144
    5710:	0004                	0x4
    5712:	0501                	addi	a0,a0,0
    5714:	0611                	addi	a2,a2,4
    5716:	0900dd03          	lhu	s10,144(ra)
    571a:	0004                	0x4
    571c:	0501                	addi	a0,a0,0
    571e:	0305                	addi	t1,t1,1
    5720:	7f8a                	flw	ft11,160(sp)
    5722:	0009                	c.nop	2
    5724:	0100                	addi	s0,sp,128
    5726:	00090103          	lb	sp,0(s2)
    572a:	0100                	addi	s0,sp,128
    572c:	0905                	addi	s2,s2,1
    572e:	00091703          	lh	a4,0(s2)
    5732:	0100                	addi	s0,sp,128
    5734:	1a05                	addi	s4,s4,-31
    5736:	0306                	slli	t1,t1,0x1
    5738:	0969                	addi	s2,s2,26
    573a:	0000                	unimp
    573c:	0501                	addi	a0,a0,0
    573e:	030c                	addi	a1,sp,384
    5740:	0900                	addi	s0,sp,144
    5742:	0004                	0x4
    5744:	0501                	addi	a0,a0,0
    5746:	0605                	addi	a2,a2,1
    5748:	08090103          	lb	sp,128(s2)
    574c:	0100                	addi	s0,sp,128
    574e:	1505                	addi	a0,a0,-31
    5750:	0900f603          	0x900f603
    5754:	0000                	unimp
    5756:	0301                	addi	t1,t1,0
    5758:	0901                	addi	s2,s2,0
    575a:	0000                	unimp
    575c:	0501                	addi	a0,a0,0
    575e:	00030633          	add	a2,t1,zero
    5762:	0009                	c.nop	2
    5764:	0100                	addi	s0,sp,128
    5766:	1b05                	addi	s6,s6,-31
    5768:	08097f03          	0x8097f03
    576c:	0100                	addi	s0,sp,128
    576e:	3305                	jal	548e <_printf_float+0x386>
    5770:	04090103          	lb	sp,64(s2)
    5774:	0100                	addi	s0,sp,128
    5776:	0c05                	addi	s8,s8,1
    5778:	097f9d03          	lh	s10,151(t6)
    577c:	000c                	0xc
    577e:	0501                	addi	a0,a0,0
    5780:	0609                	addi	a2,a2,2
    5782:	04090303          	lb	t1,64(s2)
    5786:	0100                	addi	s0,sp,128
    5788:	0505                	addi	a0,a0,1
    578a:	0306                	slli	t1,t1,0x1
    578c:	097d                	addi	s2,s2,31
    578e:	0008                	0x8
    5790:	0501                	addi	a0,a0,0
    5792:	030c                	addi	a1,sp,384
    5794:	00040903          	lb	s2,0(s0)
    5798:	0301                	addi	t1,t1,0
    579a:	097d                	addi	s2,s2,31
    579c:	000c                	0xc
    579e:	0501                	addi	a0,a0,0
    57a0:	0609                	addi	a2,a2,2
    57a2:	04090303          	lb	t1,64(s2)
    57a6:	0100                	addi	s0,sp,128
    57a8:	0505                	addi	a0,a0,1
    57aa:	0306                	slli	t1,t1,0x1
    57ac:	097d                	addi	s2,s2,31
    57ae:	0008                	0x8
    57b0:	0501                	addi	a0,a0,0
    57b2:	030c                	addi	a1,sp,384
    57b4:	00040903          	lb	s2,0(s0)
    57b8:	0501                	addi	a0,a0,0
    57ba:	0611                	addi	a2,a2,4
    57bc:	0c091903          	lh	s2,192(s2)
    57c0:	0100                	addi	s0,sp,128
    57c2:	2d05                	jal	5df2 <_printf_i+0x38a>
    57c4:	0306                	slli	t1,t1,0x1
    57c6:	0900                	addi	s0,sp,144
    57c8:	0000                	unimp
    57ca:	0501                	addi	a0,a0,0
    57cc:	0611                	addi	a2,a2,4
    57ce:	04090103          	lb	sp,64(s2)
    57d2:	0100                	addi	s0,sp,128
    57d4:	0c05                	addi	s8,s8,1
    57d6:	0306                	slli	t1,t1,0x1
    57d8:	00000963          	beqz	zero,57ea <_printf_float+0x6e2>
    57dc:	0501                	addi	a0,a0,0
    57de:	0305                	addi	t1,t1,1
    57e0:	0900                	addi	s0,sp,144
    57e2:	0004                	0x4
    57e4:	0501                	addi	a0,a0,0
    57e6:	0609                	addi	a2,a2,2
    57e8:	04090203          	lb	tp,64(s2)
    57ec:	0100                	addi	s0,sp,128
    57ee:	00090103          	lb	sp,0(s2)
    57f2:	0100                	addi	s0,sp,128
    57f4:	0c05                	addi	s8,s8,1
    57f6:	0306                	slli	t1,t1,0x1
    57f8:	0900                	addi	s0,sp,144
    57fa:	0004                	0x4
    57fc:	0501                	addi	a0,a0,0
    57fe:	0615                	addi	a2,a2,5
    5800:	0c092303          	lw	t1,192(s2)
    5804:	0100                	addi	s0,sp,128
    5806:	00090103          	lb	sp,0(s2)
    580a:	0100                	addi	s0,sp,128
    580c:	2e05                	jal	5b3c <_printf_i+0xd4>
    580e:	0306                	slli	t1,t1,0x1
    5810:	0900                	addi	s0,sp,144
    5812:	0000                	unimp
    5814:	0501                	addi	a0,a0,0
    5816:	030c                	addi	a1,sp,384
    5818:	0959                	addi	s2,s2,22
    581a:	0004                	0x4
    581c:	0501                	addi	a0,a0,0
    581e:	0305                	addi	t1,t1,1
    5820:	0900                	addi	s0,sp,144
    5822:	0004                	0x4
    5824:	0501                	addi	a0,a0,0
    5826:	0609                	addi	a2,a2,2
    5828:	04090203          	lb	tp,64(s2)
    582c:	0100                	addi	s0,sp,128
    582e:	00090103          	lb	sp,0(s2)
    5832:	0100                	addi	s0,sp,128
    5834:	0c05                	addi	s8,s8,1
    5836:	0306                	slli	t1,t1,0x1
    5838:	0900                	addi	s0,sp,144
    583a:	0000                	unimp
    583c:	0501                	addi	a0,a0,0
    583e:	0305                	addi	t1,t1,1
    5840:	097d                	addi	s2,s2,31
    5842:	000c                	0xc
    5844:	0501                	addi	a0,a0,0
    5846:	0932031b          	0x932031b
    584a:	0004                	0x4
    584c:	0501                	addi	a0,a0,0
    584e:	030c                	addi	a1,sp,384
    5850:	0951                	addi	s2,s2,20
    5852:	0008                	0x8
    5854:	0501                	addi	a0,a0,0
    5856:	060d                	addi	a2,a2,3
    5858:	04090203          	lb	tp,64(s2)
    585c:	0100                	addi	s0,sp,128
    585e:	00090103          	lb	sp,0(s2)
    5862:	0100                	addi	s0,sp,128
    5864:	0505                	addi	a0,a0,1
    5866:	0306                	slli	t1,t1,0x1
    5868:	097a                	slli	s2,s2,0x1e
    586a:	0004                	0x4
    586c:	0501                	addi	a0,a0,0
    586e:	00ca031b          	0xca031b
    5872:	0c09                	addi	s8,s8,2
    5874:	0100                	addi	s0,sp,128
    5876:	0505                	addi	a0,a0,1
    5878:	097fb603          	0x97fb603
    587c:	0008                	0x8
    587e:	0501                	addi	a0,a0,0
    5880:	093e031b          	0x93e031b
    5884:	0004                	0x4
    5886:	0501                	addi	a0,a0,0
    5888:	0305                	addi	t1,t1,1
    588a:	0942                	slli	s2,s2,0x10
    588c:	0008                	0x8
    588e:	0501                	addi	a0,a0,0
    5890:	0315                	addi	t1,t1,5
    5892:	097f                	0x97f
    5894:	0004                	0x4
    5896:	0501                	addi	a0,a0,0
    5898:	0912031b          	0x912031b
    589c:	0008                	0x8
    589e:	0501                	addi	a0,a0,0
    58a0:	030c                	addi	a1,sp,384
    58a2:	0972                	slli	s2,s2,0x1c
    58a4:	0008                	0x8
    58a6:	0501                	addi	a0,a0,0
    58a8:	0305                	addi	t1,t1,1
    58aa:	097d                	addi	s2,s2,31
    58ac:	000c                	0xc
    58ae:	0501                	addi	a0,a0,0
    58b0:	0932031b          	0x932031b
    58b4:	0004                	0x4
    58b6:	0501                	addi	a0,a0,0
    58b8:	030c                	addi	a1,sp,384
    58ba:	0951                	addi	s2,s2,20
    58bc:	0008                	0x8
    58be:	0901                	addi	s2,s2,0
    58c0:	000c                	0xc
    58c2:	0100                	addi	s0,sp,128
    58c4:	0501                	addi	a0,a0,0
    58c6:	0001                	nop
    58c8:	0205                	addi	tp,tp,1
    58ca:	254c                	fld	fa1,136(a0)
    58cc:	0000                	unimp
    58ce:	05013303          	0x5013303
    58d2:	0305                	addi	t1,t1,1
    58d4:	0901                	addi	s2,s2,0
    58d6:	0000                	unimp
    58d8:	0301                	addi	t1,t1,0
    58da:	0901                	addi	s2,s2,0
    58dc:	0000                	unimp
    58de:	0301                	addi	t1,t1,0
    58e0:	0901                	addi	s2,s2,0
    58e2:	0000                	unimp
    58e4:	0501                	addi	a0,a0,0
    58e6:	0601                	addi	a2,a2,0
    58e8:	00097d03          	0x97d03
    58ec:	0100                	addi	s0,sp,128
    58ee:	28090003          	lb	zero,640(s2)
    58f2:	0100                	addi	s0,sp,128
    58f4:	0c05                	addi	s8,s8,1
    58f6:	04090e03          	lb	t3,64(s2)
    58fa:	0100                	addi	s0,sp,128
    58fc:	0c097503          	0xc097503
    5900:	0100                	addi	s0,sp,128
    5902:	0505                	addi	a0,a0,1
    5904:	0306                	slli	t1,t1,0x1
    5906:	0901                	addi	s2,s2,0
    5908:	0004                	0x4
    590a:	0301                	addi	t1,t1,0
    590c:	0905                	addi	s2,s2,1
    590e:	0000                	unimp
    5910:	0501                	addi	a0,a0,0
    5912:	0601                	addi	a2,a2,0
    5914:	3c097703          	0x3c097703
    5918:	0100                	addi	s0,sp,128
    591a:	0b05                	addi	s6,s6,1
    591c:	14090e03          	lb	t3,320(s2)
    5920:	0100                	addi	s0,sp,128
    5922:	0905                	addi	s2,s2,1
    5924:	0306                	slli	t1,t1,0x1
    5926:	0902                	c.slli64	s2
    5928:	0008                	0x8
    592a:	0501                	addi	a0,a0,0
    592c:	0622                	slli	a2,a2,0x8
    592e:	00090003          	lb	zero,0(s2)
    5932:	0100                	addi	s0,sp,128
    5934:	0905                	addi	s2,s2,1
    5936:	0306                	slli	t1,t1,0x1
    5938:	0901                	addi	s2,s2,0
    593a:	0010                	0x10
    593c:	0501                	addi	a0,a0,0
    593e:	061d                	addi	a2,a2,7
    5940:	00090003          	lb	zero,0(s2)
    5944:	0100                	addi	s0,sp,128
    5946:	0b05                	addi	s6,s6,1
    5948:	0c097d03          	0xc097d03
    594c:	0100                	addi	s0,sp,128
    594e:	1d05                	addi	s10,s10,-31
    5950:	04090303          	lb	t1,64(s2)
    5954:	0100                	addi	s0,sp,128
    5956:	0b05                	addi	s6,s6,1
    5958:	04097d03          	0x4097d03
    595c:	0100                	addi	s0,sp,128
    595e:	1d05                	addi	s10,s10,-31
    5960:	04090303          	lb	t1,64(s2)
    5964:	0100                	addi	s0,sp,128
    5966:	0b05                	addi	s6,s6,1
    5968:	08097d03          	0x8097d03
    596c:	0100                	addi	s0,sp,128
    596e:	0705                	addi	a4,a4,1
    5970:	04090b03          	lb	s6,64(s2)
    5974:	0100                	addi	s0,sp,128
    5976:	1a05                	addi	s4,s4,-31
    5978:	04090103          	lb	sp,64(s2)
    597c:	0100                	addi	s0,sp,128
    597e:	0505                	addi	a0,a0,1
    5980:	0306                	slli	t1,t1,0x1
    5982:	097f                	0x97f
    5984:	0008                	0x8
    5986:	0301                	addi	t1,t1,0
    5988:	0901                	addi	s2,s2,0
    598a:	0000                	unimp
    598c:	0501                	addi	a0,a0,0
    598e:	0003060b          	0x3060b
    5992:	0009                	c.nop	2
    5994:	0100                	addi	s0,sp,128
    5996:	0c05                	addi	s8,s8,1
    5998:	04090203          	lb	tp,64(s2)
    599c:	0100                	addi	s0,sp,128
    599e:	0905                	addi	s2,s2,1
    59a0:	0306                	slli	t1,t1,0x1
    59a2:	0900                	addi	s0,sp,144
    59a4:	0004                	0x4
    59a6:	0501                	addi	a0,a0,0
    59a8:	030d                	addi	t1,t1,3
    59aa:	0901                	addi	s2,s2,0
    59ac:	0000                	unimp
    59ae:	0501                	addi	a0,a0,0
    59b0:	0601                	addi	a2,a2,0
    59b2:	00096303          	0x96303
    59b6:	0100                	addi	s0,sp,128
    59b8:	1005                	c.nop	-31
    59ba:	04091d03          	lh	s10,64(s2)
    59be:	0100                	addi	s0,sp,128
    59c0:	0c05                	addi	s8,s8,1
    59c2:	04097f03          	0x4097f03
    59c6:	0100                	addi	s0,sp,128
    59c8:	1005                	c.nop	-31
    59ca:	04090103          	lb	sp,64(s2)
    59ce:	0100                	addi	s0,sp,128
    59d0:	0905                	addi	s2,s2,1
    59d2:	0306                	slli	t1,t1,0x1
    59d4:	0901                	addi	s2,s2,0
    59d6:	0004                	0x4
    59d8:	0501                	addi	a0,a0,0
    59da:	0003060b          	0x3060b
    59de:	0009                	c.nop	2
    59e0:	0100                	addi	s0,sp,128
    59e2:	0c097c03          	0xc097c03
    59e6:	0100                	addi	s0,sp,128
    59e8:	0905                	addi	s2,s2,1
    59ea:	0306                	slli	t1,t1,0x1
    59ec:	0902                	c.slli64	s2
    59ee:	0008                	0x8
    59f0:	0501                	addi	a0,a0,0
    59f2:	030d                	addi	t1,t1,3
    59f4:	0901                	addi	s2,s2,0
    59f6:	0000                	unimp
    59f8:	0501                	addi	a0,a0,0
    59fa:	0610                	addi	a2,sp,768
    59fc:	00090003          	lb	zero,0(s2)
    5a00:	0100                	addi	s0,sp,128
    5a02:	0c05                	addi	s8,s8,1
    5a04:	04097f03          	0x4097f03
    5a08:	0100                	addi	s0,sp,128
    5a0a:	0905                	addi	s2,s2,1
    5a0c:	0306                	slli	t1,t1,0x1
    5a0e:	0902                	c.slli64	s2
    5a10:	0004                	0x4
    5a12:	0501                	addi	a0,a0,0
    5a14:	0003060b          	0x3060b
    5a18:	0009                	c.nop	2
    5a1a:	0100                	addi	s0,sp,128
    5a1c:	08097c03          	0x8097c03
    5a20:	0100                	addi	s0,sp,128
    5a22:	0505                	addi	a0,a0,1
    5a24:	0306                	slli	t1,t1,0x1
    5a26:	0906                	slli	s2,s2,0x1
    5a28:	0004                	0x4
    5a2a:	0501                	addi	a0,a0,0
    5a2c:	0203060b          	0x203060b
    5a30:	0009                	c.nop	2
    5a32:	0100                	addi	s0,sp,128
    5a34:	0705                	addi	a4,a4,1
    5a36:	04097e03          	0x4097e03
    5a3a:	0100                	addi	s0,sp,128
    5a3c:	0505                	addi	a0,a0,1
    5a3e:	0306                	slli	t1,t1,0x1
    5a40:	0902                	c.slli64	s2
    5a42:	0004                	0x4
    5a44:	0501                	addi	a0,a0,0
    5a46:	0003060b          	0x3060b
    5a4a:	0409                	addi	s0,s0,2
    5a4c:	0100                	addi	s0,sp,128
    5a4e:	0905                	addi	s2,s2,1
    5a50:	0306                	slli	t1,t1,0x1
    5a52:	0902                	c.slli64	s2
    5a54:	0004                	0x4
    5a56:	0501                	addi	a0,a0,0
    5a58:	0622                	slli	a2,a2,0x8
    5a5a:	00090003          	lb	zero,0(s2)
    5a5e:	0100                	addi	s0,sp,128
    5a60:	0905                	addi	s2,s2,1
    5a62:	0306                	slli	t1,t1,0x1
    5a64:	0901                	addi	s2,s2,0
    5a66:	0010                	0x10
    5a68:	0501                	addi	a0,a0,0
    5a6a:	061d                	addi	a2,a2,7
    5a6c:	00090003          	lb	zero,0(s2)
    5a70:	0100                	addi	s0,sp,128
    5a72:	0b05                	addi	s6,s6,1
    5a74:	0c097d03          	0xc097d03
    5a78:	0100                	addi	s0,sp,128
    5a7a:	1d05                	addi	s10,s10,-31
    5a7c:	04090303          	lb	t1,64(s2)
    5a80:	0100                	addi	s0,sp,128
    5a82:	0b05                	addi	s6,s6,1
    5a84:	04097d03          	0x4097d03
    5a88:	0100                	addi	s0,sp,128
    5a8a:	1d05                	addi	s10,s10,-31
    5a8c:	04090303          	lb	t1,64(s2)
    5a90:	0100                	addi	s0,sp,128
    5a92:	0b05                	addi	s6,s6,1
    5a94:	08097d03          	0x8097d03
    5a98:	0100                	addi	s0,sp,128
    5a9a:	0505                	addi	a0,a0,1
    5a9c:	0306                	slli	t1,t1,0x1
    5a9e:	0004090b          	0x4090b
    5aa2:	0501                	addi	a0,a0,0
    5aa4:	00030607          	0x30607
    5aa8:	0009                	c.nop	2
    5aaa:	0100                	addi	s0,sp,128
    5aac:	0505                	addi	a0,a0,1
    5aae:	0306                	slli	t1,t1,0x1
    5ab0:	0901                	addi	s2,s2,0
    5ab2:	0004                	0x4
    5ab4:	0501                	addi	a0,a0,0
    5ab6:	0003060b          	0x3060b
    5aba:	0009                	c.nop	2
    5abc:	0100                	addi	s0,sp,128
    5abe:	0c05                	addi	s8,s8,1
    5ac0:	04090203          	lb	tp,64(s2)
    5ac4:	0100                	addi	s0,sp,128
    5ac6:	0905                	addi	s2,s2,1
    5ac8:	0306                	slli	t1,t1,0x1
    5aca:	0900                	addi	s0,sp,144
    5acc:	0004                	0x4
    5ace:	0501                	addi	a0,a0,0
    5ad0:	030d                	addi	t1,t1,3
    5ad2:	0901                	addi	s2,s2,0
    5ad4:	0000                	unimp
    5ad6:	0601                	addi	a2,a2,0
    5ad8:	00097f03          	0x97f03
    5adc:	0100                	addi	s0,sp,128
    5ade:	1005                	c.nop	-31
    5ae0:	04090103          	lb	sp,64(s2)
    5ae4:	0100                	addi	s0,sp,128
    5ae6:	0c05                	addi	s8,s8,1
    5ae8:	04097f03          	0x4097f03
    5aec:	0100                	addi	s0,sp,128
    5aee:	1005                	c.nop	-31
    5af0:	04090103          	lb	sp,64(s2)
    5af4:	0100                	addi	s0,sp,128
    5af6:	0905                	addi	s2,s2,1
    5af8:	0306                	slli	t1,t1,0x1
    5afa:	0901                	addi	s2,s2,0
    5afc:	0004                	0x4
    5afe:	0501                	addi	a0,a0,0
    5b00:	0003060b          	0x3060b
    5b04:	0009                	c.nop	2
    5b06:	0100                	addi	s0,sp,128
    5b08:	0c097c03          	0xc097c03
    5b0c:	0100                	addi	s0,sp,128
    5b0e:	0905                	addi	s2,s2,1
    5b10:	0200                	addi	s0,sp,256
    5b12:	0304                	addi	s1,sp,384
    5b14:	0306                	slli	t1,t1,0x1
    5b16:	0909                	addi	s2,s2,2
    5b18:	000c                	0xc
    5b1a:	0501                	addi	a0,a0,0
    5b1c:	0402000f          	0x402000f
    5b20:	00030603          	lb	a2,0(t1)
    5b24:	0009                	c.nop	2
    5b26:	0100                	addi	s0,sp,128
    5b28:	0905                	addi	s2,s2,1
    5b2a:	0200                	addi	s0,sp,256
    5b2c:	0304                	addi	s1,sp,384
    5b2e:	0306                	slli	t1,t1,0x1
    5b30:	0901                	addi	s2,s2,0
    5b32:	0014                	0x14
    5b34:	0501                	addi	a0,a0,0
    5b36:	0402000f          	0x402000f
    5b3a:	00030603          	lb	a2,0(t1)
    5b3e:	0009                	c.nop	2
    5b40:	0100                	addi	s0,sp,128
    5b42:	0505                	addi	a0,a0,1
    5b44:	0200                	addi	s0,sp,256
    5b46:	0304                	addi	s1,sp,384
    5b48:	18097d03          	0x18097d03
    5b4c:	0100                	addi	s0,sp,128
    5b4e:	0105                	addi	sp,sp,1
    5b50:	04090603          	lb	a2,64(s2)
    5b54:	0100                	addi	s0,sp,128
    5b56:	0905                	addi	s2,s2,1
    5b58:	0306                	slli	t1,t1,0x1
    5b5a:	002c0977          	0x2c0977
    5b5e:	0501                	addi	a0,a0,0
    5b60:	0003060b          	0x3060b
    5b64:	0009                	c.nop	2
    5b66:	0100                	addi	s0,sp,128
    5b68:	08097c03          	0x8097c03
    5b6c:	0100                	addi	s0,sp,128
    5b6e:	0505                	addi	a0,a0,1
    5b70:	0306                	slli	t1,t1,0x1
    5b72:	0008096b          	0x8096b
    5b76:	0301                	addi	t1,t1,0
    5b78:	0901                	addi	s2,s2,0
    5b7a:	0000                	unimp
    5b7c:	0501                	addi	a0,a0,0
    5b7e:	061a                	slli	a2,a2,0x6
    5b80:	00090003          	lb	zero,0(s2)
    5b84:	0100                	addi	s0,sp,128
    5b86:	0b05                	addi	s6,s6,1
    5b88:	04090003          	lb	zero,64(s2)
    5b8c:	0100                	addi	s0,sp,128
    5b8e:	0505                	addi	a0,a0,1
    5b90:	0306                	slli	t1,t1,0x1
    5b92:	0906                	slli	s2,s2,0x1
    5b94:	0008                	0x8
    5b96:	0301                	addi	t1,t1,0
    5b98:	0902                	c.slli64	s2
    5b9a:	0000                	unimp
    5b9c:	0501                	addi	a0,a0,0
    5b9e:	0003060b          	0x3060b
    5ba2:	0009                	c.nop	2
    5ba4:	0100                	addi	s0,sp,128
    5ba6:	0809                	addi	a6,a6,2
    5ba8:	0000                	unimp
    5baa:	0101                	addi	sp,sp,0
    5bac:	210e                	fld	ft2,192(sp)
    5bae:	0000                	unimp
    5bb0:	01ab0003          	lb	zero,26(s6)
    5bb4:	0000                	unimp
    5bb6:	0101                	addi	sp,sp,0
    5bb8:	000d0efb          	0xd0efb
    5bbc:	0101                	addi	sp,sp,0
    5bbe:	0101                	addi	sp,sp,0
    5bc0:	0000                	unimp
    5bc2:	0100                	addi	s0,sp,128
    5bc4:	0000                	unimp
    5bc6:	2e01                	jal	5ed6 <iprintf+0x82>
    5bc8:	6372732f          	0x6372732f
    5bcc:	726f632f          	0x726f632f
    5bd0:	6d65                	lui	s10,0x19
    5bd2:	7261                	lui	tp,0xffff8
    5bd4:	3a65006b          	0x3a65006b
    5bd8:	705c                	flw	fa5,36(s0)
    5bda:	6f72                	flw	ft10,28(sp)
    5bdc:	6d617267          	0x6d617267
    5be0:	6966                	flw	fs2,88(sp)
    5be2:	656c                	flw	fa1,76(a0)
    5be4:	36387873          	csrrci	a6,0x363,16
    5be8:	6e5c                	flw	fa5,28(a2)
    5bea:	616d726f          	jal	tp,dd200 <_data_lma+0xd2088>
    5bee:	2d6c                	fld	fa1,216(a0)
    5bf0:	6972                	flw	fs2,28(sp)
    5bf2:	2d766373          	csrrsi	t1,0x2d7,12
    5bf6:	6f6e                	flw	ft10,216(sp)
    5bf8:	656e                	flw	fa0,216(sp)
    5bfa:	672d                	lui	a4,0xb
    5bfc:	382d6363          	bltu	s10,sp,5f82 <_puts_r+0x52>
    5c00:	322e                	fld	ft4,232(sp)
    5c02:	302e                	fld	ft0,232(sp)
    5c04:	322d                	jal	552e <_printf_float+0x426>
    5c06:	322e                	fld	ft4,232(sp)
    5c08:	322d                	jal	5532 <_printf_float+0x42a>
    5c0a:	3130                	fld	fa2,96(a0)
    5c0c:	3039                	jal	541a <_printf_float+0x312>
    5c0e:	3235                	jal	553a <_printf_float+0x432>
    5c10:	2d31                	jal	622c <__swsetup_r+0xc>
    5c12:	3030                	fld	fa2,96(s0)
    5c14:	3430                	fld	fa2,104(s0)
    5c16:	772d                	lui	a4,0xfffeb
    5c18:	6e69                	lui	t3,0x1a
    5c1a:	3436                	fld	fs0,360(sp)
    5c1c:	725c                	flw	fa5,36(a2)
    5c1e:	7369                	lui	t1,0xffffa
    5c20:	6e2d7663          	bgeu	s10,sp,630c <__swsetup_r+0xec>
    5c24:	2d656e6f          	jal	t3,5befa <_data_lma+0x50d82>
    5c28:	6d65                	lui	s10,0x19
    5c2a:	6562                	flw	fa0,24(sp)
    5c2c:	5c64                	lw	s1,124(s0)
    5c2e:	6e69                	lui	t3,0x1a
    5c30:	64756c63          	bltu	a0,t2,6288 <__swsetup_r+0x68>
    5c34:	5c65                	li	s8,-7
    5c36:	00737973          	csrrci	s2,0x7,6
    5c3a:	3a65                	jal	55f2 <_printf_float+0x4ea>
    5c3c:	705c                	flw	fa5,36(s0)
    5c3e:	6f72                	flw	ft10,28(sp)
    5c40:	6d617267          	0x6d617267
    5c44:	6966                	flw	fs2,88(sp)
    5c46:	656c                	flw	fa1,76(a0)
    5c48:	36387873          	csrrci	a6,0x363,16
    5c4c:	6e5c                	flw	fa5,28(a2)
    5c4e:	616d726f          	jal	tp,dd264 <_data_lma+0xd20ec>
    5c52:	2d6c                	fld	fa1,216(a0)
    5c54:	6972                	flw	fs2,28(sp)
    5c56:	2d766373          	csrrsi	t1,0x2d7,12
    5c5a:	6f6e                	flw	ft10,216(sp)
    5c5c:	656e                	flw	fa0,216(sp)
    5c5e:	672d                	lui	a4,0xb
    5c60:	382d6363          	bltu	s10,sp,5fe6 <_puts_r+0xb6>
    5c64:	322e                	fld	ft4,232(sp)
    5c66:	302e                	fld	ft0,232(sp)
    5c68:	322d                	jal	5592 <_printf_float+0x48a>
    5c6a:	322e                	fld	ft4,232(sp)
    5c6c:	322d                	jal	5596 <_printf_float+0x48e>
    5c6e:	3130                	fld	fa2,96(a0)
    5c70:	3039                	jal	547e <_printf_float+0x376>
    5c72:	3235                	jal	559e <_printf_float+0x496>
    5c74:	2d31                	jal	6290 <__swsetup_r+0x70>
    5c76:	3030                	fld	fa2,96(s0)
    5c78:	3430                	fld	fa2,104(s0)
    5c7a:	772d                	lui	a4,0xfffeb
    5c7c:	6e69                	lui	t3,0x1a
    5c7e:	3436                	fld	fs0,360(sp)
    5c80:	6c5c                	flw	fa5,28(s0)
    5c82:	6269                	lui	tp,0x1a
    5c84:	675c                	flw	fa5,12(a4)
    5c86:	725c6363          	bltu	s8,t0,63ac <quorem>
    5c8a:	7369                	lui	t1,0xffffa
    5c8c:	6e2d7663          	bgeu	s10,sp,6378 <__swsetup_r+0x158>
    5c90:	2d656e6f          	jal	t3,5bf66 <_data_lma+0x50dee>
    5c94:	6d65                	lui	s10,0x19
    5c96:	6562                	flw	fa0,24(sp)
    5c98:	5c64                	lw	s1,124(s0)
    5c9a:	2e38                	fld	fa4,88(a2)
    5c9c:	2e32                	fld	ft8,264(sp)
    5c9e:	5c30                	lw	a2,120(s0)
    5ca0:	6e69                	lui	t3,0x1a
    5ca2:	64756c63          	bltu	a0,t2,62fa <__swsetup_r+0xda>
    5ca6:	0065                	c.nop	25
    5ca8:	3a65                	jal	5660 <_printf_float+0x558>
    5caa:	705c                	flw	fa5,36(s0)
    5cac:	6f72                	flw	ft10,28(sp)
    5cae:	6d617267          	0x6d617267
    5cb2:	6966                	flw	fs2,88(sp)
    5cb4:	656c                	flw	fa1,76(a0)
    5cb6:	36387873          	csrrci	a6,0x363,16
    5cba:	6e5c                	flw	fa5,28(a2)
    5cbc:	616d726f          	jal	tp,dd2d2 <_data_lma+0xd215a>
    5cc0:	2d6c                	fld	fa1,216(a0)
    5cc2:	6972                	flw	fs2,28(sp)
    5cc4:	2d766373          	csrrsi	t1,0x2d7,12
    5cc8:	6f6e                	flw	ft10,216(sp)
    5cca:	656e                	flw	fa0,216(sp)
    5ccc:	672d                	lui	a4,0xb
    5cce:	382d6363          	bltu	s10,sp,6054 <_puts_r+0x124>
    5cd2:	322e                	fld	ft4,232(sp)
    5cd4:	302e                	fld	ft0,232(sp)
    5cd6:	322d                	jal	5600 <_printf_float+0x4f8>
    5cd8:	322e                	fld	ft4,232(sp)
    5cda:	322d                	jal	5604 <_printf_float+0x4fc>
    5cdc:	3130                	fld	fa2,96(a0)
    5cde:	3039                	jal	54ec <_printf_float+0x3e4>
    5ce0:	3235                	jal	560c <_printf_float+0x504>
    5ce2:	2d31                	jal	62fe <__swsetup_r+0xde>
    5ce4:	3030                	fld	fa2,96(s0)
    5ce6:	3430                	fld	fa2,104(s0)
    5ce8:	772d                	lui	a4,0xfffeb
    5cea:	6e69                	lui	t3,0x1a
    5cec:	3436                	fld	fs0,360(sp)
    5cee:	725c                	flw	fa5,36(a2)
    5cf0:	7369                	lui	t1,0xffffa
    5cf2:	6e2d7663          	bgeu	s10,sp,63de <quorem+0x32>
    5cf6:	2d656e6f          	jal	t3,5bfcc <_data_lma+0x50e54>
    5cfa:	6d65                	lui	s10,0x19
    5cfc:	6562                	flw	fa0,24(sp)
    5cfe:	5c64                	lw	s1,124(s0)
    5d00:	6e69                	lui	t3,0x1a
    5d02:	64756c63          	bltu	a0,t2,635a <__swsetup_r+0x13a>
    5d06:	0065                	c.nop	25
    5d08:	6300                	flw	fs0,0(a4)
    5d0a:	5f65726f          	jal	tp,5d300 <_data_lma+0x52188>
    5d0e:	7475                	lui	s0,0xffffd
    5d10:	6c69                	lui	s8,0x1a
    5d12:	632e                	flw	ft6,200(sp)
    5d14:	0100                	addi	s0,sp,128
    5d16:	0000                	unimp
    5d18:	6f6c                	flw	fa1,92(a4)
    5d1a:	682e6b63          	bltu	t3,sp,63b0 <quorem+0x4>
    5d1e:	0200                	addi	s0,sp,256
    5d20:	0000                	unimp
    5d22:	745f 7079 7365      	0x73657079745f
    5d28:	682e                	flw	fa6,200(sp)
    5d2a:	0200                	addi	s0,sp,256
    5d2c:	0000                	unimp
    5d2e:	64647473          	csrrci	s0,0x646,8
    5d32:	6665                	lui	a2,0x19
    5d34:	682e                	flw	fa6,200(sp)
    5d36:	0300                	addi	s0,sp,384
    5d38:	0000                	unimp
    5d3a:	6572                	flw	fa0,28(sp)
    5d3c:	6e65                	lui	t3,0x19
    5d3e:	2e74                	fld	fa3,216(a2)
    5d40:	0068                	addi	a0,sp,12
    5d42:	0002                	c.slli64	zero
    5d44:	7400                	flw	fs0,40(s0)
    5d46:	6d69                	lui	s10,0x1a
    5d48:	2e65                	jal	6100 <__swbuf_r+0x28>
    5d4a:	0068                	addi	a0,sp,12
    5d4c:	0004                	0x4
    5d4e:	6300                	flw	fs0,0(a4)
    5d50:	5f65726f          	jal	tp,5d346 <_data_lma+0x521ce>
    5d54:	6f70                	flw	fa2,92(a4)
    5d56:	7472                	flw	fs0,60(sp)
    5d58:	656d                	lui	a0,0x1b
    5d5a:	682e                	flw	fa6,200(sp)
    5d5c:	0100                	addi	s0,sp,128
    5d5e:	0000                	unimp
    5d60:	0500                	addi	s0,sp,640
    5d62:	0001                	nop
    5d64:	0205                	addi	tp,tp,1
    5d66:	2758                	fld	fa4,136(a4)
    5d68:	0000                	unimp
    5d6a:	05012b03          	lw	s6,80(sp)
    5d6e:	0305                	addi	t1,t1,1
    5d70:	0901                	addi	s2,s2,0
    5d72:	0000                	unimp
    5d74:	0301                	addi	t1,t1,0
    5d76:	0901                	addi	s2,s2,0
    5d78:	0000                	unimp
    5d7a:	0501                	addi	a0,a0,0
    5d7c:	030d                	addi	t1,t1,3
    5d7e:	0020090f          	0x20090f
    5d82:	0501                	addi	a0,a0,0
    5d84:	0614                	addi	a3,sp,768
    5d86:	00090003          	lb	zero,0(s2)
    5d8a:	0100                	addi	s0,sp,128
    5d8c:	0d05                	addi	s10,s10,1
    5d8e:	0306                	slli	t1,t1,0x1
    5d90:	0901                	addi	s2,s2,0
    5d92:	0008                	0x8
    5d94:	0301                	addi	t1,t1,0
    5d96:	00040973          	0x40973
    5d9a:	0501                	addi	a0,a0,0
    5d9c:	0614                	addi	a3,sp,768
    5d9e:	00090003          	lb	zero,0(s2)
    5da2:	0100                	addi	s0,sp,128
    5da4:	0d05                	addi	s10,s10,1
    5da6:	0306                	slli	t1,t1,0x1
    5da8:	0901                	addi	s2,s2,0
    5daa:	0008                	0x8
    5dac:	0301                	addi	t1,t1,0
    5dae:	0902                	c.slli64	s2
    5db0:	0004                	0x4
    5db2:	0501                	addi	a0,a0,0
    5db4:	0614                	addi	a3,sp,768
    5db6:	00090003          	lb	zero,0(s2)
    5dba:	0100                	addi	s0,sp,128
    5dbc:	0d05                	addi	s10,s10,1
    5dbe:	0306                	slli	t1,t1,0x1
    5dc0:	0901                	addi	s2,s2,0
    5dc2:	0008                	0x8
    5dc4:	0301                	addi	t1,t1,0
    5dc6:	0902                	c.slli64	s2
    5dc8:	0004                	0x4
    5dca:	0501                	addi	a0,a0,0
    5dcc:	0614                	addi	a3,sp,768
    5dce:	00090003          	lb	zero,0(s2)
    5dd2:	0100                	addi	s0,sp,128
    5dd4:	0d05                	addi	s10,s10,1
    5dd6:	0306                	slli	t1,t1,0x1
    5dd8:	0901                	addi	s2,s2,0
    5dda:	0008                	0x8
    5ddc:	0301                	addi	t1,t1,0
    5dde:	0902                	c.slli64	s2
    5de0:	0004                	0x4
    5de2:	0501                	addi	a0,a0,0
    5de4:	0614                	addi	a3,sp,768
    5de6:	00090003          	lb	zero,0(s2)
    5dea:	0100                	addi	s0,sp,128
    5dec:	0d05                	addi	s10,s10,1
    5dee:	0306                	slli	t1,t1,0x1
    5df0:	0901                	addi	s2,s2,0
    5df2:	0008                	0x8
    5df4:	0501                	addi	a0,a0,0
    5df6:	0614                	addi	a3,sp,768
    5df8:	04090503          	lb	a0,64(s2)
    5dfc:	0100                	addi	s0,sp,128
    5dfe:	0505                	addi	a0,a0,1
    5e00:	0306                	slli	t1,t1,0x1
    5e02:	00040903          	lb	s2,0(s0) # ffffd000 <__freertos_irq_stack_top+0xfefed000>
    5e06:	0501                	addi	a0,a0,0
    5e08:	0601                	addi	a2,a2,0
    5e0a:	00090103          	lb	sp,0(s2)
    5e0e:	0100                	addi	s0,sp,128
    5e10:	0409                	addi	s0,s0,2
    5e12:	0000                	unimp
    5e14:	0101                	addi	sp,sp,0
    5e16:	0105                	addi	sp,sp,1
    5e18:	0500                	addi	s0,sp,640
    5e1a:	0002                	c.slli64	zero
    5e1c:	0000                	unimp
    5e1e:	0300                	addi	s0,sp,384
    5e20:	01a5                	addi	gp,gp,9
    5e22:	0501                	addi	a0,a0,0
    5e24:	0305                	addi	t1,t1,1
    5e26:	0901                	addi	s2,s2,0
    5e28:	0000                	unimp
    5e2a:	0301                	addi	t1,t1,0
    5e2c:	0902                	c.slli64	s2
    5e2e:	0000                	unimp
    5e30:	0501                	addi	a0,a0,0
    5e32:	0309                	addi	t1,t1,2
    5e34:	0902                	c.slli64	s2
    5e36:	0000                	unimp
    5e38:	0301                	addi	t1,t1,0
    5e3a:	0901                	addi	s2,s2,0
    5e3c:	0000                	unimp
    5e3e:	0501                	addi	a0,a0,0
    5e40:	0622                	slli	a2,a2,0x8
    5e42:	00097f03          	0x97f03
    5e46:	0100                	addi	s0,sp,128
    5e48:	0c05                	addi	s8,s8,1
    5e4a:	00090303          	lb	t1,0(s2)
    5e4e:	0100                	addi	s0,sp,128
    5e50:	0e05                	addi	t3,t3,1
    5e52:	00097e03          	0x97e03
    5e56:	0100                	addi	s0,sp,128
    5e58:	0905                	addi	s2,s2,1
    5e5a:	0306                	slli	t1,t1,0x1
    5e5c:	0902                	c.slli64	s2
    5e5e:	0000                	unimp
    5e60:	0501                	addi	a0,a0,0
    5e62:	060c                	addi	a1,sp,768
    5e64:	00090003          	lb	zero,0(s2)
    5e68:	0100                	addi	s0,sp,128
    5e6a:	0d05                	addi	s10,s10,1
    5e6c:	0306                	slli	t1,t1,0x1
    5e6e:	0902                	c.slli64	s2
    5e70:	0000                	unimp
    5e72:	0301                	addi	t1,t1,0
    5e74:	0901                	addi	s2,s2,0
    5e76:	0000                	unimp
    5e78:	0501                	addi	a0,a0,0
    5e7a:	0309                	addi	t1,t1,2
    5e7c:	0904                	addi	s1,sp,144
    5e7e:	0000                	unimp
    5e80:	0301                	addi	t1,t1,0
    5e82:	0901                	addi	s2,s2,0
    5e84:	0000                	unimp
    5e86:	0501                	addi	a0,a0,0
    5e88:	030d                	addi	t1,t1,3
    5e8a:	0901                	addi	s2,s2,0
    5e8c:	0000                	unimp
    5e8e:	0501                	addi	a0,a0,0
    5e90:	0611                	addi	a2,a2,4
    5e92:	00090003          	lb	zero,0(s2)
    5e96:	0100                	addi	s0,sp,128
    5e98:	0905                	addi	s2,s2,1
    5e9a:	0306                	slli	t1,t1,0x1
    5e9c:	0974                	addi	a3,sp,156
    5e9e:	0000                	unimp
    5ea0:	0301                	addi	t1,t1,0
    5ea2:	0901                	addi	s2,s2,0
    5ea4:	0000                	unimp
    5ea6:	0501                	addi	a0,a0,0
    5ea8:	0622                	slli	a2,a2,0x8
    5eaa:	00097f03          	0x97f03
    5eae:	0100                	addi	s0,sp,128
    5eb0:	0c05                	addi	s8,s8,1
    5eb2:	00090303          	lb	t1,0(s2)
    5eb6:	0100                	addi	s0,sp,128
    5eb8:	0e05                	addi	t3,t3,1
    5eba:	00097e03          	0x97e03
    5ebe:	0100                	addi	s0,sp,128
    5ec0:	0905                	addi	s2,s2,1
    5ec2:	0306                	slli	t1,t1,0x1
    5ec4:	0902                	c.slli64	s2
    5ec6:	0000                	unimp
    5ec8:	0501                	addi	a0,a0,0
    5eca:	060c                	addi	a1,sp,768
    5ecc:	00090003          	lb	zero,0(s2)
    5ed0:	0100                	addi	s0,sp,128
    5ed2:	0d05                	addi	s10,s10,1
    5ed4:	0306                	slli	t1,t1,0x1
    5ed6:	0902                	c.slli64	s2
    5ed8:	0000                	unimp
    5eda:	0301                	addi	t1,t1,0
    5edc:	0901                	addi	s2,s2,0
    5ede:	0000                	unimp
    5ee0:	0501                	addi	a0,a0,0
    5ee2:	0309                	addi	t1,t1,2
    5ee4:	0904                	addi	s1,sp,144
    5ee6:	0000                	unimp
    5ee8:	0301                	addi	t1,t1,0
    5eea:	0901                	addi	s2,s2,0
    5eec:	0000                	unimp
    5eee:	0501                	addi	a0,a0,0
    5ef0:	030d                	addi	t1,t1,3
    5ef2:	0901                	addi	s2,s2,0
    5ef4:	0000                	unimp
    5ef6:	0501                	addi	a0,a0,0
    5ef8:	0611                	addi	a2,a2,4
    5efa:	00090003          	lb	zero,0(s2)
    5efe:	0100                	addi	s0,sp,128
    5f00:	0905                	addi	s2,s2,1
    5f02:	0306                	slli	t1,t1,0x1
    5f04:	0974                	addi	a3,sp,156
    5f06:	0000                	unimp
    5f08:	0301                	addi	t1,t1,0
    5f0a:	0901                	addi	s2,s2,0
    5f0c:	0000                	unimp
    5f0e:	0501                	addi	a0,a0,0
    5f10:	0622                	slli	a2,a2,0x8
    5f12:	00097f03          	0x97f03
    5f16:	0100                	addi	s0,sp,128
    5f18:	0c05                	addi	s8,s8,1
    5f1a:	00090303          	lb	t1,0(s2)
    5f1e:	0100                	addi	s0,sp,128
    5f20:	0e05                	addi	t3,t3,1
    5f22:	00097e03          	0x97e03
    5f26:	0100                	addi	s0,sp,128
    5f28:	0905                	addi	s2,s2,1
    5f2a:	0306                	slli	t1,t1,0x1
    5f2c:	0902                	c.slli64	s2
    5f2e:	0000                	unimp
    5f30:	0501                	addi	a0,a0,0
    5f32:	060c                	addi	a1,sp,768
    5f34:	00090003          	lb	zero,0(s2)
    5f38:	0100                	addi	s0,sp,128
    5f3a:	0d05                	addi	s10,s10,1
    5f3c:	0306                	slli	t1,t1,0x1
    5f3e:	0902                	c.slli64	s2
    5f40:	0000                	unimp
    5f42:	0301                	addi	t1,t1,0
    5f44:	0901                	addi	s2,s2,0
    5f46:	0000                	unimp
    5f48:	0501                	addi	a0,a0,0
    5f4a:	0309                	addi	t1,t1,2
    5f4c:	0904                	addi	s1,sp,144
    5f4e:	0000                	unimp
    5f50:	0301                	addi	t1,t1,0
    5f52:	0901                	addi	s2,s2,0
    5f54:	0000                	unimp
    5f56:	0501                	addi	a0,a0,0
    5f58:	030d                	addi	t1,t1,3
    5f5a:	0901                	addi	s2,s2,0
    5f5c:	0000                	unimp
    5f5e:	0501                	addi	a0,a0,0
    5f60:	0611                	addi	a2,a2,4
    5f62:	00090003          	lb	zero,0(s2)
    5f66:	0100                	addi	s0,sp,128
    5f68:	0905                	addi	s2,s2,1
    5f6a:	0306                	slli	t1,t1,0x1
    5f6c:	0974                	addi	a3,sp,156
    5f6e:	0000                	unimp
    5f70:	0301                	addi	t1,t1,0
    5f72:	0901                	addi	s2,s2,0
    5f74:	0000                	unimp
    5f76:	0501                	addi	a0,a0,0
    5f78:	0622                	slli	a2,a2,0x8
    5f7a:	00097f03          	0x97f03
    5f7e:	0100                	addi	s0,sp,128
    5f80:	0c05                	addi	s8,s8,1
    5f82:	00090303          	lb	t1,0(s2)
    5f86:	0100                	addi	s0,sp,128
    5f88:	0e05                	addi	t3,t3,1
    5f8a:	00097e03          	0x97e03
    5f8e:	0100                	addi	s0,sp,128
    5f90:	0905                	addi	s2,s2,1
    5f92:	0306                	slli	t1,t1,0x1
    5f94:	0902                	c.slli64	s2
    5f96:	0000                	unimp
    5f98:	0501                	addi	a0,a0,0
    5f9a:	060c                	addi	a1,sp,768
    5f9c:	00090003          	lb	zero,0(s2)
    5fa0:	0100                	addi	s0,sp,128
    5fa2:	0d05                	addi	s10,s10,1
    5fa4:	0306                	slli	t1,t1,0x1
    5fa6:	0902                	c.slli64	s2
    5fa8:	0000                	unimp
    5faa:	0301                	addi	t1,t1,0
    5fac:	0901                	addi	s2,s2,0
    5fae:	0000                	unimp
    5fb0:	0501                	addi	a0,a0,0
    5fb2:	0309                	addi	t1,t1,2
    5fb4:	0904                	addi	s1,sp,144
    5fb6:	0000                	unimp
    5fb8:	0301                	addi	t1,t1,0
    5fba:	0901                	addi	s2,s2,0
    5fbc:	0000                	unimp
    5fbe:	0501                	addi	a0,a0,0
    5fc0:	030d                	addi	t1,t1,3
    5fc2:	0901                	addi	s2,s2,0
    5fc4:	0000                	unimp
    5fc6:	0501                	addi	a0,a0,0
    5fc8:	0611                	addi	a2,a2,4
    5fca:	00090003          	lb	zero,0(s2)
    5fce:	0100                	addi	s0,sp,128
    5fd0:	0905                	addi	s2,s2,1
    5fd2:	0306                	slli	t1,t1,0x1
    5fd4:	0974                	addi	a3,sp,156
    5fd6:	0000                	unimp
    5fd8:	0301                	addi	t1,t1,0
    5fda:	0901                	addi	s2,s2,0
    5fdc:	0000                	unimp
    5fde:	0501                	addi	a0,a0,0
    5fe0:	0622                	slli	a2,a2,0x8
    5fe2:	00097f03          	0x97f03
    5fe6:	0100                	addi	s0,sp,128
    5fe8:	0c05                	addi	s8,s8,1
    5fea:	00090303          	lb	t1,0(s2)
    5fee:	0100                	addi	s0,sp,128
    5ff0:	0e05                	addi	t3,t3,1
    5ff2:	00097e03          	0x97e03
    5ff6:	0100                	addi	s0,sp,128
    5ff8:	0905                	addi	s2,s2,1
    5ffa:	0306                	slli	t1,t1,0x1
    5ffc:	0902                	c.slli64	s2
    5ffe:	0000                	unimp
    6000:	0501                	addi	a0,a0,0
    6002:	060c                	addi	a1,sp,768
    6004:	00090003          	lb	zero,0(s2)
    6008:	0100                	addi	s0,sp,128
    600a:	0d05                	addi	s10,s10,1
    600c:	0306                	slli	t1,t1,0x1
    600e:	0902                	c.slli64	s2
    6010:	0000                	unimp
    6012:	0301                	addi	t1,t1,0
    6014:	0901                	addi	s2,s2,0
    6016:	0000                	unimp
    6018:	0501                	addi	a0,a0,0
    601a:	0309                	addi	t1,t1,2
    601c:	0904                	addi	s1,sp,144
    601e:	0000                	unimp
    6020:	0301                	addi	t1,t1,0
    6022:	0901                	addi	s2,s2,0
    6024:	0000                	unimp
    6026:	0501                	addi	a0,a0,0
    6028:	030d                	addi	t1,t1,3
    602a:	0901                	addi	s2,s2,0
    602c:	0000                	unimp
    602e:	0501                	addi	a0,a0,0
    6030:	0611                	addi	a2,a2,4
    6032:	00090003          	lb	zero,0(s2)
    6036:	0100                	addi	s0,sp,128
    6038:	0905                	addi	s2,s2,1
    603a:	0306                	slli	t1,t1,0x1
    603c:	0974                	addi	a3,sp,156
    603e:	0000                	unimp
    6040:	0301                	addi	t1,t1,0
    6042:	0901                	addi	s2,s2,0
    6044:	0000                	unimp
    6046:	0501                	addi	a0,a0,0
    6048:	0622                	slli	a2,a2,0x8
    604a:	00097f03          	0x97f03
    604e:	0100                	addi	s0,sp,128
    6050:	0c05                	addi	s8,s8,1
    6052:	00090303          	lb	t1,0(s2)
    6056:	0100                	addi	s0,sp,128
    6058:	0e05                	addi	t3,t3,1
    605a:	00097e03          	0x97e03
    605e:	0100                	addi	s0,sp,128
    6060:	0905                	addi	s2,s2,1
    6062:	0306                	slli	t1,t1,0x1
    6064:	0902                	c.slli64	s2
    6066:	0000                	unimp
    6068:	0501                	addi	a0,a0,0
    606a:	060c                	addi	a1,sp,768
    606c:	00090003          	lb	zero,0(s2)
    6070:	0100                	addi	s0,sp,128
    6072:	0d05                	addi	s10,s10,1
    6074:	0306                	slli	t1,t1,0x1
    6076:	0902                	c.slli64	s2
    6078:	0000                	unimp
    607a:	0301                	addi	t1,t1,0
    607c:	0901                	addi	s2,s2,0
    607e:	0000                	unimp
    6080:	0501                	addi	a0,a0,0
    6082:	0309                	addi	t1,t1,2
    6084:	0904                	addi	s1,sp,144
    6086:	0000                	unimp
    6088:	0301                	addi	t1,t1,0
    608a:	0901                	addi	s2,s2,0
    608c:	0000                	unimp
    608e:	0501                	addi	a0,a0,0
    6090:	030d                	addi	t1,t1,3
    6092:	0901                	addi	s2,s2,0
    6094:	0000                	unimp
    6096:	0501                	addi	a0,a0,0
    6098:	0611                	addi	a2,a2,4
    609a:	00090003          	lb	zero,0(s2)
    609e:	0100                	addi	s0,sp,128
    60a0:	0905                	addi	s2,s2,1
    60a2:	0306                	slli	t1,t1,0x1
    60a4:	0974                	addi	a3,sp,156
    60a6:	0000                	unimp
    60a8:	0301                	addi	t1,t1,0
    60aa:	0901                	addi	s2,s2,0
    60ac:	0000                	unimp
    60ae:	0501                	addi	a0,a0,0
    60b0:	0622                	slli	a2,a2,0x8
    60b2:	00097f03          	0x97f03
    60b6:	0100                	addi	s0,sp,128
    60b8:	0c05                	addi	s8,s8,1
    60ba:	00090303          	lb	t1,0(s2)
    60be:	0100                	addi	s0,sp,128
    60c0:	0e05                	addi	t3,t3,1
    60c2:	00097e03          	0x97e03
    60c6:	0100                	addi	s0,sp,128
    60c8:	0905                	addi	s2,s2,1
    60ca:	0306                	slli	t1,t1,0x1
    60cc:	0902                	c.slli64	s2
    60ce:	0000                	unimp
    60d0:	0501                	addi	a0,a0,0
    60d2:	060c                	addi	a1,sp,768
    60d4:	00090003          	lb	zero,0(s2)
    60d8:	0100                	addi	s0,sp,128
    60da:	0d05                	addi	s10,s10,1
    60dc:	0306                	slli	t1,t1,0x1
    60de:	0902                	c.slli64	s2
    60e0:	0000                	unimp
    60e2:	0301                	addi	t1,t1,0
    60e4:	0901                	addi	s2,s2,0
    60e6:	0000                	unimp
    60e8:	0501                	addi	a0,a0,0
    60ea:	0309                	addi	t1,t1,2
    60ec:	0904                	addi	s1,sp,144
    60ee:	0000                	unimp
    60f0:	0301                	addi	t1,t1,0
    60f2:	0901                	addi	s2,s2,0
    60f4:	0000                	unimp
    60f6:	0501                	addi	a0,a0,0
    60f8:	030d                	addi	t1,t1,3
    60fa:	0901                	addi	s2,s2,0
    60fc:	0000                	unimp
    60fe:	0501                	addi	a0,a0,0
    6100:	0611                	addi	a2,a2,4
    6102:	00090003          	lb	zero,0(s2)
    6106:	0100                	addi	s0,sp,128
    6108:	0905                	addi	s2,s2,1
    610a:	0306                	slli	t1,t1,0x1
    610c:	0974                	addi	a3,sp,156
    610e:	0000                	unimp
    6110:	0301                	addi	t1,t1,0
    6112:	0901                	addi	s2,s2,0
    6114:	0000                	unimp
    6116:	0301                	addi	t1,t1,0
    6118:	0902                	c.slli64	s2
    611a:	0000                	unimp
    611c:	0501                	addi	a0,a0,0
    611e:	060c                	addi	a1,sp,768
    6120:	00090003          	lb	zero,0(s2)
    6124:	0100                	addi	s0,sp,128
    6126:	0d05                	addi	s10,s10,1
    6128:	0306                	slli	t1,t1,0x1
    612a:	0902                	c.slli64	s2
    612c:	0000                	unimp
    612e:	0301                	addi	t1,t1,0
    6130:	0901                	addi	s2,s2,0
    6132:	0000                	unimp
    6134:	0501                	addi	a0,a0,0
    6136:	0309                	addi	t1,t1,2
    6138:	0904                	addi	s1,sp,144
    613a:	0000                	unimp
    613c:	0301                	addi	t1,t1,0
    613e:	0901                	addi	s2,s2,0
    6140:	0000                	unimp
    6142:	0501                	addi	a0,a0,0
    6144:	030d                	addi	t1,t1,3
    6146:	0901                	addi	s2,s2,0
    6148:	0000                	unimp
    614a:	0501                	addi	a0,a0,0
    614c:	0611                	addi	a2,a2,4
    614e:	00090003          	lb	zero,0(s2)
    6152:	0100                	addi	s0,sp,128
    6154:	0505                	addi	a0,a0,1
    6156:	0306                	slli	t1,t1,0x1
    6158:	0904                	addi	s1,sp,144
    615a:	0000                	unimp
    615c:	0501                	addi	a0,a0,0
    615e:	0601                	addi	a2,a2,0
    6160:	00090103          	lb	sp,0(s2)
    6164:	0100                	addi	s0,sp,128
    6166:	0009                	c.nop	2
    6168:	0000                	unimp
    616a:	0101                	addi	sp,sp,0
    616c:	0105                	addi	sp,sp,1
    616e:	0500                	addi	s0,sp,640
    6170:	bc02                	fsd	ft0,56(sp)
    6172:	03000027          	0x3000027
    6176:	01be                	slli	gp,gp,0xf
    6178:	0501                	addi	a0,a0,0
    617a:	0305                	addi	t1,t1,1
    617c:	0901                	addi	s2,s2,0
    617e:	0000                	unimp
    6180:	0501                	addi	a0,a0,0
    6182:	0622                	slli	a2,a2,0x8
    6184:	00096b03          	0x96b03
    6188:	0100                	addi	s0,sp,128
    618a:	0b05                	addi	s6,s6,1
    618c:	04091503          	lh	a0,64(s2)
    6190:	0100                	addi	s0,sp,128
    6192:	0505                	addi	a0,a0,1
    6194:	0306                	slli	t1,t1,0x1
    6196:	00040967          	jalr	s2,s0
    619a:	0301                	addi	t1,t1,0
    619c:	0902                	c.slli64	s2
    619e:	0000                	unimp
    61a0:	0501                	addi	a0,a0,0
    61a2:	0309                	addi	t1,t1,2
    61a4:	0902                	c.slli64	s2
    61a6:	0000                	unimp
    61a8:	0301                	addi	t1,t1,0
    61aa:	0901                	addi	s2,s2,0
    61ac:	0000                	unimp
    61ae:	0501                	addi	a0,a0,0
    61b0:	060c                	addi	a1,sp,768
    61b2:	00090203          	lb	tp,0(s2)
    61b6:	0100                	addi	s0,sp,128
    61b8:	0e05                	addi	t3,t3,1
    61ba:	04097e03          	0x4097e03
    61be:	0100                	addi	s0,sp,128
    61c0:	0905                	addi	s2,s2,1
    61c2:	0306                	slli	t1,t1,0x1
    61c4:	0902                	c.slli64	s2
    61c6:	0004                	0x4
    61c8:	0501                	addi	a0,a0,0
    61ca:	060c                	addi	a1,sp,768
    61cc:	04090003          	lb	zero,64(s2)
    61d0:	0100                	addi	s0,sp,128
    61d2:	0d05                	addi	s10,s10,1
    61d4:	0306                	slli	t1,t1,0x1
    61d6:	0902                	c.slli64	s2
    61d8:	0004                	0x4
    61da:	0301                	addi	t1,t1,0
    61dc:	0901                	addi	s2,s2,0
    61de:	0000                	unimp
    61e0:	0501                	addi	a0,a0,0
    61e2:	0309                	addi	t1,t1,2
    61e4:	0904                	addi	s1,sp,144
    61e6:	0000                	unimp
    61e8:	0301                	addi	t1,t1,0
    61ea:	0901                	addi	s2,s2,0
    61ec:	0000                	unimp
    61ee:	0501                	addi	a0,a0,0
    61f0:	030d                	addi	t1,t1,3
    61f2:	0901                	addi	s2,s2,0
    61f4:	0000                	unimp
    61f6:	0501                	addi	a0,a0,0
    61f8:	0611                	addi	a2,a2,4
    61fa:	00090003          	lb	zero,0(s2)
    61fe:	0100                	addi	s0,sp,128
    6200:	0905                	addi	s2,s2,1
    6202:	0306                	slli	t1,t1,0x1
    6204:	0974                	addi	a3,sp,156
    6206:	0014                	0x14
    6208:	0301                	addi	t1,t1,0
    620a:	0901                	addi	s2,s2,0
    620c:	0000                	unimp
    620e:	0501                	addi	a0,a0,0
    6210:	0622                	slli	a2,a2,0x8
    6212:	00097f03          	0x97f03
    6216:	0100                	addi	s0,sp,128
    6218:	0c05                	addi	s8,s8,1
    621a:	04090303          	lb	t1,64(s2)
    621e:	0100                	addi	s0,sp,128
    6220:	0e05                	addi	t3,t3,1
    6222:	08097e03          	0x8097e03
    6226:	0100                	addi	s0,sp,128
    6228:	0905                	addi	s2,s2,1
    622a:	0306                	slli	t1,t1,0x1
    622c:	0902                	c.slli64	s2
    622e:	0004                	0x4
    6230:	0501                	addi	a0,a0,0
    6232:	060c                	addi	a1,sp,768
    6234:	00090003          	lb	zero,0(s2)
    6238:	0100                	addi	s0,sp,128
    623a:	0d05                	addi	s10,s10,1
    623c:	0306                	slli	t1,t1,0x1
    623e:	0902                	c.slli64	s2
    6240:	0004                	0x4
    6242:	0301                	addi	t1,t1,0
    6244:	0901                	addi	s2,s2,0
    6246:	0000                	unimp
    6248:	0501                	addi	a0,a0,0
    624a:	0309                	addi	t1,t1,2
    624c:	0904                	addi	s1,sp,144
    624e:	0000                	unimp
    6250:	0301                	addi	t1,t1,0
    6252:	0901                	addi	s2,s2,0
    6254:	0000                	unimp
    6256:	0501                	addi	a0,a0,0
    6258:	030d                	addi	t1,t1,3
    625a:	0901                	addi	s2,s2,0
    625c:	0000                	unimp
    625e:	0501                	addi	a0,a0,0
    6260:	0611                	addi	a2,a2,4
    6262:	00090003          	lb	zero,0(s2)
    6266:	0100                	addi	s0,sp,128
    6268:	0905                	addi	s2,s2,1
    626a:	0306                	slli	t1,t1,0x1
    626c:	0974                	addi	a3,sp,156
    626e:	0014                	0x14
    6270:	0301                	addi	t1,t1,0
    6272:	0901                	addi	s2,s2,0
    6274:	0000                	unimp
    6276:	0501                	addi	a0,a0,0
    6278:	0622                	slli	a2,a2,0x8
    627a:	00097f03          	0x97f03
    627e:	0100                	addi	s0,sp,128
    6280:	0c05                	addi	s8,s8,1
    6282:	04090303          	lb	t1,64(s2)
    6286:	0100                	addi	s0,sp,128
    6288:	0e05                	addi	t3,t3,1
    628a:	04097e03          	0x4097e03
    628e:	0100                	addi	s0,sp,128
    6290:	0905                	addi	s2,s2,1
    6292:	0306                	slli	t1,t1,0x1
    6294:	0902                	c.slli64	s2
    6296:	0004                	0x4
    6298:	0501                	addi	a0,a0,0
    629a:	060c                	addi	a1,sp,768
    629c:	04090003          	lb	zero,64(s2)
    62a0:	0100                	addi	s0,sp,128
    62a2:	0d05                	addi	s10,s10,1
    62a4:	0306                	slli	t1,t1,0x1
    62a6:	0902                	c.slli64	s2
    62a8:	0004                	0x4
    62aa:	0301                	addi	t1,t1,0
    62ac:	0901                	addi	s2,s2,0
    62ae:	0000                	unimp
    62b0:	0501                	addi	a0,a0,0
    62b2:	0309                	addi	t1,t1,2
    62b4:	0904                	addi	s1,sp,144
    62b6:	0000                	unimp
    62b8:	0301                	addi	t1,t1,0
    62ba:	0901                	addi	s2,s2,0
    62bc:	0000                	unimp
    62be:	0501                	addi	a0,a0,0
    62c0:	030d                	addi	t1,t1,3
    62c2:	0901                	addi	s2,s2,0
    62c4:	0000                	unimp
    62c6:	0501                	addi	a0,a0,0
    62c8:	0611                	addi	a2,a2,4
    62ca:	00090003          	lb	zero,0(s2)
    62ce:	0100                	addi	s0,sp,128
    62d0:	0905                	addi	s2,s2,1
    62d2:	0306                	slli	t1,t1,0x1
    62d4:	0974                	addi	a3,sp,156
    62d6:	0014                	0x14
    62d8:	0301                	addi	t1,t1,0
    62da:	0901                	addi	s2,s2,0
    62dc:	0000                	unimp
    62de:	0501                	addi	a0,a0,0
    62e0:	0622                	slli	a2,a2,0x8
    62e2:	00097f03          	0x97f03
    62e6:	0100                	addi	s0,sp,128
    62e8:	0c05                	addi	s8,s8,1
    62ea:	04090303          	lb	t1,64(s2)
    62ee:	0100                	addi	s0,sp,128
    62f0:	0e05                	addi	t3,t3,1
    62f2:	04097e03          	0x4097e03
    62f6:	0100                	addi	s0,sp,128
    62f8:	0905                	addi	s2,s2,1
    62fa:	0306                	slli	t1,t1,0x1
    62fc:	0902                	c.slli64	s2
    62fe:	0004                	0x4
    6300:	0501                	addi	a0,a0,0
    6302:	060c                	addi	a1,sp,768
    6304:	04090003          	lb	zero,64(s2)
    6308:	0100                	addi	s0,sp,128
    630a:	0d05                	addi	s10,s10,1
    630c:	0306                	slli	t1,t1,0x1
    630e:	0902                	c.slli64	s2
    6310:	0004                	0x4
    6312:	0301                	addi	t1,t1,0
    6314:	0901                	addi	s2,s2,0
    6316:	0000                	unimp
    6318:	0501                	addi	a0,a0,0
    631a:	0309                	addi	t1,t1,2
    631c:	0904                	addi	s1,sp,144
    631e:	0000                	unimp
    6320:	0301                	addi	t1,t1,0
    6322:	0901                	addi	s2,s2,0
    6324:	0000                	unimp
    6326:	0501                	addi	a0,a0,0
    6328:	030d                	addi	t1,t1,3
    632a:	0901                	addi	s2,s2,0
    632c:	0000                	unimp
    632e:	0501                	addi	a0,a0,0
    6330:	0611                	addi	a2,a2,4
    6332:	00090003          	lb	zero,0(s2)
    6336:	0100                	addi	s0,sp,128
    6338:	0905                	addi	s2,s2,1
    633a:	0306                	slli	t1,t1,0x1
    633c:	0974                	addi	a3,sp,156
    633e:	0014                	0x14
    6340:	0301                	addi	t1,t1,0
    6342:	0901                	addi	s2,s2,0
    6344:	0000                	unimp
    6346:	0501                	addi	a0,a0,0
    6348:	0622                	slli	a2,a2,0x8
    634a:	00097f03          	0x97f03
    634e:	0100                	addi	s0,sp,128
    6350:	0c05                	addi	s8,s8,1
    6352:	04090303          	lb	t1,64(s2)
    6356:	0100                	addi	s0,sp,128
    6358:	0e05                	addi	t3,t3,1
    635a:	04097e03          	0x4097e03
    635e:	0100                	addi	s0,sp,128
    6360:	0905                	addi	s2,s2,1
    6362:	0306                	slli	t1,t1,0x1
    6364:	0902                	c.slli64	s2
    6366:	0004                	0x4
    6368:	0501                	addi	a0,a0,0
    636a:	060c                	addi	a1,sp,768
    636c:	04090003          	lb	zero,64(s2)
    6370:	0100                	addi	s0,sp,128
    6372:	0d05                	addi	s10,s10,1
    6374:	0306                	slli	t1,t1,0x1
    6376:	0902                	c.slli64	s2
    6378:	0004                	0x4
    637a:	0301                	addi	t1,t1,0
    637c:	0901                	addi	s2,s2,0
    637e:	0000                	unimp
    6380:	0501                	addi	a0,a0,0
    6382:	0309                	addi	t1,t1,2
    6384:	0904                	addi	s1,sp,144
    6386:	0000                	unimp
    6388:	0301                	addi	t1,t1,0
    638a:	0901                	addi	s2,s2,0
    638c:	0000                	unimp
    638e:	0501                	addi	a0,a0,0
    6390:	030d                	addi	t1,t1,3
    6392:	0901                	addi	s2,s2,0
    6394:	0000                	unimp
    6396:	0501                	addi	a0,a0,0
    6398:	0611                	addi	a2,a2,4
    639a:	00090003          	lb	zero,0(s2)
    639e:	0100                	addi	s0,sp,128
    63a0:	0905                	addi	s2,s2,1
    63a2:	0306                	slli	t1,t1,0x1
    63a4:	0974                	addi	a3,sp,156
    63a6:	0014                	0x14
    63a8:	0301                	addi	t1,t1,0
    63aa:	0901                	addi	s2,s2,0
    63ac:	0000                	unimp
    63ae:	0501                	addi	a0,a0,0
    63b0:	0622                	slli	a2,a2,0x8
    63b2:	00097f03          	0x97f03
    63b6:	0100                	addi	s0,sp,128
    63b8:	0c05                	addi	s8,s8,1
    63ba:	04090303          	lb	t1,64(s2)
    63be:	0100                	addi	s0,sp,128
    63c0:	0e05                	addi	t3,t3,1
    63c2:	04097e03          	0x4097e03
    63c6:	0100                	addi	s0,sp,128
    63c8:	0905                	addi	s2,s2,1
    63ca:	0306                	slli	t1,t1,0x1
    63cc:	0902                	c.slli64	s2
    63ce:	0004                	0x4
    63d0:	0501                	addi	a0,a0,0
    63d2:	060c                	addi	a1,sp,768
    63d4:	04090003          	lb	zero,64(s2)
    63d8:	0100                	addi	s0,sp,128
    63da:	0d05                	addi	s10,s10,1
    63dc:	0306                	slli	t1,t1,0x1
    63de:	0902                	c.slli64	s2
    63e0:	0004                	0x4
    63e2:	0301                	addi	t1,t1,0
    63e4:	0901                	addi	s2,s2,0
    63e6:	0000                	unimp
    63e8:	0501                	addi	a0,a0,0
    63ea:	0309                	addi	t1,t1,2
    63ec:	0904                	addi	s1,sp,144
    63ee:	0000                	unimp
    63f0:	0301                	addi	t1,t1,0
    63f2:	0901                	addi	s2,s2,0
    63f4:	0000                	unimp
    63f6:	0501                	addi	a0,a0,0
    63f8:	030d                	addi	t1,t1,3
    63fa:	0901                	addi	s2,s2,0
    63fc:	0000                	unimp
    63fe:	0501                	addi	a0,a0,0
    6400:	0611                	addi	a2,a2,4
    6402:	00090003          	lb	zero,0(s2)
    6406:	0100                	addi	s0,sp,128
    6408:	0905                	addi	s2,s2,1
    640a:	0306                	slli	t1,t1,0x1
    640c:	0974                	addi	a3,sp,156
    640e:	0014                	0x14
    6410:	0301                	addi	t1,t1,0
    6412:	0901                	addi	s2,s2,0
    6414:	0000                	unimp
    6416:	0501                	addi	a0,a0,0
    6418:	0622                	slli	a2,a2,0x8
    641a:	00097f03          	0x97f03
    641e:	0100                	addi	s0,sp,128
    6420:	0c05                	addi	s8,s8,1
    6422:	04090303          	lb	t1,64(s2)
    6426:	0100                	addi	s0,sp,128
    6428:	0e05                	addi	t3,t3,1
    642a:	04097e03          	0x4097e03
    642e:	0100                	addi	s0,sp,128
    6430:	0905                	addi	s2,s2,1
    6432:	0306                	slli	t1,t1,0x1
    6434:	0902                	c.slli64	s2
    6436:	0004                	0x4
    6438:	0501                	addi	a0,a0,0
    643a:	060c                	addi	a1,sp,768
    643c:	04090003          	lb	zero,64(s2)
    6440:	0100                	addi	s0,sp,128
    6442:	0d05                	addi	s10,s10,1
    6444:	0306                	slli	t1,t1,0x1
    6446:	0902                	c.slli64	s2
    6448:	0004                	0x4
    644a:	0301                	addi	t1,t1,0
    644c:	0901                	addi	s2,s2,0
    644e:	0000                	unimp
    6450:	0501                	addi	a0,a0,0
    6452:	0309                	addi	t1,t1,2
    6454:	0904                	addi	s1,sp,144
    6456:	0000                	unimp
    6458:	0301                	addi	t1,t1,0
    645a:	0901                	addi	s2,s2,0
    645c:	0000                	unimp
    645e:	0501                	addi	a0,a0,0
    6460:	030d                	addi	t1,t1,3
    6462:	0901                	addi	s2,s2,0
    6464:	0000                	unimp
    6466:	0501                	addi	a0,a0,0
    6468:	0611                	addi	a2,a2,4
    646a:	00090003          	lb	zero,0(s2)
    646e:	0100                	addi	s0,sp,128
    6470:	0905                	addi	s2,s2,1
    6472:	0306                	slli	t1,t1,0x1
    6474:	0974                	addi	a3,sp,156
    6476:	0014                	0x14
    6478:	0301                	addi	t1,t1,0
    647a:	0901                	addi	s2,s2,0
    647c:	0000                	unimp
    647e:	0301                	addi	t1,t1,0
    6480:	0902                	c.slli64	s2
    6482:	0000                	unimp
    6484:	0501                	addi	a0,a0,0
    6486:	060c                	addi	a1,sp,768
    6488:	00090003          	lb	zero,0(s2)
    648c:	0100                	addi	s0,sp,128
    648e:	0d05                	addi	s10,s10,1
    6490:	0306                	slli	t1,t1,0x1
    6492:	0902                	c.slli64	s2
    6494:	000c                	0xc
    6496:	0301                	addi	t1,t1,0
    6498:	0901                	addi	s2,s2,0
    649a:	0000                	unimp
    649c:	0501                	addi	a0,a0,0
    649e:	0309                	addi	t1,t1,2
    64a0:	0904                	addi	s1,sp,144
    64a2:	0000                	unimp
    64a4:	0301                	addi	t1,t1,0
    64a6:	0901                	addi	s2,s2,0
    64a8:	0000                	unimp
    64aa:	0501                	addi	a0,a0,0
    64ac:	030d                	addi	t1,t1,3
    64ae:	0901                	addi	s2,s2,0
    64b0:	0000                	unimp
    64b2:	0501                	addi	a0,a0,0
    64b4:	0611                	addi	a2,a2,4
    64b6:	00090003          	lb	zero,0(s2)
    64ba:	0100                	addi	s0,sp,128
    64bc:	0505                	addi	a0,a0,1
    64be:	0306                	slli	t1,t1,0x1
    64c0:	0904                	addi	s1,sp,144
    64c2:	0014                	0x14
    64c4:	0301                	addi	t1,t1,0
    64c6:	0906                	slli	s2,s2,0x1
    64c8:	0000                	unimp
    64ca:	0501                	addi	a0,a0,0
    64cc:	0003060b          	0x3060b
    64d0:	0009                	c.nop	2
    64d2:	0100                	addi	s0,sp,128
    64d4:	2205                	jal	65f4 <_dtoa_r+0x8>
    64d6:	04096a03          	0x4096a03
    64da:	0100                	addi	s0,sp,128
    64dc:	0b05                	addi	s6,s6,1
    64de:	04091603          	lh	a2,64(s2)
    64e2:	0100                	addi	s0,sp,128
    64e4:	0905                	addi	s2,s2,1
    64e6:	0306                	slli	t1,t1,0x1
    64e8:	096a                	slli	s2,s2,0x1a
    64ea:	0004                	0x4
    64ec:	0301                	addi	t1,t1,0
    64ee:	0901                	addi	s2,s2,0
    64f0:	0000                	unimp
    64f2:	0501                	addi	a0,a0,0
    64f4:	060c                	addi	a1,sp,768
    64f6:	00090203          	lb	tp,0(s2)
    64fa:	0100                	addi	s0,sp,128
    64fc:	0e05                	addi	t3,t3,1
    64fe:	04097e03          	0x4097e03
    6502:	0100                	addi	s0,sp,128
    6504:	0905                	addi	s2,s2,1
    6506:	0306                	slli	t1,t1,0x1
    6508:	0902                	c.slli64	s2
    650a:	0004                	0x4
    650c:	0501                	addi	a0,a0,0
    650e:	060c                	addi	a1,sp,768
    6510:	04090003          	lb	zero,64(s2)
    6514:	0100                	addi	s0,sp,128
    6516:	0d05                	addi	s10,s10,1
    6518:	0306                	slli	t1,t1,0x1
    651a:	0902                	c.slli64	s2
    651c:	0004                	0x4
    651e:	0301                	addi	t1,t1,0
    6520:	0901                	addi	s2,s2,0
    6522:	0000                	unimp
    6524:	0501                	addi	a0,a0,0
    6526:	0309                	addi	t1,t1,2
    6528:	0904                	addi	s1,sp,144
    652a:	0000                	unimp
    652c:	0301                	addi	t1,t1,0
    652e:	0901                	addi	s2,s2,0
    6530:	0000                	unimp
    6532:	0501                	addi	a0,a0,0
    6534:	030d                	addi	t1,t1,3
    6536:	0901                	addi	s2,s2,0
    6538:	0000                	unimp
    653a:	0501                	addi	a0,a0,0
    653c:	0611                	addi	a2,a2,4
    653e:	00090003          	lb	zero,0(s2)
    6542:	0100                	addi	s0,sp,128
    6544:	0905                	addi	s2,s2,1
    6546:	0306                	slli	t1,t1,0x1
    6548:	0974                	addi	a3,sp,156
    654a:	0014                	0x14
    654c:	0301                	addi	t1,t1,0
    654e:	0901                	addi	s2,s2,0
    6550:	0000                	unimp
    6552:	0501                	addi	a0,a0,0
    6554:	0622                	slli	a2,a2,0x8
    6556:	00097f03          	0x97f03
    655a:	0100                	addi	s0,sp,128
    655c:	0c05                	addi	s8,s8,1
    655e:	04090303          	lb	t1,64(s2)
    6562:	0100                	addi	s0,sp,128
    6564:	0e05                	addi	t3,t3,1
    6566:	04097e03          	0x4097e03
    656a:	0100                	addi	s0,sp,128
    656c:	0905                	addi	s2,s2,1
    656e:	0306                	slli	t1,t1,0x1
    6570:	0902                	c.slli64	s2
    6572:	0004                	0x4
    6574:	0501                	addi	a0,a0,0
    6576:	060c                	addi	a1,sp,768
    6578:	04090003          	lb	zero,64(s2)
    657c:	0100                	addi	s0,sp,128
    657e:	0d05                	addi	s10,s10,1
    6580:	0306                	slli	t1,t1,0x1
    6582:	0902                	c.slli64	s2
    6584:	0004                	0x4
    6586:	0301                	addi	t1,t1,0
    6588:	0901                	addi	s2,s2,0
    658a:	0000                	unimp
    658c:	0501                	addi	a0,a0,0
    658e:	0309                	addi	t1,t1,2
    6590:	0904                	addi	s1,sp,144
    6592:	0000                	unimp
    6594:	0301                	addi	t1,t1,0
    6596:	0901                	addi	s2,s2,0
    6598:	0000                	unimp
    659a:	0501                	addi	a0,a0,0
    659c:	030d                	addi	t1,t1,3
    659e:	0901                	addi	s2,s2,0
    65a0:	0000                	unimp
    65a2:	0501                	addi	a0,a0,0
    65a4:	0611                	addi	a2,a2,4
    65a6:	00090003          	lb	zero,0(s2)
    65aa:	0100                	addi	s0,sp,128
    65ac:	0905                	addi	s2,s2,1
    65ae:	0306                	slli	t1,t1,0x1
    65b0:	0974                	addi	a3,sp,156
    65b2:	0014                	0x14
    65b4:	0301                	addi	t1,t1,0
    65b6:	0901                	addi	s2,s2,0
    65b8:	0000                	unimp
    65ba:	0501                	addi	a0,a0,0
    65bc:	0622                	slli	a2,a2,0x8
    65be:	00097f03          	0x97f03
    65c2:	0100                	addi	s0,sp,128
    65c4:	0c05                	addi	s8,s8,1
    65c6:	04090303          	lb	t1,64(s2)
    65ca:	0100                	addi	s0,sp,128
    65cc:	0e05                	addi	t3,t3,1
    65ce:	04097e03          	0x4097e03
    65d2:	0100                	addi	s0,sp,128
    65d4:	0905                	addi	s2,s2,1
    65d6:	0306                	slli	t1,t1,0x1
    65d8:	0902                	c.slli64	s2
    65da:	0004                	0x4
    65dc:	0501                	addi	a0,a0,0
    65de:	060c                	addi	a1,sp,768
    65e0:	04090003          	lb	zero,64(s2)
    65e4:	0100                	addi	s0,sp,128
    65e6:	0d05                	addi	s10,s10,1
    65e8:	0306                	slli	t1,t1,0x1
    65ea:	0902                	c.slli64	s2
    65ec:	0004                	0x4
    65ee:	0301                	addi	t1,t1,0
    65f0:	0901                	addi	s2,s2,0
    65f2:	0000                	unimp
    65f4:	0501                	addi	a0,a0,0
    65f6:	0309                	addi	t1,t1,2
    65f8:	0904                	addi	s1,sp,144
    65fa:	0000                	unimp
    65fc:	0301                	addi	t1,t1,0
    65fe:	0901                	addi	s2,s2,0
    6600:	0000                	unimp
    6602:	0501                	addi	a0,a0,0
    6604:	030d                	addi	t1,t1,3
    6606:	0901                	addi	s2,s2,0
    6608:	0000                	unimp
    660a:	0501                	addi	a0,a0,0
    660c:	0611                	addi	a2,a2,4
    660e:	00090003          	lb	zero,0(s2)
    6612:	0100                	addi	s0,sp,128
    6614:	0905                	addi	s2,s2,1
    6616:	0306                	slli	t1,t1,0x1
    6618:	0974                	addi	a3,sp,156
    661a:	0014                	0x14
    661c:	0301                	addi	t1,t1,0
    661e:	0901                	addi	s2,s2,0
    6620:	0000                	unimp
    6622:	0501                	addi	a0,a0,0
    6624:	0622                	slli	a2,a2,0x8
    6626:	00097f03          	0x97f03
    662a:	0100                	addi	s0,sp,128
    662c:	0c05                	addi	s8,s8,1
    662e:	04090303          	lb	t1,64(s2)
    6632:	0100                	addi	s0,sp,128
    6634:	0e05                	addi	t3,t3,1
    6636:	04097e03          	0x4097e03
    663a:	0100                	addi	s0,sp,128
    663c:	0905                	addi	s2,s2,1
    663e:	0306                	slli	t1,t1,0x1
    6640:	0902                	c.slli64	s2
    6642:	0004                	0x4
    6644:	0501                	addi	a0,a0,0
    6646:	060c                	addi	a1,sp,768
    6648:	04090003          	lb	zero,64(s2)
    664c:	0100                	addi	s0,sp,128
    664e:	0d05                	addi	s10,s10,1
    6650:	0306                	slli	t1,t1,0x1
    6652:	0902                	c.slli64	s2
    6654:	0004                	0x4
    6656:	0301                	addi	t1,t1,0
    6658:	0901                	addi	s2,s2,0
    665a:	0000                	unimp
    665c:	0501                	addi	a0,a0,0
    665e:	0309                	addi	t1,t1,2
    6660:	0904                	addi	s1,sp,144
    6662:	0000                	unimp
    6664:	0301                	addi	t1,t1,0
    6666:	0901                	addi	s2,s2,0
    6668:	0000                	unimp
    666a:	0501                	addi	a0,a0,0
    666c:	030d                	addi	t1,t1,3
    666e:	0901                	addi	s2,s2,0
    6670:	0000                	unimp
    6672:	0501                	addi	a0,a0,0
    6674:	0611                	addi	a2,a2,4
    6676:	00090003          	lb	zero,0(s2)
    667a:	0100                	addi	s0,sp,128
    667c:	0905                	addi	s2,s2,1
    667e:	0306                	slli	t1,t1,0x1
    6680:	0974                	addi	a3,sp,156
    6682:	0014                	0x14
    6684:	0301                	addi	t1,t1,0
    6686:	0901                	addi	s2,s2,0
    6688:	0000                	unimp
    668a:	0501                	addi	a0,a0,0
    668c:	0622                	slli	a2,a2,0x8
    668e:	00097f03          	0x97f03
    6692:	0100                	addi	s0,sp,128
    6694:	0c05                	addi	s8,s8,1
    6696:	04090303          	lb	t1,64(s2)
    669a:	0100                	addi	s0,sp,128
    669c:	0e05                	addi	t3,t3,1
    669e:	04097e03          	0x4097e03
    66a2:	0100                	addi	s0,sp,128
    66a4:	0905                	addi	s2,s2,1
    66a6:	0306                	slli	t1,t1,0x1
    66a8:	0902                	c.slli64	s2
    66aa:	0004                	0x4
    66ac:	0501                	addi	a0,a0,0
    66ae:	060c                	addi	a1,sp,768
    66b0:	04090003          	lb	zero,64(s2)
    66b4:	0100                	addi	s0,sp,128
    66b6:	0d05                	addi	s10,s10,1
    66b8:	0306                	slli	t1,t1,0x1
    66ba:	0902                	c.slli64	s2
    66bc:	0004                	0x4
    66be:	0301                	addi	t1,t1,0
    66c0:	0901                	addi	s2,s2,0
    66c2:	0000                	unimp
    66c4:	0501                	addi	a0,a0,0
    66c6:	0309                	addi	t1,t1,2
    66c8:	0904                	addi	s1,sp,144
    66ca:	0000                	unimp
    66cc:	0301                	addi	t1,t1,0
    66ce:	0901                	addi	s2,s2,0
    66d0:	0000                	unimp
    66d2:	0501                	addi	a0,a0,0
    66d4:	030d                	addi	t1,t1,3
    66d6:	0901                	addi	s2,s2,0
    66d8:	0000                	unimp
    66da:	0501                	addi	a0,a0,0
    66dc:	0611                	addi	a2,a2,4
    66de:	00090003          	lb	zero,0(s2)
    66e2:	0100                	addi	s0,sp,128
    66e4:	0905                	addi	s2,s2,1
    66e6:	0306                	slli	t1,t1,0x1
    66e8:	0974                	addi	a3,sp,156
    66ea:	0014                	0x14
    66ec:	0301                	addi	t1,t1,0
    66ee:	0901                	addi	s2,s2,0
    66f0:	0000                	unimp
    66f2:	0501                	addi	a0,a0,0
    66f4:	0622                	slli	a2,a2,0x8
    66f6:	00097f03          	0x97f03
    66fa:	0100                	addi	s0,sp,128
    66fc:	0c05                	addi	s8,s8,1
    66fe:	04090303          	lb	t1,64(s2)
    6702:	0100                	addi	s0,sp,128
    6704:	0e05                	addi	t3,t3,1
    6706:	04097e03          	0x4097e03
    670a:	0100                	addi	s0,sp,128
    670c:	0905                	addi	s2,s2,1
    670e:	0306                	slli	t1,t1,0x1
    6710:	0902                	c.slli64	s2
    6712:	0004                	0x4
    6714:	0501                	addi	a0,a0,0
    6716:	060c                	addi	a1,sp,768
    6718:	04090003          	lb	zero,64(s2)
    671c:	0100                	addi	s0,sp,128
    671e:	0d05                	addi	s10,s10,1
    6720:	0306                	slli	t1,t1,0x1
    6722:	0902                	c.slli64	s2
    6724:	0004                	0x4
    6726:	0301                	addi	t1,t1,0
    6728:	0901                	addi	s2,s2,0
    672a:	0000                	unimp
    672c:	0501                	addi	a0,a0,0
    672e:	0309                	addi	t1,t1,2
    6730:	0904                	addi	s1,sp,144
    6732:	0000                	unimp
    6734:	0301                	addi	t1,t1,0
    6736:	0901                	addi	s2,s2,0
    6738:	0000                	unimp
    673a:	0501                	addi	a0,a0,0
    673c:	030d                	addi	t1,t1,3
    673e:	0901                	addi	s2,s2,0
    6740:	0000                	unimp
    6742:	0501                	addi	a0,a0,0
    6744:	0611                	addi	a2,a2,4
    6746:	00090003          	lb	zero,0(s2)
    674a:	0100                	addi	s0,sp,128
    674c:	0905                	addi	s2,s2,1
    674e:	0306                	slli	t1,t1,0x1
    6750:	0974                	addi	a3,sp,156
    6752:	0014                	0x14
    6754:	0301                	addi	t1,t1,0
    6756:	0901                	addi	s2,s2,0
    6758:	0000                	unimp
    675a:	0501                	addi	a0,a0,0
    675c:	0622                	slli	a2,a2,0x8
    675e:	00097f03          	0x97f03
    6762:	0100                	addi	s0,sp,128
    6764:	0c05                	addi	s8,s8,1
    6766:	04090303          	lb	t1,64(s2)
    676a:	0100                	addi	s0,sp,128
    676c:	0e05                	addi	t3,t3,1
    676e:	04097e03          	0x4097e03
    6772:	0100                	addi	s0,sp,128
    6774:	0905                	addi	s2,s2,1
    6776:	0306                	slli	t1,t1,0x1
    6778:	0902                	c.slli64	s2
    677a:	0004                	0x4
    677c:	0501                	addi	a0,a0,0
    677e:	060c                	addi	a1,sp,768
    6780:	04090003          	lb	zero,64(s2)
    6784:	0100                	addi	s0,sp,128
    6786:	0d05                	addi	s10,s10,1
    6788:	0306                	slli	t1,t1,0x1
    678a:	0902                	c.slli64	s2
    678c:	0004                	0x4
    678e:	0301                	addi	t1,t1,0
    6790:	0901                	addi	s2,s2,0
    6792:	0000                	unimp
    6794:	0501                	addi	a0,a0,0
    6796:	0309                	addi	t1,t1,2
    6798:	0904                	addi	s1,sp,144
    679a:	0000                	unimp
    679c:	0301                	addi	t1,t1,0
    679e:	0901                	addi	s2,s2,0
    67a0:	0000                	unimp
    67a2:	0501                	addi	a0,a0,0
    67a4:	030d                	addi	t1,t1,3
    67a6:	0901                	addi	s2,s2,0
    67a8:	0000                	unimp
    67aa:	0501                	addi	a0,a0,0
    67ac:	0611                	addi	a2,a2,4
    67ae:	00090003          	lb	zero,0(s2)
    67b2:	0100                	addi	s0,sp,128
    67b4:	0905                	addi	s2,s2,1
    67b6:	0306                	slli	t1,t1,0x1
    67b8:	0974                	addi	a3,sp,156
    67ba:	0014                	0x14
    67bc:	0301                	addi	t1,t1,0
    67be:	0901                	addi	s2,s2,0
    67c0:	0000                	unimp
    67c2:	0301                	addi	t1,t1,0
    67c4:	0902                	c.slli64	s2
    67c6:	0000                	unimp
    67c8:	0501                	addi	a0,a0,0
    67ca:	060c                	addi	a1,sp,768
    67cc:	00090003          	lb	zero,0(s2)
    67d0:	0100                	addi	s0,sp,128
    67d2:	0d05                	addi	s10,s10,1
    67d4:	0306                	slli	t1,t1,0x1
    67d6:	0902                	c.slli64	s2
    67d8:	000c                	0xc
    67da:	0301                	addi	t1,t1,0
    67dc:	0901                	addi	s2,s2,0
    67de:	0000                	unimp
    67e0:	0501                	addi	a0,a0,0
    67e2:	0309                	addi	t1,t1,2
    67e4:	0904                	addi	s1,sp,144
    67e6:	0000                	unimp
    67e8:	0301                	addi	t1,t1,0
    67ea:	0901                	addi	s2,s2,0
    67ec:	0000                	unimp
    67ee:	0501                	addi	a0,a0,0
    67f0:	030d                	addi	t1,t1,3
    67f2:	0901                	addi	s2,s2,0
    67f4:	0000                	unimp
    67f6:	0501                	addi	a0,a0,0
    67f8:	0611                	addi	a2,a2,4
    67fa:	00090003          	lb	zero,0(s2)
    67fe:	0100                	addi	s0,sp,128
    6800:	0505                	addi	a0,a0,1
    6802:	0306                	slli	t1,t1,0x1
    6804:	0904                	addi	s1,sp,144
    6806:	0014                	0x14
    6808:	0301                	addi	t1,t1,0
    680a:	00000907          	0x907
    680e:	0501                	addi	a0,a0,0
    6810:	0601                	addi	a2,a2,0
    6812:	00090103          	lb	sp,0(s2)
    6816:	0100                	addi	s0,sp,128
    6818:	0409                	addi	s0,s0,2
    681a:	0000                	unimp
    681c:	0101                	addi	sp,sp,0
    681e:	0105                	addi	sp,sp,1
    6820:	0500                	addi	s0,sp,640
    6822:	3c02                	fld	fs8,32(sp)
    6824:	002a                	c.slli	zero,0xa
    6826:	0300                	addi	s0,sp,384
    6828:	01c5                	addi	gp,gp,17
    682a:	0501                	addi	a0,a0,0
    682c:	0305                	addi	t1,t1,1
    682e:	0901                	addi	s2,s2,0
    6830:	0000                	unimp
    6832:	0301                	addi	t1,t1,0
    6834:	00000907          	0x907
    6838:	0501                	addi	a0,a0,0
    683a:	0622                	slli	a2,a2,0x8
    683c:	00095d03          	lhu	s10,0(s2)
    6840:	0100                	addi	s0,sp,128
    6842:	0b05                	addi	s6,s6,1
    6844:	04091503          	lh	a0,64(s2)
    6848:	0100                	addi	s0,sp,128
    684a:	0c05                	addi	s8,s8,1
    684c:	04090e03          	lb	t3,64(s2)
    6850:	0100                	addi	s0,sp,128
    6852:	04096003          	0x4096003
    6856:	0100                	addi	s0,sp,128
    6858:	04092003          	lw	zero,64(s2)
    685c:	0100                	addi	s0,sp,128
    685e:	0505                	addi	a0,a0,1
    6860:	0306                	slli	t1,t1,0x1
    6862:	0972                	slli	s2,s2,0x1c
    6864:	0004                	0x4
    6866:	0301                	addi	t1,t1,0
    6868:	00000967          	jalr	s2,zero # 0 <_start>
    686c:	0301                	addi	t1,t1,0
    686e:	0902                	c.slli64	s2
    6870:	0000                	unimp
    6872:	0501                	addi	a0,a0,0
    6874:	0309                	addi	t1,t1,2
    6876:	0902                	c.slli64	s2
    6878:	0000                	unimp
    687a:	0301                	addi	t1,t1,0
    687c:	0901                	addi	s2,s2,0
    687e:	0000                	unimp
    6880:	0501                	addi	a0,a0,0
    6882:	060e                	slli	a2,a2,0x3
    6884:	00090003          	lb	zero,0(s2)
    6888:	0100                	addi	s0,sp,128
    688a:	0905                	addi	s2,s2,1
    688c:	0306                	slli	t1,t1,0x1
    688e:	0902                	c.slli64	s2
    6890:	0004                	0x4
    6892:	0501                	addi	a0,a0,0
    6894:	060c                	addi	a1,sp,768
    6896:	04090003          	lb	zero,64(s2)
    689a:	0100                	addi	s0,sp,128
    689c:	0d05                	addi	s10,s10,1
    689e:	0306                	slli	t1,t1,0x1
    68a0:	0902                	c.slli64	s2
    68a2:	0004                	0x4
    68a4:	0301                	addi	t1,t1,0
    68a6:	0901                	addi	s2,s2,0
    68a8:	0000                	unimp
    68aa:	0501                	addi	a0,a0,0
    68ac:	0309                	addi	t1,t1,2
    68ae:	0904                	addi	s1,sp,144
    68b0:	0000                	unimp
    68b2:	0301                	addi	t1,t1,0
    68b4:	0901                	addi	s2,s2,0
    68b6:	0000                	unimp
    68b8:	0501                	addi	a0,a0,0
    68ba:	030d                	addi	t1,t1,3
    68bc:	0901                	addi	s2,s2,0
    68be:	0000                	unimp
    68c0:	0501                	addi	a0,a0,0
    68c2:	0611                	addi	a2,a2,4
    68c4:	00090003          	lb	zero,0(s2)
    68c8:	0100                	addi	s0,sp,128
    68ca:	0905                	addi	s2,s2,1
    68cc:	0306                	slli	t1,t1,0x1
    68ce:	0974                	addi	a3,sp,156
    68d0:	0014                	0x14
    68d2:	0301                	addi	t1,t1,0
    68d4:	0901                	addi	s2,s2,0
    68d6:	0000                	unimp
    68d8:	0501                	addi	a0,a0,0
    68da:	0622                	slli	a2,a2,0x8
    68dc:	00097f03          	0x97f03
    68e0:	0100                	addi	s0,sp,128
    68e2:	0c05                	addi	s8,s8,1
    68e4:	04090303          	lb	t1,64(s2)
    68e8:	0100                	addi	s0,sp,128
    68ea:	0e05                	addi	t3,t3,1
    68ec:	08097e03          	0x8097e03
    68f0:	0100                	addi	s0,sp,128
    68f2:	0905                	addi	s2,s2,1
    68f4:	0306                	slli	t1,t1,0x1
    68f6:	0902                	c.slli64	s2
    68f8:	0004                	0x4
    68fa:	0501                	addi	a0,a0,0
    68fc:	060c                	addi	a1,sp,768
    68fe:	00090003          	lb	zero,0(s2)
    6902:	0100                	addi	s0,sp,128
    6904:	0d05                	addi	s10,s10,1
    6906:	0306                	slli	t1,t1,0x1
    6908:	0902                	c.slli64	s2
    690a:	0004                	0x4
    690c:	0301                	addi	t1,t1,0
    690e:	0901                	addi	s2,s2,0
    6910:	0000                	unimp
    6912:	0501                	addi	a0,a0,0
    6914:	0309                	addi	t1,t1,2
    6916:	0904                	addi	s1,sp,144
    6918:	0000                	unimp
    691a:	0301                	addi	t1,t1,0
    691c:	0901                	addi	s2,s2,0
    691e:	0000                	unimp
    6920:	0501                	addi	a0,a0,0
    6922:	030d                	addi	t1,t1,3
    6924:	0901                	addi	s2,s2,0
    6926:	0000                	unimp
    6928:	0501                	addi	a0,a0,0
    692a:	0611                	addi	a2,a2,4
    692c:	00090003          	lb	zero,0(s2)
    6930:	0100                	addi	s0,sp,128
    6932:	0905                	addi	s2,s2,1
    6934:	0306                	slli	t1,t1,0x1
    6936:	0974                	addi	a3,sp,156
    6938:	0014                	0x14
    693a:	0301                	addi	t1,t1,0
    693c:	0901                	addi	s2,s2,0
    693e:	0000                	unimp
    6940:	0501                	addi	a0,a0,0
    6942:	0622                	slli	a2,a2,0x8
    6944:	00097f03          	0x97f03
    6948:	0100                	addi	s0,sp,128
    694a:	0c05                	addi	s8,s8,1
    694c:	04090303          	lb	t1,64(s2)
    6950:	0100                	addi	s0,sp,128
    6952:	0e05                	addi	t3,t3,1
    6954:	04097e03          	0x4097e03
    6958:	0100                	addi	s0,sp,128
    695a:	0905                	addi	s2,s2,1
    695c:	0306                	slli	t1,t1,0x1
    695e:	0902                	c.slli64	s2
    6960:	0004                	0x4
    6962:	0501                	addi	a0,a0,0
    6964:	060c                	addi	a1,sp,768
    6966:	04090003          	lb	zero,64(s2)
    696a:	0100                	addi	s0,sp,128
    696c:	0d05                	addi	s10,s10,1
    696e:	0306                	slli	t1,t1,0x1
    6970:	0902                	c.slli64	s2
    6972:	0004                	0x4
    6974:	0301                	addi	t1,t1,0
    6976:	0901                	addi	s2,s2,0
    6978:	0000                	unimp
    697a:	0501                	addi	a0,a0,0
    697c:	0309                	addi	t1,t1,2
    697e:	0904                	addi	s1,sp,144
    6980:	0000                	unimp
    6982:	0301                	addi	t1,t1,0
    6984:	0901                	addi	s2,s2,0
    6986:	0000                	unimp
    6988:	0501                	addi	a0,a0,0
    698a:	030d                	addi	t1,t1,3
    698c:	0901                	addi	s2,s2,0
    698e:	0000                	unimp
    6990:	0501                	addi	a0,a0,0
    6992:	0611                	addi	a2,a2,4
    6994:	00090003          	lb	zero,0(s2)
    6998:	0100                	addi	s0,sp,128
    699a:	0905                	addi	s2,s2,1
    699c:	0306                	slli	t1,t1,0x1
    699e:	0974                	addi	a3,sp,156
    69a0:	0014                	0x14
    69a2:	0301                	addi	t1,t1,0
    69a4:	0901                	addi	s2,s2,0
    69a6:	0000                	unimp
    69a8:	0501                	addi	a0,a0,0
    69aa:	0622                	slli	a2,a2,0x8
    69ac:	00097f03          	0x97f03
    69b0:	0100                	addi	s0,sp,128
    69b2:	0c05                	addi	s8,s8,1
    69b4:	04090303          	lb	t1,64(s2)
    69b8:	0100                	addi	s0,sp,128
    69ba:	0e05                	addi	t3,t3,1
    69bc:	04097e03          	0x4097e03
    69c0:	0100                	addi	s0,sp,128
    69c2:	0905                	addi	s2,s2,1
    69c4:	0306                	slli	t1,t1,0x1
    69c6:	0902                	c.slli64	s2
    69c8:	0004                	0x4
    69ca:	0501                	addi	a0,a0,0
    69cc:	060c                	addi	a1,sp,768
    69ce:	04090003          	lb	zero,64(s2)
    69d2:	0100                	addi	s0,sp,128
    69d4:	0d05                	addi	s10,s10,1
    69d6:	0306                	slli	t1,t1,0x1
    69d8:	0902                	c.slli64	s2
    69da:	0004                	0x4
    69dc:	0301                	addi	t1,t1,0
    69de:	0901                	addi	s2,s2,0
    69e0:	0000                	unimp
    69e2:	0501                	addi	a0,a0,0
    69e4:	0309                	addi	t1,t1,2
    69e6:	0904                	addi	s1,sp,144
    69e8:	0000                	unimp
    69ea:	0301                	addi	t1,t1,0
    69ec:	0901                	addi	s2,s2,0
    69ee:	0000                	unimp
    69f0:	0501                	addi	a0,a0,0
    69f2:	030d                	addi	t1,t1,3
    69f4:	0901                	addi	s2,s2,0
    69f6:	0000                	unimp
    69f8:	0501                	addi	a0,a0,0
    69fa:	0611                	addi	a2,a2,4
    69fc:	00090003          	lb	zero,0(s2)
    6a00:	0100                	addi	s0,sp,128
    6a02:	0905                	addi	s2,s2,1
    6a04:	0306                	slli	t1,t1,0x1
    6a06:	0974                	addi	a3,sp,156
    6a08:	0014                	0x14
    6a0a:	0301                	addi	t1,t1,0
    6a0c:	0901                	addi	s2,s2,0
    6a0e:	0000                	unimp
    6a10:	0501                	addi	a0,a0,0
    6a12:	0622                	slli	a2,a2,0x8
    6a14:	00097f03          	0x97f03
    6a18:	0100                	addi	s0,sp,128
    6a1a:	0c05                	addi	s8,s8,1
    6a1c:	04090303          	lb	t1,64(s2)
    6a20:	0100                	addi	s0,sp,128
    6a22:	0e05                	addi	t3,t3,1
    6a24:	04097e03          	0x4097e03
    6a28:	0100                	addi	s0,sp,128
    6a2a:	0905                	addi	s2,s2,1
    6a2c:	0306                	slli	t1,t1,0x1
    6a2e:	0902                	c.slli64	s2
    6a30:	0004                	0x4
    6a32:	0501                	addi	a0,a0,0
    6a34:	060c                	addi	a1,sp,768
    6a36:	04090003          	lb	zero,64(s2)
    6a3a:	0100                	addi	s0,sp,128
    6a3c:	0d05                	addi	s10,s10,1
    6a3e:	0306                	slli	t1,t1,0x1
    6a40:	0902                	c.slli64	s2
    6a42:	0004                	0x4
    6a44:	0301                	addi	t1,t1,0
    6a46:	0901                	addi	s2,s2,0
    6a48:	0000                	unimp
    6a4a:	0501                	addi	a0,a0,0
    6a4c:	0309                	addi	t1,t1,2
    6a4e:	0904                	addi	s1,sp,144
    6a50:	0000                	unimp
    6a52:	0301                	addi	t1,t1,0
    6a54:	0901                	addi	s2,s2,0
    6a56:	0000                	unimp
    6a58:	0501                	addi	a0,a0,0
    6a5a:	030d                	addi	t1,t1,3
    6a5c:	0901                	addi	s2,s2,0
    6a5e:	0000                	unimp
    6a60:	0501                	addi	a0,a0,0
    6a62:	0611                	addi	a2,a2,4
    6a64:	00090003          	lb	zero,0(s2)
    6a68:	0100                	addi	s0,sp,128
    6a6a:	0905                	addi	s2,s2,1
    6a6c:	0306                	slli	t1,t1,0x1
    6a6e:	0974                	addi	a3,sp,156
    6a70:	0014                	0x14
    6a72:	0301                	addi	t1,t1,0
    6a74:	0901                	addi	s2,s2,0
    6a76:	0000                	unimp
    6a78:	0501                	addi	a0,a0,0
    6a7a:	0622                	slli	a2,a2,0x8
    6a7c:	00097f03          	0x97f03
    6a80:	0100                	addi	s0,sp,128
    6a82:	0c05                	addi	s8,s8,1
    6a84:	04090303          	lb	t1,64(s2)
    6a88:	0100                	addi	s0,sp,128
    6a8a:	0e05                	addi	t3,t3,1
    6a8c:	04097e03          	0x4097e03
    6a90:	0100                	addi	s0,sp,128
    6a92:	0905                	addi	s2,s2,1
    6a94:	0306                	slli	t1,t1,0x1
    6a96:	0902                	c.slli64	s2
    6a98:	0004                	0x4
    6a9a:	0501                	addi	a0,a0,0
    6a9c:	060c                	addi	a1,sp,768
    6a9e:	04090003          	lb	zero,64(s2)
    6aa2:	0100                	addi	s0,sp,128
    6aa4:	0d05                	addi	s10,s10,1
    6aa6:	0306                	slli	t1,t1,0x1
    6aa8:	0902                	c.slli64	s2
    6aaa:	0004                	0x4
    6aac:	0301                	addi	t1,t1,0
    6aae:	0901                	addi	s2,s2,0
    6ab0:	0000                	unimp
    6ab2:	0501                	addi	a0,a0,0
    6ab4:	0309                	addi	t1,t1,2
    6ab6:	0904                	addi	s1,sp,144
    6ab8:	0000                	unimp
    6aba:	0301                	addi	t1,t1,0
    6abc:	0901                	addi	s2,s2,0
    6abe:	0000                	unimp
    6ac0:	0501                	addi	a0,a0,0
    6ac2:	030d                	addi	t1,t1,3
    6ac4:	0901                	addi	s2,s2,0
    6ac6:	0000                	unimp
    6ac8:	0501                	addi	a0,a0,0
    6aca:	0611                	addi	a2,a2,4
    6acc:	00090003          	lb	zero,0(s2)
    6ad0:	0100                	addi	s0,sp,128
    6ad2:	0905                	addi	s2,s2,1
    6ad4:	0306                	slli	t1,t1,0x1
    6ad6:	0974                	addi	a3,sp,156
    6ad8:	0014                	0x14
    6ada:	0301                	addi	t1,t1,0
    6adc:	0901                	addi	s2,s2,0
    6ade:	0000                	unimp
    6ae0:	0501                	addi	a0,a0,0
    6ae2:	0622                	slli	a2,a2,0x8
    6ae4:	00097f03          	0x97f03
    6ae8:	0100                	addi	s0,sp,128
    6aea:	0c05                	addi	s8,s8,1
    6aec:	04090303          	lb	t1,64(s2)
    6af0:	0100                	addi	s0,sp,128
    6af2:	0e05                	addi	t3,t3,1
    6af4:	04097e03          	0x4097e03
    6af8:	0100                	addi	s0,sp,128
    6afa:	0905                	addi	s2,s2,1
    6afc:	0306                	slli	t1,t1,0x1
    6afe:	0902                	c.slli64	s2
    6b00:	0004                	0x4
    6b02:	0501                	addi	a0,a0,0
    6b04:	060c                	addi	a1,sp,768
    6b06:	04090003          	lb	zero,64(s2)
    6b0a:	0100                	addi	s0,sp,128
    6b0c:	0d05                	addi	s10,s10,1
    6b0e:	0306                	slli	t1,t1,0x1
    6b10:	0902                	c.slli64	s2
    6b12:	0004                	0x4
    6b14:	0301                	addi	t1,t1,0
    6b16:	0901                	addi	s2,s2,0
    6b18:	0000                	unimp
    6b1a:	0501                	addi	a0,a0,0
    6b1c:	0309                	addi	t1,t1,2
    6b1e:	0904                	addi	s1,sp,144
    6b20:	0000                	unimp
    6b22:	0301                	addi	t1,t1,0
    6b24:	0901                	addi	s2,s2,0
    6b26:	0000                	unimp
    6b28:	0501                	addi	a0,a0,0
    6b2a:	030d                	addi	t1,t1,3
    6b2c:	0901                	addi	s2,s2,0
    6b2e:	0000                	unimp
    6b30:	0501                	addi	a0,a0,0
    6b32:	0611                	addi	a2,a2,4
    6b34:	00090003          	lb	zero,0(s2)
    6b38:	0100                	addi	s0,sp,128
    6b3a:	0905                	addi	s2,s2,1
    6b3c:	0306                	slli	t1,t1,0x1
    6b3e:	0974                	addi	a3,sp,156
    6b40:	0014                	0x14
    6b42:	0301                	addi	t1,t1,0
    6b44:	0901                	addi	s2,s2,0
    6b46:	0000                	unimp
    6b48:	0301                	addi	t1,t1,0
    6b4a:	0902                	c.slli64	s2
    6b4c:	0000                	unimp
    6b4e:	0501                	addi	a0,a0,0
    6b50:	060c                	addi	a1,sp,768
    6b52:	00090003          	lb	zero,0(s2)
    6b56:	0100                	addi	s0,sp,128
    6b58:	0d05                	addi	s10,s10,1
    6b5a:	0306                	slli	t1,t1,0x1
    6b5c:	0902                	c.slli64	s2
    6b5e:	000c                	0xc
    6b60:	0301                	addi	t1,t1,0
    6b62:	0901                	addi	s2,s2,0
    6b64:	0000                	unimp
    6b66:	0501                	addi	a0,a0,0
    6b68:	0309                	addi	t1,t1,2
    6b6a:	0904                	addi	s1,sp,144
    6b6c:	0000                	unimp
    6b6e:	0301                	addi	t1,t1,0
    6b70:	0901                	addi	s2,s2,0
    6b72:	0000                	unimp
    6b74:	0501                	addi	a0,a0,0
    6b76:	030d                	addi	t1,t1,3
    6b78:	0901                	addi	s2,s2,0
    6b7a:	0000                	unimp
    6b7c:	0501                	addi	a0,a0,0
    6b7e:	0611                	addi	a2,a2,4
    6b80:	00090003          	lb	zero,0(s2)
    6b84:	0100                	addi	s0,sp,128
    6b86:	0505                	addi	a0,a0,1
    6b88:	0306                	slli	t1,t1,0x1
    6b8a:	0904                	addi	s1,sp,144
    6b8c:	0014                	0x14
    6b8e:	0301                	addi	t1,t1,0
    6b90:	0906                	slli	s2,s2,0x1
    6b92:	0000                	unimp
    6b94:	0501                	addi	a0,a0,0
    6b96:	0003060b          	0x3060b
    6b9a:	0009                	c.nop	2
    6b9c:	0100                	addi	s0,sp,128
    6b9e:	2205                	jal	6cbe <_dtoa_r+0x6d2>
    6ba0:	04096a03          	0x4096a03
    6ba4:	0100                	addi	s0,sp,128
    6ba6:	0c05                	addi	s8,s8,1
    6ba8:	04090303          	lb	t1,64(s2)
    6bac:	0100                	addi	s0,sp,128
    6bae:	0b05                	addi	s6,s6,1
    6bb0:	04091303          	lh	t1,64(s2)
    6bb4:	0100                	addi	s0,sp,128
    6bb6:	0905                	addi	s2,s2,1
    6bb8:	0306                	slli	t1,t1,0x1
    6bba:	096a                	slli	s2,s2,0x1a
    6bbc:	0004                	0x4
    6bbe:	0301                	addi	t1,t1,0
    6bc0:	0901                	addi	s2,s2,0
    6bc2:	0000                	unimp
    6bc4:	0501                	addi	a0,a0,0
    6bc6:	060e                	slli	a2,a2,0x3
    6bc8:	00090003          	lb	zero,0(s2)
    6bcc:	0100                	addi	s0,sp,128
    6bce:	0905                	addi	s2,s2,1
    6bd0:	0306                	slli	t1,t1,0x1
    6bd2:	0902                	c.slli64	s2
    6bd4:	0004                	0x4
    6bd6:	0501                	addi	a0,a0,0
    6bd8:	060c                	addi	a1,sp,768
    6bda:	04090003          	lb	zero,64(s2)
    6bde:	0100                	addi	s0,sp,128
    6be0:	0d05                	addi	s10,s10,1
    6be2:	0306                	slli	t1,t1,0x1
    6be4:	0902                	c.slli64	s2
    6be6:	0004                	0x4
    6be8:	0301                	addi	t1,t1,0
    6bea:	0901                	addi	s2,s2,0
    6bec:	0000                	unimp
    6bee:	0501                	addi	a0,a0,0
    6bf0:	0309                	addi	t1,t1,2
    6bf2:	0904                	addi	s1,sp,144
    6bf4:	0000                	unimp
    6bf6:	0301                	addi	t1,t1,0
    6bf8:	0901                	addi	s2,s2,0
    6bfa:	0000                	unimp
    6bfc:	0501                	addi	a0,a0,0
    6bfe:	030d                	addi	t1,t1,3
    6c00:	0901                	addi	s2,s2,0
    6c02:	0000                	unimp
    6c04:	0501                	addi	a0,a0,0
    6c06:	0611                	addi	a2,a2,4
    6c08:	00090003          	lb	zero,0(s2)
    6c0c:	0100                	addi	s0,sp,128
    6c0e:	0905                	addi	s2,s2,1
    6c10:	0306                	slli	t1,t1,0x1
    6c12:	0974                	addi	a3,sp,156
    6c14:	0014                	0x14
    6c16:	0301                	addi	t1,t1,0
    6c18:	0901                	addi	s2,s2,0
    6c1a:	0000                	unimp
    6c1c:	0501                	addi	a0,a0,0
    6c1e:	0622                	slli	a2,a2,0x8
    6c20:	00097f03          	0x97f03
    6c24:	0100                	addi	s0,sp,128
    6c26:	0c05                	addi	s8,s8,1
    6c28:	04090303          	lb	t1,64(s2)
    6c2c:	0100                	addi	s0,sp,128
    6c2e:	0e05                	addi	t3,t3,1
    6c30:	04097e03          	0x4097e03
    6c34:	0100                	addi	s0,sp,128
    6c36:	0905                	addi	s2,s2,1
    6c38:	0306                	slli	t1,t1,0x1
    6c3a:	0902                	c.slli64	s2
    6c3c:	0004                	0x4
    6c3e:	0501                	addi	a0,a0,0
    6c40:	060c                	addi	a1,sp,768
    6c42:	04090003          	lb	zero,64(s2)
    6c46:	0100                	addi	s0,sp,128
    6c48:	0d05                	addi	s10,s10,1
    6c4a:	0306                	slli	t1,t1,0x1
    6c4c:	0902                	c.slli64	s2
    6c4e:	0004                	0x4
    6c50:	0301                	addi	t1,t1,0
    6c52:	0901                	addi	s2,s2,0
    6c54:	0000                	unimp
    6c56:	0501                	addi	a0,a0,0
    6c58:	0309                	addi	t1,t1,2
    6c5a:	0904                	addi	s1,sp,144
    6c5c:	0000                	unimp
    6c5e:	0301                	addi	t1,t1,0
    6c60:	0901                	addi	s2,s2,0
    6c62:	0000                	unimp
    6c64:	0501                	addi	a0,a0,0
    6c66:	030d                	addi	t1,t1,3
    6c68:	0901                	addi	s2,s2,0
    6c6a:	0000                	unimp
    6c6c:	0501                	addi	a0,a0,0
    6c6e:	0611                	addi	a2,a2,4
    6c70:	00090003          	lb	zero,0(s2)
    6c74:	0100                	addi	s0,sp,128
    6c76:	0905                	addi	s2,s2,1
    6c78:	0306                	slli	t1,t1,0x1
    6c7a:	0974                	addi	a3,sp,156
    6c7c:	0014                	0x14
    6c7e:	0301                	addi	t1,t1,0
    6c80:	0901                	addi	s2,s2,0
    6c82:	0000                	unimp
    6c84:	0501                	addi	a0,a0,0
    6c86:	0622                	slli	a2,a2,0x8
    6c88:	00097f03          	0x97f03
    6c8c:	0100                	addi	s0,sp,128
    6c8e:	0c05                	addi	s8,s8,1
    6c90:	04090303          	lb	t1,64(s2)
    6c94:	0100                	addi	s0,sp,128
    6c96:	0e05                	addi	t3,t3,1
    6c98:	04097e03          	0x4097e03
    6c9c:	0100                	addi	s0,sp,128
    6c9e:	0905                	addi	s2,s2,1
    6ca0:	0306                	slli	t1,t1,0x1
    6ca2:	0902                	c.slli64	s2
    6ca4:	0004                	0x4
    6ca6:	0501                	addi	a0,a0,0
    6ca8:	060c                	addi	a1,sp,768
    6caa:	04090003          	lb	zero,64(s2)
    6cae:	0100                	addi	s0,sp,128
    6cb0:	0d05                	addi	s10,s10,1
    6cb2:	0306                	slli	t1,t1,0x1
    6cb4:	0902                	c.slli64	s2
    6cb6:	0004                	0x4
    6cb8:	0301                	addi	t1,t1,0
    6cba:	0901                	addi	s2,s2,0
    6cbc:	0000                	unimp
    6cbe:	0501                	addi	a0,a0,0
    6cc0:	0309                	addi	t1,t1,2
    6cc2:	0904                	addi	s1,sp,144
    6cc4:	0000                	unimp
    6cc6:	0301                	addi	t1,t1,0
    6cc8:	0901                	addi	s2,s2,0
    6cca:	0000                	unimp
    6ccc:	0501                	addi	a0,a0,0
    6cce:	030d                	addi	t1,t1,3
    6cd0:	0901                	addi	s2,s2,0
    6cd2:	0000                	unimp
    6cd4:	0501                	addi	a0,a0,0
    6cd6:	0611                	addi	a2,a2,4
    6cd8:	00090003          	lb	zero,0(s2)
    6cdc:	0100                	addi	s0,sp,128
    6cde:	0905                	addi	s2,s2,1
    6ce0:	0306                	slli	t1,t1,0x1
    6ce2:	0974                	addi	a3,sp,156
    6ce4:	0014                	0x14
    6ce6:	0301                	addi	t1,t1,0
    6ce8:	0901                	addi	s2,s2,0
    6cea:	0000                	unimp
    6cec:	0501                	addi	a0,a0,0
    6cee:	0622                	slli	a2,a2,0x8
    6cf0:	00097f03          	0x97f03
    6cf4:	0100                	addi	s0,sp,128
    6cf6:	0c05                	addi	s8,s8,1
    6cf8:	04090303          	lb	t1,64(s2)
    6cfc:	0100                	addi	s0,sp,128
    6cfe:	0e05                	addi	t3,t3,1
    6d00:	04097e03          	0x4097e03
    6d04:	0100                	addi	s0,sp,128
    6d06:	0905                	addi	s2,s2,1
    6d08:	0306                	slli	t1,t1,0x1
    6d0a:	0902                	c.slli64	s2
    6d0c:	0004                	0x4
    6d0e:	0501                	addi	a0,a0,0
    6d10:	060c                	addi	a1,sp,768
    6d12:	04090003          	lb	zero,64(s2)
    6d16:	0100                	addi	s0,sp,128
    6d18:	0d05                	addi	s10,s10,1
    6d1a:	0306                	slli	t1,t1,0x1
    6d1c:	0902                	c.slli64	s2
    6d1e:	0004                	0x4
    6d20:	0301                	addi	t1,t1,0
    6d22:	0901                	addi	s2,s2,0
    6d24:	0000                	unimp
    6d26:	0501                	addi	a0,a0,0
    6d28:	0309                	addi	t1,t1,2
    6d2a:	0904                	addi	s1,sp,144
    6d2c:	0000                	unimp
    6d2e:	0301                	addi	t1,t1,0
    6d30:	0901                	addi	s2,s2,0
    6d32:	0000                	unimp
    6d34:	0501                	addi	a0,a0,0
    6d36:	030d                	addi	t1,t1,3
    6d38:	0901                	addi	s2,s2,0
    6d3a:	0000                	unimp
    6d3c:	0501                	addi	a0,a0,0
    6d3e:	0611                	addi	a2,a2,4
    6d40:	00090003          	lb	zero,0(s2)
    6d44:	0100                	addi	s0,sp,128
    6d46:	0905                	addi	s2,s2,1
    6d48:	0306                	slli	t1,t1,0x1
    6d4a:	0974                	addi	a3,sp,156
    6d4c:	0014                	0x14
    6d4e:	0301                	addi	t1,t1,0
    6d50:	0901                	addi	s2,s2,0
    6d52:	0000                	unimp
    6d54:	0501                	addi	a0,a0,0
    6d56:	0622                	slli	a2,a2,0x8
    6d58:	00097f03          	0x97f03
    6d5c:	0100                	addi	s0,sp,128
    6d5e:	0c05                	addi	s8,s8,1
    6d60:	04090303          	lb	t1,64(s2)
    6d64:	0100                	addi	s0,sp,128
    6d66:	0e05                	addi	t3,t3,1
    6d68:	04097e03          	0x4097e03
    6d6c:	0100                	addi	s0,sp,128
    6d6e:	0905                	addi	s2,s2,1
    6d70:	0306                	slli	t1,t1,0x1
    6d72:	0902                	c.slli64	s2
    6d74:	0004                	0x4
    6d76:	0501                	addi	a0,a0,0
    6d78:	060c                	addi	a1,sp,768
    6d7a:	04090003          	lb	zero,64(s2)
    6d7e:	0100                	addi	s0,sp,128
    6d80:	0d05                	addi	s10,s10,1
    6d82:	0306                	slli	t1,t1,0x1
    6d84:	0902                	c.slli64	s2
    6d86:	0004                	0x4
    6d88:	0301                	addi	t1,t1,0
    6d8a:	0901                	addi	s2,s2,0
    6d8c:	0000                	unimp
    6d8e:	0501                	addi	a0,a0,0
    6d90:	0309                	addi	t1,t1,2
    6d92:	0904                	addi	s1,sp,144
    6d94:	0000                	unimp
    6d96:	0301                	addi	t1,t1,0
    6d98:	0901                	addi	s2,s2,0
    6d9a:	0000                	unimp
    6d9c:	0501                	addi	a0,a0,0
    6d9e:	030d                	addi	t1,t1,3
    6da0:	0901                	addi	s2,s2,0
    6da2:	0000                	unimp
    6da4:	0501                	addi	a0,a0,0
    6da6:	0611                	addi	a2,a2,4
    6da8:	00090003          	lb	zero,0(s2)
    6dac:	0100                	addi	s0,sp,128
    6dae:	0905                	addi	s2,s2,1
    6db0:	0306                	slli	t1,t1,0x1
    6db2:	0974                	addi	a3,sp,156
    6db4:	0014                	0x14
    6db6:	0301                	addi	t1,t1,0
    6db8:	0901                	addi	s2,s2,0
    6dba:	0000                	unimp
    6dbc:	0501                	addi	a0,a0,0
    6dbe:	0622                	slli	a2,a2,0x8
    6dc0:	00097f03          	0x97f03
    6dc4:	0100                	addi	s0,sp,128
    6dc6:	0c05                	addi	s8,s8,1
    6dc8:	04090303          	lb	t1,64(s2)
    6dcc:	0100                	addi	s0,sp,128
    6dce:	0e05                	addi	t3,t3,1
    6dd0:	04097e03          	0x4097e03
    6dd4:	0100                	addi	s0,sp,128
    6dd6:	0905                	addi	s2,s2,1
    6dd8:	0306                	slli	t1,t1,0x1
    6dda:	0902                	c.slli64	s2
    6ddc:	0004                	0x4
    6dde:	0501                	addi	a0,a0,0
    6de0:	060c                	addi	a1,sp,768
    6de2:	04090003          	lb	zero,64(s2)
    6de6:	0100                	addi	s0,sp,128
    6de8:	0d05                	addi	s10,s10,1
    6dea:	0306                	slli	t1,t1,0x1
    6dec:	0902                	c.slli64	s2
    6dee:	0004                	0x4
    6df0:	0301                	addi	t1,t1,0
    6df2:	0901                	addi	s2,s2,0
    6df4:	0000                	unimp
    6df6:	0501                	addi	a0,a0,0
    6df8:	0309                	addi	t1,t1,2
    6dfa:	0904                	addi	s1,sp,144
    6dfc:	0000                	unimp
    6dfe:	0301                	addi	t1,t1,0
    6e00:	0901                	addi	s2,s2,0
    6e02:	0000                	unimp
    6e04:	0501                	addi	a0,a0,0
    6e06:	030d                	addi	t1,t1,3
    6e08:	0901                	addi	s2,s2,0
    6e0a:	0000                	unimp
    6e0c:	0501                	addi	a0,a0,0
    6e0e:	0611                	addi	a2,a2,4
    6e10:	00090003          	lb	zero,0(s2)
    6e14:	0100                	addi	s0,sp,128
    6e16:	0905                	addi	s2,s2,1
    6e18:	0306                	slli	t1,t1,0x1
    6e1a:	0974                	addi	a3,sp,156
    6e1c:	0014                	0x14
    6e1e:	0301                	addi	t1,t1,0
    6e20:	0901                	addi	s2,s2,0
    6e22:	0000                	unimp
    6e24:	0501                	addi	a0,a0,0
    6e26:	0622                	slli	a2,a2,0x8
    6e28:	00097f03          	0x97f03
    6e2c:	0100                	addi	s0,sp,128
    6e2e:	0c05                	addi	s8,s8,1
    6e30:	04090303          	lb	t1,64(s2)
    6e34:	0100                	addi	s0,sp,128
    6e36:	0e05                	addi	t3,t3,1
    6e38:	04097e03          	0x4097e03
    6e3c:	0100                	addi	s0,sp,128
    6e3e:	0905                	addi	s2,s2,1
    6e40:	0306                	slli	t1,t1,0x1
    6e42:	0902                	c.slli64	s2
    6e44:	0004                	0x4
    6e46:	0501                	addi	a0,a0,0
    6e48:	060c                	addi	a1,sp,768
    6e4a:	04090003          	lb	zero,64(s2)
    6e4e:	0100                	addi	s0,sp,128
    6e50:	0d05                	addi	s10,s10,1
    6e52:	0306                	slli	t1,t1,0x1
    6e54:	0902                	c.slli64	s2
    6e56:	0004                	0x4
    6e58:	0301                	addi	t1,t1,0
    6e5a:	0901                	addi	s2,s2,0
    6e5c:	0000                	unimp
    6e5e:	0501                	addi	a0,a0,0
    6e60:	0309                	addi	t1,t1,2
    6e62:	0904                	addi	s1,sp,144
    6e64:	0000                	unimp
    6e66:	0301                	addi	t1,t1,0
    6e68:	0901                	addi	s2,s2,0
    6e6a:	0000                	unimp
    6e6c:	0501                	addi	a0,a0,0
    6e6e:	030d                	addi	t1,t1,3
    6e70:	0901                	addi	s2,s2,0
    6e72:	0000                	unimp
    6e74:	0501                	addi	a0,a0,0
    6e76:	0611                	addi	a2,a2,4
    6e78:	00090003          	lb	zero,0(s2)
    6e7c:	0100                	addi	s0,sp,128
    6e7e:	0905                	addi	s2,s2,1
    6e80:	0306                	slli	t1,t1,0x1
    6e82:	0974                	addi	a3,sp,156
    6e84:	0014                	0x14
    6e86:	0301                	addi	t1,t1,0
    6e88:	0901                	addi	s2,s2,0
    6e8a:	0000                	unimp
    6e8c:	0301                	addi	t1,t1,0
    6e8e:	0902                	c.slli64	s2
    6e90:	0000                	unimp
    6e92:	0501                	addi	a0,a0,0
    6e94:	060c                	addi	a1,sp,768
    6e96:	00090003          	lb	zero,0(s2)
    6e9a:	0100                	addi	s0,sp,128
    6e9c:	0d05                	addi	s10,s10,1
    6e9e:	0306                	slli	t1,t1,0x1
    6ea0:	0902                	c.slli64	s2
    6ea2:	000c                	0xc
    6ea4:	0301                	addi	t1,t1,0
    6ea6:	0901                	addi	s2,s2,0
    6ea8:	0000                	unimp
    6eaa:	0501                	addi	a0,a0,0
    6eac:	0309                	addi	t1,t1,2
    6eae:	0904                	addi	s1,sp,144
    6eb0:	0000                	unimp
    6eb2:	0301                	addi	t1,t1,0
    6eb4:	0901                	addi	s2,s2,0
    6eb6:	0000                	unimp
    6eb8:	0501                	addi	a0,a0,0
    6eba:	030d                	addi	t1,t1,3
    6ebc:	0901                	addi	s2,s2,0
    6ebe:	0000                	unimp
    6ec0:	0501                	addi	a0,a0,0
    6ec2:	0611                	addi	a2,a2,4
    6ec4:	00090003          	lb	zero,0(s2)
    6ec8:	0100                	addi	s0,sp,128
    6eca:	0505                	addi	a0,a0,1
    6ecc:	0306                	slli	t1,t1,0x1
    6ece:	0904                	addi	s1,sp,144
    6ed0:	0014                	0x14
    6ed2:	0301                	addi	t1,t1,0
    6ed4:	00000907          	0x907
    6ed8:	0301                	addi	t1,t1,0
    6eda:	0906                	slli	s2,s2,0x1
    6edc:	0000                	unimp
    6ede:	0501                	addi	a0,a0,0
    6ee0:	0621                	addi	a2,a2,8
    6ee2:	00090003          	lb	zero,0(s2)
    6ee6:	0100                	addi	s0,sp,128
    6ee8:	0505                	addi	a0,a0,1
    6eea:	0306                	slli	t1,t1,0x1
    6eec:	0906                	slli	s2,s2,0x1
    6eee:	0004                	0x4
    6ef0:	0501                	addi	a0,a0,0
    6ef2:	0622                	slli	a2,a2,0x8
    6ef4:	00095d03          	lhu	s10,0(s2)
    6ef8:	0100                	addi	s0,sp,128
    6efa:	0b05                	addi	s6,s6,1
    6efc:	04091503          	lh	a0,64(s2)
    6f00:	0100                	addi	s0,sp,128
    6f02:	0c05                	addi	s8,s8,1
    6f04:	04090e03          	lb	t3,64(s2)
    6f08:	0100                	addi	s0,sp,128
    6f0a:	04096003          	0x4096003
    6f0e:	0100                	addi	s0,sp,128
    6f10:	04092003          	lw	zero,64(s2)
    6f14:	0100                	addi	s0,sp,128
    6f16:	0505                	addi	a0,a0,1
    6f18:	0306                	slli	t1,t1,0x1
    6f1a:	0972                	slli	s2,s2,0x1c
    6f1c:	0004                	0x4
    6f1e:	0301                	addi	t1,t1,0
    6f20:	00000967          	jalr	s2,zero # 0 <_start>
    6f24:	0301                	addi	t1,t1,0
    6f26:	0902                	c.slli64	s2
    6f28:	0000                	unimp
    6f2a:	0501                	addi	a0,a0,0
    6f2c:	0309                	addi	t1,t1,2
    6f2e:	0902                	c.slli64	s2
    6f30:	0000                	unimp
    6f32:	0301                	addi	t1,t1,0
    6f34:	0901                	addi	s2,s2,0
    6f36:	0000                	unimp
    6f38:	0501                	addi	a0,a0,0
    6f3a:	060e                	slli	a2,a2,0x3
    6f3c:	00090003          	lb	zero,0(s2)
    6f40:	0100                	addi	s0,sp,128
    6f42:	0905                	addi	s2,s2,1
    6f44:	0306                	slli	t1,t1,0x1
    6f46:	0902                	c.slli64	s2
    6f48:	0004                	0x4
    6f4a:	0501                	addi	a0,a0,0
    6f4c:	060c                	addi	a1,sp,768
    6f4e:	04090003          	lb	zero,64(s2)
    6f52:	0100                	addi	s0,sp,128
    6f54:	0d05                	addi	s10,s10,1
    6f56:	0306                	slli	t1,t1,0x1
    6f58:	0902                	c.slli64	s2
    6f5a:	0004                	0x4
    6f5c:	0301                	addi	t1,t1,0
    6f5e:	0901                	addi	s2,s2,0
    6f60:	0000                	unimp
    6f62:	0501                	addi	a0,a0,0
    6f64:	0309                	addi	t1,t1,2
    6f66:	0904                	addi	s1,sp,144
    6f68:	0000                	unimp
    6f6a:	0301                	addi	t1,t1,0
    6f6c:	0901                	addi	s2,s2,0
    6f6e:	0000                	unimp
    6f70:	0501                	addi	a0,a0,0
    6f72:	030d                	addi	t1,t1,3
    6f74:	0901                	addi	s2,s2,0
    6f76:	0000                	unimp
    6f78:	0501                	addi	a0,a0,0
    6f7a:	0611                	addi	a2,a2,4
    6f7c:	00090003          	lb	zero,0(s2)
    6f80:	0100                	addi	s0,sp,128
    6f82:	0905                	addi	s2,s2,1
    6f84:	0306                	slli	t1,t1,0x1
    6f86:	0974                	addi	a3,sp,156
    6f88:	0014                	0x14
    6f8a:	0301                	addi	t1,t1,0
    6f8c:	0901                	addi	s2,s2,0
    6f8e:	0000                	unimp
    6f90:	0501                	addi	a0,a0,0
    6f92:	0622                	slli	a2,a2,0x8
    6f94:	00097f03          	0x97f03
    6f98:	0100                	addi	s0,sp,128
    6f9a:	0c05                	addi	s8,s8,1
    6f9c:	04090303          	lb	t1,64(s2)
    6fa0:	0100                	addi	s0,sp,128
    6fa2:	0e05                	addi	t3,t3,1
    6fa4:	04097e03          	0x4097e03
    6fa8:	0100                	addi	s0,sp,128
    6faa:	0905                	addi	s2,s2,1
    6fac:	0306                	slli	t1,t1,0x1
    6fae:	0902                	c.slli64	s2
    6fb0:	0004                	0x4
    6fb2:	0501                	addi	a0,a0,0
    6fb4:	060c                	addi	a1,sp,768
    6fb6:	04090003          	lb	zero,64(s2)
    6fba:	0100                	addi	s0,sp,128
    6fbc:	0d05                	addi	s10,s10,1
    6fbe:	0306                	slli	t1,t1,0x1
    6fc0:	0902                	c.slli64	s2
    6fc2:	0004                	0x4
    6fc4:	0301                	addi	t1,t1,0
    6fc6:	0901                	addi	s2,s2,0
    6fc8:	0000                	unimp
    6fca:	0501                	addi	a0,a0,0
    6fcc:	0309                	addi	t1,t1,2
    6fce:	0904                	addi	s1,sp,144
    6fd0:	0000                	unimp
    6fd2:	0301                	addi	t1,t1,0
    6fd4:	0901                	addi	s2,s2,0
    6fd6:	0000                	unimp
    6fd8:	0501                	addi	a0,a0,0
    6fda:	030d                	addi	t1,t1,3
    6fdc:	0901                	addi	s2,s2,0
    6fde:	0000                	unimp
    6fe0:	0501                	addi	a0,a0,0
    6fe2:	0611                	addi	a2,a2,4
    6fe4:	00090003          	lb	zero,0(s2)
    6fe8:	0100                	addi	s0,sp,128
    6fea:	0905                	addi	s2,s2,1
    6fec:	0306                	slli	t1,t1,0x1
    6fee:	0974                	addi	a3,sp,156
    6ff0:	0014                	0x14
    6ff2:	0301                	addi	t1,t1,0
    6ff4:	0901                	addi	s2,s2,0
    6ff6:	0000                	unimp
    6ff8:	0501                	addi	a0,a0,0
    6ffa:	0622                	slli	a2,a2,0x8
    6ffc:	00097f03          	0x97f03
    7000:	0100                	addi	s0,sp,128
    7002:	0c05                	addi	s8,s8,1
    7004:	04090303          	lb	t1,64(s2)
    7008:	0100                	addi	s0,sp,128
    700a:	0e05                	addi	t3,t3,1
    700c:	04097e03          	0x4097e03
    7010:	0100                	addi	s0,sp,128
    7012:	0905                	addi	s2,s2,1
    7014:	0306                	slli	t1,t1,0x1
    7016:	0902                	c.slli64	s2
    7018:	0004                	0x4
    701a:	0501                	addi	a0,a0,0
    701c:	060c                	addi	a1,sp,768
    701e:	04090003          	lb	zero,64(s2)
    7022:	0100                	addi	s0,sp,128
    7024:	0d05                	addi	s10,s10,1
    7026:	0306                	slli	t1,t1,0x1
    7028:	0902                	c.slli64	s2
    702a:	0004                	0x4
    702c:	0301                	addi	t1,t1,0
    702e:	0901                	addi	s2,s2,0
    7030:	0000                	unimp
    7032:	0501                	addi	a0,a0,0
    7034:	0309                	addi	t1,t1,2
    7036:	0904                	addi	s1,sp,144
    7038:	0000                	unimp
    703a:	0301                	addi	t1,t1,0
    703c:	0901                	addi	s2,s2,0
    703e:	0000                	unimp
    7040:	0501                	addi	a0,a0,0
    7042:	030d                	addi	t1,t1,3
    7044:	0901                	addi	s2,s2,0
    7046:	0000                	unimp
    7048:	0501                	addi	a0,a0,0
    704a:	0611                	addi	a2,a2,4
    704c:	00090003          	lb	zero,0(s2)
    7050:	0100                	addi	s0,sp,128
    7052:	0905                	addi	s2,s2,1
    7054:	0306                	slli	t1,t1,0x1
    7056:	0974                	addi	a3,sp,156
    7058:	0014                	0x14
    705a:	0301                	addi	t1,t1,0
    705c:	0901                	addi	s2,s2,0
    705e:	0000                	unimp
    7060:	0501                	addi	a0,a0,0
    7062:	0622                	slli	a2,a2,0x8
    7064:	00097f03          	0x97f03
    7068:	0100                	addi	s0,sp,128
    706a:	0c05                	addi	s8,s8,1
    706c:	04090303          	lb	t1,64(s2)
    7070:	0100                	addi	s0,sp,128
    7072:	0e05                	addi	t3,t3,1
    7074:	04097e03          	0x4097e03
    7078:	0100                	addi	s0,sp,128
    707a:	0905                	addi	s2,s2,1
    707c:	0306                	slli	t1,t1,0x1
    707e:	0902                	c.slli64	s2
    7080:	0004                	0x4
    7082:	0501                	addi	a0,a0,0
    7084:	060c                	addi	a1,sp,768
    7086:	04090003          	lb	zero,64(s2)
    708a:	0100                	addi	s0,sp,128
    708c:	0d05                	addi	s10,s10,1
    708e:	0306                	slli	t1,t1,0x1
    7090:	0902                	c.slli64	s2
    7092:	0004                	0x4
    7094:	0301                	addi	t1,t1,0
    7096:	0901                	addi	s2,s2,0
    7098:	0000                	unimp
    709a:	0501                	addi	a0,a0,0
    709c:	0309                	addi	t1,t1,2
    709e:	0904                	addi	s1,sp,144
    70a0:	0000                	unimp
    70a2:	0301                	addi	t1,t1,0
    70a4:	0901                	addi	s2,s2,0
    70a6:	0000                	unimp
    70a8:	0501                	addi	a0,a0,0
    70aa:	030d                	addi	t1,t1,3
    70ac:	0901                	addi	s2,s2,0
    70ae:	0000                	unimp
    70b0:	0501                	addi	a0,a0,0
    70b2:	0611                	addi	a2,a2,4
    70b4:	00090003          	lb	zero,0(s2)
    70b8:	0100                	addi	s0,sp,128
    70ba:	0905                	addi	s2,s2,1
    70bc:	0306                	slli	t1,t1,0x1
    70be:	0974                	addi	a3,sp,156
    70c0:	0014                	0x14
    70c2:	0301                	addi	t1,t1,0
    70c4:	0901                	addi	s2,s2,0
    70c6:	0000                	unimp
    70c8:	0501                	addi	a0,a0,0
    70ca:	0622                	slli	a2,a2,0x8
    70cc:	00097f03          	0x97f03
    70d0:	0100                	addi	s0,sp,128
    70d2:	0c05                	addi	s8,s8,1
    70d4:	04090303          	lb	t1,64(s2)
    70d8:	0100                	addi	s0,sp,128
    70da:	0e05                	addi	t3,t3,1
    70dc:	04097e03          	0x4097e03
    70e0:	0100                	addi	s0,sp,128
    70e2:	0905                	addi	s2,s2,1
    70e4:	0306                	slli	t1,t1,0x1
    70e6:	0902                	c.slli64	s2
    70e8:	0004                	0x4
    70ea:	0501                	addi	a0,a0,0
    70ec:	060c                	addi	a1,sp,768
    70ee:	04090003          	lb	zero,64(s2)
    70f2:	0100                	addi	s0,sp,128
    70f4:	0d05                	addi	s10,s10,1
    70f6:	0306                	slli	t1,t1,0x1
    70f8:	0902                	c.slli64	s2
    70fa:	0004                	0x4
    70fc:	0301                	addi	t1,t1,0
    70fe:	0901                	addi	s2,s2,0
    7100:	0000                	unimp
    7102:	0501                	addi	a0,a0,0
    7104:	0309                	addi	t1,t1,2
    7106:	0904                	addi	s1,sp,144
    7108:	0000                	unimp
    710a:	0301                	addi	t1,t1,0
    710c:	0901                	addi	s2,s2,0
    710e:	0000                	unimp
    7110:	0501                	addi	a0,a0,0
    7112:	030d                	addi	t1,t1,3
    7114:	0901                	addi	s2,s2,0
    7116:	0000                	unimp
    7118:	0501                	addi	a0,a0,0
    711a:	0611                	addi	a2,a2,4
    711c:	00090003          	lb	zero,0(s2)
    7120:	0100                	addi	s0,sp,128
    7122:	0905                	addi	s2,s2,1
    7124:	0306                	slli	t1,t1,0x1
    7126:	0974                	addi	a3,sp,156
    7128:	0014                	0x14
    712a:	0301                	addi	t1,t1,0
    712c:	0901                	addi	s2,s2,0
    712e:	0000                	unimp
    7130:	0501                	addi	a0,a0,0
    7132:	0622                	slli	a2,a2,0x8
    7134:	00097f03          	0x97f03
    7138:	0100                	addi	s0,sp,128
    713a:	0c05                	addi	s8,s8,1
    713c:	04090303          	lb	t1,64(s2)
    7140:	0100                	addi	s0,sp,128
    7142:	0e05                	addi	t3,t3,1
    7144:	04097e03          	0x4097e03
    7148:	0100                	addi	s0,sp,128
    714a:	0905                	addi	s2,s2,1
    714c:	0306                	slli	t1,t1,0x1
    714e:	0902                	c.slli64	s2
    7150:	0004                	0x4
    7152:	0501                	addi	a0,a0,0
    7154:	060c                	addi	a1,sp,768
    7156:	04090003          	lb	zero,64(s2)
    715a:	0100                	addi	s0,sp,128
    715c:	0d05                	addi	s10,s10,1
    715e:	0306                	slli	t1,t1,0x1
    7160:	0902                	c.slli64	s2
    7162:	0004                	0x4
    7164:	0301                	addi	t1,t1,0
    7166:	0901                	addi	s2,s2,0
    7168:	0000                	unimp
    716a:	0501                	addi	a0,a0,0
    716c:	0309                	addi	t1,t1,2
    716e:	0904                	addi	s1,sp,144
    7170:	0000                	unimp
    7172:	0301                	addi	t1,t1,0
    7174:	0901                	addi	s2,s2,0
    7176:	0000                	unimp
    7178:	0501                	addi	a0,a0,0
    717a:	030d                	addi	t1,t1,3
    717c:	0901                	addi	s2,s2,0
    717e:	0000                	unimp
    7180:	0501                	addi	a0,a0,0
    7182:	0611                	addi	a2,a2,4
    7184:	00090003          	lb	zero,0(s2)
    7188:	0100                	addi	s0,sp,128
    718a:	0905                	addi	s2,s2,1
    718c:	0306                	slli	t1,t1,0x1
    718e:	0974                	addi	a3,sp,156
    7190:	0014                	0x14
    7192:	0301                	addi	t1,t1,0
    7194:	0901                	addi	s2,s2,0
    7196:	0000                	unimp
    7198:	0501                	addi	a0,a0,0
    719a:	0622                	slli	a2,a2,0x8
    719c:	00097f03          	0x97f03
    71a0:	0100                	addi	s0,sp,128
    71a2:	0c05                	addi	s8,s8,1
    71a4:	04090303          	lb	t1,64(s2)
    71a8:	0100                	addi	s0,sp,128
    71aa:	0e05                	addi	t3,t3,1
    71ac:	04097e03          	0x4097e03
    71b0:	0100                	addi	s0,sp,128
    71b2:	0905                	addi	s2,s2,1
    71b4:	0306                	slli	t1,t1,0x1
    71b6:	0902                	c.slli64	s2
    71b8:	0004                	0x4
    71ba:	0501                	addi	a0,a0,0
    71bc:	060c                	addi	a1,sp,768
    71be:	04090003          	lb	zero,64(s2)
    71c2:	0100                	addi	s0,sp,128
    71c4:	0d05                	addi	s10,s10,1
    71c6:	0306                	slli	t1,t1,0x1
    71c8:	0902                	c.slli64	s2
    71ca:	0004                	0x4
    71cc:	0301                	addi	t1,t1,0
    71ce:	0901                	addi	s2,s2,0
    71d0:	0000                	unimp
    71d2:	0501                	addi	a0,a0,0
    71d4:	0309                	addi	t1,t1,2
    71d6:	0904                	addi	s1,sp,144
    71d8:	0000                	unimp
    71da:	0301                	addi	t1,t1,0
    71dc:	0901                	addi	s2,s2,0
    71de:	0000                	unimp
    71e0:	0501                	addi	a0,a0,0
    71e2:	030d                	addi	t1,t1,3
    71e4:	0901                	addi	s2,s2,0
    71e6:	0000                	unimp
    71e8:	0501                	addi	a0,a0,0
    71ea:	0611                	addi	a2,a2,4
    71ec:	00090003          	lb	zero,0(s2)
    71f0:	0100                	addi	s0,sp,128
    71f2:	0905                	addi	s2,s2,1
    71f4:	0306                	slli	t1,t1,0x1
    71f6:	0974                	addi	a3,sp,156
    71f8:	0014                	0x14
    71fa:	0301                	addi	t1,t1,0
    71fc:	0901                	addi	s2,s2,0
    71fe:	0000                	unimp
    7200:	0301                	addi	t1,t1,0
    7202:	0902                	c.slli64	s2
    7204:	0000                	unimp
    7206:	0501                	addi	a0,a0,0
    7208:	060c                	addi	a1,sp,768
    720a:	00090003          	lb	zero,0(s2)
    720e:	0100                	addi	s0,sp,128
    7210:	0d05                	addi	s10,s10,1
    7212:	0306                	slli	t1,t1,0x1
    7214:	0902                	c.slli64	s2
    7216:	000c                	0xc
    7218:	0301                	addi	t1,t1,0
    721a:	0901                	addi	s2,s2,0
    721c:	0000                	unimp
    721e:	0501                	addi	a0,a0,0
    7220:	0309                	addi	t1,t1,2
    7222:	0904                	addi	s1,sp,144
    7224:	0000                	unimp
    7226:	0301                	addi	t1,t1,0
    7228:	0901                	addi	s2,s2,0
    722a:	0000                	unimp
    722c:	0501                	addi	a0,a0,0
    722e:	030d                	addi	t1,t1,3
    7230:	0901                	addi	s2,s2,0
    7232:	0000                	unimp
    7234:	0501                	addi	a0,a0,0
    7236:	0611                	addi	a2,a2,4
    7238:	00090003          	lb	zero,0(s2)
    723c:	0100                	addi	s0,sp,128
    723e:	0505                	addi	a0,a0,1
    7240:	0306                	slli	t1,t1,0x1
    7242:	0904                	addi	s1,sp,144
    7244:	0014                	0x14
    7246:	0301                	addi	t1,t1,0
    7248:	0906                	slli	s2,s2,0x1
    724a:	0000                	unimp
    724c:	0501                	addi	a0,a0,0
    724e:	0003060b          	0x3060b
    7252:	0009                	c.nop	2
    7254:	0100                	addi	s0,sp,128
    7256:	2205                	jal	7376 <_dtoa_r+0xd8a>
    7258:	04096a03          	0x4096a03
    725c:	0100                	addi	s0,sp,128
    725e:	0c05                	addi	s8,s8,1
    7260:	04090303          	lb	t1,64(s2)
    7264:	0100                	addi	s0,sp,128
    7266:	0b05                	addi	s6,s6,1
    7268:	04091303          	lh	t1,64(s2)
    726c:	0100                	addi	s0,sp,128
    726e:	0905                	addi	s2,s2,1
    7270:	0306                	slli	t1,t1,0x1
    7272:	096a                	slli	s2,s2,0x1a
    7274:	0004                	0x4
    7276:	0301                	addi	t1,t1,0
    7278:	0901                	addi	s2,s2,0
    727a:	0000                	unimp
    727c:	0501                	addi	a0,a0,0
    727e:	060e                	slli	a2,a2,0x3
    7280:	00090003          	lb	zero,0(s2)
    7284:	0100                	addi	s0,sp,128
    7286:	0905                	addi	s2,s2,1
    7288:	0306                	slli	t1,t1,0x1
    728a:	0902                	c.slli64	s2
    728c:	0004                	0x4
    728e:	0501                	addi	a0,a0,0
    7290:	060c                	addi	a1,sp,768
    7292:	04090003          	lb	zero,64(s2)
    7296:	0100                	addi	s0,sp,128
    7298:	0d05                	addi	s10,s10,1
    729a:	0306                	slli	t1,t1,0x1
    729c:	0902                	c.slli64	s2
    729e:	0004                	0x4
    72a0:	0301                	addi	t1,t1,0
    72a2:	0901                	addi	s2,s2,0
    72a4:	0000                	unimp
    72a6:	0501                	addi	a0,a0,0
    72a8:	0309                	addi	t1,t1,2
    72aa:	0904                	addi	s1,sp,144
    72ac:	0000                	unimp
    72ae:	0301                	addi	t1,t1,0
    72b0:	0901                	addi	s2,s2,0
    72b2:	0000                	unimp
    72b4:	0501                	addi	a0,a0,0
    72b6:	030d                	addi	t1,t1,3
    72b8:	0901                	addi	s2,s2,0
    72ba:	0000                	unimp
    72bc:	0501                	addi	a0,a0,0
    72be:	0611                	addi	a2,a2,4
    72c0:	00090003          	lb	zero,0(s2)
    72c4:	0100                	addi	s0,sp,128
    72c6:	0905                	addi	s2,s2,1
    72c8:	0306                	slli	t1,t1,0x1
    72ca:	0974                	addi	a3,sp,156
    72cc:	0014                	0x14
    72ce:	0301                	addi	t1,t1,0
    72d0:	0901                	addi	s2,s2,0
    72d2:	0000                	unimp
    72d4:	0501                	addi	a0,a0,0
    72d6:	0622                	slli	a2,a2,0x8
    72d8:	00097f03          	0x97f03
    72dc:	0100                	addi	s0,sp,128
    72de:	0c05                	addi	s8,s8,1
    72e0:	04090303          	lb	t1,64(s2)
    72e4:	0100                	addi	s0,sp,128
    72e6:	0e05                	addi	t3,t3,1
    72e8:	04097e03          	0x4097e03
    72ec:	0100                	addi	s0,sp,128
    72ee:	0905                	addi	s2,s2,1
    72f0:	0306                	slli	t1,t1,0x1
    72f2:	0902                	c.slli64	s2
    72f4:	0004                	0x4
    72f6:	0501                	addi	a0,a0,0
    72f8:	060c                	addi	a1,sp,768
    72fa:	04090003          	lb	zero,64(s2)
    72fe:	0100                	addi	s0,sp,128
    7300:	0d05                	addi	s10,s10,1
    7302:	0306                	slli	t1,t1,0x1
    7304:	0902                	c.slli64	s2
    7306:	0004                	0x4
    7308:	0301                	addi	t1,t1,0
    730a:	0901                	addi	s2,s2,0
    730c:	0000                	unimp
    730e:	0501                	addi	a0,a0,0
    7310:	0309                	addi	t1,t1,2
    7312:	0904                	addi	s1,sp,144
    7314:	0000                	unimp
    7316:	0301                	addi	t1,t1,0
    7318:	0901                	addi	s2,s2,0
    731a:	0000                	unimp
    731c:	0501                	addi	a0,a0,0
    731e:	030d                	addi	t1,t1,3
    7320:	0901                	addi	s2,s2,0
    7322:	0000                	unimp
    7324:	0501                	addi	a0,a0,0
    7326:	0611                	addi	a2,a2,4
    7328:	00090003          	lb	zero,0(s2)
    732c:	0100                	addi	s0,sp,128
    732e:	0905                	addi	s2,s2,1
    7330:	0306                	slli	t1,t1,0x1
    7332:	0974                	addi	a3,sp,156
    7334:	0014                	0x14
    7336:	0301                	addi	t1,t1,0
    7338:	0901                	addi	s2,s2,0
    733a:	0000                	unimp
    733c:	0501                	addi	a0,a0,0
    733e:	0622                	slli	a2,a2,0x8
    7340:	00097f03          	0x97f03
    7344:	0100                	addi	s0,sp,128
    7346:	0c05                	addi	s8,s8,1
    7348:	04090303          	lb	t1,64(s2)
    734c:	0100                	addi	s0,sp,128
    734e:	0e05                	addi	t3,t3,1
    7350:	04097e03          	0x4097e03
    7354:	0100                	addi	s0,sp,128
    7356:	0905                	addi	s2,s2,1
    7358:	0306                	slli	t1,t1,0x1
    735a:	0902                	c.slli64	s2
    735c:	0004                	0x4
    735e:	0501                	addi	a0,a0,0
    7360:	060c                	addi	a1,sp,768
    7362:	04090003          	lb	zero,64(s2)
    7366:	0100                	addi	s0,sp,128
    7368:	0d05                	addi	s10,s10,1
    736a:	0306                	slli	t1,t1,0x1
    736c:	0902                	c.slli64	s2
    736e:	0004                	0x4
    7370:	0301                	addi	t1,t1,0
    7372:	0901                	addi	s2,s2,0
    7374:	0000                	unimp
    7376:	0501                	addi	a0,a0,0
    7378:	0309                	addi	t1,t1,2
    737a:	0904                	addi	s1,sp,144
    737c:	0000                	unimp
    737e:	0301                	addi	t1,t1,0
    7380:	0901                	addi	s2,s2,0
    7382:	0000                	unimp
    7384:	0501                	addi	a0,a0,0
    7386:	030d                	addi	t1,t1,3
    7388:	0901                	addi	s2,s2,0
    738a:	0000                	unimp
    738c:	0501                	addi	a0,a0,0
    738e:	0611                	addi	a2,a2,4
    7390:	00090003          	lb	zero,0(s2)
    7394:	0100                	addi	s0,sp,128
    7396:	0905                	addi	s2,s2,1
    7398:	0306                	slli	t1,t1,0x1
    739a:	0974                	addi	a3,sp,156
    739c:	0014                	0x14
    739e:	0301                	addi	t1,t1,0
    73a0:	0901                	addi	s2,s2,0
    73a2:	0000                	unimp
    73a4:	0501                	addi	a0,a0,0
    73a6:	0622                	slli	a2,a2,0x8
    73a8:	00097f03          	0x97f03
    73ac:	0100                	addi	s0,sp,128
    73ae:	0c05                	addi	s8,s8,1
    73b0:	04090303          	lb	t1,64(s2)
    73b4:	0100                	addi	s0,sp,128
    73b6:	0e05                	addi	t3,t3,1
    73b8:	04097e03          	0x4097e03
    73bc:	0100                	addi	s0,sp,128
    73be:	0905                	addi	s2,s2,1
    73c0:	0306                	slli	t1,t1,0x1
    73c2:	0902                	c.slli64	s2
    73c4:	0004                	0x4
    73c6:	0501                	addi	a0,a0,0
    73c8:	060c                	addi	a1,sp,768
    73ca:	04090003          	lb	zero,64(s2)
    73ce:	0100                	addi	s0,sp,128
    73d0:	0d05                	addi	s10,s10,1
    73d2:	0306                	slli	t1,t1,0x1
    73d4:	0902                	c.slli64	s2
    73d6:	0004                	0x4
    73d8:	0301                	addi	t1,t1,0
    73da:	0901                	addi	s2,s2,0
    73dc:	0000                	unimp
    73de:	0501                	addi	a0,a0,0
    73e0:	0309                	addi	t1,t1,2
    73e2:	0904                	addi	s1,sp,144
    73e4:	0000                	unimp
    73e6:	0301                	addi	t1,t1,0
    73e8:	0901                	addi	s2,s2,0
    73ea:	0000                	unimp
    73ec:	0501                	addi	a0,a0,0
    73ee:	030d                	addi	t1,t1,3
    73f0:	0901                	addi	s2,s2,0
    73f2:	0000                	unimp
    73f4:	0501                	addi	a0,a0,0
    73f6:	0611                	addi	a2,a2,4
    73f8:	00090003          	lb	zero,0(s2)
    73fc:	0100                	addi	s0,sp,128
    73fe:	0905                	addi	s2,s2,1
    7400:	0306                	slli	t1,t1,0x1
    7402:	0974                	addi	a3,sp,156
    7404:	0014                	0x14
    7406:	0301                	addi	t1,t1,0
    7408:	0901                	addi	s2,s2,0
    740a:	0000                	unimp
    740c:	0501                	addi	a0,a0,0
    740e:	0622                	slli	a2,a2,0x8
    7410:	00097f03          	0x97f03
    7414:	0100                	addi	s0,sp,128
    7416:	0c05                	addi	s8,s8,1
    7418:	04090303          	lb	t1,64(s2)
    741c:	0100                	addi	s0,sp,128
    741e:	0e05                	addi	t3,t3,1
    7420:	04097e03          	0x4097e03
    7424:	0100                	addi	s0,sp,128
    7426:	0905                	addi	s2,s2,1
    7428:	0306                	slli	t1,t1,0x1
    742a:	0902                	c.slli64	s2
    742c:	0004                	0x4
    742e:	0501                	addi	a0,a0,0
    7430:	060c                	addi	a1,sp,768
    7432:	04090003          	lb	zero,64(s2)
    7436:	0100                	addi	s0,sp,128
    7438:	0d05                	addi	s10,s10,1
    743a:	0306                	slli	t1,t1,0x1
    743c:	0902                	c.slli64	s2
    743e:	0004                	0x4
    7440:	0301                	addi	t1,t1,0
    7442:	0901                	addi	s2,s2,0
    7444:	0000                	unimp
    7446:	0501                	addi	a0,a0,0
    7448:	0309                	addi	t1,t1,2
    744a:	0904                	addi	s1,sp,144
    744c:	0000                	unimp
    744e:	0301                	addi	t1,t1,0
    7450:	0901                	addi	s2,s2,0
    7452:	0000                	unimp
    7454:	0501                	addi	a0,a0,0
    7456:	030d                	addi	t1,t1,3
    7458:	0901                	addi	s2,s2,0
    745a:	0000                	unimp
    745c:	0501                	addi	a0,a0,0
    745e:	0611                	addi	a2,a2,4
    7460:	00090003          	lb	zero,0(s2)
    7464:	0100                	addi	s0,sp,128
    7466:	0905                	addi	s2,s2,1
    7468:	0306                	slli	t1,t1,0x1
    746a:	0974                	addi	a3,sp,156
    746c:	0014                	0x14
    746e:	0301                	addi	t1,t1,0
    7470:	0901                	addi	s2,s2,0
    7472:	0000                	unimp
    7474:	0501                	addi	a0,a0,0
    7476:	0622                	slli	a2,a2,0x8
    7478:	00097f03          	0x97f03
    747c:	0100                	addi	s0,sp,128
    747e:	0c05                	addi	s8,s8,1
    7480:	04090303          	lb	t1,64(s2)
    7484:	0100                	addi	s0,sp,128
    7486:	0e05                	addi	t3,t3,1
    7488:	04097e03          	0x4097e03
    748c:	0100                	addi	s0,sp,128
    748e:	0905                	addi	s2,s2,1
    7490:	0306                	slli	t1,t1,0x1
    7492:	0902                	c.slli64	s2
    7494:	0004                	0x4
    7496:	0501                	addi	a0,a0,0
    7498:	060c                	addi	a1,sp,768
    749a:	04090003          	lb	zero,64(s2)
    749e:	0100                	addi	s0,sp,128
    74a0:	0d05                	addi	s10,s10,1
    74a2:	0306                	slli	t1,t1,0x1
    74a4:	0902                	c.slli64	s2
    74a6:	0004                	0x4
    74a8:	0301                	addi	t1,t1,0
    74aa:	0901                	addi	s2,s2,0
    74ac:	0000                	unimp
    74ae:	0501                	addi	a0,a0,0
    74b0:	0309                	addi	t1,t1,2
    74b2:	0904                	addi	s1,sp,144
    74b4:	0000                	unimp
    74b6:	0301                	addi	t1,t1,0
    74b8:	0901                	addi	s2,s2,0
    74ba:	0000                	unimp
    74bc:	0501                	addi	a0,a0,0
    74be:	030d                	addi	t1,t1,3
    74c0:	0901                	addi	s2,s2,0
    74c2:	0000                	unimp
    74c4:	0501                	addi	a0,a0,0
    74c6:	0611                	addi	a2,a2,4
    74c8:	00090003          	lb	zero,0(s2)
    74cc:	0100                	addi	s0,sp,128
    74ce:	0905                	addi	s2,s2,1
    74d0:	0306                	slli	t1,t1,0x1
    74d2:	0974                	addi	a3,sp,156
    74d4:	0014                	0x14
    74d6:	0301                	addi	t1,t1,0
    74d8:	0901                	addi	s2,s2,0
    74da:	0000                	unimp
    74dc:	0501                	addi	a0,a0,0
    74de:	0622                	slli	a2,a2,0x8
    74e0:	00097f03          	0x97f03
    74e4:	0100                	addi	s0,sp,128
    74e6:	0c05                	addi	s8,s8,1
    74e8:	04090303          	lb	t1,64(s2)
    74ec:	0100                	addi	s0,sp,128
    74ee:	0e05                	addi	t3,t3,1
    74f0:	04097e03          	0x4097e03
    74f4:	0100                	addi	s0,sp,128
    74f6:	0905                	addi	s2,s2,1
    74f8:	0306                	slli	t1,t1,0x1
    74fa:	0902                	c.slli64	s2
    74fc:	0004                	0x4
    74fe:	0501                	addi	a0,a0,0
    7500:	060c                	addi	a1,sp,768
    7502:	04090003          	lb	zero,64(s2)
    7506:	0100                	addi	s0,sp,128
    7508:	0d05                	addi	s10,s10,1
    750a:	0306                	slli	t1,t1,0x1
    750c:	0902                	c.slli64	s2
    750e:	0004                	0x4
    7510:	0301                	addi	t1,t1,0
    7512:	0901                	addi	s2,s2,0
    7514:	0000                	unimp
    7516:	0501                	addi	a0,a0,0
    7518:	0309                	addi	t1,t1,2
    751a:	0904                	addi	s1,sp,144
    751c:	0000                	unimp
    751e:	0301                	addi	t1,t1,0
    7520:	0901                	addi	s2,s2,0
    7522:	0000                	unimp
    7524:	0501                	addi	a0,a0,0
    7526:	030d                	addi	t1,t1,3
    7528:	0901                	addi	s2,s2,0
    752a:	0000                	unimp
    752c:	0501                	addi	a0,a0,0
    752e:	0611                	addi	a2,a2,4
    7530:	00090003          	lb	zero,0(s2)
    7534:	0100                	addi	s0,sp,128
    7536:	0905                	addi	s2,s2,1
    7538:	0306                	slli	t1,t1,0x1
    753a:	0974                	addi	a3,sp,156
    753c:	0014                	0x14
    753e:	0301                	addi	t1,t1,0
    7540:	0901                	addi	s2,s2,0
    7542:	0000                	unimp
    7544:	0301                	addi	t1,t1,0
    7546:	0902                	c.slli64	s2
    7548:	0000                	unimp
    754a:	0501                	addi	a0,a0,0
    754c:	060c                	addi	a1,sp,768
    754e:	00090003          	lb	zero,0(s2)
    7552:	0100                	addi	s0,sp,128
    7554:	0d05                	addi	s10,s10,1
    7556:	0306                	slli	t1,t1,0x1
    7558:	0902                	c.slli64	s2
    755a:	000c                	0xc
    755c:	0301                	addi	t1,t1,0
    755e:	0901                	addi	s2,s2,0
    7560:	0000                	unimp
    7562:	0501                	addi	a0,a0,0
    7564:	0309                	addi	t1,t1,2
    7566:	0904                	addi	s1,sp,144
    7568:	0000                	unimp
    756a:	0301                	addi	t1,t1,0
    756c:	0901                	addi	s2,s2,0
    756e:	0000                	unimp
    7570:	0501                	addi	a0,a0,0
    7572:	030d                	addi	t1,t1,3
    7574:	0901                	addi	s2,s2,0
    7576:	0000                	unimp
    7578:	0501                	addi	a0,a0,0
    757a:	0611                	addi	a2,a2,4
    757c:	00090003          	lb	zero,0(s2)
    7580:	0100                	addi	s0,sp,128
    7582:	0505                	addi	a0,a0,1
    7584:	0306                	slli	t1,t1,0x1
    7586:	0904                	addi	s1,sp,144
    7588:	0014                	0x14
    758a:	0301                	addi	t1,t1,0
    758c:	00000907          	0x907
    7590:	0301                	addi	t1,t1,0
    7592:	00000907          	0x907
    7596:	0501                	addi	a0,a0,0
    7598:	0601                	addi	a2,a2,0
    759a:	00090103          	lb	sp,0(s2)
    759e:	0100                	addi	s0,sp,128
    75a0:	0409                	addi	s0,s0,2
    75a2:	0000                	unimp
    75a4:	0101                	addi	sp,sp,0
    75a6:	0105                	addi	sp,sp,1
    75a8:	0500                	addi	s0,sp,640
    75aa:	4c02                	lw	s8,0(sp)
    75ac:	0300002f          	0x300002f
    75b0:	01cc                	addi	a1,sp,196
    75b2:	0501                	addi	a0,a0,0
    75b4:	0305                	addi	t1,t1,1
    75b6:	0901                	addi	s2,s2,0
    75b8:	0000                	unimp
    75ba:	0501                	addi	a0,a0,0
    75bc:	0622                	slli	a2,a2,0x8
    75be:	00095d03          	lhu	s10,0(s2)
    75c2:	0100                	addi	s0,sp,128
    75c4:	0b05                	addi	s6,s6,1
    75c6:	04091503          	lh	a0,64(s2)
    75ca:	0100                	addi	s0,sp,128
    75cc:	0c05                	addi	s8,s8,1
    75ce:	04090e03          	lb	t3,64(s2)
    75d2:	0100                	addi	s0,sp,128
    75d4:	04096003          	0x4096003
    75d8:	0100                	addi	s0,sp,128
    75da:	04092003          	lw	zero,64(s2)
    75de:	0100                	addi	s0,sp,128
    75e0:	0505                	addi	a0,a0,1
    75e2:	0306                	slli	t1,t1,0x1
    75e4:	0972                	slli	s2,s2,0x1c
    75e6:	0004                	0x4
    75e8:	0301                	addi	t1,t1,0
    75ea:	00000967          	jalr	s2,zero # 0 <_start>
    75ee:	0301                	addi	t1,t1,0
    75f0:	0902                	c.slli64	s2
    75f2:	0000                	unimp
    75f4:	0501                	addi	a0,a0,0
    75f6:	0309                	addi	t1,t1,2
    75f8:	0902                	c.slli64	s2
    75fa:	0000                	unimp
    75fc:	0301                	addi	t1,t1,0
    75fe:	0901                	addi	s2,s2,0
    7600:	0000                	unimp
    7602:	0501                	addi	a0,a0,0
    7604:	060e                	slli	a2,a2,0x3
    7606:	00090003          	lb	zero,0(s2)
    760a:	0100                	addi	s0,sp,128
    760c:	0905                	addi	s2,s2,1
    760e:	0306                	slli	t1,t1,0x1
    7610:	0902                	c.slli64	s2
    7612:	0004                	0x4
    7614:	0501                	addi	a0,a0,0
    7616:	060c                	addi	a1,sp,768
    7618:	04090003          	lb	zero,64(s2)
    761c:	0100                	addi	s0,sp,128
    761e:	0d05                	addi	s10,s10,1
    7620:	0306                	slli	t1,t1,0x1
    7622:	0902                	c.slli64	s2
    7624:	0004                	0x4
    7626:	0301                	addi	t1,t1,0
    7628:	0901                	addi	s2,s2,0
    762a:	0000                	unimp
    762c:	0501                	addi	a0,a0,0
    762e:	0309                	addi	t1,t1,2
    7630:	0904                	addi	s1,sp,144
    7632:	0000                	unimp
    7634:	0301                	addi	t1,t1,0
    7636:	0901                	addi	s2,s2,0
    7638:	0000                	unimp
    763a:	0501                	addi	a0,a0,0
    763c:	030d                	addi	t1,t1,3
    763e:	0901                	addi	s2,s2,0
    7640:	0000                	unimp
    7642:	0501                	addi	a0,a0,0
    7644:	0611                	addi	a2,a2,4
    7646:	00090003          	lb	zero,0(s2)
    764a:	0100                	addi	s0,sp,128
    764c:	0905                	addi	s2,s2,1
    764e:	0306                	slli	t1,t1,0x1
    7650:	0974                	addi	a3,sp,156
    7652:	0014                	0x14
    7654:	0301                	addi	t1,t1,0
    7656:	0901                	addi	s2,s2,0
    7658:	0000                	unimp
    765a:	0501                	addi	a0,a0,0
    765c:	0622                	slli	a2,a2,0x8
    765e:	00097f03          	0x97f03
    7662:	0100                	addi	s0,sp,128
    7664:	0c05                	addi	s8,s8,1
    7666:	04090303          	lb	t1,64(s2)
    766a:	0100                	addi	s0,sp,128
    766c:	0e05                	addi	t3,t3,1
    766e:	08097e03          	0x8097e03
    7672:	0100                	addi	s0,sp,128
    7674:	0905                	addi	s2,s2,1
    7676:	0306                	slli	t1,t1,0x1
    7678:	0902                	c.slli64	s2
    767a:	0004                	0x4
    767c:	0501                	addi	a0,a0,0
    767e:	060c                	addi	a1,sp,768
    7680:	00090003          	lb	zero,0(s2)
    7684:	0100                	addi	s0,sp,128
    7686:	0d05                	addi	s10,s10,1
    7688:	0306                	slli	t1,t1,0x1
    768a:	0902                	c.slli64	s2
    768c:	0004                	0x4
    768e:	0301                	addi	t1,t1,0
    7690:	0901                	addi	s2,s2,0
    7692:	0000                	unimp
    7694:	0501                	addi	a0,a0,0
    7696:	0309                	addi	t1,t1,2
    7698:	0904                	addi	s1,sp,144
    769a:	0000                	unimp
    769c:	0301                	addi	t1,t1,0
    769e:	0901                	addi	s2,s2,0
    76a0:	0000                	unimp
    76a2:	0501                	addi	a0,a0,0
    76a4:	030d                	addi	t1,t1,3
    76a6:	0901                	addi	s2,s2,0
    76a8:	0000                	unimp
    76aa:	0501                	addi	a0,a0,0
    76ac:	0611                	addi	a2,a2,4
    76ae:	00090003          	lb	zero,0(s2)
    76b2:	0100                	addi	s0,sp,128
    76b4:	0905                	addi	s2,s2,1
    76b6:	0306                	slli	t1,t1,0x1
    76b8:	0974                	addi	a3,sp,156
    76ba:	0014                	0x14
    76bc:	0301                	addi	t1,t1,0
    76be:	0901                	addi	s2,s2,0
    76c0:	0000                	unimp
    76c2:	0501                	addi	a0,a0,0
    76c4:	0622                	slli	a2,a2,0x8
    76c6:	00097f03          	0x97f03
    76ca:	0100                	addi	s0,sp,128
    76cc:	0c05                	addi	s8,s8,1
    76ce:	04090303          	lb	t1,64(s2)
    76d2:	0100                	addi	s0,sp,128
    76d4:	0e05                	addi	t3,t3,1
    76d6:	04097e03          	0x4097e03
    76da:	0100                	addi	s0,sp,128
    76dc:	0905                	addi	s2,s2,1
    76de:	0306                	slli	t1,t1,0x1
    76e0:	0902                	c.slli64	s2
    76e2:	0004                	0x4
    76e4:	0501                	addi	a0,a0,0
    76e6:	060c                	addi	a1,sp,768
    76e8:	04090003          	lb	zero,64(s2)
    76ec:	0100                	addi	s0,sp,128
    76ee:	0d05                	addi	s10,s10,1
    76f0:	0306                	slli	t1,t1,0x1
    76f2:	0902                	c.slli64	s2
    76f4:	0004                	0x4
    76f6:	0301                	addi	t1,t1,0
    76f8:	0901                	addi	s2,s2,0
    76fa:	0000                	unimp
    76fc:	0501                	addi	a0,a0,0
    76fe:	0309                	addi	t1,t1,2
    7700:	0904                	addi	s1,sp,144
    7702:	0000                	unimp
    7704:	0301                	addi	t1,t1,0
    7706:	0901                	addi	s2,s2,0
    7708:	0000                	unimp
    770a:	0501                	addi	a0,a0,0
    770c:	030d                	addi	t1,t1,3
    770e:	0901                	addi	s2,s2,0
    7710:	0000                	unimp
    7712:	0501                	addi	a0,a0,0
    7714:	0611                	addi	a2,a2,4
    7716:	00090003          	lb	zero,0(s2)
    771a:	0100                	addi	s0,sp,128
    771c:	0905                	addi	s2,s2,1
    771e:	0306                	slli	t1,t1,0x1
    7720:	0974                	addi	a3,sp,156
    7722:	0014                	0x14
    7724:	0301                	addi	t1,t1,0
    7726:	0901                	addi	s2,s2,0
    7728:	0000                	unimp
    772a:	0501                	addi	a0,a0,0
    772c:	0622                	slli	a2,a2,0x8
    772e:	00097f03          	0x97f03
    7732:	0100                	addi	s0,sp,128
    7734:	0c05                	addi	s8,s8,1
    7736:	04090303          	lb	t1,64(s2)
    773a:	0100                	addi	s0,sp,128
    773c:	0e05                	addi	t3,t3,1
    773e:	04097e03          	0x4097e03
    7742:	0100                	addi	s0,sp,128
    7744:	0905                	addi	s2,s2,1
    7746:	0306                	slli	t1,t1,0x1
    7748:	0902                	c.slli64	s2
    774a:	0004                	0x4
    774c:	0501                	addi	a0,a0,0
    774e:	060c                	addi	a1,sp,768
    7750:	04090003          	lb	zero,64(s2)
    7754:	0100                	addi	s0,sp,128
    7756:	0d05                	addi	s10,s10,1
    7758:	0306                	slli	t1,t1,0x1
    775a:	0902                	c.slli64	s2
    775c:	0004                	0x4
    775e:	0301                	addi	t1,t1,0
    7760:	0901                	addi	s2,s2,0
    7762:	0000                	unimp
    7764:	0501                	addi	a0,a0,0
    7766:	0309                	addi	t1,t1,2
    7768:	0904                	addi	s1,sp,144
    776a:	0000                	unimp
    776c:	0301                	addi	t1,t1,0
    776e:	0901                	addi	s2,s2,0
    7770:	0000                	unimp
    7772:	0501                	addi	a0,a0,0
    7774:	030d                	addi	t1,t1,3
    7776:	0901                	addi	s2,s2,0
    7778:	0000                	unimp
    777a:	0501                	addi	a0,a0,0
    777c:	0611                	addi	a2,a2,4
    777e:	00090003          	lb	zero,0(s2)
    7782:	0100                	addi	s0,sp,128
    7784:	0905                	addi	s2,s2,1
    7786:	0306                	slli	t1,t1,0x1
    7788:	0974                	addi	a3,sp,156
    778a:	0014                	0x14
    778c:	0301                	addi	t1,t1,0
    778e:	0901                	addi	s2,s2,0
    7790:	0000                	unimp
    7792:	0501                	addi	a0,a0,0
    7794:	0622                	slli	a2,a2,0x8
    7796:	00097f03          	0x97f03
    779a:	0100                	addi	s0,sp,128
    779c:	0c05                	addi	s8,s8,1
    779e:	04090303          	lb	t1,64(s2)
    77a2:	0100                	addi	s0,sp,128
    77a4:	0e05                	addi	t3,t3,1
    77a6:	04097e03          	0x4097e03
    77aa:	0100                	addi	s0,sp,128
    77ac:	0905                	addi	s2,s2,1
    77ae:	0306                	slli	t1,t1,0x1
    77b0:	0902                	c.slli64	s2
    77b2:	0004                	0x4
    77b4:	0501                	addi	a0,a0,0
    77b6:	060c                	addi	a1,sp,768
    77b8:	04090003          	lb	zero,64(s2)
    77bc:	0100                	addi	s0,sp,128
    77be:	0d05                	addi	s10,s10,1
    77c0:	0306                	slli	t1,t1,0x1
    77c2:	0902                	c.slli64	s2
    77c4:	0004                	0x4
    77c6:	0301                	addi	t1,t1,0
    77c8:	0901                	addi	s2,s2,0
    77ca:	0000                	unimp
    77cc:	0501                	addi	a0,a0,0
    77ce:	0309                	addi	t1,t1,2
    77d0:	0904                	addi	s1,sp,144
    77d2:	0000                	unimp
    77d4:	0301                	addi	t1,t1,0
    77d6:	0901                	addi	s2,s2,0
    77d8:	0000                	unimp
    77da:	0501                	addi	a0,a0,0
    77dc:	030d                	addi	t1,t1,3
    77de:	0901                	addi	s2,s2,0
    77e0:	0000                	unimp
    77e2:	0501                	addi	a0,a0,0
    77e4:	0611                	addi	a2,a2,4
    77e6:	00090003          	lb	zero,0(s2)
    77ea:	0100                	addi	s0,sp,128
    77ec:	0905                	addi	s2,s2,1
    77ee:	0306                	slli	t1,t1,0x1
    77f0:	0974                	addi	a3,sp,156
    77f2:	0014                	0x14
    77f4:	0301                	addi	t1,t1,0
    77f6:	0901                	addi	s2,s2,0
    77f8:	0000                	unimp
    77fa:	0501                	addi	a0,a0,0
    77fc:	0622                	slli	a2,a2,0x8
    77fe:	00097f03          	0x97f03
    7802:	0100                	addi	s0,sp,128
    7804:	0c05                	addi	s8,s8,1
    7806:	04090303          	lb	t1,64(s2)
    780a:	0100                	addi	s0,sp,128
    780c:	0e05                	addi	t3,t3,1
    780e:	04097e03          	0x4097e03
    7812:	0100                	addi	s0,sp,128
    7814:	0905                	addi	s2,s2,1
    7816:	0306                	slli	t1,t1,0x1
    7818:	0902                	c.slli64	s2
    781a:	0004                	0x4
    781c:	0501                	addi	a0,a0,0
    781e:	060c                	addi	a1,sp,768
    7820:	04090003          	lb	zero,64(s2)
    7824:	0100                	addi	s0,sp,128
    7826:	0d05                	addi	s10,s10,1
    7828:	0306                	slli	t1,t1,0x1
    782a:	0902                	c.slli64	s2
    782c:	0004                	0x4
    782e:	0301                	addi	t1,t1,0
    7830:	0901                	addi	s2,s2,0
    7832:	0000                	unimp
    7834:	0501                	addi	a0,a0,0
    7836:	0309                	addi	t1,t1,2
    7838:	0904                	addi	s1,sp,144
    783a:	0000                	unimp
    783c:	0301                	addi	t1,t1,0
    783e:	0901                	addi	s2,s2,0
    7840:	0000                	unimp
    7842:	0501                	addi	a0,a0,0
    7844:	030d                	addi	t1,t1,3
    7846:	0901                	addi	s2,s2,0
    7848:	0000                	unimp
    784a:	0501                	addi	a0,a0,0
    784c:	0611                	addi	a2,a2,4
    784e:	00090003          	lb	zero,0(s2)
    7852:	0100                	addi	s0,sp,128
    7854:	0905                	addi	s2,s2,1
    7856:	0306                	slli	t1,t1,0x1
    7858:	0974                	addi	a3,sp,156
    785a:	0014                	0x14
    785c:	0301                	addi	t1,t1,0
    785e:	0901                	addi	s2,s2,0
    7860:	0000                	unimp
    7862:	0501                	addi	a0,a0,0
    7864:	0622                	slli	a2,a2,0x8
    7866:	00097f03          	0x97f03
    786a:	0100                	addi	s0,sp,128
    786c:	0c05                	addi	s8,s8,1
    786e:	04090303          	lb	t1,64(s2)
    7872:	0100                	addi	s0,sp,128
    7874:	0e05                	addi	t3,t3,1
    7876:	04097e03          	0x4097e03
    787a:	0100                	addi	s0,sp,128
    787c:	0905                	addi	s2,s2,1
    787e:	0306                	slli	t1,t1,0x1
    7880:	0902                	c.slli64	s2
    7882:	0004                	0x4
    7884:	0501                	addi	a0,a0,0
    7886:	060c                	addi	a1,sp,768
    7888:	04090003          	lb	zero,64(s2)
    788c:	0100                	addi	s0,sp,128
    788e:	0d05                	addi	s10,s10,1
    7890:	0306                	slli	t1,t1,0x1
    7892:	0902                	c.slli64	s2
    7894:	0004                	0x4
    7896:	0301                	addi	t1,t1,0
    7898:	0901                	addi	s2,s2,0
    789a:	0000                	unimp
    789c:	0501                	addi	a0,a0,0
    789e:	0309                	addi	t1,t1,2
    78a0:	0904                	addi	s1,sp,144
    78a2:	0000                	unimp
    78a4:	0301                	addi	t1,t1,0
    78a6:	0901                	addi	s2,s2,0
    78a8:	0000                	unimp
    78aa:	0501                	addi	a0,a0,0
    78ac:	030d                	addi	t1,t1,3
    78ae:	0901                	addi	s2,s2,0
    78b0:	0000                	unimp
    78b2:	0501                	addi	a0,a0,0
    78b4:	0611                	addi	a2,a2,4
    78b6:	00090003          	lb	zero,0(s2)
    78ba:	0100                	addi	s0,sp,128
    78bc:	0905                	addi	s2,s2,1
    78be:	0306                	slli	t1,t1,0x1
    78c0:	0974                	addi	a3,sp,156
    78c2:	0014                	0x14
    78c4:	0301                	addi	t1,t1,0
    78c6:	0901                	addi	s2,s2,0
    78c8:	0000                	unimp
    78ca:	0301                	addi	t1,t1,0
    78cc:	0902                	c.slli64	s2
    78ce:	0000                	unimp
    78d0:	0501                	addi	a0,a0,0
    78d2:	060c                	addi	a1,sp,768
    78d4:	00090003          	lb	zero,0(s2)
    78d8:	0100                	addi	s0,sp,128
    78da:	0d05                	addi	s10,s10,1
    78dc:	0306                	slli	t1,t1,0x1
    78de:	0902                	c.slli64	s2
    78e0:	000c                	0xc
    78e2:	0301                	addi	t1,t1,0
    78e4:	0901                	addi	s2,s2,0
    78e6:	0000                	unimp
    78e8:	0501                	addi	a0,a0,0
    78ea:	0309                	addi	t1,t1,2
    78ec:	0904                	addi	s1,sp,144
    78ee:	0000                	unimp
    78f0:	0301                	addi	t1,t1,0
    78f2:	0901                	addi	s2,s2,0
    78f4:	0000                	unimp
    78f6:	0501                	addi	a0,a0,0
    78f8:	030d                	addi	t1,t1,3
    78fa:	0901                	addi	s2,s2,0
    78fc:	0000                	unimp
    78fe:	0501                	addi	a0,a0,0
    7900:	0611                	addi	a2,a2,4
    7902:	00090003          	lb	zero,0(s2)
    7906:	0100                	addi	s0,sp,128
    7908:	0505                	addi	a0,a0,1
    790a:	0306                	slli	t1,t1,0x1
    790c:	0904                	addi	s1,sp,144
    790e:	0014                	0x14
    7910:	0301                	addi	t1,t1,0
    7912:	0906                	slli	s2,s2,0x1
    7914:	0000                	unimp
    7916:	0501                	addi	a0,a0,0
    7918:	0003060b          	0x3060b
    791c:	0009                	c.nop	2
    791e:	0100                	addi	s0,sp,128
    7920:	2205                	jal	7a40 <__sflush_r+0xf4>
    7922:	04096a03          	0x4096a03
    7926:	0100                	addi	s0,sp,128
    7928:	0c05                	addi	s8,s8,1
    792a:	04090303          	lb	t1,64(s2)
    792e:	0100                	addi	s0,sp,128
    7930:	0b05                	addi	s6,s6,1
    7932:	04091303          	lh	t1,64(s2)
    7936:	0100                	addi	s0,sp,128
    7938:	0905                	addi	s2,s2,1
    793a:	0306                	slli	t1,t1,0x1
    793c:	096a                	slli	s2,s2,0x1a
    793e:	0004                	0x4
    7940:	0301                	addi	t1,t1,0
    7942:	0901                	addi	s2,s2,0
    7944:	0000                	unimp
    7946:	0501                	addi	a0,a0,0
    7948:	060e                	slli	a2,a2,0x3
    794a:	00090003          	lb	zero,0(s2)
    794e:	0100                	addi	s0,sp,128
    7950:	0905                	addi	s2,s2,1
    7952:	0306                	slli	t1,t1,0x1
    7954:	0902                	c.slli64	s2
    7956:	0004                	0x4
    7958:	0501                	addi	a0,a0,0
    795a:	060c                	addi	a1,sp,768
    795c:	04090003          	lb	zero,64(s2)
    7960:	0100                	addi	s0,sp,128
    7962:	0d05                	addi	s10,s10,1
    7964:	0306                	slli	t1,t1,0x1
    7966:	0902                	c.slli64	s2
    7968:	0004                	0x4
    796a:	0301                	addi	t1,t1,0
    796c:	0901                	addi	s2,s2,0
    796e:	0000                	unimp
    7970:	0501                	addi	a0,a0,0
    7972:	0309                	addi	t1,t1,2
    7974:	0904                	addi	s1,sp,144
    7976:	0000                	unimp
    7978:	0301                	addi	t1,t1,0
    797a:	0901                	addi	s2,s2,0
    797c:	0000                	unimp
    797e:	0501                	addi	a0,a0,0
    7980:	030d                	addi	t1,t1,3
    7982:	0901                	addi	s2,s2,0
    7984:	0000                	unimp
    7986:	0501                	addi	a0,a0,0
    7988:	0611                	addi	a2,a2,4
    798a:	00090003          	lb	zero,0(s2)
    798e:	0100                	addi	s0,sp,128
    7990:	0905                	addi	s2,s2,1
    7992:	0306                	slli	t1,t1,0x1
    7994:	0974                	addi	a3,sp,156
    7996:	0014                	0x14
    7998:	0301                	addi	t1,t1,0
    799a:	0901                	addi	s2,s2,0
    799c:	0000                	unimp
    799e:	0501                	addi	a0,a0,0
    79a0:	0622                	slli	a2,a2,0x8
    79a2:	00097f03          	0x97f03
    79a6:	0100                	addi	s0,sp,128
    79a8:	0c05                	addi	s8,s8,1
    79aa:	04090303          	lb	t1,64(s2)
    79ae:	0100                	addi	s0,sp,128
    79b0:	0e05                	addi	t3,t3,1
    79b2:	04097e03          	0x4097e03
    79b6:	0100                	addi	s0,sp,128
    79b8:	0905                	addi	s2,s2,1
    79ba:	0306                	slli	t1,t1,0x1
    79bc:	0902                	c.slli64	s2
    79be:	0004                	0x4
    79c0:	0501                	addi	a0,a0,0
    79c2:	060c                	addi	a1,sp,768
    79c4:	04090003          	lb	zero,64(s2)
    79c8:	0100                	addi	s0,sp,128
    79ca:	0d05                	addi	s10,s10,1
    79cc:	0306                	slli	t1,t1,0x1
    79ce:	0902                	c.slli64	s2
    79d0:	0004                	0x4
    79d2:	0301                	addi	t1,t1,0
    79d4:	0901                	addi	s2,s2,0
    79d6:	0000                	unimp
    79d8:	0501                	addi	a0,a0,0
    79da:	0309                	addi	t1,t1,2
    79dc:	0904                	addi	s1,sp,144
    79de:	0000                	unimp
    79e0:	0301                	addi	t1,t1,0
    79e2:	0901                	addi	s2,s2,0
    79e4:	0000                	unimp
    79e6:	0501                	addi	a0,a0,0
    79e8:	030d                	addi	t1,t1,3
    79ea:	0901                	addi	s2,s2,0
    79ec:	0000                	unimp
    79ee:	0501                	addi	a0,a0,0
    79f0:	0611                	addi	a2,a2,4
    79f2:	00090003          	lb	zero,0(s2)
    79f6:	0100                	addi	s0,sp,128
    79f8:	0905                	addi	s2,s2,1
    79fa:	0306                	slli	t1,t1,0x1
    79fc:	0974                	addi	a3,sp,156
    79fe:	0014                	0x14
    7a00:	0301                	addi	t1,t1,0
    7a02:	0901                	addi	s2,s2,0
    7a04:	0000                	unimp
    7a06:	0501                	addi	a0,a0,0
    7a08:	0622                	slli	a2,a2,0x8
    7a0a:	00097f03          	0x97f03
    7a0e:	0100                	addi	s0,sp,128
    7a10:	0c05                	addi	s8,s8,1
    7a12:	04090303          	lb	t1,64(s2)
    7a16:	0100                	addi	s0,sp,128
    7a18:	0e05                	addi	t3,t3,1
    7a1a:	04097e03          	0x4097e03
    7a1e:	0100                	addi	s0,sp,128
    7a20:	0905                	addi	s2,s2,1
    7a22:	0306                	slli	t1,t1,0x1
    7a24:	0902                	c.slli64	s2
    7a26:	0004                	0x4
    7a28:	0501                	addi	a0,a0,0
    7a2a:	060c                	addi	a1,sp,768
    7a2c:	04090003          	lb	zero,64(s2)
    7a30:	0100                	addi	s0,sp,128
    7a32:	0d05                	addi	s10,s10,1
    7a34:	0306                	slli	t1,t1,0x1
    7a36:	0902                	c.slli64	s2
    7a38:	0004                	0x4
    7a3a:	0301                	addi	t1,t1,0
    7a3c:	0901                	addi	s2,s2,0
    7a3e:	0000                	unimp
    7a40:	0501                	addi	a0,a0,0
    7a42:	0309                	addi	t1,t1,2
    7a44:	0904                	addi	s1,sp,144
    7a46:	0000                	unimp
    7a48:	0301                	addi	t1,t1,0
    7a4a:	0901                	addi	s2,s2,0
    7a4c:	0000                	unimp
    7a4e:	0501                	addi	a0,a0,0
    7a50:	030d                	addi	t1,t1,3
    7a52:	0901                	addi	s2,s2,0
    7a54:	0000                	unimp
    7a56:	0501                	addi	a0,a0,0
    7a58:	0611                	addi	a2,a2,4
    7a5a:	00090003          	lb	zero,0(s2)
    7a5e:	0100                	addi	s0,sp,128
    7a60:	0905                	addi	s2,s2,1
    7a62:	0306                	slli	t1,t1,0x1
    7a64:	0974                	addi	a3,sp,156
    7a66:	0014                	0x14
    7a68:	0301                	addi	t1,t1,0
    7a6a:	0901                	addi	s2,s2,0
    7a6c:	0000                	unimp
    7a6e:	0501                	addi	a0,a0,0
    7a70:	0622                	slli	a2,a2,0x8
    7a72:	00097f03          	0x97f03
    7a76:	0100                	addi	s0,sp,128
    7a78:	0c05                	addi	s8,s8,1
    7a7a:	04090303          	lb	t1,64(s2)
    7a7e:	0100                	addi	s0,sp,128
    7a80:	0e05                	addi	t3,t3,1
    7a82:	04097e03          	0x4097e03
    7a86:	0100                	addi	s0,sp,128
    7a88:	0905                	addi	s2,s2,1
    7a8a:	0306                	slli	t1,t1,0x1
    7a8c:	0902                	c.slli64	s2
    7a8e:	0004                	0x4
    7a90:	0501                	addi	a0,a0,0
    7a92:	060c                	addi	a1,sp,768
    7a94:	04090003          	lb	zero,64(s2)
    7a98:	0100                	addi	s0,sp,128
    7a9a:	0d05                	addi	s10,s10,1
    7a9c:	0306                	slli	t1,t1,0x1
    7a9e:	0902                	c.slli64	s2
    7aa0:	0004                	0x4
    7aa2:	0301                	addi	t1,t1,0
    7aa4:	0901                	addi	s2,s2,0
    7aa6:	0000                	unimp
    7aa8:	0501                	addi	a0,a0,0
    7aaa:	0309                	addi	t1,t1,2
    7aac:	0904                	addi	s1,sp,144
    7aae:	0000                	unimp
    7ab0:	0301                	addi	t1,t1,0
    7ab2:	0901                	addi	s2,s2,0
    7ab4:	0000                	unimp
    7ab6:	0501                	addi	a0,a0,0
    7ab8:	030d                	addi	t1,t1,3
    7aba:	0901                	addi	s2,s2,0
    7abc:	0000                	unimp
    7abe:	0501                	addi	a0,a0,0
    7ac0:	0611                	addi	a2,a2,4
    7ac2:	00090003          	lb	zero,0(s2)
    7ac6:	0100                	addi	s0,sp,128
    7ac8:	0905                	addi	s2,s2,1
    7aca:	0306                	slli	t1,t1,0x1
    7acc:	0974                	addi	a3,sp,156
    7ace:	0014                	0x14
    7ad0:	0301                	addi	t1,t1,0
    7ad2:	0901                	addi	s2,s2,0
    7ad4:	0000                	unimp
    7ad6:	0501                	addi	a0,a0,0
    7ad8:	0622                	slli	a2,a2,0x8
    7ada:	00097f03          	0x97f03
    7ade:	0100                	addi	s0,sp,128
    7ae0:	0c05                	addi	s8,s8,1
    7ae2:	04090303          	lb	t1,64(s2)
    7ae6:	0100                	addi	s0,sp,128
    7ae8:	0e05                	addi	t3,t3,1
    7aea:	04097e03          	0x4097e03
    7aee:	0100                	addi	s0,sp,128
    7af0:	0905                	addi	s2,s2,1
    7af2:	0306                	slli	t1,t1,0x1
    7af4:	0902                	c.slli64	s2
    7af6:	0004                	0x4
    7af8:	0501                	addi	a0,a0,0
    7afa:	060c                	addi	a1,sp,768
    7afc:	04090003          	lb	zero,64(s2)
    7b00:	0100                	addi	s0,sp,128
    7b02:	0d05                	addi	s10,s10,1
    7b04:	0306                	slli	t1,t1,0x1
    7b06:	0902                	c.slli64	s2
    7b08:	0004                	0x4
    7b0a:	0301                	addi	t1,t1,0
    7b0c:	0901                	addi	s2,s2,0
    7b0e:	0000                	unimp
    7b10:	0501                	addi	a0,a0,0
    7b12:	0309                	addi	t1,t1,2
    7b14:	0904                	addi	s1,sp,144
    7b16:	0000                	unimp
    7b18:	0301                	addi	t1,t1,0
    7b1a:	0901                	addi	s2,s2,0
    7b1c:	0000                	unimp
    7b1e:	0501                	addi	a0,a0,0
    7b20:	030d                	addi	t1,t1,3
    7b22:	0901                	addi	s2,s2,0
    7b24:	0000                	unimp
    7b26:	0501                	addi	a0,a0,0
    7b28:	0611                	addi	a2,a2,4
    7b2a:	00090003          	lb	zero,0(s2)
    7b2e:	0100                	addi	s0,sp,128
    7b30:	0905                	addi	s2,s2,1
    7b32:	0306                	slli	t1,t1,0x1
    7b34:	0974                	addi	a3,sp,156
    7b36:	0014                	0x14
    7b38:	0301                	addi	t1,t1,0
    7b3a:	0901                	addi	s2,s2,0
    7b3c:	0000                	unimp
    7b3e:	0501                	addi	a0,a0,0
    7b40:	0622                	slli	a2,a2,0x8
    7b42:	00097f03          	0x97f03
    7b46:	0100                	addi	s0,sp,128
    7b48:	0c05                	addi	s8,s8,1
    7b4a:	04090303          	lb	t1,64(s2)
    7b4e:	0100                	addi	s0,sp,128
    7b50:	0e05                	addi	t3,t3,1
    7b52:	04097e03          	0x4097e03
    7b56:	0100                	addi	s0,sp,128
    7b58:	0905                	addi	s2,s2,1
    7b5a:	0306                	slli	t1,t1,0x1
    7b5c:	0902                	c.slli64	s2
    7b5e:	0004                	0x4
    7b60:	0501                	addi	a0,a0,0
    7b62:	060c                	addi	a1,sp,768
    7b64:	04090003          	lb	zero,64(s2)
    7b68:	0100                	addi	s0,sp,128
    7b6a:	0d05                	addi	s10,s10,1
    7b6c:	0306                	slli	t1,t1,0x1
    7b6e:	0902                	c.slli64	s2
    7b70:	0004                	0x4
    7b72:	0301                	addi	t1,t1,0
    7b74:	0901                	addi	s2,s2,0
    7b76:	0000                	unimp
    7b78:	0501                	addi	a0,a0,0
    7b7a:	0309                	addi	t1,t1,2
    7b7c:	0904                	addi	s1,sp,144
    7b7e:	0000                	unimp
    7b80:	0301                	addi	t1,t1,0
    7b82:	0901                	addi	s2,s2,0
    7b84:	0000                	unimp
    7b86:	0501                	addi	a0,a0,0
    7b88:	030d                	addi	t1,t1,3
    7b8a:	0901                	addi	s2,s2,0
    7b8c:	0000                	unimp
    7b8e:	0501                	addi	a0,a0,0
    7b90:	0611                	addi	a2,a2,4
    7b92:	00090003          	lb	zero,0(s2)
    7b96:	0100                	addi	s0,sp,128
    7b98:	0905                	addi	s2,s2,1
    7b9a:	0306                	slli	t1,t1,0x1
    7b9c:	0974                	addi	a3,sp,156
    7b9e:	0014                	0x14
    7ba0:	0301                	addi	t1,t1,0
    7ba2:	0901                	addi	s2,s2,0
    7ba4:	0000                	unimp
    7ba6:	0501                	addi	a0,a0,0
    7ba8:	0622                	slli	a2,a2,0x8
    7baa:	00097f03          	0x97f03
    7bae:	0100                	addi	s0,sp,128
    7bb0:	0c05                	addi	s8,s8,1
    7bb2:	04090303          	lb	t1,64(s2)
    7bb6:	0100                	addi	s0,sp,128
    7bb8:	0e05                	addi	t3,t3,1
    7bba:	04097e03          	0x4097e03
    7bbe:	0100                	addi	s0,sp,128
    7bc0:	0905                	addi	s2,s2,1
    7bc2:	0306                	slli	t1,t1,0x1
    7bc4:	0902                	c.slli64	s2
    7bc6:	0004                	0x4
    7bc8:	0501                	addi	a0,a0,0
    7bca:	060c                	addi	a1,sp,768
    7bcc:	04090003          	lb	zero,64(s2)
    7bd0:	0100                	addi	s0,sp,128
    7bd2:	0d05                	addi	s10,s10,1
    7bd4:	0306                	slli	t1,t1,0x1
    7bd6:	0902                	c.slli64	s2
    7bd8:	0004                	0x4
    7bda:	0301                	addi	t1,t1,0
    7bdc:	0901                	addi	s2,s2,0
    7bde:	0000                	unimp
    7be0:	0501                	addi	a0,a0,0
    7be2:	0309                	addi	t1,t1,2
    7be4:	0904                	addi	s1,sp,144
    7be6:	0000                	unimp
    7be8:	0301                	addi	t1,t1,0
    7bea:	0901                	addi	s2,s2,0
    7bec:	0000                	unimp
    7bee:	0501                	addi	a0,a0,0
    7bf0:	030d                	addi	t1,t1,3
    7bf2:	0901                	addi	s2,s2,0
    7bf4:	0000                	unimp
    7bf6:	0501                	addi	a0,a0,0
    7bf8:	0611                	addi	a2,a2,4
    7bfa:	00090003          	lb	zero,0(s2)
    7bfe:	0100                	addi	s0,sp,128
    7c00:	0905                	addi	s2,s2,1
    7c02:	0306                	slli	t1,t1,0x1
    7c04:	0974                	addi	a3,sp,156
    7c06:	0014                	0x14
    7c08:	0301                	addi	t1,t1,0
    7c0a:	0901                	addi	s2,s2,0
    7c0c:	0000                	unimp
    7c0e:	0301                	addi	t1,t1,0
    7c10:	0902                	c.slli64	s2
    7c12:	0000                	unimp
    7c14:	0501                	addi	a0,a0,0
    7c16:	060c                	addi	a1,sp,768
    7c18:	00090003          	lb	zero,0(s2)
    7c1c:	0100                	addi	s0,sp,128
    7c1e:	0d05                	addi	s10,s10,1
    7c20:	0306                	slli	t1,t1,0x1
    7c22:	0902                	c.slli64	s2
    7c24:	000c                	0xc
    7c26:	0301                	addi	t1,t1,0
    7c28:	0901                	addi	s2,s2,0
    7c2a:	0000                	unimp
    7c2c:	0501                	addi	a0,a0,0
    7c2e:	0309                	addi	t1,t1,2
    7c30:	0904                	addi	s1,sp,144
    7c32:	0000                	unimp
    7c34:	0301                	addi	t1,t1,0
    7c36:	0901                	addi	s2,s2,0
    7c38:	0000                	unimp
    7c3a:	0501                	addi	a0,a0,0
    7c3c:	030d                	addi	t1,t1,3
    7c3e:	0901                	addi	s2,s2,0
    7c40:	0000                	unimp
    7c42:	0501                	addi	a0,a0,0
    7c44:	0611                	addi	a2,a2,4
    7c46:	00090003          	lb	zero,0(s2)
    7c4a:	0100                	addi	s0,sp,128
    7c4c:	0505                	addi	a0,a0,1
    7c4e:	0306                	slli	t1,t1,0x1
    7c50:	0904                	addi	s1,sp,144
    7c52:	0014                	0x14
    7c54:	0301                	addi	t1,t1,0
    7c56:	00000907          	0x907
    7c5a:	0501                	addi	a0,a0,0
    7c5c:	0601                	addi	a2,a2,0
    7c5e:	00090d03          	lb	s10,0(s2)
    7c62:	0100                	addi	s0,sp,128
    7c64:	0409                	addi	s0,s0,2
    7c66:	0000                	unimp
    7c68:	0101                	addi	sp,sp,0
    7c6a:	0105                	addi	sp,sp,1
    7c6c:	0500                	addi	s0,sp,640
    7c6e:	d402                	sw	zero,40(sp)
    7c70:	0031                	c.nop	12
    7c72:	0300                	addi	s0,sp,384
    7c74:	01d2                	slli	gp,gp,0x14
    7c76:	0501                	addi	a0,a0,0
    7c78:	0305                	addi	t1,t1,1
    7c7a:	0901                	addi	s2,s2,0
    7c7c:	0000                	unimp
    7c7e:	0301                	addi	t1,t1,0
    7c80:	0901                	addi	s2,s2,0
    7c82:	0000                	unimp
    7c84:	0301                	addi	t1,t1,0
    7c86:	0905                	addi	s2,s2,1
    7c88:	0000                	unimp
    7c8a:	0301                	addi	t1,t1,0
    7c8c:	0905                	addi	s2,s2,1
    7c8e:	0000                	unimp
    7c90:	0301                	addi	t1,t1,0
    7c92:	0905                	addi	s2,s2,1
    7c94:	0000                	unimp
    7c96:	0301                	addi	t1,t1,0
    7c98:	0905                	addi	s2,s2,1
    7c9a:	0000                	unimp
    7c9c:	0301                	addi	t1,t1,0
    7c9e:	0905                	addi	s2,s2,1
    7ca0:	0000                	unimp
    7ca2:	0301                	addi	t1,t1,0
    7ca4:	0906                	slli	s2,s2,0x1
    7ca6:	0000                	unimp
    7ca8:	0301                	addi	t1,t1,0
    7caa:	0904                	addi	s1,sp,144
    7cac:	0000                	unimp
    7cae:	0501                	addi	a0,a0,0
    7cb0:	0601                	addi	a2,a2,0
    7cb2:	00090103          	lb	sp,0(s2)
    7cb6:	0100                	addi	s0,sp,128
    7cb8:	0809                	addi	a6,a6,2
    7cba:	0000                	unimp
    7cbc:	0101                	addi	sp,sp,0
    7cbe:	01c9                	addi	gp,gp,18
    7cc0:	0000                	unimp
    7cc2:	01440003          	lb	zero,20(s0)
    7cc6:	0000                	unimp
    7cc8:	0101                	addi	sp,sp,0
    7cca:	000d0efb          	0xd0efb
    7cce:	0101                	addi	sp,sp,0
    7cd0:	0101                	addi	sp,sp,0
    7cd2:	0000                	unimp
    7cd4:	0100                	addi	s0,sp,128
    7cd6:	0000                	unimp
    7cd8:	2e01                	jal	7fe8 <__swhatbuf_r+0x58>
    7cda:	6372732f          	0x6372732f
    7cde:	69616d2f          	0x69616d2f
    7ce2:	2f6e                	fld	ft10,216(sp)
    7ce4:	00637273          	csrrci	tp,0x6,6
    7ce8:	3a65                	jal	76a0 <_dtoa_r+0x10b4>
    7cea:	705c                	flw	fa5,36(s0)
    7cec:	6f72                	flw	ft10,28(sp)
    7cee:	6d617267          	0x6d617267
    7cf2:	6966                	flw	fs2,88(sp)
    7cf4:	656c                	flw	fa1,76(a0)
    7cf6:	36387873          	csrrci	a6,0x363,16
    7cfa:	6e5c                	flw	fa5,28(a2)
    7cfc:	616d726f          	jal	tp,df312 <_data_lma+0xd419a>
    7d00:	2d6c                	fld	fa1,216(a0)
    7d02:	6972                	flw	fs2,28(sp)
    7d04:	2d766373          	csrrsi	t1,0x2d7,12
    7d08:	6f6e                	flw	ft10,216(sp)
    7d0a:	656e                	flw	fa0,216(sp)
    7d0c:	672d                	lui	a4,0xb
    7d0e:	382d6363          	bltu	s10,sp,8094 <__smakebuf_r+0x74>
    7d12:	322e                	fld	ft4,232(sp)
    7d14:	302e                	fld	ft0,232(sp)
    7d16:	322d                	jal	7640 <_dtoa_r+0x1054>
    7d18:	322e                	fld	ft4,232(sp)
    7d1a:	322d                	jal	7644 <_dtoa_r+0x1058>
    7d1c:	3130                	fld	fa2,96(a0)
    7d1e:	3039                	jal	752c <_dtoa_r+0xf40>
    7d20:	3235                	jal	764c <_dtoa_r+0x1060>
    7d22:	2d31                	jal	833e <_Bfree+0x22>
    7d24:	3030                	fld	fa2,96(s0)
    7d26:	3430                	fld	fa2,104(s0)
    7d28:	772d                	lui	a4,0xfffeb
    7d2a:	6e69                	lui	t3,0x1a
    7d2c:	3436                	fld	fs0,360(sp)
    7d2e:	725c                	flw	fa5,36(a2)
    7d30:	7369                	lui	t1,0xffffa
    7d32:	6e2d7663          	bgeu	s10,sp,841e <__multadd+0x8e>
    7d36:	2d656e6f          	jal	t3,5e00c <_data_lma+0x52e94>
    7d3a:	6d65                	lui	s10,0x19
    7d3c:	6562                	flw	fa0,24(sp)
    7d3e:	5c64                	lw	s1,124(s0)
    7d40:	6e69                	lui	t3,0x1a
    7d42:	64756c63          	bltu	a0,t2,839a <__multadd+0xa>
    7d46:	5c65                	li	s8,-7
    7d48:	00737973          	csrrci	s2,0x7,6
    7d4c:	3a65                	jal	7704 <_dtoa_r+0x1118>
    7d4e:	705c                	flw	fa5,36(s0)
    7d50:	6f72                	flw	ft10,28(sp)
    7d52:	6d617267          	0x6d617267
    7d56:	6966                	flw	fs2,88(sp)
    7d58:	656c                	flw	fa1,76(a0)
    7d5a:	36387873          	csrrci	a6,0x363,16
    7d5e:	6e5c                	flw	fa5,28(a2)
    7d60:	616d726f          	jal	tp,df376 <_data_lma+0xd41fe>
    7d64:	2d6c                	fld	fa1,216(a0)
    7d66:	6972                	flw	fs2,28(sp)
    7d68:	2d766373          	csrrsi	t1,0x2d7,12
    7d6c:	6f6e                	flw	ft10,216(sp)
    7d6e:	656e                	flw	fa0,216(sp)
    7d70:	672d                	lui	a4,0xb
    7d72:	382d6363          	bltu	s10,sp,80f8 <__smakebuf_r+0xd8>
    7d76:	322e                	fld	ft4,232(sp)
    7d78:	302e                	fld	ft0,232(sp)
    7d7a:	322d                	jal	76a4 <_dtoa_r+0x10b8>
    7d7c:	322e                	fld	ft4,232(sp)
    7d7e:	322d                	jal	76a8 <_dtoa_r+0x10bc>
    7d80:	3130                	fld	fa2,96(a0)
    7d82:	3039                	jal	7590 <_dtoa_r+0xfa4>
    7d84:	3235                	jal	76b0 <_dtoa_r+0x10c4>
    7d86:	2d31                	jal	83a2 <__multadd+0x12>
    7d88:	3030                	fld	fa2,96(s0)
    7d8a:	3430                	fld	fa2,104(s0)
    7d8c:	772d                	lui	a4,0xfffeb
    7d8e:	6e69                	lui	t3,0x1a
    7d90:	3436                	fld	fs0,360(sp)
    7d92:	6c5c                	flw	fa5,28(s0)
    7d94:	6269                	lui	tp,0x1a
    7d96:	675c                	flw	fa5,12(a4)
    7d98:	725c6363          	bltu	s8,t0,84be <__multadd+0x12e>
    7d9c:	7369                	lui	t1,0xffffa
    7d9e:	6e2d7663          	bgeu	s10,sp,848a <__multadd+0xfa>
    7da2:	2d656e6f          	jal	t3,5e078 <_data_lma+0x52f00>
    7da6:	6d65                	lui	s10,0x19
    7da8:	6562                	flw	fa0,24(sp)
    7daa:	5c64                	lw	s1,124(s0)
    7dac:	2e38                	fld	fa4,88(a2)
    7dae:	2e32                	fld	ft8,264(sp)
    7db0:	5c30                	lw	a2,120(s0)
    7db2:	6e69                	lui	t3,0x1a
    7db4:	64756c63          	bltu	a0,t2,840c <__multadd+0x7c>
    7db8:	0065                	c.nop	25
    7dba:	2f637273          	csrrci	tp,0x2f6,6
    7dbe:	616d                	addi	sp,sp,240
    7dc0:	6e69                	lui	t3,0x1a
    7dc2:	636e692f          	0x636e692f
    7dc6:	0000                	unimp
    7dc8:	6974                	flw	fa3,84(a0)
    7dca:	656d                	lui	a0,0x1b
    7dcc:	2e72                	fld	ft8,280(sp)
    7dce:	00010063          	beqz	sp,7dce <__sfp+0x12>
    7dd2:	6c00                	flw	fs0,24(s0)
    7dd4:	2e6b636f          	jal	t1,be0ba <_data_lma+0xb2f42>
    7dd8:	0068                	addi	a0,sp,12
    7dda:	0002                	c.slli64	zero
    7ddc:	5f00                	lw	s0,56(a4)
    7dde:	7974                	flw	fa3,116(a0)
    7de0:	6570                	flw	fa2,76(a0)
    7de2:	00682e73          	csrrs	t3,0x6,a6
    7de6:	0002                	c.slli64	zero
    7de8:	7300                	flw	fs0,32(a4)
    7dea:	6474                	flw	fa3,76(s0)
    7dec:	6564                	flw	fs1,76(a0)
    7dee:	2e66                	fld	ft8,88(sp)
    7df0:	0068                	addi	a0,sp,12
    7df2:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a4>
    7df6:	6565                	lui	a0,0x19
    7df8:	746e                	flw	fs0,248(sp)
    7dfa:	682e                	flw	fa6,200(sp)
    7dfc:	0200                	addi	s0,sp,256
    7dfe:	0000                	unimp
    7e00:	6974                	flw	fa3,84(a0)
    7e02:	656d                	lui	a0,0x1b
    7e04:	2e72                	fld	ft8,280(sp)
    7e06:	0068                	addi	a0,sp,12
    7e08:	0004                	0x4
    7e0a:	0000                	unimp
    7e0c:	1405                	addi	s0,s0,-31
    7e0e:	0500                	addi	s0,sp,640
    7e10:	0002                	c.slli64	zero
    7e12:	0000                	unimp
    7e14:	1a00                	addi	s0,sp,304
    7e16:	0105                	addi	sp,sp,1
    7e18:	00090203          	lb	tp,0(s2)
    7e1c:	0100                	addi	s0,sp,128
    7e1e:	0009                	c.nop	2
    7e20:	0000                	unimp
    7e22:	0101                	addi	sp,sp,0
    7e24:	1f05                	addi	t5,t5,-31
    7e26:	0500                	addi	s0,sp,640
    7e28:	dc02                	sw	zero,56(sp)
    7e2a:	0031                	c.nop	12
    7e2c:	0300                	addi	s0,sp,384
    7e2e:	010c                	addi	a1,sp,128
    7e30:	0505                	addi	a0,a0,1
    7e32:	00090103          	lb	sp,0(s2)
    7e36:	0100                	addi	s0,sp,128
    7e38:	1805                	addi	a6,a6,-31
    7e3a:	0306                	slli	t1,t1,0x1
    7e3c:	0900                	addi	s0,sp,144
    7e3e:	0000                	unimp
    7e40:	0501                	addi	a0,a0,0
    7e42:	0605                	addi	a2,a2,1
    7e44:	08090103          	lb	sp,128(s2)
    7e48:	0100                	addi	s0,sp,128
    7e4a:	1805                	addi	a6,a6,-31
    7e4c:	0306                	slli	t1,t1,0x1
    7e4e:	0900                	addi	s0,sp,144
    7e50:	0000                	unimp
    7e52:	0501                	addi	a0,a0,0
    7e54:	0605                	addi	a2,a2,1
    7e56:	04090103          	lb	sp,64(s2)
    7e5a:	0100                	addi	s0,sp,128
    7e5c:	1f05                	addi	t5,t5,-31
    7e5e:	0306                	slli	t1,t1,0x1
    7e60:	097d                	addi	s2,s2,31
    7e62:	0000                	unimp
    7e64:	0501                	addi	a0,a0,0
    7e66:	0903032f          	0x903032f
    7e6a:	0004                	0x4
    7e6c:	0501                	addi	a0,a0,0
    7e6e:	031f 097d 0008      	0x8097d031f
    7e74:	0501                	addi	a0,a0,0
    7e76:	0903032f          	0x903032f
    7e7a:	0004                	0x4
    7e7c:	0501                	addi	a0,a0,0
    7e7e:	0301                	addi	t1,t1,0
    7e80:	0901                	addi	s2,s2,0
    7e82:	0008                	0x8
    7e84:	0901                	addi	s2,s2,0
    7e86:	000c                	0xc
    7e88:	0100                	addi	s0,sp,128
    7e8a:	fc01                	bnez	s0,7da2 <__sinit+0xb2>
    7e8c:	0002                	c.slli64	zero
    7e8e:	0300                	addi	s0,sp,384
    7e90:	4500                	lw	s0,8(a0)
    7e92:	0000                	unimp
    7e94:	0100                	addi	s0,sp,128
    7e96:	fb01                	bnez	a4,7da6 <__sinit+0xb6>
    7e98:	0d0e                	slli	s10,s10,0x3
    7e9a:	0100                	addi	s0,sp,128
    7e9c:	0101                	addi	sp,sp,0
    7e9e:	0001                	nop
    7ea0:	0000                	unimp
    7ea2:	0001                	nop
    7ea4:	0100                	addi	s0,sp,128
    7ea6:	2f2e                	fld	ft10,200(sp)
    7ea8:	2f637273          	csrrci	tp,0x2f6,6
    7eac:	616d                	addi	sp,sp,240
    7eae:	6e69                	lui	t3,0x1a
    7eb0:	6372732f          	0x6372732f
    7eb4:	7300                	flw	fs0,32(a4)
    7eb6:	6372                	flw	ft6,28(sp)
    7eb8:	69616d2f          	0x69616d2f
    7ebc:	2f6e                	fld	ft10,216(sp)
    7ebe:	6e69                	lui	t3,0x1a
    7ec0:	75000063          	beq	zero,a6,8600 <__i2b+0x8>
    7ec4:	74726173          	csrrsi	sp,0x747,4
    7ec8:	632e                	flw	ft6,200(sp)
    7eca:	0100                	addi	s0,sp,128
    7ecc:	0000                	unimp
    7ece:	7375                	lui	t1,0xffffd
    7ed0:	7261                	lui	tp,0xffff8
    7ed2:	2e74                	fld	fa3,216(a2)
    7ed4:	0068                	addi	a0,sp,12
    7ed6:	0002                	c.slli64	zero
    7ed8:	0000                	unimp
    7eda:	1805                	addi	a6,a6,-31
    7edc:	0500                	addi	s0,sp,640
    7ede:	0002                	c.slli64	zero
    7ee0:	0000                	unimp
    7ee2:	1400                	addi	s0,sp,544
    7ee4:	0505                	addi	a0,a0,1
    7ee6:	00090103          	lb	sp,0(s2)
    7eea:	0100                	addi	s0,sp,128
    7eec:	1205                	addi	tp,tp,-31
    7eee:	0306                	slli	t1,t1,0x1
    7ef0:	0900                	addi	s0,sp,144
    7ef2:	0000                	unimp
    7ef4:	0501                	addi	a0,a0,0
    7ef6:	0301                	addi	t1,t1,0
    7ef8:	0901                	addi	s2,s2,0
    7efa:	0000                	unimp
    7efc:	0901                	addi	s2,s2,0
    7efe:	0000                	unimp
    7f00:	0100                	addi	s0,sp,128
    7f02:	0501                	addi	a0,a0,0
    7f04:	0205001b          	0x205001b
    7f08:	0000                	unimp
    7f0a:	0000                	unimp
    7f0c:	03050517          	auipc	a0,0x3050
    7f10:	0901                	addi	s2,s2,0
    7f12:	0000                	unimp
    7f14:	0501                	addi	a0,a0,0
    7f16:	030a                	slli	t1,t1,0x2
    7f18:	0900                	addi	s0,sp,144
    7f1a:	0000                	unimp
    7f1c:	0501                	addi	a0,a0,0
    7f1e:	0615                	addi	a2,a2,5
    7f20:	00090003          	lb	zero,0(s2)
    7f24:	0100                	addi	s0,sp,128
    7f26:	0505                	addi	a0,a0,1
    7f28:	00090003          	lb	zero,0(s2)
    7f2c:	0100                	addi	s0,sp,128
    7f2e:	1205                	addi	tp,tp,-31
    7f30:	00097d03          	0x97d03
    7f34:	0100                	addi	s0,sp,128
    7f36:	0905                	addi	s2,s2,1
    7f38:	0200                	addi	s0,sp,256
    7f3a:	0304                	addi	s1,sp,384
    7f3c:	0306                	slli	t1,t1,0x1
    7f3e:	0904                	addi	s1,sp,144
    7f40:	0000                	unimp
    7f42:	0501                	addi	a0,a0,0
    7f44:	0005                	c.nop	1
    7f46:	0402                	c.slli64	s0
    7f48:	097c0303          	lb	t1,151(s8) # 1a097 <_data_lma+0xef1f>
    7f4c:	0000                	unimp
    7f4e:	0501                	addi	a0,a0,0
    7f50:	0012                	c.slli	zero,0x4
    7f52:	0402                	c.slli64	s0
    7f54:	00030603          	lb	a2,0(t1) # ffffd000 <__freertos_irq_stack_top+0xfefed000>
    7f58:	0009                	c.nop	2
    7f5a:	0100                	addi	s0,sp,128
    7f5c:	1505                	addi	a0,a0,-31
    7f5e:	0200                	addi	s0,sp,256
    7f60:	0304                	addi	s1,sp,384
    7f62:	00090303          	lb	t1,0(s2)
    7f66:	0100                	addi	s0,sp,128
    7f68:	0505                	addi	a0,a0,1
    7f6a:	0200                	addi	s0,sp,256
    7f6c:	0304                	addi	s1,sp,384
    7f6e:	00090003          	lb	zero,0(s2)
    7f72:	0100                	addi	s0,sp,128
    7f74:	0105                	addi	sp,sp,1
    7f76:	00090303          	lb	t1,0(s2)
    7f7a:	0100                	addi	s0,sp,128
    7f7c:	0009                	c.nop	2
    7f7e:	0000                	unimp
    7f80:	0101                	addi	sp,sp,0
    7f82:	1105                	addi	sp,sp,-31
    7f84:	0500                	addi	s0,sp,640
    7f86:	0002                	c.slli64	zero
    7f88:	0000                	unimp
    7f8a:	0300                	addi	s0,sp,384
    7f8c:	010a                	slli	sp,sp,0x2
    7f8e:	1e05                	addi	t3,t3,-31
    7f90:	0306                	slli	t1,t1,0x1
    7f92:	0902                	c.slli64	s2
    7f94:	0000                	unimp
    7f96:	0501                	addi	a0,a0,0
    7f98:	0605                	addi	a2,a2,1
    7f9a:	00097f03          	0x97f03
    7f9e:	0100                	addi	s0,sp,128
    7fa0:	0905                	addi	s2,s2,1
    7fa2:	00090103          	lb	sp,0(s2)
    7fa6:	0100                	addi	s0,sp,128
    7fa8:	1e05                	addi	t3,t3,-31
    7faa:	0306                	slli	t1,t1,0x1
    7fac:	0900                	addi	s0,sp,144
    7fae:	0000                	unimp
    7fb0:	0501                	addi	a0,a0,0
    7fb2:	0609                	addi	a2,a2,2
    7fb4:	00090103          	lb	sp,0(s2)
    7fb8:	0100                	addi	s0,sp,128
    7fba:	1b05                	addi	s6,s6,-31
    7fbc:	0306                	slli	t1,t1,0x1
    7fbe:	0900                	addi	s0,sp,144
    7fc0:	0000                	unimp
    7fc2:	0501                	addi	a0,a0,0
    7fc4:	0609                	addi	a2,a2,2
    7fc6:	00090103          	lb	sp,0(s2)
    7fca:	0100                	addi	s0,sp,128
    7fcc:	0d05                	addi	s10,s10,1
    7fce:	0306                	slli	t1,t1,0x1
    7fd0:	097e                	slli	s2,s2,0x1f
    7fd2:	0000                	unimp
    7fd4:	0301                	addi	t1,t1,0
    7fd6:	0901                	addi	s2,s2,0
    7fd8:	0000                	unimp
    7fda:	0501                	addi	a0,a0,0
    7fdc:	09010317          	auipc	t1,0x9010
    7fe0:	0000                	unimp
    7fe2:	0501                	addi	a0,a0,0
    7fe4:	030c                	addi	a1,sp,384
    7fe6:	0900                	addi	s0,sp,144
    7fe8:	0000                	unimp
    7fea:	0501                	addi	a0,a0,0
    7fec:	060d                	addi	a2,a2,3
    7fee:	00090103          	lb	sp,0(s2)
    7ff2:	0100                	addi	s0,sp,128
    7ff4:	1905                	addi	s2,s2,-31
    7ff6:	0306                	slli	t1,t1,0x1
    7ff8:	0900                	addi	s0,sp,144
    7ffa:	0000                	unimp
    7ffc:	0501                	addi	a0,a0,0
    7ffe:	0301                	addi	t1,t1,0
    8000:	00000903          	lb	s2,0(zero) # 0 <_start>
    8004:	0901                	addi	s2,s2,0
    8006:	0000                	unimp
    8008:	0100                	addi	s0,sp,128
    800a:	0501                	addi	a0,a0,0
    800c:	001a                	c.slli	zero,0x6
    800e:	0205                	addi	tp,tp,1
    8010:	0000                	unimp
    8012:	0000                	unimp
    8014:	05011403          	lh	s0,80(sp)
    8018:	0305                	addi	t1,t1,1
    801a:	0901                	addi	s2,s2,0
    801c:	0000                	unimp
    801e:	0501                	addi	a0,a0,0
    8020:	030a                	slli	t1,t1,0x2
    8022:	0900                	addi	s0,sp,144
    8024:	0000                	unimp
    8026:	0501                	addi	a0,a0,0
    8028:	060e                	slli	a2,a2,0x3
    802a:	00090003          	lb	zero,0(s2)
    802e:	0100                	addi	s0,sp,128
    8030:	1e05                	addi	t3,t3,-31
    8032:	00097703          	0x97703
    8036:	0100                	addi	s0,sp,128
    8038:	0c05                	addi	s8,s8,1
    803a:	00090b03          	lb	s6,0(s2)
    803e:	0100                	addi	s0,sp,128
    8040:	1f05                	addi	t5,t5,-31
    8042:	00090003          	lb	zero,0(s2)
    8046:	0100                	addi	s0,sp,128
    8048:	0905                	addi	s2,s2,1
    804a:	0306                	slli	t1,t1,0x1
    804c:	097f                	0x97f
    804e:	0000                	unimp
    8050:	0501                	addi	a0,a0,0
    8052:	0305                	addi	t1,t1,1
    8054:	0975                	addi	s2,s2,29
    8056:	0000                	unimp
    8058:	0501                	addi	a0,a0,0
    805a:	0309                	addi	t1,t1,2
    805c:	0901                	addi	s2,s2,0
    805e:	0000                	unimp
    8060:	0501                	addi	a0,a0,0
    8062:	061e                	slli	a2,a2,0x7
    8064:	00090003          	lb	zero,0(s2)
    8068:	0100                	addi	s0,sp,128
    806a:	0905                	addi	s2,s2,1
    806c:	0306                	slli	t1,t1,0x1
    806e:	0901                	addi	s2,s2,0
    8070:	0000                	unimp
    8072:	0501                	addi	a0,a0,0
    8074:	0003061b          	0x3061b
    8078:	0009                	c.nop	2
    807a:	0100                	addi	s0,sp,128
    807c:	0905                	addi	s2,s2,1
    807e:	0306                	slli	t1,t1,0x1
    8080:	0901                	addi	s2,s2,0
    8082:	0000                	unimp
    8084:	0501                	addi	a0,a0,0
    8086:	060d                	addi	a2,a2,3
    8088:	00097e03          	0x97e03
    808c:	0100                	addi	s0,sp,128
    808e:	00090103          	lb	sp,0(s2)
    8092:	0100                	addi	s0,sp,128
    8094:	1705                	addi	a4,a4,-31
    8096:	00090103          	lb	sp,0(s2)
    809a:	0100                	addi	s0,sp,128
    809c:	0c05                	addi	s8,s8,1
    809e:	00090003          	lb	zero,0(s2)
    80a2:	0100                	addi	s0,sp,128
    80a4:	0d05                	addi	s10,s10,1
    80a6:	0306                	slli	t1,t1,0x1
    80a8:	0901                	addi	s2,s2,0
    80aa:	0000                	unimp
    80ac:	0501                	addi	a0,a0,0
    80ae:	0619                	addi	a2,a2,6
    80b0:	00090003          	lb	zero,0(s2)
    80b4:	0100                	addi	s0,sp,128
    80b6:	1105                	addi	sp,sp,-31
    80b8:	00090703          	lb	a4,0(s2)
    80bc:	0100                	addi	s0,sp,128
    80be:	1905                	addi	s2,s2,-31
    80c0:	00097903          	0x97903
    80c4:	0100                	addi	s0,sp,128
    80c6:	0905                	addi	s2,s2,1
    80c8:	0306                	slli	t1,t1,0x1
    80ca:	0908                	addi	a0,sp,144
    80cc:	0000                	unimp
    80ce:	0501                	addi	a0,a0,0
    80d0:	0611                	addi	a2,a2,4
    80d2:	00097f03          	0x97f03
    80d6:	0100                	addi	s0,sp,128
    80d8:	0c05                	addi	s8,s8,1
    80da:	00090103          	lb	sp,0(s2)
    80de:	0100                	addi	s0,sp,128
    80e0:	1f05                	addi	t5,t5,-31
    80e2:	0200                	addi	s0,sp,256
    80e4:	0104                	addi	s1,sp,128
    80e6:	00090003          	lb	zero,0(s2)
    80ea:	0100                	addi	s0,sp,128
    80ec:	0d05                	addi	s10,s10,1
    80ee:	0306                	slli	t1,t1,0x1
    80f0:	0901                	addi	s2,s2,0
    80f2:	0000                	unimp
    80f4:	0501                	addi	a0,a0,0
    80f6:	00030617          	auipc	a2,0x30
    80fa:	0009                	c.nop	2
    80fc:	0100                	addi	s0,sp,128
    80fe:	0d05                	addi	s10,s10,1
    8100:	0306                	slli	t1,t1,0x1
    8102:	0901                	addi	s2,s2,0
    8104:	0000                	unimp
    8106:	0501                	addi	a0,a0,0
    8108:	0601                	addi	a2,a2,0
    810a:	00090303          	lb	t1,0(s2)
    810e:	0100                	addi	s0,sp,128
    8110:	0009                	c.nop	2
    8112:	0000                	unimp
    8114:	0101                	addi	sp,sp,0
    8116:	2d05                	jal	8746 <__multiply+0x116>
    8118:	0500                	addi	s0,sp,640
    811a:	0c02                	c.slli64	s8
    811c:	0032                	c.slli	zero,0xc
    811e:	0300                	addi	s0,sp,384
    8120:	0122                	slli	sp,sp,0x8
    8122:	0505                	addi	a0,a0,1
    8124:	00090103          	lb	sp,0(s2)
    8128:	0100                	addi	s0,sp,128
    812a:	0a05                	addi	s4,s4,1
    812c:	00090003          	lb	zero,0(s2)
    8130:	0100                	addi	s0,sp,128
    8132:	0505                	addi	a0,a0,1
    8134:	0306                	slli	t1,t1,0x1
    8136:	0900                	addi	s0,sp,144
    8138:	0000                	unimp
    813a:	0501                	addi	a0,a0,0
    813c:	0312                	slli	t1,t1,0x4
    813e:	0960                	addi	s0,sp,156
    8140:	0008                	0x8
    8142:	0501                	addi	a0,a0,0
    8144:	0009                	c.nop	2
    8146:	0402                	c.slli64	s0
    8148:	21030603          	lb	a2,528(t1) # 90181ec <__freertos_irq_stack_top+0x80081ec>
    814c:	0409                	addi	s0,s0,2
    814e:	0100                	addi	s0,sp,128
    8150:	0505                	addi	a0,a0,1
    8152:	0200                	addi	s0,sp,256
    8154:	0304                	addi	s1,sp,384
    8156:	00095f03          	lhu	t5,0(s2)
    815a:	0100                	addi	s0,sp,128
    815c:	1205                	addi	tp,tp,-31
    815e:	0200                	addi	s0,sp,256
    8160:	0304                	addi	s1,sp,384
    8162:	0306                	slli	t1,t1,0x1
    8164:	0900                	addi	s0,sp,144
    8166:	0000                	unimp
    8168:	0501                	addi	a0,a0,0
    816a:	0005                	c.nop	1
    816c:	0402                	c.slli64	s0
    816e:	09200303          	lb	t1,146(zero) # 92 <main+0x16>
    8172:	000c                	0xc
    8174:	0601                	addi	a2,a2,0
    8176:	04090303          	lb	t1,64(s2)
    817a:	0100                	addi	s0,sp,128
    817c:	0105                	addi	sp,sp,1
    817e:	0306                	slli	t1,t1,0x1
    8180:	0901                	addi	s2,s2,0
    8182:	0000                	unimp
    8184:	0901                	addi	s2,s2,0
    8186:	0008                	0x8
    8188:	0100                	addi	s0,sp,128
    818a:	c301                	beqz	a4,818a <memcpy+0x32>
    818c:	0000                	unimp
    818e:	0300                	addi	s0,sp,384
    8190:	2900                	fld	fs0,16(a0)
    8192:	0000                	unimp
    8194:	0100                	addi	s0,sp,128
    8196:	fb01                	bnez	a4,80a6 <__smakebuf_r+0x86>
    8198:	0d0e                	slli	s10,s10,0x3
    819a:	0100                	addi	s0,sp,128
    819c:	0101                	addi	sp,sp,0
    819e:	0001                	nop
    81a0:	0000                	unimp
    81a2:	0001                	nop
    81a4:	0100                	addi	s0,sp,128
    81a6:	2f2e                	fld	ft10,200(sp)
    81a8:	2f637273          	csrrci	tp,0x2f6,6
    81ac:	616d                	addi	sp,sp,240
    81ae:	6e69                	lui	t3,0x1a
    81b0:	0000                	unimp
    81b2:	72617473          	csrrci	s0,0x726,2
    81b6:	2e74                	fld	fa3,216(a2)
    81b8:	00010053          	fadd.s	ft0,ft2,ft0,rne
    81bc:	0000                	unimp
    81be:	0500                	addi	s0,sp,640
    81c0:	0002                	c.slli64	zero
    81c2:	0000                	unimp
    81c4:	0300                	addi	s0,sp,384
    81c6:	0203010b          	0x203010b
    81ca:	0809                	addi	a6,a6,2
    81cc:	0100                	addi	s0,sp,128
    81ce:	08090303          	lb	t1,128(s2)
    81d2:	0100                	addi	s0,sp,128
    81d4:	08090103          	lb	sp,128(s2)
    81d8:	0100                	addi	s0,sp,128
    81da:	08090103          	lb	sp,128(s2)
    81de:	0100                	addi	s0,sp,128
    81e0:	08090103          	lb	sp,128(s2)
    81e4:	0100                	addi	s0,sp,128
    81e6:	04090203          	lb	tp,64(s2)
    81ea:	0100                	addi	s0,sp,128
    81ec:	04090103          	lb	sp,64(s2)
    81f0:	0100                	addi	s0,sp,128
    81f2:	04090103          	lb	sp,64(s2)
    81f6:	0100                	addi	s0,sp,128
    81f8:	04090103          	lb	sp,64(s2)
    81fc:	0100                	addi	s0,sp,128
    81fe:	04090103          	lb	sp,64(s2)
    8202:	0100                	addi	s0,sp,128
    8204:	04090103          	lb	sp,64(s2)
    8208:	0100                	addi	s0,sp,128
    820a:	04090403          	lb	s0,64(s2)
    820e:	0100                	addi	s0,sp,128
    8210:	08090103          	lb	sp,128(s2)
    8214:	0100                	addi	s0,sp,128
    8216:	08090103          	lb	sp,128(s2)
    821a:	0100                	addi	s0,sp,128
    821c:	04090203          	lb	tp,64(s2)
    8220:	0100                	addi	s0,sp,128
    8222:	04090103          	lb	sp,64(s2)
    8226:	0100                	addi	s0,sp,128
    8228:	04090103          	lb	sp,64(s2)
    822c:	0100                	addi	s0,sp,128
    822e:	04090403          	lb	s0,64(s2)
    8232:	0100                	addi	s0,sp,128
    8234:	04090503          	lb	a0,64(s2)
    8238:	0100                	addi	s0,sp,128
    823a:	08090403          	lb	s0,128(s2)
    823e:	0100                	addi	s0,sp,128
    8240:	04090103          	lb	sp,64(s2)
    8244:	0100                	addi	s0,sp,128
    8246:	04090403          	lb	s0,64(s2)
    824a:	0100                	addi	s0,sp,128
    824c:	0409                	addi	s0,s0,2
    824e:	0000                	unimp
    8250:	0101                	addi	sp,sp,0

Disassembly of section .debug_str:

00000000 <.debug_str>:
	la gp, __global_pointer$
   0:	7974706f          	j	47f96 <_data_lma+0x3ce1e>
   4:	6570                	flw	fa2,76(a0)
   6:	7400                	flw	fs0,40(s0)
	la sp, _sp
   8:	6968                	flw	fa0,84(a0)
   a:	69665f73          	csrrwi	t5,0x696,12
   e:	646e                	flw	fs0,216(sp)
	la a0, _data_lma 
  10:	7000                	flw	fs0,32(s0)
  12:	657a6973          	csrrsi	s2,0x657,20
  16:	6500                	flw	fs0,8(a0)
	la a1, _data
  18:	5f65                	li	t5,-7
  1a:	3375                	jal	fffffdc6 <__freertos_irq_stack_top+0xfefefdc6>
  1c:	0032                	c.slli	zero,0xc
  1e:	31637263          	bgeu	t1,s6,322 <main+0x2a6>
	la a2, _edata
  22:	0036                	c.slli	zero,0xd
  24:	7266                	flw	ft4,120(sp)
  26:	5f006d6f          	jal	s10,6616 <_dtoa_r+0x2a>
	bgeu a1, a2, 2f
  2a:	655f6e6f          	jal	t3,f6e7e <_data_lma+0xebd06>
	lw t0, (a0)
  2e:	6978                	flw	fa4,84(a0)
	sw t0, (a1)
  30:	5f74                	lw	a3,124(a4)
  32:	7261                	lui	tp,0xffff8
	lw t1, (a1)
  34:	5f007367          	0x5f007367
	addi a0, a0, 4
  38:	6164                	flw	fs1,68(a0)
  3a:	6c79                	lui	s8,0x1e
	addi a1, a1, 4
  3c:	6769                	lui	a4,0x1a
  3e:	7468                	flw	fa0,108(s0)
	bltu a1, a2, 1b
  40:	5f00                	lw	s0,56(a4)
  42:	6f746377          	0x6f746377
	la a0, __bss_start
  46:	626d                	lui	tp,0x1b
  48:	735f 6174 6574      	0x65746174735f
	la a1, _end
  4e:	6300                	flw	fs0,0(a4)
  50:	5f65726f          	jal	tp,57646 <_data_lma+0x4c4ce>
	bgeu a0, a1, 2f
  54:	696c                	flw	fa1,84(a0)
  56:	695f7473          	csrrci	s0,0x695,30
	sw zero, (a0)
  5a:	696e                	flw	fs2,216(sp)
	addi a0, a0, 4
  5c:	0074                	addi	a3,sp,12
  5e:	725f 3834 5f00      	0x5f003834725f
    li x31,0xa0
  64:	6e676973          	csrrsi	s2,0x6e6,14
    call main
  68:	6c61                	lui	s8,0x18
  6a:	625f 6675 4d00      	0x4d006675625f
    li x31,0xaa
  70:	5441                	li	s0,-16
  72:	4552                	lw	a0,20(sp)
	li tp,0xee
  74:	6c5f0053          	0x6c5f0053
    j loop
  78:	6662                	flw	fa2,24(sp)
  7a:	657a6973          	csrrsi	s2,0x657,20
{
  7e:	5f00                	lw	s0,56(a4)
    portable_init(&(results[0].port), &argc, argv);
  80:	6c66                	flw	fs8,88(sp)
  82:	6761                	lui	a4,0x18
{
  84:	61640073          	0x61640073
  88:	7074                	flw	fa3,100(s0)
  8a:	7461                	lui	s0,0xffff8
  8c:	6500                	flw	fs0,8(a0)
  8e:	5f65                	li	t5,-7
  90:	00363173          	csrrc	sp,fcsr,a2
  94:	414d                	li	sp,19
  96:	5f54                	lw	a3,60(a4)
  98:	4150                	lw	a2,4(a0)
  9a:	4152                	lw	sp,20(sp)
  9c:	534d                	li	t1,-13
  9e:	535f 6600 616c      	0x616c6600535f
  a4:	61640067          	jr	1558(s0) # ffff8616 <__freertos_irq_stack_top+0xfefe8616>
  a8:	6174                	flw	fa3,68(a0)
  aa:	6c62                	flw	fs8,24(sp)
  ac:	006b636f          	jal	t1,b60b2 <_data_lma+0xaaf3a>
  b0:	6e69                	lui	t3,0x1a
  b2:	657a6973          	csrrsi	s2,0x657,20
  b6:	5f00                	lw	s0,56(a4)
  b8:	626d                	lui	tp,0x1b
  ba:	74617473          	csrrci	s0,0x746,2
  be:	0065                	c.nop	25
    portable_init(&(results[0].port), &argc, argv);
  c0:	725f 6165 0064      	0x646165725f
  c6:	6d5f 7262 656c      	0x656c72626d5f
  cc:	5f6e                	lw	t5,248(sp)
  ce:	74617473          	csrrci	s0,0x746,2
{
  d2:	0065                	c.nop	25
    portable_init(&(results[0].port), &argc, argv);
  d4:	5f706d63          	bltu	zero,s7,6ce <main+0x652>
  d8:	6469                	lui	s0,0x1a
  da:	0078                	addi	a4,sp,12
  dc:	6176                	flw	ft2,92(sp)
  de:	316c                	fld	fa1,224(a0)
  e0:	7600                	flw	fs0,40(a2)
  e2:	6c61                	lui	s8,0x18
    printf("start test1\n");
  e4:	0032                	c.slli	zero,0xc
  e6:	735f 6474 756f      	0x756f6474735f
  ec:	0074                	addi	a3,sp,12
  ee:	665f 6f70 5f73      	0x5f736f70665f
    results[0].seed1      = get_seed(1);
  f4:	0074                	addi	a3,sp,12
  f6:	65726f63          	bltu	tp,s7,754 <main+0x6d8>
  fa:	6c5f 7369 5f74      	0x5f7473696c5f
 100:	6572                	flw	fa0,28(sp)
 102:	6f6d                	lui	t5,0x1b
    results[0].seed2      = get_seed(2);
 104:	6576                	flw	fa0,92(sp)
 106:	5f00                	lw	s0,56(a4)
 108:	6e66                	flw	ft8,88(sp)
 10a:	6f660073          	0x6f660073
 10e:	6e75                	lui	t3,0x1d
 110:	0064                	addi	s1,sp,12
 112:	635f 6f6f 696b      	0x696b6f6f635f
    results[0].seed3      = get_seed(3);
 118:	0065                	c.nop	25
 11a:	7469                	lui	s0,0xffffa
 11c:	6d65                	lui	s10,0x19
 11e:	6d5f 646f 6669      	0x6669646f6d5f
    results[0].iterations = get_seed_32(4);
 124:	6569                	lui	a0,0x1a
 126:	0064                	addi	s1,sp,12
 128:	425f 6769 6e69      	0x6e696769425f
 12e:	0074                	addi	a3,sp,12
 130:	5f5f 6d74 775f      	0x775f6d745f5f
    printf("start test2\n");
 136:	6164                	flw	fs1,68(a0)
 138:	0079                	c.nop	30
 13a:	65726f63          	bltu	tp,s7,798 <main+0x71c>
 13e:	6c5f 7369 5f74      	0x5f7473696c5f
    results[0].execs = get_seed_32(5);
 144:	6572                	flw	fa0,28(sp)
 146:	6576                	flw	fa0,92(sp)
 148:	7372                	flw	ft6,60(sp)
 14a:	0065                	c.nop	25
 14c:	725f 7365 6c75      	0x6c757365725f
 152:	0074                	addi	a3,sp,12
    printf("start test21\n");
 154:	5f5f 6d74 685f      	0x685f6d745f5f
 15a:	0072756f          	jal	a0,27960 <_data_lma+0x1c7e8>
 15e:	7371                	lui	t1,0xffffc
 160:	7a69                	lui	s4,0xffffa
 162:	0065                	c.nop	25
    if (results[0].execs == 0)
 164:	5f5f 6f63 6e75      	0x6e756f635f5f
 16a:	0074                	addi	a3,sp,12
    printf("start test3\n");
 16c:	696c                	flw	fa1,84(a0)
 16e:	645f7473          	csrrci	s0,0x645,30
 172:	7461                	lui	s0,0xffff8
 174:	0061                	c.nop	24
 176:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 17c:	6e69                	lui	t3,0x1a
 17e:	5f00                	lw	s0,56(a4)
 180:	656e                	flw	fa0,216(sp)
 182:	7478                	flw	fa4,108(s0)
 184:	0066                	c.slli	zero,0x19
 186:	725f 6e61 3464      	0x34646e61725f
 18c:	0038                	addi	a4,sp,8
 18e:	725f 7365 6c75      	0x6c757365725f
 194:	5f74                	lw	a3,124(a4)
 196:	6f6c006b          	0x6f6c006b
 19a:	676e                	flw	fa4,216(sp)
    printf("start test4\n");
 19c:	6c20                	flw	fs0,88(s0)
 19e:	20676e6f          	jal	t3,763a4 <_data_lma+0x6b22c>
 1a2:	6e75                	lui	t3,0x1d
 1a4:	6e676973          	csrrsi	s2,0x6e6,14
 1a8:	6465                	lui	s0,0x19
 1aa:	6920                	flw	fs0,80(a0)
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 1ac:	746e                	flw	fs0,248(sp)
 1ae:	5f00                	lw	s0,56(a4)
 1b0:	7361                	lui	t1,0xffff8
 1b2:	6d697463          	bgeu	s2,s6,87a <main+0x7fe>
 1b6:	5f65                	li	t5,-7
 1b8:	7562                	flw	fa0,56(sp)
 1ba:	0066                	c.slli	zero,0x19
 1bc:	5f5f 4673 4c49      	0x4c4946735f5f
 1c2:	0045                	c.nop	17
 1c4:	775f 7364 4d00      	0x4d007364775f
 1ca:	5441                	li	s0,-16
 1cc:	4144                	lw	s1,4(a0)
 1ce:	0054                	addi	a3,sp,4
        if ((1 << (ee_u32)i) & results[0].execs)
 1d0:	65726f63          	bltu	tp,s7,82e <main+0x7b2>
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1d4:	625f 6e65 6863      	0x68636e65625f
 1da:	6c5f 7369 0074      	0x7473696c5f
 1e0:	636c6163          	bltu	s8,s6,802 <main+0x786>
 1e4:	665f 6e75 0063      	0x636e75665f
        if ((1 << (ee_u32)i) & results[0].execs)
 1ea:	6f70                	flw	fa2,92(a4)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1ec:	7472                	flw	fs0,60(sp)
 1ee:	6261                	lui	tp,0x18
        if ((1 << (ee_u32)i) & results[0].execs)
 1f0:	656c                	flw	fa1,76(a0)
 1f2:	695f 0064 5f5f      	0x5f5f0064695f
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1f8:	4946                	lw	s2,80(sp)
 1fa:	454c                	lw	a1,12(a0)
 1fc:	5f00                	lw	s0,56(a4)
 1fe:	7366666f          	jal	a2,66934 <_data_lma+0x5b7bc>
    results[i].err         = 0;
 202:	7465                	lui	s0,0xffff9
        if ((1 << (ee_u32)i) & results[0].execs)
 204:	5f00                	lw	s0,56(a4)
 206:	6d65                	lui	s10,0x19
            num_algorithms++;
 208:	7265                	lui	tp,0xffff9
 20a:	636e6567          	0x636e6567
        if ((1 << (ee_u32)i) & results[0].execs)
 20e:	0079                	c.nop	30
            num_algorithms++;
 210:	79706f63          	bltu	zero,s7,9ae <main+0x932>
 214:	695f 666e 006f      	0x6f666e695f
 21a:	65726f63          	bltu	tp,s7,878 <main+0x7fc>
        results[i].size = results[i].size / num_algorithms;
 21e:	625f 6e65 6863      	0x68636e65625f
 224:	735f 6174 6574      	0x65746174735f
 22a:	5f00                	lw	s0,56(a4)
 22c:	745f 5f6d 6573      	0x65735f6d745f
 232:	5f5f0063          	beq	t5,s5,812 <main+0x796>
        if ((1 << (ee_u32)i) & results[0].execs)
 236:	6d74                	flw	fa3,92(a0)
 238:	795f 6164 0079      	0x796164795f
 23e:	695f 636e 5f00      	0x5f00636e695f
        if (results[i].execs & ID_LIST)
 244:	6e69                	lui	t3,0x1a
 246:	0064                	addi	s1,sp,12
        if (results[i].execs & ID_MATRIX)
 248:	6d5f 7362 7472      	0x747273626d5f
        if (results[i].execs & ID_STATE)
 24e:	7363776f          	jal	a4,37984 <_data_lma+0x2c80c>
 252:	735f 6174 6574      	0x65746174735f
            core_init_state(
 258:	6600                	flw	fs0,8(a2)
 25a:	6e69                	lui	t3,0x1a
                results[0].size, results[i].seed1, results[i].memblock[3]);
 25c:	5f64                	lw	s1,124(a4)
 25e:	756e                	flw	fa0,248(sp)
            core_init_state(
 260:	006d                	c.nop	27
 262:	745f 6e7a 6d61      	0x6d616e7a745f
 268:	0065                	c.nop	25
 26a:	5f5f 6176 756c      	0x756c61765f5f
 270:	0065                	c.nop	25
 272:	705f 7335 7000      	0x70007335705f
 278:	0074726f          	jal	tp,47a7e <_data_lma+0x3c906>
 27c:	775f 7363 7472      	0x74727363775f
    if (results[0].iterations == 0)
 282:	73626d6f          	jal	s10,269b8 <_data_lma+0x1b840>
 286:	735f 6174 6574      	0x65746174735f
        while (secs_passed < (secs_ret)1)
 28c:	5f00                	lw	s0,56(a4)
 28e:	626d                	lui	tp,0x1b
 290:	656c                	flw	fa1,76(a0)
 292:	5f6e                	lw	t5,248(sp)
        results[0].iterations = 1;
 294:	74617473          	csrrci	s0,0x746,2
 298:	0065                	c.nop	25
 29a:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
        crc      = core_bench_list(res, 1);
 2a0:	6164                	flw	fs1,68(a0)
 2a2:	0079                	c.nop	30
 2a4:	735f 6769 665f      	0x665f6769735f
 2aa:	6e75                	lui	t3,0x1d
 2ac:	6d5f0063          	beq	t5,s5,96c <main+0x8f0>
 2b0:	7262                	flw	ft4,56(sp)
 2b2:	6f74                	flw	fa3,92(a4)
 2b4:	735f6377          	0x735f6377
            printf("start test44\n");
 2b8:	6174                	flw	fa3,68(a0)
 2ba:	6574                	flw	fa3,76(a0)
 2bc:	5f00                	lw	s0,56(a4)
 2be:	7461                	lui	s0,0xffff8
 2c0:	7865                	lui	a6,0xffff9
 2c2:	7469                	lui	s0,0xffffa
            results[0].iterations *= 10;
 2c4:	0030                	addi	a2,sp,8
 2c6:	6565                	lui	a0,0x19
    for (i = 0; i < iterations; i++)
 2c8:	755f 0038 6f63      	0x6f630038755f
            results[0].iterations *= 10;
 2ce:	6572                	flw	fa0,28(sp)
 2d0:	6c5f 7369 5f74      	0x5f7473696c5f
 2d6:	6e75                	lui	t3,0x1d
 2d8:	6f64                	flw	fs1,92(a4)
 2da:	725f 6d65 766f      	0x766f6d65725f
            start_time();
 2e0:	0065                	c.nop	25
 2e2:	665f 6f6c 6b63      	0x6b636f6c665f
    res->crc                 = 0;
 2e8:	745f 6300 726f      	0x726f6300745f
 2ee:	5f65                	li	t5,-7
    for (i = 0; i < iterations; i++)
 2f0:	696c                	flw	fa1,84(a0)
 2f2:	665f7473          	csrrci	s0,0x665,30
        crc      = core_bench_list(res, 1);
 2f6:	6e69                	lui	t3,0x1a
 2f8:	0064                	addi	s1,sp,12
 2fa:	5f5f 6377 0068      	0x6863775f5f
 300:	695f 626f 0073      	0x73626f695f
        res->crc = crcu16(crc, res->crc);
 306:	5f5f 7562 6c69      	0x6c6975625f5f
 30c:	6974                	flw	fa3,84(a0)
 30e:	5f6e                	lw	t5,248(sp)
 310:	7570                	flw	fa2,108(a0)
 312:	7374                	flw	fa3,100(a4)
        crc      = core_bench_list(res, -1);
 314:	5f00                	lw	s0,56(a4)
 316:	736f6c63          	bltu	t5,s6,a4e <main+0x9d2>
 31a:	0065                	c.nop	25
 31c:	7464                	flw	fs1,108(s0)
 31e:	7079                	c.lui	zero,0xffffe
 320:	0065                	c.nop	25
 322:	5f5f 6473 6469      	0x646964735f5f
        res->crc = crcu16(crc, res->crc);
 328:	6e69                	lui	t3,0x1a
 32a:	7469                	lui	s0,0xffffa
 32c:	5f00                	lw	s0,56(a4)
 32e:	6974                	flw	fa3,84(a0)
 330:	656d                	lui	a0,0x1b
 332:	6f7a                	flw	ft10,156(sp)
        if (i == 0)
 334:	656e                	flw	fa0,216(sp)
 336:	7200                	flw	fs0,32(a2)
    for (i = 0; i < iterations; i++)
 338:	7465                	lui	s0,0xffff9
 33a:	6176                	flw	ft2,92(sp)
 33c:	006c                	addi	a1,sp,12
 33e:	616d                	addi	sp,sp,240
            stop_time();
 340:	5f74                	lw	a3,124(a4)
 342:	6170                	flw	fa2,68(a0)
 344:	6172                	flw	ft2,28(sp)
 346:	736d                	lui	t1,0xffffb
            secs_passed = time_in_secs(get_time());
 348:	5f00                	lw	s0,56(a4)
 34a:	69647473          	csrrci	s0,0x696,8
 34e:	006e                	c.slli	zero,0x1b
 350:	675f 6d61 616d      	0x616d6d61675f
 356:	735f 6769 676e      	0x676e6769735f
        while (secs_passed < (secs_ret)1)
 35c:	6d61                	lui	s10,0x18
 35e:	6300                	flw	fs0,0(a4)
            secs_passed = time_in_secs(get_time());
 360:	6372                	flw	ft6,28(sp)
 362:	3175                	jal	e <_start+0xe>
 364:	0036                	c.slli	zero,0xd
 366:	6f6c                	flw	fa1,92(a4)
        while (secs_passed < (secs_ret)1)
 368:	676e                	flw	fa4,216(sp)
 36a:	6c20                	flw	fs0,88(s0)
 36c:	20676e6f          	jal	t3,76572 <_data_lma+0x6b3fa>
 370:	6e69                	lui	t3,0x1a
 372:	0074                	addi	a3,sp,12
        divisor = (ee_u32)secs_passed;
 374:	65726f63          	bltu	tp,s7,9d2 <main+0x956>
 378:	6c5f 7369 5f74      	0x5f7473696c5f
 37e:	656d                	lui	a0,0x1b
 380:	6772                	flw	fa4,28(sp)
 382:	7365                	lui	t1,0xffff9
 384:	0074726f          	jal	tp,47b8a <_data_lma+0x3ca12>
        if (divisor == 0) /* some machines cast float to int as 0 since this
 388:	625f 7361 0065      	0x657361625f
            divisor = 1;
 38e:	665f 6572 6c65      	0x6c656572665f
        results[0].iterations *= 1 + 10 / divisor;
 394:	7369                	lui	t1,0xffffa
 396:	0074                	addi	a3,sp,12
 398:	6d5f 6c75 0074      	0x746c756d5f
 39e:	5f5f 4c55 6e6f      	0x6e6f4c555f5f
 3a4:	69660067          	jr	1686(a2) # 3878c <_data_lma+0x2d614>
 3a8:	646e                	flw	fs0,216(sp)
 3aa:	7265                	lui	tp,0xffff9
 3ac:	5f00                	lw	s0,56(a4)
 3ae:	74726377          	0x74726377
    start_time();
 3b2:	5f626d6f          	jal	s10,269a8 <_data_lma+0x1b830>
 3b6:	74617473          	csrrci	s0,0x746,2
    iterate(&results[0]);
 3ba:	0065                	c.nop	25
 3bc:	665f 6c69 0065      	0x656c69665f
 3c2:	65726f63          	bltu	tp,s7,a20 <main+0x9a4>
 3c6:	625f 6e65 6863      	0x68636e65625f
 3cc:	6d5f 7461 6972      	0x697274616d5f
 3d2:	0078                	addi	a4,sp,12
 3d4:	5f5f 6c63 6165      	0x61656c635f5f
    stop_time();
 3da:	756e                	flw	fa0,248(sp)
 3dc:	0070                	addi	a2,sp,12
 3de:	696c                	flw	fa1,84(a0)
    total_time = get_time();
 3e0:	645f7473          	csrrci	s0,0x645,30
 3e4:	7461                	lui	s0,0xffff8
 3e6:	5f61                	li	t5,-8
    seedcrc = crc16(results[0].seed1, seedcrc);
 3e8:	6d5f0073          	0x6d5f0073
 3ec:	7362                	flw	ft6,56(sp)
 3ee:	6174                	flw	fa3,68(a0)
 3f0:	6574                	flw	fa3,76(a0)
 3f2:	745f 5f00 6e66      	0x6e665f00745f
 3f8:	7261                	lui	tp,0xffff8
 3fa:	5f007367          	0x5f007367
 3fe:	745f 5f6d 7369      	0x73695f6d745f
 404:	7364                	flw	fs1,100(a4)
 406:	0074                	addi	a3,sp,12
 408:	6470                	flw	fa2,76(s0)
 40a:	7461                	lui	s0,0xffff8
    seedcrc = crc16(results[0].seed2, seedcrc);
 40c:	0061                	c.nop	24
 40e:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
 412:	20313143          	fmadd.s	ft2,ft2,ft3,ft4,rup
 416:	2e38                	fld	fa4,88(a2)
 418:	2e32                	fld	ft8,264(sp)
 41a:	2030                	fld	fa2,64(s0)
 41c:	6d2d                	lui	s10,0xb
 41e:	646f6d63          	bltu	t5,t1,a78 <main+0x9fc>
    seedcrc = crc16(results[0].seed3, seedcrc);
 422:	6c65                	lui	s8,0x19
 424:	6d3d                	lui	s10,0xf
 426:	6465                	lui	s0,0x19
 428:	6f6c                	flw	fa1,92(a4)
 42a:	6d2d2077          	0x6d2d2077
 42e:	6261                	lui	tp,0x18
 430:	3d69                	jal	2ca <main+0x24e>
 432:	6c69                	lui	s8,0x1a
    seedcrc = crc16(results[0].size, seedcrc);
 434:	3370                	fld	fa2,224(a4)
 436:	2032                	fld	ft0,264(sp)
 438:	6d2d                	lui	s10,0xb
 43a:	7261                	lui	tp,0xffff8
 43c:	723d6863          	bltu	s10,gp,b6c <main+0xaf0>
 440:	3376                	fld	ft6,376(sp)
 442:	6932                	flw	fs2,12(sp)
 444:	2d20                	fld	fs0,88(a0)
 446:	4f2d2067          	0x4f2d2067
 44a:	6166                	flw	ft2,88(sp)
 44c:	2d207473          	csrrci	s0,0x2d2,0
    switch (seedcrc)
 450:	3d647473          	csrrci	s0,0x3d6,8
 454:	31756e67          	0x31756e67
 458:	2031                	jal	464 <main+0x3e8>
 45a:	662d                	lui	a2,0xb
 45c:	7566                	flw	fa0,120(sp)
 45e:	636e                	flw	ft6,216(sp)
 460:	6974                	flw	fa3,84(a0)
 462:	732d6e6f          	jal	t3,d6b94 <_data_lma+0xcba1c>
 466:	6365                	lui	t1,0x19
 468:	6974                	flw	fa3,84(a0)
 46a:	20736e6f          	jal	t3,36e70 <_data_lma+0x2bcf8>
 46e:	662d                	lui	a2,0xb
            ee_printf("2K performance run parameters for coremark.\n");
 470:	6164                	flw	fs1,68(a0)
 472:	6174                	flw	fa3,68(a0)
 474:	732d                	lui	t1,0xfffeb
 476:	6365                	lui	t1,0x19
 478:	6974                	flw	fa3,84(a0)
 47a:	00736e6f          	jal	t3,36c80 <_data_lma+0x2bb08>
 47e:	685f 655f 7272      	0x7272655f685f
 484:	6f6e                	flw	ft10,216(sp)
 486:	5f00                	lw	s0,56(a4)
 488:	745f 5f6d 6f6d      	0x6f6d5f6d745f
            known_id = 3;
 48e:	006e                	c.slli	zero,0x1b
            ee_printf("2K performance run parameters for coremark.\n");
 490:	6f6c                	flw	fa1,92(a4)
 492:	676e                	flw	fa4,216(sp)
 494:	6420                	flw	fs0,72(s0)
 496:	6c62756f          	jal	a0,27b5c <_data_lma+0x1c9e4>
 49a:	0065                	c.nop	25
            known_id = 3;
 49c:	4c5f 434f 5f4b      	0x5f4b434f4c5f
        for (i = 0; i < default_num_contexts; i++)
 4a2:	0054                	addi	a3,sp,4
 4a4:	775f 6972 6574      	0x65746972775f
 4aa:	6500                	flw	fs0,8(a0)
 4ac:	6578                	flw	fa4,76(a0)
 4ae:	52007363          	bgeu	zero,zero,9d4 <main+0x958>
 4b2:	5345                	li	t1,-15
            results[i].err = 0;
 4b4:	4c55                	li	s8,21
 4b6:	5354                	lw	a3,36(a4)
 4b8:	535f 5f00 7461      	0x74615f00535f
 4be:	7865                	lui	a6,0xffff9
 4c0:	7469                	lui	s0,0xffffa
 4c2:	7000                	flw	fs0,32(s0)
 4c4:	7265                	lui	tp,0xffff9
 4c6:	695f 6574 006d      	0x6d6574695f
 4cc:	726f6873          	csrrsi	a6,0x726,30
 4d0:	2074                	fld	fa3,192(s0)
 4d2:	6e69                	lui	t3,0x1a
 4d4:	0074                	addi	a3,sp,12
 4d6:	2f2e                	fld	ft10,200(sp)
 4d8:	2f637273          	csrrci	tp,0x2f6,6
 4dc:	65726f63          	bltu	tp,s7,b3a <main+0xabe>
 4e0:	616d                	addi	sp,sp,240
 4e2:	6b72                	flw	fs6,28(sp)
 4e4:	726f632f          	0x726f632f
 4e8:	5f65                	li	t5,-7
 4ea:	696c                	flw	fa1,84(a0)
            total_errors += results[i].err;
 4ec:	6a5f7473          	csrrci	s0,0x6a5,30
        for (i = 0; i < default_num_contexts; i++)
 4f0:	2e6e696f          	jal	s2,e67d6 <_data_lma+0xdb65e>
            total_errors += results[i].err;
 4f4:	696d0063          	beq	s10,s6,b74 <main+0xaf8>
        for (i = 0; i < default_num_contexts; i++)
 4f8:	64657373          	csrrci	t1,0x646,10
            total_errors += results[i].err;
 4fc:	6300                	flw	fs0,0(a4)
 4fe:	6372                	flw	ft6,28(sp)
        for (i = 0; i < default_num_contexts; i++)
 500:	616d                	addi	sp,sp,240
 502:	7274                	flw	fa3,100(a2)
            total_errors += results[i].err;
 504:	7869                	lui	a6,0xffffa
 506:	5f00                	lw	s0,56(a4)
        for (i = 0; i < default_num_contexts; i++)
 508:	735f 0066 735f      	0x735f0066735f
            total_errors += results[i].err;
 50e:	6769                	lui	a4,0x1a
        for (i = 0; i < default_num_contexts; i++)
 510:	006e                	c.slli	zero,0x1b
 512:	64656573          	csrrsi	a0,0x646,10
            results[i].err = 0;
 516:	0031                	c.nop	12
 518:	64656573          	csrrsi	a0,0x646,10
 51c:	0032                	c.slli	zero,0xc
 51e:	64656573          	csrrsi	a0,0x646,10
 522:	69660033          	0x69660033
 526:	646e                	flw	fs0,216(sp)
 528:	7265                	lui	tp,0xffff9
 52a:	695f 7864 5f00      	0x5f007864695f
 530:	775f 6863 0062      	0x626863775f
            if ((results[i].execs & ID_LIST)
 536:	675f 6f6c 6162      	0x61626f6c675f
                && (results[i].crclist != list_known_crc[known_id]))
 53c:	5f6c                	lw	a1,124(a4)
 53e:	6d69                	lui	s10,0x1a
 540:	7570                	flw	fa2,108(a0)
 542:	6572                	flw	fa0,28(sp)
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
 544:	705f 7274 5f00      	0x5f007274705f
 54a:	745f 5f6d 6579      	0x65795f6d745f
 550:	7261                	lui	tp,0xffff8
 552:	6900                	flw	fs0,16(a0)
 554:	736e                	flw	ft6,248(sp)
 556:	7265                	lui	tp,0xffff9
 558:	5f74                	lw	a3,124(a4)
 55a:	6f70                	flw	fa2,92(a4)
                results[i].err++;
 55c:	6e69                	lui	t3,0x1a
 55e:	0074                	addi	a3,sp,12
 560:	6c5f 636f 6c61      	0x6c61636f6c5f
 566:	6974                	flw	fa3,84(a0)
            if ((results[i].execs & ID_MATRIX)
 568:	656d                	lui	a0,0x1b
 56a:	625f 6675 5f00      	0x5f006675625f
 570:	6e75                	lui	t3,0x1d
 572:	7375                	lui	t1,0xffffd
 574:	6465                	lui	s0,0x19
 576:	6c00                	flw	fs0,24(s0)
 578:	7369                	lui	t1,0xffffa
 57a:	5f74                	lw	a3,124(a4)
 57c:	00706d63          	bltu	zero,t2,596 <main+0x51a>
 580:	5f706d63          	bltu	zero,s7,b7a <main+0xafe>
 584:	706d6f63          	bltu	s10,t1,ca2 <main+0xc26>
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
 588:	656c                	flw	fa1,76(a0)
 58a:	0078                	addi	a4,sp,12
 58c:	635f 7476 656c      	0x656c7476635f
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
 592:	006e                	c.slli	zero,0x1b
 594:	6d5f 7861 6477      	0x647778616d5f
 59a:	6c5f0073          	0x6c5f0073
 59e:	3436                	fld	fs0,360(sp)
 5a0:	5f61                	li	t5,-8
 5a2:	7562                	flw	fa0,56(sp)
 5a4:	0066                	c.slli	zero,0x19
 5a6:	656e                	flw	fa0,216(sp)
                results[i].err++;
 5a8:	65746977          	0x65746977
 5ac:	006d                	c.nop	27
 5ae:	6572                	flw	fa0,28(sp)
 5b0:	6f6d                	lui	t5,0x1b
 5b2:	6576                	flw	fa0,92(sp)
 5b4:	0072                	c.slli	zero,0x1c
 5b6:	625f 6b6c 6973      	0x69736b6c625f
            if ((results[i].execs & ID_STATE)
 5bc:	657a                	flw	fa0,156(sp)
 5be:	5f00                	lw	s0,56(a4)
                && (results[i].crcstate != state_known_crc[known_id]))
 5c0:	745f 006d 6e5f      	0x6e5f006d745f
 5c6:	6f69                	lui	t5,0x1a
 5c8:	7362                	flw	ft6,56(sp)
 5ca:	7700                	flw	fs0,40(a4)
 5cc:	6e69                	lui	t3,0x1a
 5ce:	5f74                	lw	a3,124(a4)
 5d0:	0074                	addi	a3,sp,12
 5d2:	656d                	lui	a0,0x1b
 5d4:	626d                	lui	tp,0x1b
 5d6:	6f6c                	flw	fa1,92(a4)
 5d8:	655f6b63          	bltu	t5,s5,c2e <main+0xbb2>
 5dc:	646e                	flw	fs0,216(sp)
 5de:	6300                	flw	fs0,0(a4)
 5e0:	6372                	flw	ft6,28(sp)
 5e2:	696c                	flw	fa1,84(a0)
            results[i].list = core_list_init(
 5e4:	64007473          	csrrci	s0,0x640,0
 5e8:	7461                	lui	s0,0xffff8
 5ea:	6261                	lui	tp,0x18
 5ec:	6f6c                	flw	fa1,92(a4)
 5ee:	655f6b63          	bltu	t5,s5,c44 <main+0xbc8>
 5f2:	646e                	flw	fs0,216(sp)
 5f4:	5f00                	lw	s0,56(a4)
 5f6:	7364                	flw	fs1,100(a4)
 5f8:	61685f6f          	jal	t5,85c0e <_data_lma+0x7aa96>
 5fc:	646e                	flw	fs0,216(sp)
 5fe:	656c                	flw	fa1,76(a0)
 600:	5f00                	lw	s0,56(a4)
 602:	6c5f 636f 006b      	0x6b636f6c5f
 608:	635f 7476 7562      	0x75627476635f
 60e:	0066                	c.slli	zero,0x19
 610:	6e75                	lui	t3,0x1d
 612:	6e676973          	csrrsi	s2,0x6e6,14
 616:	6465                	lui	s0,0x19
 618:	6320                	flw	fs0,64(a4)
 61a:	6168                	flw	fa0,68(a0)
        if (results[i].execs & ID_MATRIX)
 61c:	0072                	c.slli	zero,0x1c
 61e:	696c                	flw	fa1,84(a0)
                                 | (((ee_s32)results[i].seed2) << 16),
 620:	685f7473          	csrrci	s0,0x685,30
 624:	6165                	addi	sp,sp,112
 626:	5f64                	lw	s1,124(a4)
 628:	6f630073          	0x6f630073
            core_init_matrix(results[0].size,
 62c:	6572                	flw	fa0,28(sp)
 62e:	6c5f 7369 5f74      	0x5f7473696c5f
                                 | (((ee_s32)results[i].seed2) << 16),
 634:	6e69                	lui	t3,0x1a
 636:	74726573          	csrrsi	a0,0x747,4
                             (ee_s32)results[i].seed1
 63a:	6e5f 7765 5f00      	0x5f0077656e5f
            core_init_matrix(results[0].size,
 640:	64746567          	0x64746567
                             (ee_s32)results[i].seed1
 644:	7461                	lui	s0,0xffff8
 646:	5f65                	li	t5,-7
            core_init_matrix(results[0].size,
 648:	7265                	lui	tp,0xffff9
 64a:	0072                	c.slli	zero,0x1c
                                 | (((ee_s32)results[i].seed2) << 16),
 64c:	6174                	flw	fa3,68(a0)
 64e:	6c69                	lui	s8,0x1a
            core_init_matrix(results[0].size,
 650:	6300                	flw	fs0,0(a4)
 652:	5f65726f          	jal	tp,57c48 <_data_lma+0x4cad0>
 656:	6572                	flw	fa0,28(sp)
 658:	746c7573          	csrrci	a0,0x746,24
 65c:	615f0073          	0x615f0073
 660:	6464                	flw	fs1,76(s0)
 662:	6400                	flw	fs0,8(s0)
 664:	6665                	lui	a2,0x19
 666:	7561                	lui	a0,0xffff8
 668:	746c                	flw	fa1,108(s0)
 66a:	6e5f 6d75 635f      	0x635f6d756e5f
 670:	65746e6f          	jal	t3,474c6 <_data_lma+0x3c34e>
 674:	7478                	flw	fa4,108(s0)
 676:	696c0073          	0x696c0073
 67a:	685f7473          	csrrci	s0,0x685,30
 67e:	6165                	addi	sp,sp,112
            ee_printf("Profile generation run parameters for coremark.\n");
 680:	0064                	addi	s1,sp,12
 682:	5f5f 6273 6675      	0x667562735f5f
 688:	6900                	flw	fs0,16(a0)
 68a:	6574                	flw	fa3,76(a0)
 68c:	6172                	flw	ft2,28(sp)
 68e:	6974                	flw	fa3,84(a0)
 690:	00736e6f          	jal	t3,36e96 <_data_lma+0x2bd1e>
 694:	675f 756c 0065      	0x65756c675f
 69a:	65726f63          	bltu	tp,s7,cf8 <main+0xc7c>
            known_id = 2;
 69e:	705f 726f 6174      	0x6174726f705f
            ee_printf("Profile generation run parameters for coremark.\n");
 6a4:	6c62                	flw	fs8,24(sp)
 6a6:	0065                	c.nop	25
 6a8:	6565                	lui	a0,0x19
 6aa:	755f 3631 5f00      	0x5f003631755f
            known_id = 2;
 6b0:	735f 6c67 6575      	0x65756c67735f
        && (results[0].seed3 == 0))
 6b6:	5f00                	lw	s0,56(a4)
 6b8:	74727473          	csrrci	s0,0x747,4
 6bc:	6c5f6b6f          	jal	s6,f7580 <_data_lma+0xec408>
        results[0].seed3 = 0x66;
 6c0:	7361                	lui	t1,0xffff8
 6c2:	0074                	addi	a3,sp,12
 6c4:	6d5f 7462 776f      	0x776f74626d5f
 6ca:	74735f63          	bge	t1,t2,e28 <core_bench_list+0xe8>
 6ce:	7461                	lui	s0,0xffff8
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
 6d0:	0065                	c.nop	25
 6d2:	6c5f 636f 6c61      	0x6c61636f6c5f
 6d8:	0065                	c.nop	25
 6da:	735f 6973 657a      	0x657a6973735f
 6e0:	745f 5f00 6572      	0x65725f00745f
 6e6:	6e65                	lui	t3,0x19
                results[i].err++;
 6e8:	0074                	addi	a3,sp,12
 6ea:	726f6873          	csrrsi	a6,0x726,30
 6ee:	2074                	fld	fa3,192(s0)
 6f0:	6e75                	lui	t3,0x1d
 6f2:	6e676973          	csrrsi	s2,0x6e6,14
 6f6:	6465                	lui	s0,0x19
 6f8:	6920                	flw	fs0,80(a0)
 6fa:	746e                	flw	fs0,248(sp)
 6fc:	6400                	flw	fs0,8(s0)
 6fe:	7461                	lui	s0,0xffff8
    switch (seedcrc)
 700:	3161                	jal	388 <main+0x30c>
 702:	0036                	c.slli	zero,0xd
    ee_s16       known_id = -1, total_errors = 0;
 704:	665f 746e 7079      	0x7079746e665f
    switch (seedcrc)
 70a:	7365                	lui	t1,0xffff9
    ee_s16       known_id = -1, total_errors = 0;
 70c:	5f00                	lw	s0,56(a4)
 70e:	657a6973          	csrrsi	s2,0x657,20
 712:	6800                	flw	fs0,16(s0)
    total_errors += check_data_types();
 714:	5c3a                	lw	s8,172(sp)
 716:	6c41                	lui	s8,0x10
 718:	506c                	lw	a1,100(s0)
 71a:	6f72                	flw	ft10,28(sp)
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 71c:	656a                	flw	fa0,152(sp)
 71e:	455c7463          	bgeu	s8,s5,b66 <main+0xaea>
    total_errors += check_data_types();
 722:	4449                	li	s0,18
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 724:	5c45                	li	s8,-15
 726:	6972                	flw	fs2,28(sp)
 728:	7474                	flw	fa3,108(s0)
 72a:	7265                	lui	tp,0xffff9
 72c:	6d20                	flw	fs0,88(a0)
 72e:	5f007563          	bgeu	zero,a6,d18 <main+0xc9c>
 732:	5f66666f          	jal	a2,66d28 <_data_lma+0x5bbb0>
    ee_printf("Total ticks      : %d\n", (int)total_time);
 736:	0074                	addi	a3,sp,12
 738:	6e5f 7562 0066      	0x6675626e5f
 73e:	755f 756e 6573      	0x6573756e755f
 744:	5f64                	lw	s1,124(a4)
 746:	6172                	flw	ft2,28(sp)
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
 748:	646e                	flw	fs0,216(sp)
 74a:	6500                	flw	fs0,8(a0)
 74c:	5f65                	li	t5,-7
 74e:	00323373          	csrrc	t1,fcsr,tp
 752:	7469                	lui	s0,0xffffa
 754:	6d65                	lui	s10,0x19
 756:	725f 6d65 766f      	0x766f6d65725f
 75c:	6465                	lui	s0,0x19
 75e:	5f00                	lw	s0,56(a4)
 760:	6e75                	lui	t3,0x1d
 762:	63657073          	csrci	0x636,10
 766:	6669                	lui	a2,0x1a
 768:	6569                	lui	a0,0x1a
 76a:	5f64                	lw	s1,124(a4)
    if (time_in_secs(total_time) > 0)
 76c:	6f6c                	flw	fa1,92(a4)
 76e:	656c6163          	bltu	s8,s6,db0 <core_bench_list+0x70>
 772:	695f 666e 006f      	0x6f666e695f
    total_errors += check_data_types();
 778:	665f 616c 7367      	0x7367616c665f
    if (time_in_secs(total_time) > 0)
 77e:	0032                	c.slli	zero,0xc
 780:	695f 5f73 7863      	0x78635f73695f
    total_errors += check_data_types();
 786:	0061                	c.nop	24
    if (time_in_secs(total_time) > 0)
 788:	6d6e                	flw	fs10,216(sp)
 78a:	7265                	lui	tp,0xffff9
 78c:	00736567          	0x736567
 790:	735f 6565 0064      	0x646565735f
                  default_num_contexts * results[0].iterations
 796:	725f 6e61 5f64      	0x5f646e61725f
 79c:	656e                	flw	fa0,216(sp)
 79e:	7478                	flw	fa4,108(s0)
 7a0:	5f00                	lw	s0,56(a4)
 7a2:	6c5f 636f 6c61      	0x6c61636f6c5f
        ee_printf("Iterations/Sec   : %lf\n",
 7a8:	5f65                	li	t5,-7
 7aa:	0074                	addi	a3,sp,12
 7ac:	735f 6565 006b      	0x6b6565735f
                      / time_in_secs(total_time));
 7b2:	73637263          	bgeu	t1,s6,ed6 <core_bench_list+0x196>
        ee_printf("Iterations/Sec   : %lf\n",
 7b6:	6174                	flw	fa3,68(a0)
                      / time_in_secs(total_time));
 7b8:	6574                	flw	fa3,76(a0)
 7ba:	4300                	lw	s0,0(a4)
 7bc:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
        ee_printf("Iterations/Sec   : %lf\n",
 7c0:	4f50                	lw	a2,28(a4)
 7c2:	5452                	lw	s0,52(sp)
 7c4:	4241                	li	tp,16
 7c6:	454c                	lw	a1,12(a0)
 7c8:	535f 5f00 7473      	0x74735f00535f
 7ce:	6564                	flw	fs1,76(a0)
 7d0:	7272                	flw	ft4,60(sp)
 7d2:	5f00                	lw	s0,56(a4)
 7d4:	6d6e                	flw	fs10,216(sp)
 7d6:	6c61                	lui	s8,0x18
 7d8:	6f6c                	flw	fa1,92(a4)
 7da:	755f0063          	beq	t5,s5,f1a <core_bench_list+0x1da>
 7de:	7562                	flw	fa0,56(sp)
 7e0:	0066                	c.slli	zero,0x19
 7e2:	7469                	lui	s0,0xffffa
 7e4:	7265                	lui	tp,0xffff9
 7e6:	7461                	lui	s0,0xffff8
 7e8:	0065                	c.nop	25
 7ea:	696c                	flw	fa1,84(a0)
 7ec:	6b5f7473          	csrrci	s0,0x6b5,30
    if (time_in_secs(total_time) < 10)
 7f0:	6f6e                	flw	ft10,216(sp)
 7f2:	635f6e77          	0x635f6e77
 7f6:	6372                	flw	ft6,28(sp)
 7f8:	4300                	lw	s0,0(a4)
 7fa:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 7fe:	4954                	lw	a3,20(a0)
 800:	00534b43          	fmadd.s	fs6,ft6,ft5,ft0,rmm
 804:	6974                	flw	fa3,84(a0)
 806:	656d                	lui	a0,0x1b
 808:	695f 5f6e 6573      	0x65735f6e695f
 80e:	73007363          	bgeu	zero,a6,f34 <core_bench_list+0x1f4>
 812:	6365                	lui	t1,0x19
    ee_printf("Iterations       : %lu\n",
 814:	65725f73          	csrrwi	t5,0x657,4
 818:	0074                	addi	a3,sp,12
 81a:	7270                	flw	fa2,100(a2)
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 81c:	7365                	lui	t1,0xffff9
 81e:	6e00                	flw	fs0,24(a2)
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 820:	6d75                	lui	s10,0x1d
 822:	615f 676c 726f      	0x726f676c615f
    ee_printf("Iterations       : %lu\n",
 828:	7469                	lui	s0,0xffffa
 82a:	6d68                	flw	fa0,92(a0)
 82c:	65670073          	0x65670073
 830:	5f74                	lw	a3,124(a4)
 832:	6974                	flw	fa3,84(a0)
 834:	656d                	lui	a0,0x1b
 836:	7000                	flw	fs0,32(s0)
 838:	6174726f          	jal	tp,4864e <_data_lma+0x3d4d6>
 83c:	6c62                	flw	fs8,24(sp)
 83e:	5f65                	li	t5,-7
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 840:	6e69                	lui	t3,0x1a
 842:	7469                	lui	s0,0xffffa
 844:	6300                	flw	fs0,0(a4)
 846:	5f65726f          	jal	tp,57e3c <_data_lma+0x4ccc4>
 84a:	6e69                	lui	t3,0x1a
 84c:	7469                	lui	s0,0xffffa
 84e:	735f 6174 6574      	0x65746174735f
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 854:	6400                	flw	fs0,8(s0)
 856:	7669                	lui	a2,0xffffa
 858:	7369                	lui	t1,0xffffa
 85a:	6300726f          	jal	tp,7e8a <__sfp+0xce>
 85e:	6f6c                	flw	fa1,92(a4)
 860:	745f6b63          	bltu	t5,t0,fb6 <core_bench_list+0x276>
 864:	6b00                	flw	fs0,16(a4)
 866:	6f6e                	flw	ft10,216(sp)
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 868:	695f6e77          	0x695f6e77
 86c:	0064                	addi	s1,sp,12
 86e:	7270                	flw	fa2,100(a2)
 870:	6e69                	lui	t3,0x1a
 872:	6674                	flw	fa3,76(a2)
 874:	6300                	flw	fs0,0(a4)
 876:	6568                	flw	fa0,76(a0)
 878:	645f6b63          	bltu	t5,t0,ece <core_bench_list+0x18e>
 87c:	7461                	lui	s0,0xffff8
 87e:	5f61                	li	t5,-8
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
 880:	7974                	flw	fa3,116(a0)
 882:	6570                	flw	fa2,76(a0)
 884:	65670073          	0x65670073
 888:	5f74                	lw	a3,124(a4)
 88a:	64656573          	csrrsi	a0,0x646,10
 88e:	335f 0032 2f2e      	0x2f2e0032335f
    if (results[0].execs & ID_LIST)
 894:	2f637273          	csrrci	tp,0x2f6,6
        total_errors++;
 898:	65726f63          	bltu	tp,s7,ef6 <core_bench_list+0x1b6>
 89c:	616d                	addi	sp,sp,240
 89e:	6b72                	flw	fs6,28(sp)
    if (results[0].execs & ID_LIST)
 8a0:	726f632f          	0x726f632f
 8a4:	5f65                	li	t5,-7
 8a6:	616d                	addi	sp,sp,240
        for (i = 0; i < default_num_contexts; i++)
 8a8:	6e69                	lui	t3,0x1a
 8aa:	632e                	flw	ft6,200(sp)
 8ac:	7300                	flw	fs0,32(a4)
 8ae:	6174                	flw	fa3,68(a0)
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 8b0:	7472                	flw	fs0,60(sp)
 8b2:	745f 6d69 0065      	0x656d69745f
 8b8:	5f5f 7562 6c69      	0x6c6975625f5f
 8be:	6974                	flw	fa3,84(a0)
 8c0:	5f6e                	lw	t5,248(sp)
 8c2:	7570                	flw	fa2,108(a0)
        for (i = 0; i < default_num_contexts; i++)
 8c4:	6374                	flw	fa3,68(a4)
 8c6:	6168                	flw	fa0,68(a0)
 8c8:	0072                	c.slli	zero,0x1c
 8ca:	706f7473          	csrrci	s0,0x706,30
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 8ce:	745f 6d69 0065      	0x656d69745f
 8d4:	7261                	lui	tp,0xffff8
 8d6:	61006367          	0x61006367
 8da:	6772                	flw	fa4,28(sp)
 8dc:	0076                	c.slli	zero,0x1d
 8de:	616d                	addi	sp,sp,240
 8e0:	6e69                	lui	t3,0x1a
 8e2:	7300                	flw	fs0,32(a4)
 8e4:	6365                	lui	t1,0x19
 8e6:	61705f73          	csrrwi	t5,0x617,0
 8ea:	64657373          	csrrci	t1,0x646,10
 8ee:	7300                	flw	fs0,32(a4)
 8f0:	6565                	lui	a0,0x19
 8f2:	6364                	flw	fs1,68(a4)
 8f4:	6372                	flw	ft6,28(sp)
 8f6:	7300                	flw	fs0,32(a4)
 8f8:	6174                	flw	fa3,68(a0)
 8fa:	6574                	flw	fa3,76(a0)
 8fc:	6b5f 6f6e 6e77      	0x6e776f6e6b5f
        for (i = 0; i < default_num_contexts; i++)
 902:	635f 6372 6300      	0x63006372635f
 908:	5f65726f          	jal	tp,57efe <_data_lma+0x4cd86>
 90c:	6e69                	lui	t3,0x1a
 90e:	7469                	lui	s0,0xffffa
 910:	6d5f 7461 6972      	0x697274616d5f
 916:	0078                	addi	a4,sp,12
    if (results[0].execs & ID_MATRIX)
 918:	63617473          	csrrci	s0,0x636,2
 91c:	656d5f6b          	0x656d5f6b
        for (i = 0; i < default_num_contexts; i++)
 920:	626d                	lui	tp,0x1b
 922:	6f6c                	flw	fa1,92(a4)
 924:	70006b63          	bltu	zero,zero,103a <__stack_size+0x3a>
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 928:	6174726f          	jal	tp,4873e <_data_lma+0x3d5c6>
 92c:	6c62                	flw	fs8,24(sp)
 92e:	5f65                	li	t5,-7
 930:	6966                	flw	fs2,88(sp)
 932:	696e                	flw	fs2,216(sp)
 934:	7400                	flw	fs0,40(s0)
 936:	6c61746f          	jal	s0,17ffc <_data_lma+0xce84>
 93a:	745f 6d69 0065      	0x656d69745f
        for (i = 0; i < default_num_contexts; i++)
 940:	6f74                	flw	fa3,92(a4)
 942:	6174                	flw	fa3,68(a0)
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 944:	5f6c                	lw	a1,124(a4)
 946:	7265                	lui	tp,0xffff9
 948:	6f72                	flw	ft10,28(sp)
 94a:	7372                	flw	ft6,60(sp)
 94c:	6d00                	flw	fs0,24(a0)
 94e:	6d65                	lui	s10,0x19
 950:	6e5f 6d61 0065      	0x656d616e5f
 956:	616d                	addi	sp,sp,240
 958:	7274                	flw	fa3,100(a2)
 95a:	7869                	lui	a6,0xffffa
 95c:	6b5f 6f6e 6e77      	0x6e776f6e6b5f
 962:	635f 6372 7000      	0x70006372635f
 968:	6572                	flw	fa0,28(sp)
 96a:	0076                	c.slli	zero,0x1d
 96c:	2f2e                	fld	ft10,200(sp)
 96e:	2f637273          	csrrci	tp,0x2f6,6
 972:	65726f63          	bltu	tp,s7,fd0 <core_bench_list+0x290>
 976:	616d                	addi	sp,sp,240
        for (i = 0; i < default_num_contexts; i++)
 978:	6b72                	flw	fs6,28(sp)
 97a:	726f632f          	0x726f632f
 97e:	5f65                	li	t5,-7
 980:	616d                	addi	sp,sp,240
 982:	7274                	flw	fa3,100(a2)
 984:	7869                	lui	a6,0xffffa
 986:	632e                	flw	ft6,200(sp)
 988:	6300                	flw	fs0,0(a4)
 98a:	696c                	flw	fa1,84(a0)
 98c:	7670                	flw	fa2,108(a2)
 98e:	6c61                	lui	s8,0x18
    if (results[0].execs & ID_STATE)
 990:	6d00                	flw	fs0,24(a0)
 992:	7461                	lui	s0,0xffff8
 994:	6972                	flw	fs2,28(sp)
 996:	5f78                	lw	a4,124(a4)
        for (i = 0; i < default_num_contexts; i++)
 998:	6461                	lui	s0,0x18
 99a:	5f64                	lw	s1,124(a4)
 99c:	736e6f63          	bltu	t3,s6,10da <__stack_size+0xda>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 9a0:	0074                	addi	a3,sp,12
 9a2:	616d                	addi	sp,sp,240
 9a4:	7274                	flw	fa3,100(a2)
 9a6:	7869                	lui	a6,0xffffa
 9a8:	745f 7365 0074      	0x747365745f
 9ae:	616d                	addi	sp,sp,240
 9b0:	7274                	flw	fa3,100(a2)
 9b2:	7869                	lui	a6,0xffffa
        for (i = 0; i < default_num_contexts; i++)
 9b4:	6d5f 6c75 635f      	0x635f6c756d5f
 9ba:	74736e6f          	jal	t3,37900 <_data_lma+0x2c788>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 9be:	6d00                	flw	fs0,24(a0)
 9c0:	7461                	lui	s0,0xffff8
 9c2:	6972                	flw	fs2,28(sp)
 9c4:	5f78                	lw	a4,124(a4)
 9c6:	756d                	lui	a0,0xffffb
 9c8:	5f6c                	lw	a1,124(a4)
 9ca:	616d                	addi	sp,sp,240
 9cc:	7274                	flw	fa3,100(a2)
 9ce:	7869                	lui	a6,0xffffa
 9d0:	625f 7469 7865      	0x78657469625f
 9d6:	7274                	flw	fa3,100(a2)
 9d8:	6361                	lui	t1,0x18
 9da:	0074                	addi	a3,sp,12
 9dc:	6565                	lui	a0,0x19
 9de:	705f 7274 695f      	0x695f7274705f
 9e4:	746e                	flw	fs0,248(sp)
 9e6:	6f00                	flw	fs0,24(a4)
 9e8:	6472                	flw	fs0,28(sp)
 9ea:	7265                	lui	tp,0xffff9
 9ec:	6d00                	flw	fs0,24(a0)
 9ee:	7461                	lui	s0,0xffff8
        for (i = 0; i < default_num_contexts; i++)
 9f0:	6972                	flw	fs2,28(sp)
 9f2:	5f78                	lw	a4,124(a4)
 9f4:	756d                	lui	a0,0xffffb
 9f6:	5f6c                	lw	a1,124(a4)
 9f8:	6576                	flw	fa0,92(sp)
 9fa:	6d007463          	bgeu	zero,a6,10c2 <__stack_size+0xc2>
 9fe:	7461                	lui	s0,0xffff8
 a00:	6972                	flw	fs2,28(sp)
 a02:	5f78                	lw	a4,124(a4)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 a04:	006d7573          	csrrci	a0,0x6,26
    for (i = 0; i < default_num_contexts; i++)
 a08:	656d                	lui	a0,0x1b
 a0a:	626d                	lui	tp,0x1b
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 a0c:	6b6c                	flw	fa1,84(a4)
 a0e:	5f00                	lw	s0,56(a4)
 a10:	625f 6975 746c      	0x746c6975625f
 a16:	6e69                	lui	t3,0x1a
    for (i = 0; i < default_num_contexts; i++)
 a18:	6d5f 6d65 6573      	0x65736d656d5f
 a1e:	0074                	addi	a3,sp,12
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 a20:	616d                	addi	sp,sp,240
 a22:	7274                	flw	fa3,100(a2)
 a24:	7869                	lui	a6,0xffffa
 a26:	6d5f 6c75 6d5f      	0x6d5f6c756d5f
 a2c:	7461                	lui	s0,0xffff8
 a2e:	6972                	flw	fs2,28(sp)
 a30:	0078                	addi	a4,sp,12
 a32:	64656573          	csrrsi	a0,0x646,10
 a36:	5f34                	lw	a3,120(a4)
 a38:	6f76                	flw	ft10,92(sp)
 a3a:	616c                	flw	fa1,68(a0)
 a3c:	6974                	flw	fa3,84(a0)
 a3e:	656c                	flw	fa1,76(a0)
 a40:	7300                	flw	fs0,32(a4)
 a42:	6174                	flw	fa3,68(a0)
 a44:	7472                	flw	fs0,60(sp)
 a46:	745f 6d69 5f65      	0x5f656d69745f
 a4c:	6176                	flw	ft2,92(sp)
 a4e:	006c                	addi	a1,sp,12
 a50:	64656573          	csrrsi	a0,0x646,10
    for (i = 0; i < default_num_contexts; i++)
 a54:	5f31                	li	t5,-20
 a56:	6f76                	flw	ft10,92(sp)
 a58:	616c                	flw	fa1,68(a0)
 a5a:	6974                	flw	fa3,84(a0)
 a5c:	656c                	flw	fa1,76(a0)
 a5e:	7400                	flw	fs0,40(s0)
 a60:	6d69                	lui	s10,0x1a
 a62:	7265                	lui	tp,0xffff9
 a64:	675f 7465 736d      	0x736d7465675f
    if (total_errors == 0)
 a6a:	7300                	flw	fs0,32(a4)
    if (total_errors > 0)
 a6c:	6565                	lui	a0,0x19
 a6e:	3564                	fld	fs1,232(a0)
        ee_printf("Errors detected\n");
 a70:	765f 6c6f 7461      	0x74616c6f765f
 a76:	6c69                	lui	s8,0x1a
 a78:	0065                	c.nop	25
 a7a:	6f627573          	csrrci	a0,0x6f6,4
 a7e:	7470                	flw	fa2,108(s0)
    portable_fini(&(results[0].port));
 a80:	7261                	lui	tp,0xffff8
 a82:	69740067          	jr	1687(s0) # ffff8697 <__freertos_irq_stack_top+0xfefe8697>
 a86:	00736b63          	bltu	t1,t2,a9c <main+0xa20>
 a8a:	64656573          	csrrsi	a0,0x646,10
}
 a8e:	6f765f33          	0x6f765f33
 a92:	616c                	flw	fa1,68(a0)
 a94:	6974                	flw	fa3,84(a0)
 a96:	656c                	flw	fa1,76(a0)
 a98:	7400                	flw	fs0,40(s0)
 a9a:	6d69                	lui	s10,0x1a
 a9c:	7265                	lui	tp,0xffff9
 a9e:	305f 7400 6d69      	0x6d697400305f
 aa4:	7265                	lui	tp,0xffff9
 aa6:	315f 7300 6565      	0x65657300315f
 aac:	3264                	fld	fs1,224(a2)
 aae:	765f 6c6f 7461      	0x74616c6f765f
 ab4:	6c69                	lui	s8,0x1a
 ab6:	0065                	c.nop	25
 ab8:	2f2e                	fld	ft10,200(sp)
 aba:	2f637273          	csrrci	tp,0x2f6,6
 abe:	65726f63          	bltu	tp,s7,111c <__stack_size+0x11c>
 ac2:	616d                	addi	sp,sp,240
 ac4:	6b72                	flw	fs6,28(sp)
 ac6:	726f632f          	0x726f632f
 aca:	5f65                	li	t5,-7
 acc:	6f70                	flw	fa2,92(a4)
 ace:	7472                	flw	fs0,60(sp)
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 ad0:	656d                	lui	a0,0x1b
 ad2:	632e                	flw	ft6,200(sp)
 ad4:	7300                	flw	fs0,32(a4)
 ad6:	6f74                	flw	fa3,92(a4)
 ad8:	5f70                	lw	a2,124(a4)
 ada:	6974                	flw	fa3,84(a0)
 adc:	656d                	lui	a0,0x1b
 ade:	765f 6c61 2e00      	0x2e006c61765f
 ae4:	6372732f          	0x6372732f
 ae8:	726f632f          	0x726f632f
            j++;
 aec:	6d65                	lui	s10,0x19
 aee:	7261                	lui	tp,0xffff8
        if ((1 << (ee_u32)i) & results[0].execs)
 af0:	6f632f6b          	0x6f632f6b
 af4:	6572                	flw	fa0,28(sp)
 af6:	735f 6174 6574      	0x65746174735f
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 afc:	632e                	flw	ft6,200(sp)
 afe:	6600                	flw	fs0,8(a2)
 b00:	6e69                	lui	t3,0x1a
 b02:	6c61                	lui	s8,0x18
 b04:	635f 756f 746e      	0x746e756f635f
 b0a:	4f430073          	0x4f430073
 b0e:	4552                	lw	a0,20(sp)
 b10:	535f 0032 6373      	0x63730032535f
        if (results[i].execs & ID_LIST)
 b16:	7069                	c.lui	zero,0xffffa
 b18:	7461                	lui	s0,0xffff8
 b1a:	6900                	flw	fs0,16(a0)
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 b1c:	736e                	flw	ft6,248(sp)
 b1e:	7274                	flw	fa3,100(a2)
 b20:	6600                	flw	fs0,8(a2)
 b22:	74617473          	csrrci	s0,0x746,2
 b26:	0065                	c.nop	25
 b28:	45524f43          	0x45524f43
 b2c:	495f 564e 4c41      	0x4c41564e495f
 b32:	4449                	li	s0,18
 b34:	4300                	lw	s0,0(a4)
 b36:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b3a:	4c46                	lw	s8,80(sp)
 b3c:	0054414f          	fnmadd.s	ft2,fs0,ft5,ft0,rmm
 b40:	65726f63          	bltu	tp,s7,119e <__stack_size+0x19e>
 b44:	735f 6174 6574      	0x65746174735f
            j++;
 b4a:	745f 6172 736e      	0x736e6172745f
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 b50:	7469                	lui	s0,0xffffa
 b52:	6f69                	lui	t5,0x1a
 b54:	006e                	c.slli	zero,0x1b
 b56:	45524f43          	0x45524f43
            j++;
 b5a:	535f 4943 4e45      	0x4e454943535f
        if ((1 << (ee_u32)i) & results[0].execs)
 b60:	4954                	lw	a3,20(a0)
 b62:	4946                	lw	s2,80(sp)
        ee_printf(
 b64:	4f430043          	fmadd.q	ft0,ft6,fs4,fs1,rne
 b68:	4552                	lw	a0,20(sp)
 b6a:	535f 4154 5452      	0x54524154535f
 b70:	4300                	lw	s0,0(a4)
 b72:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b76:	4e49                	li	t3,18
            res->crclist = res->crc;
 b78:	0054                	addi	a3,sp,4
 b7a:	6565                	lui	a0,0x19
    for (i = 0; i < iterations; i++)
 b7c:	695f 6473 6769      	0x67696473695f
 b82:	7469                	lui	s0,0xffffa
 b84:	7400                	flw	fs0,40(s0)
 b86:	6172                	flw	ft2,28(sp)
 b88:	635f6b63          	bltu	t5,s5,11be <__stack_size+0x1be>
        && (results[0].seed3 == 0))
 b8c:	746e756f          	jal	a0,e82d2 <_data_lma+0xdd15a>
 b90:	4f430073          	0x4f430073
 b94:	4552                	lw	a0,20(sp)
 b96:	535f 0031 4f43      	0x4f430031535f
        results[0].seed1 = 0x3415;
 b9c:	4552                	lw	a0,20(sp)
 b9e:	535f 4154 4554      	0x45544154535f
 ba4:	6900                	flw	fs0,16(a0)
 ba6:	746e                	flw	fs0,248(sp)
        results[0].seed3 = 0x66;
 ba8:	6170                	flw	fa2,68(a0)
 baa:	0074                	addi	a3,sp,12
 bac:	7265                	lui	tp,0xffff9
 bae:	7072                	flw	ft0,60(sp)
 bb0:	7461                	lui	s0,0xffff8
 bb2:	7300                	flw	fs0,32(a4)
        printf("start test22\n");
 bb4:	6574                	flw	fa3,76(a0)
 bb6:	0070                	addi	a2,sp,12
        results[0].execs = ALL_ALGORITHMS_MASK;
 bb8:	454e                	lw	a0,208(sp)
 bba:	5458                	lw	a4,44(s0)
        printf("start test22\n");
 bbc:	535f 4d59 4f42      	0x4f424d59535f
        results[0].execs = ALL_ALGORITHMS_MASK;
 bc2:	004c                	addi	a1,sp,4
        printf("start test22\n");
 bc4:	554e                	lw	a0,240(sp)
 bc6:	5f4d                	li	t5,-13
 bc8:	45524f43          	0x45524f43
 bcc:	535f 4154 4554      	0x45544154535f
        ee_printf(
 bd2:	72630053          	0x72630053
 bd6:	32337563          	bgeu	t1,gp,f00 <core_bench_list+0x1c0>
 bda:	4300                	lw	s0,0(a4)
 bdc:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
        if (known_id == 3)
 be0:	5845                	li	a6,-15
 be2:	4f50                	lw	a2,28(a4)
 be4:	454e                	lw	a0,208(sp)
 be6:	544e                	lw	s0,240(sp)
 be8:	7400                	flw	fs0,40(s0)
 bea:	6172                	flw	ft2,28(sp)
                      default_num_contexts * results[0].iterations
 bec:	736e                	flw	ft6,248(sp)
 bee:	7469                	lui	s0,0xffffa
 bf0:	6f69                	lui	t5,0x1a
 bf2:	5f6e                	lw	t5,248(sp)
 bf4:	6e756f63          	bltu	a0,t2,12f2 <__stack_size+0x2f2>
 bf8:	0074                	addi	a3,sp,12
 bfa:	6f74                	flw	fa3,92(a4)
            ee_printf("CoreMark 1.0 : %f / %s %s",
 bfc:	6174                	flw	fa3,68(a0)
 bfe:	006c                	addi	a1,sp,12
 c00:	6c66                	flw	fs8,88(sp)
 c02:	7074616f          	jal	sp,47b08 <_data_lma+0x3c990>
 c06:	7461                	lui	s0,0xffff8
                          / time_in_secs(total_time),
 c08:	6300                	flw	fs0,0(a4)
 c0a:	6372                	flw	ft6,28(sp)
            ee_printf("CoreMark 1.0 : %f / %s %s",
 c0c:	3875                	jal	4c8 <main+0x44c>
 c0e:	6300                	flw	fs0,0(a4)
                          / time_in_secs(total_time),
 c10:	7261                	lui	tp,0xffff8
 c12:	7972                	flw	fs2,60(sp)
 c14:	6e00                	flw	fs0,24(a2)
 c16:	7765                	lui	a4,0xffff9
            ee_printf("CoreMark 1.0 : %f / %s %s",
 c18:	6176                	flw	ft2,92(sp)
 c1a:	006c                	addi	a1,sp,12
 c1c:	2f2e                	fld	ft10,200(sp)
 c1e:	2f637273          	csrrci	tp,0x2f6,6
 c22:	65726f63          	bltu	tp,s7,1280 <__stack_size+0x280>
 c26:	616d                	addi	sp,sp,240
 c28:	6b72                	flw	fs6,28(sp)
 c2a:	726f632f          	0x726f632f
 c2e:	5f65                	li	t5,-7
 c30:	7475                	lui	s0,0xffffd
 c32:	6c69                	lui	s8,0x1a
 c34:	632e                	flw	ft6,200(sp)
 c36:	2e00                	fld	fs0,24(a2)
 c38:	6372732f          	0x6372732f
 c3c:	69616d2f          	0x69616d2f
 c40:	2f6e                	fld	ft10,216(sp)
 c42:	2f637273          	csrrci	tp,0x2f6,6
 c46:	6974                	flw	fa3,84(a0)
 c48:	656d                	lui	a0,0x1b
 c4a:	2e72                	fld	ft8,280(sp)
 c4c:	49540063          	beq	s0,s5,10cc <__stack_size+0xcc>
            ee_printf(" / %s", MEM_LOCATION);
 c50:	454d                	li	a0,19
 c52:	5f52                	lw	t5,52(sp)
 c54:	4544                	lw	s1,12(a0)
 c56:	0046                	c.slli	zero,0x11
 c58:	6c727463          	bgeu	tp,t2,1320 <__stack_size+0x320>
 c5c:	7400                	flw	fs0,40(s0)
 c5e:	6d69                	lui	s10,0x1a
 c60:	7265                	lui	tp,0xffff9
 c62:	635f 656c 7261      	0x7261656c635f
            ee_printf("\n");
 c68:	6700                	flw	fs0,8(a4)
 c6a:	7465                	lui	s0,0xffff9
 c6c:	6c5f 6e69 0065      	0x656e696c5f
 c72:	2f2e                	fld	ft10,200(sp)
        ee_printf(
 c74:	2f637273          	csrrci	tp,0x2f6,6
 c78:	616d                	addi	sp,sp,240
 c7a:	6e69                	lui	t3,0x1a
 c7c:	6372732f          	0x6372732f
 c80:	6173752f          	0x6173752f
        total_errors++;
 c84:	7472                	flw	fs0,60(sp)
 c86:	632e                	flw	ft6,200(sp)
 c88:	7300                	flw	fs0,32(a4)
 c8a:	6e65                	lui	t3,0x19
    if (results[0].execs & ID_STATE)
 c8c:	5f64                	lw	s1,124(a4)
 c8e:	72616863          	bltu	sp,t1,13be <__stack_size+0x3be>
 c92:	6700                	flw	fs0,8(a4)
 c94:	7465                	lui	s0,0xffff9
 c96:	635f 6168 0072      	0x726168635f
            ee_printf("2K validation run parameters for coremark.\n");
 c9c:	5355                	li	t1,-11
 c9e:	5241                	li	tp,-16
 ca0:	5f54                	lw	a3,60(a4)
 ca2:	4544                	lw	s1,12(a0)
 ca4:	0046                	c.slli	zero,0x11
 ca6:	7962                	flw	fs2,56(sp)
 ca8:	6574                	flw	fa3,76(a0)
 caa:	7200                	flw	fs0,32(a2)
 cac:	5f78                	lw	a4,124(a4)
 cae:	7265                	lui	tp,0xffff9
            known_id = 4;
 cb0:	0072                	c.slli	zero,0x1c
 cb2:	4270                	lw	a2,68(a2)
            ee_printf("2K validation run parameters for coremark.\n");
 cb4:	6675                	lui	a2,0x1d
 cb6:	6566                	flw	fa0,88(sp)
 cb8:	0072                	c.slli	zero,0x1c
 cba:	646e6573          	csrrsi	a0,0x646,28
 cbe:	735f 7274 6e69      	0x6e697274735f
            known_id = 4;
 cc4:	75620067          	jr	1878(tp) # 0 <_start>
 cc8:	6666                	flw	fa2,88(sp)
 cca:	7200                	flw	fs0,32(a2)
            ee_printf("6k validation run parameters for coremark.\n");
 ccc:	5f78                	lw	a4,124(a4)
 cce:	6966                	flw	fs2,88(sp)
 cd0:	696e                	flw	fs2,216(sp)
 cd2:	2e006873          	csrrsi	a6,0x2e0,0
 cd6:	6372732f          	0x6372732f
 cda:	69616d2f          	0x69616d2f
 cde:	2f6e                	fld	ft10,216(sp)
 ce0:	72617473          	csrrci	s0,0x726,2
 ce4:	2e74                	fld	fa3,216(a2)
 ce6:	4e470053          	0x4e470053
 cea:	2055                	jal	d8e <core_bench_list+0x4e>
            known_id = 1;
 cec:	5341                	li	t1,-16
 cee:	3220                	fld	fs0,96(a2)
            ee_printf("6k validation run parameters for coremark.\n");
 cf0:	332e                	fld	ft6,232(sp)
 cf2:	0032                	c.slli	zero,0xc

Disassembly of section .comment:

00000000 <.comment>:
	la gp, __global_pointer$
   0:	3a434347          	fmsub.d	ft6,ft6,ft4,ft7,rmm
   4:	2820                	fld	fs0,80(s0)
   6:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
	la sp, _sp
   a:	434d                	li	t1,19
   c:	2055                	jal	b0 <main+0x34>
   e:	6345                	lui	t1,0x11
	la a0, _data_lma 
  10:	696c                	flw	fa1,84(a0)
  12:	7370                	flw	fa2,100(a4)
  14:	2065                	jal	bc <main+0x40>
  16:	4952                	lw	s2,20(sp)
	la a1, _data
  18:	562d4353          	0x562d4353
  1c:	4520                	lw	s0,72(a0)
  1e:	626d                	lui	tp,0x1b
	la a2, _edata
  20:	6465                	lui	s0,0x19
  22:	6564                	flw	fs1,76(a0)
  24:	2064                	fld	fs1,192(s0)
  26:	2c434347          	0x2c434347
	bgeu a1, a2, 2f
  2a:	3620                	fld	fs0,104(a2)
	lw t0, (a0)
  2c:	2d34                	fld	fa3,88(a0)
  2e:	6962                	flw	fs2,24(sp)
	sw t0, (a1)
  30:	2974                	fld	fa3,208(a0)
  32:	3820                	fld	fs0,112(s0)
	lw t1, (a1)
  34:	322e                	fld	ft4,232(sp)
  36:	302e                	fld	ft0,232(sp)
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
	la gp, __global_pointer$
       0:	000c                	0xc
       2:	0000                	unimp
       4:	ffff                	0xffff
       6:	ffff                	0xffff
	la sp, _sp
       8:	0001                	nop
       a:	7c01                	lui	s8,0xfffe0
       c:	0d01                	addi	s10,s10,0
       e:	0002                	c.slli64	zero
	la a0, _data_lma 
      10:	002c                	addi	a1,sp,8
	...
	la a1, _data
      1e:	0000                	unimp
	la a2, _edata
      20:	0e44                	addi	s1,sp,788
      22:	4420                	lw	s0,72(s0)
      24:	0288                	addi	a0,sp,320
      26:	9258                	0x9258
	bgeu a1, a2, 2f
      28:	8104                	0x8104
      2a:	8901                	andi	a0,a0,0
	lw t0, (a0)
      2c:	02059303          	lh	t1,32(a1) # ffff8020 <__freertos_irq_stack_top+0xfefe8020>
	sw t0, (a1)
      30:	0a00                	addi	s0,sp,272
      32:	44c1                	li	s1,16
	lw t1, (a1)
      34:	48c8                	lw	a0,20(s1)
      36:	44c9                	li	s1,18
	addi a0, a0, 4
      38:	44d2                	lw	s1,20(sp)
      3a:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
	addi a1, a1, 4
      3e:	0b44                	addi	s1,sp,404
	bltu a1, a2, 1b
      40:	0030                	addi	a2,sp,8
	...
	la a1, _end
      4e:	0000                	unimp
      50:	0e44                	addi	s1,sp,788
      52:	4420                	lw	s0,72(s0)
	bgeu a0, a1, 2f
      54:	0288                	addi	a0,sp,320
      56:	895c                	0x895c
	sw zero, (a0)
      58:	94049203          	lh	tp,-1728(s1)
	addi a0, a0, 4
      5c:	8106                	mv	sp,ra
      5e:	9301                	srli	a4,a4,0x20
	bltu a0, a1, 1b
      60:	0205                	addi	tp,tp,1
      62:	0a00                	addi	s0,sp,272
    li x31,0xa0
      64:	44c1                	li	s1,16
      66:	48c8                	lw	a0,20(s1)
    call main
      68:	44c9                	li	s1,18
      6a:	44d2                	lw	s1,20(sp)
      6c:	44d444d3          	0x44d444d3
    li x31,0xaa
      70:	000e                	c.slli	zero,0x3
      72:	0b44                	addi	s1,sp,404
	li tp,0xee
      74:	000c                	0xc
	...
    portable_init(&(results[0].port), &argc, argv);
      82:	0000                	unimp
{
      84:	000c                	0xc
	...
      92:	0000                	unimp
      94:	004c                	addi	a1,sp,4
      96:	0000                	unimp
      98:	0000                	unimp
      9a:	0000                	unimp
      9c:	0d40                	addi	s0,sp,660
      9e:	0000                	unimp
      a0:	0690                	addi	a2,sp,832
      a2:	0000                	unimp
      a4:	0e48                	addi	a0,sp,788
      a6:	7460                	flw	fs0,108(s0)
      a8:	0288                	addi	a0,sp,320
      aa:	0a98                	addi	a4,sp,336
      ac:	0181                	addi	gp,gp,0
      ae:	0389                	addi	t2,t2,2
      b0:	0492                	slli	s1,s1,0x4
      b2:	06940593          	addi	a1,s0,105 # 19069 <_data_lma+0xdef1>
      b6:	0795                	addi	a5,a5,5
      b8:	0896                	slli	a7,a7,0x5
      ba:	0b990997          	auipc	s3,0xb990
      be:	0c9a                	slli	s9,s9,0x6
    portable_init(&(results[0].port), &argc, argv);
      c0:	68030d9b          	0x68030d9b
      c4:	44c10a03          	lb	s4,1100(sp)
      c8:	44c8                	lw	a0,12(s1)
      ca:	44c9                	li	s1,18
      cc:	44d2                	lw	s1,20(sp)
      ce:	44d444d3          	0x44d444d3
{
      d2:	44d5                	li	s1,21
    portable_init(&(results[0].port), &argc, argv);
      d4:	44d6                	lw	s1,84(sp)
      d6:	44d844d7          	0x44d844d7
      da:	44d9                	li	s1,22
      dc:	44da                	lw	s1,148(sp)
      de:	000e44db          	0xe44db
      e2:	0b44                	addi	s1,sp,404
    printf("start test1\n");
      e4:	002c                	addi	a1,sp,8
      e6:	0000                	unimp
      e8:	0000                	unimp
      ea:	0000                	unimp
      ec:	13d0                	addi	a2,sp,484
      ee:	0000                	unimp
      f0:	02bc                	addi	a5,sp,328
      f2:	0000                	unimp
    results[0].seed1      = get_seed(1);
      f4:	0e44                	addi	s1,sp,788
      f6:	4410                	lw	a2,8(s0)
      f8:	0389                	addi	t2,t2,2
      fa:	8158                	0x8158
      fc:	8801                	andi	s0,s0,0
      fe:	9202                	jalr	tp
     100:	0304                	addi	s1,sp,384
     102:	0278                	addi	a4,sp,268
    results[0].seed2      = get_seed(2);
     104:	c10a                	sw	sp,128(sp)
     106:	c844                	sw	s1,20(s0)
     108:	c944                	sw	s1,20(a0)
     10a:	d244                	sw	s1,36(a2)
     10c:	0e44                	addi	s1,sp,788
     10e:	4400                	lw	s0,8(s0)
     110:	0000000b          	0xb
    results[0].seed3      = get_seed(3);
     114:	000c                	0xc
	...
     122:	0000                	unimp
    results[0].iterations = get_seed_32(4);
     124:	000c                	0xc
	...
     132:	0000                	unimp
    printf("start test2\n");
     134:	000c                	0xc
	...
     142:	0000                	unimp
    results[0].execs = get_seed_32(5);
     144:	000c                	0xc
	...
     152:	0000                	unimp
    printf("start test21\n");
     154:	000c                	0xc
	...
     162:	0000                	unimp
    if (results[0].execs == 0)
     164:	0044                	addi	s1,sp,4
	...
    printf("start test3\n");
     172:	0000                	unimp
     174:	0e40                	addi	s0,sp,788
     176:	7030                	flw	fa2,96(s0)
     178:	0795                	addi	a5,a5,5
     17a:	0896                	slli	a7,a7,0x5
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     17c:	0a980997          	auipc	s3,0xa980
     180:	0c9a                	slli	s9,s9,0x6
     182:	0181                	addi	gp,gp,0
     184:	0288                	addi	a0,sp,320
     186:	0389                	addi	t2,t2,2
     188:	0492                	slli	s1,s1,0x4
     18a:	06940593          	addi	a1,s0,105
     18e:	0b99                	addi	s7,s7,6
     190:	0002                	c.slli64	zero
     192:	44c1                	li	s1,16
     194:	48c8                	lw	a0,20(s1)
     196:	44c9                	li	s1,18
     198:	44d2                	lw	s1,20(sp)
     19a:	44d444d3          	0x44d444d3
    printf("start test4\n");
     19e:	44d5                	li	s1,21
     1a0:	44d6                	lw	s1,84(sp)
     1a2:	44d844d7          	0x44d844d7
     1a6:	44d9                	li	s1,22
     1a8:	44da                	lw	s1,148(sp)
     1aa:	000e                	c.slli	zero,0x3
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     1ac:	000c                	0xc
     1ae:	0000                	unimp
     1b0:	ffff                	0xffff
     1b2:	ffff                	0xffff
     1b4:	0001                	nop
     1b6:	7c01                	lui	s8,0xfffe0
     1b8:	0d01                	addi	s10,s10,0
     1ba:	0002                	c.slli64	zero
     1bc:	0028                	addi	a0,sp,8
     1be:	0000                	unimp
     1c0:	01ac                	addi	a1,sp,200
     1c2:	0000                	unimp
     1c4:	168c                	addi	a1,sp,864
     1c6:	0000                	unimp
     1c8:	00a8                	addi	a0,sp,72
     1ca:	0000                	unimp
     1cc:	0e44                	addi	s1,sp,788
     1ce:	4410                	lw	a2,8(s0)
        if ((1 << (ee_u32)i) & results[0].execs)
     1d0:	0492                	slli	s1,s1,0x4
     1d2:	8850                	0x8850
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1d4:	8902                	jr	s2
     1d6:	02018103          	lb	sp,32(gp) # 1001450 <__global_pointer$+0x20>
     1da:	0a64                	addi	s1,sp,284
     1dc:	44c1                	li	s1,16
     1de:	44c8                	lw	a0,12(s1)
     1e0:	44c9                	li	s1,18
     1e2:	48d2                	lw	a7,20(sp)
     1e4:	000e                	c.slli	zero,0x3
     1e6:	0b44                	addi	s1,sp,404
        if ((1 << (ee_u32)i) & results[0].execs)
     1e8:	0058                	addi	a4,sp,4
     1ea:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1ec:	01ac                	addi	a1,sp,200
     1ee:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1f0:	007c                	addi	a5,sp,12
     1f2:	0000                	unimp
            num_algorithms++;
     1f4:	0cc4                	addi	s1,sp,596
     1f6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1f8:	0e44                	addi	s1,sp,788
     1fa:	0ff0                	addi	a2,sp,988
     1fc:	4002                	0x4002
     1fe:	f00e                	fsw	ft3,32(sp)
    results[i].err         = 0;
     200:	8110                	0x8110
     202:	8801                	andi	s0,s0,0
        if ((1 << (ee_u32)i) & results[0].execs)
     204:	8902                	jr	s2
     206:	93049203          	lh	tp,-1744(s1)
            num_algorithms++;
     20a:	9405                	srai	s0,s0,0x21
        if ((1 << (ee_u32)i) & results[0].execs)
     20c:	9506                	add	a0,a0,ra
     20e:	97089607          	0x97089607
            num_algorithms++;
     212:	9809                	andi	s0,s0,-30
     214:	990a                	add	s2,s2,sp
     216:	9b0c9a0b          	0x9b0c9a0b
     21a:	030d                	addi	t1,t1,3
        results[i].size = results[i].size / num_algorithms;
     21c:	09d0                	addi	a2,sp,212
     21e:	0e0a                	slli	t3,t3,0x2
     220:	0ff0                	addi	a2,sp,988
     222:	c144                	sw	s1,4(a0)
     224:	c848                	sw	a0,20(s0)
     226:	c944                	sw	s1,20(a0)
     228:	d244                	sw	s1,36(a2)
     22a:	d344                	sw	s1,36(a4)
     22c:	d444                	sw	s1,44(s0)
     22e:	d544                	sw	s1,44(a0)
     230:	d644                	sw	s1,44(a2)
     232:	d744                	sw	s1,44(a4)
        if ((1 << (ee_u32)i) & results[0].execs)
     234:	d844                	sw	s1,52(s0)
     236:	d944                	sw	s1,52(a0)
     238:	da44                	sw	s1,52(a2)
     23a:	db44                	sw	s1,52(a4)
     23c:	0e44                	addi	s1,sp,788
     23e:	4400                	lw	s0,8(s0)
     240:	0000000b          	0xb
        if (results[i].execs & ID_LIST)
     244:	000c                	0xc
     246:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
     248:	ffff                	0xffff
     24a:	ffff                	0xffff
        if (results[i].execs & ID_STATE)
     24c:	0001                	nop
     24e:	7c01                	lui	s8,0xfffe0
     250:	0d01                	addi	s10,s10,0
     252:	0002                	c.slli64	zero
            core_init_state(
     254:	0050                	addi	a2,sp,4
     256:	0000                	unimp
     258:	0244                	addi	s1,sp,260
     25a:	0000                	unimp
                results[0].size, results[i].seed1, results[i].memblock[3]);
     25c:	1734                	addi	a3,sp,936
     25e:	0000                	unimp
            core_init_state(
     260:	0614                	addi	a3,sp,768
     262:	0000                	unimp
     264:	0e44                	addi	s1,sp,788
     266:	4870                	lw	a2,84(s0)
     268:	0288                	addi	a0,sp,320
     26a:	0181                	addi	gp,gp,0
     26c:	8970                	0x8970
     26e:	93049203          	lh	tp,-1744(s1)
     272:	9405                	srai	s0,s0,0x21
     274:	9506                	add	a0,a0,ra
     276:	97089607          	0x97089607
     27a:	9809                	andi	s0,s0,-30
     27c:	990a                	add	s2,s2,sp
     27e:	9b0c9a0b          	0x9b0c9a0b
    if (results[0].iterations == 0)
     282:	030d                	addi	t1,t1,3
     284:	054c                	addi	a1,sp,644
     286:	c10a                	sw	sp,128(sp)
        while (secs_passed < (secs_ret)1)
     288:	c844                	sw	s1,20(s0)
     28a:	c948                	sw	a0,20(a0)
     28c:	d244                	sw	s1,36(a2)
     28e:	d344                	sw	s1,36(a4)
     290:	d444                	sw	s1,44(s0)
     292:	d544                	sw	s1,44(a0)
        results[0].iterations = 1;
     294:	d644                	sw	s1,44(a2)
     296:	d744                	sw	s1,44(a4)
     298:	d844                	sw	s1,52(s0)
     29a:	d944                	sw	s1,52(a0)
        crc      = core_bench_list(res, 1);
     29c:	da44                	sw	s1,52(a2)
     29e:	db44                	sw	s1,52(a4)
     2a0:	0e48                	addi	a0,sp,788
     2a2:	4400                	lw	s0,8(s0)
     2a4:	0000000b          	0xb
     2a8:	001c                	0x1c
     2aa:	0000                	unimp
     2ac:	0244                	addi	s1,sp,260
     2ae:	0000                	unimp
     2b0:	1d48                	addi	a0,sp,692
     2b2:	0000                	unimp
     2b4:	0044                	addi	s1,sp,4
     2b6:	0000                	unimp
            printf("start test44\n");
     2b8:	0e44                	addi	s1,sp,788
     2ba:	4810                	lw	a2,16(s0)
     2bc:	0288                	addi	a0,sp,320
     2be:	8158                	0x8158
     2c0:	5001                	c.li	zero,-32
     2c2:	44c8                	lw	a0,12(s1)
            results[0].iterations *= 10;
     2c4:	44c1                	li	s1,16
     2c6:	000e                	c.slli	zero,0x3
    for (i = 0; i < iterations; i++)
     2c8:	0050                	addi	a2,sp,4
     2ca:	0000                	unimp
            results[0].iterations *= 10;
     2cc:	0244                	addi	s1,sp,260
     2ce:	0000                	unimp
     2d0:	1d8c                	addi	a1,sp,752
     2d2:	0000                	unimp
     2d4:	01dc                	addi	a5,sp,196
     2d6:	0000                	unimp
     2d8:	0e44                	addi	s1,sp,788
     2da:	4450                	lw	a2,12(s0)
            start_time();
     2dc:	88500593          	li	a1,-1915
     2e0:	7002                	flw	ft0,32(sp)
     2e2:	0b990997          	auipc	s3,0xb990
    ee_u32        iterations = res->iterations;
     2e6:	0181                	addi	gp,gp,0
    res->crc                 = 0;
     2e8:	0389                	addi	t2,t2,2
     2ea:	0492                	slli	s1,s1,0x4
     2ec:	0694                	addi	a3,sp,832
     2ee:	0795                	addi	a5,a5,5
    for (i = 0; i < iterations; i++)
     2f0:	0896                	slli	a7,a7,0x5
     2f2:	0a98                	addi	a4,sp,336
        crc      = core_bench_list(res, 1);
     2f4:	0c9a                	slli	s9,s9,0x6
     2f6:	18030d9b          	0x18030d9b
     2fa:	0a01                	addi	s4,s4,0
     2fc:	5cc1                	li	s9,-16
     2fe:	54c8                	lw	a0,44(s1)
     300:	44d2                	lw	s1,20(sp)
     302:	44c9                	li	s1,18
        res->crc = crcu16(crc, res->crc);
     304:	44d444d3          	0x44d444d3
     308:	44d5                	li	s1,21
     30a:	44d6                	lw	s1,84(sp)
     30c:	44d844d7          	0x44d844d7
     310:	44d9                	li	s1,22
     312:	44da                	lw	s1,148(sp)
        crc      = core_bench_list(res, -1);
     314:	000e44db          	0xe44db
     318:	0b44                	addi	s1,sp,404
     31a:	0000                	unimp
     31c:	000c                	0xc
     31e:	0000                	unimp
     320:	0244                	addi	s1,sp,260
	...
        res->crc = crcu16(crc, res->crc);
     32a:	0000                	unimp
     32c:	0048                	addi	a0,sp,4
     32e:	0000                	unimp
     330:	0244                	addi	s1,sp,260
	...
    for (i = 0; i < iterations; i++)
     33a:	0000                	unimp
     33c:	0e40                	addi	s0,sp,788
     33e:	4830                	lw	a2,80(s0)
            stop_time();
     340:	0492                	slli	s1,s1,0x4
     342:	0a98                	addi	a4,sp,336
     344:	9364                	0x9364
     346:	9405                	srai	s0,s0,0x21
            secs_passed = time_in_secs(get_time());
     348:	9506                	add	a0,a0,ra
     34a:	99099707          	0x99099707
     34e:	810c9a0b          	0x810c9a0b
     352:	5001                	c.li	zero,-32
     354:	0288                	addi	a0,sp,320
     356:	0389                	addi	t2,t2,2
        while (secs_passed < (secs_ret)1)
     358:	0896                	slli	a7,a7,0x5
     35a:	0002                	c.slli64	zero
     35c:	44c1                	li	s1,16
     35e:	44c8                	lw	a0,12(s1)
            secs_passed = time_in_secs(get_time());
     360:	44c9                	li	s1,18
     362:	44d2                	lw	s1,20(sp)
     364:	44d444d3          	0x44d444d3
        while (secs_passed < (secs_ret)1)
     368:	44d5                	li	s1,21
     36a:	44d6                	lw	s1,84(sp)
     36c:	44d844d7          	0x44d844d7
     370:	44d9                	li	s1,22
     372:	44da                	lw	s1,148(sp)
        divisor = (ee_u32)secs_passed;
     374:	000e                	c.slli	zero,0x3
     376:	0000                	unimp
     378:	000c                	0xc
     37a:	0000                	unimp
     37c:	0244                	addi	s1,sp,260
	...
     386:	0000                	unimp
        if (divisor == 0) /* some machines cast float to int as 0 since this
     388:	0040                	addi	s0,sp,4
     38a:	0000                	unimp
            divisor = 1;
     38c:	0244                	addi	s1,sp,260
	...
        results[0].iterations *= 1 + 10 / divisor;
     396:	0000                	unimp
     398:	0e40                	addi	s0,sp,788
     39a:	4430                	lw	a2,72(s0)
     39c:	0896                	slli	a7,a7,0x5
     39e:	984c                	0x984c
     3a0:	500a                	0x500a
     3a2:	0694                	addi	a3,sp,832
     3a4:	0795                	addi	a5,a5,5
     3a6:	936c0997          	auipc	s3,0x936c0
     3aa:	8105                	srli	a0,a0,0x1
     3ac:	8801                	andi	s0,s0,0
     3ae:	8902                	jr	s2
    start_time();
     3b0:	02049203          	lh	tp,32(s1)
     3b4:	c100                	sw	s0,0(a0)
     3b6:	c844                	sw	s1,20(s0)
    iterate(&results[0]);
     3b8:	c944                	sw	s1,20(a0)
     3ba:	d244                	sw	s1,36(a2)
     3bc:	d344                	sw	s1,36(a4)
     3be:	d444                	sw	s1,44(s0)
     3c0:	d544                	sw	s1,44(a0)
     3c2:	d644                	sw	s1,44(a2)
     3c4:	d744                	sw	s1,44(a4)
     3c6:	d844                	sw	s1,52(s0)
     3c8:	0e44                	addi	s1,sp,788
     3ca:	0000                	unimp
     3cc:	004c                	addi	a1,sp,4
     3ce:	0000                	unimp
     3d0:	0244                	addi	s1,sp,260
	...
    stop_time();
     3da:	0000                	unimp
     3dc:	0e40                	addi	s0,sp,788
     3de:	4450                	lw	a2,12(s0)
    total_time = get_time();
     3e0:	0389                	addi	t2,t2,2
     3e2:	9274                	0x9274
     3e4:	9504                	0x9504
     3e6:	97089607          	0x97089607
    seedcrc = crc16(results[0].seed1, seedcrc);
     3ea:	9809                	andi	s0,s0,-30
     3ec:	990a                	add	s2,s2,sp
     3ee:	8801810b          	0x8801810b
     3f2:	9302                	jalr	t1
    total_time = get_time();
     3f4:	9405                	srai	s0,s0,0x21
     3f6:	9a06                	add	s4,s4,ra
    seedcrc = crc16(results[0].seed1, seedcrc);
     3f8:	9b0c                	0x9b0c
     3fa:	020d                	addi	tp,tp,3
     3fc:	c100                	sw	s0,0(a0)
     3fe:	c844                	sw	s1,20(s0)
     400:	c944                	sw	s1,20(a0)
     402:	d244                	sw	s1,36(a2)
     404:	d344                	sw	s1,36(a4)
     406:	d444                	sw	s1,44(s0)
     408:	d544                	sw	s1,44(a0)
     40a:	d644                	sw	s1,44(a2)
    seedcrc = crc16(results[0].seed2, seedcrc);
     40c:	d744                	sw	s1,44(a4)
     40e:	d844                	sw	s1,52(s0)
     410:	d944                	sw	s1,52(a0)
     412:	da44                	sw	s1,52(a2)
     414:	db44                	sw	s1,52(a4)
     416:	0e44                	addi	s1,sp,788
     418:	0000                	unimp
     41a:	0000                	unimp
     41c:	004c                	addi	a1,sp,4
     41e:	0000                	unimp
    seedcrc = crc16(results[0].seed3, seedcrc);
     420:	0244                	addi	s1,sp,260
	...
     42a:	0000                	unimp
     42c:	0e40                	addi	s0,sp,788
     42e:	4450                	lw	a2,12(s0)
     430:	0288                	addi	a0,sp,320
     432:	8974                	0x8974
    seedcrc = crc16(results[0].size, seedcrc);
     434:	95069403          	lh	s0,-1712(a3) # fffff950 <__freertos_irq_stack_top+0xfefef950>
     438:	97089607          	0x97089607
     43c:	9809                	andi	s0,s0,-30
     43e:	810a                	mv	sp,sp
     440:	9201                	srli	a2,a2,0x20
     442:	9304                	0x9304
     444:	9905                	andi	a0,a0,-31
     446:	9b0c9a0b          	0x9b0c9a0b
     44a:	020d                	addi	tp,tp,3
     44c:	c100                	sw	s0,0(a0)
     44e:	c844                	sw	s1,20(s0)
    switch (seedcrc)
     450:	c944                	sw	s1,20(a0)
     452:	d244                	sw	s1,36(a2)
     454:	d344                	sw	s1,36(a4)
     456:	d444                	sw	s1,44(s0)
     458:	d544                	sw	s1,44(a0)
     45a:	d644                	sw	s1,44(a2)
     45c:	d744                	sw	s1,44(a4)
     45e:	d844                	sw	s1,52(s0)
     460:	d944                	sw	s1,52(a0)
     462:	da44                	sw	s1,52(a2)
     464:	db44                	sw	s1,52(a4)
     466:	0e44                	addi	s1,sp,788
     468:	0000                	unimp
     46a:	0000                	unimp
     46c:	000c                	0xc
     46e:	0000                	unimp
            ee_printf("2K performance run parameters for coremark.\n");
     470:	ffff                	0xffff
     472:	ffff                	0xffff
     474:	0001                	nop
     476:	7c01                	lui	s8,0xfffe0
     478:	0d01                	addi	s10,s10,0
     47a:	0002                	c.slli64	zero
     47c:	0018                	0x18
     47e:	0000                	unimp
     480:	046c                	addi	a1,sp,524
     482:	0000                	unimp
     484:	1f68                	addi	a0,sp,956
     486:	0000                	unimp
     488:	0028                	addi	a0,sp,8
     48a:	0000                	unimp
            known_id = 3;
     48c:	0e44                	addi	s1,sp,788
     48e:	4410                	lw	a2,8(s0)
            ee_printf("2K performance run parameters for coremark.\n");
     490:	0181                	addi	gp,gp,0
     492:	c14c                	sw	a1,4(a0)
     494:	0e50                	addi	a2,sp,788
     496:	0000                	unimp
     498:	0018                	0x18
     49a:	0000                	unimp
            known_id = 3;
     49c:	046c                	addi	a1,sp,524
     49e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     4a0:	1f90                	addi	a2,sp,1008
     4a2:	0000                	unimp
     4a4:	0028                	addi	a0,sp,8
     4a6:	0000                	unimp
     4a8:	0e44                	addi	s1,sp,788
     4aa:	4410                	lw	a2,8(s0)
     4ac:	0181                	addi	gp,gp,0
     4ae:	c14c                	sw	a1,4(a0)
     4b0:	0e50                	addi	a2,sp,788
     4b2:	0000                	unimp
            results[i].err = 0;
     4b4:	000c                	0xc
     4b6:	0000                	unimp
     4b8:	046c                	addi	a1,sp,524
     4ba:	0000                	unimp
     4bc:	1fb8                	addi	a4,sp,1016
     4be:	0000                	unimp
     4c0:	0018                	0x18
     4c2:	0000                	unimp
     4c4:	0018                	0x18
     4c6:	0000                	unimp
     4c8:	046c                	addi	a1,sp,524
     4ca:	0000                	unimp
     4cc:	1fd0                	addi	a2,sp,1012
     4ce:	0000                	unimp
     4d0:	0030                	addi	a2,sp,8
     4d2:	0000                	unimp
     4d4:	0e44                	addi	s1,sp,788
     4d6:	4410                	lw	a2,8(s0)
     4d8:	0181                	addi	gp,gp,0
     4da:	c160                	sw	s0,68(a0)
     4dc:	0e44                	addi	s1,sp,788
     4de:	0000                	unimp
     4e0:	001c                	0x1c
     4e2:	0000                	unimp
     4e4:	046c                	addi	a1,sp,524
     4e6:	0000                	unimp
     4e8:	2000                	fld	fs0,0(s0)
     4ea:	0000                	unimp
            total_errors += results[i].err;
     4ec:	0038                	addi	a4,sp,8
     4ee:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     4f0:	0e44                	addi	s1,sp,788
     4f2:	4410                	lw	a2,8(s0)
            total_errors += results[i].err;
     4f4:	0288                	addi	a0,sp,320
     4f6:	8150                	0x8150
        for (i = 0; i < default_num_contexts; i++)
     4f8:	5401                	li	s0,-32
     4fa:	44c1                	li	s1,16
            total_errors += results[i].err;
     4fc:	44c8                	lw	a0,12(s1)
     4fe:	000e                	c.slli	zero,0x3
        for (i = 0; i < default_num_contexts; i++)
     500:	000c                	0xc
     502:	0000                	unimp
            total_errors += results[i].err;
     504:	046c                	addi	a1,sp,524
     506:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     508:	2038                	fld	fa4,64(s0)
     50a:	0000                	unimp
            total_errors += results[i].err;
     50c:	0008                	0x8
     50e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     510:	000c                	0xc
     512:	0000                	unimp
            results[i].err = 0;
     514:	ffff                	0xffff
     516:	ffff                	0xffff
     518:	0001                	nop
     51a:	7c01                	lui	s8,0xfffe0
     51c:	0d01                	addi	s10,s10,0
     51e:	0002                	c.slli64	zero
     520:	0038                	addi	a4,sp,8
     522:	0000                	unimp
     524:	0510                	addi	a2,sp,640
     526:	0000                	unimp
     528:	2040                	fld	fs0,128(s0)
     52a:	0000                	unimp
            if ((results[i].execs & ID_LIST)
     52c:	01dc                	addi	a5,sp,196
     52e:	0000                	unimp
            results[i].err = 0;
     530:	0e44                	addi	s1,sp,788
     532:	4410                	lw	a2,8(s0)
            if ((results[i].execs & ID_LIST)
     534:	0389                	addi	t2,t2,2
     536:	8858                	0x8858
     538:	9202                	jalr	tp
     53a:	8104                	0x8104
                && (results[i].crclist != list_known_crc[known_id]))
     53c:	0301                	addi	t1,t1,0
     53e:	0178                	addi	a4,sp,140
     540:	c80a                	sw	sp,16(sp)
     542:	c144                	sw	s1,4(a0)
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     544:	c944                	sw	s1,20(a0)
     546:	d244                	sw	s1,36(a2)
     548:	0e48                	addi	a0,sp,788
     54a:	4800                	lw	s0,16(s0)
     54c:	c10a4c0b          	0xc10a4c0b
     550:	c844                	sw	s1,20(s0)
     552:	c944                	sw	s1,20(a0)
     554:	d244                	sw	s1,36(a2)
     556:	0e44                	addi	s1,sp,788
     558:	4400                	lw	s0,8(s0)
     55a:	000c000b          	0xc000b
                results[i].err++;
     55e:	0000                	unimp
     560:	0510                	addi	a2,sp,640
     562:	0000                	unimp
     564:	221c                	fld	fa5,0(a2)
     566:	0000                	unimp
            if ((results[i].execs & ID_MATRIX)
     568:	0330                	addi	a2,sp,392
     56a:	0000                	unimp
     56c:	0040                	addi	s0,sp,4
     56e:	0000                	unimp
     570:	0510                	addi	a2,sp,640
     572:	0000                	unimp
     574:	254c                	fld	fa1,136(a0)
     576:	0000                	unimp
     578:	020c                	addi	a1,sp,256
     57a:	0000                	unimp
     57c:	0e44                	addi	s1,sp,788
     57e:	0180                	addi	s0,sp,192
     580:	8864                	0x8864
     582:	8902                	jr	s2
     584:	93049203          	lh	tp,-1744(s1)
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     588:	9405                	srai	s0,s0,0x21
     58a:	9606                	add	a2,a2,ra
     58c:	9708                	0x9708
     58e:	8109                	srli	a0,a0,0x2
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     590:	9501                	srai	a0,a0,0x20
     592:	01980307          	0x1980307
     596:	c10a                	sw	sp,128(sp)
     598:	c844                	sw	s1,20(s0)
     59a:	c944                	sw	s1,20(a0)
     59c:	d244                	sw	s1,36(a2)
     59e:	d344                	sw	s1,36(a4)
     5a0:	d444                	sw	s1,44(s0)
     5a2:	d544                	sw	s1,44(a0)
     5a4:	d644                	sw	s1,44(a2)
     5a6:	d744                	sw	s1,44(a4)
                results[i].err++;
     5a8:	0e44                	addi	s1,sp,788
     5aa:	4400                	lw	s0,8(s0)
     5ac:	0000000b          	0xb
     5b0:	000c                	0xc
     5b2:	0000                	unimp
     5b4:	ffff                	0xffff
     5b6:	ffff                	0xffff
            if ((results[i].execs & ID_STATE)
     5b8:	0001                	nop
     5ba:	7c01                	lui	s8,0xfffe0
     5bc:	0d01                	addi	s10,s10,0
     5be:	0002                	c.slli64	zero
                && (results[i].crcstate != state_known_crc[known_id]))
     5c0:	000c                	0xc
     5c2:	0000                	unimp
     5c4:	05b0                	addi	a2,sp,712
     5c6:	0000                	unimp
     5c8:	2758                	fld	fa4,136(a4)
     5ca:	0000                	unimp
     5cc:	0064                	addi	s1,sp,12
     5ce:	0000                	unimp
     5d0:	000c                	0xc
     5d2:	0000                	unimp
     5d4:	05b0                	addi	a2,sp,712
	...
     5de:	0000                	unimp
     5e0:	000c                	0xc
     5e2:	0000                	unimp
            results[i].list = core_list_init(
     5e4:	05b0                	addi	a2,sp,712
     5e6:	0000                	unimp
     5e8:	27bc                	fld	fa5,72(a5)
     5ea:	0000                	unimp
     5ec:	0280                	addi	s0,sp,320
     5ee:	0000                	unimp
     5f0:	000c                	0xc
     5f2:	0000                	unimp
     5f4:	05b0                	addi	a2,sp,712
     5f6:	0000                	unimp
     5f8:	2a3c                	fld	fa5,80(a2)
     5fa:	0000                	unimp
     5fc:	0510                	addi	a2,sp,640
     5fe:	0000                	unimp
     600:	000c                	0xc
     602:	0000                	unimp
     604:	05b0                	addi	a2,sp,712
     606:	0000                	unimp
     608:	2f4c                	fld	fa1,152(a4)
     60a:	0000                	unimp
     60c:	0288                	addi	a0,sp,320
     60e:	0000                	unimp
     610:	000c                	0xc
     612:	0000                	unimp
     614:	05b0                	addi	a2,sp,712
     616:	0000                	unimp
     618:	31d4                	fld	fa3,160(a1)
     61a:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
     61c:	0008                	0x8
     61e:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     620:	000c                	0xc
     622:	0000                	unimp
     624:	ffff                	0xffff
     626:	ffff                	0xffff
     628:	0001                	nop
     62a:	7c01                	lui	s8,0xfffe0
            core_init_matrix(results[0].size,
     62c:	0d01                	addi	s10,s10,0
     62e:	0002                	c.slli64	zero
                                 | (((ee_s32)results[i].seed2) << 16),
     630:	000c                	0xc
     632:	0000                	unimp
     634:	0620                	addi	s0,sp,776
	...
     63e:	0000                	unimp
            core_init_matrix(results[0].size,
     640:	0018                	0x18
     642:	0000                	unimp
                             (ee_s32)results[i].seed1
     644:	0620                	addi	s0,sp,776
     646:	0000                	unimp
            core_init_matrix(results[0].size,
     648:	31dc                	fld	fa5,160(a1)
     64a:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     64c:	0030                	addi	a2,sp,8
     64e:	0000                	unimp
            core_init_matrix(results[0].size,
     650:	0e50                	addi	a2,sp,788
     652:	4c10                	lw	a2,24(s0)
     654:	0181                	addi	gp,gp,0
     656:	c14c                	sw	a1,4(a0)
     658:	0e44                	addi	s1,sp,788
     65a:	0000                	unimp
     65c:	000c                	0xc
     65e:	0000                	unimp
     660:	ffff                	0xffff
     662:	ffff                	0xffff
     664:	0001                	nop
     666:	7c01                	lui	s8,0xfffe0
     668:	0d01                	addi	s10,s10,0
     66a:	0002                	c.slli64	zero
     66c:	000c                	0xc
     66e:	0000                	unimp
     670:	065c                	addi	a5,sp,772
	...
     67a:	0000                	unimp
     67c:	000c                	0xc
     67e:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
     680:	065c                	addi	a5,sp,772
	...
     68a:	0000                	unimp
     68c:	000c                	0xc
     68e:	0000                	unimp
     690:	065c                	addi	a5,sp,772
	...
     69a:	0000                	unimp
            known_id = 2;
     69c:	000c                	0xc
     69e:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
     6a0:	065c                	addi	a5,sp,772
	...
     6aa:	0000                	unimp
            known_id = 2;
     6ac:	000c                	0xc
     6ae:	0000                	unimp
     6b0:	065c                	addi	a5,sp,772
     6b2:	0000                	unimp
        && (results[0].seed3 == 0))
     6b4:	320c                	fld	fa1,32(a2)
     6b6:	0000                	unimp
     6b8:	0024                	addi	s1,sp,8
     6ba:	0000                	unimp
     6bc:	000c                	0xc
     6be:	0000                	unimp
        results[0].seed3 = 0x66;
     6c0:	ffff                	0xffff
     6c2:	ffff                	0xffff
     6c4:	0001                	nop
     6c6:	7c01                	lui	s8,0xfffe0
     6c8:	0d01                	addi	s10,s10,0
     6ca:	0002                	c.slli64	zero
     6cc:	004c                	addi	a1,sp,4
     6ce:	0000                	unimp
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     6d0:	06bc                	addi	a5,sp,840
     6d2:	0000                	unimp
     6d4:	38dc                	fld	fa5,176(s1)
     6d6:	0000                	unimp
     6d8:	0904                	addi	s1,sp,144
     6da:	0000                	unimp
     6dc:	0e44                	addi	s1,sp,788
     6de:	5050                	lw	a2,36(s0)
     6e0:	0288                	addi	a0,sp,320
     6e2:	0389                	addi	t2,t2,2
     6e4:	0795                	addi	a5,a5,5
     6e6:	816c                	0x816c
                results[i].err++;
     6e8:	9201                	srli	a2,a2,0x20
     6ea:	9304                	0x9304
     6ec:	9405                	srai	s0,s0,0x21
     6ee:	9606                	add	a2,a2,ra
     6f0:	9708                	0x9708
     6f2:	9809                	andi	s0,s0,-30
     6f4:	990a                	add	s2,s2,sp
     6f6:	9b0c9a0b          	0x9b0c9a0b
     6fa:	020d                	addi	tp,tp,3
     6fc:	0ae0                	addi	s0,sp,348
     6fe:	44c1                	li	s1,16
    switch (seedcrc)
     700:	58c8                	lw	a0,52(s1)
     702:	44c9                	li	s1,18
    ee_s16       known_id = -1, total_errors = 0;
     704:	44d2                	lw	s1,20(sp)
     706:	44d444d3          	0x44d444d3
    switch (seedcrc)
     70a:	44d5                	li	s1,21
    ee_s16       known_id = -1, total_errors = 0;
     70c:	44d6                	lw	s1,84(sp)
     70e:	44d844d7          	0x44d844d7
     712:	44d9                	li	s1,22
    total_errors += check_data_types();
     714:	44da                	lw	s1,148(sp)
     716:	000e4cdb          	0xe4cdb
     71a:	0b44                	addi	s1,sp,404
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     71c:	000c                	0xc
     71e:	0000                	unimp
    total_errors += check_data_types();
     720:	ffff                	0xffff
     722:	ffff                	0xffff
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     724:	0001                	nop
     726:	7c01                	lui	s8,0xfffe0
     728:	0d01                	addi	s10,s10,0
     72a:	0002                	c.slli64	zero
     72c:	000c                	0xc
     72e:	0000                	unimp
     730:	071c                	addi	a5,sp,896
     732:	0000                	unimp
    ee_printf("Total ticks      : %d\n", (int)total_time);
     734:	41e0                	lw	s0,68(a1)
     736:	0000                	unimp
     738:	00f0                	addi	a2,sp,76
     73a:	0000                	unimp
     73c:	000c                	0xc
     73e:	0000                	unimp
     740:	ffff                	0xffff
     742:	ffff                	0xffff
     744:	0001                	nop
     746:	7c01                	lui	s8,0xfffe0
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     748:	0d01                	addi	s10,s10,0
     74a:	0002                	c.slli64	zero
     74c:	000c                	0xc
     74e:	0000                	unimp
     750:	073c                	addi	a5,sp,904
     752:	0000                	unimp
     754:	42d0                	lw	a2,4(a3)
     756:	0000                	unimp
     758:	00fc                	addi	a5,sp,76
     75a:	0000                	unimp
     75c:	000c                	0xc
     75e:	0000                	unimp
     760:	ffff                	0xffff
     762:	ffff                	0xffff
     764:	0001                	nop
     766:	7c01                	lui	s8,0xfffe0
     768:	0d01                	addi	s10,s10,0
     76a:	0002                	c.slli64	zero
    if (time_in_secs(total_time) > 0)
     76c:	0040                	addi	s0,sp,4
     76e:	0000                	unimp
     770:	075c                	addi	a5,sp,900
     772:	0000                	unimp
     774:	43cc                	lw	a1,4(a5)
     776:	0000                	unimp
    total_errors += check_data_types();
     778:	0764                	addi	s1,sp,908
     77a:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     77c:	0e44                	addi	s1,sp,788
     77e:	4440                	lw	s0,12(s0)
     780:	0492                	slli	s1,s1,0x4
     782:	9350                	0x9350
    total_errors += check_data_types();
     784:	9405                	srai	s0,s0,0x21
     786:	9506                	add	a0,a0,ra
    if (time_in_secs(total_time) > 0)
     788:	01815807          	0x1815807
     78c:	0288                	addi	a0,sp,320
     78e:	0389                	addi	t2,t2,2
     790:	0896                	slli	a7,a7,0x5
     792:	04030997          	auipc	s3,0x4030
                  default_num_contexts * results[0].iterations
     796:	0a01                	addi	s4,s4,0
     798:	44c1                	li	s1,16
     79a:	48c8                	lw	a0,20(s1)
     79c:	44d2                	lw	s1,20(sp)
     79e:	44c9                	li	s1,18
     7a0:	44d444d3          	0x44d444d3
        ee_printf("Iterations/Sec   : %lf\n",
     7a4:	44d5                	li	s1,21
     7a6:	44d6                	lw	s1,84(sp)
     7a8:	000e44d7          	0xe44d7
     7ac:	0b44                	addi	s1,sp,404
     7ae:	0000                	unimp
                      / time_in_secs(total_time));
     7b0:	000c                	0xc
     7b2:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     7b4:	ffff                	0xffff
     7b6:	ffff                	0xffff
                      / time_in_secs(total_time));
     7b8:	0001                	nop
     7ba:	7c01                	lui	s8,0xfffe0
     7bc:	0d01                	addi	s10,s10,0
     7be:	0002                	c.slli64	zero
        ee_printf("Iterations/Sec   : %lf\n",
     7c0:	000c                	0xc
     7c2:	0000                	unimp
     7c4:	07b0                	addi	a2,sp,968
     7c6:	0000                	unimp
     7c8:	4b30                	lw	a2,80(a4)
     7ca:	0000                	unimp
     7cc:	0078                	addi	a4,sp,12
     7ce:	0000                	unimp
     7d0:	000c                	0xc
     7d2:	0000                	unimp
     7d4:	ffff                	0xffff
     7d6:	ffff                	0xffff
     7d8:	0001                	nop
     7da:	7c01                	lui	s8,0xfffe0
     7dc:	0d01                	addi	s10,s10,0
     7de:	0002                	c.slli64	zero
     7e0:	0024                	addi	s1,sp,8
     7e2:	0000                	unimp
     7e4:	07d0                	addi	a2,sp,964
     7e6:	0000                	unimp
     7e8:	4ba8                	lw	a0,80(a5)
     7ea:	0000                	unimp
     7ec:	00b4                	addi	a3,sp,72
     7ee:	0000                	unimp
    if (time_in_secs(total_time) < 10)
     7f0:	0e48                	addi	a0,sp,788
     7f2:	4810                	lw	a2,16(s0)
     7f4:	0288                	addi	a0,sp,320
     7f6:	0181                	addi	gp,gp,0
     7f8:	c178                	sw	a4,68(a0)
     7fa:	c844                	sw	s1,20(s0)
     7fc:	0e5c                	addi	a5,sp,788
     7fe:	6c00                	flw	fs0,24(s0)
     800:	100e                	c.slli	zero,0x23
     802:	0181                	addi	gp,gp,0
     804:	0288                	addi	a0,sp,320
     806:	0000                	unimp
     808:	000c                	0xc
     80a:	0000                	unimp
     80c:	ffff                	0xffff
     80e:	ffff                	0xffff
     810:	0001                	nop
     812:	7c01                	lui	s8,0xfffe0
    ee_printf("Iterations       : %lu\n",
     814:	0d01                	addi	s10,s10,0
     816:	0002                	c.slli64	zero
     818:	000c                	0xc
     81a:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     81c:	0808                	addi	a0,sp,16
     81e:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     820:	4d34                	lw	a3,88(a0)
     822:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     824:	0094                	addi	a3,sp,64
     826:	0000                	unimp
     828:	000c                	0xc
     82a:	0000                	unimp
     82c:	ffff                	0xffff
     82e:	ffff                	0xffff
     830:	0001                	nop
     832:	7c01                	lui	s8,0xfffe0
     834:	0d01                	addi	s10,s10,0
     836:	0002                	c.slli64	zero
     838:	0038                	addi	a4,sp,8
     83a:	0000                	unimp
     83c:	0828                	addi	a0,sp,24
     83e:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     840:	4ea4                	lw	s1,88(a3)
     842:	0000                	unimp
     844:	0164                	addi	s1,sp,140
     846:	0000                	unimp
     848:	0e44                	addi	s1,sp,788
     84a:	6030                	flw	fa2,64(s0)
     84c:	0288                	addi	a0,sp,320
     84e:	0492                	slli	s1,s1,0x4
     850:	0694                	addi	a3,sp,832
     852:	0795                	addi	a5,a5,5
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     854:	0896                	slli	a7,a7,0x5
     856:	0181                	addi	gp,gp,0
     858:	0389                	addi	t2,t2,2
     85a:	00030593          	mv	a1,t1
     85e:	0a01                	addi	s4,s4,0
     860:	44c1                	li	s1,16
     862:	50c8                	lw	a0,36(s1)
     864:	44c9                	li	s1,18
     866:	44d2                	lw	s1,20(sp)
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     868:	44d444d3          	0x44d444d3
     86c:	44d5                	li	s1,21
     86e:	44d6                	lw	s1,84(sp)
     870:	000e                	c.slli	zero,0x3
     872:	0b44                	addi	s1,sp,404
     874:	0038                	addi	a4,sp,8
     876:	0000                	unimp
     878:	0828                	addi	a0,sp,24
     87a:	0000                	unimp
     87c:	5008                	lw	a0,32(s0)
     87e:	0000                	unimp
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     880:	0100                	addi	s0,sp,128
     882:	0000                	unimp
     884:	0e44                	addi	s1,sp,788
     886:	6030                	flw	fa2,64(s0)
     888:	0288                	addi	a0,sp,320
     88a:	0492                	slli	s1,s1,0x4
     88c:	01810593          	addi	a1,sp,24
     890:	0389                	addi	t2,t2,2
     892:	0694                	addi	a3,sp,832
    if (results[0].execs & ID_LIST)
     894:	0795                	addi	a5,a5,5
     896:	0896                	slli	a7,a7,0x5
        total_errors++;
     898:	7c02                	flw	fs8,32(sp)
     89a:	c10a                	sw	sp,128(sp)
     89c:	c844                	sw	s1,20(s0)
     89e:	c948                	sw	a0,20(a0)
    if (results[0].execs & ID_LIST)
     8a0:	d244                	sw	s1,36(a2)
     8a2:	d344                	sw	s1,36(a4)
     8a4:	d444                	sw	s1,44(s0)
     8a6:	d544                	sw	s1,44(a0)
        for (i = 0; i < default_num_contexts; i++)
     8a8:	d644                	sw	s1,44(a2)
     8aa:	0e44                	addi	s1,sp,788
     8ac:	4400                	lw	s0,8(s0)
     8ae:	0050000b          	0x50000b
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8b2:	0000                	unimp
     8b4:	0828                	addi	a0,sp,24
     8b6:	0000                	unimp
     8b8:	5108                	lw	a0,32(a0)
     8ba:	0000                	unimp
     8bc:	07b0                	addi	a2,sp,968
     8be:	0000                	unimp
     8c0:	0e44                	addi	s1,sp,788
     8c2:	0180                	addi	s0,sp,192
        for (i = 0; i < default_num_contexts; i++)
     8c4:	8150                	0x8150
     8c6:	8801                	andi	s0,s0,0
     8c8:	8902                	jr	s2
     8ca:	04925003          	lhu	zero,73(tp) # 1b049 <_data_lma+0xfed1>
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     8ce:	06940593          	addi	a1,s0,105
     8d2:	9664                	0x9664
     8d4:	9708                	0x9708
     8d6:	9809                	andi	s0,s0,-30
     8d8:	950a                	add	a0,a0,sp
     8da:	9a0b9907          	0x9a0b9907
     8de:	9b0c                	0x9b0c
     8e0:	030d                	addi	t1,t1,3
     8e2:	0158                	addi	a4,sp,132
     8e4:	c10a                	sw	sp,128(sp)
     8e6:	c844                	sw	s1,20(s0)
     8e8:	c944                	sw	s1,20(a0)
     8ea:	d244                	sw	s1,36(a2)
     8ec:	d344                	sw	s1,36(a4)
     8ee:	d444                	sw	s1,44(s0)
     8f0:	d544                	sw	s1,44(a0)
     8f2:	d644                	sw	s1,44(a2)
     8f4:	d744                	sw	s1,44(a4)
     8f6:	d844                	sw	s1,52(s0)
     8f8:	d944                	sw	s1,52(a0)
     8fa:	da44                	sw	s1,52(a2)
     8fc:	db44                	sw	s1,52(a4)
     8fe:	0e44                	addi	s1,sp,788
        for (i = 0; i < default_num_contexts; i++)
     900:	4400                	lw	s0,8(s0)
     902:	000c000b          	0xc000b
     906:	0000                	unimp
     908:	ffff                	0xffff
     90a:	ffff                	0xffff
     90c:	0001                	nop
     90e:	7c01                	lui	s8,0xfffe0
     910:	0d01                	addi	s10,s10,0
     912:	0002                	c.slli64	zero
     914:	0040                	addi	s0,sp,4
     916:	0000                	unimp
    if (results[0].execs & ID_MATRIX)
     918:	0904                	addi	s1,sp,144
     91a:	0000                	unimp
     91c:	58b8                	lw	a4,112(s1)
     91e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     920:	01b0                	addi	a2,sp,200
     922:	0000                	unimp
     924:	0e44                	addi	s1,sp,788
     926:	4830                	lw	a2,80(s0)
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     928:	0795                	addi	a5,a5,5
     92a:	8868                	0x8868
     92c:	8902                	jr	s2
     92e:	94059303          	lh	t1,-1728(a1)
     932:	8106                	mv	sp,ra
     934:	9201                	srli	a2,a2,0x20
     936:	9604                	0x9604
     938:	9708                	0x9708
     93a:	0309                	addi	t1,t1,2
        for (i = 0; i < default_num_contexts; i++)
     93c:	0108                	addi	a0,sp,128
     93e:	c10a                	sw	sp,128(sp)
     940:	c844                	sw	s1,20(s0)
     942:	c944                	sw	s1,20(a0)
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     944:	d244                	sw	s1,36(a2)
     946:	d344                	sw	s1,36(a4)
     948:	d444                	sw	s1,44(s0)
     94a:	d544                	sw	s1,44(a0)
     94c:	d644                	sw	s1,44(a2)
     94e:	d744                	sw	s1,44(a4)
     950:	0e44                	addi	s1,sp,788
     952:	4400                	lw	s0,8(s0)
     954:	0000000b          	0xb
     958:	0040                	addi	s0,sp,4
     95a:	0000                	unimp
     95c:	0904                	addi	s1,sp,144
     95e:	0000                	unimp
     960:	5a68                	lw	a0,116(a2)
     962:	0000                	unimp
     964:	03ec                	addi	a1,sp,460
     966:	0000                	unimp
     968:	0e44                	addi	s1,sp,788
     96a:	6840                	flw	fs0,20(s0)
     96c:	0288                	addi	a0,sp,320
     96e:	07950593          	addi	a1,a0,121 # 1b079 <_data_lma+0xff01>
     972:	0896                	slli	a7,a7,0x5
     974:	01810997          	auipc	s3,0x1810
        for (i = 0; i < default_num_contexts; i++)
     978:	0389                	addi	t2,t2,2
     97a:	0492                	slli	s1,s1,0x4
     97c:	0694                	addi	a3,sp,832
     97e:	0a98                	addi	a4,sp,336
     980:	0a027403          	0xa027403
     984:	44c1                	li	s1,16
     986:	44c8                	lw	a0,12(s1)
     988:	44c9                	li	s1,18
     98a:	44d2                	lw	s1,20(sp)
     98c:	44d444d3          	0x44d444d3
    if (results[0].execs & ID_STATE)
     990:	44d5                	li	s1,21
     992:	44d6                	lw	s1,84(sp)
     994:	44d844d7          	0x44d844d7
        for (i = 0; i < default_num_contexts; i++)
     998:	000e                	c.slli	zero,0x3
     99a:	0b44                	addi	s1,sp,404
     99c:	000c                	0xc
     99e:	0000                	unimp
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9a0:	ffff                	0xffff
     9a2:	ffff                	0xffff
     9a4:	0001                	nop
     9a6:	7c01                	lui	s8,0xfffe0
     9a8:	0d01                	addi	s10,s10,0
     9aa:	0002                	c.slli64	zero
     9ac:	001c                	0x1c
     9ae:	0000                	unimp
     9b0:	099c                	addi	a5,sp,208
	...
        for (i = 0; i < default_num_contexts; i++)
     9ba:	0000                	unimp
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     9bc:	0e44                	addi	s1,sp,788
     9be:	4850                	lw	a2,20(s0)
     9c0:	0a88                	addi	a0,sp,336
     9c2:	0981                	addi	s3,s3,0
     9c4:	0002                	c.slli64	zero
     9c6:	44c1                	li	s1,16
     9c8:	44c8                	lw	a0,12(s1)
     9ca:	000e                	c.slli	zero,0x3
     9cc:	0020                	addi	s0,sp,8
     9ce:	0000                	unimp
     9d0:	099c                	addi	a5,sp,208
     9d2:	0000                	unimp
     9d4:	5e54                	lw	a3,60(a2)
     9d6:	0000                	unimp
     9d8:	0084                	addi	s1,sp,64
     9da:	0000                	unimp
     9dc:	0e44                	addi	s1,sp,788
     9de:	6840                	flw	fs0,20(s0)
     9e0:	0a88                	addi	a0,sp,336
     9e2:	894c                	0x894c
     9e4:	7c09810b          	0x7c09810b
     9e8:	44c1                	li	s1,16
     9ea:	44c8                	lw	a0,12(s1)
     9ec:	44c9                	li	s1,18
     9ee:	000e                	c.slli	zero,0x3
        for (i = 0; i < default_num_contexts; i++)
     9f0:	000c                	0xc
     9f2:	0000                	unimp
     9f4:	ffff                	0xffff
     9f6:	ffff                	0xffff
     9f8:	0001                	nop
     9fa:	7c01                	lui	s8,0xfffe0
     9fc:	0d01                	addi	s10,s10,0
     9fe:	0002                	c.slli64	zero
     a00:	001c                	0x1c
     a02:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a04:	09f0                	addi	a2,sp,220
	...
     a0e:	0000                	unimp
     a10:	0e44                	addi	s1,sp,788
     a12:	4820                	lw	s0,80(s0)
     a14:	0288                	addi	a0,sp,320
     a16:	0181                	addi	gp,gp,0
    for (i = 0; i < default_num_contexts; i++)
     a18:	c840                	sw	s0,20(s0)
     a1a:	c144                	sw	s1,4(a0)
     a1c:	0e44                	addi	s1,sp,788
     a1e:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a20:	001c                	0x1c
     a22:	0000                	unimp
     a24:	09f0                	addi	a2,sp,220
     a26:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     a28:	5ed8                	lw	a4,60(a3)
     a2a:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     a2c:	0058                	addi	a4,sp,4
     a2e:	0000                	unimp
     a30:	0e44                	addi	s1,sp,788
     a32:	4c20                	lw	s0,88(s0)
     a34:	0288                	addi	a0,sp,320
     a36:	8148                	0x8148
     a38:	7001                	c.lui	zero,0xfffe0
     a3a:	44c8                	lw	a0,12(s1)
     a3c:	44c1                	li	s1,16
     a3e:	000e                	c.slli	zero,0x3
     a40:	000c                	0xc
     a42:	0000                	unimp
     a44:	ffff                	0xffff
     a46:	ffff                	0xffff
     a48:	0001                	nop
     a4a:	7c01                	lui	s8,0xfffe0
     a4c:	0d01                	addi	s10,s10,0
     a4e:	0002                	c.slli64	zero
     a50:	0030                	addi	a2,sp,8
     a52:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     a54:	0a40                	addi	s0,sp,276
     a56:	0000                	unimp
     a58:	5f30                	lw	a2,120(a4)
     a5a:	0000                	unimp
     a5c:	0174                	addi	a3,sp,140
     a5e:	0000                	unimp
     a60:	0e44                	addi	s1,sp,788
     a62:	5820                	lw	s0,112(s0)
     a64:	0389                	addi	t2,t2,2
     a66:	0492                	slli	s1,s1,0x4
    if (total_errors == 0)
     a68:	0181                	addi	gp,gp,0
     a6a:	0288                	addi	a0,sp,320
    if (total_errors > 0)
     a6c:	06940593          	addi	a1,s0,105
        ee_printf("Errors detected\n");
     a70:	e002                	fsw	ft0,0(sp)
     a72:	c10a                	sw	sp,128(sp)
     a74:	c844                	sw	s1,20(s0)
     a76:	c944                	sw	s1,20(a0)
     a78:	d244                	sw	s1,36(a2)
     a7a:	d344                	sw	s1,36(a4)
     a7c:	d444                	sw	s1,44(s0)
     a7e:	0e44                	addi	s1,sp,788
    portable_fini(&(results[0].port));
     a80:	4400                	lw	s0,8(s0)
     a82:	000c000b          	0xc000b
     a86:	0000                	unimp
     a88:	0a40                	addi	s0,sp,276
     a8a:	0000                	unimp
}
     a8c:	60a4                	flw	fs1,64(s1)
     a8e:	0000                	unimp
     a90:	0018                	0x18
     a92:	0000                	unimp
     a94:	000c                	0xc
     a96:	0000                	unimp
     a98:	ffff                	0xffff
     a9a:	ffff                	0xffff
     a9c:	0001                	nop
     a9e:	7c01                	lui	s8,0xfffe0
     aa0:	0d01                	addi	s10,s10,0
     aa2:	0002                	c.slli64	zero
     aa4:	000c                	0xc
     aa6:	0000                	unimp
     aa8:	0a94                	addi	a3,sp,336
     aaa:	0000                	unimp
     aac:	60bc                	flw	fa5,64(s1)
     aae:	0000                	unimp
     ab0:	001c                	0x1c
     ab2:	0000                	unimp
     ab4:	000c                	0xc
     ab6:	0000                	unimp
     ab8:	ffff                	0xffff
     aba:	ffff                	0xffff
     abc:	0001                	nop
     abe:	7c01                	lui	s8,0xfffe0
     ac0:	0d01                	addi	s10,s10,0
     ac2:	0002                	c.slli64	zero
     ac4:	002c                	addi	a1,sp,8
     ac6:	0000                	unimp
     ac8:	0ab4                	addi	a3,sp,344
     aca:	0000                	unimp
     acc:	60d8                	flw	fa4,4(s1)
     ace:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ad0:	0148                	addi	a0,sp,132
     ad2:	0000                	unimp
     ad4:	0e44                	addi	s1,sp,788
     ad6:	5420                	lw	s0,104(s0)
     ad8:	0288                	addi	a0,sp,320
     ada:	0389                	addi	t2,t2,2
     adc:	0492                	slli	s1,s1,0x4
     ade:	0181                	addi	gp,gp,0
     ae0:	d0020593          	addi	a1,tp,-768 # fffffd00 <__freertos_irq_stack_top+0xfefefd00>
     ae4:	c10a                	sw	sp,128(sp)
     ae6:	c844                	sw	s1,20(s0)
     ae8:	c948                	sw	a0,20(a0)
     aea:	d244                	sw	s1,36(a2)
            j++;
     aec:	d344                	sw	s1,36(a4)
     aee:	0e44                	addi	s1,sp,788
        if ((1 << (ee_u32)i) & results[0].execs)
     af0:	4400                	lw	s0,8(s0)
     af2:	000c000b          	0xc000b
     af6:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     af8:	0ab4                	addi	a3,sp,344
	...
     b02:	0000                	unimp
     b04:	000c                	0xc
     b06:	0000                	unimp
     b08:	ffff                	0xffff
     b0a:	ffff                	0xffff
     b0c:	0001                	nop
     b0e:	7c01                	lui	s8,0xfffe0
     b10:	0d01                	addi	s10,s10,0
     b12:	0002                	c.slli64	zero
        if (results[i].execs & ID_LIST)
     b14:	0028                	addi	a0,sp,8
     b16:	0000                	unimp
     b18:	0b04                	addi	s1,sp,400
     b1a:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b1c:	6220                	flw	fs0,64(a2)
     b1e:	0000                	unimp
     b20:	018c                	addi	a1,sp,192
     b22:	0000                	unimp
     b24:	0e44                	addi	s1,sp,788
     b26:	4c10                	lw	a2,24(s0)
     b28:	0389                	addi	t2,t2,2
     b2a:	8850                	0x8850
     b2c:	9202                	jalr	tp
     b2e:	8104                	0x8104
     b30:	0201                	addi	tp,tp,0
     b32:	0a64                	addi	s1,sp,284
     b34:	44c1                	li	s1,16
     b36:	44c8                	lw	a0,12(s1)
     b38:	44c9                	li	s1,18
     b3a:	44d2                	lw	s1,20(sp)
     b3c:	000e                	c.slli	zero,0x3
     b3e:	0b44                	addi	s1,sp,404
     b40:	000c                	0xc
     b42:	0000                	unimp
     b44:	ffff                	0xffff
     b46:	ffff                	0xffff
            j++;
     b48:	0001                	nop
     b4a:	7c01                	lui	s8,0xfffe0
     b4c:	0d01                	addi	s10,s10,0
     b4e:	0002                	c.slli64	zero
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     b50:	0050                	addi	a2,sp,4
     b52:	0000                	unimp
     b54:	0b40                	addi	s0,sp,404
     b56:	0000                	unimp
            j++;
     b58:	63ac                	flw	fa1,64(a5)
     b5a:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     b5c:	0240                	addi	s0,sp,260
     b5e:	0000                	unimp
     b60:	0e44                	addi	s1,sp,788
     b62:	4850                	lw	a2,20(s0)
        ee_printf(
     b64:	0492                	slli	s1,s1,0x4
     b66:	8174                	0x8174
     b68:	8801                	andi	s0,s0,0
     b6a:	8902                	jr	s2
     b6c:	94059303          	lh	t1,-1728(a1)
     b70:	9506                	add	a0,a0,ra
     b72:	97089607          	0x97089607
     b76:	9809                	andi	s0,s0,-30
            res->crclist = res->crc;
     b78:	990a                	add	s2,s2,sp
     b7a:	9b0c9a0b          	0x9b0c9a0b
    for (i = 0; i < iterations; i++)
     b7e:	030d                	addi	t1,t1,3
     b80:	0188                	addi	a0,sp,192
     b82:	c10a                	sw	sp,128(sp)
     b84:	c844                	sw	s1,20(s0)
     b86:	c944                	sw	s1,20(a0)
     b88:	d244                	sw	s1,36(a2)
     b8a:	d344                	sw	s1,36(a4)
        && (results[0].seed3 == 0))
     b8c:	d444                	sw	s1,44(s0)
     b8e:	d544                	sw	s1,44(a0)
     b90:	d644                	sw	s1,44(a2)
     b92:	d744                	sw	s1,44(a4)
     b94:	d844                	sw	s1,52(s0)
     b96:	d944                	sw	s1,52(a0)
        results[0].seed1 = 0x3415;
     b98:	da44                	sw	s1,52(a2)
     b9a:	db44                	sw	s1,52(a4)
     b9c:	0e44                	addi	s1,sp,788
     b9e:	4400                	lw	s0,8(s0)
     ba0:	0000000b          	0xb
     ba4:	0050                	addi	a2,sp,4
     ba6:	0000                	unimp
        results[0].seed3 = 0x66;
     ba8:	0b40                	addi	s0,sp,404
     baa:	0000                	unimp
     bac:	65ec                	flw	fa1,76(a1)
     bae:	0000                	unimp
     bb0:	1360                	addi	s0,sp,428
     bb2:	0000                	unimp
        printf("start test22\n");
     bb4:	0e44                	addi	s1,sp,788
     bb6:	0190                	addi	a2,sp,192
        results[0].execs = ALL_ALGORITHMS_MASK;
     bb8:	887c                	0x887c
     bba:	8902                	jr	s2
        printf("start test22\n");
     bbc:	93049203          	lh	tp,-1744(s1)
        results[0].execs = ALL_ALGORITHMS_MASK;
     bc0:	9405                	srai	s0,s0,0x21
     bc2:	9806                	add	a6,a6,ra
        printf("start test22\n");
     bc4:	810a                	mv	sp,sp
     bc6:	9501                	srai	a0,a0,0x20
     bc8:	97089607          	0x97089607
     bcc:	9909                	andi	a0,a0,-30
     bce:	9b0c9a0b          	0x9b0c9a0b
        ee_printf(
     bd2:	030d                	addi	t1,t1,3
     bd4:	0100                	addi	s0,sp,128
     bd6:	c10a                	sw	sp,128(sp)
     bd8:	c844                	sw	s1,20(s0)
     bda:	c948                	sw	a0,20(a0)
     bdc:	d244                	sw	s1,36(a2)
     bde:	d344                	sw	s1,36(a4)
        if (known_id == 3)
     be0:	d444                	sw	s1,44(s0)
     be2:	d544                	sw	s1,44(a0)
     be4:	d644                	sw	s1,44(a2)
     be6:	d744                	sw	s1,44(a4)
     be8:	d844                	sw	s1,52(s0)
     bea:	d944                	sw	s1,52(a0)
                      default_num_contexts * results[0].iterations
     bec:	da44                	sw	s1,52(a2)
     bee:	db44                	sw	s1,52(a4)
     bf0:	0e44                	addi	s1,sp,788
     bf2:	4400                	lw	s0,8(s0)
     bf4:	0000000b          	0xb
     bf8:	000c                	0xc
     bfa:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     bfc:	ffff                	0xffff
     bfe:	ffff                	0xffff
     c00:	0001                	nop
     c02:	7c01                	lui	s8,0xfffe0
     c04:	0d01                	addi	s10,s10,0
     c06:	0002                	c.slli64	zero
                          / time_in_secs(total_time),
     c08:	002c                	addi	a1,sp,8
     c0a:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c0c:	0bf8                	addi	a4,sp,476
     c0e:	0000                	unimp
                          / time_in_secs(total_time),
     c10:	794c                	flw	fa1,52(a0)
     c12:	0000                	unimp
     c14:	01e0                	addi	s0,sp,204
     c16:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     c18:	0e48                	addi	a0,sp,788
     c1a:	5420                	lw	s0,104(s0)
     c1c:	0288                	addi	a0,sp,320
     c1e:	0389                	addi	t2,t2,2
     c20:	0181                	addi	gp,gp,0
     c22:	0492                	slli	s1,s1,0x4
     c24:	0a680593          	addi	a1,a6,166 # ffffa0a6 <__freertos_irq_stack_top+0xfefea0a6>
     c28:	44c1                	li	s1,16
     c2a:	44c8                	lw	a0,12(s1)
     c2c:	44c9                	li	s1,18
     c2e:	44d2                	lw	s1,20(sp)
     c30:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
     c34:	0b44                	addi	s1,sp,404
     c36:	0000                	unimp
     c38:	0028                	addi	a0,sp,8
     c3a:	0000                	unimp
     c3c:	0bf8                	addi	a4,sp,476
     c3e:	0000                	unimp
     c40:	7b2c                	flw	fa1,112(a4)
     c42:	0000                	unimp
     c44:	00a8                	addi	a0,sp,72
     c46:	0000                	unimp
     c48:	0e4c                	addi	a1,sp,788
     c4a:	4820                	lw	s0,80(s0)
     c4c:	0288                	addi	a0,sp,320
     c4e:	0181                	addi	gp,gp,0
            ee_printf(" / %s", MEM_LOCATION);
     c50:	4002                	0x4002
     c52:	c80a                	sw	sp,16(sp)
     c54:	c144                	sw	s1,4(a0)
     c56:	0e44                	addi	s1,sp,788
     c58:	4800                	lw	s0,16(s0)
     c5a:	44c16c0b          	0x44c16c0b
     c5e:	48c8                	lw	a0,20(s1)
     c60:	000e                	c.slli	zero,0x3
     c62:	0000                	unimp
            ee_printf("\n");
     c64:	000c                	0xc
     c66:	0000                	unimp
     c68:	0bf8                	addi	a4,sp,476
	...
     c72:	0000                	unimp
        ee_printf(
     c74:	000c                	0xc
     c76:	0000                	unimp
     c78:	ffff                	0xffff
     c7a:	ffff                	0xffff
     c7c:	0001                	nop
     c7e:	7c01                	lui	s8,0xfffe0
     c80:	0d01                	addi	s10,s10,0
     c82:	0002                	c.slli64	zero
        total_errors++;
     c84:	000c                	0xc
     c86:	0000                	unimp
     c88:	0c74                	addi	a3,sp,540
	...
    if (results[0].execs & ID_STATE)
     c92:	0000                	unimp
     c94:	001c                	0x1c
     c96:	0000                	unimp
            ee_printf("2K validation run parameters for coremark.\n");
     c98:	0c74                	addi	a3,sp,540
     c9a:	0000                	unimp
     c9c:	7bd4                	flw	fa3,52(a5)
     c9e:	0000                	unimp
     ca0:	008c                	addi	a1,sp,64
     ca2:	0000                	unimp
     ca4:	0e44                	addi	s1,sp,788
     ca6:	4810                	lw	a2,16(s0)
     ca8:	0288                	addi	a0,sp,320
     caa:	0181                	addi	gp,gp,0
     cac:	7402                	flw	fs0,32(sp)
     cae:	44c1                	li	s1,16
            known_id = 4;
     cb0:	44c8                	lw	a0,12(s1)
     cb2:	000e                	c.slli	zero,0x3
            ee_printf("2K validation run parameters for coremark.\n");
     cb4:	000c                	0xc
     cb6:	0000                	unimp
     cb8:	0c74                	addi	a3,sp,540
     cba:	0000                	unimp
     cbc:	7c60                	flw	fs0,124(s0)
     cbe:	0000                	unimp
     cc0:	0010                	0x10
     cc2:	0000                	unimp
            known_id = 4;
     cc4:	000c                	0xc
     cc6:	0000                	unimp
     cc8:	0c74                	addi	a3,sp,540
	...
            ee_printf("6k validation run parameters for coremark.\n");
     cd2:	0000                	unimp
     cd4:	0028                	addi	a0,sp,8
     cd6:	0000                	unimp
     cd8:	0c74                	addi	a3,sp,540
     cda:	0000                	unimp
     cdc:	7c70                	flw	fa2,124(s0)
     cde:	0000                	unimp
     ce0:	0080                	addi	s0,sp,64
     ce2:	0000                	unimp
     ce4:	0e44                	addi	s1,sp,788
     ce6:	4810                	lw	a2,16(s0)
     ce8:	0288                	addi	a0,sp,320
     cea:	9258                	0x9258
            known_id = 1;
     cec:	5004                	lw	s1,32(s0)
     cee:	0389                	addi	t2,t2,2
            ee_printf("6k validation run parameters for coremark.\n");
     cf0:	0181                	addi	gp,gp,0
     cf2:	c174                	sw	a3,68(a0)
     cf4:	c844                	sw	s1,20(s0)
     cf6:	d248                	sw	a0,36(a2)
     cf8:	c944                	sw	s1,20(a0)
     cfa:	0e44                	addi	s1,sp,788
            known_id = 1;
     cfc:	0000                	unimp
     cfe:	0000                	unimp
     d00:	000c                	0xc
     d02:	0000                	unimp
            ee_printf("6k performance run parameters for coremark.\n");
     d04:	0c74                	addi	a3,sp,540
	...
     d0e:	0000                	unimp
     d10:	001c                	0x1c
     d12:	0000                	unimp
     d14:	0c74                	addi	a3,sp,540
     d16:	0000                	unimp
     d18:	7cf0                	flw	fa2,124(s1)
     d1a:	0000                	unimp
     d1c:	00cc                	addi	a1,sp,68
     d1e:	0000                	unimp
     d20:	0e4c                	addi	a1,sp,788
     d22:	4810                	lw	a2,16(s0)
     d24:	0181                	addi	gp,gp,0
     d26:	0288                	addi	a0,sp,320
     d28:	a802                	fsd	ft0,16(sp)
     d2a:	44c1                	li	s1,16
     d2c:	44c8                	lw	a0,12(s1)
     d2e:	000e                	c.slli	zero,0x3
            known_id = 0;
     d30:	0028                	addi	a0,sp,8
     d32:	0000                	unimp
     d34:	0c74                	addi	a3,sp,540
     d36:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     d38:	7dbc                	flw	fa5,120(a1)
     d3a:	0000                	unimp
     d3c:	00fc                	addi	a5,sp,76
     d3e:	0000                	unimp
    ee_s16     find_num = res->seed3;
     d40:	0e44                	addi	s1,sp,788
     d42:	4c10                	lw	a2,24(s0)
{
     d44:	0389                	addi	t2,t2,2
     d46:	9254                	0x9254
     d48:	8104                	0x8104
     d4a:	8801                	andi	s0,s0,0
     d4c:	0202                	c.slli64	tp
     d4e:	0a94                	addi	a3,sp,336
     d50:	44c1                	li	s1,16
     d52:	44c8                	lw	a0,12(s1)
     d54:	44c9                	li	s1,18
     d56:	44d2                	lw	s1,20(sp)
     d58:	000e                	c.slli	zero,0x3
     d5a:	0b44                	addi	s1,sp,404
     d5c:	000c                	0xc
     d5e:	0000                	unimp
     d60:	0c74                	addi	a3,sp,540
	...
     d6a:	0000                	unimp
     d6c:	000c                	0xc
     d6e:	0000                	unimp
     d70:	0c74                	addi	a3,sp,540
	...
     d7a:	0000                	unimp
     d7c:	000c                	0xc
     d7e:	0000                	unimp
     d80:	0c74                	addi	a3,sp,540
	...
    for (i = 0; i < find_num; i++)
     d8a:	0000                	unimp
    info.idx = finder_idx;
     d8c:	000c                	0xc
     d8e:	0000                	unimp
    for (i = 0; i < find_num; i++)
     d90:	0c74                	addi	a3,sp,540
	...
    ee_u16     found = 0, missed = 0;
     d9a:	0000                	unimp
    ee_u16     retval = 0;
     d9c:	000c                	0xc
     d9e:	0000                	unimp
    if (info->idx >= 0)
     da0:	0c74                	addi	a3,sp,540
	...
        info.data16 = (i & 0xff);
     daa:	0000                	unimp
    if (info->idx >= 0)
     dac:	000c                	0xc
     dae:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     db0:	0c74                	addi	a3,sp,540
	...
     dba:	0000                	unimp
     dbc:	000c                	0xc
     dbe:	0000                	unimp
     dc0:	ffff                	0xffff
     dc2:	ffff                	0xffff
     dc4:	0001                	nop
     dc6:	7c01                	lui	s8,0xfffe0
     dc8:	0d01                	addi	s10,s10,0
     dca:	0002                	c.slli64	zero
     dcc:	0034                	addi	a3,sp,8
     dce:	0000                	unimp
     dd0:	0dbc                	addi	a5,sp,728
	...
     dda:	0000                	unimp
            list = list->next;
     ddc:	0e44                	addi	s1,sp,788
     dde:	5c30                	lw	a2,120(s0)
        while (list && (list->info->idx != info->idx))
     de0:	0288                	addi	a0,sp,320
     de2:	0492                	slli	s1,s1,0x4
     de4:	0694                	addi	a3,sp,832
     de6:	0795                	addi	a5,a5,5
     de8:	0181                	addi	gp,gp,0
     dea:	0389                	addi	t2,t2,2
    while (list)
     dec:	0a400593          	li	a1,164
     df0:	44c1                	li	s1,16
     df2:	48c8                	lw	a0,20(s1)
        tmp        = list->next;
     df4:	44c9                	li	s1,18
     df6:	44d2                	lw	s1,20(sp)
        list->next = next;
     df8:	44d444d3          	0x44d444d3
    while (list)
     dfc:	44d5                	li	s1,21
     dfe:	000e                	c.slli	zero,0x3
        if (this_find == NULL)
     e00:	0b44                	addi	s1,sp,404
     e02:	0000                	unimp
            if (this_find->info->data16 & 0x1) /* use found value */
     e04:	003c                	addi	a5,sp,8
     e06:	0000                	unimp
            found++;
     e08:	0dbc                	addi	a5,sp,728
     e0a:	0000                	unimp
     e0c:	7eb8                	flw	fa4,120(a3)
     e0e:	0000                	unimp
            if (this_find->info->data16 & 0x1) /* use found value */
     e10:	00b4                	addi	a3,sp,72
     e12:	0000                	unimp
            found++;
     e14:	0e44                	addi	s1,sp,788
     e16:	6430                	flw	fa2,72(s0)
            if (this_find->info->data16 & 0x1) /* use found value */
     e18:	0288                	addi	a0,sp,320
     e1a:	0492                	slli	s1,s1,0x4
     e1c:	0694                	addi	a3,sp,832
     e1e:	0795                	addi	a5,a5,5
                retval += (this_find->info->data16 >> 9) & 1;
     e20:	0896                	slli	a7,a7,0x5
     e22:	01810997          	auipc	s3,0x1810
     e26:	0389                	addi	t2,t2,2
     e28:	0a600593          	li	a1,166
     e2c:	44c1                	li	s1,16
     e2e:	48c8                	lw	a0,20(s1)
     e30:	44c9                	li	s1,18
     e32:	44d2                	lw	s1,20(sp)
            if (this_find->next != NULL)
     e34:	44d444d3          	0x44d444d3
     e38:	44d5                	li	s1,21
     e3a:	44d6                	lw	s1,84(sp)
                this_find->next = finder->next;
     e3c:	000e44d7          	0xe44d7
     e40:	0b44                	addi	s1,sp,404
     e42:	0000                	unimp
                finder->next    = list->next;
     e44:	000c                	0xc
     e46:	0000                	unimp
     e48:	ffff                	0xffff
     e4a:	ffff                	0xffff
                list->next      = finder;
     e4c:	0001                	nop
     e4e:	7c01                	lui	s8,0xfffe0
        if (info.idx >= 0)
     e50:	0d01                	addi	s10,s10,0
     e52:	0002                	c.slli64	zero
     e54:	000c                	0xc
     e56:	0000                	unimp
            info.idx++;
     e58:	0e44                	addi	s1,sp,788
	...
     e62:	0000                	unimp
     e64:	000c                	0xc
     e66:	0000                	unimp
     e68:	0e44                	addi	s1,sp,788
     e6a:	0000                	unimp
     e6c:	7f6c                	flw	fa1,124(a4)
     e6e:	0000                	unimp
     e70:	0024                	addi	s1,sp,8
     e72:	0000                	unimp
    for (i = 0; i < find_num; i++)
     e74:	000c                	0xc
     e76:	0000                	unimp
     e78:	0e44                	addi	s1,sp,788
	...
     e82:	0000                	unimp
     e84:	000c                	0xc
     e86:	0000                	unimp
     e88:	ffff                	0xffff
     e8a:	ffff                	0xffff
     e8c:	0001                	nop
     e8e:	7c01                	lui	s8,0xfffe0
    if (finder_idx > 0)
     e90:	0d01                	addi	s10,s10,0
     e92:	0002                	c.slli64	zero
    remover = core_list_remove(list->next);
     e94:	0024                	addi	s1,sp,8
     e96:	0000                	unimp
    if (info->idx >= 0)
     e98:	0e84                	addi	s1,sp,848
     e9a:	0000                	unimp
    list_head *ret = item->next;
     e9c:	7f90                	flw	fa2,56(a5)
     e9e:	0000                	unimp
    tmp        = item->info;
     ea0:	0090                	addi	a2,sp,64
     ea2:	0000                	unimp
    item->info = ret->info;
     ea4:	0e44                	addi	s1,sp,788
     ea6:	0180                	addi	s0,sp,192
    item->next = item->next->next;
     ea8:	8944                	0x8944
     eaa:	02885003          	lhu	zero,40(a6)
    item->info = ret->info;
     eae:	0181                	addi	gp,gp,0
    ret->info  = tmp;
     eb0:	6402                	flw	fs0,0(sp)
     eb2:	44c1                	li	s1,16
    item->next = item->next->next;
     eb4:	44c8                	lw	a0,12(s1)
     eb6:	48c9                	li	a7,18
    if (info->idx >= 0)
     eb8:	000e                	c.slli	zero,0x3
     eba:	0000                	unimp
    ret->next  = NULL;
     ebc:	0028                	addi	a0,sp,8
     ebe:	0000                	unimp
    if (info->idx >= 0)
     ec0:	0e84                	addi	s1,sp,848
     ec2:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     ec4:	8020                	0x8020
     ec6:	0000                	unimp
     ec8:	00fc                	addi	a5,sp,76
     eca:	0000                	unimp
     ecc:	0e48                	addi	a0,sp,788
     ece:	5020                	lw	s0,96(s0)
     ed0:	0288                	addi	a0,sp,320
     ed2:	0181                	addi	gp,gp,0
            list = list->next;
     ed4:	0389                	addi	t2,t2,2
     ed6:	0492                	slli	s1,s1,0x4
        while (list && (list->info->idx != info->idx))
     ed8:	0a64                	addi	s1,sp,284
     eda:	44c1                	li	s1,16
        finder = list->next;
     edc:	44c8                	lw	a0,12(s1)
     ede:	44c9                	li	s1,18
    while (finder)
     ee0:	44d2                	lw	s1,20(sp)
     ee2:	000e                	c.slli	zero,0x3
        retval = crc16(list->info->data16, retval);
     ee4:	0b44                	addi	s1,sp,404
     ee6:	0000                	unimp
     ee8:	000c                	0xc
     eea:	0000                	unimp
     eec:	ffff                	0xffff
     eee:	ffff                	0xffff
     ef0:	0001                	nop
     ef2:	7c01                	lui	s8,0xfffe0
     ef4:	0d01                	addi	s10,s10,0
     ef6:	0002                	c.slli64	zero
        finder = finder->next;
     ef8:	000c                	0xc
     efa:	0000                	unimp
        retval = crc16(list->info->data16, retval);
     efc:	0ee8                	addi	a0,sp,860
     efe:	0000                	unimp
    while (finder)
     f00:	811c                	0x811c
     f02:	0000                	unimp
     f04:	0018                	0x18
     f06:	0000                	unimp
     f08:	000c                	0xc
     f0a:	0000                	unimp
    item_removed->info  = item_modified->info;
     f0c:	0ee8                	addi	a0,sp,860
	...
    insize = 1;
     f16:	0000                	unimp
    item_removed->info  = item_modified->info;
     f18:	000c                	0xc
     f1a:	0000                	unimp
    item_modified->info = tmp;
     f1c:	ffff                	0xffff
     f1e:	ffff                	0xffff
    item_removed->next  = item_modified->next;
     f20:	0001                	nop
     f22:	7c01                	lui	s8,0xfffe0
    item_modified->next = item_removed;
     f24:	0d01                	addi	s10,s10,0
     f26:	0002                	c.slli64	zero
        tail = NULL;
     f28:	000c                	0xc
     f2a:	0000                	unimp
        list = NULL;
     f2c:	0f18                	addi	a4,sp,912
     f2e:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
     f30:	8134                	0x8134
     f32:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f34:	0024                	addi	s1,sp,8
     f36:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
     f38:	000c                	0xc
     f3a:	0000                	unimp
     f3c:	ffff                	0xffff
     f3e:	ffff                	0xffff
            psize = 0;
     f40:	0001                	nop
     f42:	7c01                	lui	s8,0xfffe0
                q = q->next;
     f44:	0d01                	addi	s10,s10,0
     f46:	0002                	c.slli64	zero
                psize++;
     f48:	000c                	0xc
     f4a:	0000                	unimp
                if (!q)
     f4c:	0f38                	addi	a4,sp,920
     f4e:	0000                	unimp
            for (i = 0; i < insize; i++)
     f50:	8158                	0x8158
     f52:	0000                	unimp
     f54:	00d8                	addi	a4,sp,68
     f56:	0000                	unimp
                    list = e;
     f58:	000c                	0xc
     f5a:	0000                	unimp
     f5c:	ffff                	0xffff
     f5e:	ffff                	0xffff
     f60:	0001                	nop
     f62:	7c01                	lui	s8,0xfffe0
            while (psize > 0 || (qsize > 0 && q))
     f64:	0d01                	addi	s10,s10,0
     f66:	0002                	c.slli64	zero
                else if (qsize == 0 || !q)
     f68:	0028                	addi	a0,sp,8
     f6a:	0000                	unimp
     f6c:	0f58                	addi	a4,sp,916
     f6e:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
     f70:	8230                	0x8230
     f72:	0000                	unimp
     f74:	00ec                	addi	a1,sp,76
     f76:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f78:	0e48                	addi	a0,sp,788
     f7a:	5010                	lw	a2,32(s0)
    return a->idx - b->idx;
     f7c:	0288                	addi	a0,sp,320
     f7e:	0492                	slli	s1,s1,0x4
     f80:	0181                	addi	gp,gp,0
     f82:	0389                	addi	t2,t2,2
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     f84:	ac02                	fsd	ft0,24(sp)
     f86:	c10a                	sw	sp,128(sp)
     f88:	c844                	sw	s1,20(s0)
     f8a:	c944                	sw	s1,20(a0)
     f8c:	d244                	sw	s1,36(a2)
     f8e:	0e44                	addi	s1,sp,788
     f90:	4400                	lw	s0,8(s0)
     f92:	001c000b          	0x1c000b
     f96:	0000                	unimp
     f98:	0f58                	addi	a4,sp,916
     f9a:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     f9c:	831c                	0x831c
     f9e:	0000                	unimp
    return a->idx - b->idx;
     fa0:	0074                	addi	a3,sp,12
     fa2:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     fa4:	0e48                	addi	a0,sp,788
     fa6:	4820                	lw	s0,80(s0)
     fa8:	0288                	addi	a0,sp,320
     faa:	0181                	addi	gp,gp,0
     fac:	5802                	lw	a6,32(sp)
     fae:	44c1                	li	s1,16
     fb0:	44c8                	lw	a0,12(s1)
     fb2:	000e                	c.slli	zero,0x3
     fb4:	0044                	addi	s1,sp,4
     fb6:	0000                	unimp
     fb8:	0f58                	addi	a4,sp,916
     fba:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
     fbc:	8390                	0x8390
     fbe:	0000                	unimp
                    qsize--;
     fc0:	0148                	addi	a0,sp,132
     fc2:	0000                	unimp
                    q = q->next;
     fc4:	0e44                	addi	s1,sp,788
     fc6:	4430                	lw	a2,72(s0)
                    qsize--;
     fc8:	0389                	addi	t2,t2,2
     fca:	9548                	0x9548
                if (tail)
     fcc:	02886807          	0x2886807
                    tail->next = e;
     fd0:	0492                	slli	s1,s1,0x4
     fd2:	08960593          	addi	a1,a2,137 # 1d089 <_data_lma+0x11f11>
                    list = e;
     fd6:	0a980997          	auipc	s3,0xa980
            while (psize > 0 || (qsize > 0 && q))
     fda:	0181                	addi	gp,gp,0
     fdc:	0694                	addi	a3,sp,832
     fde:	0b99                	addi	s7,s7,6
     fe0:	e002                	fsw	ft0,0(sp)
     fe2:	44c1                	li	s1,16
                    qsize--;
     fe4:	44c8                	lw	a0,12(s1)
     fe6:	44c9                	li	s1,18
     fe8:	44d2                	lw	s1,20(sp)
     fea:	44d444d3          	0x44d444d3
                    q = q->next;
     fee:	44d5                	li	s1,21
                if (tail)
     ff0:	44d6                	lw	s1,84(sp)
     ff2:	44d844d7          	0x44d844d7
                    list = e;
     ff6:	44d9                	li	s1,22
     ff8:	000e                	c.slli	zero,0x3
     ffa:	0000                	unimp
     ffc:	0034                	addi	a3,sp,8
     ffe:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1000:	0f58                	addi	a4,sp,916
	...
    100a:	0000                	unimp
    100c:	0e44                	addi	s1,sp,788
    100e:	4820                	lw	s0,80(s0)
            list = list->next;
    1010:	0288                	addi	a0,sp,320
    1012:	89640593          	addi	a1,s0,-1898
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1016:	94049203          	lh	tp,-1728(s1)
        finder = list->next;
    101a:	8106                	mv	sp,ra
    while (finder)
    101c:	9501                	srai	a0,a0,0x20
    101e:	0a000207          	0xa000207
    1022:	44c1                	li	s1,16
                    psize--;
    1024:	44c8                	lw	a0,12(s1)
    1026:	44c9                	li	s1,18
    1028:	44d2                	lw	s1,20(sp)
    102a:	44d444d3          	0x44d444d3
                    p = p->next;
    102e:	44d5                	li	s1,21
    1030:	000e                	c.slli	zero,0x3
    1032:	0b44                	addi	s1,sp,404
        while (p)
    1034:	000c                	0xc
    1036:	0000                	unimp
        tail->next = NULL;
    1038:	0f58                	addi	a4,sp,916
    103a:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    103c:	84d8                	0x84d8
    103e:	0000                	unimp
        insize *= 2;
    1040:	0070                	addi	a2,sp,12
    1042:	0000                	unimp
        while (p)
    1044:	000c                	0xc
    1046:	0000                	unimp
    1048:	0f58                	addi	a4,sp,916
    104a:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    104c:	8548                	0x8548
    104e:	0000                	unimp
        tail = NULL;
    1050:	00b0                	addi	a2,sp,72
    1052:	0000                	unimp
        list = NULL;
    1054:	001c                	0x1c
    1056:	0000                	unimp
    1058:	0f58                	addi	a4,sp,916
    105a:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
    105c:	85f8                	0x85f8
    105e:	0000                	unimp
    1060:	0038                	addi	a4,sp,8
    1062:	0000                	unimp
    1064:	0e44                	addi	s1,sp,788
    1066:	4410                	lw	a2,8(s0)
    1068:	0288                	addi	a0,sp,320
    106a:	814c                	0x814c
    106c:	5001                	c.li	zero,-32
    106e:	44c1                	li	s1,16
    1070:	4cc8                	lw	a0,28(s1)
    1072:	000e                	c.slli	zero,0x3
    1074:	004c                	addi	a1,sp,4
    1076:	0000                	unimp
    1078:	0f58                	addi	a4,sp,916
    107a:	0000                	unimp
    107c:	8630                	0x8630
    107e:	0000                	unimp
    1080:	0258                	addi	a4,sp,260
    1082:	0000                	unimp
            list = list->next;
    1084:	0e4c                	addi	a1,sp,788
    1086:	7450                	flw	fa2,44(s0)
        while (list && ((list->info->data16 & 0xff) != info->data16))
    1088:	0389                	addi	t2,t2,2
    108a:	0694                	addi	a3,sp,832
    108c:	0181                	addi	gp,gp,0
    108e:	0288                	addi	a0,sp,320
            retval += (list->next->info->data16 >> 8) & 1;
    1090:	0492                	slli	s1,s1,0x4
    1092:	07950593          	addi	a1,a0,121
            missed++;
    1096:	0896                	slli	a7,a7,0x5
    1098:	0a980997          	auipc	s3,0xa980
            retval += (list->next->info->data16 >> 8) & 1;
    109c:	0b99                	addi	s7,s7,6
    109e:	0c9a                	slli	s9,s9,0x6
            missed++;
    10a0:	94020d9b          	0x94020d9b
            retval += (list->next->info->data16 >> 8) & 1;
    10a4:	c10a                	sw	sp,128(sp)
    10a6:	c844                	sw	s1,20(s0)
    10a8:	c94c                	sw	a1,20(a0)
    10aa:	d244                	sw	s1,36(a2)
    10ac:	d344                	sw	s1,36(a4)
    10ae:	d444                	sw	s1,44(s0)
    10b0:	d544                	sw	s1,44(a0)
    10b2:	d644                	sw	s1,44(a2)
    10b4:	d744                	sw	s1,44(a4)
    10b6:	d844                	sw	s1,52(s0)
    finder = list->next;
    10b8:	d944                	sw	s1,52(a0)
    10ba:	da44                	sw	s1,52(a2)
    while (finder)
    10bc:	db44                	sw	s1,52(a4)
    10be:	0e44                	addi	s1,sp,788
        retval = crc16(list->info->data16, retval);
    10c0:	4400                	lw	s0,8(s0)
    10c2:	0030000b          	0x30000b
    10c6:	0000                	unimp
    10c8:	0f58                	addi	a4,sp,916
    10ca:	0000                	unimp
    10cc:	8888                	0x8888
    10ce:	0000                	unimp
    10d0:	013c                	addi	a5,sp,136
    10d2:	0000                	unimp
        finder = finder->next;
    10d4:	0e44                	addi	s1,sp,788
    10d6:	5820                	lw	s0,112(s0)
        retval = crc16(list->info->data16, retval);
    10d8:	0389                	addi	t2,t2,2
    10da:	0492                	slli	s1,s1,0x4
    while (finder)
    10dc:	01810593          	addi	a1,sp,24
}
    10e0:	0288                	addi	a0,sp,320
    10e2:	0694                	addi	a3,sp,832
    10e4:	c1010003          	lb	zero,-1008(sp)
    10e8:	c844                	sw	s1,20(s0)
    10ea:	c948                	sw	a0,20(a0)
    10ec:	d244                	sw	s1,36(a2)
    10ee:	d344                	sw	s1,36(a4)
    10f0:	d444                	sw	s1,44(s0)
    10f2:	0e44                	addi	s1,sp,788
    10f4:	0000                	unimp
    10f6:	0000                	unimp
    10f8:	0038                	addi	a4,sp,8
    10fa:	0000                	unimp
    10fc:	0f58                	addi	a4,sp,916
    10fe:	0000                	unimp
    1100:	89c4                	0x89c4
    1102:	0000                	unimp
    1104:	0144                	addi	s1,sp,132
    1106:	0000                	unimp
    1108:	0e44                	addi	s1,sp,788
    110a:	4430                	lw	a2,72(s0)
    110c:	0389                	addi	t2,t2,2
    110e:	9348                	0x9348
    1110:	4c05                	li	s8,1
    1112:	0288                	addi	a0,sp,320
    1114:	925c                	0x925c
    1116:	9504                	0x9504
    1118:	94018107          	0x94018107
    info.idx = finder_idx;
    111c:	0206                	slli	tp,tp,0x1
    111e:	0ab8                	addi	a4,sp,344
    1120:	44c1                	li	s1,16
    1122:	48c8                	lw	a0,20(s1)
    if (finder_idx > 0)
    1124:	44c9                	li	s1,18
    1126:	44d2                	lw	s1,20(sp)
        while (p)
    1128:	44d444d3          	0x44d444d3
    112c:	44d5                	li	s1,21
    112e:	000e                	c.slli	zero,0x3
    1130:	0b44                	addi	s1,sp,404
    1132:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1134:	000c                	0xc
    1136:	0000                	unimp
    1138:	0f58                	addi	a4,sp,916
    113a:	0000                	unimp
        while (p)
    113c:	8b08                	0x8b08
    113e:	0000                	unimp
        tail = NULL;
    1140:	0054                	addi	a3,sp,4
    1142:	0000                	unimp
        list = NULL;
    1144:	002c                	addi	a1,sp,8
    1146:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1148:	0f58                	addi	a4,sp,916
    114a:	0000                	unimp
    114c:	8b5c                	0x8b5c
    114e:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
    1150:	017c                	addi	a5,sp,140
    1152:	0000                	unimp
    1154:	0e44                	addi	s1,sp,788
    1156:	4420                	lw	s0,72(s0)
            psize = 0;
    1158:	0389                	addi	t2,t2,2
    115a:	934c                	0x934c
            nmerges++; /* there exists a merge to be done */
    115c:	5405                	li	s0,-31
    115e:	0288                	addi	a0,sp,320
    1160:	0181                	addi	gp,gp,0
    1162:	0492                	slli	s1,s1,0x4
                q = q->next;
    1164:	0a70                	addi	a2,sp,284
    1166:	44c1                	li	s1,16
                psize++;
    1168:	44c8                	lw	a0,12(s1)
    116a:	44c9                	li	s1,18
                if (!q)
    116c:	44d2                	lw	s1,20(sp)
    116e:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
            for (i = 0; i < insize; i++)
    1172:	0b44                	addi	s1,sp,404
    1174:	000c                	0xc
    1176:	0000                	unimp
                    list = e;
    1178:	0f58                	addi	a4,sp,916
	...
                else if (qsize == 0 || !q)
    1182:	0000                	unimp
    1184:	0030                	addi	a2,sp,8
    1186:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1188:	0f58                	addi	a4,sp,916
	...
    ee_s16 data = *pdata;
    1192:	0000                	unimp
    if (optype) /* if cached, use cache */
    1194:	0e44                	addi	s1,sp,788
    1196:	4430                	lw	a2,72(s0)
        return (data & 0x007f);
    1198:	0389                	addi	t2,t2,2
    119a:	9348                	0x9348
    if (optype) /* if cached, use cache */
    119c:	5005                	c.li	zero,-31
    119e:	0288                	addi	a0,sp,320
               & 0xf);       /* bits 3-6 is specific data for the operation */
    11a0:	9254                	0x9254
    11a2:	8104                	0x8104
        ee_s16 dtype
    11a4:	0201                	addi	tp,tp,0
    11a6:	0a00                	addi	s0,sp,272
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11a8:	44c1                	li	s1,16
    11aa:	44c8                	lw	a0,12(s1)
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    11ac:	44c9                	li	s1,18
    11ae:	44d2                	lw	s1,20(sp)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11b0:	000e4cd3          	fadd.s	fs9,ft8,ft0,rmm
        switch (flag)
    11b4:	0b44                	addi	s1,sp,404
    11b6:	0000                	unimp
    11b8:	0034                	addi	a3,sp,8
    11ba:	0000                	unimp
    11bc:	0f58                	addi	a4,sp,916
    11be:	0000                	unimp
    11c0:	8cd8                	0x8cd8
    11c2:	0000                	unimp
    11c4:	014c                	addi	a1,sp,132
    11c6:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    11c8:	0e44                	addi	s1,sp,788
    11ca:	4430                	lw	a2,72(s0)
        res->crc = crcu16(retval, res->crc);
    11cc:	0288                	addi	a0,sp,320
    11ce:	8950                	0x8950
    11d0:	54049203          	lh	tp,1344(s1)
    11d4:	06940593          	addi	a1,s0,105
        retval &= 0x007f;
    11d8:	0181                	addi	gp,gp,0
    11da:	9c02                	jalr	s8
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11dc:	c10a                	sw	sp,128(sp)
    11de:	c844                	sw	s1,20(s0)
    11e0:	c948                	sw	a0,20(a0)
    11e2:	d244                	sw	s1,36(a2)
        res->crc = crcu16(retval, res->crc);
    11e4:	d344                	sw	s1,36(a4)
    11e6:	d444                	sw	s1,44(s0)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    11e8:	0e44                	addi	s1,sp,788
    11ea:	4400                	lw	s0,8(s0)
    11ec:	0000000b          	0xb
    ee_s16 data = *pdata;
    11f0:	0030                	addi	a2,sp,8
    11f2:	0000                	unimp
    if (optype) /* if cached, use cache */
    11f4:	0f58                	addi	a4,sp,916
	...
    11fe:	0000                	unimp
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1200:	0e44                	addi	s1,sp,788
    1202:	4430                	lw	a2,72(s0)
        ee_s16 dtype
    1204:	0492                	slli	s1,s1,0x4
    1206:	815c                	0x815c
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1208:	8801                	andi	s0,s0,0
    120a:	8902                	jr	s2
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    120c:	94059303          	lh	t1,-1728(a1)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1210:	0206                	slli	tp,tp,0x1
    1212:	0a00                	addi	s0,sp,272
        switch (flag)
    1214:	44c1                	li	s1,16
    1216:	44c8                	lw	a0,12(s1)
    1218:	44c9                	li	s1,18
    121a:	44d2                	lw	s1,20(sp)
    121c:	44d444d3          	0x44d444d3
    1220:	000e                	c.slli	zero,0x3
    1222:	0b44                	addi	s1,sp,404
    1224:	0028                	addi	a0,sp,8
    1226:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1228:	0f58                	addi	a4,sp,916
	...
        res->crc = crcu16(retval, res->crc);
    1232:	0000                	unimp
    1234:	0e44                	addi	s1,sp,788
    1236:	5010                	lw	a2,32(s0)
        retval &= 0x007f;
    1238:	0288                	addi	a0,sp,320
    123a:	0181                	addi	gp,gp,0
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    123c:	0392                	slli	t2,t2,0x4
    123e:	0a400493          	li	s1,164
    1242:	44c1                	li	s1,16
        res->crc = crcu16(retval, res->crc);
    1244:	44c8                	lw	a0,12(s1)
    1246:	44d2                	lw	s1,20(sp)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1248:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
    124c:	0b44                	addi	s1,sp,404
    124e:	0000                	unimp
    return val1 - val2;
    1250:	000c                	0xc
    1252:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1254:	0f58                	addi	a4,sp,916
	...
                    q = q->next;
    125e:	0000                	unimp
                    qsize--;
    1260:	000c                	0xc
    1262:	0000                	unimp
                if (tail)
    1264:	0f58                	addi	a4,sp,916
	...
                    list = e;
    126e:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    1270:	000c                	0xc
    1272:	0000                	unimp
    1274:	ffff                	0xffff
    1276:	ffff                	0xffff
    1278:	0001                	nop
    127a:	7c01                	lui	s8,0xfffe0
                    qsize--;
    127c:	0d01                	addi	s10,s10,0
    127e:	0002                	c.slli64	zero
    1280:	001c                	0x1c
    1282:	0000                	unimp
                    q = q->next;
    1284:	1270                	addi	a2,sp,300
    1286:	0000                	unimp
                if (tail)
    1288:	8e24                	0x8e24
    128a:	0000                	unimp
                    list = e;
    128c:	0060                	addi	s0,sp,12
    128e:	0000                	unimp
    1290:	0e44                	addi	s1,sp,788
    1292:	4420                	lw	s0,72(s0)
    1294:	0288                	addi	a0,sp,320
    1296:	8150                	0x8150
                    psize--;
    1298:	7c01                	lui	s8,0xfffe0
    129a:	44c1                	li	s1,16
    129c:	44c8                	lw	a0,12(s1)
    129e:	000e                	c.slli	zero,0x3
                    p = p->next;
    12a0:	000c                	0xc
    12a2:	0000                	unimp
    12a4:	ffff                	0xffff
    12a6:	ffff                	0xffff
    12a8:	0001                	nop
    12aa:	7c01                	lui	s8,0xfffe0
        while (p)
    12ac:	0d01                	addi	s10,s10,0
    12ae:	0002                	c.slli64	zero
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b0:	002c                	addi	a1,sp,8
    12b2:	0000                	unimp
        tail->next = NULL;
    12b4:	12a0                	addi	s0,sp,360
    12b6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    12b8:	8e84                	0x8e84
    12ba:	0000                	unimp
    12bc:	0114                	addi	a3,sp,128
    12be:	0000                	unimp
        insize *= 2;
    12c0:	0e4c                	addi	a1,sp,788
    12c2:	4c10                	lw	a2,24(s0)
    12c4:	0288                	addi	a0,sp,320
    12c6:	0181                	addi	gp,gp,0
    12c8:	0389                	addi	t2,t2,2
    12ca:	0a78                	addi	a4,sp,284
        while (p)
    12cc:	44c8                	lw	a0,12(s1)
    12ce:	48c1                	li	a7,16
        tail->next = NULL;
    12d0:	44c9                	li	s1,18
    12d2:	000e                	c.slli	zero,0x3
    12d4:	0b48                	addi	a0,sp,404
    12d6:	a802                	fsd	ft0,16(sp)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12d8:	000e                	c.slli	zero,0x3
    12da:	c8c1                	beqz	s1,136a <__stack_size+0x36a>
    12dc:	00c9                	addi	ra,ra,18
    12de:	0000                	unimp
    12e0:	000c                	0xc
    12e2:	0000                	unimp
    12e4:	ffff                	0xffff
    12e6:	ffff                	0xffff
                if (res->crcmatrix == 0)
    12e8:	0001                	nop
    12ea:	7c01                	lui	s8,0xfffe0
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    12ec:	0d01                	addi	s10,s10,0
    12ee:	0002                	c.slli64	zero
    12f0:	002c                	addi	a1,sp,8
    12f2:	0000                	unimp
                if (res->crcmatrix == 0)
    12f4:	12e0                	addi	s0,sp,364
    12f6:	0000                	unimp
                    res->crcmatrix = retval;
    12f8:	8f98                	0x8f98
    12fa:	0000                	unimp
    12fc:	0174                	addi	a3,sp,140
    12fe:	0000                	unimp
    1300:	0e44                	addi	s1,sp,788
    1302:	4420                	lw	s0,72(s0)
                retval = core_bench_state(res->size,
    1304:	0389                	addi	t2,t2,2
    1306:	8158                	0x8158
    1308:	8801                	andi	s0,s0,0
    130a:	9202                	jalr	tp
    130c:	9304                	0x9304
    130e:	0205                	addi	tp,tp,1
    1310:	0aa0                	addi	s0,sp,344
    1312:	44c1                	li	s1,16
    1314:	44c8                	lw	a0,12(s1)
    1316:	44c9                	li	s1,18
    1318:	44d2                	lw	s1,20(sp)
    131a:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
    131e:	0b44                	addi	s1,sp,404
    1320:	000c                	0xc
    1322:	0000                	unimp
    1324:	ffff                	0xffff
    1326:	ffff                	0xffff
    1328:	0001                	nop
    132a:	7c01                	lui	s8,0xfffe0
    132c:	0d01                	addi	s10,s10,0
    132e:	0002                	c.slli64	zero
                if (res->crcstate == 0)
    1330:	000c                	0xc
    1332:	0000                	unimp
                retval = core_bench_state(res->size,
    1334:	1320                	addi	s0,sp,424
    1336:	0000                	unimp
    1338:	910c                	0x910c
    133a:	0000                	unimp
                if (res->crcstate == 0)
    133c:	0040                	addi	s0,sp,4
    133e:	0000                	unimp
                    res->crcstate = retval;
    1340:	002c                	addi	a1,sp,8
    1342:	0000                	unimp
    1344:	1320                	addi	s0,sp,424
    1346:	0000                	unimp
    1348:	914c                	0x914c
    134a:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    134c:	0078                	addi	a4,sp,12
    134e:	0000                	unimp
    1350:	0e44                	addi	s1,sp,788
    1352:	5820                	lw	s0,112(s0)
    1354:	0288                	addi	a0,sp,320
    1356:	0389                	addi	t2,t2,2
    1358:	0492                	slli	s1,s1,0x4
    135a:	06940593          	addi	a1,s0,105
                if (res->crcmatrix == 0)
    135e:	0181                	addi	gp,gp,0
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1360:	4002                	0x4002
    1362:	44c1                	li	s1,16
    1364:	44c8                	lw	a0,12(s1)
    1366:	44c9                	li	s1,18
                if (res->crcmatrix == 0)
    1368:	44d2                	lw	s1,20(sp)
    136a:	44d444d3          	0x44d444d3
                    res->crcmatrix = retval;
    136e:	000e                	c.slli	zero,0x3
    1370:	0020                	addi	s0,sp,8
    1372:	0000                	unimp
    1374:	1320                	addi	s0,sp,424
	...
                retval = core_bench_state(res->size,
    137e:	0000                	unimp
    1380:	0e48                	addi	a0,sp,788
    1382:	4810                	lw	a2,16(s0)
    1384:	0288                	addi	a0,sp,320
    1386:	0181                	addi	gp,gp,0
    1388:	0a40                	addi	s0,sp,276
    138a:	44c1                	li	s1,16
    138c:	44c8                	lw	a0,12(s1)
    138e:	000e                	c.slli	zero,0x3
    1390:	0b44                	addi	s1,sp,404
    1392:	0000                	unimp
    1394:	0048                	addi	a0,sp,4
    1396:	0000                	unimp
    1398:	1320                	addi	s0,sp,424
    139a:	0000                	unimp
    139c:	91c4                	0x91c4
    139e:	0000                	unimp
    13a0:	03f0                	addi	a2,sp,460
    13a2:	0000                	unimp
                if (res->crcstate == 0)
    13a4:	0e44                	addi	s1,sp,788
    13a6:	01a0                	addi	s0,sp,200
                retval = core_bench_state(res->size,
    13a8:	886c                	0x886c
    13aa:	8902                	jr	s2
    13ac:	93049203          	lh	tp,-1744(s1)
                if (res->crcstate == 0)
    13b0:	8105                	srli	a0,a0,0x1
    13b2:	9401                	srai	s0,s0,0x20
                    res->crcstate = retval;
    13b4:	9506                	add	a0,a0,ra
    13b6:	97089607          	0x97089607
    13ba:	9809                	andi	s0,s0,-30
    13bc:	990a                	add	s2,s2,sp
    13be:	019c030b          	0x19c030b
    13c2:	c10a                	sw	sp,128(sp)
    13c4:	c844                	sw	s1,20(s0)
    13c6:	c944                	sw	s1,20(a0)
            retval += (list->next->info->data16 >> 8) & 1;
    13c8:	d244                	sw	s1,36(a2)
    13ca:	d344                	sw	s1,36(a4)
    13cc:	d444                	sw	s1,44(s0)
    13ce:	d544                	sw	s1,44(a0)
{
    13d0:	d644                	sw	s1,44(a2)
    13d2:	d744                	sw	s1,44(a4)
    13d4:	d844                	sw	s1,52(s0)
    13d6:	d944                	sw	s1,52(a0)
    13d8:	0e44                	addi	s1,sp,788
    13da:	4400                	lw	s0,8(s0)
    printf("start test41\n");
    13dc:	0000000b          	0xb
    13e0:	000c                	0xc
    13e2:	0000                	unimp
{
    13e4:	1320                	addi	s0,sp,424
	...
    13ee:	0000                	unimp
    13f0:	000c                	0xc
    13f2:	0000                	unimp
    13f4:	ffff                	0xffff
    13f6:	ffff                	0xffff
    printf("start test41\n");
    13f8:	0001                	nop
    13fa:	7c01                	lui	s8,0xfffe0
    13fc:	0d01                	addi	s10,s10,0
    13fe:	0002                	c.slli64	zero
    ee_u32 size     = (blksize / per_item)
    1400:	0028                	addi	a0,sp,8
    1402:	0000                	unimp
    1404:	13f0                	addi	a2,sp,492
    1406:	0000                	unimp
    1408:	95b4                	0x95b4
    140a:	0000                	unimp
    140c:	00cc                	addi	a1,sp,68
    140e:	0000                	unimp
    1410:	0e44                	addi	s1,sp,788
    1412:	4820                	lw	s0,80(s0)
    list_head *memblock_end  = memblock + size;
    1414:	0288                	addi	a0,sp,320
    1416:	0181                	addi	gp,gp,0
    1418:	6402                	flw	fs0,0(sp)
    141a:	c80a                	sw	sp,16(sp)
    list->info->data16 = (ee_s16)0x8080;
    141c:	c144                	sw	s1,4(a0)
    141e:	0e44                	addi	s1,sp,788
    list->next         = NULL;
    1420:	4800                	lw	s0,16(s0)
    1422:	c140020b          	0xc140020b
    list->info         = datablock;
    1426:	c844                	sw	s1,20(s0)
    list->info->data16 = (ee_s16)0x8080;
    1428:	0e44                	addi	s1,sp,788
    142a:	0000                	unimp
    list_data *datablock_end = datablock + size;
    142c:	000c                	0xc
    142e:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1430:	13f0                	addi	a2,sp,492
	...
    if ((*memblock + 1) >= memblock_end)
    143a:	0000                	unimp
    list_data *datablock_end = datablock + size;
    143c:	000c                	0xc
    143e:	0000                	unimp
    memblock++;
    1440:	ffff                	0xffff
    1442:	ffff                	0xffff
    datablock++;
    1444:	0001                	nop
    1446:	7c01                	lui	s8,0xfffe0
    if ((*memblock + 1) >= memblock_end)
    1448:	0d01                	addi	s10,s10,0
    144a:	0002                	c.slli64	zero
    if ((*datablock + 1) >= datablock_end)
    144c:	001c                	0x1c
    144e:	0000                	unimp
    1450:	143c                	addi	a5,sp,552
    1452:	0000                	unimp
    newitem->info = *datablock;
    1454:	9680                	0x9680
    1456:	0000                	unimp
    newitem->next      = insert_point->next;
    1458:	0050                	addi	a2,sp,4
    145a:	0000                	unimp
    insert_point->next = newitem;
    145c:	0e44                	addi	s1,sp,788
    145e:	4410                	lw	a2,8(s0)
    to->idx    = from->idx;
    1460:	0288                	addi	a0,sp,320
    1462:	8154                	0x8154
    to->data16 = from->data16;
    1464:	6801                	0x6801
    1466:	44c1                	li	s1,16
    1468:	44c8                	lw	a0,12(s1)
    146a:	000e                	c.slli	zero,0x3
    to->idx    = from->idx;
    146c:	000c                	0xc
    146e:	0000                	unimp
    for (i = 0; i < size; i++)
    1470:	ffff                	0xffff
    1472:	ffff                	0xffff
    1474:	0001                	nop
    1476:	7c01                	lui	s8,0xfffe0
    to->idx    = from->idx;
    1478:	0d01                	addi	s10,s10,0
    147a:	0002                	c.slli64	zero
    147c:	0020                	addi	s0,sp,8
    147e:	0000                	unimp
    for (i = 0; i < size; i++)
    1480:	146c                	addi	a1,sp,556
    1482:	0000                	unimp
    to->idx    = from->idx;
    1484:	96d0                	0x96d0
    1486:	0000                	unimp
    if ((*memblock + 1) >= memblock_end)
    1488:	0054                	addi	a3,sp,4
    148a:	0000                	unimp
    148c:	0e44                	addi	s1,sp,788
    148e:	4410                	lw	a2,8(s0)
    if ((*datablock + 1) >= datablock_end)
    1490:	0288                	addi	a0,sp,320
    1492:	814c                	0x814c
    1494:	5c01                	li	s8,-32
    1496:	c10a                	sw	sp,128(sp)
    1498:	c844                	sw	s1,20(s0)
    149a:	0e44                	addi	s1,sp,788
    149c:	4400                	lw	s0,8(s0)
    149e:	000c000b          	0xc000b
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    14a2:	0000                	unimp
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    14a4:	146c                	addi	a1,sp,556
	...
    14ae:	0000                	unimp
    newitem->next      = insert_point->next;
    14b0:	0028                	addi	a0,sp,8
    14b2:	0000                	unimp
        ee_u16 dat
    14b4:	146c                	addi	a1,sp,556
    14b6:	0000                	unimp
    insert_point->next = newitem;
    14b8:	9724                	0x9724
    14ba:	0000                	unimp
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14bc:	008c                	addi	a1,sp,64
    14be:	0000                	unimp
    newitem->info = *datablock;
    14c0:	0e48                	addi	a0,sp,788
    14c2:	5420                	lw	s0,104(s0)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    14c4:	0288                	addi	a0,sp,320
    14c6:	0389                	addi	t2,t2,2
    to->data16 = from->data16;
    14c8:	0492                	slli	s1,s1,0x4
    14ca:	01810593          	addi	a1,sp,24
    to->idx    = from->idx;
    14ce:	4802                	lw	a6,0(sp)
    14d0:	44c8                	lw	a0,12(s1)
    14d2:	4cc1                	li	s9,16
    14d4:	48d244d3          	0x48d244d3
    14d8:	44c9                	li	s1,18
    14da:	000e                	c.slli	zero,0x3
    for (i = 0; i < size; i++)
    14dc:	0020                	addi	s0,sp,8
    14de:	0000                	unimp
    14e0:	146c                	addi	a1,sp,556
    14e2:	0000                	unimp
    while (finder->next != NULL)
    14e4:	97b0                	0x97b0
    14e6:	0000                	unimp
    14e8:	005c                	addi	a5,sp,4
    14ea:	0000                	unimp
        if (i < size / 5) /* first 20% of the list in order */
    14ec:	0e44                	addi	s1,sp,788
    14ee:	4410                	lw	a2,8(s0)
    14f0:	0288                	addi	a0,sp,320
    14f2:	814c                	0x814c
    14f4:	6801                	0x6801
    14f6:	c10a                	sw	sp,128(sp)
                                & (((i & 0x07) << 8)
    14f8:	c844                	sw	s1,20(s0)
    14fa:	0e44                	addi	s1,sp,788
        if (i < size / 5) /* first 20% of the list in order */
    14fc:	4400                	lw	s0,8(s0)
    14fe:	000c000b          	0xc000b
                                & (((i & 0x07) << 8)
    1502:	0000                	unimp
        if (i < size / 5) /* first 20% of the list in order */
    1504:	146c                	addi	a1,sp,556
    1506:	0000                	unimp
    1508:	980c                	0x980c
    150a:	0000                	unimp
        finder = finder->next;
    150c:	000c                	0xc
    150e:	0000                	unimp
            finder->info->idx = i++;
    1510:	000c                	0xc
    1512:	0000                	unimp
        finder = finder->next;
    1514:	ffff                	0xffff
    1516:	ffff                	0xffff
    while (finder->next != NULL)
    1518:	0001                	nop
    151a:	7c01                	lui	s8,0xfffe0
    151c:	0d01                	addi	s10,s10,0
    151e:	0002                	c.slli64	zero
    insize = 1;
    1520:	001c                	0x1c
    1522:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1524:	1510                	addi	a2,sp,672
    1526:	0000                	unimp
    insize = 1;
    1528:	9818                	0x9818
    152a:	0000                	unimp
        tail = NULL;
    152c:	0058                	addi	a4,sp,4
    152e:	0000                	unimp
        list = NULL;
    1530:	0e44                	addi	s1,sp,788
    1532:	4410                	lw	a2,8(s0)
        nmerges = 0; /* count number of merges we do in this pass */
    1534:	0288                	addi	a0,sp,320
    1536:	815c                	0x815c
            nmerges++; /* there exists a merge to be done */
    1538:	6801                	0x6801
    153a:	44c1                	li	s1,16
    153c:	44c8                	lw	a0,12(s1)
    153e:	000e                	c.slli	zero,0x3
            psize = 0;
    1540:	000c                	0xc
    1542:	0000                	unimp
                q = q->next;
    1544:	ffff                	0xffff
    1546:	ffff                	0xffff
                psize++;
    1548:	0001                	nop
    154a:	7c01                	lui	s8,0xfffe0
                if (!q)
    154c:	0d01                	addi	s10,s10,0
    154e:	0002                	c.slli64	zero
            for (i = 0; i < insize; i++)
    1550:	001c                	0x1c
    1552:	0000                	unimp
                    list = e;
    1554:	1540                	addi	s0,sp,676
    1556:	0000                	unimp
    1558:	9870                	0x9870
    155a:	0000                	unimp
    155c:	0050                	addi	a2,sp,4
    155e:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    1560:	0e44                	addi	s1,sp,788
    1562:	4410                	lw	a2,8(s0)
                else if (qsize == 0 || !q)
    1564:	0288                	addi	a0,sp,320
    1566:	8154                	0x8154
    1568:	6801                	0x6801
    156a:	44c1                	li	s1,16
                else if (cmp(p->info, q->info, res) <= 0)
    156c:	44c8                	lw	a0,12(s1)
    156e:	000e                	c.slli	zero,0x3
    1570:	000c                	0xc
    1572:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1574:	ffff                	0xffff
    1576:	ffff                	0xffff
    return a->idx - b->idx;
    1578:	0001                	nop
    157a:	7c01                	lui	s8,0xfffe0
    157c:	0d01                	addi	s10,s10,0
    157e:	0002                	c.slli64	zero
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1580:	001c                	0x1c
    1582:	0000                	unimp
    1584:	1570                	addi	a2,sp,684
    1586:	0000                	unimp
    1588:	98c0                	0x98c0
    158a:	0000                	unimp
    158c:	0054                	addi	a3,sp,4
    158e:	0000                	unimp
    1590:	0e44                	addi	s1,sp,788
    1592:	4410                	lw	a2,8(s0)
    1594:	0288                	addi	a0,sp,320
    1596:	8158                	0x8158
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1598:	6801                	0x6801
    159a:	44c1                	li	s1,16
    return a->idx - b->idx;
    159c:	44c8                	lw	a0,12(s1)
    159e:	000e                	c.slli	zero,0x3
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    15a0:	000c                	0xc
    15a2:	0000                	unimp
    15a4:	ffff                	0xffff
    15a6:	ffff                	0xffff
    15a8:	0001                	nop
    15aa:	7c01                	lui	s8,0xfffe0
    15ac:	0d01                	addi	s10,s10,0
    15ae:	0002                	c.slli64	zero
    15b0:	001c                	0x1c
    15b2:	0000                	unimp
    15b4:	15a0                	addi	s0,sp,744
    15b6:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    15b8:	9914                	0x9914
    15ba:	0000                	unimp
                    qsize--;
    15bc:	0050                	addi	a2,sp,4
    15be:	0000                	unimp
                    q = q->next;
    15c0:	0e44                	addi	s1,sp,788
    15c2:	4410                	lw	a2,8(s0)
                    qsize--;
    15c4:	0288                	addi	a0,sp,320
    15c6:	8154                	0x8154
                if (tail)
    15c8:	6801                	0x6801
    15ca:	44c1                	li	s1,16
                    tail->next = e;
    15cc:	44c8                	lw	a0,12(s1)
    15ce:	000e                	c.slli	zero,0x3
                    list = e;
    15d0:	000c                	0xc
    15d2:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    15d4:	ffff                	0xffff
    15d6:	ffff                	0xffff
    15d8:	0001                	nop
    15da:	7c01                	lui	s8,0xfffe0
    15dc:	0d01                	addi	s10,s10,0
    15de:	0002                	c.slli64	zero
                    qsize--;
    15e0:	0024                	addi	s1,sp,8
    15e2:	0000                	unimp
    15e4:	15d0                	addi	a2,sp,740
	...
                if (tail)
    15ee:	0000                	unimp
                    list = e;
    15f0:	0e40                	addi	s0,sp,788
    15f2:	8110                	0x8110
    15f4:	8801                	andi	s0,s0,0
    15f6:	4002                	0x4002
    15f8:	44c1                	li	s1,16
    15fa:	44c8                	lw	a0,12(s1)
                    psize--;
    15fc:	000e                	c.slli	zero,0x3
    15fe:	0e48                	addi	a0,sp,788
    1600:	4010                	lw	a2,0(s0)
    1602:	0288                	addi	a0,sp,320
                    p = p->next;
    1604:	0181                	addi	gp,gp,0
    1606:	0000                	unimp
    1608:	000c                	0xc
    160a:	0000                	unimp
        while (p)
    160c:	15d0                	addi	a2,sp,740
	...
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1616:	0000                	unimp
        insize *= 2;
    1618:	000c                	0xc
    161a:	0000                	unimp
        while (p)
    161c:	15d0                	addi	a2,sp,740
	...
        tail->next = NULL;
    1626:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1628:	000c                	0xc
    162a:	0000                	unimp
    162c:	15d0                	addi	a2,sp,740
	...
        finder = finder->next;
    1636:	0000                	unimp
                                & (((i & 0x07) << 8)
    1638:	000c                	0xc
    163a:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    163c:	15d0                	addi	a2,sp,740
	...
                                   | pat); /* make sure the mixed items end up
    1646:	0000                	unimp
    while (finder->next != NULL)
    1648:	000c                	0xc
    164a:	0000                	unimp
                                & (((i & 0x07) << 8)
    164c:	ffff                	0xffff
    164e:	ffff                	0xffff
            finder->info->idx = 0x3fff
    1650:	0001                	nop
    1652:	7c01                	lui	s8,0xfffe0
        finder = finder->next;
    1654:	0d01                	addi	s10,s10,0
    1656:	0002                	c.slli64	zero
    while (finder->next != NULL)
    1658:	001c                	0x1c
    165a:	0000                	unimp
    165c:	1648                	addi	a0,sp,804
    165e:	0000                	unimp
}
    1660:	9964                	0x9964
    1662:	0000                	unimp
    1664:	0058                	addi	a4,sp,4
    1666:	0000                	unimp
    1668:	0e44                	addi	s1,sp,788
    166a:	4410                	lw	a2,8(s0)
    166c:	0288                	addi	a0,sp,320
    166e:	815c                	0x815c
    1670:	6801                	0x6801
    1672:	44c1                	li	s1,16
    1674:	44c8                	lw	a0,12(s1)
    1676:	000e                	c.slli	zero,0x3
    1678:	000c                	0xc
    167a:	0000                	unimp
    memblock++;
    167c:	ffff                	0xffff
    167e:	ffff                	0xffff
    datablock++;
    1680:	0001                	nop
    1682:	7c01                	lui	s8,0xfffe0
    if ((*datablock + 1) >= datablock_end)
    1684:	0d01                	addi	s10,s10,0
    1686:	0002                	c.slli64	zero
    1688:	000c                	0xc
    168a:	0000                	unimp
{
    168c:	1678                	addi	a4,sp,812
	...
    ee_u32        iterations = res->iterations;
    1696:	0000                	unimp
{
    1698:	0014                	0x14
    169a:	0000                	unimp
    169c:	1678                	addi	a4,sp,812
    169e:	0000                	unimp
    16a0:	99bc                	0x99bc
    16a2:	0000                	unimp
    res->crc                 = 0;
    16a4:	005c                	addi	a5,sp,4
    16a6:	0000                	unimp
    16a8:	0e48                	addi	a0,sp,788
    16aa:	6810                	flw	fa2,16(s0)
{
    16ac:	000e                	c.slli	zero,0x3
    16ae:	0000                	unimp
    for (i = 0; i < iterations; i++)
    16b0:	000c                	0xc
    16b2:	0000                	unimp
    16b4:	ffff                	0xffff
    16b6:	ffff                	0xffff
        crc      = core_bench_list(res, 1);
    16b8:	0001                	nop
    16ba:	7c01                	lui	s8,0xfffe0
    16bc:	0d01                	addi	s10,s10,0
    16be:	0002                	c.slli64	zero
    16c0:	000c                	0xc
    16c2:	0000                	unimp
    16c4:	16b0                	addi	a2,sp,872
    16c6:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
    16c8:	9a18                	0x9a18
    16ca:	0000                	unimp
    16cc:	0004                	0x4
    16ce:	0000                	unimp
    16d0:	000c                	0xc
    16d2:	0000                	unimp
    16d4:	16b0                	addi	a2,sp,872
    16d6:	0000                	unimp
        crc      = core_bench_list(res, -1);
    16d8:	9a1c                	0x9a1c
    16da:	0000                	unimp
    16dc:	0004                	0x4
    16de:	0000                	unimp
    16e0:	000c                	0xc
    16e2:	0000                	unimp
    16e4:	ffff                	0xffff
    16e6:	ffff                	0xffff
        res->crc = crcu16(crc, res->crc);
    16e8:	0001                	nop
    16ea:	7c01                	lui	s8,0xfffe0
    16ec:	0d01                	addi	s10,s10,0
    16ee:	0002                	c.slli64	zero
    16f0:	001c                	0x1c
    16f2:	0000                	unimp
    16f4:	16e0                	addi	s0,sp,876
    16f6:	0000                	unimp
        if (i == 0)
    16f8:	9a20                	0x9a20
    16fa:	0000                	unimp
    for (i = 0; i < iterations; i++)
    16fc:	0058                	addi	a4,sp,4
    16fe:	0000                	unimp
    1700:	0e44                	addi	s1,sp,788
    1702:	4410                	lw	a2,8(s0)
}
    1704:	0288                	addi	a0,sp,320
    1706:	815c                	0x815c
    1708:	6801                	0x6801
    170a:	44c1                	li	s1,16
    170c:	44c8                	lw	a0,12(s1)
    170e:	000e                	c.slli	zero,0x3
    1710:	000c                	0xc
    1712:	0000                	unimp
    1714:	ffff                	0xffff
    1716:	ffff                	0xffff
    1718:	0001                	nop
    171a:	7c01                	lui	s8,0xfffe0
    171c:	0d01                	addi	s10,s10,0
    171e:	0002                	c.slli64	zero
            res->crclist = res->crc;
    1720:	0020                	addi	s0,sp,8
    1722:	0000                	unimp
    for (i = 0; i < iterations; i++)
    1724:	1710                	addi	a2,sp,928
	...
    172e:	0000                	unimp
    1730:	0e44                	addi	s1,sp,788
    1732:	4410                	lw	a2,8(s0)
{
    1734:	0288                	addi	a0,sp,320
    1736:	8950                	0x8950
    1738:	40018103          	lb	sp,1024(gp) # 1001830 <__global_pointer$+0x400>
    173c:	44c8                	lw	a0,12(s1)
    173e:	48c1                	li	a7,16
    MATDAT clipval = matrix_big(val);
    1740:	44c9                	li	s1,18
    1742:	000e                	c.slli	zero,0x3
{
    1744:	003c                	addi	a5,sp,8
    1746:	0000                	unimp
    1748:	1710                	addi	a2,sp,928
	...
    1752:	0000                	unimp
    1754:	0e40                	addi	s0,sp,788
    1756:	5420                	lw	s0,104(s0)
    1758:	0288                	addi	a0,sp,320
    175a:	0181                	addi	gp,gp,0
    175c:	0389                	addi	t2,t2,2
    175e:	0492                	slli	s1,s1,0x4
    1760:	00020593          	mv	a1,tp
    1764:	c80a                	sw	sp,16(sp)
    1766:	c144                	sw	s1,4(a0)
    1768:	c944                	sw	s1,20(a0)
    176a:	d244                	sw	s1,36(a2)
    176c:	d344                	sw	s1,36(a4)
    176e:	0e44                	addi	s1,sp,788
    1770:	4000                	lw	s0,0(s0)
    1772:	c100020b          	0xc100020b
    1776:	c844                	sw	s1,20(s0)
    1778:	c944                	sw	s1,20(a0)
    177a:	d244                	sw	s1,36(a2)
    MATDAT clipval = matrix_big(val);
    177c:	d344                	sw	s1,36(a4)
    177e:	0e44                	addi	s1,sp,788
    for (i = 0; i < N; i++)
    1780:	0000                	unimp
    1782:	0000                	unimp
    1784:	000c                	0xc
    1786:	0000                	unimp
    1788:	ffff                	0xffff
    178a:	ffff                	0xffff
    178c:	0001                	nop
    178e:	7c01                	lui	s8,0xfffe0
    1790:	0d01                	addi	s10,s10,0
    1792:	0002                	c.slli64	zero
    1794:	000c                	0xc
    1796:	0000                	unimp
    1798:	1784                	addi	s1,sp,992
	...
    17a2:	0000                	unimp
    17a4:	000c                	0xc
    17a6:	0000                	unimp
    17a8:	1784                	addi	s1,sp,992
    17aa:	0000                	unimp
    17ac:	9a78                	0x9a78
    17ae:	0000                	unimp
    17b0:	0030                	addi	a2,sp,8
    17b2:	0000                	unimp
    17b4:	000c                	0xc
    17b6:	0000                	unimp
    17b8:	ffff                	0xffff
    17ba:	ffff                	0xffff
{
    17bc:	0001                	nop
    17be:	7c01                	lui	s8,0xfffe0
            A[i * N + j] += val;
    17c0:	0d01                	addi	s10,s10,0
    17c2:	0002                	c.slli64	zero
    17c4:	0030                	addi	a2,sp,8
    17c6:	0000                	unimp
    17c8:	17b4                	addi	a3,sp,1000
    17ca:	0000                	unimp
    17cc:	9aa8                	0x9aa8
    17ce:	0000                	unimp
        for (j = 0; j < N; j++)
    17d0:	088c                	addi	a1,sp,80
    17d2:	0000                	unimp
    for (i = 0; i < N; i++)
    17d4:	0e48                	addi	a0,sp,788
    17d6:	5020                	lw	s0,96(s0)
    17d8:	0389                	addi	t2,t2,2
    17da:	9370                	0x9370
    17dc:	8105                	srli	a0,a0,0x1
    17de:	8801                	andi	s0,s0,0
    17e0:	9202                	jalr	tp
    17e2:	0304                	addi	s1,sp,384
    17e4:	0164                	addi	s1,sp,140
    17e6:	c10a                	sw	sp,128(sp)
    17e8:	c844                	sw	s1,20(s0)
    17ea:	c954                	sw	a3,20(a0)
    17ec:	d244                	sw	s1,36(a2)
    17ee:	d344                	sw	s1,36(a4)
    17f0:	0e4c                	addi	a1,sp,788
    17f2:	4400                	lw	s0,8(s0)
    17f4:	0000000b          	0xb
    17f8:	000c                	0xc
    17fa:	0000                	unimp
    17fc:	ffff                	0xffff
    17fe:	ffff                	0xffff
    1800:	0001                	nop
    1802:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < N; i++)
    1804:	0d01                	addi	s10,s10,0
    1806:	0002                	c.slli64	zero
    1808:	000c                	0xc
    180a:	0000                	unimp
    180c:	17f8                	addi	a4,sp,1004
    180e:	0000                	unimp
    for (i = 0; i < N; i++)
    1810:	a334                	fsd	fa3,64(a4)
    1812:	0000                	unimp
    1814:	008c                	addi	a1,sp,64
    1816:	0000                	unimp
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    1818:	000c                	0xc
    181a:	0000                	unimp
    181c:	ffff                	0xffff
    181e:	ffff                	0xffff
    1820:	0001                	nop
    1822:	7c01                	lui	s8,0xfffe0
    1824:	0d01                	addi	s10,s10,0
    1826:	0002                	c.slli64	zero
    1828:	0030                	addi	a2,sp,8
    182a:	0000                	unimp
    182c:	1818                	addi	a4,sp,48
    182e:	0000                	unimp
    1830:	a3c0                	fsd	fs0,128(a5)
    1832:	0000                	unimp
        for (j = 0; j < N; j++)
    1834:	0884                	addi	s1,sp,80
    1836:	0000                	unimp
    1838:	0e4c                	addi	a1,sp,788
    183a:	5c20                	lw	s0,120(s0)
    for (i = 0; i < N; i++)
    183c:	0288                	addi	a0,sp,320
    183e:	0389                	addi	t2,t2,2
    1840:	8158                	0x8158
    1842:	9201                	srli	a2,a2,0x20
    1844:	9304                	0x9304
    1846:	0305                	addi	t1,t1,1
    1848:	0184                	addi	s1,sp,192
    184a:	c10a                	sw	sp,128(sp)
    184c:	c844                	sw	s1,20(s0)
    184e:	c944                	sw	s1,20(a0)
    1850:	d244                	sw	s1,36(a2)
    1852:	d344                	sw	s1,36(a4)
    1854:	0e4c                	addi	a1,sp,788
    1856:	4400                	lw	s0,8(s0)
    1858:	0000000b          	0xb
    185c:	000c                	0xc
    185e:	0000                	unimp
    1860:	ffff                	0xffff
    1862:	ffff                	0xffff
    ee_s16 ret = 0;
    1864:	0001                	nop
    1866:	7c01                	lui	s8,0xfffe0
    MATRES tmp = 0, prev = 0, cur = 0;
    1868:	0d01                	addi	s10,s10,0
    186a:	0002                	c.slli64	zero
    186c:	000c                	0xc
    186e:	0000                	unimp
    1870:	185c                	addi	a5,sp,52
    1872:	0000                	unimp
    for (i = 0; i < N; i++)
    1874:	ac44                	fsd	fs1,152(s0)
    1876:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1878:	0054                	addi	a3,sp,4
    187a:	0000                	unimp
    for (i = 0; i < N; i++)
    187c:	000c                	0xc
    187e:	0000                	unimp
    1880:	ffff                	0xffff
    1882:	ffff                	0xffff
    1884:	0001                	nop
    1886:	7c01                	lui	s8,0xfffe0
    1888:	0d01                	addi	s10,s10,0
    188a:	0002                	c.slli64	zero
    188c:	000c                	0xc
    188e:	0000                	unimp
    1890:	187c                	addi	a5,sp,60
    1892:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1894:	ac98                	fsd	fa4,24(s1)
    1896:	0000                	unimp
    1898:	0084                	addi	s1,sp,64
    189a:	0000                	unimp
    189c:	000c                	0xc
    189e:	0000                	unimp
            cur = C[i * N + j];
    18a0:	ffff                	0xffff
    18a2:	ffff                	0xffff
        for (j = 0; j < N; j++)
    18a4:	0001                	nop
    18a6:	7c01                	lui	s8,0xfffe0
            cur = C[i * N + j];
    18a8:	0d01                	addi	s10,s10,0
    18aa:	0002                	c.slli64	zero
            tmp += cur;
    18ac:	0024                	addi	s1,sp,8
    18ae:	0000                	unimp
    18b0:	189c                	addi	a5,sp,112
    18b2:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    18b4:	ad1c                	fsd	fa5,24(a0)
    18b6:	0000                	unimp
            tmp += cur;
    18b8:	00c4                	addi	s1,sp,68
    18ba:	0000                	unimp
                ret += 10;
    18bc:	0e44                	addi	s1,sp,788
    18be:	4c10                	lw	a2,24(s0)
                ret += (cur > prev) ? 1 : 0;
    18c0:	0181                	addi	gp,gp,0
    18c2:	0288                	addi	a0,sp,320
            if (tmp > clipval)
    18c4:	0389                	addi	t2,t2,2
    18c6:	8402                	jr	s0
                ret += 10;
    18c8:	c10a                	sw	sp,128(sp)
    18ca:	c844                	sw	s1,20(s0)
    18cc:	c94c                	sw	a1,20(a0)
    18ce:	0e44                	addi	s1,sp,788
    18d0:	4400                	lw	s0,8(s0)
    18d2:	000c000b          	0xc000b
                tmp = 0;
    18d6:	0000                	unimp
            cur = C[i * N + j];
    18d8:	ffff                	0xffff
    18da:	ffff                	0xffff
        for (j = 0; j < N; j++)
    18dc:	0001                	nop
    18de:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < N; i++)
    18e0:	0d01                	addi	s10,s10,0
    18e2:	0002                	c.slli64	zero
    18e4:	0018                	0x18
    18e6:	0000                	unimp
    18e8:	18d4                	addi	a3,sp,116
    18ea:	0000                	unimp
    18ec:	ade0                	fsd	fs0,216(a1)
    18ee:	0000                	unimp
    18f0:	02f0                	addi	a2,sp,332
    18f2:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    18f4:	0e78                	addi	a4,sp,796
    18f6:	0210                	addi	a2,sp,256
    18f8:	0a80                	addi	s0,sp,336
    18fa:	000e                	c.slli	zero,0x3
    18fc:	0b44                	addi	s1,sp,404
    18fe:	0000                	unimp
    1900:	000c                	0xc
    1902:	0000                	unimp
    1904:	ffff                	0xffff
    1906:	ffff                	0xffff
    1908:	0001                	nop
    190a:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < N; i++)
    190c:	0d01                	addi	s10,s10,0
    190e:	0002                	c.slli64	zero
    1910:	000c                	0xc
    1912:	0000                	unimp
    1914:	1900                	addi	s0,sp,176
    1916:	0000                	unimp
    1918:	b0d0                	fsd	fa2,160(s1)
    191a:	0000                	unimp
    191c:	0014                	0x14
    191e:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1920:	000c                	0xc
    1922:	0000                	unimp
    1924:	ffff                	0xffff
    1926:	ffff                	0xffff
    1928:	0001                	nop
    192a:	7c01                	lui	s8,0xfffe0
    192c:	0d01                	addi	s10,s10,0
    192e:	0002                	c.slli64	zero
    1930:	000c                	0xc
    1932:	0000                	unimp
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    1934:	1920                	addi	s0,sp,184
    1936:	0000                	unimp
    1938:	b0e4                	fsd	fs1,224(s1)
    193a:	0000                	unimp
    193c:	0014                	0x14
    193e:	0000                	unimp
    1940:	000c                	0xc
    1942:	0000                	unimp
    1944:	ffff                	0xffff
    1946:	ffff                	0xffff
    1948:	0001                	nop
    194a:	7c01                	lui	s8,0xfffe0
    194c:	0d01                	addi	s10,s10,0
    194e:	0002                	c.slli64	zero
        for (j = 0; j < N; j++)
    1950:	000c                	0xc
    1952:	0000                	unimp
    1954:	1940                	addi	s0,sp,180
    1956:	0000                	unimp
    1958:	b0f8                	fsd	fa4,224(s1)
    195a:	0000                	unimp
    195c:	0014                	0x14
    195e:	0000                	unimp
    for (i = 0; i < N; i++)
    1960:	000c                	0xc
    1962:	0000                	unimp
    1964:	ffff                	0xffff
    1966:	ffff                	0xffff
    ee_s16 ret = 0;
    1968:	0001                	nop
    196a:	7c01                	lui	s8,0xfffe0
    MATRES tmp = 0, prev = 0, cur = 0;
    196c:	0d01                	addi	s10,s10,0
    196e:	0002                	c.slli64	zero
    1970:	000c                	0xc
    1972:	0000                	unimp
    for (i = 0; i < N; i++)
    1974:	1960                	addi	s0,sp,188
    1976:	0000                	unimp
    1978:	b10c                	fsd	fa1,32(a0)
    197a:	0000                	unimp
        for (j = 0; j < N; j++)
    197c:	0014                	0x14
    197e:	0000                	unimp
    1980:	000c                	0xc
    1982:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1984:	ffff                	0xffff
    1986:	ffff                	0xffff
        for (j = 0; j < N; j++)
    1988:	0001                	nop
    198a:	7c01                	lui	s8,0xfffe0
                ret += (cur > prev) ? 1 : 0;
    198c:	0d01                	addi	s10,s10,0
    198e:	0002                	c.slli64	zero
            prev = cur;
    1990:	000c                	0xc
    1992:	0000                	unimp
            cur = C[i * N + j];
    1994:	1980                	addi	s0,sp,240
    1996:	0000                	unimp
        for (j = 0; j < N; j++)
    1998:	b120                	fsd	fs0,96(a0)
    199a:	0000                	unimp
            cur = C[i * N + j];
    199c:	0014                	0x14
    199e:	0000                	unimp
            tmp += cur;
    19a0:	000c                	0xc
    19a2:	0000                	unimp
    19a4:	ffff                	0xffff
    19a6:	ffff                	0xffff
                ret += (cur > prev) ? 1 : 0;
    19a8:	0001                	nop
    19aa:	7c01                	lui	s8,0xfffe0
            tmp += cur;
    19ac:	0d01                	addi	s10,s10,0
    19ae:	0002                	c.slli64	zero
                ret += 10;
    19b0:	000c                	0xc
    19b2:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    19b4:	19a0                	addi	s0,sp,248
    19b6:	0000                	unimp
            if (tmp > clipval)
    19b8:	b134                	fsd	fa3,96(a0)
    19ba:	0000                	unimp
                ret += 10;
    19bc:	0040                	addi	s0,sp,4
	...

Disassembly of section .stab:

00000000 <.stab>:
	la gp, __global_pointer$
   0:	0001                	nop
   2:	0000                	unimp
   4:	0000                	unimp
   6:	000a                	c.slli	zero,0x2
	la sp, _sp
   8:	00000117          	auipc	sp,0x0
   c:	0009                	c.nop	2
   e:	0000                	unimp
	la a0, _data_lma 
  10:	001e                	c.slli	zero,0x7
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
	la a1, _data
  18:	0038                	addi	a4,sp,8
  1a:	0000                	unimp
  1c:	0001                	nop
  1e:	0000                	unimp
	la a2, _edata
  20:	0000                	unimp
  22:	0000                	unimp
  24:	0000003f 0000001e 	0x1e0000003f
	lw t0, (a0)
  2c:	0000                	unimp
  2e:	0000                	unimp
	sw t0, (a1)
  30:	006e                	c.slli	zero,0x1b
  32:	0000                	unimp
	lw t1, (a1)
  34:	0001                	nop
  36:	0000                	unimp
	addi a0, a0, 4
  38:	0000                	unimp
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	0075                	c.nop	29
  3e:	0000                	unimp
	bltu a1, a2, 1b
  40:	001e                	c.slli	zero,0x7
  42:	0000                	unimp
	la a0, __bss_start
  44:	0000                	unimp
  46:	0000                	unimp
  48:	00a5                	addi	ra,ra,9
  4a:	0000                	unimp
	la a1, _end
  4c:	0001                	nop
  4e:	0000                	unimp
  50:	0000                	unimp
  52:	0000                	unimp
	bgeu a0, a1, 2f
  54:	00ad                	addi	ra,ra,11
  56:	0000                	unimp
	sw zero, (a0)
  58:	001e                	c.slli	zero,0x7
  5a:	0000                	unimp
	addi a0, a0, 4
  5c:	0000                	unimp
  5e:	0000                	unimp
	bltu a0, a1, 1b
  60:	00dc                	addi	a5,sp,68
  62:	0000                	unimp
    li x31,0xa0
  64:	0001                	nop
  66:	0000                	unimp
    call main
  68:	0000                	unimp
  6a:	0000                	unimp
  6c:	000000e3          	beqz	zero,86c <main+0x7f0>
    li x31,0xaa
  70:	001e                	c.slli	zero,0x7
  72:	0000                	unimp
	li tp,0xee
  74:	0000                	unimp
  76:	0000                	unimp
    j loop
  78:	0111                	addi	sp,sp,4
  7a:	0000                	unimp
{
  7c:	0001                	nop
  7e:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  80:	0000                	unimp
	...

Disassembly of section .stabstr:

00000000 <.stabstr>:
	la gp, __global_pointer$
   0:	6300                	flw	fs0,0(a4)
   2:	6f6c                	flw	fa1,92(a4)
   4:	632e6573          	csrrsi	a0,0x632,28
	la sp, _sp
   8:	5f00                	lw	s0,56(a4)
   a:	736f6c63          	bltu	t5,s6,742 <main+0x6c6>
   e:	2065                	jal	b6 <main+0x3a>
	la a0, _data_lma 
  10:	7369                	lui	t1,0xffffa
  12:	6e20                	flw	fs0,88(a2)
  14:	6920746f          	jal	s0,76a6 <_dtoa_r+0x10ba>
	la a1, _data
  18:	706d                	c.lui	zero,0xffffb
  1a:	656c                	flw	fa1,76(a0)
  1c:	656d                	lui	a0,0x1b
  1e:	746e                	flw	fs0,248(sp)
	la a2, _edata
  20:	6465                	lui	s0,0x19
  22:	6120                	flw	fs0,64(a0)
  24:	646e                	flw	fs0,216(sp)
  26:	7720                	flw	fs0,104(a4)
	bgeu a1, a2, 2f
  28:	6c69                	lui	s8,0x1a
  2a:	206c                	fld	fa1,192(s0)
	lw t0, (a0)
  2c:	6c61                	lui	s8,0x18
  2e:	73796177          	0x73796177
	sw t0, (a1)
  32:	6620                	flw	fs0,72(a2)
	lw t1, (a1)
  34:	6961                	lui	s2,0x18
  36:	006c                	addi	a1,sp,12
	addi a0, a0, 4
  38:	635f 6f6c 6573      	0x65736f6c635f
	addi a1, a1, 4
  3e:	5f00                	lw	s0,56(a4)
	bltu a1, a2, 1b
  40:	7366                	flw	ft6,120(sp)
  42:	6174                	flw	fa3,68(a0)
	la a0, __bss_start
  44:	2074                	fld	fa3,192(s0)
  46:	7369                	lui	t1,0xffffa
  48:	6e20                	flw	fs0,88(a2)
  4a:	6920746f          	jal	s0,76dc <_dtoa_r+0x10f0>
	la a1, _end
  4e:	706d                	c.lui	zero,0xffffb
  50:	656c                	flw	fa1,76(a0)
  52:	656d                	lui	a0,0x1b
	bgeu a0, a1, 2f
  54:	746e                	flw	fs0,248(sp)
  56:	6465                	lui	s0,0x19
	sw zero, (a0)
  58:	6120                	flw	fs0,64(a0)
  5a:	646e                	flw	fs0,216(sp)
	addi a0, a0, 4
  5c:	7720                	flw	fs0,104(a4)
  5e:	6c69                	lui	s8,0x1a
	bltu a0, a1, 1b
  60:	206c                	fld	fa1,192(s0)
  62:	6c61                	lui	s8,0x18
    li x31,0xa0
  64:	73796177          	0x73796177
    call main
  68:	6620                	flw	fs0,72(a2)
  6a:	6961                	lui	s2,0x18
  6c:	006c                	addi	a1,sp,12
  6e:	665f 7473 7461      	0x74617473665f
	li tp,0xee
  74:	5f00                	lw	s0,56(a4)
  76:	7369                	lui	t1,0xffffa
    j loop
  78:	7461                	lui	s0,0xffff8
  7a:	7974                	flw	fa3,116(a0)
{
  7c:	6920                	flw	fs0,80(a0)
  7e:	6f6e2073          	csrs	0x6f6,t3
    portable_init(&(results[0].port), &argc, argv);
  82:	2074                	fld	fa3,192(s0)
{
  84:	6d69                	lui	s10,0x1a
  86:	6c70                	flw	fa2,92(s0)
  88:	6d65                	lui	s10,0x19
  8a:	6e65                	lui	t3,0x19
  8c:	6574                	flw	fa3,76(a0)
  8e:	2064                	fld	fs1,192(s0)
  90:	6e61                	lui	t3,0x18
  92:	2064                	fld	fs1,192(s0)
  94:	6c6c6977          	0x6c6c6977
  98:	6120                	flw	fs0,64(a0)
  9a:	776c                	flw	fa1,108(a4)
  9c:	7961                	lui	s2,0xffff8
  9e:	61662073          	csrs	0x616,a2
  a2:	6c69                	lui	s8,0x1a
  a4:	5f00                	lw	s0,56(a4)
  a6:	7369                	lui	t1,0xffffa
  a8:	7461                	lui	s0,0xffff8
  aa:	7974                	flw	fa3,116(a0)
  ac:	5f00                	lw	s0,56(a4)
  ae:	736c                	flw	fa1,100(a4)
  b0:	6565                	lui	a0,0x19
  b2:	7369206b          	0x7369206b
  b6:	6e20                	flw	fs0,88(a2)
  b8:	6920746f          	jal	s0,774a <_dtoa_r+0x115e>
  bc:	706d                	c.lui	zero,0xffffb
  be:	656c                	flw	fa1,76(a0)
    portable_init(&(results[0].port), &argc, argv);
  c0:	656d                	lui	a0,0x1b
  c2:	746e                	flw	fs0,248(sp)
  c4:	6465                	lui	s0,0x19
  c6:	6120                	flw	fs0,64(a0)
  c8:	646e                	flw	fs0,216(sp)
  ca:	7720                	flw	fs0,104(a4)
  cc:	6c69                	lui	s8,0x1a
  ce:	206c                	fld	fa1,192(s0)
{
  d0:	6c61                	lui	s8,0x18
  d2:	73796177          	0x73796177
    portable_init(&(results[0].port), &argc, argv);
  d6:	6620                	flw	fs0,72(a2)
  d8:	6961                	lui	s2,0x18
  da:	006c                	addi	a1,sp,12
  dc:	6c5f 6573 6b65      	0x6b6565736c5f
  e2:	5f00                	lw	s0,56(a4)
    printf("start test1\n");
  e4:	6572                	flw	fa0,28(sp)
  e6:	6461                	lui	s0,0x18
  e8:	6920                	flw	fs0,80(a0)
  ea:	6f6e2073          	csrs	0x6f6,t3
  ee:	2074                	fld	fa3,192(s0)
  f0:	6d69                	lui	s10,0x1a
  f2:	6c70                	flw	fa2,92(s0)
    results[0].seed1      = get_seed(1);
  f4:	6d65                	lui	s10,0x19
  f6:	6e65                	lui	t3,0x19
  f8:	6574                	flw	fa3,76(a0)
  fa:	2064                	fld	fs1,192(s0)
  fc:	6e61                	lui	t3,0x18
  fe:	2064                	fld	fs1,192(s0)
 100:	6c6c6977          	0x6c6c6977
    results[0].seed2      = get_seed(2);
 104:	6120                	flw	fs0,64(a0)
 106:	776c                	flw	fa1,108(a4)
 108:	7961                	lui	s2,0xffff8
 10a:	61662073          	csrs	0x616,a2
 10e:	6c69                	lui	s8,0x1a
 110:	5f00                	lw	s0,56(a4)
 112:	6572                	flw	fa0,28(sp)
    results[0].seed3      = get_seed(3);
 114:	6461                	lui	s0,0x18
	...
